Timeout in resolving values
Timeout in running neo4j query
Running Main.py on fourth-estate-newswire-publisher

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.423342.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.170555.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 2 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.356791.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 1 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.678415.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 774 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:01.363371.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 0 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.604556.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.109798.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 175 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:03.210229.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 3619
Added 2667 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 3619
Added 0 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.354557.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/fourth-estate-newswire-publisher/newswirePublisher.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/fourth-estate-newswire-publisher/settings.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/fourth-estate-newswire-publisher/admin/admin.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/fourth-estate-newswire-publisher/front/front.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/fourth-estate-newswire-publisher/front/wrapper.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.627800.

2 PHP_REACHES edges created
1 REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
3616 PHP_REACHES edges created
3619 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 1270 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.124708.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:01.107360.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 31 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:01.923924.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 9 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.167861.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.123332.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.351118.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.012070.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.041508.

40 PHP_REACHES edges created
40 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 31 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.117357.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
8 SQL operations to process.
CREATE TABLE $wpdbNWPWP_DB_TABLE_SYNC_POST (
		id bigint(20) NOT NULL AUTO_INCREMENT,
    post_id bigint(20) NOT NULL,
		guid text NOT NULL,
    time datetime DEFAULT '0000-00-00 00:00:00' NOT NULL,
		PRIMARY KEY  (id)
	) $wpdb->get_charset_collate();
SQL command (CREATE TABLE $wpdbNWPWP_DB_TABLE_SYNC_POST ( id bigint(20) NOT NULL AUTO_INCREMENT, post_id bigint(20) NOT NULL, guid text NOT NULL, time datetime DEFAULT '0000-00-00 00:00:00' NOT NULL, PRIMARY KEY (id) ) $wpdb->get_charset_collate();) cannot be parsed correct.
SELECT post_id FROM $wpdbNWPWP_DB_TABLE_SYNC_POST WHERE guid = 'wp_strip_all_tags($obj["evolvedfrom"])'
SQL command (SELECT post_id FROM $wpdbNWPWP_DB_TABLE_SYNC_POST WHERE guid = 'wp_strip_all_tags($obj["evolvedfrom"])') cannot be parsed correct.
SELECT terms.term_id, term_taxonomy.term_taxonomy_id FROM $wpdbterms terms JOIN $wpdbterm_taxonomy term_taxonomy ON term_taxonomy.term_id = terms.term_id WHERE term_taxonomy.taxonomy = 'category' AND terms.name = 'wp_strip_all_tags($subject["name"])'
SQL command (SELECT terms.term_id, term_taxonomy.term_taxonomy_id FROM $wpdbterms terms JOIN $wpdbterm_taxonomy term_taxonomy ON term_taxonomy.term_id = terms.term_id WHERE term_taxonomy.taxonomy = 'category' AND terms.name = 'wp_strip_all_tags($subject["name"])') cannot be parsed correct.
SELECT terms.term_id, term_taxonomy.term_taxonomy_id FROM $wpdbterms terms JOIN $wpdbterm_taxonomy term_taxonomy ON term_taxonomy.term_id = terms.term_id WHERE term_taxonomy.taxonomy = 'category' AND terms.name = 'wp_strip_all_tags($service["name"])'
SQL command (SELECT terms.term_id, term_taxonomy.term_taxonomy_id FROM $wpdbterms terms JOIN $wpdbterm_taxonomy term_taxonomy ON term_taxonomy.term_id = terms.term_id WHERE term_taxonomy.taxonomy = 'category' AND terms.name = 'wp_strip_all_tags($service["name"])') cannot be parsed correct.
SELECT ID user_id FROM $wpdbNWPWP_DB_TABLE_USERS WHERE display_name = 'wp_strip_all_tags($author_name)'
SQL command (SELECT ID user_id FROM $wpdbNWPWP_DB_TABLE_USERS WHERE display_name = 'wp_strip_all_tags($author_name)') cannot be parsed correct.
SELECT meta_id, post_id FROM $wpdbpostmeta WHERE meta_key = '_wp_attached_file' AND meta_value LIKE '%wp_strip_all_tags($filename)'
SQL command (SELECT meta_id, post_id FROM $wpdbpostmeta WHERE meta_key = '_wp_attached_file' AND meta_value LIKE '%wp_strip_all_tags($filename)') cannot be parsed correct.
SELECT meta_id, post_id FROM $wpdbpostmeta WHERE meta_key = '_wp_attached_file' AND meta_value LIKE '%wp_strip_all_tags($filename)'
SQL command (SELECT meta_id, post_id FROM $wpdbpostmeta WHERE meta_key = '_wp_attached_file' AND meta_value LIKE '%wp_strip_all_tags($filename)') cannot be parsed correct.
SELECT post_id FROM $wpdbNWPWP_DB_TABLE_SYNC_POST WHERE guid = 'wp_strip_all_tags($obj["guid"])'
SQL command (SELECT post_id FROM $wpdbNWPWP_DB_TABLE_SYNC_POST WHERE guid = 'wp_strip_all_tags($obj["guid"])') cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [2197, 3785, 4236, 4330, 4508, 5168, 5304, 5395]
Added 0 SQL nodes. 0 out of 8 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:04.002314.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'get_site_url()'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'$value'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'$value'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'get_option("newswire_settings")_byline-words'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'$value'' cannot be parsed correct.
HTML code '$'{"url": "", "client_id": "", "username": "", "password": "", "status": "publish", "author": "", "author-byline": "", "byline-words": "", "display-copyright": "", "import-keywords": "", "convert-services": "", "subject-type": "", "category": "", "separator-caption-image": "", "copyrightholder-image": "", "copyrightnotice-image": "", "separator-located": "", "convert-slugline": "", "slugline-separator": "", "slugline-ignored": "", "priority_threshhold": "", "download-images": "", "post-formats": "", "24": ["post-formats-table"], "location-modifier": "standard", "update-log-option": "off", "update-log-date-format": "Y-m-d H:i", "update-log-text": "This article was updated at", "update-log-position": "off"}_separator-caption-image'' cannot be parsed correct.
HTML code '$'{"url": "", "client_id": "", "username": "", "password": "", "status": "publish", "author": "", "author-byline": "", "byline-words": "", "display-copyright": "", "import-keywords": "", "convert-services": "", "subject-type": "", "category": "", "separator-caption-image": "", "copyrightholder-image": "", "copyrightnotice-image": "", "separator-located": "", "convert-slugline": "", "slugline-separator": "", "slugline-ignored": "", "priority_threshhold": "", "download-images": "", "post-formats": "", "24": ["post-formats-table"], "location-modifier": "standard", "update-log-option": "off", "update-log-date-format": "Y-m-d H:i", "update-log-text": "This article was updated at", "update-log-position": "off"}_separator-located'' cannot be parsed correct.
HTML code '$'{"url": "sanitize_text_field($_POST[\"url\"])", "username": "sanitize_text_field($_POST[\"username\"])", "password": "sanitize_text_field($_POST[\"password\"])", "client_id": "sanitize_text_field($_POST[\"client_id\"])", "status": "sanitize_text_field($_POST[\"status\"])", "author": "sanitize_text_field($_POST[\"author\"])", "author-byline": "sanitize_text_field($_POST[\"author-byline\"])", "byline-words": "sanitize_text_field($_POST[\"byline-words\"])", "display-copyright": "sanitize_text_field($_POST[\"display-copyright\"])", "import-keywords": "sanitize_text_field($_POST[\"import-keywords\"])", "convert-services": "sanitize_text_field($_POST[\"convert-services\"])", "subject-type": "sanitize_text_field($_POST[\"subject-type\"])", "category": "nwpwp_cstm_sanitize_array($_POST[\"category\"])", "separator-caption-image": "sanitize_text_field($_POST[\"separator-caption-image\"])", "copyrightholder-image": "sanitize_text_field($_POST[\"copyrightholder-image\"])", "copyrightnotice-image": "sanitize_text_field($_POST[\"copyrightnotice-image\"])", "separator-located": "sanitize_text_field($_POST[\"separator-located\"])", "convert-slugline": "sanitize_text_field($_POST[\"convert-slugline\"])", "slugline-separator": "sanitize_text_field($_POST[\"slugline-separator\"])", "slugline-ignored": "sanitize_text_field($_POST[\"slugline-ignored\"])", "priority_threshhold": "sanitize_text_field($_POST[\"priority_threshhold\"])", "download-images": "sanitize_text_field($_POST[\"download-images\"])", "post-formats": "sanitize_text_field($_POST[\"download-images\"])", "post-formats-table": "$resultArray", "location-modifier": "sanitize_text_field($_POST[\"location-modifier\"])", "update-log-option": "sanitize_text_field($_POST[\"update-log-option\"])", "update-log-date-format": "sanitize_text_field($_POST[\"update-log-date-format\"])", "update-log-text": "sanitize_text_field($_POST[\"update-log-text\"])", "update-log-position": "sanitize_text_field($_POST[\"update-log-position\"])"}_slugline-separator'' cannot be parsed correct.
HTML code '$'get_option("newswire_settings")_slugline-ignored'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'get_site_url()'' cannot be parsed correct.
HTML code '$'get_option("newswire_settings")_update-log-date-format'' cannot be parsed correct.
HTML code '$'This article was updated atget_option("newswire_settings")_update-log-text'' cannot be parsed correct.
HTML code '$'date(!empty($settings["update-log-date-format"])$settings["update-log-date-format"]"Y-m-d H:i")'' cannot be parsed correct.
HTML code '$'nwpwp_make_table_row($value, $key, $post_formats)'' cannot be parsed correct.
HTML code '$'plugin_dir_url(dirname())assets/FourthEstate-logo-square.png'' cannot be parsed correct.
HTML code '$'json_encode($post_formats)'' cannot be parsed correct.
HTML code '$'$article'' cannot be parsed correct.
HTML code '$'$article'' cannot be parsed correct.
HTML code '$' checked'' cannot be parsed correct.
HTML code '$' selected'' cannot be parsed correct.
HTML code '$' checked'' cannot be parsed correct.
HTML code '$' checked'' cannot be parsed correct.
HTML code '$' checked'' cannot be parsed correct.
HTML code '$' checked'' cannot be parsed correct.
HTML code '$' checked'' cannot be parsed correct.
HTML code '$' checked'' cannot be parsed correct.
HTML code '$' checked'' cannot be parsed correct.
HTML code '$' checked'' cannot be parsed correct.
HTML code '$' selected'' cannot be parsed correct.
HTML code '$' checked'' cannot be parsed correct.
HTML code '$' checked'' cannot be parsed correct.
HTML code '$' checked'' cannot be parsed correct.
HTML code '$' checked'' cannot be parsed correct.
HTML code '$' checked'' cannot be parsed correct.
HTML code '$' checked'' cannot be parsed correct.
HTML code '$' checked'' cannot be parsed correct.
HTML code '$' checked'' cannot be parsed correct.
HTML code '$' selected'' cannot be parsed correct.
HTML code '$' checked'' cannot be parsed correct.
HTML code '$' checked'' cannot be parsed correct.
HTML code '$' checked'' cannot be parsed correct.
HTML code '$' checked'' cannot be parsed correct.
HTML code '$' checked'' cannot be parsed correct.
HTML code '$' checked'' cannot be parsed correct.
HTML code '$' checked'' cannot be parsed correct.
HTML code '$' checked'' cannot be parsed correct.
HTML code '$'</h2>
          '' cannot be parsed correct.
HTML code '$'Hi there!  I\'m just a simple plugin, not much I can do when called directly.'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:06.339031.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.050392.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 0 do_action/apply_filters calls and 8 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.539979.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbplusDetector
### Start running FrontBaseDetector
### Finish running DbaseDetector
### Start running HashDetector
### Finish running FirebirdInterBaseDetector
### Start running IBMDb2Detector
### Finish running FileProDetector
### Start running InformixDetector
### Finish running CubridDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running IBMDb2Detector
### Start running MsqlDetector
### Finish running MongoDetector
### Start running MySQLDetector
### Finish running MySQLDetector
### Start running MySQLiDetector
### Finish running MsqlDetector
### Start running Oci8Detector
### Finish running Oci8Detector
### Start running OpenSSLDetector
### Finish running MongoDbDetector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running PasswordHashingDetector
### Start running PhpCurlDetector
### Finish running HashDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running ArrayElementDetector
### Start running PHPRetrievalDetector
### Finish running OpenSSLDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PhpCurlDetector
### Start running PhpVarDetector
### Finish running PhpVarDetector
### Start running PostgreSQLDetector
### Finish running PHPIncludedDetector
### Start running PropertyDetector
### Finish running PostgreSQLDetector
### Start running Sqlite3Detector
### Finish running PropertyDetector
### Start running SqliteDetector
### Finish running maxdbDetector
### Start running SqlServerDetector
### Finish running Sqlite3Detector
### Start running SybaseDetector
### Finish running MySQLiDetector
### Start running TokyoTyrantDetector
### Finish running SqliteDetector
### Start running UserInputDetector
### Finish running SybaseDetector
### Start running VariableDetector
### Finish running TokyoTyrantDetector
### Start running WordpressHashingFnDetector
### Finish running PHPRetrievalDetector
### Start running WordPressRemoteDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRetrievalDetector
### Finish running SqlServerDetector
### Start running WordPressStorageDetector
### Finish running PHPStorageDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running VariableDetector
### Start running GenericEncryptionDetector
### Finish running UserInputDetector
### Start running DeletionDetector
### Finish running GenericEncryptionDetector
### Start running UninstallDetector
### Finish running GenericDatabaseUsageDetector
### Finish running WordPressRetrievalDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running WordPressRemoteDetector
### Finish running WordPressStorageDetector
### Finished running detectors
admin/admin.php:106
  - Request variable '$_POST["username"]' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta 

newswirePublisher.php:238
  - SHA1 called with parameters [src]. Ignore if [src] does not contain personal information. 

newswirePublisher.php:85
  - RETRIEVAL call to file_get_contents($from).
  - Data types: file
newswirePublisher.php:350
  - RETRIEVAL call to file_get_contents("php://input").
  - Data types: file 

newswirePublisher.php:86
  - STORAGE call to file_put_contents($to, $response).
  - Data types: file
newswirePublisher.php:355
  - STORAGE call to file_put_contents(NWPWP_PLUGIN_DIR . "/log/newswire.txt", $json . "

", FILE_APPEND).
  - Data types: file 

front/front.php:11
  - variable '$this_username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
front/front.php:12
  - variable '$this_password' of personal types {'password'} is found.
  - Data types: password
front/front.php:14
  - variable '$this_password' of personal types {'password'} is found.
  - Data types: password
front/front.php:14
  - variable '$this_username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta 

front/front.php:15
  - API call to wp_remote_post($this_url, ["method" => "POST", "headers" => [], "httpversion" => "1.0", "sslverify" => false, "body" => $fields]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
front/front.php:30
  - API call to wp_remote_post($newurl, ["method" => "POST", "headers" => $headers, "httpversion" => "1.0", "sslverify" => false, "body" => []]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote 

admin/admin.php:136
  - RETRIEVAL call to get_option("newswire_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/admin.php:137
  - RETRIEVAL call to get_option("newswire_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/admin.php:190
  - RETRIEVAL call to get_users() alters data types {'user', 'user_meta'}. Returns (array).
  - Data types: user, user_meta
front/front.php:6
  - RETRIEVAL call to get_option("newswire_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
newswirePublisher.php:61
  - RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).
newswirePublisher.php:209
  - RETRIEVAL call to get_option("newswire_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
newswirePublisher.php:362
  - RETRIEVAL call to get_option("newswire_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option 

admin/admin.php:135
  - STORAGE call to update_option("newswire_settings", $settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
newswirePublisher.php:63
  - STORAGE call to add_option("NWPWP_DATABASE_VERSION", NWPWP_DATABASE_VERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
newswirePublisher.php:134
  - STORAGE call to update_post_meta($attach_id, "_wp_attachment_image_alt", wp_slash($alt)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
newswirePublisher.php:184
  - STORAGE call to update_post_meta($attach_id, "_wp_attachment_image_alt", wp_slash($alt)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
newswirePublisher.php:494
  - STORAGE call to wp_insert_user($userArray) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
newswirePublisher.php:529
  - STORAGE call to wp_update_post($edit_post). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
newswirePublisher.php:565
  - STORAGE call to wp_insert_post($postarr, true). Passed arguments: 0: $postarr (array), 1: $wp_error (bool). Returns (int|WP_Error).
newswirePublisher.php:570
  - STORAGE call to wp_update_post($cstmupdate_post). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
newswirePublisher.php:644
  - STORAGE call to wp_update_post($edit_post). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error). 

newswirePublisher.php:534
  - DELETION call to wp_delete_attachment($attachmentExist) alters data types {'attachment_meta', 'attachment'}. Passed arguments: 0: $post_id (int). Returns (WP_Post|false|null).
  - Data types: attachment_meta, attachment 

By data type:
attachment
	DeletionDetector.wp_delete_attachment($attachmentExist) - {'attachment_meta', 'attachment'}
attachment_meta
	DeletionDetector.wp_delete_attachment($attachmentExist) - {'attachment_meta', 'attachment'}
file
	PHPRetrievalDetector.file_get_contents($from) - {'file'}
	PHPRetrievalDetector.file_get_contents("php://input") - {'file'}
	PHPStorageDetector.file_put_contents(NWPWP_PLUGIN_DIR . "/log/newswire.txt", $json . "

", FILE_APPEND) - {'file'}
	PHPStorageDetector.file_put_contents($to, $response) - {'file'}
none
	WordPressStorageDetector.wp_update_post($cstmupdate_post) - set()
	WordPressStorageDetector.wp_insert_post($postarr, true) - set()
	PHPIncludedDetector.(unknown) - set()
	WordPressStorageDetector.wp_update_post($edit_post) - set()
	WordPressStorageDetector.wp_update_post($edit_post) - set()
	WordPressRetrievalDetector.dbDelta($sql) - set()
option
	WordPressRetrievalDetector.get_option("newswire_settings") - {'option'}
	WordPressStorageDetector.update_option("newswire_settings", $settings) - {'option'}
	WordPressRetrievalDetector.get_option("newswire_settings") - {'option'}
	WordPressRetrievalDetector.get_option("newswire_settings") - {'option'}
	WordPressStorageDetector.add_option("NWPWP_DATABASE_VERSION", NWPWP_DATABASE_VERSION) - {'option'}
	WordPressRetrievalDetector.get_option("newswire_settings") - {'option'}
	WordPressRetrievalDetector.get_option("newswire_settings") - {'option'}
password
	VariableDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
post_meta
	WordPressStorageDetector.update_post_meta($attach_id, "_wp_attachment_image_alt", wp_slash($alt)) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($attach_id, "_wp_attachment_image_alt", wp_slash($alt)) - {'post_meta'}
remote
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
user
	WordPressRetrievalDetector.get_users() - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.wp_insert_user($userArray) - {'user', 'user_meta'}
	ArrayElementDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
user_meta
	WordPressRetrievalDetector.get_users() - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.wp_insert_user($userArray) - {'user', 'user_meta'}
	ArrayElementDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:10.661856.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 15 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.210110.

15 STORE_REACHES edges created
15 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 414 nodes as PERSONAL
In total, tainted 414 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 1 nodes as ENCRYPTED
In total, tainted 1 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:06.232932.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:00:48.785279!
Request variable '$_POST["username"]' of personal types {'user', 'user_meta'} is found.,,None
DELETION call to wp_delete_attachment($attachmentExist) alters data types {'attachment_meta', 'attachment'}. Passed arguments: 0: $post_id (int). Returns (WP_Post|false|null).,None,None
SHA1 called with parameters [src]. Ignore if [src] does not contain personal information.,sha1,None
RETRIEVAL call to file_get_contents("php://input").,None,None
RETRIEVAL call to file_get_contents($from).,None,None
STORAGE call to file_put_contents(NWPWP_PLUGIN_DIR . "/log/newswire.txt", $json . "

", FILE_APPEND).,None,None
STORAGE call to file_put_contents($to, $response).,None,None
variable '$this_username' of personal types {'user', 'user_meta'} is found.,,None
variable '$this_password' of personal types {'password'} is found.,,None
variable '$this_password' of personal types {'password'} is found.,,None
variable '$this_username' of personal types {'user', 'user_meta'} is found.,,None
API call to wp_remote_post($this_url, ["method" => "POST", "headers" => [], "httpversion" => "1.0", "sslverify" => false, "body" => $fields]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_post($newurl, ["method" => "POST", "headers" => $headers, "httpversion" => "1.0", "sslverify" => false, "body" => []]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
RETRIEVAL call to get_option("newswire_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("newswire_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_users() alters data types {'user', 'user_meta'}. Returns (array).,None,None
RETRIEVAL call to get_option("newswire_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("newswire_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("newswire_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
STORAGE call to update_option("newswire_settings", $settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($attach_id, "_wp_attachment_image_alt", wp_slash($alt)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($attach_id, "_wp_attachment_image_alt", wp_slash($alt)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_insert_user($userArray) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,None,None
STORAGE call to wp_update_post($edit_post). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to wp_insert_post($postarr, true). Passed arguments: 0: $postarr (array), 1: $wp_error (bool). Returns (int|WP_Error).,None,None
STORAGE call to wp_update_post($cstmupdate_post). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to add_option("NWPWP_DATABASE_VERSION", NWPWP_DATABASE_VERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to wp_update_post($edit_post). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] PII of types (['user', 'user_meta']) stored through WordPress function "wp_update_post($cstmupdate_post)", found in file newswirePublisher.php at line 570. 

[has_storage] PII of types (['user', 'user_meta']) stored through WordPress function "wp_insert_post($postarr, true)", found in file newswirePublisher.php at line 565. 

[has_storage] PII of types (['user', 'user_meta']) stored through WordPress function "update_option("newswire_settings", $settings)", found in file admin/admin.php at line 135. 

[has_storage] PII of types (['user', 'user_meta']) stored through WordPress function "wp_update_post($edit_post)", found in file newswirePublisher.php at line 529. 

[has_storage] PII of types (['user', 'user_meta']) stored through WordPress function "update_post_meta($attach_id, "_wp_attachment_image_alt", wp_slash($alt))", found in file newswirePublisher.php at line 184. 

[has_storage] WP User info of types (['user', 'user_meta']) stored through WordPress function "wp_insert_user($userArray)", found in file newswirePublisher.php at line 494. 

[has_storage] PII of types (['user', 'user_meta']) stored through WordPress function "update_post_meta($attach_id, "_wp_attachment_image_alt", wp_slash($alt))", found in file newswirePublisher.php at line 134. 

[has_storage] Storage check is WP 

[Art.17, Right to erasure] Wordpress storage of PII through wp_update_post($cstmupdate_post) does not have corresponding deletion method. Storage method found in file newswirePublisher.php at line 570. 

[Art.17, Right to erasure] Wordpress storage of PII through wp_insert_post($postarr, true) does not have corresponding deletion method. Storage method found in file newswirePublisher.php at line 565. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("newswire_settings", $settings) does not have corresponding deletion method. Storage method found in file admin/admin.php at line 135. 

[Art.17, Right to erasure] Wordpress storage of PII through wp_update_post($edit_post) does not have corresponding deletion method. Storage method found in file newswirePublisher.php at line 529. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($attach_id, "_wp_attachment_image_alt", wp_slash($alt)) does not have corresponding deletion method. Storage method found in file newswirePublisher.php at line 184. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($attach_id, "_wp_attachment_image_alt", wp_slash($alt)) does not have corresponding deletion method. Storage method found in file newswirePublisher.php at line 134. 

[Art.17, Right to erasure] Deletion access is NONE 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 4968. Found in file newswirePublisher.php at line 570 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 4945. Found in file newswirePublisher.php at line 565 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 699. Found in file admin/admin.php at line 135 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 4781. Found in file newswirePublisher.php at line 529 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 2883. Found in file newswirePublisher.php at line 184 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 2560. Found in file newswirePublisher.php at line 134 

[Art.15, Right to access] Data access is NONE_BUT_NOT_REQUIRED 

[third_party] Third party usage is NONE for data types [] 

[encryption] API call that sends PII to unknown url uses unknown protocol. PII is insecurely encrypted with []. Found in file front/front.php at line 15 

[encryption] API call that sends PII to unknown url uses unknown protocol. PII is insecurely encrypted with []. Found in file front/front.php at line 30 

[main] Applicable GDPR requirements: ['access', 'deletion', 'encryption', 'third_party'] 

[main] Is deletion in violation? True 

[main] Is access in violation? False 

[main] Is third_party in violation? False 

[main] Is encryption in violation? True 

[main] Complaint? False 


###########
### Q&A ###
###########

1. Why is my plugin in violation against GDPR?

GDPR (https://gdpr-info.eu/) aims to give citizens in the European Union (EU) control over their personal data. If a website collects or store user data, it is required to provide users functionalities to control their data, such as ones to erase or export their data. While a plugin do not directly interact with users, it may provide functionalities that collect or store personal data, which would make websites that deploy the plugin in violation against GDPR if the plugin does not provide corresponding functionalities to allow users control their personal data. Therefore, plugin developers are responsible to provide functions to manage the personal data they handle in accordance with GDPR. We list requirements by specific GDPR articles relevant to your plugin below.


[Art. 13, Information to be provided where personal data are collected from the data subject] If a plugin collects or handles personal data, it needs to provide privacy policy texts that explain what personal data is being collected and for what purpose. The texts are meant to be added to the privacy policy of the websites that deploy the plugin. 


            
[Art.17, Right to erasure] If a plugin stores personal data in a custom database they create or manage, or through Wordpress's native storage functions (e.g., update_user_meta), it needs to provide methods for users to erase the data upon request. Note that deleting data for all users upon uninstallation does not satisfy the requirement. 


            
        

2. How do I make my plugin compliant?

Please refer to the fix report below to see how you can make your plugin comply with GDPR.

        
