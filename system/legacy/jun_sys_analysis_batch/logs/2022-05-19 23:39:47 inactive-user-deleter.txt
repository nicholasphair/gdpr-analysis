Timeout in resolving values
Timeout in running neo4j query
Running Main.py on inactive-user-deleter

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.420733.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.139483.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 10 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.374412.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 0 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.427275.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 571 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:00.839015.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 19 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:01.181356.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
Added 2 PHP_REACHES edges.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.085341.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 218 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:03.136858.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 4169
Added 3349 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 4169
Added 0 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.350569.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/inactive-user-deleter/class.users.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/inactive-user-deleter/inactive-user-deleter.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/inactive-user-deleter/templates/about-page.tpl.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/inactive-user-deleter/templates/final_warning_before_delete.tpl.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/inactive-user-deleter/templates/header.tpl.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/inactive-user-deleter/templates/inform-form.tpl.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/inactive-user-deleter/templates/nav-menu.tpl.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/inactive-user-deleter/templates/trial-users-form.tpl.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/inactive-user-deleter/templates/user_filter.tpl.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/inactive-user-deleter/templates/users_list_csv.tpl.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/inactive-user-deleter/templates/users_list_html.tpl.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:01.035005.

581 PHP_REACHES edges created
16 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
3572 PHP_REACHES edges created
4169 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 1381 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.012781.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:01.382352.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 32 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:01.586253.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 38 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.151144.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.176225.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.415425.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.012123.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.041178.

70 PHP_REACHES edges created
70 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 39 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.108529.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
6 SQL operations to process.

        SELECT WP.ID
        FROM $wpdb WP
        INNER JOIN $wpdb WU ON WP.post_author = WU.ID
        WHERE NOT WP.post_type in ('attachment', 'revision') AND post_status = 'draft' 
          AND WU.ID IN (implode(",", $verifiedUserList))
SQL command ( SELECT WP.ID FROM $wpdb WP INNER JOIN $wpdb WU ON WP.post_author = WU.ID WHERE NOT WP.post_type in ('attachment', 'revision') AND post_status = 'draft' AND WU.ID IN (implode(",", $verifiedUserList))) cannot be parsed correct.

        SELECT WP.ID
        FROM $wpdb WP
        INNER JOIN $wpdb WU ON WP.post_author = WU.ID
        WHERE NOT WP.post_type in ('attachment', 'revision') AND post_status = 'publish' 
          AND WU.ID IN (implode(",", $verifiedUserList))
SQL command ( SELECT WP.ID FROM $wpdb WP INNER JOIN $wpdb WU ON WP.post_author = WU.ID WHERE NOT WP.post_type in ('attachment', 'revision') AND post_status = 'publish' AND WU.ID IN (implode(",", $verifiedUserList))) cannot be parsed correct.
SELECT COUNT(WC.comment_ID) as approved, WU.ID
      FROM $wpdbusers WU
      LEFT JOIN $wpdbcomments WC ON WC.user_id = WU.ID AND WC.comment_approved = 1
      WHERE
        (SELECT COUNT(*) FROM $wpdbposts PST
         WHERE PST.post_author = WU.ID AND PST.post_status = 'publish'
         AND NOT PST.post_type IN ('attachment', 'revision')) = 0
      GROUP BY WU.ID
      HAVING COUNT(WC.comment_ID) = 0 
SQL command (SELECT COUNT(WC.comment_ID) as approved, WU.ID FROM $wpdbusers WU LEFT JOIN $wpdbcomments WC ON WC.user_id = WU.ID AND WC.comment_approved = 1 WHERE (SELECT COUNT(*) FROM $wpdbposts PST WHERE PST.post_author = WU.ID AND PST.post_status = 'publish' AND NOT PST.post_type IN ('attachment', 'revision')) = 0 GROUP BY WU.ID HAVING COUNT(WC.comment_ID) = 0 ) cannot be parsed correct.

        SELECT SQL_CALC_FOUND_ROWS SUM(WC.comment_approved = 1) as approved, SUM(WC.comment_approved = 'spam') as spam,
          WU.ID, WU.user_login as login, WU.user_email as mail, WU.user_url as url, WU.user_registered as dt_reg, WU.display_name as name,
          WUMDIS.meta_value as disabled_time,
          WUCAP.meta_value as USL, MAX(UNIX_TIMESTAMP(WUM2.time_login)) as last_login, WUM21.meta_value as last_login_classipress, WUMD.meta_value as removetime
      implode(" ", $joins)
          WHERE (implode(") AND (", $conditions_sec2))
          GROUP BY implode(", ", $groupBy) HAVING implode(" AND ", $havings)
SQL command ( SELECT SQL_CALC_FOUND_ROWS SUM(WC.comment_approved = 1) as approved, SUM(WC.comment_approved = 'spam') as spam, WU.ID, WU.user_login as login, WU.user_email as mail, WU.user_url as url, WU.user_registered as dt_reg, WU.display_name as name, WUMDIS.meta_value as disabled_time, WUCAP.meta_value as USL, MAX(UNIX_TIMESTAMP(WUM2.time_login)) as last_login, WUM21.meta_value as last_login_classipress, WUMD.meta_value as removetime implode(" ", $joins) WHERE (implode(") AND (", $conditions_sec2)) GROUP BY implode(", ", $groupBy) HAVING implode(" AND ", $havings)) cannot be parsed correct.

        SELECT COUNT(WP.ID) as recs, WU.ID
        FROM $wpdb WP
        LEFT JOIN $wpdb WU ON WP.post_author = WU.ID
        WHERE 1 AND WU.user_registered < 'date("Y-m-d H:i:s", time() - $days * 86400)' 
          AND NOT WP.post_type in ('attachment', 'revision') AND post_status = 'publish'
        GROUP BY WU.ID
        HAVING COUNT(WP.ID) > 0
SQL command ( SELECT COUNT(WP.ID) as recs, WU.ID FROM $wpdb WP LEFT JOIN $wpdb WU ON WP.post_author = WU.ID WHERE 1 AND WU.user_registered < 'date("Y-m-d H:i:s", time() - $days * 86400)' AND NOT WP.post_type in ('attachment', 'revision') AND post_status = 'publish' GROUP BY WU.ID HAVING COUNT(WP.ID) > 0) cannot be parsed correct.
SELECT WU.ID, WU.user_login as login, WUM.meta_value as capabilities implode(" ", $joins)
          WHERE (implode(") AND (", $conditions)) ORDER BY WU.ID
SQL command (SELECT WU.ID, WU.user_login as login, WUM.meta_value as capabilities implode(" ", $joins) WHERE (implode(") AND (", $conditions)) ORDER BY WU.ID) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [215, 359, 446, 1363, 1450, 2155]
Added 0 SQL nodes. 0 out of 6 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:03.048861.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'<div style="padding: 20px; margin: 10px 0; font-weight: bold; background-color: #F0FFF0">Your confirmation code was already accepted.</div>'' cannot be parsed correct.
HTML code '$'<div style="padding: 20px; margin: 10px 0; font-weight: bold; background-color: #F0FFF0">Your confirmation code is accepted. Thank you for your confirmation!</div>'' cannot be parsed correct.
HTML code '$'<div style="padding: 20px; margin: 10px 0; font-weight: bold; background-color: #FFF0F0">Incorrect confirmation code!</div>'' cannot be parsed correct.
HTML code '$'I have done all work. Actually there is nothing to do. So I did nothing. :) Because you didn\'t select any user.'' cannot be parsed correct.
HTML code '$'Deleting...<br />'' cannot be parsed correct.
HTML code '$'Only users with the role - `administrator` have access to this report.'' cannot be parsed correct.
HTML code '$'Choose the criterias, then check the user\'s list that is will displayed. If this list will correct - hit the button &laquo;Kill them all&raquo;'' cannot be parsed correct.
HTML code '$'Disabling...<br />'' cannot be parsed correct.
HTML code '$'$result<br />'' cannot be parsed correct.
HTML code '$'0 user was disabled.'' cannot be parsed correct.
HTML code '$'0 users were disabled.'' cannot be parsed correct.
HTML code '$'Enabling accounts...<br />'' cannot be parsed correct.
HTML code '$'0 user was enabled.'' cannot be parsed correct.
HTML code '$'0 users were enabled.'' cannot be parsed correct.
HTML code '$'Turning posts into drafts...<br />'' cannot be parsed correct.
HTML code '$'$cnt_draft post was turned into draft.'' cannot be parsed correct.
HTML code '$'$cnt_draft posts were turned into draft'' cannot be parsed correct.
HTML code '$'Publishing posts...<br />'' cannot be parsed correct.
HTML code '$'$cnt_draft post has been published.'' cannot be parsed correct.
HTML code '$'$cnt_draft posts have been published'' cannot be parsed correct.
HTML code '$'$version'' cannot be parsed correct.
HTML code '$'Developer'' cannot be parsed correct.
HTML code '$'Plugin page'' cannot be parsed correct.
HTML code '$'$assetsDiryurbanator.jpg'' cannot be parsed correct.
HTML code '$'Enjoy, this plugin is free to use.<br /> But you can support author for futher development (actually, for some beer and nuts).'' cannot be parsed correct.
HTML code '$'$result<br />'' cannot be parsed correct.
HTML code '$'0 user was deleted.'' cannot be parsed correct.
HTML code '$'0 users were deleted.'' cannot be parsed correct.
HTML code '$'0 user was notified.'' cannot be parsed correct.
HTML code '$'0 users were notified.'' cannot be parsed correct.
HTML code '$'No real action were undertaken.'' cannot be parsed correct.
HTML code '$'<div class="section-title">Users list</div>'' cannot be parsed correct.
HTML code '$'<p><b>No users are found.</b></p>'' cannot be parsed correct.
HTML code '$'This is my last warning !'' cannot be parsed correct.
HTML code '$'$userCount'' cannot be parsed correct.
HTML code '$'Yes'' cannot be parsed correct.
HTML code '$'No, don\'t do it, please !'' cannot be parsed correct.
HTML code '$'Inactive users deleter tool'' cannot be parsed correct.
HTML code '$'When your project lives so long, site accumulates a lot of fake users (usually it is spammer\'s registrations). This tool will help you to clean this mess up'' cannot be parsed correct.
HTML code '$'You can do it manually (one by one) or automatically (be carefull with me, baby :))'' cannot be parsed correct.
HTML code '$'$OP_last-inform'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'Inform me about number of inactive users by email.'' cannot be parsed correct.
HTML code '$'nonetable-row'' cannot be parsed correct.
HTML code '$'Send report every'' cannot be parsed correct.
HTML code '$'$OP_informPeriod'' cannot be parsed correct.
HTML code '$'day(s)'' cannot be parsed correct.
HTML code '$'when inactive user number will be at least'' cannot be parsed correct.
HTML code '$'$OP_informUsersNumber'' cannot be parsed correct.
HTML code '$'I will use this email : <b>get_option("admin_email", "<a href=" . admin_url("options-general.php") . "">SETUP email value here</a")</b>.<br />'' cannot be parsed correct.
HTML code '$'Last report was sent'' cannot be parsed correct.
HTML code '$'neverdate("d/M/Y H:i", $OP["last-inform"]) GMT'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'Email before delete.'' cannot be parsed correct.
HTML code '$'nonetable-row'' cannot be parsed correct.
HTML code '$'I will send emails to users instead of instant account deleting. Mails will contain link to confirm user activity. Users with non-confirmed accounts will be deleted after specified period of time.'' cannot be parsed correct.
HTML code '$'Confirmation period'' cannot be parsed correct.
HTML code '$'$OP_confirmPeriod'' cannot be parsed correct.
HTML code '$'day(s)'' cannot be parsed correct.
HTML code '$'Letter of confirmation template'' cannot be parsed correct.
HTML code '$'htmlspecialchars($OP["confirmLetter"])'' cannot be parsed correct.
HTML code '$'Template variables:'' cannot be parsed correct.
HTML code '$'Save'' cannot be parsed correct.
HTML code '$'Find & Wipe'' cannot be parsed correct.
HTML code '$'Trial users'' cannot be parsed correct.
HTML code '$'Misc'' cannot be parsed correct.
HTML code '$'About plugin'' cannot be parsed correct.
HTML code '$'#misc-button'' cannot be parsed correct.
HTML code '$'The trail users deleter tool allows you to configure and to delete users with a specific role after given period of time since registration date.'' cannot be parsed correct.
HTML code '$'Select a trial user role from the list'' cannot be parsed correct.
HTML code '$'Not selected'' cannot be parsed correct.
HTML code '$'Administrator and Editor roles have been removed from the list for security reasons.'' cannot be parsed correct.
HTML code '$'Delete users with given role after'' cannot be parsed correct.
HTML code '$'$OP_trial-period'' cannot be parsed correct.
HTML code '$'day(s)'' cannot be parsed correct.
HTML code '$'Last check was performed:'' cannot be parsed correct.
HTML code '$'date("d/M/Y H:i", $lastCheck)never'' cannot be parsed correct.
HTML code '$'Save'' cannot be parsed correct.
HTML code '$'Flags'' cannot be parsed correct.
HTML code '$'_("Flags behavior. Add to list if ")'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'... all conditions are true : AND CASE'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'... any conditions are true : OR CASE'' cannot be parsed correct.
HTML code '$'_("User has ...")'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'No matter'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'No'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'Yes'' cannot be parsed correct.
HTML code '$'... approved comments.'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'No matter'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'No'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'Yes'' cannot be parsed correct.
HTML code '$'... spam comments.'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'No matter'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'No'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'Yes'' cannot be parsed correct.
HTML code '$'... (!Achtung) records or posts.'' cannot be parsed correct.
HTML code '$'I don`t care about attachments or revisions, and take in account only published articles.'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'No matter'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'No'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'Yes'' cannot be parsed correct.
HTML code '$'... <a href="https://wordpress.org/plugins/woocommerce/" target="_blank">woocommerce</a> anonymous orders.'' cannot be parsed correct.
HTML code '$'Sometimes users are too lazy to log-in to make order. But they provide a correct contact email in the order\'s details. We can conntect the profile and an anonymous orders by the email.'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'No matter'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'No'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'Yes'' cannot be parsed correct.
HTML code '$'... known date log-in.'' cannot be parsed correct.
HTML code '$'This flag adds users with known log-in date to list. Log-in date isn`t a native WP variable. So it will be collected while this module is activated or can be used data provided by one of the next plugins: 
      <a href="https://wordpress.org/plugins/wp-last-login/" target="_blank">WP Last Login</a>,
      <a href="https://wordpress.org/plugins/user-login-history/" target="_blank">User Login History</a>,
      <a href="https://wordpress.org/plugins/when-last-login/" target="_blank">When Last Login</a>,
      or Classipress usermeta data.'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'No matter'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'No'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'Yes'' cannot be parsed correct.
HTML code '$'... been disabled.'' cannot be parsed correct.
HTML code '$'This is not a native WP feature. Plugin can disable user account instead of deletion. Disabling feature works until you enable user or turn the plugin off.'' cannot be parsed correct.
HTML code '$'Filters'' cannot be parsed correct.
HTML code '$'User name'' cannot be parsed correct.
HTML code '$'htmlspecialchars($_POST["username"])'' cannot be parsed correct.
HTML code '$'To refine user\'s list by user login.'' cannot be parsed correct.
HTML code '$'User was created'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'more'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'less'' cannot be parsed correct.
HTML code '$'then'' cannot be parsed correct.
HTML code '$'intval($_POST["daysleft"])7'' cannot be parsed correct.
HTML code '$'days ago. Set number of days.'' cannot be parsed correct.
HTML code '$'User need a time to begin commenting, subscribing, posting... Check to show recently registered user.'' cannot be parsed correct.
HTML code '$'Last time when user was logged-in is more then'' cannot be parsed correct.
HTML code '$'days ago.'' cannot be parsed correct.
HTML code '$'User was active, but long time ago. Probably it\'s time to remove him from database?'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'User is SS2 subscriber.'' cannot be parsed correct.
HTML code '$'User role '' cannot be parsed correct.
HTML code '$'Filter by user role.'' cannot be parsed correct.
HTML code '$'Formatting'' cannot be parsed correct.
HTML code '$'Max size output'' cannot be parsed correct.
HTML code '$'recs.'' cannot be parsed correct.
HTML code '$'PHP allows you sent only ini_get("max_input_vars") input vars.'' cannot be parsed correct.
HTML code '$'Sort by column'' cannot be parsed correct.
HTML code '$'Search'' cannot be parsed correct.
HTML code '$'admin_url("admin-ajax.php")'' cannot be parsed correct.
HTML code '$'Export to CSV'' cannot be parsed correct.
HTML code '$'count($user_list)'' cannot be parsed correct.
HTML code '$'record(s) are shown.'' cannot be parsed correct.
HTML code '$' $total are found total.'' cannot be parsed correct.
HTML code '$'Check this list'' cannot be parsed correct.
HTML code '$'Mark all'' cannot be parsed correct.
HTML code '$'Unmark all'' cannot be parsed correct.
HTML code '$'When everything is ready'' cannot be parsed correct.
HTML code '$'Delete all marked users'' cannot be parsed correct.
HTML code '$'Disable users'' cannot be parsed correct.
HTML code '$'Enable users'' cannot be parsed correct.
HTML code '$'Draft posts'' cannot be parsed correct.
HTML code '$'Publush posts'' cannot be parsed correct.
HTML code '$'Mark'' cannot be parsed correct.
HTML code '$'Login'' cannot be parsed correct.
HTML code '$'Email'' cannot be parsed correct.
HTML code '$'Status'' cannot be parsed correct.
HTML code '$'Name'' cannot be parsed correct.
HTML code '$'Role'' cannot be parsed correct.
HTML code '$'Reg date'' cannot be parsed correct.
HTML code '$'Last log-in'' cannot be parsed correct.
HTML code '$'Published posts'' cannot be parsed correct.
HTML code '$'Spam comments'' cannot be parsed correct.
HTML code '$'Approved comments'' cannot be parsed correct.
HTML code '$'<tr align="center" class="0" ><td0.</td><td>'' cannot be parsed correct.
HTML code '$'<input type="checkbox" name="f_users[]" value="$UR_ID"/checked>'' cannot be parsed correct.
HTML code '$'</td>
<td align="left">$login</td><td align="left">$UR_mail</td><td align="left">$status</td><td align="left">$UR_name</td></td><td>implode(", ", array_keys($UR["USL"]))-</td><td>date("d M Y", strtotime($UR["dt_reg"]))</td><td>date("d M Y", $last_login)?</td><td>$UR_recs-</td><td>$UR_spam-</td><td>$UR_approved-</td></tr>
'' cannot be parsed correct.
HTML code '$'<hr />'' cannot be parsed correct.
HTML code '$'.</p>

<form method="POST" action="#outputs" id="inactive-user-deleter-form">
'' cannot be parsed correct.
HTML code '$'<br />
    '' cannot be parsed correct.
HTML code '$': <a href="http://shra.ru" rel="nofollow" target="_blank" >Korol Yuriy aka SHRA</a><br />
    '' cannot be parsed correct.
HTML code '$': <a href="https://wordpress.org/plugins/inactive-user-deleter/" rel="nofollow" target="_blank" >wordpress.org/plugins/inactive-user-deleter</a><br />
  </p>
'' cannot be parsed correct.
HTML code '$'" /><br />
   '' cannot be parsed correct.
HTML code '$'<br />
    <iframe src="https://money.yandex.ru/quickpay/shop-widget?writer=seller&targets=WP%20Inactive%20User%20Deleter%20plugin%20thanks&targets-hint=&default-sum=&button-text=14&payment-type-choice=on&comment=on&hint=&successURL=&lang=en&quickpay=shop&account=410011969010464" width="423" height="301" frameborder="0" allowtransparency="true" scrolling="no"></iframe>
  </p>'' cannot be parsed correct.
HTML code '$' user(s). Data will be erased permanently and cannot be restored automatically.<br />Do you will proceed ?
<input type="button" value="'' cannot be parsed correct.
HTML code '$'!" onclick="this.form.op.value=\'finally_delete\'; this.form.submit();"/>&nbsp;
<input type="button" value="'' cannot be parsed correct.
HTML code '$'" onclick="this.form.submit();"/>'' cannot be parsed correct.
HTML code '$'</h2>
<hr />
<p>'' cannot be parsed correct.
HTML code '$'.</p>
<p>'' cannot be parsed correct.
HTML code '$'.</p>'' cannot be parsed correct.
HTML code '$' />
    </td>
    <td>
      <label for="flag_inform_me">'' cannot be parsed correct.
HTML code '$'</label>
    </td>
  </tr>
  <tr style="display:'' cannot be parsed correct.
HTML code '$'">
    <td>&nbsp;</td>
    <td>
   '' cannot be parsed correct.
HTML code '$' <input id="informPeriod" size="2" maxlength="4" type="text" name="informPeriod" value="'' cannot be parsed correct.
HTML code '$'" />'' cannot be parsed correct.
HTML code '$'    '' cannot be parsed correct.
HTML code '$' <input id="informUsersNumber" size="2" maxlength="4" type="text" name="informUsersNumber" value="'' cannot be parsed correct.
HTML code '$'" />.<br/>
   '' cannot be parsed correct.
HTML code '$' : '' cannot be parsed correct.
HTML code '$'.
    </td>
  </tr>
  <tr><td align="center">
      <input id="flag_inform_users" type="checkbox" name="informUsers" value="1" '' cannot be parsed correct.
HTML code '$' />
    </td>
    <td>
      <label for="flag_inform_users">'' cannot be parsed correct.
HTML code '$'</label>
    </td>
  </tr>
  <tr style="display:'' cannot be parsed correct.
HTML code '$'">
    <td>&nbsp;</td>
    <td><p>
   '' cannot be parsed correct.
HTML code '$':
    <input id="confirmPeriod" size="2" maxlength="4" type="text" name="confirmPeriod" value="'' cannot be parsed correct.
HTML code '$'" />'' cannot be parsed correct.
HTML code '$'.
    </p>
    <p>
    '' cannot be parsed correct.
HTML code '$':<br />
    <textarea style="width: 80%" rows="10" name="confirmLetter">'' cannot be parsed correct.
HTML code '$'</textarea><br />
    '' cannot be parsed correct.
HTML code '$'    <pre>
:sitename - current domain sitename,
:confirmPeriod - confirmation period value,
:link - user-dependent link to prevent account deletion.</pre>
    </p>

    </td>
  </tr>
  <tr><td colspan="2"><input class="button-primary" name="sbm" type="submit" size="4" value="'' cannot be parsed correct.
HTML code '$'" /></td></tr>
  </table>

  </form'' cannot be parsed correct.
HTML code '$'</div>
  <div data-page="IUD_page_4" id="trial-button">'' cannot be parsed correct.
HTML code '$'</div>
  <div data-page="IUD_page_2" id="misc-button">'' cannot be parsed correct.
HTML code '$'</div>
  <div data-page="IUD_page_3">'' cannot be parsed correct.
HTML code '$'</div>
</nav>

<script>
(function ($) {
  $(\'nav#IUD_pager div\').click(function (){
    $(\'nav#IUD_pager div\').removeClass(\'active\');
    $(this).addClass(\'active\');
    var pageID = $(this).attr(\'data-page\');
    $(\'.sub-page\').hide();
    $(\'#\' + pageID).show();
  });

  '' cannot be parsed correct.
HTML code '$'\').trigger(\'click\')
  });

})(jQuery)

</script>'' cannot be parsed correct.
HTML code '$': 
      <select name="trial-role">
        <option value="">-- '' cannot be parsed correct.
HTML code '$' --</option>
    '' cannot be parsed correct.
HTML code '$'</small>
    </td>
  </tr>
  <tr>
    <td>
      '' cannot be parsed correct.
HTML code '$' <input size="2" maxlength="4" type="text" name="trial-period" value="'' cannot be parsed correct.
HTML code '$'" />'' cannot be parsed correct.
HTML code '$'.<br />
      '' cannot be parsed correct.
HTML code '$'      '' cannot be parsed correct.
HTML code '$'" /></td></tr>
  </table>

  </form'' cannot be parsed correct.
HTML code '$'</div>
  <hr width=50% align="left"/>
  '' cannot be parsed correct.
HTML code '$'  <select name="flagsCND">
    <option value="intersept" '' cannot be parsed correct.
HTML code '$' >'' cannot be parsed correct.
HTML code '$'</option>
    <option value="add" '' cannot be parsed correct.
HTML code '$' >'' cannot be parsed correct.
HTML code '$'</option>
  </select>
  </td>
</tr>
<tr><td colspan="2">
  '' cannot be parsed correct.
HTML code '$'  </td>
</tr>
<tr>
  <td align="center" width=250>
    <label for="flag_approve_nomatter">
      <input id="flag_approve_nomatter" type="radio" name="f_approve" value="0" '' cannot be parsed correct.
HTML code '$' />
      '' cannot be parsed correct.
HTML code '$'</label>
    <label for="flag_approve_no">
      <input id="flag_approve_no" type="radio" name="f_approve" value="no" '' cannot be parsed correct.
HTML code '$' />
      '' cannot be parsed correct.
HTML code '$'</label>
    <label for="flag_approve_yes">
      <input id="flag_approve_yes" type="radio" name="f_approve" value="yes" '' cannot be parsed correct.
HTML code '$' />
      '' cannot be parsed correct.
HTML code '$'</label>
  </td>
  <td>
    '' cannot be parsed correct.
HTML code '$'  </td>
</tr>
<tr>
'' cannot be parsed correct.
HTML code '$' />
    '' cannot be parsed correct.
HTML code '$'</label>
    <label for="flag_has_spam_no">
      <input id="flag_has_spam_no" type="radio" name="has_spam" value="no" '' cannot be parsed correct.
HTML code '$' />
    '' cannot be parsed correct.
HTML code '$'</label>
    <label for="flag_has_spam_yes">
      <input id="flag_has_spam_yes" type="radio" name="has_spam" value="yes" '' cannot be parsed correct.
HTML code '$' />
    '' cannot be parsed correct.
HTML code '$'</label>
  </td>
  <td>
    '' cannot be parsed correct.
HTML code '$'  </td>
</tr>
<tr>
  <td align="center" valign="top">
    <label for="flag_has_recs_nomatter">
      <input id="flag_has_recs_nomatter" type="radio" name="has_recs" value="0" '' cannot be parsed correct.
HTML code '$' />
    '' cannot be parsed correct.
HTML code '$'</label>
    <label for="flag_has_recs_no">
      <input id="flag_has_recs_no" type="radio" name="has_recs" value="no" '' cannot be parsed correct.
HTML code '$' />
    '' cannot be parsed correct.
HTML code '$'</label>
    <label for="flag_has_recs_yes">
      <input id="flag_has_recs_yes" type="radio" name="has_recs" value="yes" '' cannot be parsed correct.
HTML code '$' />
    '' cannot be parsed correct.
HTML code '$'</label>
  </td>
  <td>
    '' cannot be parsed correct.
HTML code '$'<br />
    <small>'' cannot be parsed correct.
HTML code '$' />
    '' cannot be parsed correct.
HTML code '$'</label>
    <label for="flag_has_orders_no">
      <input id="flag_has_orders_no" type="radio" name="has_orders" value="no" '' cannot be parsed correct.
HTML code '$' />
    '' cannot be parsed correct.
HTML code '$'</label>
    <label for="flag_has_orders_yes">
      <input id="flag_has_orders_yes" type="radio" name="has_orders" value="yes" '' cannot be parsed correct.
HTML code '$' />
    '' cannot be parsed correct.
HTML code '$'</label>
  </td>
  <td>
    '' cannot be parsed correct.
HTML code '$'<br />
    <small>'' cannot be parsed correct.
HTML code '$' />
      '' cannot be parsed correct.
HTML code '$'</label>
    <label for="flag_userlog_in_no">
      <input id="flag_userlog_in_no" type="radio" name="f_usereverlogin" value="no" '' cannot be parsed correct.
HTML code '$' />
      '' cannot be parsed correct.
HTML code '$'</label>
    <label for="flag_userlog_in_yes">
      <input id="flag_userlog_in_yes" type="radio" name="f_usereverlogin" value="yes" '' cannot be parsed correct.
HTML code '$' />
      '' cannot be parsed correct.
HTML code '$'</label>
  </td>
  <td>
    '' cannot be parsed correct.
HTML code '$' <br />
    <small>'' cannot be parsed correct.
HTML code '$'</small>
  </td>
</tr>

<tr valign="top">
  <td align="center">
    <label for="flag_userdisabled_nomatter">
      <input id="flag_userdisabled_nomatter" type="radio" name="f_userdisabled" value="0" '' cannot be parsed correct.
HTML code '$' />
      '' cannot be parsed correct.
HTML code '$'</label>
    <label for="flag_userdisabled_no">
      <input id="flag_userdisabled_no" type="radio" name="f_userdisabled" value="no" '' cannot be parsed correct.
HTML code '$' />
      '' cannot be parsed correct.
HTML code '$'</label>
    <label for="flag_userdisabled_yes">
      <input id="flag_userdisabled_yes" type="radio" name="f_userdisabled" value="yes" '' cannot be parsed correct.
HTML code '$' />
      '' cannot be parsed correct.
HTML code '$'</label>
  </td>
  <td>
    '' cannot be parsed correct.
HTML code '$' <br />
    <small>'' cannot be parsed correct.
HTML code '$'</small>
  </td>
</tr>

<tr valign="top">
  <td colspan="2">
    <div class="section-title">'' cannot be parsed correct.
HTML code '$'</div>
    <hr width=50% align="left"/>
    <label for="usernameFilter">'' cannot be parsed correct.
HTML code '$'</label>    
    <input type="text" size="15" name="username" value="'' cannot be parsed correct.
HTML code '$'" id="usernameFilter" />
    <br />
    <small>'' cannot be parsed correct.
HTML code '$'</small>

    <hr width=50% align="left"/>
    <label for="flag_daysleft">'' cannot be parsed correct.
HTML code '$'    <select name="f_daysleft">
'' cannot be parsed correct.
HTML code '$'>'' cannot be parsed correct.
HTML code '$'</option>
      <option value="0" '' cannot be parsed correct.
HTML code '$'>'' cannot be parsed correct.
HTML code '$'</option>
    </select> '' cannot be parsed correct.
HTML code '$'    <input type="text" size="4" name="daysleft" value="'' cannot be parsed correct.
HTML code '$'" />
   '' cannot be parsed correct.
HTML code '$'</label><br />
    <small>'' cannot be parsed correct.
HTML code '$'</small>
  </td>
</tr>

<tr valign="top">
  <td colspan="2">
    <hr width=50% align="left"/>
    <label for="f_lastlogin">'' cannot be parsed correct.
HTML code '$'    <select name="f_lastlogin">
      <option value="0">-- no filter --</option>
'' cannot be parsed correct.
HTML code '$'</label><br />
    <small>'' cannot be parsed correct.
HTML code '$'</small>
  </td>
</tr>

'' cannot be parsed correct.
HTML code '$' /> No</label>
    <label for="flag_s2_scriber_yes">
      <input id="flag_s2_scriber_yes" type="radio" name="has_SS2" value="1" '' cannot be parsed correct.
HTML code '$' /> Yes</label>
  </td>
  <td>
    '' cannot be parsed correct.
HTML code '$'<br />
    <small>'' cannot be parsed correct.
HTML code '$'Detect those, who has active subscriptions made by <a href="https://wordpress.org/plugins/subscribe2/" target="_blank">Subscribe2</a> plugin.'' cannot be parsed correct.
HTML code '$'</label>
  <select name="user_role">
'' cannot be parsed correct.
HTML code '$'</small></td>
</tr>

<tr>
  <td align="left" colspan="2">
    <div class="section-title">'' cannot be parsed correct.
HTML code '$'</div>
    <hr width=50% align="left"/>
    <label for="sort_order">'' cannot be parsed correct.
HTML code '$'</label>
    <select id="max_size_output" name="max_size_output" />
'' cannot be parsed correct.
HTML code '$'<br />
    <small>'' cannot be parsed correct.
HTML code '$'</small>
  </td>
</tr>
<tr>
  <td align="left" colspan="2">
    <label for="sort_order">'' cannot be parsed correct.
HTML code '$'</label>
    <select id="sort_order" name="sort_order" />
'' cannot be parsed correct.
HTML code '$'" />
  <button class="button-primary" onclick="
    window.open(\''' cannot be parsed correct.
HTML code '$'\' 
      + \'?action=iud_getCsvUserList&\' 
      + jQuery(\'#inactive-user-deleter-form\').serialize());
    return false;"'' cannot be parsed correct.
HTML code '$'</button>
</td></tr>
</table>
<a name="outputs"></a>

'' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$'.
  <input type="button" value="'' cannot be parsed correct.
HTML code '$'" onclick="IUD_markALL(this.form[\'f_users[]\']);" />
  <input type="button" value="'' cannot be parsed correct.
HTML code '$'" onclick="IUD_unmarkALL(this.form[\'f_users[]\']);" />
  '' cannot be parsed correct.
HTML code '$' -
  <input type="button" class="button-secondary-red" value="'' cannot be parsed correct.
HTML code '$'" onclick="
      if (confirm(\'Yes, I really want to delete all marked users.\')) {
        this.form.op.value=\'delete\';
        this.form.submit();
      }
    "/>
  <input type="button" class="button-secondary-red" value="'' cannot be parsed correct.
HTML code '$'" onclick="
      if (confirm(\'Yes, disable all marked users.\')) {
        this.form.op.value=\'disable\';
        this.form.submit();
      }
    "/>
  <input type="button" class="button-primary" value="'' cannot be parsed correct.
HTML code '$'" onclick="
      if (confirm(\'Yes, activate all marked users.\')) {
        this.form.op.value=\'activate\';
        this.form.submit();
      }
    "/>
  <input type="button" class="button-secondary-red" value="'' cannot be parsed correct.
HTML code '$'" onclick="
      if (confirm(\'Yes, unpublush all their posts.\')) {
        this.form.op.value=\'draft\';
        this.form.submit();
      }
    "/>
  <input type="button" class="button-primary" value="'' cannot be parsed correct.
HTML code '$'" onclick="
      if (confirm(\'(Be carefull, it will publish all posts of users from the list!) I understand all risks, publush all their posts.\')) {
        this.form.op.value=\'publish\';
        this.form.submit();
      }
    "/>


  <table cellpadding="3"><tr>
    <th>No.</th>
    <th>'' cannot be parsed correct.
HTML code '$'</th>
    <th class="clickable" width="150" align="left" onclick="jQuery(\'#sort_order\').val(\'login\'); jQuery(\'#inactive-user-deleter-form\').submit(); ">'' cannot be parsed correct.
HTML code '$'</th>
    <th class="clickable" align="left" onclick="jQuery(\'#sort_order\').val(\'mail\'); jQuery(\'#inactive-user-deleter-form\').submit(); ">'' cannot be parsed correct.
HTML code '$'</th>
    <th class="clickable" align="left" onclick="jQuery(\'#sort_order\').val(\'disabled\'); jQuery(\'#inactive-user-deleter-form\').submit(); ">'' cannot be parsed correct.
HTML code '$'</th>
    <th class="clickable" align="left" onclick="jQuery(\'#sort_order\').val(\'name\'); jQuery(\'#inactive-user-deleter-form\').submit(); ">'' cannot be parsed correct.
HTML code '$'</th>
    <th class="clickable" onclick="jQuery(\'#sort_order\').val(\'userlevel\'); jQuery(\'#inactive-user-deleter-form\').submit(); ">'' cannot be parsed correct.
HTML code '$'</th>
    <th class="clickable" width="120" onclick="jQuery(\'#sort_order\').val(\'regdate\'); jQuery(\'#inactive-user-deleter-form\').submit(); ">'' cannot be parsed correct.
HTML code '$'</th>
    <th class="clickable" width="120" onclick="jQuery(\'#sort_order\').val(\'logindate\'); jQuery(\'#inactive-user-deleter-form\').submit(); ">'' cannot be parsed correct.
HTML code '$'</th>
    <th>'' cannot be parsed correct.
HTML code '$'</th>
    <th class="clickable" onclick="jQuery(\'#sort_order\').val(\'spam\'); jQuery(\'#inactive-user-deleter-form\').submit(); ">'' cannot be parsed correct.
HTML code '$'</th>
    <th class="clickable" onclick="jQuery(\'#sort_order\').val(\'comments\'); jQuery(\'#inactive-user-deleter-form\').submit(); ">'' cannot be parsed correct.
HTML code '$'</th></tr>
'' cannot be parsed correct.
HTML code '$'-'' cannot be parsed correct.
HTML code '$'<p>* - striked through logins - user is informed (by email) about deletion and marked to delete soon.<p>'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:24.265091.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.042212.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 0 do_action/apply_filters calls and 8 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.384626.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbplusDetector
### Start running FrontBaseDetector
### Finish running FileProDetector
### Start running HashDetector
### Finish running DbaseDetector
### Start running IBMDb2Detector
### Finish running FirebirdInterBaseDetector
### Start running InformixDetector
### Finish running CubridDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running MongoDbDetector
### Start running OpenSSLDetector
### Finish running Oci8Detector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running ArrayElementDetector
### Start running PhpCurlDetector
### Finish running HashDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PasswordHashingDetector
### Start running PHPRetrievalDetector
### Finish running PHPIncludedDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PhpCurlDetector
### Start running PhpVarDetector
### Finish running OpenSSLDetector
### Start running PostgreSQLDetector
### Finish running PhpVarDetector
### Start running PropertyDetector
### Finish running PostgreSQLDetector
### Start running Sqlite3Detector
### Finish running Sqlite3Detector
### Start running SqliteDetector
### Finish running SqliteDetector
### Start running SqlServerDetector
### Finish running PHPRetrievalDetector
### Start running SybaseDetector
### Finish running SybaseDetector
### Start running TokyoTyrantDetector
### Finish running PropertyDetector
### Start running UserInputDetector
### Finish running MySQLiDetector
### Start running VariableDetector
### Finish running maxdbDetector
### Start running WordpressHashingFnDetector
### Finish running TokyoTyrantDetector
### Start running WordPressRemoteDetector
### Finish running SqlServerDetector
### Start running WordPressRetrievalDetector
### Finish running WordPressRemoteDetector
### Start running WordPressStorageDetector
### Finish running VariableDetector
### Start running WP_UserDetector
### Finish running WordpressHashingFnDetector
### Start running GenericDatabaseUsageDetector
### Finish running WP_UserDetector
### Start running GenericEncryptionDetector
### Finish running UserInputDetector
### Start running DeletionDetector
### Finish running GenericEncryptionDetector
### Start running UninstallDetector
### Finish running GenericDatabaseUsageDetector
### Finish running PHPStorageDetector
### Finish running UninstallDetector
### Finish running WordPressStorageDetector
### Finish running DeletionDetector
### Finish running WordPressRetrievalDetector
### Finished running detectors
templates/user_filter.tpl.php:137
  - Request variable '$_POST["username"]' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
templates/user_filter.tpl.php:137
  - Request variable '$_POST["username"]' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta 

inactive-user-deleter.php:243
  - RETRIEVAL call to readfile(dirname() . "/styles.css").
  - Data types: file 

templates/users_list_csv.tpl.php:4
  - STORAGE call to fputcsv($outputHandler, ["#", __("Login"), __("Email"), __("Status"), __("Name"), __("Role"), __("Reg date"), __("Last log-in"), __("Published posts"), __("Spam comments"), __("Approved comments")]).
  - Data types: file
templates/users_list_csv.tpl.php:48
  - STORAGE call to fputcsv($outputHandler, $row).
  - Data types: file 

inactive-user-deleter.php:554
  - CRYPTOGRAPHY call to wp_create_user("usr_" . $asr, "pass_" . $asr, $asr . "@mail.ru") alters data types {'user', 'user_meta'}. Passed arguments: 0: $username (string), 1: $password (string), 2: $email (string). Returns (int|WP_Error).
  - Data types: user, user_meta 

class.users.php:9
  - RETRIEVAL call to get_user_meta($userID, $wpdb->get_blog_prefix() . "capabilities", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inactive-user-deleter.php:58
  - RETRIEVAL call to get_user_meta($user->ID, "_IUD_userBlockedTime", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inactive-user-deleter.php:70
  - RETRIEVAL call to get_userdatabylogin($login) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_login (string). Returns (bool|object).
  - Data types: user, user_meta
inactive-user-deleter.php:76
  - RETRIEVAL call to get_user_meta($user->ID, "_IUD_deltime", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inactive-user-deleter.php:86
  - RETRIEVAL call to get_user_meta($UID, "_IUD_cancelcode", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inactive-user-deleter.php:112
  - RETRIEVAL call to get_option("UsrInDeleter_lastTrialCheck", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inactive-user-deleter.php:155
  - RETRIEVAL call to get_option("admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inactive-user-deleter.php:179
  - RETRIEVAL call to get_users(["meta_key" => "_IUD_deltime", "meta_value" => time(), "meta_compare" => "<"]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $args (array). Returns (array).
  - Data types: user, user_meta
inactive-user-deleter.php:211
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
inactive-user-deleter.php:280
  - RETRIEVAL call to get_user_meta($user_id_to_disable, "_IUD_userBlockedTime", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inactive-user-deleter.php:304
  - RETRIEVAL call to get_user_meta($user_id_to_enable, "_IUD_userBlockedTime", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inactive-user-deleter.php:375
  - RETRIEVAL call to get_user_meta($user_id_to_delete, "_IUD_deltime", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inactive-user-deleter.php:378
  - RETRIEVAL call to get_user_meta($user_id_to_delete, "_IUD_cancelcode", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inactive-user-deleter.php:563
  - RETRIEVAL call to get_option("UsrInDeleter_settings", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
templates/inform-form.tpl.php:23
  - RETRIEVAL call to get_option("admin_email", "<a href=" . admin_url("options-general.php") . "">SETUP email value here</a") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
templates/trial-users-form.tpl.php:33
  - RETRIEVAL call to get_option("UsrInDeleter_lastTrialCheck", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option 

class.users.php:61
  - STORAGE call to wp_update_post($my_post). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
class.users.php:100
  - STORAGE call to wp_update_post($my_post). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
inactive-user-deleter.php:71
  - STORAGE call to update_usermeta($user->ID, "last_login_gtm", time()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).
  - Data types: user_meta
inactive-user-deleter.php:78
  - STORAGE call to delete_user_meta($user->ID, "_IUD_deltime") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
inactive-user-deleter.php:79
  - STORAGE call to update_user_meta($user->ID, "_IUD_cancelcode", "confirmed") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inactive-user-deleter.php:94
  - STORAGE call to delete_user_meta($UID, "_IUD_deltime") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
inactive-user-deleter.php:95
  - STORAGE call to update_user_meta($UID, "_IUD_cancelcode", "confirmed") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inactive-user-deleter.php:114
  - STORAGE call to update_option("UsrInDeleter_lastTrialCheck", time()) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inactive-user-deleter.php:139
  - STORAGE call to wp_delete_user($user["ID"]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $id (int). Returns (bool).
  - Data types: user, user_meta
inactive-user-deleter.php:190
  - STORAGE call to wp_delete_user($user->ID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $id (int). Returns (bool).
  - Data types: user, user_meta
inactive-user-deleter.php:282
  - STORAGE call to update_usermeta($user_id_to_disable, "_IUD_userBlockedTime", time()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).
  - Data types: user_meta
inactive-user-deleter.php:306
  - STORAGE call to delete_user_meta($user_id_to_enable, "_IUD_userBlockedTime") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
inactive-user-deleter.php:382
  - STORAGE call to update_user_meta($user_id_to_delete, "_IUD_deltime", time() + $confirmPeriod * 86400) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inactive-user-deleter.php:384
  - STORAGE call to update_user_meta($user_id_to_delete, "_IUD_cancelcode", $code) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inactive-user-deleter.php:409
  - STORAGE call to wp_delete_user($user_id_to_delete) alters data types {'user', 'user_meta'}. Passed arguments: 0: $id (int). Returns (bool).
  - Data types: user, user_meta
inactive-user-deleter.php:554
  - STORAGE call to wp_create_user("usr_" . $asr, "pass_" . $asr, $asr . "@mail.ru") alters data types {'user', 'user_meta'}. Passed arguments: 0: $username (string), 1: $password (string), 2: $email (string). Returns (int|WP_Error).
  - Data types: user, user_meta
inactive-user-deleter.php:559
  - STORAGE call to update_option("UsrInDeleter_settings", $OP) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option 

inactive-user-deleter.php:78
  - DELETION call to delete_user_meta($user->ID, "_IUD_deltime") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
inactive-user-deleter.php:94
  - DELETION call to delete_user_meta($UID, "_IUD_deltime") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
inactive-user-deleter.php:139
  - DELETION call to wp_delete_user($user["ID"]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $id (int). Returns (bool).
  - Data types: user, user_meta
inactive-user-deleter.php:190
  - DELETION call to wp_delete_user($user->ID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $id (int). Returns (bool).
  - Data types: user, user_meta
inactive-user-deleter.php:306
  - DELETION call to delete_user_meta($user_id_to_enable, "_IUD_userBlockedTime") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
inactive-user-deleter.php:409
  - DELETION call to wp_delete_user($user_id_to_delete) alters data types {'user', 'user_meta'}. Passed arguments: 0: $id (int). Returns (bool).
  - Data types: user, user_meta 

By data type:
file
	PHPRetrievalDetector.readfile(dirname() . "/styles.css") - {'file'}
	PHPStorageDetector.fputcsv($outputHandler, $row) - {'file'}
	PHPStorageDetector.fputcsv($outputHandler, ["#", __("Login"), __("Email"), __("Status"), __("Name"), __("Role"), __("Reg date"), __("Last log-in"), __("Published posts"), __("Spam comments"), __("Approved comments")]) - {'file'}
none
	WordPressStorageDetector.wp_update_post($my_post) - set()
	WordPressStorageDetector.wp_update_post($my_post) - set()
option
	WordPressRetrievalDetector.get_option("admin_email") - {'option'}
	WordPressRetrievalDetector.get_option("UsrInDeleter_lastTrialCheck", 0) - {'option'}
	WordPressStorageDetector.update_option("UsrInDeleter_lastTrialCheck", time()) - {'option'}
	WordPressStorageDetector.update_option("UsrInDeleter_settings", $OP) - {'option'}
	WordPressRetrievalDetector.get_option("UsrInDeleter_lastTrialCheck", 0) - {'option'}
	WordPressRetrievalDetector.get_option("UsrInDeleter_settings", []) - {'option'}
	WordPressRetrievalDetector.get_option("admin_email", "<a href=" . admin_url("options-general.php") . "">SETUP email value here</a") - {'option'}
user
	WordPressStorageDetector.wp_delete_user($user["ID"]) - {'user', 'user_meta'}
	WordPressStorageDetector.wp_delete_user($user_id_to_delete) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_create_user("usr_" . $asr, "pass_" . $asr, $asr . "@mail.ru") - {'user', 'user_meta'}
	DeletionDetector.wp_delete_user($user_id_to_delete) - {'user', 'user_meta'}
	ArrayElementDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.wp_create_user("usr_" . $asr, "pass_" . $asr, $asr . "@mail.ru") - {'user', 'user_meta'}
	DeletionDetector.wp_delete_user($user["ID"]) - {'user', 'user_meta'}
	DeletionDetector.wp_delete_user($user->ID) - {'user', 'user_meta'}
	ArrayElementDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.wp_delete_user($user->ID) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_users(["meta_key" => "_IUD_deltime", "meta_value" => time(), "meta_compare" => "<"]) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdatabylogin($login) - {'user', 'user_meta'}
user_meta
	WordPressStorageDetector.wp_delete_user($user["ID"]) - {'user', 'user_meta'}
	WordPressStorageDetector.wp_delete_user($user_id_to_delete) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_create_user("usr_" . $asr, "pass_" . $asr, $asr . "@mail.ru") - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id_to_disable, "_IUD_userBlockedTime", true) - {'user_meta'}
	DeletionDetector.wp_delete_user($user_id_to_delete) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id_to_delete, "_IUD_deltime", time() + $confirmPeriod * 86400) - {'user_meta'}
	DeletionDetector.delete_user_meta($UID, "_IUD_deltime") - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id_to_delete, "_IUD_cancelcode", true) - {'user_meta'}
	WordPressStorageDetector.update_usermeta($user_id_to_disable, "_IUD_userBlockedTime", time()) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($userID, $wpdb->get_blog_prefix() . "capabilities", true) - {'user_meta'}
	ArrayElementDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.wp_create_user("usr_" . $asr, "pass_" . $asr, $asr . "@mail.ru") - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user->ID, "_IUD_deltime", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id_to_enable, "_IUD_userBlockedTime", true) - {'user_meta'}
	DeletionDetector.wp_delete_user($user["ID"]) - {'user', 'user_meta'}
	DeletionDetector.delete_user_meta($user->ID, "_IUD_deltime") - {'user_meta'}
	DeletionDetector.wp_delete_user($user->ID) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id_to_delete, "_IUD_deltime", true) - {'user_meta'}
	WordPressStorageDetector.update_usermeta($user->ID, "last_login_gtm", time()) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user->ID, "_IUD_userBlockedTime", true) - {'user_meta'}
	WordPressStorageDetector.delete_user_meta($user_id_to_enable, "_IUD_userBlockedTime") - {'user_meta'}
	WordPressStorageDetector.delete_user_meta($user->ID, "_IUD_deltime") - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id_to_delete, "_IUD_cancelcode", $code) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user->ID, "_IUD_cancelcode", "confirmed") - {'user_meta'}
	WordPressStorageDetector.update_user_meta($UID, "_IUD_cancelcode", "confirmed") - {'user_meta'}
	WordPressStorageDetector.delete_user_meta($UID, "_IUD_deltime") - {'user_meta'}
	ArrayElementDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.wp_delete_user($user->ID) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_users(["meta_key" => "_IUD_deltime", "meta_value" => time(), "meta_compare" => "<"]) - {'user', 'user_meta'}
	DeletionDetector.delete_user_meta($user_id_to_enable, "_IUD_userBlockedTime") - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($UID, "_IUD_cancelcode", true) - {'user_meta'}
	WordPressRetrievalDetector.get_userdatabylogin($login) - {'user', 'user_meta'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:10.448938.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 155 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.255137.

!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 2447
155 STORE_REACHES edges created
155 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 61 nodes as PERSONAL
In total, tainted 61 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 46 nodes as ENCRYPTED
In total, tainted 46 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:02.723513.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:01:06.314666!
Request variable '$_POST["username"]' of personal types {'user', 'user_meta'} is found.,,None
Request variable '$_POST["username"]' of personal types {'user', 'user_meta'} is found.,,None
DELETION call to wp_delete_user($user["ID"]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $id (int). Returns (bool).,None,None
DELETION call to wp_delete_user($user->ID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $id (int). Returns (bool).,None,None
DELETION call to delete_user_meta($user_id_to_enable, "_IUD_userBlockedTime") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to wp_delete_user($user_id_to_delete) alters data types {'user', 'user_meta'}. Passed arguments: 0: $id (int). Returns (bool).,None,None
DELETION call to delete_user_meta($user->ID, "_IUD_deltime") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_user_meta($UID, "_IUD_deltime") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
RETRIEVAL call to readfile(dirname() . "/styles.css").,None,None
STORAGE call to fputcsv($outputHandler, ["#", __("Login"), __("Email"), __("Status"), __("Name"), __("Role"), __("Reg date"), __("Last log-in"), __("Published posts"), __("Spam comments"), __("Approved comments")]).,None,None
STORAGE call to fputcsv($outputHandler, $row).,None,None
RETRIEVAL call to get_user_meta($userID, $wpdb->get_blog_prefix() . "capabilities", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("UsrInDeleter_lastTrialCheck", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_users(["meta_key" => "_IUD_deltime", "meta_value" => time(), "meta_compare" => "<"]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $args (array). Returns (array).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_user_meta($user_id_to_disable, "_IUD_userBlockedTime", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user_id_to_enable, "_IUD_userBlockedTime", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user_id_to_delete, "_IUD_deltime", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user_id_to_delete, "_IUD_cancelcode", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("UsrInDeleter_settings", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user->ID, "_IUD_userBlockedTime", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdatabylogin($login) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_login (string). Returns (bool|object).,None,None
RETRIEVAL call to get_user_meta($user->ID, "_IUD_deltime", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($UID, "_IUD_cancelcode", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("admin_email", "<a href=" . admin_url("options-general.php") . "">SETUP email value here</a") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("UsrInDeleter_lastTrialCheck", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
STORAGE call to wp_update_post($my_post). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to wp_update_post($my_post). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to update_option("UsrInDeleter_lastTrialCheck", time()) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to wp_delete_user($user["ID"]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $id (int). Returns (bool).,None,None
STORAGE call to wp_delete_user($user->ID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $id (int). Returns (bool).,None,None
STORAGE call to update_usermeta($user_id_to_disable, "_IUD_userBlockedTime", time()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).,None,None
STORAGE call to delete_user_meta($user_id_to_enable, "_IUD_userBlockedTime") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_user_meta($user_id_to_delete, "_IUD_deltime", time() + $confirmPeriod * 86400) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id_to_delete, "_IUD_cancelcode", $code) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_delete_user($user_id_to_delete) alters data types {'user', 'user_meta'}. Passed arguments: 0: $id (int). Returns (bool).,None,None
STORAGE call to wp_create_user("usr_" . $asr, "pass_" . $asr, $asr . "@mail.ru") alters data types {'user', 'user_meta'}. Passed arguments: 0: $username (string), 1: $password (string), 2: $email (string). Returns (int|WP_Error).,None,None
STORAGE call to update_option("UsrInDeleter_settings", $OP) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_usermeta($user->ID, "last_login_gtm", time()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).,None,None
STORAGE call to delete_user_meta($user->ID, "_IUD_deltime") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_user_meta($user->ID, "_IUD_cancelcode", "confirmed") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_user_meta($UID, "_IUD_deltime") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_user_meta($UID, "_IUD_cancelcode", "confirmed") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
CRYPTOGRAPHY call to wp_create_user("usr_" . $asr, "pass_" . $asr, $asr . "@mail.ru") alters data types {'user', 'user_meta'}. Passed arguments: 0: $username (string), 1: $password (string), 2: $email (string). Returns (int|WP_Error).,hash,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user_id_to_delete, "_IUD_deltime", time() + $confirmPeriod * 86400)", found in file inactive-user-deleter.php at line 382. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_usermeta($user_id_to_disable, "_IUD_userBlockedTime", time())", found in file inactive-user-deleter.php at line 282. 

[has_storage] WP User info of types (['user', 'user_meta']) stored through WordPress function "wp_create_user("usr_" . $asr, "pass_" . $asr, $asr . "@mail.ru")", found in file inactive-user-deleter.php at line 554. 

[has_storage] PII of types (['user', 'user_meta']) stored through WordPress function "update_usermeta($user->ID, "last_login_gtm", time())", found in file inactive-user-deleter.php at line 71. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user_id_to_delete, "_IUD_cancelcode", $code)", found in file inactive-user-deleter.php at line 384. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user->ID, "_IUD_cancelcode", "confirmed")", found in file inactive-user-deleter.php at line 79. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($UID, "_IUD_cancelcode", "confirmed")", found in file inactive-user-deleter.php at line 95. 

[has_storage] Storage check is WP 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id_to_delete, "_IUD_deltime", time() + $confirmPeriod * 86400) has deletion method delete_user_meta($user->ID, "_IUD_deltime"). Storage method found in file inactive-user-deleter.php at line 382. Deletion method found in file inactive-user-deleter.php at line 78. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id_to_delete, "_IUD_deltime", time() + $confirmPeriod * 86400) has deletion method delete_user_meta($UID, "_IUD_deltime"). Storage method found in file inactive-user-deleter.php at line 382. Deletion method found in file inactive-user-deleter.php at line 94. 

[Art.17, Right to erasure] Wordpress storage of PII through update_usermeta($user_id_to_disable, "_IUD_userBlockedTime", time()) has deletion method delete_user_meta($user_id_to_enable, "_IUD_userBlockedTime"). Storage method found in file inactive-user-deleter.php at line 282. Deletion method found in file inactive-user-deleter.php at line 306. 

[Art.17, Right to erasure] Wordpress storage of PII through update_usermeta($user->ID, "last_login_gtm", time()) does not have corresponding deletion method. Storage method found in file inactive-user-deleter.php at line 71. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id_to_delete, "_IUD_cancelcode", $code) does not have corresponding deletion method. Storage method found in file inactive-user-deleter.php at line 384. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user->ID, "_IUD_cancelcode", "confirmed") does not have corresponding deletion method. Storage method found in file inactive-user-deleter.php at line 79. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($UID, "_IUD_cancelcode", "confirmed") does not have corresponding deletion method. Storage method found in file inactive-user-deleter.php at line 95. 

[Art.17, Right to erasure] Deletion access is NONE 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3189. Found in file inactive-user-deleter.php at line 382 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 2756. Found in file inactive-user-deleter.php at line 282 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1786. Found in file inactive-user-deleter.php at line 71 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3212. Found in file inactive-user-deleter.php at line 384 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1845. Found in file inactive-user-deleter.php at line 79 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1936. Found in file inactive-user-deleter.php at line 95 

[Art.15, Right to access] Data access is NONE_BUT_NOT_REQUIRED 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['access', 'deletion', 'encryption', 'third_party'] 

[main] Is deletion in violation? True 

[main] Is access in violation? False 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? False 


###########
### Q&A ###
###########

1. Why is my plugin in violation against GDPR?

GDPR (https://gdpr-info.eu/) aims to give citizens in the European Union (EU) control over their personal data. If a website collects or store user data, it is required to provide users functionalities to control their data, such as ones to erase or export their data. While a plugin do not directly interact with users, it may provide functionalities that collect or store personal data, which would make websites that deploy the plugin in violation against GDPR if the plugin does not provide corresponding functionalities to allow users control their personal data. Therefore, plugin developers are responsible to provide functions to manage the personal data they handle in accordance with GDPR. We list requirements by specific GDPR articles relevant to your plugin below.


[Art. 13, Information to be provided where personal data are collected from the data subject] If a plugin collects or handles personal data, it needs to provide privacy policy texts that explain what personal data is being collected and for what purpose. The texts are meant to be added to the privacy policy of the websites that deploy the plugin. 


            
[Art.17, Right to erasure] If a plugin stores personal data in a custom database they create or manage, or through Wordpress's native storage functions (e.g., update_user_meta), it needs to provide methods for users to erase the data upon request. Note that deleting data for all users upon uninstallation does not satisfy the requirement. 


            
        

2. How do I make my plugin compliant?

Please refer to the fix report below to see how you can make your plugin comply with GDPR.

        

##################
### Fix Report ###
##################

############################
# Data Deletion Fix Report #
############################

This report suggests fixes to comply with the GDPR Art. 17, Right to erasure (https://gdpr-info.eu/art-17-gdpr/). The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/adding-the-personal-data-eraser-to-your-plugin/ for more details.

1) Implement a function that deletes all the user data collected in the plugin. Sample code:


/**
* Removes all collected data of a user.
*
* @param string $email_address   email address to manipulate
* @param int    $page            pagination
*
* @return array
*/
function inactive-user-deleter_remove_data( $email_address, $page = 1 ) {
    
    $page = (int) $page;


    //TODO: Delete the user data that was stored using Wordpress functions

    //Below is the sample code for deleting user meta and may need to be modified to suit the plugin.
    $user_id = get_user_by('email', $email_address)
    $key = 'email' //Sample user meta key
    if ( $customer->user_id > 0 ) {
        //Delete user meta data by $key
        delete_user_meta( $user_id, $key );
    }
        



    // Tell core if we have more data to delete still
    $done = true;
    return array(
        'items_removed'  => $items_removed, // true if collected data of a user is being deleted
        'items_retained' => $items_retained, // true if certain data needs to be retained
        'messages'       => sprintf( __( 'Data of user with email %s successfully deleted.', 'inactive-user-deleter' ), $email_address ), // Put messages for data removal
        'done'           => $done, // true if all the removal processes are done (all data of the user is removed)
    );
}
        

2) Hook the deletion function to the Wordpress's Personal Data Removal tool


/**
* Registers all data erasers.
*
* @param array $exporters
*
* @return mixed
*/
function inactive-user-deleter_register_privacy_erasers( $erasers ) {
    $erasers['my-plugin-slug'] = array(
        'eraser_friendly_name' => __( '<eraser name>', 'inactive-user-deleter' ),
        'callback'             => 'inactive-user-deleter_remove_data',
    );
    return $erasers;
}
        

add_filter( 'wp_privacy_personal_data_erasers', 'inactive-user-deleter_register_privacy_erasers' );
        

        

#############################
# Privacy Policy Fix Report #
#############################

This report suggests fixes to comply with the GDPR Art. 13 (https://gdpr-info.eu/art-13-gdpr/) through including a privacy notice. The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/suggesting-text-for-the-site-privacy-policy/ for more details.

1) Implement a function that includes the privacy policy for the plugin and provide it to wordpress through wp_add_privacy_policy_content(). Sample code:


/**
* Adds a privacy policy statement.
*/
function inactive-user-deleter_add_privacy_policy_content() {
    if ( ! function_exists( 'wp_add_privacy_policy_content' ) ) {
        return;
    }
    //TODO: modify the content below to include the privacy policy for the plugin.
    $content = '<p class="privacy-policy-tutorial">' . __( 'Some introductory content for the suggested text.', 'inactive-user-deleter' ) . '</p>'
            . '<strong class="privacy-policy-tutorial">' . __( 'Suggested Text:', 'inactive-user-deleter' ) . '</strong> '
            . sprintf(
                __( 'When you leave a comment on this site, we send your name, email address, IP address and comment text to example.com. Example.com does not retain your personal data. The example.com privacy policy is <a href="%1$s" target="_blank">here</a>.', 'inactive-user-deleter' ),
                'https://example.com/privacy-policy'
            );
    wp_add_privacy_policy_content( 'inactive-user-deleter', wp_kses_post( wpautop( $content, false ) ) );
}
        

2) Hook the privacy policy function to the Wordpress's admin initialization action.


add_action( 'admin_init', 'inactive-user-deleter_add_privacy_policy_content' );
        

        


Disclaimer: The sample code provided above is only for reference and does not guarantee GDPR compliance. The recommended list of data to delete/export may not be comprehensive. 
        
Done.
