Timeout in resolving values
Timeout in running neo4j query
Running Main.py on harrix-markdownfile

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:01.052559.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.129155.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 252 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:01.042050.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 0 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.481782.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 2459 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:01.617883.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 0 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.794294.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
Added 2 PHP_REACHES edges.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.085704.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 876 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:14.761026.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 11646
Added 8057 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 17979
Added 6333 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:02.127913.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/harrix-markdownfile/harrix-markdownfile.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/harrix-markdownfile/Parsedown.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/harrix-markdownfile/Michelf/MarkdownExtra.inc.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/harrix-markdownfile/Michelf/MarkdownExtra.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/harrix-markdownfile/Michelf/Markdown.inc.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/harrix-markdownfile/Michelf/MarkdownInterface.inc.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/harrix-markdownfile/Michelf/MarkdownInterface.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/harrix-markdownfile/Michelf/Markdown.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.963925.

1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
11646 PHP_REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
6333 PHP_REACHES edges created
17979 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 3725 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.321605.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:01.001365.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 187 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:05.799163.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 182 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.195468.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.175621.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:02.363682.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.049970.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.036271.

369 PHP_REACHES edges created
369 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 345 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.168788.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
No SQL nodes to process.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:00.154257.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'
<script>hljs.initHighlightingOnLoad();</script>
'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:00.341087.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.097199.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 0 do_action/apply_filters calls and 2 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.394382.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FileProDetector
### Start running FrontBaseDetector
### Finish running DbplusDetector
### Start running HashDetector
### Finish running DbaseDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running FrontBaseDetector
### Start running IngresDetector
### Finish running InformixDetector
### Start running maxdbDetector
### Finish running FirebirdInterBaseDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running MySQLDetector
### Start running MySQLiDetector
### Finish running MsqlDetector
### Start running Oci8Detector
### Finish running Oci8Detector
### Start running OpenSSLDetector
### Finish running ArrayElementDetector
### Start running ParadoxDetector
### Finish running MongoDbDetector
### Start running PasswordHashingDetector
### Finish running ParadoxDetector
### Start running PhpCurlDetector
### Finish running PhpCurlDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PasswordHashingDetector
### Start running PHPRetrievalDetector
### Finish running HashDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPIncludedDetector
### Start running PhpVarDetector
### Finish running PhpVarDetector
### Start running PostgreSQLDetector
### Finish running OpenSSLDetector
### Start running PropertyDetector
### Finish running PHPStorageDetector
### Start running Sqlite3Detector
### Finish running PostgreSQLDetector
### Start running SqliteDetector
### Finish running Sqlite3Detector
### Start running SqlServerDetector
### Finish running SqliteDetector
### Start running SybaseDetector
### Finish running PropertyDetector
### Start running TokyoTyrantDetector
### Finish running SybaseDetector
### Start running UserInputDetector
### Finish running TokyoTyrantDetector
### Start running VariableDetector
### Finish running SqlServerDetector
### Start running WordpressHashingFnDetector
### Finish running PHPRetrievalDetector
### Start running WordPressRemoteDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRetrievalDetector
### Finish running WordPressRemoteDetector
### Start running WordPressStorageDetector
### Finish running WordPressStorageDetector
### Start running WP_UserDetector
### Finish running WordPressRetrievalDetector
### Start running GenericDatabaseUsageDetector
### Finish running UserInputDetector
### Start running GenericEncryptionDetector
### Finish running WP_UserDetector
### Start running DeletionDetector
### Finish running VariableDetector
### Start running UninstallDetector
### Finish running GenericDatabaseUsageDetector
### Finish running maxdbDetector
### Finish running MySQLiDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running GenericEncryptionDetector
### Finished running detectors
harrix-markdownfile.php:33
  - RETRIEVAL call to file_get_contents($yourfile).
  - Data types: file 

Michelf/Markdown.php:177
  - CRYPTOGRAPHY call to $this->hashHTMLBlocks($text).
Michelf/Markdown.php:387
  - CRYPTOGRAPHY call to $this->hashBlock($text).
Michelf/Markdown.php:405
  - CRYPTOGRAPHY call to $this->unhash($text).
Michelf/Markdown.php:419
  - CRYPTOGRAPHY call to $this->hashPart($text, "B").
Michelf/Markdown.php:445
  - CRYPTOGRAPHY call to $this->hashHTMLBlocks($text).
Michelf/Markdown.php:480
  - CRYPTOGRAPHY call to $this->hashBlock("<hr"$this->empty_element_suffix).
Michelf/Markdown.php:527
  - CRYPTOGRAPHY call to $this->hashPart("<br"$this->empty_element_suffix"
").
Michelf/Markdown.php:628
  - CRYPTOGRAPHY call to $this->hashPart($result).
Michelf/Markdown.php:643
  - CRYPTOGRAPHY call to $this->unhash($url).
Michelf/Markdown.php:658
  - CRYPTOGRAPHY call to $this->hashPart($result).
Michelf/Markdown.php:736
  - CRYPTOGRAPHY call to $this->hashPart($result).
Michelf/Markdown.php:760
  - CRYPTOGRAPHY call to $this->hashPart($result).
Michelf/Markdown.php:806
  - CRYPTOGRAPHY call to $this->hashBlock($block).
Michelf/Markdown.php:815
  - CRYPTOGRAPHY call to $this->hashBlock($block).
Michelf/Markdown.php:928
  - CRYPTOGRAPHY call to $this->hashBlock("<"$list_type" start="$ol_start"">" . $result . "</"$list_type">").
Michelf/Markdown.php:930
  - CRYPTOGRAPHY call to $this->hashBlock("<"$list_type">
" . $result . "</"$list_type">").
Michelf/Markdown.php:1040
  - CRYPTOGRAPHY call to $this->hashBlock($codeblock).
Michelf/Markdown.php:1049
  - CRYPTOGRAPHY call to $this->hashPart("<code>"$code"</code>").
Michelf/Markdown.php:1134
  - CRYPTOGRAPHY call to $this->hashPart($span).
Michelf/Markdown.php:1145
  - CRYPTOGRAPHY call to $this->hashPart($span).
Michelf/Markdown.php:1159
  - CRYPTOGRAPHY call to $this->hashPart($span).
Michelf/Markdown.php:1183
  - CRYPTOGRAPHY call to $this->hashPart($span).
Michelf/Markdown.php:1199
  - CRYPTOGRAPHY call to $this->hashPart($span).
Michelf/Markdown.php:1242
  - CRYPTOGRAPHY call to $this->hashBlock("<blockquote>
"$bq"
</blockquote>").
Michelf/Markdown.php:1270
  - CRYPTOGRAPHY call to $this->unhash($value).
Michelf/Markdown.php:1410
  - CRYPTOGRAPHY call to $this->hashPart($link).
Michelf/Markdown.php:1416
  - CRYPTOGRAPHY call to $this->hashPart($link).
Michelf/Markdown.php:1532
  - CRYPTOGRAPHY call to $this->hashPart("&#" . ord($token[1]) . ";").
Michelf/Markdown.php:1540
  - CRYPTOGRAPHY call to $this->hashPart($codespan).
Michelf/Markdown.php:1544
  - CRYPTOGRAPHY call to $this->hashPart($token).
Michelf/MarkdownExtra.php:275
  - CRYPTOGRAPHY call to $this->_hashHTMLBlocks_inMarkdown($text).
Michelf/MarkdownExtra.php:393
  - CRYPTOGRAPHY call to $this->hashPart("", ":").
Michelf/MarkdownExtra.php:471
  - CRYPTOGRAPHY call to $this->_hashHTMLBlocks_inHTML($tag . $text, "hashBlock", true).
Michelf/MarkdownExtra.php:486
  - CRYPTOGRAPHY call to $this->_hashHTMLBlocks_inHTML($tag . $text, "hashClean", false).
Michelf/MarkdownExtra.php:666
  - CRYPTOGRAPHY call to $this->_hashHTMLBlocks_inMarkdown($text, $indent, $tag_name_re, $span_mode).
Michelf/MarkdownExtra.php:702
  - CRYPTOGRAPHY call to $this->hashPart($text, "C").
Michelf/MarkdownExtra.php:806
  - CRYPTOGRAPHY call to $this->hashPart($result).
Michelf/MarkdownExtra.php:822
  - CRYPTOGRAPHY call to $this->unhash($url).
Michelf/MarkdownExtra.php:838
  - CRYPTOGRAPHY call to $this->hashPart($result).
Michelf/MarkdownExtra.php:919
  - CRYPTOGRAPHY call to $this->hashPart($result).
Michelf/MarkdownExtra.php:945
  - CRYPTOGRAPHY call to $this->hashPart($result).
Michelf/MarkdownExtra.php:999
  - CRYPTOGRAPHY call to $this->hashBlock($block).
Michelf/MarkdownExtra.php:1007
  - CRYPTOGRAPHY call to $this->hashBlock($block).
Michelf/MarkdownExtra.php:1150
  - CRYPTOGRAPHY call to $this->hashBlock($text).
Michelf/MarkdownExtra.php:1204
  - CRYPTOGRAPHY call to $this->hashBlock($result).
Michelf/MarkdownExtra.php:1346
  - CRYPTOGRAPHY call to $this->hashBlock($codeblock).
Michelf/MarkdownExtra.php:1405
  - CRYPTOGRAPHY call to $this->unhash($text).
Michelf/MarkdownExtra.php:1616
  - CRYPTOGRAPHY call to $this->hashPart("<abbr>"$abbr"</abbr>").
Michelf/MarkdownExtra.php:1619
  - CRYPTOGRAPHY call to $this->hashPart("<abbr title="$desc"""$abbr"</abbr>"). 

By data type:
file
	PHPRetrievalDetector.file_get_contents($yourfile) - {'file'}
none
	GenericEncryptionDetector.$this->unhash($url) - set()
	GenericEncryptionDetector.$this->hashPart($link) - set()
	GenericEncryptionDetector.$this->hashPart($span) - set()
	GenericEncryptionDetector.$this->hashPart("<abbr title="$desc"""$abbr"</abbr>") - set()
	GenericEncryptionDetector.$this->unhash($url) - set()
	GenericEncryptionDetector.$this->_hashHTMLBlocks_inMarkdown($text) - set()
	GenericEncryptionDetector.$this->hashPart($token) - set()
	GenericEncryptionDetector.$this->hashPart($span) - set()
	GenericEncryptionDetector.$this->hashPart($span) - set()
	GenericEncryptionDetector.$this->hashPart($result) - set()
	GenericEncryptionDetector.$this->hashPart($result) - set()
	GenericEncryptionDetector.$this->hashPart($text, "B") - set()
	GenericEncryptionDetector.$this->hashPart($result) - set()
	GenericEncryptionDetector.$this->hashHTMLBlocks($text) - set()
	GenericEncryptionDetector.$this->hashPart($span) - set()
	GenericEncryptionDetector.$this->hashPart("<code>"$code"</code>") - set()
	GenericEncryptionDetector.$this->unhash($value) - set()
	GenericEncryptionDetector.$this->_hashHTMLBlocks_inHTML($tag . $text, "hashBlock", true) - set()
	GenericEncryptionDetector.$this->hashBlock($block) - set()
	GenericEncryptionDetector.$this->hashBlock("<blockquote>
"$bq"
</blockquote>") - set()
	GenericEncryptionDetector.$this->hashBlock($text) - set()
	GenericEncryptionDetector.$this->unhash($text) - set()
	GenericEncryptionDetector.$this->hashPart($result) - set()
	GenericEncryptionDetector.$this->hashPart($text, "C") - set()
	GenericEncryptionDetector.$this->hashBlock($result) - set()
	GenericEncryptionDetector.$this->hashPart($span) - set()
	GenericEncryptionDetector.$this->hashBlock("<hr"$this->empty_element_suffix) - set()
	GenericEncryptionDetector.$this->hashPart("", ":") - set()
	GenericEncryptionDetector.$this->unhash($text) - set()
	GenericEncryptionDetector.$this->hashBlock($block) - set()
	GenericEncryptionDetector.$this->hashBlock("<"$list_type" start="$ol_start"">" . $result . "</"$list_type">") - set()
	GenericEncryptionDetector.$this->hashPart("&#" . ord($token[1]) . ";") - set()
	GenericEncryptionDetector.$this->hashPart($result) - set()
	GenericEncryptionDetector.$this->hashBlock("<"$list_type">
" . $result . "</"$list_type">") - set()
	GenericEncryptionDetector.$this->hashPart("<abbr>"$abbr"</abbr>") - set()
	GenericEncryptionDetector.$this->hashPart($codespan) - set()
	GenericEncryptionDetector.$this->_hashHTMLBlocks_inMarkdown($text, $indent, $tag_name_re, $span_mode) - set()
	GenericEncryptionDetector.$this->hashPart($link) - set()
	GenericEncryptionDetector.$this->hashBlock($block) - set()
	GenericEncryptionDetector.$this->hashBlock($block) - set()
	GenericEncryptionDetector.$this->hashHTMLBlocks($text) - set()
	GenericEncryptionDetector.$this->_hashHTMLBlocks_inHTML($tag . $text, "hashClean", false) - set()
	GenericEncryptionDetector.$this->hashPart($result) - set()
	GenericEncryptionDetector.$this->hashBlock($text) - set()
	GenericEncryptionDetector.$this->hashPart($result) - set()
	GenericEncryptionDetector.$this->hashPart("<br"$this->empty_element_suffix"
") - set()
	GenericEncryptionDetector.$this->hashPart($result) - set()
	GenericEncryptionDetector.$this->hashBlock($codeblock) - set()
	GenericEncryptionDetector.$this->hashBlock($codeblock) - set()
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:18.218476.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 0 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.030183.

0 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
In total, tainted 0 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 610 nodes as ENCRYPTED
In total, tainted 610 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:13.293405.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:01:50.181888!
CRYPTOGRAPHY call to $this->hashBlock($codeblock).,None,None
CRYPTOGRAPHY call to $this->hashPart("<code>"$code"</code>").,None,None
CRYPTOGRAPHY call to $this->hashPart($span).,None,None
CRYPTOGRAPHY call to $this->hashPart($span).,None,None
CRYPTOGRAPHY call to $this->hashPart($span).,None,None
CRYPTOGRAPHY call to $this->hashPart($span).,None,None
CRYPTOGRAPHY call to $this->hashPart($span).,None,None
CRYPTOGRAPHY call to $this->hashBlock("<blockquote>
"$bq"
</blockquote>").,None,None
CRYPTOGRAPHY call to $this->unhash($value).,None,None
CRYPTOGRAPHY call to $this->hashPart($link).,None,None
CRYPTOGRAPHY call to $this->hashPart($link).,None,None
CRYPTOGRAPHY call to $this->hashPart("&#" . ord($token[1]) . ";").,None,None
CRYPTOGRAPHY call to $this->hashPart($codespan).,None,None
CRYPTOGRAPHY call to $this->hashPart($token).,None,None
CRYPTOGRAPHY call to $this->hashHTMLBlocks($text).,None,None
CRYPTOGRAPHY call to $this->hashBlock($text).,None,None
CRYPTOGRAPHY call to $this->unhash($text).,None,None
CRYPTOGRAPHY call to $this->hashPart($text, "B").,None,None
CRYPTOGRAPHY call to $this->hashHTMLBlocks($text).,None,None
CRYPTOGRAPHY call to $this->hashBlock("<hr"$this->empty_element_suffix).,None,None
CRYPTOGRAPHY call to $this->hashPart("<br"$this->empty_element_suffix"
").,None,None
CRYPTOGRAPHY call to $this->hashPart($result).,None,None
CRYPTOGRAPHY call to $this->unhash($url).,None,None
CRYPTOGRAPHY call to $this->hashPart($result).,None,None
CRYPTOGRAPHY call to $this->hashPart($result).,None,None
CRYPTOGRAPHY call to $this->hashPart($result).,None,None
CRYPTOGRAPHY call to $this->hashBlock($block).,None,None
CRYPTOGRAPHY call to $this->hashBlock($block).,None,None
CRYPTOGRAPHY call to $this->hashBlock("<"$list_type" start="$ol_start"">" . $result . "</"$list_type">").,None,None
CRYPTOGRAPHY call to $this->hashBlock("<"$list_type">
" . $result . "</"$list_type">").,None,None
CRYPTOGRAPHY call to $this->hashBlock($block).,None,None
CRYPTOGRAPHY call to $this->hashBlock($text).,None,None
CRYPTOGRAPHY call to $this->hashBlock($result).,None,None
CRYPTOGRAPHY call to $this->hashBlock($codeblock).,None,None
CRYPTOGRAPHY call to $this->unhash($text).,None,None
CRYPTOGRAPHY call to $this->hashPart("<abbr>"$abbr"</abbr>").,None,None
CRYPTOGRAPHY call to $this->hashPart("<abbr title="$desc"""$abbr"</abbr>").,None,None
CRYPTOGRAPHY call to $this->_hashHTMLBlocks_inMarkdown($text).,None,None
CRYPTOGRAPHY call to $this->hashPart("", ":").,None,None
CRYPTOGRAPHY call to $this->_hashHTMLBlocks_inHTML($tag . $text, "hashBlock", true).,None,None
CRYPTOGRAPHY call to $this->_hashHTMLBlocks_inHTML($tag . $text, "hashClean", false).,None,None
CRYPTOGRAPHY call to $this->_hashHTMLBlocks_inMarkdown($text, $indent, $tag_name_re, $span_mode).,None,None
CRYPTOGRAPHY call to $this->hashPart($text, "C").,None,None
CRYPTOGRAPHY call to $this->hashPart($result).,None,None
CRYPTOGRAPHY call to $this->unhash($url).,None,None
CRYPTOGRAPHY call to $this->hashPart($result).,None,None
CRYPTOGRAPHY call to $this->hashPart($result).,None,None
CRYPTOGRAPHY call to $this->hashPart($result).,None,None
CRYPTOGRAPHY call to $this->hashBlock($block).,None,None
RETRIEVAL call to file_get_contents($yourfile).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found no personal data in the plugin. No analysis needed. 

[main] Complaint? True 

No findings
