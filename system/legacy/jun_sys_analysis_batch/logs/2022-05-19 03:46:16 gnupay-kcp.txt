Timeout in resolving values
Timeout in running neo4j query
Running Main.py on gnupay-kcp

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.725914.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.144369.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 229 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:01.075868.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 3 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.646128.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 2063 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:01.437303.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 6 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.881803.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.071718.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 1538 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:24.144325.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 17120
Added 13281 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 18422
Added 1302 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:02.291595.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gnupay-kcp/config.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gnupay-kcp/gnupay-kcp.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gnupay-kcp/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gnupay-kcp/classes/admin_metabox.class.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gnupay-kcp/classes/kcp_accounttransfer.class.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gnupay-kcp/classes/kcp_ajax.class.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gnupay-kcp/classes/kcp_card_gateway.class.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gnupay-kcp/classes/kcp_easypay.class.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gnupay-kcp/classes/kcp_mobile_ajax.class.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gnupay-kcp/classes/kcp_pay_gateway.class.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gnupay-kcp/classes/kcp_phonepay.class.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gnupay-kcp/classes/kcp_tax.class.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gnupay-kcp/classes/kcp_user_cancel.class.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gnupay-kcp/classes/kcp_user_order_details.class.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gnupay-kcp/classes/kcp_virtualaccount.class.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gnupay-kcp/classes/setting.class.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gnupay-kcp/kcp/escrow.register.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gnupay-kcp/kcp/KCPComLibrary.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gnupay-kcp/kcp/kcp_js.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gnupay-kcp/kcp/m_order_approval_form.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gnupay-kcp/kcp/m_order_approval.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gnupay-kcp/kcp/m_orderform.1.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gnupay-kcp/kcp/m_orderform.2.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gnupay-kcp/kcp/m_orderform.3.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gnupay-kcp/kcp/orderform.1.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gnupay-kcp/kcp/orderform.2.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gnupay-kcp/kcp/orderform.3.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gnupay-kcp/kcp/orderform.4.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gnupay-kcp/kcp/pp_ax_hub_lib.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gnupay-kcp/kcp/pp_ax_hub.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gnupay-kcp/kcp/pp_cli_hub_lib.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gnupay-kcp/kcp/pp_cli_hub.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gnupay-kcp/kcp/pp_cli_result.php' cannot be parsed correct.
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gnupay-kcp/kcp/proc_win.html
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gnupay-kcp/kcp/proc_win.html' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gnupay-kcp/kcp/settle_kcp.inc.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gnupay-kcp/lib/functions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gnupay-kcp/template/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gnupay-kcp/template/order_detail.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gnupay-kcp/template/tax_result.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gnupay-kcp/template/taxsave_form.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:03.465652.

2 Nodes Created
229 PHP_REACHES edges created
3 REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
2063 PHP_REACHES edges created
6 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
14000 PHP_REACHES edges created
14819 PHP_REACHES edges created
1000 PHP_REACHES edges created
1302 PHP_REACHES edges created
1 DIRECTORY_OF edges created
1 FILE_OF edges created
18424 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 6146 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.423022.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 128 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:17.513980.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 19228
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 19228
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 22315
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 22315
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 24426
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 24426
Added 213 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:05.857644.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 304 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.247037.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:08.268766.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 19228
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 19228
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 22315
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 22315
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 24426
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 24426
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:03.563861.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.083274.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.030549.

128 CALLS edges created
517 PHP_REACHES edges created
645 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 695 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.161928.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
3 SQL operations to process.
array_shift($arg)
SQL command (array_shift($arg)) cannot be parsed correct.
array_shift($arg)
SQL command (array_shift($arg)) cannot be parsed correct.
kcp/bin/ -h 2>&1
SQL command (kcp/bin/ -h 2>&1) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [19288, 22381, 26215]
Added 0 SQL nodes. 0 out of 3 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:01.544655.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'$payment_gateways[$payment_method]->get_title()$order->get_payment_method()'' cannot be parsed correct.
HTML code '$'íì¤í¸ê²°ì ì¤ê²°ì '' cannot be parsed correct.
HTML code '$'<br><span style=\'color:green\'>( ìì¤í¬ë¡ )</span>'' cannot be parsed correct.
HTML code '$'ê²°ì ëíì¬ ë§í¬'' cannot be parsed correct.
HTML code '$'<a href=http://admin8.kcp.co.kr" target="_blank">KCPë°ë¡ê°ê¸°</a><br>'' cannot be parsed correct.
HTML code '$'json_encode($res)'' cannot be parsed correct.
HTML code '$'window.open(\'GNUPAY_KCP_CASH_RECEIPT_URLgnupay_kcp_get_config_payment($order_id)_de_kcp_mid&orderid=$post&bill_yn=Y&authno=wp_parse_args($od_cash_info, $default_cash)_receipt_no\', \'taxsave_receipt\', \'width=360,height=647,scrollbars=0,menus=0\');'' cannot be parsed correct.
HTML code '$'add_query_arg(["wc-api" => "gnupay_kcp_tax", "order_id" => $order->id, "tx" => "taxsave"], home_url("/"))'' cannot be parsed correct.
HTML code '$'apply_filters("gnupay_kcp_thankyou_msg", __("ê²°ì í´ ì£¼ìì ê°ì¬í©ëë¤.", GNUPAY_NAME), $this->id)'' cannot be parsed correct.
HTML code '$'apply_filters("gnupay_kcp_order_detail", $html, $order, $payment_method, $payoptions)'' cannot be parsed correct.
HTML code '$'<div class="fade error"><p>join("", $this->errs)</p></div>'' cannot be parsed correct.
HTML code '$'<div class="error">'' cannot be parsed correct.
HTML code '$'gnupay_kcp_mobile_ajaxurl()'' cannot be parsed correct.
HTML code '$'$comm_tax_mny'' cannot be parsed correct.
HTML code '$'$comm_vat_mny'' cannot be parsed correct.
HTML code '$'$comm_free_mny'' cannot be parsed correct.
HTML code '$'gp_ft_nonce_create("kcp_form_nonce")'' cannot be parsed correct.
HTML code '$'GNUPAY_KCP_URL'' cannot be parsed correct.
HTML code '$'$checkout_url'' cannot be parsed correct.
HTML code '$'$checkout_url'' cannot be parsed correct.
HTML code '$'$checkout_url'' cannot be parsed correct.
HTML code '$'<form name="forderform" method="post" action="$checkout_url" autocomplete="off">PHP_EOL'' cannot be parsed correct.
HTML code '$'gc_make_order_field($data, $exclude)'' cannot be parsed correct.
HTML code '$'<input type="hidden" name="checkout_nonce" value="gp_ft_nonce_create("kcp_form_nonce")"PHP_EOL'' cannot be parsed correct.
HTML code '$'<input type="hidden" name="$key" value="$value"PHP_EOL'' cannot be parsed correct.
HTML code '$'</form>PHP_EOL'' cannot be parsed correct.
HTML code '$'gp_ft_nonce_create("kcp_form_nonce")'' cannot be parsed correct.
HTML code '$'iconv("euc-kr", "utf-8", $good_name)'' cannot be parsed correct.
HTML code '$'$good_mny'' cannot be parsed correct.
HTML code '$'iconv("euc-kr", "utf-8", $buyr_name)'' cannot be parsed correct.
HTML code '$'$buyr_tel1'' cannot be parsed correct.
HTML code '$'$buyr_tel2'' cannot be parsed correct.
HTML code '$'$buyr_mail'' cannot be parsed correct.
HTML code '$'$ipgm_date'' cannot be parsed correct.
HTML code '$'$payco_direct'' cannot be parsed correct.
HTML code '$'$g_conf_site_cd'' cannot be parsed correct.
HTML code '$'get_option("blogname")'' cannot be parsed correct.
HTML code '$'$pay_method'' cannot be parsed correct.
HTML code '$'$ordr_idxx'' cannot be parsed correct.
HTML code '$'add_query_arg(["kcppay" => "return", "checkout_nonce" => gp_ft_nonce_create("kcp_form_nonce")], $checkout_url)'' cannot be parsed correct.
HTML code '$'$ActionResult'' cannot be parsed correct.
HTML code '$'ON'' cannot be parsed correct.
HTML code '$'iconv("euc-kr", "utf-8", $rcvr_name)'' cannot be parsed correct.
HTML code '$'$rcvr_tel1'' cannot be parsed correct.
HTML code '$'$rcvr_tel2'' cannot be parsed correct.
HTML code '$'iconv("euc-kr", "utf-8", $rcvr_add1)'' cannot be parsed correct.
HTML code '$'iconv("euc-kr", "utf-8", $rcvr_add2)'' cannot be parsed correct.
HTML code '$'$rcvr_mail'' cannot be parsed correct.
HTML code '$'$rcvr_zipx'' cannot be parsed correct.
HTML code '$'$bask_cntx'' cannot be parsed correct.
HTML code '$'$good_info'' cannot be parsed correct.
HTML code '$'$param_opt_1'' cannot be parsed correct.
HTML code '$'$param_opt_2'' cannot be parsed correct.
HTML code '$'$param_opt_3'' cannot be parsed correct.
HTML code '$'$tablet_size'' cannot be parsed correct.
HTML code '$'N'' cannot be parsed correct.
HTML code '$'$comm_tax_mny'' cannot be parsed correct.
HTML code '$'$gnupay_kcp_payment_de_kcp_mid'' cannot be parsed correct.
HTML code '$'$gnupay_kcp_payment_de_admin_company_name'' cannot be parsed correct.
HTML code '$'$gnupay_kcp_payment_de_kcp_mid'' cannot be parsed correct.
HTML code '$'$gnupay_kcp_payment_de_card_test'' cannot be parsed correct.
HTML code '$'$od_id'' cannot be parsed correct.
HTML code '$'$goods'' cannot be parsed correct.
HTML code '$'$tot_price'' cannot be parsed correct.
HTML code '$'ON'' cannot be parsed correct.
HTML code '$'$good_info'' cannot be parsed correct.
HTML code '$'N'' cannot be parsed correct.
HTML code '$'$comm_tax_mny'' cannot be parsed correct.
HTML code '$'$comm_vat_mny'' cannot be parsed correct.
HTML code '$'$comm_free_mny'' cannot be parsed correct.
HTML code '$'$config_de_kcp_mid'' cannot be parsed correct.
HTML code '$'GC_SHOP_URL'' cannot be parsed correct.
HTML code '$'$comm_vat_mny'' cannot be parsed correct.
HTML code '$'$comm_free_mny'' cannot be parsed correct.
HTML code '$'$res_cd'' cannot be parsed correct.
HTML code '$'$tran_cd'' cannot be parsed correct.
HTML code '$'$enc_info'' cannot be parsed correct.
HTML code '$'$enc_data'' cannot be parsed correct.
HTML code '$'$checkout_url'' cannot be parsed correct.
HTML code '$'GNUPAY_KCP_URL'' cannot be parsed correct.
HTML code '$'gp_ft_nonce_create("kcp_form_nonce")'' cannot be parsed correct.
HTML code '$'$goods'' cannot be parsed correct.
HTML code '$'$tot_price'' cannot be parsed correct.
HTML code '$'$ipgm_date'' cannot be parsed correct.
HTML code '$'$good_info'' cannot be parsed correct.
HTML code '$'$param_opt_1'' cannot be parsed correct.
HTML code '$'$param_opt_2'' cannot be parsed correct.
HTML code '$'$param_opt_3'' cannot be parsed correct.
HTML code '$'$tablet_size'' cannot be parsed correct.
HTML code '$'N'' cannot be parsed correct.
HTML code '$'$comm_tax_mny'' cannot be parsed correct.
HTML code '$'$comm_vat_mny'' cannot be parsed correct.
HTML code '$'$comm_free_mny'' cannot be parsed correct.
HTML code '$'$amt_svc'' cannot be parsed correct.
HTML code '$'$amt_tax'' cannot be parsed correct.
HTML code '$'$pay_type'' cannot be parsed correct.
HTML code '$'$pay_trade_no'' cannot be parsed correct.
HTML code '$'$mod_type'' cannot be parsed correct.
HTML code '$'$mod_value'' cannot be parsed correct.
HTML code '$'$mod_gubn'' cannot be parsed correct.
HTML code '$'$mod_mny'' cannot be parsed correct.
HTML code '$'$rem_mny'' cannot be parsed correct.
HTML code '$'$c_PayPlus->mf_get_res_data("cash_no")'' cannot be parsed correct.
HTML code '$'$c_PayPlus->mf_get_res_data("app_time")'' cannot be parsed correct.
HTML code '$'$c_PayPlus->mf_get_res_data("reg_stat")'' cannot be parsed correct.
HTML code '$'iconv("cp949", "utf-8", $reg_desc)'' cannot be parsed correct.
HTML code '$'add_query_arg(["wc-api" => "gnupay_kcp_tax", "tx" => "pp_cli_result"], home_url("/"))'' cannot be parsed correct.
HTML code '$'$req_tx'' cannot be parsed correct.
HTML code '$'false'' cannot be parsed correct.
HTML code '$'$c_PayPlus_m_res_cd'' cannot be parsed correct.
HTML code '$'iconv("cp949", "utf-8", $res_msg)'' cannot be parsed correct.
HTML code '$'$ordr_idxx'' cannot be parsed correct.
HTML code '$'iconv("utf-8", "cp949", $good_name)'' cannot be parsed correct.
HTML code '$'iconv("utf-8", "cp949", $buyr_name)'' cannot be parsed correct.
HTML code '$'$buyr_tel1'' cannot be parsed correct.
HTML code '$'$buyr_mail'' cannot be parsed correct.
HTML code '$'$comment'' cannot be parsed correct.
HTML code '$'$corp_type'' cannot be parsed correct.
HTML code '$'$corp_tax_type'' cannot be parsed correct.
HTML code '$'$corp_tax_no'' cannot be parsed correct.
HTML code '$'$corp_nm'' cannot be parsed correct.
HTML code '$'$corp_owner_nm'' cannot be parsed correct.
HTML code '$'$corp_addr'' cannot be parsed correct.
HTML code '$'$corp_telno'' cannot be parsed correct.
HTML code '$'$tr_code'' cannot be parsed correct.
HTML code '$'$id_info'' cannot be parsed correct.
HTML code '$'$amt_tot'' cannot be parsed correct.
HTML code '$'$amt_sup'' cannot be parsed correct.
HTML code '$'apply_filters("gp_alert", $html, $url)'' cannot be parsed correct.
HTML code '$'location.replace(str_replace("&amp;", "&", $url)")'' cannot be parsed correct.
HTML code '$'<meta http-equiv="refresh" content="0;url=str_replace("&amp;", "&", $url)" /'' cannot be parsed correct.
HTML code '$'$app_no_subj'' cannot be parsed correct.
HTML code '$'$app_no'' cannot be parsed correct.
HTML code '$'wc_price($od_receipt_price)'' cannot be parsed correct.
HTML code '$'$od_bankname'' cannot be parsed correct.
HTML code '$'$od_deposit_name'' cannot be parsed correct.
HTML code '$'$od_bank_account'' cannot be parsed correct.
HTML code '$'GNUPAY_KCP_URLtemplate/new.css'' cannot be parsed correct.
HTML code '$'$res_cd'' cannot be parsed correct.
HTML code '$'$res_msg'' cannot be parsed correct.
HTML code '$'$cash_no'' cannot be parsed correct.
HTML code '$'window.open(\'GNUPAY_KCP_BILL_RECEIPT_URLmcash_bill&tno=get_post_meta($order_id, "_od_tno", true)&order_no=$order_id&trade_mony=get_post_meta($order_id, "_od_receipt_price", true)\', \'winreceipt\', \'width=500,height=690,scrollbars=yes,resizable=yes\');'' cannot be parsed correct.
HTML code '$'window.open(\'GNUPAY_KCP_BILL_RECEIPT_URLcard_bill&tno=get_post_meta($order_id, "_od_tno", true)&order_no=$order_id&trade_mony=get_post_meta($order_id, "_od_receipt_price", true)\', \'winreceipt\', \'width=470,height=815,scrollbars=yes,resizable=yes\');'' cannot be parsed correct.
HTML code '$'window.open(\'GNUPAY_KCP_CASH_RECEIPT_URL$payoptions_de_kcp_mid&orderid=$order_id&bill_yn=Y&authno=get_post_meta($order_id, "_od_cash_info", true)_receipt_no\', \'taxsave_receipt\', \'width=360,height=647,scrollbars=0,menus=0\');'' cannot be parsed correct.
HTML code '$'add_query_arg(["wc-api" => "gnupay_kcp_tax", "order_id" => $order_id, "tx" => "taxsave"], home_url("/"))'' cannot be parsed correct.
HTML code '$'$app_no'' cannot be parsed correct.
HTML code '$'$od_bank_account'' cannot be parsed correct.
HTML code '$'$od_deposit_name'' cannot be parsed correct.
HTML code '$'gnupay_kcp_get_vbankurl($pay_ids)'' cannot be parsed correct.
HTML code '$'GNUPAY_KCP_BILL_RECEIPT_URL$config_de_kcp_mid&orderid=$ordr_idxx&bill_yn=Y&authno='' cannot be parsed correct.
HTML code '$'sprintf(__("íê¸ììì¦ %s - KCP Online Payment System", GNUPAY_NAME), $req_tx_name)'' cannot be parsed correct.
HTML code '$'$res_cd'' cannot be parsed correct.
HTML code '$'$res_msg'' cannot be parsed correct.
HTML code '$'$cash_no'' cannot be parsed correct.
HTML code '$'$receipt_no'' cannot be parsed correct.
HTML code '$'$reg_stat'' cannot be parsed correct.
HTML code '$'$reg_desc'' cannot be parsed correct.
HTML code '$'preg_replace("/([0-9]{4})([0-9]{2})([0-9]{2})([0-9]{2})([0-9]{2})([0-9]{2})/", "\\1-\\2-\\3 \\4:\\5:\\6", $app_time)'' cannot be parsed correct.
HTML code '$'$receipt_no'' cannot be parsed correct.
HTML code '$'$res_cd'' cannot be parsed correct.
HTML code '$'$res_msg'' cannot be parsed correct.
HTML code '$'$res_cd'' cannot be parsed correct.
HTML code '$'$res_msg'' cannot be parsed correct.
HTML code '$'$receipt_no'' cannot be parsed correct.
HTML code '$'$reg_stat'' cannot be parsed correct.
HTML code '$'$reg_desc'' cannot be parsed correct.
HTML code '$'preg_replace("/([0-9]{4})([0-9]{2})([0-9]{2})([0-9]{2})([0-9]{2})([0-9]{2})/", "\\1-\\2-\\3 \\4:\\5:\\6", $app_time)'' cannot be parsed correct.
HTML code '$'$receipt_no'' cannot be parsed correct.
HTML code '$'$res_cd'' cannot be parsed correct.
HTML code '$'$res_msg'' cannot be parsed correct.
HTML code '$'$order_id'' cannot be parsed correct.
HTML code '$'$amt_tot'' cannot be parsed correct.
HTML code '$'$amt_sup'' cannot be parsed correct.
HTML code '$'$amt_svc'' cannot be parsed correct.
HTML code '$'$amt_tax'' cannot be parsed correct.
HTML code '$'$title'' cannot be parsed correct.
HTML code '$'$order_id'' cannot be parsed correct.
HTML code '$'$goods_name'' cannot be parsed correct.
HTML code '$'$od_name'' cannot be parsed correct.
HTML code '$'$od_email'' cannot be parsed correct.
HTML code '$'$od_tel'' cannot be parsed correct.
HTML code '$'add_query_arg(["wc-api" => "gnupay_kcp_tax", "order_id" => $order_id, "tx" => "pp_cli_hub"], home_url("/"))'' cannot be parsed correct.
HTML code '$'$goods_name'' cannot be parsed correct.
HTML code '$'$od_name'' cannot be parsed correct.
HTML code '$'$od_email'' cannot be parsed correct.
HTML code '$'$od_tel'' cannot be parsed correct.
HTML code '$'$trad_time'' cannot be parsed correct.
HTML code '$'$trad_time'' cannot be parsed correct.
HTML code '$'wc_price($amt_tot)'' cannot be parsed correct.
HTML code '$'wc_price($amt_sup)'' cannot be parsed correct.
HTML code '$'wc_price($amt_svc)'' cannot be parsed correct.
HTML code '$'wc_price($amt_tax)'' cannot be parsed correct.
HTML code '$'ê²°ì ëíì¬ : KCP'' cannot be parsed correct.
HTML code '$'<script>'' cannot be parsed correct.
HTML code '$'</script>'' cannot be parsed correct.
HTML code '$'<noscript>'' cannot be parsed correct.
HTML code '$'</noscript>'' cannot be parsed correct.
HTML code '$'</h1>

    <section>
        <h2>ì£¼ë¬¸ì ë³´</h2>

        <div class="tbl_head01 tbl_wrap">
            <table>
            <colgroup>
                <col class="grid_3">
                <col>
            </colgroup>
            <tbody>
            <tr>
                <th scope="row">'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:19.560669.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.043065.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 21 do_action/apply_filters calls and 36 add_action/add_filter calls. Now connecting do-add pairs.
Added 2 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:02.257781.

2 PHP_REACHES edges created
2 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbplusDetector
### Start running FrontBaseDetector
### Finish running FileProDetector
### Start running HashDetector
### Finish running DbaseDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running FirebirdInterBaseDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running MongoDbDetector
### Start running OpenSSLDetector
### Finish running ArrayElementDetector
### Start running ParadoxDetector
### Finish running Oci8Detector
### Start running PasswordHashingDetector
### Finish running ParadoxDetector
### Start running PhpCurlDetector
### Finish running PhpCurlDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PasswordHashingDetector
### Start running PHPRetrievalDetector
### Finish running HashDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPRetrievalDetector
### Start running PhpVarDetector
### Finish running OpenSSLDetector
### Start running PostgreSQLDetector
### Finish running PHPIncludedDetector
### Start running PropertyDetector
### Finish running PostgreSQLDetector
### Start running Sqlite3Detector
### Finish running PhpVarDetector
### Start running SqliteDetector
### Finish running PHPStorageDetector
### Start running SqlServerDetector
### Finish running SqliteDetector
### Start running SybaseDetector
### Finish running Sqlite3Detector
### Start running TokyoTyrantDetector
### Finish running PropertyDetector
### Start running UserInputDetector
### Finish running maxdbDetector
### Start running VariableDetector
### Finish running MySQLiDetector
### Start running WordpressHashingFnDetector
### Finish running SybaseDetector
### Start running WordPressRemoteDetector
### Finish running TokyoTyrantDetector
### Start running WordPressRetrievalDetector
### Finish running SqlServerDetector
### Start running WordPressStorageDetector
### Finish running WordPressRemoteDetector
### Start running WP_UserDetector
### Finish running WordpressHashingFnDetector
### Start running GenericDatabaseUsageDetector
### Finish running WP_UserDetector
### Start running GenericEncryptionDetector
### Finish running UserInputDetector
### Start running DeletionDetector
### Finish running GenericEncryptionDetector
### Start running UninstallDetector
### Finish running GenericDatabaseUsageDetector
### Finish running VariableDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running WordPressStorageDetector
### Finish running WordPressRetrievalDetector
### Finished running detectors
lib/functions.php:6
  - MD5 called with parameters [NONCE_SALT, secret, session_id, DB_PASSWORD]. Ignore if [NONCE_SALT, secret, session_id, DB_PASSWORD] does not contain personal information.
lib/functions.php:19
  - SHA1 called with parameters [salt, secret, maxTime]. Ignore if [salt, secret, maxTime] does not contain personal information.
lib/functions.php:41
  - SHA1 called with parameters [salt, secret, maxTime]. Ignore if [salt, secret, maxTime] does not contain personal information. 

gnupay-kcp.php:159
  - STORAGE call to fwrite($handle, "Order deny,allow" . "
").
  - Data types: file
gnupay-kcp.php:160
  - STORAGE call to fwrite($handle, "Deny from all" . "
").
  - Data types: file
lib/functions.php:249
  - STORAGE call to fwrite($fp, $msg).
  - Data types: file 

classes/kcp_tax.class.php:75
  - object property '$order->billing_first_name' of personal types {'first_name'} is found.
  - Data types: first_name
classes/kcp_tax.class.php:75
  - object property '$order->billing_last_name' of personal types {'last_name'} is found.
  - Data types: last_name
classes/kcp_tax.class.php:76
  - object property '$order->billing_email' of personal types {'email'} is found.
  - Data types: email 

classes/kcp_card_gateway.class.php:717
  - variable '$user_name' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
classes/kcp_card_gateway.class.php:722
  - variable '$user_name' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
classes/kcp_card_gateway.class.php:730
  - variable '$user_name' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
classes/kcp_tax.class.php:76
  - variable '$od_email' of personal types {'email'} is found.
  - Data types: email
classes/kcp_user_cancel.class.php:47
  - variable '$user_name' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
classes/kcp_user_cancel.class.php:54
  - variable '$user_name' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
lib/functions.php:688
  - variable '$user_name' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
lib/functions.php:693
  - variable '$user_name' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
template/taxsave_form.php:144
  - variable '$od_email' of personal types {'email'} is found.
  - Data types: email
template/taxsave_form.php:165
  - variable '$od_email' of personal types {'email'} is found.
  - Data types: email 

classes/admin_metabox.class.php:20
  - RETRIEVAL call to get_post_meta($post->ID, "_payment_method", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
classes/admin_metabox.class.php:52
  - RETRIEVAL call to get_post_meta($order_id, "_od_pg", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
classes/admin_metabox.class.php:53
  - RETRIEVAL call to get_post_meta($order_id, "_od_pay_method", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
classes/admin_metabox.class.php:54
  - RETRIEVAL call to get_post_meta($order_id, "_od_tno", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
classes/admin_metabox.class.php:55
  - RETRIEVAL call to get_post_meta($order_id, "_od_app_no", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
classes/admin_metabox.class.php:56
  - RETRIEVAL call to get_post_meta($order_id, "_od_receipt_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
classes/admin_metabox.class.php:57
  - RETRIEVAL call to get_post_meta($order_id, "_od_test", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
classes/admin_metabox.class.php:58
  - RETRIEVAL call to get_post_meta($order_id, "_od_escrow", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
classes/admin_metabox.class.php:80
  - RETRIEVAL call to get_post_meta($order->id, "_od_cash_info", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
classes/admin_metabox.class.php:81
  - RETRIEVAL call to get_post_meta($order->id, "_od_cash", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
classes/kcp_accounttransfer.class.php:95
  - RETRIEVAL call to get_option($this->plugin_id . $this->gnupay_kcp_card . "_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
classes/kcp_card_gateway.class.php:58
  - RETRIEVAL call to $this->get_option("title") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
classes/kcp_card_gateway.class.php:59
  - RETRIEVAL call to $this->get_option("description") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
classes/kcp_card_gateway.class.php:60
  - RETRIEVAL call to $this->get_option("instructions", $this->description) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
classes/kcp_card_gateway.class.php:61
  - RETRIEVAL call to $this->get_option("de_pay_complete_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
classes/kcp_card_gateway.class.php:62
  - RETRIEVAL call to $this->get_option("de_cancel_possible_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
classes/kcp_card_gateway.class.php:127
  - RETRIEVAL call to get_option($this->plugin_id . $pid . "_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
classes/kcp_card_gateway.class.php:159
  - RETRIEVAL call to get_option($this->plugin_id . $this->gnupay_kcp_card . "_settings", null) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
classes/kcp_card_gateway.class.php:256
  - RETRIEVAL call to get_post_meta($order_id, "_payment_method", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
classes/kcp_card_gateway.class.php:257
  - RETRIEVAL call to get_post_meta($order_id, "_od_tax_flag", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
classes/kcp_card_gateway.class.php:349
  - RETRIEVAL call to get_post_meta($order_id, "_od_tno", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
classes/kcp_card_gateway.class.php:435
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
classes/kcp_card_gateway.class.php:499
  - RETRIEVAL call to get_post_meta($order_id, "_od_tno", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
classes/kcp_card_gateway.class.php:556
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
classes/kcp_card_gateway.class.php:593
  - RETRIEVAL call to get_post_meta($order_id, "_payment_method", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
classes/kcp_card_gateway.class.php:594
  - RETRIEVAL call to get_post_meta($order_id, "_payment_method_title", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
classes/kcp_card_gateway.class.php:628
  - RETRIEVAL call to get_option($this->plugin_id . $pid . "_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
classes/kcp_card_gateway.class.php:716
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
classes/kcp_easypay.class.php:95
  - RETRIEVAL call to get_option($this->plugin_id . $this->gnupay_kcp_card . "_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
classes/kcp_mobile_ajax.class.php:11
  - RETRIEVAL call to get_post_meta($order_id, "_payment_method", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
classes/kcp_mobile_ajax.class.php:15
  - RETRIEVAL call to get_option($this->plugin_id . $gnupay_kcp_card_payname . "_settings", null) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
classes/kcp_mobile_ajax.class.php:17
  - RETRIEVAL call to get_option($this->plugin_id . $gnupay_kcp_card_payname . "_settings", null) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
classes/kcp_pay_gateway.class.php:35
  - RETRIEVAL call to $this->get_option("title") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
classes/kcp_phonepay.class.php:95
  - RETRIEVAL call to get_option($this->plugin_id . $this->gnupay_kcp_card . "_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
classes/kcp_tax.class.php:79
  - RETRIEVAL call to get_post_meta($order->id, "_od_tax_mny", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
classes/kcp_tax.class.php:80
  - RETRIEVAL call to get_post_meta($order->id, "_od_vat_mny", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
classes/kcp_tax.class.php:81
  - RETRIEVAL call to get_post_meta($order->id, "_od_free_mny", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
classes/kcp_user_cancel.class.php:37
  - RETRIEVAL call to get_post_meta($order->get_order_number(), "_payment_method", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
classes/kcp_user_cancel.class.php:46
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
classes/kcp_user_cancel.class.php:90
  - RETRIEVAL call to get_post_meta($order->get_order_number(), "_payment_method", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
classes/kcp_user_cancel.class.php:105
  - RETRIEVAL call to get_option($this->plugin_id . $payment_method . "_settings", null) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
classes/kcp_user_order_details.class.php:21
  - RETRIEVAL call to get_post_meta($order_id, "_payment_method", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
classes/kcp_user_order_details.class.php:22
  - RETRIEVAL call to get_post_meta($order_id, "_payment_method_title", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
classes/kcp_user_order_details.class.php:47
  - RETRIEVAL call to get_post_meta($order_id, "_od_app_no", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
classes/kcp_user_order_details.class.php:54
  - RETRIEVAL call to get_post_meta($order_id, "_od_app_no", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
classes/kcp_user_order_details.class.php:61
  - RETRIEVAL call to get_post_meta($order_id, "_od_bank_account", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
classes/kcp_user_order_details.class.php:68
  - RETRIEVAL call to get_post_meta($order_id, "_od_tno", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
classes/kcp_user_order_details.class.php:69
  - RETRIEVAL call to get_post_meta($order_id, "_od_bankname", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
classes/kcp_user_order_details.class.php:70
  - RETRIEVAL call to get_post_meta($order_id, "_od_depositor", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
classes/kcp_user_order_details.class.php:72
  - RETRIEVAL call to get_post_meta($order_id, "_od_account", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
classes/kcp_user_order_details.class.php:73
  - RETRIEVAL call to get_post_meta($order_id, "od_va_date", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
classes/kcp_user_order_details.class.php:75
  - RETRIEVAL call to get_post_meta($order_id, "pg_process_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
classes/kcp_user_order_details.class.php:92
  - RETRIEVAL call to get_option($this->plugin_id . $gnupay_kcp_card_payname . "_settings", null) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
classes/kcp_virtualaccount.class.php:213
  - RETRIEVAL call to get_post_meta($order_id, "_od_tno", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
classes/kcp_virtualaccount.class.php:214
  - RETRIEVAL call to get_option($this->plugin_id . $this->id . "_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
classes/kcp_virtualaccount.class.php:302
  - RETRIEVAL call to get_option($this->plugin_id . $this->gnupay_kcp_card . "_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
gnupay-kcp.php:188
  - RETRIEVAL call to get_option("active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
kcp/m_order_approval_form.php:125
  - RETRIEVAL call to get_option("blogname") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
kcp/m_order_approval_form.php:228
  - RETRIEVAL call to get_post_meta($ordr_idxx, GNUPAY_KCP_ORDER_TMP, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
kcp/pp_cli_hub.php:28
  - RETRIEVAL call to get_post_meta($order->id, "_od_cash", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
lib/functions.php:436
  - RETRIEVAL call to get_option($plugin_id . $gnupay_kcp_card_payname . "_settings", null) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/functions.php:447
  - RETRIEVAL call to get_post_meta($order_id, "_payment_method", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
lib/functions.php:451
  - RETRIEVAL call to get_option($plugin_id . $gnupay_kcp_card_payname . "_settings", null) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/functions.php:453
  - RETRIEVAL call to get_option($plugin_id . $payment_method . "_settings", null) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/functions.php:687
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
template/order_detail.php:7
  - RETRIEVAL call to get_post_meta($order_id, "_od_tno", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
template/order_detail.php:8
  - RETRIEVAL call to get_post_meta($order_id, "_od_receipt_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
template/order_detail.php:79
  - RETRIEVAL call to get_post_meta($order_id, "_od_cash", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
template/order_detail.php:80
  - RETRIEVAL call to get_post_meta($order_id, "_od_cash_info", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
template/tax_result.php:4
  - RETRIEVAL call to get_post_meta($ordr_idxx, "_is_test", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta 

classes/kcp_accounttransfer.class.php:103
  - STORAGE call to update_option($this->plugin_id . $this->gnupay_kcp_card . "_settings", $kcp_options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
classes/kcp_ajax.class.php:55
  - STORAGE call to update_post_meta($order_id, "_payment_method", $payment_method) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
classes/kcp_ajax.class.php:63
  - STORAGE call to update_post_meta($order_id, "_payment_method_title", $payment_method_title) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
classes/kcp_ajax.class.php:90
  - STORAGE call to update_post_meta($order_id, "_order_tmp_kcp", $dt_data) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
classes/kcp_card_gateway.class.php:132
  - STORAGE call to update_option($this->plugin_id . $pay_ids["bank"] . "_settings", $store_options["bank"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
classes/kcp_card_gateway.class.php:137
  - STORAGE call to update_option($this->plugin_id . $pay_ids["vbank"] . "_settings", $store_options["vbank"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
classes/kcp_card_gateway.class.php:142
  - STORAGE call to update_option($this->plugin_id . $pay_ids["phone"] . "_settings", $store_options["phone"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
classes/kcp_card_gateway.class.php:147
  - STORAGE call to update_option($this->plugin_id . $pay_ids["easy"] . "_settings", $store_options["easy"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
classes/kcp_card_gateway.class.php:751
  - STORAGE call to update_post_meta($order_id, "_od_tax_flag", 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
classes/kcp_card_gateway.class.php:754
  - STORAGE call to update_post_meta($order_id, "_od_pg", "kcp") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
classes/kcp_card_gateway.class.php:755
  - STORAGE call to update_post_meta($order_id, "_od_pay_method", $pay_method) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
classes/kcp_card_gateway.class.php:756
  - STORAGE call to update_post_meta($order_id, "_od_tno", isset($tno)$tno"") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
classes/kcp_card_gateway.class.php:757
  - STORAGE call to update_post_meta($order_id, "_od_app_no", isset($app_no)$app_no"") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
classes/kcp_card_gateway.class.php:760
  - STORAGE call to update_post_meta($order_id, "_od_receipt_price", 0) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
classes/kcp_card_gateway.class.php:762
  - STORAGE call to update_post_meta($order_id, "_od_receipt_price", isset($amount)$amount0) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
classes/kcp_card_gateway.class.php:765
  - STORAGE call to update_post_meta($order_id, "_od_tax_mny", $od_tax_mny) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
classes/kcp_card_gateway.class.php:766
  - STORAGE call to update_post_meta($order_id, "_od_vat_mny", $od_vat_mny) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
classes/kcp_card_gateway.class.php:767
  - STORAGE call to update_post_meta($order_id, "_od_free_mny", $od_free_mny) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
classes/kcp_card_gateway.class.php:770
  - STORAGE call to update_post_meta($order_id, "_od_test", 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
classes/kcp_card_gateway.class.php:774
  - STORAGE call to update_post_meta($order_id, "_od_escrow", 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
classes/kcp_card_gateway.class.php:778
  - STORAGE call to update_post_meta($order_id, "_od_bankname", iconv("cp949", "utf-8", $bankname)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
classes/kcp_card_gateway.class.php:779
  - STORAGE call to update_post_meta($order_id, "_od_depositor", iconv("cp949", "utf-8", $depositor)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
classes/kcp_card_gateway.class.php:780
  - STORAGE call to update_post_meta($order_id, "_od_account", $account) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
classes/kcp_card_gateway.class.php:781
  - STORAGE call to update_post_meta($order_id, "_od_va_date", $va_date) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
classes/kcp_easypay.class.php:103
  - STORAGE call to update_option($this->plugin_id . $this->gnupay_kcp_card . "_settings", $kcp_options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
classes/kcp_phonepay.class.php:103
  - STORAGE call to update_option($this->plugin_id . $this->gnupay_kcp_card . "_settings", $kcp_options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
classes/kcp_virtualaccount.class.php:219
  - STORAGE call to update_post_meta($order_id, "_od_receipt_price", isset($ipgm_mnyx)$ipgm_mnyx"") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
classes/kcp_virtualaccount.class.php:220
  - STORAGE call to update_post_meta($order_id, "_od_receipt_time", isset($tx_tm)$tx_tm"") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
classes/kcp_virtualaccount.class.php:310
  - STORAGE call to update_option($this->plugin_id . $this->gnupay_kcp_card . "_settings", $kcp_options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
kcp/pp_cli_hub.php:262
  - STORAGE call to update_post_meta($order_id, "_od_cash", 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
kcp/pp_cli_hub.php:263
  - STORAGE call to update_post_meta($order_id, "_od_cash_no", $cash_no) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
kcp/pp_cli_hub.php:264
  - STORAGE call to update_post_meta($order_id, "_od_cash_info", $cash_info) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
lib/functions.php:675
  - STORAGE call to update_post_meta($order_id, "_payment_method", $payment_method) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
lib/functions.php:685
  - STORAGE call to update_post_meta($order_id, "_payment_method_title", $payment_title) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta 

lib/functions.php:16
  - CRYPTOGRAPHY call to gp_ft_nonce_generate_hash(). 

By data type:
email
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
file
	PHPStorageDetector.fwrite($fp, $msg) - {'file'}
	PHPStorageDetector.fwrite($handle, "Deny from all" . "
") - {'file'}
	PHPStorageDetector.fwrite($handle, "Order deny,allow" . "
") - {'file'}
first_name
	PropertyDetector.(unknown) - {'first_name'}
last_name
	PropertyDetector.(unknown) - {'last_name'}
none
	GenericEncryptionDetector.gp_ft_nonce_generate_hash() - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
option
	WordPressStorageDetector.update_option($this->plugin_id . $pay_ids["bank"] . "_settings", $store_options["bank"]) - {'option'}
	WordPressStorageDetector.update_option($this->plugin_id . $pay_ids["phone"] . "_settings", $store_options["phone"]) - {'option'}
	WordPressRetrievalDetector.get_option($this->plugin_id . $payment_method . "_settings", null) - {'option'}
	WordPressRetrievalDetector.get_option($this->plugin_id . $gnupay_kcp_card_payname . "_settings", null) - {'option'}
	WordPressStorageDetector.update_option($this->plugin_id . $this->gnupay_kcp_card . "_settings", $kcp_options) - {'option'}
	WordPressRetrievalDetector.get_option($this->plugin_id . $pid . "_settings") - {'option'}
	WordPressStorageDetector.update_option($this->plugin_id . $pay_ids["easy"] . "_settings", $store_options["easy"]) - {'option'}
	WordPressRetrievalDetector.get_option($this->plugin_id . $pid . "_settings") - {'option'}
	WordPressRetrievalDetector.get_option($this->plugin_id . $this->gnupay_kcp_card . "_settings") - {'option'}
	WordPressRetrievalDetector.$this->get_option("title") - {'option'}
	WordPressRetrievalDetector.get_option($this->plugin_id . $this->gnupay_kcp_card . "_settings") - {'option'}
	WordPressStorageDetector.update_option($this->plugin_id . $this->gnupay_kcp_card . "_settings", $kcp_options) - {'option'}
	WordPressStorageDetector.update_option($this->plugin_id . $pay_ids["vbank"] . "_settings", $store_options["vbank"]) - {'option'}
	WordPressRetrievalDetector.get_option($this->plugin_id . $this->id . "_settings") - {'option'}
	WordPressRetrievalDetector.get_option($this->plugin_id . $gnupay_kcp_card_payname . "_settings", null) - {'option'}
	WordPressRetrievalDetector.get_option($plugin_id . $payment_method . "_settings", null) - {'option'}
	WordPressStorageDetector.update_option($this->plugin_id . $this->gnupay_kcp_card . "_settings", $kcp_options) - {'option'}
	WordPressStorageDetector.update_option($this->plugin_id . $this->gnupay_kcp_card . "_settings", $kcp_options) - {'option'}
	WordPressRetrievalDetector.get_option($this->plugin_id . $this->gnupay_kcp_card . "_settings") - {'option'}
	WordPressRetrievalDetector.$this->get_option("de_pay_complete_status") - {'option'}
	WordPressRetrievalDetector.get_option($plugin_id . $gnupay_kcp_card_payname . "_settings", null) - {'option'}
	WordPressRetrievalDetector.get_option("blogname") - {'option'}
	WordPressRetrievalDetector.get_option($this->plugin_id . $this->gnupay_kcp_card . "_settings", null) - {'option'}
	WordPressRetrievalDetector.get_option($this->plugin_id . $gnupay_kcp_card_payname . "_settings", null) - {'option'}
	WordPressRetrievalDetector.get_option($this->plugin_id . $this->gnupay_kcp_card . "_settings") - {'option'}
	WordPressRetrievalDetector.$this->get_option("description") - {'option'}
	WordPressRetrievalDetector.$this->get_option("instructions", $this->description) - {'option'}
	WordPressRetrievalDetector.get_option("active_plugins") - {'option'}
	WordPressRetrievalDetector.$this->get_option("de_cancel_possible_status") - {'option'}
	WordPressRetrievalDetector.$this->get_option("title") - {'option'}
	WordPressRetrievalDetector.get_option($plugin_id . $gnupay_kcp_card_payname . "_settings", null) - {'option'}
post_meta
	WordPressStorageDetector.update_post_meta($order_id, "_od_test", 1) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_od_receipt_price", 0) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_order_tmp_kcp", $dt_data) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_od_cash_no", $cash_no) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_payment_method_title", $payment_method_title) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_od_tno", isset($tno)$tno"") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "pg_process_price", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order->id, "_od_cash", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_od_receipt_price", isset($ipgm_mnyx)$ipgm_mnyx"") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_od_tno", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_payment_method_title", $payment_title) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_payment_method", $payment_method) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_od_receipt_price", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_od_receipt_price", isset($amount)$amount0) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_od_depositor", iconv("cp949", "utf-8", $depositor)) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_od_tax_mny", $od_tax_mny) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_od_free_mny", $od_free_mny) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order->get_order_number(), "_payment_method", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order->id, "_od_cash", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_od_cash", 1) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_od_cash", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_payment_method_title", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_od_receipt_price", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order->id, "_od_cash_info", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_od_pay_method", $pay_method) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_od_bankname", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_od_tax_flag", 1) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_od_receipt_time", isset($tx_tm)$tx_tm"") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_od_vat_mny", $od_vat_mny) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_od_app_no", isset($app_no)$app_no"") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_od_tno", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_od_pg", "kcp") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_payment_method", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_od_escrow", 1) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_od_bankname", iconv("cp949", "utf-8", $bankname)) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_od_cash_info", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_od_tax_flag", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_od_bank_account", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_payment_method", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order->id, "_od_vat_mny", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_od_test", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_od_pg", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_od_app_no", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_od_account", $account) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_payment_method", $payment_method) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_od_app_no", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "od_va_date", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_od_depositor", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_od_pay_method", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_od_app_no", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_od_cash_info", $cash_info) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order->id, "_od_free_mny", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_od_tno", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($ordr_idxx, "_is_test", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order->get_order_number(), "_payment_method", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_payment_method_title", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_od_va_date", $va_date) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_od_tno", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_od_escrow", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($ordr_idxx, GNUPAY_KCP_ORDER_TMP, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "_payment_method", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_payment_method", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_od_tno", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_payment_method", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_od_account", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_od_tno", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_payment_method", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order->id, "_od_tax_mny", true) - {'post_meta'}
user
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
user_meta
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:20.209494.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 1276 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.612947.

!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 3771
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 5097
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 4308
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 9253
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 26767
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 25115
1000 STORE_REACHES edges created
1276 STORE_REACHES edges created
1276 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 83 nodes as PERSONAL
In total, tainted 83 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 35 nodes as ENCRYPTED
In total, tainted 35 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:03.237555.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:02:31.283605!
CRYPTOGRAPHY call to gp_ft_nonce_generate_hash().,None,None
SHA1 called with parameters [salt, secret, maxTime]. Ignore if [salt, secret, maxTime] does not contain personal information.,sha1,None
SHA1 called with parameters [salt, secret, maxTime]. Ignore if [salt, secret, maxTime] does not contain personal information.,sha1,None
MD5 called with parameters [NONCE_SALT, secret, session_id, DB_PASSWORD]. Ignore if [NONCE_SALT, secret, session_id, DB_PASSWORD] does not contain personal information.,md5,None
STORAGE call to fwrite($handle, "Order deny,allow" . "
").,None,None
STORAGE call to fwrite($handle, "Deny from all" . "
").,None,None
STORAGE call to fwrite($fp, $msg).,None,None
object property '$order->billing_last_name' of personal types {'last_name'} is found.,,None
object property '$order->billing_first_name' of personal types {'first_name'} is found.,,None
object property '$order->billing_email' of personal types {'email'} is found.,,None
variable '$user_name' of personal types {'user_meta', 'user'} is found.,,None
variable '$user_name' of personal types {'user_meta', 'user'} is found.,,None
variable '$user_name' of personal types {'user_meta', 'user'} is found.,,None
variable '$od_email' of personal types {'email'} is found.,,None
variable '$user_name' of personal types {'user_meta', 'user'} is found.,,None
variable '$user_name' of personal types {'user_meta', 'user'} is found.,,None
variable '$user_name' of personal types {'user_meta', 'user'} is found.,,None
variable '$user_name' of personal types {'user_meta', 'user'} is found.,,None
variable '$od_email' of personal types {'email'} is found.,,None
variable '$od_email' of personal types {'email'} is found.,,None
RETRIEVAL call to get_post_meta($post->ID, "_payment_method", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_od_pg", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_od_pay_method", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_od_tno", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_od_app_no", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_od_receipt_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_od_test", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_od_escrow", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order->id, "_od_cash_info", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order->id, "_od_cash", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->plugin_id . $this->gnupay_kcp_card . "_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->plugin_id . $pid . "_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->plugin_id . $this->gnupay_kcp_card . "_settings", null) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_payment_method", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_od_tax_flag", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_od_tno", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_post_meta($order_id, "_od_tno", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to $this->get_option("title") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to $this->get_option("description") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_payment_method", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_payment_method_title", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to $this->get_option("instructions", $this->description) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $this->get_option("de_pay_complete_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to $this->get_option("de_cancel_possible_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->plugin_id . $pid . "_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_option($this->plugin_id . $this->gnupay_kcp_card . "_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_payment_method", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->plugin_id . $gnupay_kcp_card_payname . "_settings", null) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->plugin_id . $gnupay_kcp_card_payname . "_settings", null) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $this->get_option("title") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->plugin_id . $this->gnupay_kcp_card . "_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order->id, "_od_tax_mny", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order->id, "_od_vat_mny", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order->id, "_od_free_mny", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->plugin_id . $payment_method . "_settings", null) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order->get_order_number(), "_payment_method", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_post_meta($order->get_order_number(), "_payment_method", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_payment_method", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_payment_method_title", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_od_app_no", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_od_app_no", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_od_bank_account", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_od_tno", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_od_bankname", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_od_depositor", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_od_account", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "od_va_date", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "pg_process_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->plugin_id . $gnupay_kcp_card_payname . "_settings", null) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_od_tno", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->plugin_id . $this->id . "_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->plugin_id . $this->gnupay_kcp_card . "_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("blogname") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($ordr_idxx, GNUPAY_KCP_ORDER_TMP, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order->id, "_od_cash", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($plugin_id . $gnupay_kcp_card_payname . "_settings", null) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_payment_method", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($plugin_id . $gnupay_kcp_card_payname . "_settings", null) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option($plugin_id . $payment_method . "_settings", null) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_post_meta($order_id, "_od_tno", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_od_cash", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_od_receipt_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_od_cash_info", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($ordr_idxx, "_is_test", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
STORAGE call to update_option($this->plugin_id . $this->gnupay_kcp_card . "_settings", $kcp_options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($order_id, "_payment_method", $payment_method) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_payment_method_title", $payment_method_title) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_order_tmp_kcp", $dt_data) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option($this->plugin_id . $pay_ids["bank"] . "_settings", $store_options["bank"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option($this->plugin_id . $pay_ids["vbank"] . "_settings", $store_options["vbank"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option($this->plugin_id . $pay_ids["phone"] . "_settings", $store_options["phone"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option($this->plugin_id . $pay_ids["easy"] . "_settings", $store_options["easy"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($order_id, "_od_tax_flag", 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_od_pg", "kcp") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_od_pay_method", $pay_method) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_od_tno", isset($tno)$tno"") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_od_app_no", isset($app_no)$app_no"") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_od_receipt_price", 0) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_od_receipt_price", isset($amount)$amount0) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_od_tax_mny", $od_tax_mny) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_od_vat_mny", $od_vat_mny) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_od_free_mny", $od_free_mny) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_od_test", 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_od_escrow", 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_od_bankname", iconv("cp949", "utf-8", $bankname)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_od_depositor", iconv("cp949", "utf-8", $depositor)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_od_account", $account) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_od_va_date", $va_date) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option($this->plugin_id . $this->gnupay_kcp_card . "_settings", $kcp_options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option($this->plugin_id . $this->gnupay_kcp_card . "_settings", $kcp_options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($order_id, "_od_receipt_price", isset($ipgm_mnyx)$ipgm_mnyx"") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_od_receipt_time", isset($tx_tm)$tx_tm"") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option($this->plugin_id . $this->gnupay_kcp_card . "_settings", $kcp_options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($order_id, "_od_cash", 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_od_cash_no", $cash_no) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_od_cash_info", $cash_info) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_payment_method", $payment_method) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_payment_method_title", $payment_title) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] Storage check is NONE 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['encryption', 'third_party'] 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? True 

No findings
