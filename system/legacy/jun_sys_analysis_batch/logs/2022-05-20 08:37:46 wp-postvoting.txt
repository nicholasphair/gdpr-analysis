Timeout in resolving values
Timeout in running neo4j query
Running Main.py on wp-postvoting

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.552186.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:00.856895.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 0 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.195637.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 4 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.590796.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 373 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:00.790729.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 0 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.590328.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.109596.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 303 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:04.637084.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 3008
Added 2328 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 3240
Added 232 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.175659.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-postvoting/admin_setup.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-postvoting/admin-setup.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-postvoting/wp_postvoting.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-postvoting/wp-postvoting.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.398274.

4 REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
3004 PHP_REACHES edges created
232 PHP_REACHES edges created
3240 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 1033 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.016588.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:02.169379.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 2 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.378537.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 20 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.193413.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.271072.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.040386.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.010476.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.048346.

22 PHP_REACHES edges created
22 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 2 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.101695.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
No SQL nodes to process.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:00.119579.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'get_option("wppv_label")'' cannot be parsed correct.
HTML code '$'get_option("wppv_mouse_over")'' cannot be parsed correct.
HTML code '$'get_option("wppv_voted")'' cannot be parsed correct.
HTML code '$'get_option("wppv_thanks")'' cannot be parsed correct.
HTML code '$'get_option("wppv_refusal")'' cannot be parsed correct.
HTML code '$'get_option("wppv_postnum")'' cannot be parsed correct.
HTML code '$'20'' cannot be parsed correct.
HTML code '$'getPagingQuery()_found_posts'' cannot be parsed correct.
HTML code '$'wppv_total_voted_posts()'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'get_the_ID()'' cannot be parsed correct.
HTML code '$'<a href=get_permalink()" rel="bookmark">wp_trim_words(get_the_title(), 12, " ...")</a>'' cannot be parsed correct.
HTML code '$'get_post_meta(get_the_ID(), "_wppvcount", true)'' cannot be parsed correct.
HTML code '$'get_option("wppv_label")'' cannot be parsed correct.
HTML code '$'get_option("wppv_mouse_over")'' cannot be parsed correct.
HTML code '$'get_option("wppv_voted")'' cannot be parsed correct.
HTML code '$'get_option("wppv_thanks")'' cannot be parsed correct.
HTML code '$'get_option("wppv_refusal")'' cannot be parsed correct.
HTML code '$'getPagingQuery()_found_posts'' cannot be parsed correct.
HTML code '$'wppv_total_voted_posts()'' cannot be parsed correct.
HTML code '$'get_option("wppv_postnum")'' cannot be parsed correct.
HTML code '$'20'' cannot be parsed correct.
HTML code '$'<div id="message" class="updated below-h2"><p>Settings saved.</p></div>PHP_EOL'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'get_the_ID()'' cannot be parsed correct.
HTML code '$'<a href=get_permalink()" rel="bookmark" target="_blank">wp_trim_words(get_the_title(), 12, " ...")</a>'' cannot be parsed correct.
HTML code '$'get_post_meta(get_the_ID(), "_wppvcount", true)'' cannot be parsed correct.
HTML code '$'$this->get_field_id("title")'' cannot be parsed correct.
HTML code '$'$this->get_field_name("title")'' cannot be parsed correct.
HTML code '$'wp_parse_args($instance, $defaults)_title'' cannot be parsed correct.
HTML code '$'$this->get_field_id("numberofposts")'' cannot be parsed correct.
HTML code '$'$this->get_field_id("numberofposts")'' cannot be parsed correct.
HTML code '$'$this->get_field_name("numberofposts")'' cannot be parsed correct.
HTML code '$'wp_parse_args($instance, $defaults)_numberofposts'' cannot be parsed correct.
HTML code '$'$post'' cannot be parsed correct.
HTML code '$'wp_trim_words(get_the_title(), 12, " ...") (get_post_meta(get_the_ID(), "_wppvcount", true))'' cannot be parsed correct.
HTML code '$'$this->get_field_id("title")'' cannot be parsed correct.
HTML code '$'$before_widget'' cannot be parsed correct.
HTML code '$'$before_titleapply_filters("widget_title", $instance["title"])$after_title'' cannot be parsed correct.
HTML code '$'wppv_get_highest_voted_posts($instance["numberofposts"])'' cannot be parsed correct.
HTML code '$'$after_widget'' cannot be parsed correct.
HTML code '$'<div class="tablenav"><div class="tablenav-pages" style="margin: 1em 0">paginate_links(["base" => add_query_arg("pagenum", "%#%"), "format" => "", "prev_next" => true, "prev_text" => __("&laquo; Previous"), "next_text" => __("Next &raquo;"), "total" => $totalPages, "current" => $pagenum])</div></div>'' cannot be parsed correct.
HTML code '$'$post'' cannot be parsed correct.
HTML code '$'wp_trim_words(get_the_title(), 12, " ...") (get_post_meta(get_the_ID(), "_wppvcount", true))'' cannot be parsed correct.
HTML code '$'$this->get_field_id("title")'' cannot be parsed correct.
HTML code '$'$this->get_field_id("title")'' cannot be parsed correct.
HTML code '$'$this->get_field_name("title")'' cannot be parsed correct.
HTML code '$'wp_parse_args($instance, $defaults)_title'' cannot be parsed correct.
HTML code '$'$this->get_field_id("numberofposts")'' cannot be parsed correct.
HTML code '$'$this->get_field_id("numberofposts")'' cannot be parsed correct.
HTML code '$'$this->get_field_name("numberofposts")'' cannot be parsed correct.
HTML code '$'wp_parse_args($instance, $defaults)_numberofposts'' cannot be parsed correct.
HTML code '$'$before_widget'' cannot be parsed correct.
HTML code '$'$before_titleapply_filters("widget_title", $instance["title"])$after_title'' cannot be parsed correct.
HTML code '$'wppv_get_highest_voted_posts($instance["numberofposts"])'' cannot be parsed correct.
HTML code '$'$after_widget'' cannot be parsed correct.
HTML code '$'<div class="tablenav"><div class="tablenav-pages">paginate_links(["base" => add_query_arg("pagenum", "%#%"), "format" => "", "prev_next" => true, "prev_text" => __("&laquo; Previous"), "next_text" => __("Next &raquo;"), "total" => $totalPages, "current" => $pagenum])</div></div>'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'Vote this post'' cannot be parsed correct.
HTML code '$'Vote'' cannot be parsed correct.
HTML code '$'Voted'' cannot be parsed correct.
HTML code '$'Thank you'' cannot be parsed correct.
HTML code '$'Only for registered user'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'Save'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'Vote this post'' cannot be parsed correct.
HTML code '$'Vote'' cannot be parsed correct.
HTML code '$'Voted'' cannot be parsed correct.
HTML code '$'Thank you'' cannot be parsed correct.
HTML code '$'Only for registered user'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'Save'' cannot be parsed correct.
HTML code '$'class="wppv_alt"'' cannot be parsed correct.
HTML code '$'Number of Posts'' cannot be parsed correct.
HTML code '$'" title="'' cannot be parsed correct.
HTML code '$'Title:'' cannot be parsed correct.
HTML code '$'<ul>'' cannot be parsed correct.
HTML code '$'</ul>'' cannot be parsed correct.
HTML code '$'" title="'' cannot be parsed correct.
HTML code '$'Title:'' cannot be parsed correct.
HTML code '$'Number of Posts'' cannot be parsed correct.
HTML code '$'<ul>'' cannot be parsed correct.
HTML code '$'</ul>'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:10.062383.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.045578.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 2 do_action/apply_filters calls and 23 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.697599.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running CubridDetector
### Start running FrontBaseDetector
### Finish running DbplusDetector
### Start running HashDetector
### Finish running FileProDetector
### Start running IBMDb2Detector
### Finish running DbaseDetector
### Start running InformixDetector
### Finish running FirebirdInterBaseDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running Oci8Detector
### Start running OpenSSLDetector
### Finish running MongoDbDetector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running ArrayElementDetector
### Start running PhpCurlDetector
### Finish running HashDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PasswordHashingDetector
### Start running PHPRetrievalDetector
### Finish running PhpCurlDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPIncludedDetector
### Start running PhpVarDetector
### Finish running OpenSSLDetector
### Start running PostgreSQLDetector
### Finish running PhpVarDetector
### Start running PropertyDetector
### Finish running PostgreSQLDetector
### Start running Sqlite3Detector
### Finish running PropertyDetector
### Start running SqliteDetector
### Finish running SqliteDetector
### Start running SqlServerDetector
### Finish running PHPRetrievalDetector
### Start running SybaseDetector
### Finish running PHPStorageDetector
### Start running TokyoTyrantDetector
### Finish running SybaseDetector
### Start running UserInputDetector
### Finish running Sqlite3Detector
### Start running VariableDetector
### Finish running TokyoTyrantDetector
### Start running WordpressHashingFnDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRemoteDetector
### Finish running maxdbDetector
### Start running WordPressRetrievalDetector
### Finish running MySQLiDetector
### Start running WordPressStorageDetector
### Finish running WordPressRemoteDetector
### Start running WP_UserDetector
### Finish running SqlServerDetector
### Start running GenericDatabaseUsageDetector
### Finish running WP_UserDetector
### Start running GenericEncryptionDetector
### Finish running VariableDetector
### Start running DeletionDetector
### Finish running GenericEncryptionDetector
### Start running UninstallDetector
### Finish running GenericDatabaseUsageDetector
### Finish running UserInputDetector
### Finish running DeletionDetector
### Finish running UninstallDetector
### Finish running WordPressStorageDetector
### Finish running WordPressRetrievalDetector
### Finished running detectors
admin-setup.php:9
  - RETRIEVAL call to get_option("wppv_onoff") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin-setup.php:10
  - RETRIEVAL call to get_option("wppv_label") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin-setup.php:11
  - RETRIEVAL call to get_option("wppv_mouse_over") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin-setup.php:12
  - RETRIEVAL call to get_option("wppv_voted") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin-setup.php:13
  - RETRIEVAL call to get_option("wppv_thanks") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin-setup.php:14
  - RETRIEVAL call to get_option("wppv_refusal") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin-setup.php:15
  - RETRIEVAL call to get_option("wppv_top") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin-setup.php:16
  - RETRIEVAL call to get_option("wppv_bottom") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin-setup.php:17
  - RETRIEVAL call to get_option("wppv_postonly") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin-setup.php:18
  - RETRIEVAL call to get_option("wppv_login") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin-setup.php:19
  - RETRIEVAL call to get_option("wppv_postnum") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin-setup.php:38
  - RETRIEVAL call to get_option("wppv_onoff") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin-setup.php:39
  - RETRIEVAL call to get_option("wppv_onoff") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin-setup.php:86
  - RETRIEVAL call to get_option("wppv_login") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin-setup.php:87
  - RETRIEVAL call to get_option("wppv_login") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin-setup.php:157
  - RETRIEVAL call to get_post_meta(get_the_ID(), "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin_setup.php:10
  - RETRIEVAL call to get_option("wppv_onoff") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin_setup.php:11
  - RETRIEVAL call to get_option("wppv_label") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin_setup.php:12
  - RETRIEVAL call to get_option("wppv_mouse_over") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin_setup.php:13
  - RETRIEVAL call to get_option("wppv_voted") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin_setup.php:14
  - RETRIEVAL call to get_option("wppv_thanks") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin_setup.php:15
  - RETRIEVAL call to get_option("wppv_refusal") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin_setup.php:16
  - RETRIEVAL call to get_option("wppv_top") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin_setup.php:17
  - RETRIEVAL call to get_option("wppv_bottom") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin_setup.php:18
  - RETRIEVAL call to get_option("wppv_postonly") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin_setup.php:19
  - RETRIEVAL call to get_option("wppv_login") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin_setup.php:20
  - RETRIEVAL call to get_option("wppv_postnum") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin_setup.php:45
  - RETRIEVAL call to get_post_meta(get_the_ID(), "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin_setup.php:64
  - RETRIEVAL call to get_option("wppv_onoff") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin_setup.php:65
  - RETRIEVAL call to get_option("wppv_onoff") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin_setup.php:112
  - RETRIEVAL call to get_option("wppv_login") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin_setup.php:113
  - RETRIEVAL call to get_option("wppv_login") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-postvoting.php:31
  - RETRIEVAL call to get_option("wppv_onoff") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-postvoting.php:31
  - RETRIEVAL call to get_option("wppv_top") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-postvoting.php:31
  - RETRIEVAL call to get_option("wppv_bottom") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-postvoting.php:36
  - RETRIEVAL call to get_option("wppv_label") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-postvoting.php:36
  - RETRIEVAL call to get_option("wppv_label") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-postvoting.php:37
  - RETRIEVAL call to get_option("wppv_mouse_over") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-postvoting.php:37
  - RETRIEVAL call to get_option("wppv_mouse_over") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-postvoting.php:38
  - RETRIEVAL call to get_option("wppv_refusal") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-postvoting.php:38
  - RETRIEVAL call to get_option("wppv_refusal") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-postvoting.php:48
  - RETRIEVAL call to get_option("wppv_label") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-postvoting.php:48
  - RETRIEVAL call to get_option("wppv_label") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-postvoting.php:49
  - RETRIEVAL call to get_option("wppv_voted") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-postvoting.php:49
  - RETRIEVAL call to get_option("wppv_voted") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-postvoting.php:51
  - RETRIEVAL call to get_option("wppv_login") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-postvoting.php:56
  - RETRIEVAL call to get_post_meta($post_ID, "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-postvoting.php:56
  - RETRIEVAL call to get_post_meta($post_ID, "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-postvoting.php:59
  - RETRIEVAL call to get_post_meta($post_ID, "_wppvuser", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-postvoting.php:59
  - RETRIEVAL call to get_post_meta($post_ID, "_wppvuser", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-postvoting.php:108
  - RETRIEVAL call to get_post_meta($post_ID, "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-postvoting.php:108
  - RETRIEVAL call to get_post_meta($post_ID, "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-postvoting.php:138
  - RETRIEVAL call to get_option("wppv_top") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-postvoting.php:139
  - RETRIEVAL call to get_option("wppv_bottom") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-postvoting.php:140
  - RETRIEVAL call to get_option("wppv_postonly") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-postvoting.php:142
  - RETRIEVAL call to get_option("wppv_onoff") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-postvoting.php:175
  - RETRIEVAL call to get_option("wppv_thanks") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-postvoting.php:175
  - RETRIEVAL call to get_option("wppv_thanks") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-postvoting.php:177
  - RETRIEVAL call to get_post_meta($post_ID, "_wppvuser", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-postvoting.php:177
  - RETRIEVAL call to get_post_meta($post_ID, "_wppvuser", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-postvoting.php:178
  - RETRIEVAL call to get_post_meta($post_ID, "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-postvoting.php:178
  - RETRIEVAL call to get_post_meta($post_ID, "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-postvoting.php:216
  - RETRIEVAL call to get_post_meta($post_id, "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-postvoting.php:216
  - RETRIEVAL call to get_post_meta($post_id, "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-postvoting.php:245
  - RETRIEVAL call to get_post_meta(get_the_ID(), "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-postvoting.php:257
  - RETRIEVAL call to get_post_meta(get_the_ID(), "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-postvoting.php:315
  - RETRIEVAL call to get_option("wppv_postnum") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-postvoting.php:329
  - RETRIEVAL call to get_option("wppv_postnum") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-postvoting.php:329
  - RETRIEVAL call to get_option("wppv_postnum") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp_postvoting.php:34
  - RETRIEVAL call to get_option("wppv_onoff") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp_postvoting.php:34
  - RETRIEVAL call to get_option("wppv_top") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp_postvoting.php:34
  - RETRIEVAL call to get_option("wppv_bottom") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp_postvoting.php:39
  - RETRIEVAL call to get_option("wppv_label") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp_postvoting.php:39
  - RETRIEVAL call to get_option("wppv_label") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp_postvoting.php:40
  - RETRIEVAL call to get_option("wppv_mouse_over") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp_postvoting.php:40
  - RETRIEVAL call to get_option("wppv_mouse_over") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp_postvoting.php:41
  - RETRIEVAL call to get_option("wppv_refusal") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp_postvoting.php:41
  - RETRIEVAL call to get_option("wppv_refusal") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp_postvoting.php:50
  - RETRIEVAL call to get_option("wppv_label") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp_postvoting.php:50
  - RETRIEVAL call to get_option("wppv_label") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp_postvoting.php:51
  - RETRIEVAL call to get_option("wppv_voted") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp_postvoting.php:51
  - RETRIEVAL call to get_option("wppv_voted") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp_postvoting.php:53
  - RETRIEVAL call to get_option("wppv_login") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp_postvoting.php:58
  - RETRIEVAL call to get_post_meta($post_ID, "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp_postvoting.php:58
  - RETRIEVAL call to get_post_meta($post_ID, "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp_postvoting.php:61
  - RETRIEVAL call to get_post_meta($post_ID, "_wppvuser", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp_postvoting.php:61
  - RETRIEVAL call to get_post_meta($post_ID, "_wppvuser", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp_postvoting.php:110
  - RETRIEVAL call to get_post_meta($post_ID, "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp_postvoting.php:110
  - RETRIEVAL call to get_post_meta($post_ID, "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp_postvoting.php:139
  - RETRIEVAL call to get_option("wppv_top") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp_postvoting.php:140
  - RETRIEVAL call to get_option("wppv_bottom") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp_postvoting.php:141
  - RETRIEVAL call to get_option("wppv_postonly") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp_postvoting.php:143
  - RETRIEVAL call to get_option("wppv_onoff") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp_postvoting.php:175
  - RETRIEVAL call to get_option("wppv_thanks") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp_postvoting.php:175
  - RETRIEVAL call to get_option("wppv_thanks") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp_postvoting.php:177
  - RETRIEVAL call to get_post_meta($post_ID, "_wppvuser", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp_postvoting.php:177
  - RETRIEVAL call to get_post_meta($post_ID, "_wppvuser", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp_postvoting.php:178
  - RETRIEVAL call to get_post_meta($post_ID, "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp_postvoting.php:178
  - RETRIEVAL call to get_post_meta($post_ID, "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp_postvoting.php:216
  - RETRIEVAL call to get_post_meta($post_id, "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp_postvoting.php:216
  - RETRIEVAL call to get_post_meta($post_id, "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp_postvoting.php:245
  - RETRIEVAL call to get_post_meta(get_the_ID(), "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp_postvoting.php:255
  - RETRIEVAL call to get_post_meta(get_the_ID(), "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp_postvoting.php:309
  - RETRIEVAL call to get_option("wppv_postnum") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp_postvoting.php:323
  - RETRIEVAL call to get_option("wppv_postnum") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp_postvoting.php:323
  - RETRIEVAL call to get_option("wppv_postnum") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option 

admin-setup.php:169
  - STORAGE call to update_option("wppv_onoff", $_POST["wppv_onoff"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-setup.php:172
  - STORAGE call to update_option("wppv_label", $_POST["wppv_label"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-setup.php:175
  - STORAGE call to update_option("wppv_mouse_over", $_POST["wppv_mouse_over"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-setup.php:178
  - STORAGE call to update_option("wppv_voted", $_POST["wppv_voted"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-setup.php:181
  - STORAGE call to update_option("wppv_thanks", $_POST["wppv_thanks"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-setup.php:184
  - STORAGE call to update_option("wppv_refusal", $_POST["wppv_refusal"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-setup.php:187
  - STORAGE call to update_option("wppv_top", $_POST["wppv_top"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-setup.php:189
  - STORAGE call to update_option("wppv_top", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-setup.php:192
  - STORAGE call to update_option("wppv_bottom", $_POST["wppv_bottom"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-setup.php:194
  - STORAGE call to update_option("wppv_bottom", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-setup.php:197
  - STORAGE call to update_option("wppv_postonly", $_POST["wppv_postonly"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-setup.php:200
  - STORAGE call to update_option("wppv_postonly", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-setup.php:204
  - STORAGE call to update_option("wppv_login", $_POST["wppv_login"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-setup.php:207
  - STORAGE call to update_option("wppv_postnum", $_POST["wppv_postnum"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin_setup.php:180
  - STORAGE call to update_option("wppv_onoff", $_POST["wppv_onoff"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin_setup.php:183
  - STORAGE call to update_option("wppv_label", $_POST["wppv_label"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin_setup.php:186
  - STORAGE call to update_option("wppv_mouse_over", $_POST["wppv_mouse_over"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin_setup.php:189
  - STORAGE call to update_option("wppv_voted", $_POST["wppv_voted"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin_setup.php:192
  - STORAGE call to update_option("wppv_thanks", $_POST["wppv_thanks"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin_setup.php:195
  - STORAGE call to update_option("wppv_refusal", $_POST["wppv_refusal"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin_setup.php:198
  - STORAGE call to update_option("wppv_top", $_POST["wppv_top"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin_setup.php:200
  - STORAGE call to update_option("wppv_top", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin_setup.php:203
  - STORAGE call to update_option("wppv_bottom", $_POST["wppv_bottom"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin_setup.php:205
  - STORAGE call to update_option("wppv_bottom", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin_setup.php:208
  - STORAGE call to update_option("wppv_postonly", $_POST["wppv_postonly"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin_setup.php:211
  - STORAGE call to update_option("wppv_postonly", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin_setup.php:215
  - STORAGE call to update_option("wppv_login", $_POST["wppv_login"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin_setup.php:221
  - STORAGE call to update_option("wppv_postnum", $_POST["wppv_postnum"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
wp-postvoting.php:187
  - STORAGE call to update_post_meta($post_ID, "_wppvuser", $wppvuserNew) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-postvoting.php:191
  - STORAGE call to update_post_meta($post_ID, "_wppvcount", $wppvcountNew) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp_postvoting.php:187
  - STORAGE call to update_post_meta($post_ID, "_wppvuser", $wppvuserNew) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp_postvoting.php:191
  - STORAGE call to update_post_meta($post_ID, "_wppvcount", $wppvcountNew) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta 

By data type:
option
	WordPressRetrievalDetector.get_option("wppv_login") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_refusal") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_bottom") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_refusal") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_bottom") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_top") - {'option'}
	WordPressStorageDetector.update_option("wppv_postnum", $_POST["wppv_postnum"]) - {'option'}
	WordPressStorageDetector.update_option("wppv_top", $_POST["wppv_top"]) - {'option'}
	WordPressStorageDetector.update_option("wppv_postonly", $_POST["wppv_postonly"]) - {'option'}
	WordPressRetrievalDetector.get_option("wppv_top") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_label") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_postnum") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_label") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_postonly") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_login") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_postonly") - {'option'}
	WordPressStorageDetector.update_option("wppv_postnum", $_POST["wppv_postnum"]) - {'option'}
	WordPressStorageDetector.update_option("wppv_postonly", 0) - {'option'}
	WordPressRetrievalDetector.get_option("wppv_bottom") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_voted") - {'option'}
	WordPressStorageDetector.update_option("wppv_login", $_POST["wppv_login"]) - {'option'}
	WordPressStorageDetector.update_option("wppv_refusal", $_POST["wppv_refusal"]) - {'option'}
	WordPressRetrievalDetector.get_option("wppv_onoff") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_refusal") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_onoff") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_mouse_over") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_voted") - {'option'}
	WordPressStorageDetector.update_option("wppv_bottom", $_POST["wppv_bottom"]) - {'option'}
	WordPressRetrievalDetector.get_option("wppv_thanks") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_bottom") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_label") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_label") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_onoff") - {'option'}
	WordPressStorageDetector.update_option("wppv_thanks", $_POST["wppv_thanks"]) - {'option'}
	WordPressRetrievalDetector.get_option("wppv_voted") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_thanks") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_postnum") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_refusal") - {'option'}
	WordPressStorageDetector.update_option("wppv_label", $_POST["wppv_label"]) - {'option'}
	WordPressRetrievalDetector.get_option("wppv_label") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_thanks") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_bottom") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_onoff") - {'option'}
	WordPressStorageDetector.update_option("wppv_mouse_over", $_POST["wppv_mouse_over"]) - {'option'}
	WordPressRetrievalDetector.get_option("wppv_label") - {'option'}
	WordPressStorageDetector.update_option("wppv_voted", $_POST["wppv_voted"]) - {'option'}
	WordPressStorageDetector.update_option("wppv_voted", $_POST["wppv_voted"]) - {'option'}
	WordPressRetrievalDetector.get_option("wppv_onoff") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_top") - {'option'}
	WordPressStorageDetector.update_option("wppv_top", $_POST["wppv_top"]) - {'option'}
	WordPressRetrievalDetector.get_option("wppv_bottom") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_thanks") - {'option'}
	WordPressStorageDetector.update_option("wppv_refusal", $_POST["wppv_refusal"]) - {'option'}
	WordPressStorageDetector.update_option("wppv_top", 0) - {'option'}
	WordPressRetrievalDetector.get_option("wppv_label") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_refusal") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_mouse_over") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_onoff") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_mouse_over") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_mouse_over") - {'option'}
	WordPressStorageDetector.update_option("wppv_bottom", $_POST["wppv_bottom"]) - {'option'}
	WordPressRetrievalDetector.get_option("wppv_onoff") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_voted") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_postnum") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_postnum") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_login") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_login") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_onoff") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_postnum") - {'option'}
	WordPressStorageDetector.update_option("wppv_top", 0) - {'option'}
	WordPressStorageDetector.update_option("wppv_postonly", 0) - {'option'}
	WordPressStorageDetector.update_option("wppv_login", $_POST["wppv_login"]) - {'option'}
	WordPressRetrievalDetector.get_option("wppv_label") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_label") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_top") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_postnum") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_onoff") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_postnum") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_login") - {'option'}
	WordPressStorageDetector.update_option("wppv_onoff", $_POST["wppv_onoff"]) - {'option'}
	WordPressStorageDetector.update_option("wppv_bottom", 0) - {'option'}
	WordPressRetrievalDetector.get_option("wppv_refusal") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_postonly") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_thanks") - {'option'}
	WordPressStorageDetector.update_option("wppv_thanks", $_POST["wppv_thanks"]) - {'option'}
	WordPressRetrievalDetector.get_option("wppv_top") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_mouse_over") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_postonly") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_voted") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_mouse_over") - {'option'}
	WordPressStorageDetector.update_option("wppv_onoff", $_POST["wppv_onoff"]) - {'option'}
	WordPressRetrievalDetector.get_option("wppv_login") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_postnum") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_login") - {'option'}
	WordPressStorageDetector.update_option("wppv_label", $_POST["wppv_label"]) - {'option'}
	WordPressStorageDetector.update_option("wppv_mouse_over", $_POST["wppv_mouse_over"]) - {'option'}
	WordPressRetrievalDetector.get_option("wppv_top") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_label") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_voted") - {'option'}
	WordPressStorageDetector.update_option("wppv_bottom", 0) - {'option'}
	WordPressRetrievalDetector.get_option("wppv_thanks") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_login") - {'option'}
	WordPressRetrievalDetector.get_option("wppv_onoff") - {'option'}
	WordPressStorageDetector.update_option("wppv_postonly", $_POST["wppv_postonly"]) - {'option'}
post_meta
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "_wppvcount", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_ID, "_wppvcount", $wppvcountNew) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_ID, "_wppvuser", $wppvuserNew) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_ID, "_wppvuser", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_ID, "_wppvcount", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_ID, "_wppvuser", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_ID, "_wppvcount", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "_wppvcount", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_ID, "_wppvcount", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "_wppvcount", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_ID, "_wppvcount", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "_wppvcount", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_ID, "_wppvcount", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "_wppvcount", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_ID, "_wppvcount", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_ID, "_wppvcount", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_ID, "_wppvuser", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_ID, "_wppvcount", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "_wppvcount", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "_wppvcount", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_ID, "_wppvcount", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_ID, "_wppvcount", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_ID, "_wppvcount", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "_wppvcount", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_ID, "_wppvuser", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_ID, "_wppvcount", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "_wppvcount", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_ID, "_wppvuser", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "_wppvcount", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_ID, "_wppvuser", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_ID, "_wppvuser", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_ID, "_wppvuser", $wppvuserNew) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_ID, "_wppvcount", $wppvcountNew) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_ID, "_wppvuser", true) - {'post_meta'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:18.277082.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 2248 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.847735.

1000 STORE_REACHES edges created
2000 STORE_REACHES edges created
2248 STORE_REACHES edges created
2248 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
In total, tainted 0 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
In total, tainted 0 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:00.006192.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:00:51.548884!
RETRIEVAL call to get_option("wppv_label") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_mouse_over") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_voted") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_thanks") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_refusal") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_top") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_bottom") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_postonly") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_login") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_postnum") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_onoff") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_onoff") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_login") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_login") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_onoff") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_onoff") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_label") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_login") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_login") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_mouse_over") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_voted") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_thanks") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_refusal") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_top") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_bottom") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_postonly") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_login") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_postnum") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_onoff") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_onoff") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_ID, "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_ID, "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_top") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_bottom") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_postonly") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_onoff") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_thanks") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_thanks") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_ID, "_wppvuser", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_ID, "_wppvuser", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_ID, "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_ID, "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_bottom") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_top") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_onoff") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_postnum") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_postnum") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_postnum") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_label") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_label") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_mouse_over") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_mouse_over") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_refusal") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_refusal") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_label") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_label") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_voted") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_voted") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_login") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_ID, "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_ID, "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_ID, "_wppvuser", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_ID, "_wppvuser", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_ID, "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_ID, "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_top") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_bottom") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_postonly") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_onoff") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_thanks") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_thanks") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_ID, "_wppvuser", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_ID, "_wppvuser", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_ID, "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_ID, "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_postnum") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_postnum") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_postnum") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_top") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_onoff") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_bottom") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_label") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_label") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_mouse_over") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_mouse_over") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_refusal") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_refusal") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_label") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_label") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_voted") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_voted") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wppv_login") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_ID, "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_ID, "_wppvcount", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_ID, "_wppvuser", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_ID, "_wppvuser", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
STORAGE call to update_option("wppv_onoff", $_POST["wppv_onoff"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wppv_label", $_POST["wppv_label"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wppv_mouse_over", $_POST["wppv_mouse_over"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wppv_voted", $_POST["wppv_voted"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wppv_thanks", $_POST["wppv_thanks"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wppv_refusal", $_POST["wppv_refusal"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wppv_top", $_POST["wppv_top"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wppv_top", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wppv_bottom", $_POST["wppv_bottom"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wppv_bottom", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wppv_postonly", $_POST["wppv_postonly"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wppv_postonly", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wppv_login", $_POST["wppv_login"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wppv_postnum", $_POST["wppv_postnum"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wppv_onoff", $_POST["wppv_onoff"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wppv_label", $_POST["wppv_label"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wppv_mouse_over", $_POST["wppv_mouse_over"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wppv_voted", $_POST["wppv_voted"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wppv_thanks", $_POST["wppv_thanks"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wppv_refusal", $_POST["wppv_refusal"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wppv_top", $_POST["wppv_top"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wppv_top", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wppv_bottom", $_POST["wppv_bottom"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wppv_bottom", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wppv_postonly", $_POST["wppv_postonly"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wppv_postonly", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wppv_login", $_POST["wppv_login"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wppv_postnum", $_POST["wppv_postnum"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($post_ID, "_wppvuser", $wppvuserNew) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_ID, "_wppvcount", $wppvcountNew) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_ID, "_wppvuser", $wppvuserNew) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_ID, "_wppvcount", $wppvcountNew) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found no personal data in the plugin. No analysis needed. 

[main] Complaint? True 

No findings
