Timeout in resolving values
Timeout in running neo4j query
Running Main.py on daext-autolinks-manager

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:01.153928.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.283745.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 455 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.809172.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 0 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.447759.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 2624 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:02.302040.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 10 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.888865.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.081030.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 860 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:27.496923.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 21094
Added 17145 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 32629
Added 11535 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:03.055907.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/daext-autolinks-manager/class-daextam-ajax.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/daext-autolinks-manager/init.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/daext-autolinks-manager/uninstall.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/daext-autolinks-manager/admin/class-daextam-admin.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/daext-autolinks-manager/admin/inc/class-daextam-pagination.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/daext-autolinks-manager/admin/view/autolinks.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/daext-autolinks-manager/admin/view/categories.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/daext-autolinks-manager/admin/view/help.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/daext-autolinks-manager/admin/view/options.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/daext-autolinks-manager/admin/view/pro_version.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/daext-autolinks-manager/admin/view/statistics.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/daext-autolinks-manager/admin/view/term_groups.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/daext-autolinks-manager/blocks/src/init.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/daext-autolinks-manager/public/class-daextam-public.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/daext-autolinks-manager/shared/class-daextam-shared.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:01.486096.

1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
3079 PHP_REACHES edges created
10 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
14000 PHP_REACHES edges created
15000 PHP_REACHES edges created
16000 PHP_REACHES edges created
17000 PHP_REACHES edges created
18000 PHP_REACHES edges created
18005 PHP_REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
11535 PHP_REACHES edges created
32629 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 6869 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.577588.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 2 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:06.822813.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 533 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:15.299920.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 499 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.208262.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:01.315177.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:07.405861.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.066876.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.027671.

2 CALLS edges created
1000 PHP_REACHES edges created
1032 PHP_REACHES edges created
1034 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 1028 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.165004.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
57 SQL operations to process.
CREATE TABLE $wpdb$this->shared->get("slug")_term_group (
                term_group_id BIGINT AUTO_INCREMENT PRIMARY KEY,
                name VARCHAR(100),
                
            ) $wpdb->get_charset_collate()
SQL command (CREATE TABLE $wpdb$this->shared->get("slug")_term_group ( term_group_id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(100), ) $wpdb->get_charset_collate()) cannot be parsed correct.
CREATE TABLE $wpdb$this->shared->get("slug")_statistic (
                statistic_id BIGINT AUTO_INCREMENT PRIMARY KEY,
                post_id BIGINT,
                content_length BIGINT,
                auto_links BIGINT
            ) $wpdb->get_charset_collate()
SQL command (CREATE TABLE $wpdb$this->shared->get("slug")_statistic ( statistic_id BIGINT AUTO_INCREMENT PRIMARY KEY, post_id BIGINT, content_length BIGINT, auto_links BIGINT ) $wpdb->get_charset_collate()) cannot be parsed correct.
CREATE TABLE $wpdb$this->shared->get("slug")_autolink (
                autolink_id BIGINT AUTO_INCREMENT PRIMARY KEY,
                name VARCHAR(100),
                category_id BIGINT,
                keyword VARCHAR(255),
                url VARCHAR(2083),
                title VARCHAR(255),
                open_new_tab TINYINT(1),
                use_nofollow TINYINT(1),
                case_sensitive_search TINYINT(1),
                `limit` INT,
                priority INT,
                left_boundary SMALLINT,
                right_boundary SMALLINT,
                keyword_before VARCHAR(255),
                keyword_after VARCHAR(255),
                post_types TEXT,
                categories TEXT,
                tags TEXT,
                term_group_id BIGINT
            ) $wpdb->get_charset_collate()
SQL command (CREATE TABLE $wpdb$this->shared->get("slug")_autolink ( autolink_id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(100), category_id BIGINT, keyword VARCHAR(255), url VARCHAR(2083), title VARCHAR(255), open_new_tab TINYINT(1), use_nofollow TINYINT(1), case_sensitive_search TINYINT(1), `limit` INT, priority INT, left_boundary SMALLINT, right_boundary SMALLINT, keyword_before VARCHAR(255), keyword_after VARCHAR(255), post_types TEXT, categories TEXT, tags TEXT, term_group_id BIGINT ) $wpdb->get_charset_collate()) cannot be parsed correct.
CREATE TABLE $wpdb$this->shared->get("slug")_category (
                category_id BIGINT AUTO_INCREMENT PRIMARY KEY,
                name VARCHAR(100),
                description VARCHAR(255)
            ) $wpdb->get_charset_collate()
SQL command (CREATE TABLE $wpdb$this->shared->get("slug")_category ( category_id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(100), description VARCHAR(255) ) $wpdb->get_charset_collate()) cannot be parsed correct.
SELECT blog_id FROM $wpdb
SQL command (SELECT blog_id FROM $wpdb) cannot be parsed correct.
SELECT blog_id FROM $wpdb
SQL command (SELECT blog_id FROM $wpdb) cannot be parsed correct.
SELECT category_id, name FROM $wpdb$this->shared->get("slug")_category ORDER BY category_id DESC
SQL command (SELECT category_id, name FROM $wpdb$this->shared->get("slug")_category ORDER BY category_id DESC) cannot be parsed correct.
SELECT term_group_id, name FROM $wpdb$this->shared->get("slug")_term_group ORDER BY term_group_id DESC
SQL command (SELECT term_group_id, name FROM $wpdb$this->shared->get("slug")_term_group ORDER BY term_group_id DESC) cannot be parsed correct.
SELECT category_id, name FROM $wpdb$this->shared->get("slug")_category ORDER BY category_id DESC
SQL command (SELECT category_id, name FROM $wpdb$this->shared->get("slug")_category ORDER BY category_id DESC) cannot be parsed correct.
WHERE (name LIKE %sanitize_text_field($_GET["s"])% OR keyword LIKE %s OR url LIKE %s)
WHERE (name LIKE %sanitize_text_field($_GET["s"])%anitize_text_field($_GET["s"])% OR keyword LIKE %s OR url LIKE %s)
WHERE (name LIKE %sanitize_text_field($_GET["s"])%anitize_text_field($_GET["s"])% %sanitize_text_field($_GET["s"])% keyword LIKE %s OR url LIKE %s)
WHERE (name LIKE %sanitize_text_field($_GET["s"])%anitize_text_field($_GET["s"])% %sanitize_text_field($_GET["s"])% keyword LIKE %s OR url LIKE %s)
SQL command (WHERE (name LIKE %sanitize_text_field($_GET["s"])%anitize_text_field($_GET["s"])% %sanitize_text_field($_GET["s"])% keyword LIKE %s OR url LIKE %s)) cannot be parsed correct.
SELECT category_id, name FROM $wpdb$this->shared->get("slug")_category ORDER BY category_id DESC
SQL command (SELECT category_id, name FROM $wpdb$this->shared->get("slug")_category ORDER BY category_id DESC) cannot be parsed correct.
SELECT category_id, name FROM $wpdb$this->shared->get("slug")_category ORDER BY category_id DESC
SQL command (SELECT category_id, name FROM $wpdb$this->shared->get("slug")_category ORDER BY category_id DESC) cannot be parsed correct.
SELECT term_group_id, name FROM $wpdb$this->shared->get("slug")_term_group ORDER BY term_group_id DESC
SQL command (SELECT term_group_id, name FROM $wpdb$this->shared->get("slug")_term_group ORDER BY term_group_id DESC) cannot be parsed correct.
SELECT term_group_id, name FROM $wpdb$this->shared->get("slug")_term_group ORDER BY term_group_id DESC
SQL command (SELECT term_group_id, name FROM $wpdb$this->shared->get("slug")_term_group ORDER BY term_group_id DESC) cannot be parsed correct.
WHERE (name LIKE %sanitize_text_field($_GET["s"])% OR description LIKE %s)
WHERE (name LIKE %sanitize_text_field($_GET["s"])%anitize_text_field($_GET["s"])% OR description LIKE %s)
WHERE (name LIKE %sanitize_text_field($_GET["s"])%anitize_text_field($_GET["s"])% OR description LIKE %s)
SQL command (WHERE (name LIKE %sanitize_text_field($_GET["s"])%anitize_text_field($_GET["s"])% OR description LIKE %s)) cannot be parsed correct.
WHERE (post_id LIKE %sanitize_text_field($_GET["s"])%)
WHERE (post_id LIKE %sanitize_text_field($_GET["s"])%)
SQL command (WHERE (post_id LIKE %sanitize_text_field($_GET["s"])%)) cannot be parsed correct.
WHERE (name LIKE %sanitize_text_field($_GET["s"])%)
WHERE (name LIKE %sanitize_text_field($_GET["s"])%)
SQL command (WHERE (name LIKE %sanitize_text_field($_GET["s"])%)) cannot be parsed correct.
SELECT ID, post_title, post_type, post_date, post_content FROM $wpdbposts WHERE  post_status = 'publish' ORDER BY post_date DESC LIMIT intval(get_option($this->shared->get("slug") . "_analysis_limit_posts_analysis"), 10)
SQL command (SELECT ID, post_title, post_type, post_date, post_content FROM $wpdbposts WHERE post_status = 'publish' ORDER BY post_date DESC LIMIT intval(get_option($this->shared->get("slug") . "_analysis_limit_posts_analysis"), 10)) cannot be parsed correct.
SELECT * FROM $wpdb$this->get("slug")_autolink ORDER BY priority DESC
SQL command (SELECT * FROM $wpdb$this->get("slug")_autolink ORDER BY priority DESC) cannot be parsed correct.
SELECT * FROM $wpdb$this->get("slug")_term_group ORDER BY term_group_id ASC
SQL command (SELECT * FROM $wpdb$this->get("slug")_term_group ORDER BY term_group_id ASC) cannot be parsed correct.
SELECT * FROM $wpdb$this->get("slug")_autolink ORDER BY autolink_id ASC
SQL command (SELECT * FROM $wpdb$this->get("slug")_autolink ORDER BY autolink_id ASC) cannot be parsed correct.
SELECT * FROM $wpdb$this->shared->get("slug")_autolink WHERE autolink_id = intval($_GET["edit_id"], 10) 
SELECT * FROM $wpdb$this->shared->get("slug")_autolink WHERE autolink_id = intval($_GET["edit_id"], 10) 
SQL command (SELECT * FROM $wpdb$this->shared->get("slug")_autolink WHERE autolink_id = intval($_GET["edit_id"], 10) ) cannot be parsed correct.
SELECT * FROM $wpdb$this->shared->get("slug")_category WHERE category_id = intval($_GET["edit_id"], 10) 
SELECT * FROM $wpdb$this->shared->get("slug")_category WHERE category_id = intval($_GET["edit_id"], 10) 
SQL command (SELECT * FROM $wpdb$this->shared->get("slug")_category WHERE category_id = intval($_GET["edit_id"], 10) ) cannot be parsed correct.
SELECT * FROM $wpdb$this->shared->get("slug")_term_group WHERE term_group_id = intval($_GET["edit_id"], 10) 
SELECT * FROM $wpdb$this->shared->get("slug")_term_group WHERE term_group_id = intval($_GET["edit_id"], 10) 
SQL command (SELECT * FROM $wpdb$this->shared->get("slug")_term_group WHERE term_group_id = intval($_GET["edit_id"], 10) ) cannot be parsed correct.
SELECT * FROM $wpdb$this->get("slug")_autolink WHERE autolink_id = $autolink_id 
SELECT * FROM $wpdb$this->get("slug")_autolink WHERE autolink_id = $autolink_id 
SQL command (SELECT * FROM $wpdb$this->get("slug")_autolink WHERE autolink_id = $autolink_id ) cannot be parsed correct.
SELECT * FROM $wpdb$this->get("slug")_term_group WHERE term_group_id = $autolink_term_group_id 
SELECT * FROM $wpdb$this->get("slug")_term_group WHERE term_group_id = $autolink_term_group_id 
SQL command (SELECT * FROM $wpdb$this->get("slug")_term_group WHERE term_group_id = $autolink_term_group_id ) cannot be parsed correct.
SELECT * FROM $wpdb$this->get("slug")_category WHERE category_id = $category_id 
SELECT * FROM $wpdb$this->get("slug")_category WHERE category_id = $category_id 
SQL command (SELECT * FROM $wpdb$this->get("slug")_category WHERE category_id = $category_id ) cannot be parsed correct.
DROP TABLE $wpdb$shared->get("slug")_statistic
SQL command (DROP TABLE $wpdb$shared->get("slug")_statistic) cannot be parsed correct.
DROP TABLE $wpdb$shared->get("slug")_autolink
SQL command (DROP TABLE $wpdb$shared->get("slug")_autolink) cannot be parsed correct.
DROP TABLE $wpdb$shared->get("slug")_category
SQL command (DROP TABLE $wpdb$shared->get("slug")_category) cannot be parsed correct.
DROP TABLE $wpdb$shared->get("slug")_term_group
SQL command (DROP TABLE $wpdb$shared->get("slug")_term_group) cannot be parsed correct.
CREATE TEMPORARY TABLE daextam_temporary_table SELECT * FROM $wpdb$this->shared->get("slug")_autolink WHERE autolink_id = intval($_POST["clone_id"], 10)
SQL command (CREATE TEMPORARY TABLE daextam_temporary_table SELECT * FROM $wpdb$this->shared->get("slug")_autolink WHERE autolink_id = intval($_POST["clone_id"], 10)) cannot be parsed correct.
UPDATE daextam_temporary_table SET autolink_id = NULL
SQL command (UPDATE daextam_temporary_table SET autolink_id = NULL) cannot be parsed correct.
INSERT INTO $wpdb$this->shared->get("slug")_autolink SELECT * FROM daextam_temporary_table
SQL command (INSERT INTO $wpdb$this->shared->get("slug")_autolink SELECT * FROM daextam_temporary_table) cannot be parsed correct.
DROP TEMPORARY TABLE IF EXISTS daextam_temporary_table
SQL command (DROP TEMPORARY TABLE IF EXISTS daextam_temporary_table) cannot be parsed correct.
UPDATE $wpdb$this->shared->get("slug")_autolink SET 
                name = sanitize_text_field($_POST["name"]),
                category_id = %d,
                keyword = %s,
                url = %s,
                title = %s,
                open_new_tab = %d,
                use_nofollow = %d,
                case_sensitive_search = %d,
                `limit` = %d,
                priority = %d,
                left_boundary = %d,
                right_boundary = %d,
                keyword_before = %s,
                keyword_after = %s,
                post_types = %s,
                categories = %s,
                tags = %s,
                term_group_id = %d
                WHERE autolink_id = %d
UPDATE $wpdb$this->shared->get("slug")_autolink SET 
                name = sanitize_text_field($_POST["name"]),
                category_id = intval($_POST["category_id"], 10),
                keyword = %s,
                url = %s,
                title = %s,
                open_new_tab = %d,
                use_nofollow = %d,
                case_sensitive_search = %d,
                `limit` = %d,
                priority = %d,
                left_boundary = %d,
                right_boundary = %d,
                keyword_before = %s,
                keyword_after = %s,
                post_types = %s,
                categories = %s,
                tags = %s,
                term_group_id = %d
                WHERE autolink_id = %d
UPDATE $wpdb$this->shared->get("slug")_autolink SET 
                name = sanitize_text_field($_POST["name"]),
                category_id = intval($_POST["category_id"],sanitize_text_field($_POST["keyword"])0),
                keyword = %s,
                url = %s,
                title = %s,
                open_new_tab = %d,
                use_nofollow = %d,
                case_sensitive_search = %d,
                `limit` = %d,
                priority = %d,
                left_boundary = %d,
                right_boundary = %d,
                keyword_before = %s,
                keyword_after = %s,
                post_types = %s,
                categories = %s,
                tags = %s,
                term_group_id = %d
                WHERE autolink_id = %d
UPDATE $wpdb$this->shared->get("slug")_autolink SET 
                name = sanitize_text_field($_POST["name"]),
                categ$_POST_urly_id = intval($_POST["category_id"],sanitize_text_field($_POST["keyword"])0),
                keyword = %s,
                url = %s,
                title = %s,
                open_new_tab = %d,
                use_nofollow = %d,
                case_sensitive_search = %d,
                `limit` = %d,
                priority = %d,
                left_boundary = %d,
                right_boundary = %d,
                keyword_before = %s,
                keyword_after = %s,
                post_types = %s,
                categories = %s,
                tags = %s,
                term_group_id = %d
                WHERE autolink_id = %d
UPDATE $wpdb$this->shared->get("slug")_autolink SET 
                name = sanitize_text_field($_POSsanitize_text_field($_POST["title"])"name"]),
                categ$_POST_urly_id = intval($_POST["category_id"],sanitize_text_field($_POST["keyword"])0),
                keyword = %s,
                url = %s,
                title = %s,
                open_new_tab = %d,
                use_nofollow = %d,
                case_sensitive_search = %d,
                `limit` = %d,
                priority = %d,
                left_boundary = %d,
                right_boundary = %d,
                keyword_before = %s,
                keyword_after = %s,
                post_types = %s,
                categories = %s,
                tags = %s,
                term_group_id = %d
                WHERE autolink_id = %d
UPDATE $wpdb$this->shared->get("slug")_autolink SET 
intval($_POST["open_new_tab"], 10)              name = sanitize_text_field($_POSsanitize_text_field($_POST["title"])"name"]),
                categ$_POST_urly_id = intval($_POST["category_id"],sanitize_text_field($_POST["keyword"])0),
                keyword = %s,
                url = %s,
                title = %s,
                open_new_tab = %d,
                use_nofollow = %d,
                case_sensitive_search = %d,
                `limit` = %d,
                priority = %d,
                left_boundary = %d,
                right_boundary = %d,
                keyword_before = %s,
                keyword_after = %s,
                post_types = %s,
                categories = %s,
                tags = %s,
                term_group_id = %d
                WHERE autolink_id = %d
UPDATE $wpdb$this->shared->get("slug")_autolink SET 
intval($_POST["open_new_tab"], 10)intval($_POST["use_nofollow"], 10)            name = sanitize_text_field($_POSsanitize_text_field($_POST["title"])"name"]),
                categ$_POST_urly_id = intval($_POST["category_id"],sanitize_text_field($_POST["keyword"])0),
                keyword = %s,
                url = %s,
                title = %s,
                open_new_tab = %d,
                use_nofollow = %d,
                case_sensitive_search = %d,
                `limit` = %d,
                priority = %d,
                left_boundary = %d,
                right_boundary = %d,
                keyword_before = %s,
                keyword_after = %s,
                post_types = %s,
                categories = %s,
                tags = %s,
                term_group_id = %d
                WHERE autolink_id = %d
UPDATE $wpdb$this->shared->get("slug")_autolink SET 
intval($_POST["open_new_tab"], 10)intval($_POST["use_nofollow"], 10)            name = sanitize_text_field($_POSsanitize_text_field($_POST["title"])"name"]),
                categ$_POST_urly_id = intval($_POST["category_id"],sanitize_text_field($_POST["keyword"])0),
                keyword =intval($_POST["case_sensitive_search"], 10)s,
                url = %s,
                title = %s,
                open_new_tab = %d,
                use_nofollow = %d,
                case_sensitive_search = %d,
                `limit` = %d,
                priority = %d,
                left_boundary = %d,
                right_boundary = %d,
                keyword_before = %s,
                keyword_after = %s,
                post_types = %s,
                categories = %s,
                tags = %s,
                term_group_id = %d
                WHERE autolink_id = %d
UPDATE $wpdb$this->shared->get("slug")_autolink SET 
intval($_POST["open_new_tab"], intval($_POST["limit"], 10))intval($_POST["use_nofollow"], 10)            name = sanitize_text_field($_POSsanitize_text_field($_POST["title"])"name"]),
                categ$_POST_urly_id = intval($_POST["category_id"],sanitize_text_field($_POST["keyword"])0),
                keyword =intval($_POST["case_sensitive_search"], 10)s,
                url = %s,
                title = %s,
                open_new_tab = %d,
                use_nofollow = %d,
                case_sensitive_search = %d,
                `limit` = %d,
                priority = %d,
                left_boundary = %d,
                right_boundary = %d,
                keyword_before = %s,
                keyword_after = %s,
                post_types = %s,
                categories = %s,
                tags = %s,
                term_group_id = %d
                WHERE autolink_id = %d
UPDATE $wpdb$this->shared->get("slug")_autolink SET 
intval($_POST["open_new_tab"], intval($_POST["limit"], 10))intval($_POST["use_nofollow"], 10)            name = sanitize_text_field($_POSsanitize_text_field($_POST["title"])"name"]),
                categ$_POST_urly_id = intval($_POST["category_id"],sanitize_text_field($_POST["keyword"])0),
                keyword =intval($_POST["case_sensitive_sintval($_POST["priority"], 10)rch"], 10)s,
                url = %s,
                title = %s,
                open_new_tab = %d,
                use_nofollow = %d,
                case_sensitive_search = %d,
                `limit` = %d,
                priority = %d,
                left_boundary = %d,
                right_boundary = %d,
                keyword_before = %s,
                keyword_after = %s,
                post_types = %s,
                categories = %s,
                tags = %s,
                term_group_id = %d
                WHERE autolink_id = %d
UPDATE $wpdb$this->shared->get("slug")_autolink SET 
intval($_POST["open_new_tab"], intval($_POST["limit"], 10))intval($_POST["use_nofollow"], 10)            name = sanitize_text_field($_POSsanitize_text_field($_POST["title"])"name"]),
                categ$_POST_urly_id = intval($_POST["category_id"],sanitize_text_field($_POST["keyword"])0),
                keyword =intval($_POST["case_sensitive_sintval($_POST["priority"], 10)rch"], 10)intval($_POST["left_boundary"], 10)
                url = %s,
                title = %s,
                open_new_tab = %d,
                use_nofollow = %d,
                case_sensitive_search = %d,
                `limit` = %d,
                priority = %d,
                left_boundary = %d,
                right_boundary = %d,
                keyword_before = %s,
                keyword_after = %s,
                post_types = %s,
                categories = %s,
                tags = %s,
                term_group_id = %d
                WHERE autolink_id = %d
UPDATE $wpdb$this->shared->get("slug")_autolink SET 
intval($_POST["open_new_tab"], intval($_POST["limit"], 10))intval($_POST["use_nofollow"], 10)intval($_POST["right_boundary"], 10)          name = sanitize_text_field($_POSsanitize_text_field($_POST["title"])"name"]),
                categ$_POST_urly_id = intval($_POST["category_id"],sanitize_text_field($_POST["keyword"])0),
                keyword =intval($_POST["case_sensitive_sintval($_POST["priority"], 10)rch"], 10)intval($_POST["left_boundary"], 10)
                url = %s,
                title = %s,
                open_new_tab = %d,
                use_nofollow = %d,
                case_sensitive_search = %d,
                `limit` = %d,
                priority = %d,
                left_boundary = %d,
                right_boundary = %d,
                keyword_before = %s,
                keyword_after = %s,
                post_types = %s,
                categories = %s,
                tags = %s,
                term_group_id = %d
                WHERE autolink_id = %d
UPDATE $wpdb$this->shared->get("slug")_autolink SET 
intval($_POST["open_new_tab"], intval($_POST["limit"], 10))intval($_POST["use_nofollow"], 10)intval($_POST["right_boundary"], 10)sanitize_text_field($_POST["keyword_before"])        name = sanitize_text_field($_POSsanitize_text_field($_POST["title"])"name"]),
                categ$_POST_urly_id = intval($_POST["category_id"],sanitize_text_field($_POST["keyword"])0),
                keyword =intval($_POST["case_sensitive_sintval($_POST["priority"], 10)rch"], 10)intval($_POST["left_boundary"], 10)
                url = %s,
                title = %s,
                open_new_tab = %d,
                use_nofollow = %d,
                case_sensitive_search = %d,
                `limit` = %d,
                priority = %d,
                left_boundary = %d,
                right_boundary = %d,
                keyword_before = %s,
                keyword_after = %s,
                post_types = %s,
                categories = %s,
                tags = %s,
                term_group_id = %d
                WHERE autolink_id = %d
UPDATE $wpdb$this->shared->get("slug")_autolink SET 
intval($_POST["open_new_tab"], intval($_POST["limit"], 10))intval($_POST["use_nofollow"], 10)intval($_POST["right_boundary"], 10)sanitize_text_field($_POST["keyword_before"])sanitize_text_field($_POST["keyword_after"])      name = sanitize_text_field($_POSsanitize_text_field($_POST["title"])"name"]),
                categ$_POST_urly_id = intval($_POST["category_id"],sanitize_text_field($_POST["keyword"])0),
                keyword =intval($_POST["case_sensitive_sintval($_POST["priority"], 10)rch"], 10)intval($_POST["left_boundary"], 10)
                url = %s,
                title = %s,
                open_new_tab = %d,
                use_nofollow = %d,
                case_sensitive_search = %d,
                `limit` = %d,
                priority = %d,
                left_boundary = %d,
                right_boundary = %d,
                keyword_before = %s,
                keyword_after = %s,
                post_types = %s,
                categories = %s,
                tags = %s,
                term_group_id = %d
                WHERE autolink_id = %d
UPDATE $wpdb$this->shared->get("slug")_autolink SET 
intval($_POST["open_new_tab"], intval($_POST["limit"], 10))intval($_POST["use_nofollow"], 10)intval($_POST["right_boundary"], 10)sanitize_text_field($_POST["keyword_before"])sanitize_text_field($_POST["keyword_after"])maybe_serialize($post_types)    name = sanitize_text_field($_POSsanitize_text_field($_POST["title"])"name"]),
                categ$_POST_urly_id = intval($_POST["category_id"],sanitize_text_field($_POST["keyword"])0),
                keyword =intval($_POST["case_sensitive_sintval($_POST["priority"], 10)rch"], 10)intval($_POST["left_boundary"], 10)
                url = %s,
                title = %s,
                open_new_tab = %d,
                use_nofollow = %d,
                case_sensitive_search = %d,
                `limit` = %d,
                priority = %d,
                left_boundary = %d,
                right_boundary = %d,
                keyword_before = %s,
                keyword_after = %s,
                post_types = %s,
                categories = %s,
                tags = %s,
                term_group_id = %d
                WHERE autolink_id = %d
UPDATE $wpdb$this->shared->get("slug")_autolink SET 
intval($_POST["open_new_tab"], intval($_POST["limit"], 10))intval($_POST["use_nofollow"], 10)intval($_POST["right_boundary"], 10)sanitize_text_field($_POST["keyword_before"])sanitize_text_field($_POST["keyword_after"])maybe_serialize($post_types)    name = sanitize_text_field($_POSsanitize_text_field($_POST["title"])"name"]),
                categ$_POST_urly_id = intval($_POST["category_id"],sanitize_text_field($_POST["keyword"])0),
                keyword =intval($_POST["case_sensitive_sintval($_POST["priority"], 10)rch"], 10)intval($_POST["left_boundary"], 10maybe_serialize($categories)
                url = %s,
                title = %s,
                open_new_tab = %d,
                use_nofollow = %d,
                case_sensitive_search = %d,
                `limit` = %d,
                priority = %d,
                left_boundary = %d,
                right_boundary = %d,
                keyword_before = %s,
                keyword_after = %s,
                post_types = %s,
                categories = %s,
                tags = %s,
                term_group_id = %d
                WHERE autolink_id = %d
UPDATE $wpdb$this->shared->get("slug")_autolink SET 
intval($_POST["open_new_tab"], intval($_POST["limit"], 10))intval($_POST["use_nofollow"], 10)intval($_POST["right_boundary"], 10)sanitize_text_field($_POST["keyword_before"])sanitize_text_field($_POST["keyword_after"])maybe_serialize($post_types)    name = sanitize_text_field($_POSsanitize_text_field($_POST["title"])"name"]),maybe_serialize($tags)               categ$_POST_urly_id = intval($_POST["category_id"],sanitize_text_field($_POST["keyword"])0),
                keyword =intval($_POST["case_sensitive_sintval($_POST["priority"], 10)rch"], 10)intval($_POST["left_boundary"], 10maybe_serialize($categories)
                url = %s,
                title = %s,
                open_new_tab = %d,
                use_nofollow = %d,
                case_sensitive_search = %d,
                `limit` = %d,
                priority = %d,
                left_boundary = %d,
                right_boundary = %d,
                keyword_before = %s,
                keyword_after = %s,
                post_types = %s,
                categories = %s,
                tags = %s,
                term_group_id = %d
                WHERE autolink_id = %d
UPDATE $wpdb$this->shared->get("slug")_autolink SET 
intval($_POST["open_new_tab"], intval($_POST["limit"], 10))intval($_POST["use_nofollow"], 10)intval($_POST["right_boundary"], 10)sanitize_text_field($_POST["keyword_before"])sanitize_text_field($_POST["keyword_after"])maybe_serialize($post_types)intval($_POST["term_group_id"], 10)  name = sanitize_text_field($_POSsanitize_text_field($_POST["title"])"name"]),maybe_serialize($tags)               categ$_POST_urly_id = intval($_POST["category_id"],sanitize_text_field($_POST["keyword"])0),
                keyword =intval($_POST["case_sensitive_sintval($_POST["priority"], 10)rch"], 10)intval($_POST["left_boundary"], 10maybe_serialize($categories)
                url = %s,
                title = %s,
                open_new_tab = %d,
                use_nofollow = %d,
                case_sensitive_search = %d,
                `limit` = %d,
                priority = %d,
                left_boundary = %d,
                right_boundary = %d,
                keyword_before = %s,
                keyword_after = %s,
                post_types = %s,
                categories = %s,
                tags = %s,
                term_group_id = %d
                WHERE autolink_id = %d
UPDATE $wpdb$this->shared->get("slug")_autolink SET 
intval($_POST["open_new_tab"], intval($_POST["limit"], 10))intval($_POST["use_nofollow"], 10)intval($_POST["right_boundary"], 10)sanitize_text_field($_POST["keyword_before"])sanitize_text_field($_POST["keyword_after"])maybe_serialize($post_types)intval($_POST["term_group_id"], 10)$update_idname = sanitize_text_field($_POSsanitize_text_field($_POST["title"])"name"]),maybe_serialize($tags)               categ$_POST_urly_id = intval($_POST["category_id"],sanitize_text_field($_POST["keyword"])0),
                keyword =intval($_POST["case_sensitive_sintval($_POST["priority"], 10)rch"], 10)intval($_POST["left_boundary"], 10maybe_serialize($categories)
                url = %s,
                title = %s,
                open_new_tab = %d,
                use_nofollow = %d,
                case_sensitive_search = %d,
                `limit` = %d,
                priority = %d,
                left_boundary = %d,
                right_boundary = %d,
                keyword_before = %s,
                keyword_after = %s,
                post_types = %s,
                categories = %s,
                tags = %s,
                term_group_id = %d
                WHERE autolink_id = %d
UPDATE $wpdb$this->shared->get("slug")_autolink SET 
intval($_POST["open_new_tab"], intval($_POST["limit"], 10))intval($_POST["use_nofollow"], 10)intval($_POST["right_boundary"], 10)sanitize_text_field($_POST["keyword_before"])sanitize_text_field($_POST["keyword_after"])maybe_serialize($post_types)intval($_POST["term_group_id"], 10)$update_idname = sanitize_text_field($_POSsanitize_text_field($_POST["title"])"name"]),maybe_serialize($tags)               categ$_POST_urly_id = intval($_POST["category_id"],sanitize_text_field($_POST["keyword"])0),
                keyword =intval($_POST["case_sensitive_sintval($_POST["priority"], 10)rch"], 10)intval($_POST["left_boundary"], 10maybe_serialize($categories)
                url = %s,
                title = %s,
                open_new_tab = %d,
                use_nofollow = %d,
                case_sensitive_search = %d,
                `limit` = %d,
                priority = %d,
                left_boundary = %d,
                right_boundary = %d,
                keyword_before = %s,
                keyword_after = %s,
                post_types = %s,
                categories = %s,
                tags = %s,
                term_group_id = %d
                WHERE autolink_id = %d
SQL command (UPDATE $wpdb$this->shared->get("slug")_autolink SET intval($_POST["open_new_tab"], intval($_POST["limit"], 10))intval($_POST["use_nofollow"], 10)intval($_POST["right_boundary"], 10)sanitize_text_field($_POST["keyword_before"])sanitize_text_field($_POST["keyword_after"])maybe_serialize($post_types)intval($_POST["term_group_id"], 10)$update_idname = sanitize_text_field($_POSsanitize_text_field($_POST["title"])"name"]), maybe_serialize($tags) categ$_POST_urly_id = intval($_POST["category_id"],sanitize_text_field($_POST["keyword"])0), keyword =intval($_POST["case_sensitive_sintval($_POST["priority"], 10)rch"], 10)intval($_POST["left_boundary"], 10maybe_serialize($categories) url = %s, title = %s, open_new_tab = %d, use_nofollow = %d, case_sensitive_search = %d, `limit` = %d, priority = %d, left_boundary = %d, right_boundary = %d, keyword_before = %s, keyword_after = %s, post_types = %s, categories = %s, tags = %s, term_group_id = %d WHERE autolink_id = %d) cannot be parsed correct.
INSERT INTO $wpdb$this->shared->get("slug")_autolink SET 
            name = sanitize_text_field($_POST["name"]),
            category_id = %d,
            keyword = %s,
            url = %s,
            title = %s,
            open_new_tab = %d,
            use_nofollow = %d,
            case_sensitive_search = %d,
            `limit` = %d,
            priority = %d,
            left_boundary = %d,
            right_boundary = %d,
            keyword_before = %s,
            keyword_after = %s,
            post_types = %s,
            categories = %s,
            tags = %s,
            term_group_id = %d
INSERT INTO $wpdb$this->shared->get("slug")_autolink SET 
            name = sanitize_text_field($_POST["name"]),
            category_id = intval($_POST["category_id"], 10),
            keyword = %s,
            url = %s,
            title = %s,
            open_new_tab = %d,
            use_nofollow = %d,
            case_sensitive_search = %d,
            `limit` = %d,
            priority = %d,
            left_boundary = %d,
            right_boundary = %d,
            keyword_before = %s,
            keyword_after = %s,
            post_types = %s,
            categories = %s,
            tags = %s,
            term_group_id = %d
INSERT INTO $wpdb$this->shared->get("slug")_autolink SET 
            name = sanitize_text_field($_POST["name"]),
            category_id = intval($_POST["category_isanitize_text_field($_POST["keyword"])], 10),
            keyword = %s,
            url = %s,
            title = %s,
            open_new_tab = %d,
            use_nofollow = %d,
            case_sensitive_search = %d,
            `limit` = %d,
            priority = %d,
            left_boundary = %d,
            right_boundary = %d,
            keyword_before = %s,
            keyword_after = %s,
            post_types = %s,
            categories = %s,
            tags = %s,
            term_group_id = %d
INSERT INTO $wpdb$this->shared->get("slug")_autolink SET 
            name = sanitize_text_field($_POST["name"]),
            category_id = intval($_POST["category_isanitize_text_field($_POST["$_POST_urlyword"])], 10),
            keyword = %s,
            url = %s,
            title = %s,
            open_new_tab = %d,
            use_nofollow = %d,
            case_sensitive_search = %d,
            `limit` = %d,
            priority = %d,
            left_boundary = %d,
            right_boundary = %d,
            keyword_before = %s,
            keyword_after = %s,
            post_types = %s,
            categories = %s,
            tags = %s,
            term_group_id = %d
INSERT INTO $wpdb$this->shared->get("slug")_autolink SET 
            name = sanitize_text_field($_POSsanitize_text_field($_POST["title"])"name"]),
            category_id = intval($_POST["category_isanitize_text_field($_POST["$_POST_urlyword"])], 10),
            keyword = %s,
            url = %s,
            title = %s,
            open_new_tab = %d,
            use_nofollow = %d,
            case_sensitive_search = %d,
            `limit` = %d,
            priority = %d,
            left_boundary = %d,
            right_boundary = %d,
            keyword_before = %s,
            keyword_after = %s,
            post_types = %s,
            categories = %s,
            tags = %s,
            term_group_id = %d
INSERT INTO $wpdb$this->shared->get("slug")_autolink SET 
            name = sanitize_text_field($_POSsanitize_text_field($_POST["title"])"name"]),
            category_id = intval($_POST["category_isanitize_text_field($_POST["$_POST_urlyword"])], intval($_POST["open_new_tab"], 10)),
            keyword = %s,
            url = %s,
            title = %s,
            open_new_tab = %d,
            use_nofollow = %d,
            case_sensitive_search = %d,
            `limit` = %d,
            priority = %d,
            left_boundary = %d,
            right_boundary = %d,
            keyword_before = %s,
            keyword_after = %s,
            post_types = %s,
            categories = %s,
            tags = %s,
            term_group_id = %d
INSERT INTO $wpdb$this->shared->get("slug")_autolink SET 
            name = sanitize_text_field($_POSsanitize_text_field($_POST["title"])"name"]),
            category_id = intval($_POST["category_isanitize_text_field($_POST["$_POST_urlyword"])], intval($_POST["open_new_tab"],intval($_POST["use_nofollow"], 10)0)),
            keyword = %s,
            url = %s,
            title = %s,
            open_new_tab = %d,
            use_nofollow = %d,
            case_sensitive_search = %d,
            `limit` = %d,
            priority = %d,
            left_boundary = %d,
            right_boundary = %d,
            keyword_before = %s,
            keyword_after = %s,
            post_types = %s,
            categories = %s,
            tags = %s,
            term_group_id = %d
INSERT INTO $wpdb$this->shared->get("slug")_autolink SET 
intval($_POST["case_sensitive_search"], 10)          name = sanitize_text_field($_POSsanitize_text_field($_POST["title"])"name"]),
            category_id = intval($_POST["category_isanitize_text_field($_POST["$_POST_urlyword"])], intval($_POST["open_new_tab"],intval($_POST["use_nofollow"], 10)0)),
            keyword = %s,
            url = %s,
            title = %s,
            open_new_tab = %d,
            use_nofollow = %d,
            case_sensitive_search = %d,
            `limit` = %d,
            priority = %d,
            left_boundary = %d,
            right_boundary = %d,
            keyword_before = %s,
            keyword_after = %s,
            post_types = %s,
            categories = %s,
            tags = %s,
            term_group_id = %d
INSERT INTO $wpdb$this->shared->get("slug")_autolink SET 
intval($_POST["case_sensitive_search"], 10)          name = sanitize_text_field($_POSsanitize_text_field($_POST["title"])"name"]intval($_POST["limit"], 10)
            category_id = intval($_POST["category_isanitize_text_field($_POST["$_POST_urlyword"])], intval($_POST["open_new_tab"],intval($_POST["use_nofollow"], 10)0)),
            keyword = %s,
            url = %s,
            title = %s,
            open_new_tab = %d,
            use_nofollow = %d,
            case_sensitive_search = %d,
            `limit` = %d,
            priority = %d,
            left_boundary = %d,
            right_boundary = %d,
            keyword_before = %s,
            keyword_after = %s,
            post_types = %s,
            categories = %s,
            tags = %s,
            term_group_id = %d
INSERT INTO $wpdb$this->shared->get("slug")_autolink SET 
intval($_POST["case_sensitive_search"], 10)          name = sanitize_text_field($_POSsanitize_text_field($_POST["title"])"name"]intval($_POST["limit"], 10)
            category_id = intval($_POST["category_isanitize_text_field($_POST["$_POST_urlyword"])], intval($_POST["open_new_tab"],intval($_POST["use_nofointval($_POST["priority"], 10)ow"], 10)0)),
            keyword = %s,
            url = %s,
            title = %s,
            open_new_tab = %d,
            use_nofollow = %d,
            case_sensitive_search = %d,
            `limit` = %d,
            priority = %d,
            left_boundary = %d,
            right_boundary = %d,
            keyword_before = %s,
            keyword_after = %s,
            post_types = %s,
            categories = %s,
            tags = %s,
            term_group_id = %d
INSERT INTO $wpdb$this->shared->get("slug")_autolink SET 
intval($_POST["case_sensitive_search"], intval($_POST["left_boundary"], 10))          name = sanitize_text_field($_POSsanitize_text_field($_POST["title"])"name"]intval($_POST["limit"], 10)
            category_id = intval($_POST["category_isanitize_text_field($_POST["$_POST_urlyword"])], intval($_POST["open_new_tab"],intval($_POST["use_nofointval($_POST["priority"], 10)ow"], 10)0)),
            keyword = %s,
            url = %s,
            title = %s,
            open_new_tab = %d,
            use_nofollow = %d,
            case_sensitive_search = %d,
            `limit` = %d,
            priority = %d,
            left_boundary = %d,
            right_boundary = %d,
            keyword_before = %s,
            keyword_after = %s,
            post_types = %s,
            categories = %s,
            tags = %s,
            term_group_id = %d
INSERT INTO $wpdb$this->shared->get("slug")_autolink SET 
intval($_POST["case_sensitive_search"], intval($_POST["left_boundary"], 10))          name = sanitize_text_field($_POSsanitize_text_field($_POST["title"])"name"]intval($_POST["limit"], 10)
            category_id = intval($_POST["category_isanitize_text_field($_POST["$_POST_urlyword"])], intval($_POST["open_new_tab"],intval($_POST["use_nofointval($_POST["priority"], 10)ow"], 10)0))intval($_POST["right_boundary"], 10)
            keyword = %s,
            url = %s,
            title = %s,
            open_new_tab = %d,
            use_nofollow = %d,
            case_sensitive_search = %d,
            `limit` = %d,
            priority = %d,
            left_boundary = %d,
            right_boundary = %d,
            keyword_before = %s,
            keyword_after = %s,
            post_types = %s,
            categories = %s,
            tags = %s,
            term_group_id = %d
INSERT INTO $wpdb$this->shared->get("slug")_autolink SET 
intval($_POST["case_sensitive_search"], intval($_POST["left_boundary"], 10))          name = sanitize_text_field($_POSsanitize_text_field($_POST["title"])"name"]intval($_POST["limit"], 10)
            category_id = intval($_POST["category_isanitize_text_field($_POST["$_POST_urlyword"])], intval($_POST["open_new_tab"],intval($_POST["use_nofointval($_POST["priority"], 10)ow"], 10)0))intval($_POST["right_boundary"], 10sanitize_text_field($_POST["keyword_before"])            keyword = %s,
            url = %s,
            title = %s,
            open_new_tab = %d,
            use_nofollow = %d,
            case_sensitive_search = %d,
            `limit` = %d,
            priority = %d,
            left_boundary = %d,
            right_boundary = %d,
            keyword_before = %s,
            keyword_after = %s,
            post_types = %s,
            categories = %s,
            tags = %s,
            term_group_id = %d
INSERT INTO $wpdb$this->shared->get("slug")_autolink SET 
intval($_POST["case_sensitive_searchsanitize_text_field($_POST["keyword_after"]), intval($_POST["left_boundary"], 10))          name = sanitize_text_field($_POSsanitize_text_field($_POST["title"])"name"]intval($_POST["limit"], 10)
            category_id = intval($_POST["category_isanitize_text_field($_POST["$_POST_urlyword"])], intval($_POST["open_new_tab"],intval($_POST["use_nofointval($_POST["priority"], 10)ow"], 10)0))intval($_POST["right_boundary"], 10sanitize_text_field($_POST["keyword_before"])            keyword = %s,
            url = %s,
            title = %s,
            open_new_tab = %d,
            use_nofollow = %d,
            case_sensitive_search = %d,
            `limit` = %d,
            priority = %d,
            left_boundary = %d,
            right_boundary = %d,
            keyword_before = %s,
            keyword_after = %s,
            post_types = %s,
            categories = %s,
            tags = %s,
            term_group_id = %d
INSERT INTO $wpdb$this->shared->get("slug")_autolink SET 
intval($_POST["case_sensitive_searchsanitize_text_field($_POST["kmaybe_serialize($post_types)word_after"]), intval($_POST["left_boundary"], 10))          name = sanitize_text_field($_POSsanitize_text_field($_POST["title"])"name"]intval($_POST["limit"], 10)
            category_id = intval($_POST["category_isanitize_text_field($_POST["$_POST_urlyword"])], intval($_POST["open_new_tab"],intval($_POST["use_nofointval($_POST["priority"], 10)ow"], 10)0))intval($_POST["right_boundary"], 10sanitize_text_field($_POST["keyword_before"])            keyword = %s,
            url = %s,
            title = %s,
            open_new_tab = %d,
            use_nofollow = %d,
            case_sensitive_search = %d,
            `limit` = %d,
            priority = %d,
            left_boundary = %d,
            right_boundary = %d,
            keyword_before = %s,
            keyword_after = %s,
            post_types = %s,
            categories = %s,
            tags = %s,
            term_group_id = %d
INSERT INTO $wpdb$this->shared->get("slug")_autolink SET 
intval($_POST["case_sensitive_searchsanitize_text_fiemaybe_serialize($categories)($_POST["kmaybe_serialize($post_types)word_after"]), intval($_POST["left_boundary"], 10))          name = sanitize_text_field($_POSsanitize_text_field($_POST["title"])"name"]intval($_POST["limit"], 10)
            category_id = intval($_POST["category_isanitize_text_field($_POST["$_POST_urlyword"])], intval($_POST["open_new_tab"],intval($_POST["use_nofointval($_POST["priority"], 10)ow"], 10)0))intval($_POST["right_boundary"], 10sanitize_text_field($_POST["keyword_before"])            keyword = %s,
            url = %s,
            title = %s,
            open_new_tab = %d,
            use_nofollow = %d,
            case_sensitive_search = %d,
            `limit` = %d,
            priority = %d,
            left_boundary = %d,
            right_boundary = %d,
            keyword_before = %s,
            keyword_after = %s,
            post_types = %s,
            categories = %s,
            tags = %s,
            term_group_id = %d
INSERT INTO $wpdb$this->shared->get("slug")_autolink SET 
intval($_POST["case_sensitive_searchsanitize_text_fmaybe_serialize($tags)maybe_serialize($categories)($_POST["kmaybe_serialize($post_types)word_after"]), intval($_POST["left_boundary"], 10))          name = sanitize_text_field($_POSsanitize_text_field($_POST["title"])"name"]intval($_POST["limit"], 10)
            category_id = intval($_POST["category_isanitize_text_field($_POST["$_POST_urlyword"])], intval($_POST["open_new_tab"],intval($_POST["use_nofointval($_POST["priority"], 10)ow"], 10)0))intval($_POST["right_boundary"], 10sanitize_text_field($_POST["keyword_before"])            keyword = %s,
            url = %s,
            title = %s,
            open_new_tab = %d,
            use_nofollow = %d,
            case_sensitive_search = %d,
            `limit` = %d,
            priority = %d,
            left_boundary = %d,
            right_boundary = %d,
            keyword_before = %s,
            keyword_after = %s,
            post_types = %s,
            categories = %s,
            tags = %s,
            term_group_id = %d
INSERT INTO $wpdb$this->shared->get("slug")_autolink SET 
intval($_intval($_POST["term_group_id"], 10)ST["case_sensitive_searchsanitize_text_fmaybe_serialize($tags)maybe_serialize($categories)($_POST["kmaybe_serialize($post_types)word_after"]), intval($_POST["left_boundary"], 10))          name = sanitize_text_field($_POSsanitize_text_field($_POST["title"])"name"]intval($_POST["limit"], 10)
            category_id = intval($_POST["category_isanitize_text_field($_POST["$_POST_urlyword"])], intval($_POST["open_new_tab"],intval($_POST["use_nofointval($_POST["priority"], 10)ow"], 10)0))intval($_POST["right_boundary"], 10sanitize_text_field($_POST["keyword_before"])            keyword = %s,
            url = %s,
            title = %s,
            open_new_tab = %d,
            use_nofollow = %d,
            case_sensitive_search = %d,
            `limit` = %d,
            priority = %d,
            left_boundary = %d,
            right_boundary = %d,
            keyword_before = %s,
            keyword_after = %s,
            post_types = %s,
            categories = %s,
            tags = %s,
            term_group_id = %d
INSERT INTO $wpdb$this->shared->get("slug")_autolink SET 
intval($_intval($_POST["term_group_id"], 10)ST["case_sensitive_searchsanitize_text_fmaybe_serialize($tags)maybe_serialize($categories)($_POST["kmaybe_serialize($post_types)word_after"]), intval($_POST["left_boundary"], 10))          name = sanitize_text_field($_POSsanitize_text_field($_POST["title"])"name"]intval($_POST["limit"], 10)
            category_id = intval($_POST["category_isanitize_text_field($_POST["$_POST_urlyword"])], intval($_POST["open_new_tab"],intval($_POST["use_nofointval($_POST["priority"], 10)ow"], 10)0))intval($_POST["right_boundary"], 10sanitize_text_field($_POST["keyword_before"])            keyword = %s,
            url = %s,
            title = %s,
            open_new_tab = %d,
            use_nofollow = %d,
            case_sensitive_search = %d,
            `limit` = %d,
            priority = %d,
            left_boundary = %d,
            right_boundary = %d,
            keyword_before = %s,
            keyword_after = %s,
            post_types = %s,
            categories = %s,
            tags = %s,
            term_group_id = %d
SQL command (INSERT INTO $wpdb$this->shared->get("slug")_autolink SET intval($_intval($_POST["term_group_id"], 10)ST["case_sensitive_searchsanitize_text_fmaybe_serialize($tags)maybe_serialize($categories)($_POST["kmaybe_serialize($post_types)word_after"]), intval($_POST["left_boundary"], 10)) name = sanitize_text_field($_POSsanitize_text_field($_POST["title"])"name"]intval($_POST["limit"], 10) category_id = intval($_POST["category_isanitize_text_field($_POST["$_POST_urlyword"])], intval($_POST["open_new_tab"],intval($_POST["use_nofointval($_POST["priority"], 10)ow"], 10)0))intval($_POST["right_boundary"], 10sanitize_text_field($_POST["keyword_before"]) keyword = %s, url = %s, title = %s, open_new_tab = %d, use_nofollow = %d, case_sensitive_search = %d, `limit` = %d, priority = %d, left_boundary = %d, right_boundary = %d, keyword_before = %s, keyword_after = %s, post_types = %s, categories = %s, tags = %s, term_group_id = %d) cannot be parsed correct.
DELETE FROM $wpdb$this->shared->get("slug")_autolink WHERE autolink_id = intval($_POST["delete_id"], 10) 
DELETE FROM $wpdb$this->shared->get("slug")_autolink WHERE autolink_id = intval($_POST["delete_id"], 10) 
SQL command (DELETE FROM $wpdb$this->shared->get("slug")_autolink WHERE autolink_id = intval($_POST["delete_id"], 10) ) cannot be parsed correct.
UPDATE $wpdb$this->shared->get("slug")_category SET 
                name = sanitize_text_field($_POST["name"]),
                description = %s
                WHERE category_id = %d
UPDATE $wpdb$this->shared->get("slug")_category SET 
                name = sanitize_text_field($_POST["name"]),
                description = sanitize_text_field($_POST["description"])
                WHERE category_id = %d
UPDATE $wpdb$this->shared->get("slug")_category SET 
$update_id              name = sanitize_text_field($_POST["name"]),
                description = sanitize_text_field($_POST["description"])
                WHERE category_id = %d
UPDATE $wpdb$this->shared->get("slug")_category SET 
$update_id              name = sanitize_text_field($_POST["name"]),
                description = sanitize_text_field($_POST["description"])
                WHERE category_id = %d
SQL command (UPDATE $wpdb$this->shared->get("slug")_category SET $update_id name = sanitize_text_field($_POST["name"]), description = sanitize_text_field($_POST["description"]) WHERE category_id = %d) cannot be parsed correct.
INSERT INTO $wpdb$this->shared->get("slug")_category SET 
            name = sanitize_text_field($_POST["name"]),
            description = %s
INSERT INTO $wpdb$this->shared->get("slug")_category SET 
            name = sanitize_text_field($_POST["name"]),
            description = sanitize_text_field($_POST["description"])
INSERT INTO $wpdb$this->shared->get("slug")_category SET 
            name = sanitize_text_field($_POST["name"]),
            description = sanitize_text_field($_POST["description"])
SQL command (INSERT INTO $wpdb$this->shared->get("slug")_category SET name = sanitize_text_field($_POST["name"]), description = sanitize_text_field($_POST["description"])) cannot be parsed correct.
DELETE FROM $wpdb$this->shared->get("slug")_category WHERE category_id = intval($_POST["delete_id"], 10) 
DELETE FROM $wpdb$this->shared->get("slug")_category WHERE category_id = intval($_POST["delete_id"], 10) 
SQL command (DELETE FROM $wpdb$this->shared->get("slug")_category WHERE category_id = intval($_POST["delete_id"], 10) ) cannot be parsed correct.
CREATE TEMPORARY TABLE daextam_temporary_table SELECT * FROM $wpdb$this->shared->get("slug")_category WHERE category_id = intval($_POST["clone_id"], 10)
SQL command (CREATE TEMPORARY TABLE daextam_temporary_table SELECT * FROM $wpdb$this->shared->get("slug")_category WHERE category_id = intval($_POST["clone_id"], 10)) cannot be parsed correct.
UPDATE daextam_temporary_table SET category_id = NULL
SQL command (UPDATE daextam_temporary_table SET category_id = NULL) cannot be parsed correct.
INSERT INTO $wpdb$this->shared->get("slug")_category SELECT * FROM daextam_temporary_table
SQL command (INSERT INTO $wpdb$this->shared->get("slug")_category SELECT * FROM daextam_temporary_table) cannot be parsed correct.
DROP TEMPORARY TABLE IF EXISTS daextam_temporary_table
SQL command (DROP TEMPORARY TABLE IF EXISTS daextam_temporary_table) cannot be parsed correct.
INSERT INTO $wpdb$this->shared->get("slug")_term_group SET
            name = sanitize_text_field($_POST["name"]),
            
INSERT INTO $wpdb$this->shared->get("slug")_term_group SET
            name = sanitize_text_field($_POST["name"]),
            
SQL command (INSERT INTO $wpdb$this->shared->get("slug")_term_group SET name = sanitize_text_field($_POST["name"]), ) cannot be parsed correct.
DELETE FROM $wpdb$this->shared->get("slug")_term_group WHERE term_group_id = intval($_POST["delete_id"], 10) 
DELETE FROM $wpdb$this->shared->get("slug")_term_group WHERE term_group_id = intval($_POST["delete_id"], 10) 
SQL command (DELETE FROM $wpdb$this->shared->get("slug")_term_group WHERE term_group_id = intval($_POST["delete_id"], 10) ) cannot be parsed correct.
CREATE TEMPORARY TABLE daextam_temporary_table SELECT * FROM $wpdb$this->shared->get("slug")_term_group WHERE term_group_id = intval($_POST["clone_id"], 10)
SQL command (CREATE TEMPORARY TABLE daextam_temporary_table SELECT * FROM $wpdb$this->shared->get("slug")_term_group WHERE term_group_id = intval($_POST["clone_id"], 10)) cannot be parsed correct.
UPDATE daextam_temporary_table SET term_group_id = NULL
SQL command (UPDATE daextam_temporary_table SET term_group_id = NULL) cannot be parsed correct.
INSERT INTO $wpdb$this->shared->get("slug")_term_group SELECT * FROM daextam_temporary_table
SQL command (INSERT INTO $wpdb$this->shared->get("slug")_term_group SELECT * FROM daextam_temporary_table) cannot be parsed correct.
DROP TEMPORARY TABLE IF EXISTS daextam_temporary_table
SQL command (DROP TEMPORARY TABLE IF EXISTS daextam_temporary_table) cannot be parsed correct.
UPDATE $wpdb$this->shared->get("slug")_term_group SET
                name = sanitize_text_field($_POST["name"]),
                
                WHERE term_group_id = %d
UPDATE $wpdb$this->shared->get("slug")_term_group SET
                name = sanitize_text_field($_POST["name"]),
                
                WHERE term_group_id = $post_type_1
UPDATE $wpdb$this->shared->get("slug")_term_group SET
                name = sanitize_text_field($_POST["name"]),
                
                WHERE term_group_id = $post_type_1
SQL command (UPDATE $wpdb$this->shared->get("slug")_term_group SET name = sanitize_text_field($_POST["name"]), WHERE term_group_id = $post_type_1) cannot be parsed correct.
TRUNCATE TABLE $wpdb$this->shared->get("slug")_statistic
SQL command (TRUNCATE TABLE $wpdb$this->shared->get("slug")_statistic) cannot be parsed correct.
INSERT INTO $wpdb$this->shared->get("slug")_statistic (post_id, content_length, auto_links) VALUES substr($query_body, 0, mb_strlen($query_body) - 1)
SQL command (INSERT INTO $wpdb$this->shared->get("slug")_statistic (post_id, content_length, auto_links) VALUES substr($query_body, 0, mb_strlen($query_body) - 1)) cannot be parsed correct.
UPDATE $wpdb$this->get("slug")_autolink SET 
                        categories = maybe_serialize($category_term_a),
                        tags = %s
                        WHERE autolink_id = %d
UPDATE $wpdb$this->get("slug")_autolink SET 
                        categories = maybe_serialize($category_term_a),
                        tags = maybe_serialize($tag_term_a)
                        WHERE autolink_id = %d
UPDATE $wpdb$this->get("slug")_autolink SET 
$autolink_autolink_id                      categories = maybe_serialize($category_term_a),
                        tags = maybe_serialize($tag_term_a)
                        WHERE autolink_id = %d
UPDATE $wpdb$this->get("slug")_autolink SET 
$autolink_autolink_id                      categories = maybe_serialize($category_term_a),
                        tags = maybe_serialize($tag_term_a)
                        WHERE autolink_id = %d
SQL command (UPDATE $wpdb$this->get("slug")_autolink SET $autolink_autolink_id categories = maybe_serialize($category_term_a), tags = maybe_serialize($tag_term_a) WHERE autolink_id = %d) cannot be parsed correct.
DELETE FROM $wpdb$this->get("slug")_term_group WHERE term_group_id = $term_group_term_group_id 
DELETE FROM $wpdb$this->get("slug")_term_group WHERE term_group_id = $term_group_term_group_id 
SQL command (DELETE FROM $wpdb$this->get("slug")_term_group WHERE term_group_id = $term_group_term_group_id ) cannot be parsed correct.
UPDATE $wpdb$this->get("slug")_term_group SET
                        
                        WHERE term_group_id = $term_group_post_type_1
UPDATE $wpdb$this->get("slug")_term_group SET
                        
                        WHERE term_group_id = $term_group_post_type_1
SQL command (UPDATE $wpdb$this->get("slug")_term_group SET WHERE term_group_id = $term_group_post_type_1) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [3092, 2929, 2963, 2997, 3146, 2644, 5104, 6021, 14336, 14704, 15159, 16686, 15970, 17546, 19157, 20663, 22757, 24423, 26416, 30033, 29799, 14112, 18869, 22475, 29315, 28795, 29746, 3273, 3303, 3333, 3363, 14019, 14031, 14037, 14047, 13744, 13861, 13949, 18517, 18590, 18706, 18776, 18788, 18794, 18804, 22196, 22312, 22382, 22394, 22400, 22410, 21823, 24265, 24657, 30007, 30187, 30926]
Added 0 SQL nodes. 0 out of 57 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:27.875836.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'var daextamAjaxUrl = admin_url("admin-ajax.php")"'' cannot be parsed correct.
HTML code '$'var daextamNonce = wp_create_nonce("daextam")"'' cannot be parsed correct.
HTML code '$'var daextamAdminUrl =get_admin_url()"'' cannot be parsed correct.
HTML code '$'<select id="daextam-defaults-term-group-id" name="daextam_defaults_category_id" class="daext-display-none">'' cannot be parsed correct.
HTML code '$'<select id="daextam-defaults-open-new-tab" name="daextam_defaults_open_new_tab" class="daext-display-none">'' cannot be parsed correct.
HTML code '$'<select id="daextam-defaults-use-nofollow" name="daextam_defaults_use_nofollow" class="daext-display-none">'' cannot be parsed correct.
HTML code '$'<select id="daextam-defaults-categories" name="daextam_defaults_post_types[]" class="daext-display-none" multiple>'' cannot be parsed correct.
HTML code '$'<select id="daextam-defaults-term-group-id" name="daextam_defaults_term_group_id" class="daext-display-none">'' cannot be parsed correct.
HTML code '$'<select id="daextam-defaults-case-sensitive-search" name="daextam_defaults_case_sensitive_search" class="daext-display-none">'' cannot be parsed correct.
HTML code '$'<select id="daextam-defaults-categories" name="daextam_defaults_categories[]" class="daext-display-none" multiple>'' cannot be parsed correct.
HTML code '$'<select id="daextam-defaults-categories" name="daextam_defaults_tags[]" class="daext-display-none" multiple>'' cannot be parsed correct.
HTML code '$'<select id="daextam-analysis-set-max-execution-time" name="daextam_analysis_set_max_execution_time" class="daext-display-none">'' cannot be parsed correct.
HTML code '$'<input maxlength="7" type="text" id="daextam_analysis_max_execution_time_value" name="daextam_analysis_max_execution_time_value" class="regular-text" value="intval(get_option("daextam_analysis_max_execution_time_value"), 10)" /'' cannot be parsed correct.
HTML code '$'<select id="daextam-defaults-left-boundary" name="daextam_defaults_left_boundary" class="daext-display-none">'' cannot be parsed correct.
HTML code '$'<select id="daextam-defaults-right-boundary" name="daextam_defaults_right_boundary" class="daext-display-none">'' cannot be parsed correct.
HTML code '$'<input maxlength="7" type="text" id="daextam_defaults_limit" name="daextam_defaults_limit" class="regular-text" value="intval(get_option("daextam_defaults_limit"), 10)" /'' cannot be parsed correct.
HTML code '$'<select id="daextam-analysis-set-memory-limit" name="daextam_analysis_set_memory_limit" class="daext-display-none">'' cannot be parsed correct.
HTML code '$'<input maxlength="7" type="text" id="daextam_analysis_memory_limit_value" name="daextam_analysis_memory_limit_value" class="regular-text" value="intval(get_option("daextam_analysis_memory_limit_value"), 10)" /'' cannot be parsed correct.
HTML code '$'<input maxlength="7" type="text" id="daextam_analysis_limit_posts_analysis" name="daextam_analysis_limit_posts_analysis" class="regular-text" value="intval(get_option("daextam_analysis_limit_posts_analysis"), 10)" /'' cannot be parsed correct.
HTML code '$'<select id="daextam-analysis-categories" name="daextam_analysis_post_types[]" class="daext-display-none" multiple>'' cannot be parsed correct.
HTML code '$'<input maxlength="7" type="text" id="daextam_defaults_priority" name="daextam_defaults_priority" class="regular-text" value="intval(get_option("daextam_defaults_priority"), 10)" /'' cannot be parsed correct.
HTML code '$'<select id="daextam-advanced-enable-test-mode" name="daextam_advanced_enable_test_mode" class="daext-display-none">'' cannot be parsed correct.
HTML code '$'<select id="daextam-advanced-random-prioritization" name="daextam_advanced_random_prioritization" class="daext-display-none">'' cannot be parsed correct.
HTML code '$'<select id="daextam-advanced-enable-autolinks" name="daextam_advanced_enable_autolinks" class="daext-display-none">'' cannot be parsed correct.
HTML code '$'<input maxlength="11" type="text" id="daextam_advanced_filter_priority" name="daextam_advanced_filter_priority" class="regular-text" value="intval(get_option("daextam_advanced_filter_priority"), 10)" /'' cannot be parsed correct.
HTML code '$'<input maxlength="7" type="text" id="daextam_advanced_supported_terms" name="daextam_advanced_supported_terms" class="regular-text" value="intval(get_option("daextam_advanced_supported_terms"), 10)" /'' cannot be parsed correct.
HTML code '$'<select id="daextam-advanced-ignore-self-autolinks" name="daextam_advanced_ignore_self_autolinks" class="daext-display-none">'' cannot be parsed correct.
HTML code '$'<select id="daextam-advanced-categories-and-tags-verification" name="daextam_advanced_categories_and_tags_verification" class="daext-display-none">'' cannot be parsed correct.
HTML code '$'<select id="daextam-advanced-general-limit-mode" name="daextam_advanced_general_limit_mode" class="daext-display-none">'' cannot be parsed correct.
HTML code '$'<input maxlength="7" type="text" id="daextam_advanced_general_limit_characters_per_autolink" name="daextam_advanced_general_limit_characters_per_autolink" class="regular-text" value="intval(get_option("daextam_advanced_general_limit_characters_per_autolink"), 10)" /'' cannot be parsed correct.
HTML code '$'<input maxlength="7" type="text" id="daextam_advanced_general_limit_amount" name="daextam_advanced_general_limit_amount" class="regular-text" value="intval(get_option("daextam_advanced_general_limit_amount"), 10)" /'' cannot be parsed correct.
HTML code '$'<select id="daextam-advanced-protected-tags" name="daextam_advanced_protected_tags[]" class="daext-display-none" multiple>'' cannot be parsed correct.
HTML code '$'<input maxlength="7" type="text" id="daextam_advanced_same_url_limit" name="daextam_advanced_same_url_limit" class="regular-text" value="intval(get_option("daextam_advanced_same_url_limit"), 10)" /'' cannot be parsed correct.
HTML code '$'$html'' cannot be parsed correct.
HTML code '$'<input type="text" id="daextam_advanced_protected_gutenberg_custom_blocks" name="daextam_advanced_protected_gutenberg_custom_blocks" class="regular-text" value="get_option("daextam_advanced_protected_gutenberg_custom_blocks")" /'' cannot be parsed correct.
HTML code '$'<input type="text" id="daextam_advanced_protected_gutenberg_custom_void_blocks" name="daextam_advanced_protected_gutenberg_custom_void_blocks" class="regular-text" value="get_option("daextam_advanced_protected_gutenberg_custom_void_blocks")" /'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'<input type="hidden" name="cf" value="intval($_GET["cf"], 10)"'' cannot be parsed correct.
HTML code '$'stripslashes($search_string)'' cannot be parsed correct.
HTML code '$'$this->shared->get("slug")'' cannot be parsed correct.
HTML code '$'<option value=$category_category_id"selected(sanitize_text_field($_GET["cf"]), $category["category_id"], false)>stripslashes($category["name"])</option>'' cannot be parsed correct.
HTML code '$'<option value=$category_category_id"stripslashes($category["name"])</option>'' cannot be parsed correct.
HTML code '$'<div class="updated settings-error notice is-dismissible below-h2"><p>The autolink has been successfully added.</p></div>'' cannot be parsed correct.
HTML code '$'intval($result["autolink_id"], 10)'' cannot be parsed correct.
HTML code '$'stripslashes($result["name"])'' cannot be parsed correct.
HTML code '$'stripslashes($this->shared->get_category_name($result["category_id"]))'' cannot be parsed correct.
HTML code '$'$this->shared->get("slug")'' cannot be parsed correct.
HTML code '$'$result_autolink_id'' cannot be parsed correct.
HTML code '$'$this->shared->get("slug")'' cannot be parsed correct.
HTML code '$'$result_autolink_id'' cannot be parsed correct.
HTML code '$'$result_autolink_id'' cannot be parsed correct.
HTML code '$'$this->shared->get("slug")'' cannot be parsed correct.
HTML code '$'$result_autolink_id'' cannot be parsed correct.
HTML code '$'<div class="error settings-error notice is-dismissible below-h2"><p>There are no results that match your filter.</p></div>'' cannot be parsed correct.
HTML code '$'<select id="term-group-id" name="term_group_id" class="daext-display-none">'' cannot be parsed correct.
HTML code '$'$this->shared->get("slug")'' cannot be parsed correct.
HTML code '$'$wpdb->get_row($safe_sql)_autolink_id'' cannot be parsed correct.
HTML code '$'$wpdb->get_row($safe_sql)_autolink_id'' cannot be parsed correct.
HTML code '$'stripslashes($autolink_obj->name)'' cannot be parsed correct.
HTML code '$'<select id="category-id" name="category_id" class="daext-display-none">'' cannot be parsed correct.
HTML code '$'stripslashes($autolink_obj->keyword)'' cannot be parsed correct.
HTML code '$'stripslashes($autolink_obj->url)'' cannot be parsed correct.
HTML code '$'stripslashes($autolink_obj->title)'' cannot be parsed correct.
HTML code '$'<select id="post-types" name="post_types[]" class="daext-display-none" multiple>'' cannot be parsed correct.
HTML code '$'stripslashes($autolink_obj->keyword_before)'' cannot be parsed correct.
HTML code '$'stripslashes($autolink_obj->keyword_after)'' cannot be parsed correct.
HTML code '$'intval($autolink_obj->limit, 10)'' cannot be parsed correct.
HTML code '$'intval($autolink_obj->priority, 10)'' cannot be parsed correct.
HTML code '$'<select id="categories" name="categories[]" class="daext-display-none" multiple>'' cannot be parsed correct.
HTML code '$'<select id="tags" name="tags[]" class="daext-display-none" multiple>'' cannot be parsed correct.
HTML code '$'<select id="post-types" name="post_types[]" class="daext-display-none" multiple>'' cannot be parsed correct.
HTML code '$'<select id="category-id" name="category_id" class="daext-display-none">'' cannot be parsed correct.
HTML code '$'intval(get_option($this->shared->get("slug") . "_defaults_limit"), 10)'' cannot be parsed correct.
HTML code '$'intval(get_option($this->shared->get("slug") . "_defaults_priority"), 10)'' cannot be parsed correct.
HTML code '$'<select id="categories" name="categories[]" class="daext-display-none" multiple>'' cannot be parsed correct.
HTML code '$'<select id="tags" name="tags[]" class="daext-display-none" multiple>'' cannot be parsed correct.
HTML code '$'<select id="term-group-id" name="term_group_id" class="daext-display-none">'' cannot be parsed correct.
HTML code '$'intval($result["category_id"], 10)'' cannot be parsed correct.
HTML code '$'stripslashes($result["name"])'' cannot be parsed correct.
HTML code '$'stripslashes($search_string)'' cannot be parsed correct.
HTML code '$'<div class="updated settings-error notice is-dismissible below-h2"><p>The category has been successfully updated.</p></div>'' cannot be parsed correct.
HTML code '$'For professional users, we distribute a <a href="https://daext.com/autolinks-manager/">esc_attr__("Pro Version", "daext-autolinks-manager")</a> esc_attr__("of this plugin.", "daext-autolinks-manager")</p>'' cannot be parsed correct.
HTML code '$'<strong>Wizard</strong> menu to bulk upload the autolinks with an embedded spreadsheet editor'' cannot be parsed correct.
HTML code '$'<strong>Tracking</strong> menus to monitor all the clicks performed on the autolinks'' cannot be parsed correct.
HTML code '$'<strong>Import</strong> and <strong>Export</strong> menus to store the plugin data (in XML format) or move the plugin data between different WordPress installations'' cannot be parsed correct.
HTML code '$'<strong>Maintenance</strong> menu to perform bulk operations on the plugin data'' cannot be parsed correct.
HTML code '$'Ability to sort the autolinks statistics with a widget included in the <strong>Statistics</strong> menu'' cannot be parsed correct.
HTML code '$'Ability to export the autolinks statistics in a CSV format with a widget included in the <strong>Statistics</strong> menu'' cannot be parsed correct.
HTML code '$'Ability to export the tracking statistics in a CSV format with a widget included in the <strong>Tracking</strong> menu'' cannot be parsed correct.
HTML code '$'30 day money back guarantee (more information is available in the <a href="https://daext.com/refund-policy/">Refund Policy</a> page)'' cannot be parsed correct.
HTML code '$'Download the <a href="https://daext.com/autolinks-manager/">Pro Version</a> esc_attr__("now by selecting one of the available plans.", "daext-autolinks-manager")'' cannot be parsed correct.
HTML code '$'$this->shared->get("url")admin/assets/img/autolinks-manager-pro.png'' cannot be parsed correct.
HTML code '$'$result_post_id'' cannot be parsed correct.
HTML code '$'<td><a href=get_the_permalink($result["post_id"])"get_the_title($result["post_id"])</a></td>'' cannot be parsed correct.
HTML code '$'<td>Not Available</td>'' cannot be parsed correct.
HTML code '$'$result_content_length'' cannot be parsed correct.
HTML code '$'$result_auto_links'' cannot be parsed correct.
HTML code '$'$result_post_id'' cannot be parsed correct.
HTML code '$'<p>There are no results that match your filter criteria.</p>'' cannot be parsed correct.
HTML code '$'stripslashes($result["description"])'' cannot be parsed correct.
HTML code '$'$this->shared->get("slug")'' cannot be parsed correct.
HTML code '$'$result_category_id'' cannot be parsed correct.
HTML code '$'$this->shared->get("slug")'' cannot be parsed correct.
HTML code '$'$result_category_id'' cannot be parsed correct.
HTML code '$'$result_category_id'' cannot be parsed correct.
HTML code '$'$this->shared->get("slug")'' cannot be parsed correct.
HTML code '$'$result_category_id'' cannot be parsed correct.
HTML code '$'<div class="error settings-error notice is-dismissible below-h2"><p>There are no results that match your filter.</p></div>'' cannot be parsed correct.
HTML code '$'$this->shared->get("slug")'' cannot be parsed correct.
HTML code '$'$wpdb->get_row($safe_sql)_category_id'' cannot be parsed correct.
HTML code '$'$wpdb->get_row($safe_sql)_category_id'' cannot be parsed correct.
HTML code '$'stripslashes($category_obj->name)'' cannot be parsed correct.
HTML code '$'stripslashes($category_obj->description)'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'$this->shared->get("url")admin/assets/img/ajax-loader.gif'' cannot be parsed correct.
HTML code '$'<p>There are no data at moment, click on the "Generate" button to generate statistics about the autolinks of your blog.</p>'' cannot be parsed correct.
HTML code '$'$this->shared->get("slug")'' cannot be parsed correct.
HTML code '$'$wpdb->get_row($safe_sql)_term_group_id'' cannot be parsed correct.
HTML code '$'$wpdb->get_row($safe_sql)_term_group_id'' cannot be parsed correct.
HTML code '$'stripslashes($term_group_obj->name)'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'<option value=stripslashes($post_type)"selected($post_type, $term_group_obj->"post_type_" . $i, false)>stripslashes($post_type_obj->label)</option>'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'<option value=$taxonomy"selected($taxonomy, $term_group_obj->"taxonomy_" . $i, false)>$taxonomy</option>'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'<option value=$termObj"selected($termObj->term_id, $term_group_obj->"term_" . $i, false)>$termObj</option>'' cannot be parsed correct.
HTML code '$'stripslashes($search_string)'' cannot be parsed correct.
HTML code '$'<div class="error settings-error notice is-dismissible below-h2"><p>This term group is associated with one or more autolinks and can\'t be deleted.</p></div>'' cannot be parsed correct.
HTML code '$'intval($result["term_group_id"], 10)'' cannot be parsed correct.
HTML code '$'stripslashes($result["name"])'' cannot be parsed correct.
HTML code '$'$this->shared->get("slug")'' cannot be parsed correct.
HTML code '$'$result_term_group_id'' cannot be parsed correct.
HTML code '$'$this->shared->get("slug")'' cannot be parsed correct.
HTML code '$'$result_term_group_id'' cannot be parsed correct.
HTML code '$'$result_term_group_id'' cannot be parsed correct.
HTML code '$'$this->shared->get("slug")'' cannot be parsed correct.
HTML code '$'$result_term_group_id'' cannot be parsed correct.
HTML code '$'<div class="error settings-error notice is-dismissible below-h2"><p>There are no results that match your filter.</p></div>'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'<option value=stripslashes($post_type)"stripslashes($post_type_obj->label)</option>'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'var daextamAjaxUrl = admin_url("admin-ajax.php")"'' cannot be parsed correct.
HTML code '$'var daextamNonce = wp_create_nonce("daextam")"'' cannot be parsed correct.
HTML code '$'json_encode($taxonomy_obj_a)'' cannot be parsed correct.
HTML code '$'json_encode($terms)'' cannot be parsed correct.
HTML code '$'<script type="text/javascript">'' cannot be parsed correct.
HTML code '$'</script>'' cannot be parsed correct.
HTML code '$'<script type="text/javascript">'' cannot be parsed correct.
HTML code '$'</script>'' cannot be parsed correct.
HTML code '$'success'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:15.831880.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.046040.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 0 do_action/apply_filters calls and 21 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.847205.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FileProDetector
### Start running FrontBaseDetector
### Finish running DbaseDetector
### Start running HashDetector
### Finish running DbplusDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running FirebirdInterBaseDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running IBMDb2Detector
### Start running MongoDbDetector
### Finish running InformixDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IngresDetector
### Start running MySQLDetector
### Finish running ArrayElementDetector
### Start running MySQLiDetector
### Finish running MsqlDetector
### Start running Oci8Detector
### Finish running MySQLDetector
### Start running OpenSSLDetector
### Finish running MongoDbDetector
### Start running ParadoxDetector
### Finish running Oci8Detector
### Start running PasswordHashingDetector
### Finish running ParadoxDetector
### Start running PhpCurlDetector
### Finish running PhpCurlDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running HashDetector
### Start running PHPRetrievalDetector
### Finish running PasswordHashingDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPStorageDetector
### Start running PhpVarDetector
### Finish running PHPRetrievalDetector
### Start running PostgreSQLDetector
### Finish running PhpVarDetector
### Start running PropertyDetector
### Finish running OpenSSLDetector
### Start running Sqlite3Detector
### Finish running PHPIncludedDetector
### Start running SqliteDetector
### Finish running PostgreSQLDetector
### Start running SqlServerDetector
### Finish running Sqlite3Detector
### Start running SybaseDetector
### Finish running SqliteDetector
### Start running TokyoTyrantDetector
### Finish running PropertyDetector
### Start running UserInputDetector
### Finish running TokyoTyrantDetector
### Start running VariableDetector
### Finish running SybaseDetector
### Start running WordpressHashingFnDetector
### Finish running SqlServerDetector
### Start running WordPressRemoteDetector
### Finish running WordPressRemoteDetector
### Start running WordPressRetrievalDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressStorageDetector
### Finish running UserInputDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running VariableDetector
### Start running GenericEncryptionDetector
### Finish running maxdbDetector
### Start running DeletionDetector
### Finish running MySQLiDetector
### Start running UninstallDetector
### Finish running GenericEncryptionDetector
### Finish running GenericDatabaseUsageDetector
### Finish running WordPressStorageDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running WordPressRetrievalDetector
### Finished running detectors
shared/class-daextam-shared.php:1228
  - MD5 called with parameters [post_id, autolink_id, -, autolink]. Ignore if [post_id, autolink_id, -, autolink] does not contain personal information. 

admin/class-daextam-admin.php:563
  - RETRIEVAL call to get_option($this->shared->get("slug") . "_database_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:575
  - RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).
admin/class-daextam-admin.php:600
  - RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).
admin/class-daextam-admin.php:609
  - RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).
admin/class-daextam-admin.php:627
  - RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).
admin/class-daextam-admin.php:1361
  - RETRIEVAL call to get_option("daextam_defaults_category_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1370
  - RETRIEVAL call to get_option("daextam_defaults_category_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1393
  - RETRIEVAL call to get_option("daextam_defaults_open_new_tab") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1395
  - RETRIEVAL call to get_option("daextam_defaults_open_new_tab") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1416
  - RETRIEVAL call to get_option("daextam_defaults_use_nofollow") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1418
  - RETRIEVAL call to get_option("daextam_defaults_use_nofollow") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1438
  - RETRIEVAL call to get_option("daextam_defaults_post_types") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1482
  - RETRIEVAL call to get_option("daextam_defaults_categories") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1523
  - RETRIEVAL call to get_option("daextam_defaults_tags") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1567
  - RETRIEVAL call to get_option("daextam_defaults_term_group_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1576
  - RETRIEVAL call to get_option("daextam_defaults_term_group_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1600
  - RETRIEVAL call to get_option("daextam_defaults_case_sensitive_search") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1602
  - RETRIEVAL call to get_option("daextam_defaults_case_sensitive_search") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1623
  - RETRIEVAL call to get_option("daextam_defaults_left_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1625
  - RETRIEVAL call to get_option("daextam_defaults_left_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1627
  - RETRIEVAL call to get_option("daextam_defaults_left_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1629
  - RETRIEVAL call to get_option("daextam_defaults_left_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1631
  - RETRIEVAL call to get_option("daextam_defaults_left_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1647
  - RETRIEVAL call to get_option("daextam_defaults_left_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1656
  - RETRIEVAL call to get_option("daextam_defaults_right_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1658
  - RETRIEVAL call to get_option("daextam_defaults_right_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1660
  - RETRIEVAL call to get_option("daextam_defaults_right_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1662
  - RETRIEVAL call to get_option("daextam_defaults_right_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1664
  - RETRIEVAL call to get_option("daextam_defaults_right_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1680
  - RETRIEVAL call to get_option("daextam_defaults_right_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1688
  - RETRIEVAL call to get_option("daextam_defaults_limit") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1703
  - RETRIEVAL call to get_option("daextam_defaults_limit") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1716
  - RETRIEVAL call to get_option("daextam_defaults_priority") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1731
  - RETRIEVAL call to get_option("daextam_defaults_priority") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1745
  - RETRIEVAL call to get_option("daextam_analysis_set_max_execution_time") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1747
  - RETRIEVAL call to get_option("daextam_analysis_set_max_execution_time") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1767
  - RETRIEVAL call to get_option("daextam_analysis_max_execution_time_value") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1780
  - RETRIEVAL call to get_option("daextam_analysis_max_execution_time_value") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1793
  - RETRIEVAL call to get_option("daextam_analysis_set_memory_limit") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1795
  - RETRIEVAL call to get_option("daextam_analysis_set_memory_limit") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1815
  - RETRIEVAL call to get_option("daextam_analysis_memory_limit_value") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1828
  - RETRIEVAL call to get_option("daextam_analysis_memory_limit_value") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1840
  - RETRIEVAL call to get_option("daextam_analysis_limit_posts_analysis") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1854
  - RETRIEVAL call to get_option("daextam_analysis_limit_posts_analysis") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1867
  - RETRIEVAL call to get_option("daextam_analysis_post_types") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1912
  - RETRIEVAL call to get_option("daextam_advanced_enable_autolinks") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1914
  - RETRIEVAL call to get_option("daextam_advanced_enable_autolinks") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1934
  - RETRIEVAL call to get_option("daextam_advanced_filter_priority") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1948
  - RETRIEVAL call to get_option("daextam_advanced_filter_priority") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1961
  - RETRIEVAL call to get_option("daextam_advanced_enable_test_mode") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1963
  - RETRIEVAL call to get_option("daextam_advanced_enable_test_mode") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1983
  - RETRIEVAL call to get_option("daextam_advanced_random_prioritization") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:1985
  - RETRIEVAL call to get_option("daextam_advanced_random_prioritization") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:2006
  - RETRIEVAL call to get_option("daextam_advanced_ignore_self_autolinks") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:2008
  - RETRIEVAL call to get_option("daextam_advanced_ignore_self_autolinks") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:2028
  - RETRIEVAL call to get_option("daextam_advanced_categories_and_tags_verification") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:2030
  - RETRIEVAL call to get_option("daextam_advanced_categories_and_tags_verification") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:2056
  - RETRIEVAL call to get_option("daextam_advanced_general_limit_mode") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:2058
  - RETRIEVAL call to get_option("daextam_advanced_general_limit_mode") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:2078
  - RETRIEVAL call to get_option("daextam_advanced_general_limit_characters_per_autolink") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:2095
  - RETRIEVAL call to get_option("daextam_advanced_general_limit_characters_per_autolink") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:2107
  - RETRIEVAL call to get_option("daextam_advanced_general_limit_amount") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:2122
  - RETRIEVAL call to get_option("daextam_advanced_general_limit_amount") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:2134
  - RETRIEVAL call to get_option("daextam_advanced_same_url_limit") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:2148
  - RETRIEVAL call to get_option("daextam_advanced_same_url_limit") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:2160
  - RETRIEVAL call to get_option("daextam_advanced_supported_terms") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:2174
  - RETRIEVAL call to get_option("daextam_advanced_supported_terms") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:2186
  - RETRIEVAL call to get_option("daextam_advanced_protected_tags") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:2337
  - RETRIEVAL call to get_option("daextam_advanced_protected_gutenberg_blocks") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:2483
  - RETRIEVAL call to get_option("daextam_advanced_protected_gutenberg_custom_blocks") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:2498
  - RETRIEVAL call to get_option("daextam_advanced_protected_gutenberg_custom_blocks") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:2510
  - RETRIEVAL call to get_option("daextam_advanced_protected_gutenberg_custom_void_blocks") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:2525
  - RETRIEVAL call to get_option("daextam_advanced_protected_gutenberg_custom_void_blocks") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-daextam-admin.php:2574
  - RETRIEVAL call to get_post_meta($post->ID, "_daextam_enable_autolinks", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/class-daextam-admin.php:2578
  - RETRIEVAL call to get_option($this->shared->get("slug") . "_advanced_enable_autolinks") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/view/autolinks.php:961
  - RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_category_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/view/autolinks.php:970
  - RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_category_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/view/autolinks.php:1028
  - RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_open_new_tab") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/view/autolinks.php:1030
  - RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_open_new_tab") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/view/autolinks.php:1044
  - RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_use_nofollow") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/view/autolinks.php:1046
  - RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_use_nofollow") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/view/autolinks.php:1069
  - RETRIEVAL call to get_option("daextam_defaults_post_types") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/view/autolinks.php:1108
  - RETRIEVAL call to get_option("daextam_defaults_categories") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/view/autolinks.php:1143
  - RETRIEVAL call to get_option("daextam_defaults_tags") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/view/autolinks.php:1181
  - RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_term_group_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/view/autolinks.php:1182
  - RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_term_group_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/view/autolinks.php:1191
  - RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_term_group_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/view/autolinks.php:1220
  - RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_case_sensitive_search") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/view/autolinks.php:1222
  - RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_case_sensitive_search") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/view/autolinks.php:1236
  - RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_left_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/view/autolinks.php:1238
  - RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_left_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/view/autolinks.php:1240
  - RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_left_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/view/autolinks.php:1242
  - RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_left_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/view/autolinks.php:1244
  - RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_left_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/view/autolinks.php:1257
  - RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_right_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/view/autolinks.php:1259
  - RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_right_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/view/autolinks.php:1261
  - RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_right_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/view/autolinks.php:1263
  - RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_right_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/view/autolinks.php:1265
  - RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_right_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/view/autolinks.php:1299
  - RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_limit") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/view/autolinks.php:1311
  - RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_priority") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/view/term_groups.php:7
  - RETRIEVAL call to get_option($this->shared->get("slug") . "_advanced_supported_terms") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class-daextam-ajax.php:62
  - RETRIEVAL call to get_option($this->shared->get("slug") . "_analysis_set_max_execution_time") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class-daextam-ajax.php:64
  - RETRIEVAL call to get_option($this->shared->get("slug") . "_analysis_max_execution_time_value") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class-daextam-ajax.php:71
  - RETRIEVAL call to get_option($this->shared->get("slug") . "_analysis_set_memory_limit") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class-daextam-ajax.php:73
  - RETRIEVAL call to get_option($this->shared->get("slug") . "_analysis_memory_limit_value") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class-daextam-ajax.php:83
  - RETRIEVAL call to get_option($this->shared->get("slug") . "_analysis_post_types") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class-daextam-ajax.php:109
  - RETRIEVAL call to get_option($this->shared->get("slug") . "_analysis_limit_posts_analysis") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
public/class-daextam-public.php:28
  - RETRIEVAL call to get_option($this->shared->get("slug") . "_advanced_enable_test_mode") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
public/class-daextam-public.php:32
  - RETRIEVAL call to get_option($this->shared->get("slug") . "_advanced_filter_priority") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
public/class-daextam-public.php:119
  - RETRIEVAL call to get_option($key) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
shared/class-daextam-shared.php:258
  - RETRIEVAL call to get_post_meta($this->post_id, "_daextam_enable_autolinks", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
shared/class-daextam-shared.php:260
  - RETRIEVAL call to get_option($this->get("slug") . "_advanced_enable_autolinks") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
shared/class-daextam-shared.php:274
  - RETRIEVAL call to get_option($this->get("slug") . "_advanced_same_url_limit") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
shared/class-daextam-shared.php:289
  - RETRIEVAL call to get_option($this->get("slug") . "_advanced_random_prioritization") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
shared/class-daextam-shared.php:316
  - RETRIEVAL call to get_option($this->get("slug") . "_advanced_ignore_self_autolinks") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
shared/class-daextam-shared.php:355
  - RETRIEVAL call to get_option($this->get("slug") . "_advanced_categories_and_tags_verification") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
shared/class-daextam-shared.php:496
  - RETRIEVAL call to get_option($this->get("slug") . "_advanced_protected_gutenberg_blocks") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
shared/class-daextam-shared.php:503
  - RETRIEVAL call to get_option($this->get("slug") . "_advanced_protected_gutenberg_custom_blocks") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
shared/class-daextam-shared.php:508
  - RETRIEVAL call to get_option($this->get("slug") . "_advanced_protected_gutenberg_custom_void_blocks") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
shared/class-daextam-shared.php:635
  - RETRIEVAL call to get_option($this->get("slug") . "_advanced_protected_tags") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
shared/class-daextam-shared.php:947
  - RETRIEVAL call to get_option($this->get("slug") . "_advanced_general_limit_mode") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
shared/class-daextam-shared.php:950
  - RETRIEVAL call to get_post($post_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
shared/class-daextam-shared.php:952
  - RETRIEVAL call to get_option($this->get("slug") . "_advanced_general_limit_characters_per_autolink") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
shared/class-daextam-shared.php:960
  - RETRIEVAL call to get_option($this->get("slug") . "_advanced_general_limit_amount") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
shared/class-daextam-shared.php:1057
  - RETRIEVAL call to get_option($this->get("slug") . "_advanced_supported_terms") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
shared/class-daextam-shared.php:1671
  - RETRIEVAL call to get_option($this->get("slug") . "_analysis_set_max_execution_time") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
shared/class-daextam-shared.php:1673
  - RETRIEVAL call to get_option($this->get("slug") . "_analysis_max_execution_time_value") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
shared/class-daextam-shared.php:1680
  - RETRIEVAL call to get_option($this->get("slug") . "_analysis_set_memory_limit") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
shared/class-daextam-shared.php:1681
  - RETRIEVAL call to get_option($this->get("slug") . "_analysis_memory_limit_value") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option 

admin/class-daextam-admin.php:546
  - STORAGE call to add_option($key, $value) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-daextam-admin.php:630
  - STORAGE call to update_option($this->shared->get("slug") . "_database_version", "1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-daextam-admin.php:691
  - STORAGE call to delete_option($key) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
admin/class-daextam-admin.php:2633
  - STORAGE call to update_post_meta($post_id, "_daextam_enable_autolinks", intval($_POST["daextam_enable_autolinks"], 10)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta 

admin/class-daextam-admin.php:691
  - DELETION call to delete_option($key) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

By data type:
none
	PHPIncludedDetector.(unknown) - set()
	WordPressRetrievalDetector.dbDelta($sql) - set()
	WordPressRetrievalDetector.dbDelta($sql) - set()
	WordPressRetrievalDetector.dbDelta($sql) - set()
	WordPressRetrievalDetector.dbDelta($sql) - set()
option
	WordPressRetrievalDetector.get_option("daextam_defaults_right_boundary") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_advanced_enable_test_mode") - {'option'}
	WordPressRetrievalDetector.get_option($this->shared->get("slug") . "_defaults_open_new_tab") - {'option'}
	WordPressRetrievalDetector.get_option($this->get("slug") . "_advanced_ignore_self_autolinks") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_defaults_right_boundary") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_defaults_right_boundary") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_advanced_general_limit_characters_per_autolink") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_defaults_term_group_id") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_advanced_supported_terms") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_analysis_set_memory_limit") - {'option'}
	WordPressRetrievalDetector.get_option($this->get("slug") . "_advanced_categories_and_tags_verification") - {'option'}
	WordPressRetrievalDetector.get_option($this->shared->get("slug") . "_defaults_case_sensitive_search") - {'option'}
	WordPressRetrievalDetector.get_option($this->shared->get("slug") . "_defaults_right_boundary") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_defaults_left_boundary") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_advanced_protected_gutenberg_custom_blocks") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_defaults_right_boundary") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_advanced_protected_gutenberg_custom_void_blocks") - {'option'}
	WordPressStorageDetector.add_option($key, $value) - {'option'}
	WordPressRetrievalDetector.get_option("daextam_defaults_case_sensitive_search") - {'option'}
	WordPressRetrievalDetector.get_option($this->shared->get("slug") . "_defaults_term_group_id") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_defaults_left_boundary") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_defaults_categories") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_defaults_left_boundary") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_defaults_use_nofollow") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_advanced_general_limit_amount") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_advanced_supported_terms") - {'option'}
	WordPressRetrievalDetector.get_option($this->get("slug") . "_advanced_general_limit_amount") - {'option'}
	WordPressRetrievalDetector.get_option($this->get("slug") . "_analysis_set_max_execution_time") - {'option'}
	WordPressRetrievalDetector.get_option($this->shared->get("slug") . "_defaults_open_new_tab") - {'option'}
	WordPressRetrievalDetector.get_option($this->get("slug") . "_advanced_protected_gutenberg_blocks") - {'option'}
	WordPressRetrievalDetector.get_option($this->shared->get("slug") . "_database_version") - {'option'}
	WordPressRetrievalDetector.get_option($this->get("slug") . "_analysis_max_execution_time_value") - {'option'}
	WordPressRetrievalDetector.get_option($this->shared->get("slug") . "_defaults_right_boundary") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_analysis_max_execution_time_value") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_analysis_memory_limit_value") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_defaults_left_boundary") - {'option'}
	WordPressRetrievalDetector.get_option($this->shared->get("slug") . "_defaults_term_group_id") - {'option'}
	WordPressRetrievalDetector.get_option($this->get("slug") . "_analysis_memory_limit_value") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_defaults_limit") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_advanced_categories_and_tags_verification") - {'option'}
	WordPressRetrievalDetector.get_option($this->get("slug") . "_advanced_general_limit_characters_per_autolink") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_defaults_case_sensitive_search") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_defaults_priority") - {'option'}
	WordPressRetrievalDetector.get_option($this->shared->get("slug") . "_defaults_left_boundary") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_advanced_protected_gutenberg_custom_void_blocks") - {'option'}
	WordPressRetrievalDetector.get_option($this->shared->get("slug") . "_defaults_left_boundary") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_advanced_same_url_limit") - {'option'}
	WordPressRetrievalDetector.get_option($this->get("slug") . "_advanced_protected_tags") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_defaults_priority") - {'option'}
	WordPressRetrievalDetector.get_option($this->shared->get("slug") . "_defaults_category_id") - {'option'}
	WordPressRetrievalDetector.get_option($this->get("slug") . "_advanced_general_limit_mode") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_advanced_enable_test_mode") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_advanced_categories_and_tags_verification") - {'option'}
	WordPressRetrievalDetector.get_option($this->shared->get("slug") . "_defaults_right_boundary") - {'option'}
	WordPressRetrievalDetector.get_option($this->shared->get("slug") . "_analysis_memory_limit_value") - {'option'}
	WordPressRetrievalDetector.get_option($this->shared->get("slug") . "_defaults_priority") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_advanced_random_prioritization") - {'option'}
	WordPressRetrievalDetector.get_option($this->get("slug") . "_advanced_supported_terms") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_analysis_limit_posts_analysis") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_defaults_post_types") - {'option'}
	WordPressStorageDetector.update_option($this->shared->get("slug") . "_database_version", "1") - {'option'}
	WordPressRetrievalDetector.get_option($this->shared->get("slug") . "_defaults_right_boundary") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_analysis_set_max_execution_time") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_defaults_use_nofollow") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_analysis_limit_posts_analysis") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_advanced_general_limit_mode") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_defaults_post_types") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_advanced_filter_priority") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_defaults_left_boundary") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_defaults_tags") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_analysis_max_execution_time_value") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_defaults_left_boundary") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_advanced_ignore_self_autolinks") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_defaults_open_new_tab") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_defaults_limit") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_advanced_filter_priority") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_defaults_right_boundary") - {'option'}
	WordPressRetrievalDetector.get_option($this->shared->get("slug") . "_defaults_category_id") - {'option'}
	WordPressRetrievalDetector.get_option($this->shared->get("slug") . "_defaults_limit") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_advanced_enable_autolinks") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_defaults_term_group_id") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_advanced_general_limit_mode") - {'option'}
	WordPressRetrievalDetector.get_option($this->get("slug") . "_advanced_same_url_limit") - {'option'}
	WordPressStorageDetector.delete_option($key) - {'option'}
	DeletionDetector.delete_option($key) - {'option'}
	WordPressRetrievalDetector.get_option($this->shared->get("slug") . "_advanced_enable_autolinks") - {'option'}
	WordPressRetrievalDetector.get_option($this->shared->get("slug") . "_defaults_case_sensitive_search") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_defaults_right_boundary") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_advanced_random_prioritization") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_advanced_protected_gutenberg_blocks") - {'option'}
	WordPressRetrievalDetector.get_option($this->shared->get("slug") . "_defaults_right_boundary") - {'option'}
	WordPressRetrievalDetector.get_option($this->shared->get("slug") . "_defaults_left_boundary") - {'option'}
	WordPressRetrievalDetector.get_option($this->shared->get("slug") . "_advanced_enable_test_mode") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_defaults_open_new_tab") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_advanced_general_limit_amount") - {'option'}
	WordPressRetrievalDetector.get_option($this->shared->get("slug") . "_analysis_limit_posts_analysis") - {'option'}
	WordPressRetrievalDetector.get_option($this->shared->get("slug") . "_defaults_use_nofollow") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_advanced_protected_tags") - {'option'}
	WordPressRetrievalDetector.get_option($this->shared->get("slug") . "_analysis_max_execution_time_value") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_advanced_enable_autolinks") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_analysis_set_max_execution_time") - {'option'}
	WordPressRetrievalDetector.get_option($this->shared->get("slug") . "_advanced_filter_priority") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_analysis_post_types") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_defaults_categories") - {'option'}
	WordPressRetrievalDetector.get_option($this->shared->get("slug") . "_analysis_set_max_execution_time") - {'option'}
	WordPressRetrievalDetector.get_option($this->shared->get("slug") . "_analysis_set_memory_limit") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_advanced_ignore_self_autolinks") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_advanced_general_limit_characters_per_autolink") - {'option'}
	WordPressRetrievalDetector.get_option($this->shared->get("slug") . "_defaults_term_group_id") - {'option'}
	WordPressRetrievalDetector.get_option($this->get("slug") . "_advanced_protected_gutenberg_custom_void_blocks") - {'option'}
	WordPressRetrievalDetector.get_option($key) - {'option'}
	WordPressRetrievalDetector.get_option($this->shared->get("slug") . "_defaults_use_nofollow") - {'option'}
	WordPressRetrievalDetector.get_option($this->shared->get("slug") . "_advanced_supported_terms") - {'option'}
	WordPressRetrievalDetector.get_option($this->get("slug") . "_advanced_protected_gutenberg_custom_blocks") - {'option'}
	WordPressRetrievalDetector.get_option($this->shared->get("slug") . "_defaults_left_boundary") - {'option'}
	WordPressRetrievalDetector.get_option($this->shared->get("slug") . "_defaults_left_boundary") - {'option'}
	WordPressRetrievalDetector.get_option($this->get("slug") . "_analysis_set_memory_limit") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_advanced_protected_gutenberg_custom_blocks") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_analysis_set_memory_limit") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_defaults_category_id") - {'option'}
	WordPressRetrievalDetector.get_option($this->get("slug") . "_advanced_random_prioritization") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_defaults_tags") - {'option'}
	WordPressRetrievalDetector.get_option($this->shared->get("slug") . "_analysis_post_types") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_analysis_memory_limit_value") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_defaults_category_id") - {'option'}
	WordPressRetrievalDetector.get_option($this->get("slug") . "_advanced_enable_autolinks") - {'option'}
	WordPressRetrievalDetector.get_option("daextam_advanced_same_url_limit") - {'option'}
post
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'post', 'wp_post'}
post_meta
	WordPressRetrievalDetector.get_post_meta($post->ID, "_daextam_enable_autolinks", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($post_id, "_daextam_enable_autolinks", intval($_POST["daextam_enable_autolinks"], 10)) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($this->post_id, "_daextam_enable_autolinks", true) - {'post_meta'}
wp_post
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'post', 'wp_post'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:22.186195.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 372 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.878386.

372 STORE_REACHES edges created
372 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
In total, tainted 0 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 1 nodes as ENCRYPTED
In total, tainted 1 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:00.189934.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:03:11.421535!
DELETION call to delete_option($key) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
MD5 called with parameters [post_id, autolink_id, -, autolink]. Ignore if [post_id, autolink_id, -, autolink] does not contain personal information.,md5,None
RETRIEVAL call to get_option("daextam_defaults_category_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_defaults_category_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_defaults_open_new_tab") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_defaults_open_new_tab") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_defaults_use_nofollow") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_defaults_use_nofollow") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_defaults_post_types") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_defaults_categories") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_defaults_tags") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_defaults_term_group_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_defaults_term_group_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_defaults_case_sensitive_search") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_defaults_case_sensitive_search") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_defaults_left_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_defaults_left_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_defaults_left_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_defaults_left_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_defaults_left_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_defaults_left_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_defaults_right_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_defaults_right_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_defaults_right_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_defaults_right_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_defaults_right_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_defaults_right_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_defaults_limit") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_defaults_limit") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_defaults_priority") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_defaults_priority") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_analysis_set_max_execution_time") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_analysis_set_max_execution_time") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_analysis_max_execution_time_value") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_analysis_max_execution_time_value") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_analysis_set_memory_limit") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_analysis_set_memory_limit") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_analysis_memory_limit_value") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_analysis_memory_limit_value") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_analysis_limit_posts_analysis") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_analysis_limit_posts_analysis") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_analysis_post_types") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_advanced_enable_autolinks") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_advanced_enable_autolinks") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_advanced_filter_priority") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_advanced_filter_priority") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_advanced_enable_test_mode") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_advanced_enable_test_mode") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_advanced_random_prioritization") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_advanced_random_prioritization") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_advanced_ignore_self_autolinks") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_advanced_ignore_self_autolinks") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_advanced_categories_and_tags_verification") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_advanced_categories_and_tags_verification") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_advanced_general_limit_mode") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_advanced_general_limit_mode") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_advanced_general_limit_characters_per_autolink") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_advanced_general_limit_characters_per_autolink") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_advanced_general_limit_amount") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_advanced_general_limit_amount") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_advanced_same_url_limit") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_advanced_same_url_limit") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_advanced_supported_terms") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_advanced_supported_terms") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_advanced_protected_tags") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_advanced_protected_gutenberg_blocks") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_advanced_protected_gutenberg_custom_blocks") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_advanced_protected_gutenberg_custom_blocks") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_advanced_protected_gutenberg_custom_void_blocks") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_advanced_protected_gutenberg_custom_void_blocks") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "_daextam_enable_autolinks", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->shared->get("slug") . "_advanced_enable_autolinks") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->shared->get("slug") . "_database_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_open_new_tab") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_open_new_tab") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_use_nofollow") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_use_nofollow") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_defaults_post_types") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_defaults_categories") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("daextam_defaults_tags") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_term_group_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_term_group_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_term_group_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_case_sensitive_search") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_case_sensitive_search") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_left_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_left_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_left_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_left_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_left_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_right_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_right_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_right_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_right_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_right_boundary") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_limit") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_priority") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_category_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->shared->get("slug") . "_defaults_category_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->shared->get("slug") . "_advanced_supported_terms") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->shared->get("slug") . "_analysis_limit_posts_analysis") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->shared->get("slug") . "_analysis_set_max_execution_time") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->shared->get("slug") . "_analysis_max_execution_time_value") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->shared->get("slug") . "_analysis_set_memory_limit") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->shared->get("slug") . "_analysis_memory_limit_value") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->shared->get("slug") . "_analysis_post_types") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($key) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->shared->get("slug") . "_advanced_enable_test_mode") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->shared->get("slug") . "_advanced_filter_priority") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->get("slug") . "_advanced_supported_terms") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->get("slug") . "_analysis_set_max_execution_time") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->get("slug") . "_analysis_max_execution_time_value") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->get("slug") . "_analysis_set_memory_limit") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->get("slug") . "_analysis_memory_limit_value") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($this->post_id, "_daextam_enable_autolinks", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->get("slug") . "_advanced_enable_autolinks") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->get("slug") . "_advanced_same_url_limit") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->get("slug") . "_advanced_random_prioritization") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->get("slug") . "_advanced_ignore_self_autolinks") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->get("slug") . "_advanced_categories_and_tags_verification") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->get("slug") . "_advanced_protected_gutenberg_blocks") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->get("slug") . "_advanced_protected_gutenberg_custom_blocks") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->get("slug") . "_advanced_protected_gutenberg_custom_void_blocks") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->get("slug") . "_advanced_protected_tags") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->get("slug") . "_advanced_general_limit_mode") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($post_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option($this->get("slug") . "_advanced_general_limit_characters_per_autolink") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->get("slug") . "_advanced_general_limit_amount") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
STORAGE call to update_post_meta($post_id, "_daextam_enable_autolinks", intval($_POST["daextam_enable_autolinks"], 10)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to add_option($key, $value) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option($this->shared->get("slug") . "_database_version", "1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option($key) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found no personal data in the plugin. No analysis needed. 

[main] Complaint? True 

No findings
