Timeout in resolving values
Timeout in running neo4j query
Running Main.py on bp-moderation

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.619541.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.203908.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 58 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.583919.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 2 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.662020.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 1425 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:01.259559.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 32 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:01.169884.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.091261.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 569 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:09.443817.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 10311
Added 8225 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 10978
Added 667 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.765851.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/bp-moderation/bpModLoader.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/bp-moderation/classes/bpModAbstractCore.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/bp-moderation/classes/bpModAbstractDBobj.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/bp-moderation/classes/bpModActions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/bp-moderation/classes/bpModBackendActions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/bp-moderation/classes/bpModBackend.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/bp-moderation/classes/bpModDefaultContentTypes.php' cannot be parsed correct.
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/bp-moderation/classes/bpModeration.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/bp-moderation/classes/bpModeration.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/bp-moderation/classes/bpModFrontend.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/bp-moderation/classes/bpModInstaller.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/bp-moderation/classes/bpModObjContent.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/bp-moderation/classes/bpModObjFlag.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/bp-moderation/examples/bpMod_ContentType_BlogPostExample.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:01.357393.

2 Nodes Created
58 PHP_REACHES edges created
2 REACHES edges created
1000 PHP_REACHES edges created
1425 PHP_REACHES edges created
32 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
8794 PHP_REACHES edges created
667 PHP_REACHES edges created
1 DIRECTORY_OF edges created
1 FILE_OF edges created
10980 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 3675 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.470383.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 1 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:02.962599.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 142 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:04.913889.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 107 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.183130.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.183742.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:01.249727.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.025520.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.032213.

1 CALLS edges created
249 PHP_REACHES edges created
250 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 208 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.227717.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
18 SQL operations to process.
$sql
SQL command ($sql) cannot be parsed correct.
SELECT ID FROM $wpdb WHERE ID != 1
SQL command (SELECT ID FROM $wpdb WHERE ID != 1) cannot be parsed correct.
DELETE FROM $wpdb
SQL command (DELETE FROM $wpdb) cannot be parsed correct.
SELECT * FROM $this___table WHERE $this___id_field = "placeholder_0"
SELECT * FROM $this___table WHERE $this___id_field = "placeholder_0"
SQL command (SELECT * FROM $this___table WHERE $this___id_field = "placeholder_0") cannot be parsed correct.
DELETE FROM $this___table WHERE $this___id_field = $this___id
DELETE FROM $this___table WHERE $this___id_field = $this___id
SQL command (DELETE FROM $this___table WHERE $this___id_field = $this___id) cannot be parsed correct.
SELECT content_id FROM $this c NATURAL JOIN $this f WHERE 1 GROUP BY content_id HAVING 1
SQL command (SELECT content_id FROM $this c NATURAL JOIN $this f WHERE 1 GROUP BY content_id HAVING 1) cannot be parsed correct.
SELECT content_id, c.*, COUNT(*) as flags, GROUP_CONCAT(CAST( f.reporter_id AS CHAR )) as reporters, MIN(f.date) as first_flag, MAX(f.date) as last_flag FROM $this c NATURAL JOIN $this f WHERE 1 GROUP BY content_id  ORDER BY last_flag DESC LIMIT , $per_page
SQL command (SELECT content_id, c.*, COUNT(*) as flags, GROUP_CONCAT(CAST( f.reporter_id AS CHAR )) as reporters, MIN(f.date) as first_flag, MAX(f.date) as last_flag FROM $this c NATURAL JOIN $this f WHERE 1 GROUP BY content_id ORDER BY last_flag DESC LIMIT , $per_page) cannot be parsed correct.
SELECT * FROM (
	SELECT item_author as user_id FROM $this c NATURAL JOIN $this f WHERE item_author >0  AND item_author IN (join(",", array_filter(array_map("intval", explode(",", $val))))) GROUP BY item_author HAVING 1  AND COUNT(DISTINCT content_id, IF(c.status IN('edited','deleted','moderated'),1,NULL)) >= $_GET_filters_$f
) own NATURAL JOIN (
	SELECT reporter_id as user_id FROM $this c NATURAL JOIN $this f WHERE reporter_id >0  AND reporter_id IN (join(",", array_filter(array_map("intval", explode(",", $val))))) GROUP BY reporter_id HAVING 1  AND COUNT(DISTINCT content_id, IF(c.status='ignored',1,NULL)) >= $_GET_filters_$f
) others
SQL command (SELECT * FROM ( SELECT item_author as user_id FROM $this c NATURAL JOIN $this f WHERE item_author >0 AND item_author IN (join(",", array_filter(array_map("intval", explode(",", $val))))) GROUP BY item_author HAVING 1 AND COUNT(DISTINCT content_id, IF(c.status IN('edited','deleted','moderated'),1,NULL)) >= $_GET_filters_$f ) own NATURAL JOIN ( SELECT reporter_id as user_id FROM $this c NATURAL JOIN $this f WHERE reporter_id >0 AND reporter_id IN (join(",", array_filter(array_map("intval", explode(",", $val))))) GROUP BY reporter_id HAVING 1 AND COUNT(DISTINCT content_id, IF(c.status='ignored',1,NULL)) >= $_GET_filters_$f ) others) cannot be parsed correct.
SELECT * FROM (
	SELECT
	item_author as user_id,
	COUNT(DISTINCT content_id) as own_contents,
	COUNT(DISTINCT content_id, IF(c.status='new',1,NULL)) as own_new,
	COUNT(DISTINCT content_id, IF(c.status='ignored',1,NULL)) as own_ignored,
	COUNT(DISTINCT content_id, IF(c.status IN('edited','deleted','moderated'),1,NULL)) as own_moderated,
	COUNT(*) as own_flags
FROM $this c NATURAL JOIN $this f
WHERE
	item_author >0
	
GROUP BY
	item_author HAVING 1  AND COUNT(*) >= $_GET_filters_$f
) own NATURAL JOIN (
	SELECT
	reporter_id as user_id,
	COUNT(DISTINCT content_id) as others_contents,
	COUNT(DISTINCT content_id, IF(c.status='new',1,NULL)) as others_new,
	COUNT(DISTINCT content_id, IF(c.status='ignored',1,NULL)) as others_ignored,
	COUNT(DISTINCT content_id, IF(c.status IN('edited','deleted','moderated'),1,NULL)) as others_moderated
FROM $this c NATURAL JOIN $this f
WHERE
	reporter_id >0
	
GROUP BY
	reporter_id HAVING 1  AND COUNT(DISTINCT content_id) >= $_GET_filters_$f
) others  LIMIT , $per_page
SQL command (SELECT * FROM ( SELECT item_author as user_id, COUNT(DISTINCT content_id) as own_contents, COUNT(DISTINCT content_id, IF(c.status='new',1,NULL)) as own_new, COUNT(DISTINCT content_id, IF(c.status='ignored',1,NULL)) as own_ignored, COUNT(DISTINCT content_id, IF(c.status IN('edited','deleted','moderated'),1,NULL)) as own_moderated, COUNT(*) as own_flags FROM $this c NATURAL JOIN $this f WHERE item_author >0 GROUP BY item_author HAVING 1 AND COUNT(*) >= $_GET_filters_$f ) own NATURAL JOIN ( SELECT reporter_id as user_id, COUNT(DISTINCT content_id) as others_contents, COUNT(DISTINCT content_id, IF(c.status='new',1,NULL)) as others_new, COUNT(DISTINCT content_id, IF(c.status='ignored',1,NULL)) as others_ignored, COUNT(DISTINCT content_id, IF(c.status IN('edited','deleted','moderated'),1,NULL)) as others_moderated FROM $this c NATURAL JOIN $this f WHERE reporter_id >0 GROUP BY reporter_id HAVING 1 AND COUNT(DISTINCT content_id) >= $_GET_filters_$f ) others LIMIT , $per_page) cannot be parsed correct.
SELECT DISTINCT f.reporter_id FROM $this c NATURAL JOIN $this f WHERE c.content_id = $cont_id
SQL command (SELECT DISTINCT f.reporter_id FROM $this c NATURAL JOIN $this f WHERE c.content_id = $cont_id) cannot be parsed correct.
SELECT DISTINCT item_author FROM $this WHERE content_id IN (implode(",", array_filter(array_map("intval", $cont_ids))))
SQL command (SELECT DISTINCT item_author FROM $this WHERE content_id IN (implode(",", array_filter(array_map("intval", $cont_ids))))) cannot be parsed correct.
SELECT CONCAT_WS( '-', c.item_type, CAST( c.item_id AS CHAR ) , CAST( c.item_id2 AS CHAR ) ) as cont_key
				FROM $this c NATURAL JOIN $this f WHERE f.reporter_id = $uid
SQL command (SELECT CONCAT_WS( '-', c.item_type, CAST( c.item_id AS CHAR ) , CAST( c.item_id2 AS CHAR ) ) as cont_key FROM $this c NATURAL JOIN $this f WHERE f.reporter_id = $uid) cannot be parsed correct.
UPDATE $bp SET is_deleted = 1 WHERE thread_id = $thread_id AND user_id = %d
UPDATE $bp SET is_deleted = 1 WHERE thread_id = $thread_id AND user_id = $sender_id
UPDATE $bp SET is_deleted = 1 WHERE thread_id = $thread_id AND user_id = $sender_id
SQL command (UPDATE $bp SET is_deleted = 1 WHERE thread_id = $thread_id AND user_id = $sender_id) cannot be parsed correct.
SELECT id FROM $bp WHERE thread_id = $thread_id AND is_deleted = 0
SELECT id FROM $bp WHERE thread_id = $thread_id AND is_deleted = 0
SQL command (SELECT id FROM $bp WHERE thread_id = $thread_id AND is_deleted = 0) cannot be parsed correct.
DELETE FROM $bp WHERE thread_id = $thread_id
DELETE FROM $bp WHERE thread_id = $thread_id
SQL command (DELETE FROM $bp WHERE thread_id = $thread_id) cannot be parsed correct.
DELETE FROM $bp WHERE thread_id = $thread_id
DELETE FROM $bp WHERE thread_id = $thread_id
SQL command (DELETE FROM $bp WHERE thread_id = $thread_id) cannot be parsed correct.
DROP TABLE $this
SQL command (DROP TABLE $this) cannot be parsed correct.
DROP TABLE $this
SQL command (DROP TABLE $this) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [15817, 387, 406, 1125, 1394, 6459, 6522, 8508, 8677, 11177, 11240, 15078, 14565, 14591, 14618, 14639, 15962, 15973]
Added 0 SQL nodes. 0 out of 18 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:07.658521.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'<style>
ul#adminmenu li.toplevel_page_bp-moderation .wp-menu-image {
    background-image: url(\'$this/css/sprite.png\');
    background-position: 6px 5px;
}
ul#adminmenu li.toplevel_page_bp-moderation:hover .wp-menu-image,
ul#adminmenu li.toplevel_page_bp-moderation.current .wp-menu-image {
    background-position: 6px -61px;
}
</style>'' cannot be parsed correct.
HTML code '$'<p class=\'bp-mod-right-now\'>BP Moderation: </p>
'' cannot be parsed correct.
HTML code '$'wp_nonce_url("admin.php?bpmod-action=mark_unmark_spammer&user_id="$content->item_author"&set_spam=1", "mark_unmark_spammer")'' cannot be parsed correct.
HTML code '$'$this_apply_filters("bp_moderation_filter_content_backend_for_"$content->item_type, $content)_status'' cannot be parsed correct.
HTML code '$'apply_filters("bp_moderation_filter_content_backend_for_"$content->item_type, $content)_labelapply_filters("bp_moderation_filter_content_backend_for_"$content->item_type, $content)_item_type (not found)'' cannot be parsed correct.
HTML code '$'apply_filters("bp_moderation_filter_content_backend_for_"$content->item_type, $content)_item_id - apply_filters("bp_moderation_filter_content_backend_for_"$content->item_type, $content)_item_id2'' cannot be parsed correct.
HTML code '$'$this->date_abbr($content->item_date)'' cannot be parsed correct.
HTML code '$'<h2 class="nav-tab-wrapper"><span style="margin-right:.5em;">BP Moderation</span>'' cannot be parsed correct.
HTML code '$'<div id="moderated" class="updated"><p>sprintf($message, $_GET[$arg_key])</p></div>'' cannot be parsed correct.
HTML code '$' checked="checked"'' cannot be parsed correct.
HTML code '$'$slug'' cannot be parsed correct.
HTML code '$' checked="checked"'' cannot be parsed correct.
HTML code '$'$slug'' cannot be parsed correct.
HTML code '$'$slug'' cannot be parsed correct.
HTML code '$'$ct'' cannot be parsed correct.
HTML code '$' checked="checked"'' cannot be parsed correct.
HTML code '$'$slug'' cannot be parsed correct.
HTML code '$' checked="checked"'' cannot be parsed correct.
HTML code '$'$slug'' cannot be parsed correct.
HTML code '$'$slug'' cannot be parsed correct.
HTML code '$'$label'' cannot be parsed correct.
HTML code '$' checked="checked"'' cannot be parsed correct.
HTML code '$'apply_filters("bp_moderation_filter_content_backend_for_"$content->item_type, $content)_item_url'' cannot be parsed correct.
HTML code '$'wp_nonce_url("admin.php?bpmod-action=ignore&cont_id="$content->content_id, "ignore")'' cannot be parsed correct.
HTML code '$'wp_nonce_url("admin.php?bpmod-action=edit&cont_id="$content->content_id, "edit")'' cannot be parsed correct.
HTML code '$'wp_nonce_url("admin.php?bpmod-action=mark_moderated&cont_id="$content->content_id, "mark_moderated")'' cannot be parsed correct.
HTML code '$'wp_nonce_url("admin.php?bpmod-action=delete&cont_id="$content->content_id, "delete")'' cannot be parsed correct.
HTML code '$'apply_filters("bp_moderation_filter_content_backend_for_"$content->item_type, $content)_flags'' cannot be parsed correct.
HTML code '$'$this->date_abbr($content->first_flag)'' cannot be parsed correct.
HTML code '$'$this->date_abbr($content->last_flag)'' cannot be parsed correct.
HTML code '$'join(", ", array_map([$this, "show_in_users_table_link"], explode(",", $content->reporters)))'' cannot be parsed correct.
HTML code '$'sprintf(__("Reported at least %s times", "bp-moderation"), $input)'' cannot be parsed correct.
HTML code '$' checked="checked"'' cannot be parsed correct.
HTML code '$'$_GET_filters_item_author'' cannot be parsed correct.
HTML code '$' checked="checked"'' cannot be parsed correct.
HTML code '$'$_GET_filters_reporters'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'sprintf(__("Display at most %s contents", "bp-moderation"), $input)'' cannot be parsed correct.
HTML code '$'<span class="displaying-num">sprintf(__("Displaying %s&#8211;%s of %s", "bp-moderation"), number_format_i18n($page_index * $per_page + 1), number_format_i18n(min($page_index + 1 * $per_page, $total)), "<span class="total-type-count">" . number_format_i18n($total) . "</span>")</span>paginate_links(["base" => add_query_arg("cpage", "%#%"), "format" => "", "prev_text" => __("&laquo;"), "next_text" => __("&raquo;"), "total" => ceil($total / $per_page), "current" => $page_index + 1])'' cannot be parsed correct.
HTML code '$'apply_filters("bp_moderation_filter_content_backend_for_"$content->item_type, $content)_status'' cannot be parsed correct.
HTML code '$'apply_filters("bp_moderation_filter_content_backend_for_"$content->item_type, $content)_content_id'' cannot be parsed correct.
HTML code '$'$this->author_details($content->item_author, $content)_avatar_img$this->author_details($content->item_author, $content)_user_link'' cannot be parsed correct.
HTML code '$'$this->author_details($content->item_author, $content)_contact_link'' cannot be parsed correct.
HTML code '$'wp_nonce_url("admin.php?bpmod-action=mark_unmark_spammer&user_id="$content->item_author"&set_spam=0", "mark_unmark_spammer")'' cannot be parsed correct.
HTML code '$'<p id=\'hotkeys-toggle\'>sprintf(__("Hotkeys are disabled. <a href="%s">Enable</a>"), wp_nonce_url("admin.php?bpmod-action=hotkeys&set_hotkeys=1", "hotkeys"))</p>'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'sprintf(__("Display at most %s users", "bp-moderation"), $input)'' cannot be parsed correct.
HTML code '$' checked="checked"'' cannot be parsed correct.
HTML code '$'$_GET_filters_user'' cannot be parsed correct.
HTML code '$'$slug'' cannot be parsed correct.
HTML code '$'<span class="displaying-num">sprintf(__("Displaying %s&#8211;%s of %s", "bp-moderation"), number_format_i18n($page_index * $per_page + 1), number_format_i18n(min($page_index + 1 * $per_page, $total)), "<span class="total-type-count">" . number_format_i18n($total) . "</span>")</span>paginate_links(["base" => add_query_arg("page", "%#%"), "format" => "", "prev_text" => __("&laquo;"), "next_text" => __("&raquo;"), "total" => ceil($total / $per_page), "current" => $page_index + 1])'' cannot be parsed correct.
HTML code '$'$user'' cannot be parsed correct.
HTML code '$'$this->author_details($user->user_id)_avatar_img$this->author_details($user->user_id)_user_link'' cannot be parsed correct.
HTML code '$'$this->author_details($user->user_id)_contact_link'' cannot be parsed correct.
HTML code '$'wp_nonce_url("admin.php?bpmod-action=mark_unmark_spammer&user_id="$user->user_id"&set_spam=0", "mark_unmark_spammer")'' cannot be parsed correct.
HTML code '$'wp_nonce_url("admin.php?bpmod-action=mark_unmark_spammer&user_id="$user->user_id"&set_spam=1", "mark_unmark_spammer")'' cannot be parsed correct.
HTML code '$'sprintf(_n("%d content from this user has been reported", "%d contents from this user have been reported", $user->own_contents, "bp-moderation"), $user->own_contents)'' cannot be parsed correct.
HTML code '$'$user'' cannot be parsed correct.
HTML code '$'$user'' cannot be parsed correct.
HTML code '$'$user'' cannot be parsed correct.
HTML code '$'$user'' cannot be parsed correct.
HTML code '$'$user'' cannot be parsed correct.
HTML code '$'sprintf(_n("this user reported %d content", "this user reported %d contents", $user->others_contents, "bp-moderation"), $user->others_contents)'' cannot be parsed correct.
HTML code '$'$user'' cannot be parsed correct.
HTML code '$'$user'' cannot be parsed correct.
HTML code '$'$user'' cannot be parsed correct.
HTML code '$'$user'' cannot be parsed correct.
HTML code '$'checked("on", @$_GET["active_filters"][$slug])'' cannot be parsed correct.
HTML code '$'$slug'' cannot be parsed correct.
HTML code '$'$slug'' cannot be parsed correct.
HTML code '$'$title'' cannot be parsed correct.
HTML code '$'$slug'' cannot be parsed correct.
HTML code '$'sprintf($desc, "<input id=\\'"$slug"\\' size=\\'4\\' type=\\'text\\' name=\\'filters["$slug"]\\' value=\\'" . @$_GET["filters"][$slug] . "\\' />")'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'$this_settings_section_texts_$section_id'' cannot be parsed correct.
HTML code '$'<div class="updated settings-error"><p><strong>Settings saved.</strong></p></div>'' cannot be parsed correct.
HTML code '$'<input id=\'$id\' name=\'bp_moderation_options[$name]\' size=\'$size\' type=\'text\' value=\'$this_$name\' />'' cannot be parsed correct.
HTML code '$'$link'' cannot be parsed correct.
HTML code '$'<span class=\'links-separator\'> | </span>$link'' cannot be parsed correct.
HTML code '$'<div class=\'bpm-right-link bpm-bottom-link\'>$link</div>'' cannot be parsed correct.
HTML code '$'<div class=\'bpm-right-link bpm-bottom-link\'>$link</div>'' cannot be parsed correct.
HTML code '$'<span class=\'links-separator\'> | </span>$link'' cannot be parsed correct.
HTML code '$'$this->generate_link($args)'' cannot be parsed correct.
HTML code '$'"
											   title="'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</a>
										'' cannot be parsed correct.
HTML code '$'"
											   title="'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</a>
										'' cannot be parsed correct.
HTML code '$'</span>
									'' cannot be parsed correct.
HTML code '$'</span>
									'' cannot be parsed correct.
HTML code '$'</strong> '' cannot be parsed correct.
HTML code '$'								<strong>'' cannot be parsed correct.
HTML code '$'</strong> '' cannot be parsed correct.
HTML code '$'</strong> '' cannot be parsed correct.
HTML code '$'								<strong>'' cannot be parsed correct.
HTML code '$'</strong> '' cannot be parsed correct.
HTML code '$'<div class=\'wrap\'>
'' cannot be parsed correct.
HTML code '$'</div> <!-- .wrap -->
'' cannot be parsed correct.
HTML code '$'</legend>
				<div class="column">
					<h4>'' cannot be parsed correct.
HTML code '$'</h4>
					<dt>
						<input
							id=\'filter-item_type\' '' cannot be parsed correct.
HTML code '$' name=\'filters[active_filters][item_type]\'
							type=\'checkbox\'/>
						<label
							for=\'filter-item_type\'>'' cannot be parsed correct.
HTML code '$'</label>
					</dt>
					<dd>
						<ul>
							'' cannot be parsed correct.
HTML code '$'\''' cannot be parsed correct.
HTML code '$' name=\'filters[item_type]['' cannot be parsed correct.
HTML code '$']\'
										type=\'checkbox\'/>
									<label
										for=\'type_'' cannot be parsed correct.
HTML code '$'\'>'' cannot be parsed correct.
HTML code '$'</label>
								</li>
							'' cannot be parsed correct.
HTML code '$'						</ul>
					</dd>
					<dt>
						<input
							id=\'filter-status\' '' cannot be parsed correct.
HTML code '$' name=\'filters[active_filters][status]\'
							type=\'checkbox\'/>
						<label
							for=\'filter-status\'>'' cannot be parsed correct.
HTML code '$'</label>
					</dt>
					<dd>
						<ul>
							'' cannot be parsed correct.
HTML code '$' name="filters[status]'' cannot be parsed correct.
HTML code '$']"
										type="checkbox">
									<label
										for="'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</label>
								</li>
							'' cannot be parsed correct.
HTML code '$'						</ul>
					</dd>
					<dt>
						<input
							id=\'filter-flags\' '' cannot be parsed correct.
HTML code '$' name=\'filters[active_filters][flags]\'
							type=\'checkbox\'/>
						<label
							for=\'filter-flags\'>'' cannot be parsed correct.
HTML code '$'</label>
					</dt>
					<dd>
						<label for=\'flags\'>'' cannot be parsed correct.
HTML code '$'
								<div class="row-actions">
									<a class="view-content vim-v"
									   href="'' cannot be parsed correct.
HTML code '$'"
									   title="'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</a>
									'' cannot be parsed correct.
HTML code '$'"
											title="'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</a>
									'' cannot be parsed correct.
HTML code '$'"
											title="'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</a>
									'' cannot be parsed correct.
HTML code '$'"
											title="'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</a>
									'' cannot be parsed correct.
HTML code '$'"
											title="'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</a>
									'' cannot be parsed correct.
HTML code '$'</strong>  '' cannot be parsed correct.
HTML code '$'								<strong>'' cannot be parsed correct.
HTML code '$'</strong>  '' cannot be parsed correct.
HTML code '$'								<strong>'' cannot be parsed correct.
HTML code '$'</strong>  '' cannot be parsed correct.
HTML code '$'
								<br/><strong>'' cannot be parsed correct.
HTML code '$'</strong> '' cannot be parsed correct.
HTML code '$'
							</td>
						</tr>
					'' cannot be parsed correct.
HTML code '$' name=\'filters[active_filters][item_author]\'
							type=\'checkbox\'/>
						<label
							for=\'filter-item_author\'>'' cannot be parsed correct.
HTML code '$'</label>
					</dt>
					<dd>
						<input id=\'item_author\' class=\'line\' size=\'40\' type=\'text\'
							   name=\'filters[item_author]\' value=\''' cannot be parsed correct.
HTML code '$'\'/>
						<label
							for=\'item_author\'>'' cannot be parsed correct.
HTML code '$'</label>
					</dd>
					<dt>
						<input
							id=\'filter-reporters\' '' cannot be parsed correct.
HTML code '$' name=\'filters[active_filters][reporters]\'
							type=\'checkbox\'/>
						<label
							for=\'filter-reporters\'>'' cannot be parsed correct.
HTML code '$'</label>
					</dt>
					<dd>
						<input id=\'reporters\' class=\'line\' size=\'40\' type=\'text\'
							   name=\'filters[reporters]\' value=\''' cannot be parsed correct.
HTML code '$'\'/>
						<label
							for=\'reporters\'>'' cannot be parsed correct.
HTML code '$'</label>
					</dd>
				</div>
				<div class="column">
					<h4 class="order-by">'' cannot be parsed correct.
HTML code '$'</h4>
					<ol class="order-by">
						'' cannot be parsed correct.
HTML code '$'][by]">
									<optio'' cannot be parsed correct.
HTML code '$'										value="none">'' cannot be parsed correct.
HTML code '$'</option>
									<option'' cannot be parsed correct.
HTML code '$'										value="flags">'' cannot be parsed correct.
HTML code '$'</option>
									<option'' cannot be parsed correct.
HTML code '$'										value="first_flag">'' cannot be parsed correct.
HTML code '$'</option>
									<option'' cannot be parsed correct.
HTML code '$'										value="last_flag">'' cannot be parsed correct.
HTML code '$'</option>
									<option'' cannot be parsed correct.
HTML code '$'										value="item_id">'' cannot be parsed correct.
HTML code '$'</option>
									<option'' cannot be parsed correct.
HTML code '$'										value="item_id2">'' cannot be parsed correct.
HTML code '$'</option>
								</select>
								<select name="order'' cannot be parsed correct.
HTML code '$'][dir]">
									<optio'' cannot be parsed correct.
HTML code '$'										value="ASC">ASC
									</option>
									<option'' cannot be parsed correct.
HTML code '$'										value="DESC">DESC
									</option>
								</select>
							</li>
							'' cannot be parsed correct.
HTML code '$'</h4>

					<p><label for=\'limit\'>'' cannot be parsed correct.
HTML code '$'</option>
							<option
								value="ignore">'' cannot be parsed correct.
HTML code '$'</th>
						<th class="manage-column column-content"
							scope="col">'' cannot be parsed correct.
HTML code '$'</th>
						<th class="manage-column column-flags"
							scope="col">'' cannot be parsed correct.
HTML code '$'</th>
					</tr>
					</thead>
					<tfoot>
					<tr>
						<th class="manage-column column-cb check-column"
							scope="col"><input type="checkbox"></th>
						<th class="manage-column column-author"
							scope="col">'' cannot be parsed correct.
HTML code '$'</th>
						<th class="manage-column column-content"
							scope="col">'' cannot be parsed correct.
HTML code '$'</th>
						<th class="manage-column column-flags"
							scope="col">'' cannot be parsed correct.
HTML code '$'</th>
					</tr>
					</tfoot>

					<tbody>
					'' cannot be parsed correct.
HTML code '$'">
							<th class="check-column"
								scope="row"><input
									type="checkbox"
									value="'' cannot be parsed correct.
HTML code '$'"
									name="bulk_items[]"></th>
							<td class="column-author">
								<strong>'' cannot be parsed correct.
HTML code '$'</strong>
								<br>'' cannot be parsed correct.
HTML code '$'								<div class="row-actions">
									'' cannot be parsed correct.
HTML code '$'										value="own_contents">'' cannot be parsed correct.
HTML code '$'</option>
									<option'' cannot be parsed correct.
HTML code '$'										value="own_new">'' cannot be parsed correct.
HTML code '$'</option>
									<option'' cannot be parsed correct.
HTML code '$'										value="own_ignored">'' cannot be parsed correct.
HTML code '$'</option>
									<option'' cannot be parsed correct.
HTML code '$'										value="own_moderated">'' cannot be parsed correct.
HTML code '$'</option>
									<option'' cannot be parsed correct.
HTML code '$'										value="own_flags">'' cannot be parsed correct.
HTML code '$'</option>
									<option'' cannot be parsed correct.
HTML code '$'										value="others_contents">'' cannot be parsed correct.
HTML code '$'</option>
									<option'' cannot be parsed correct.
HTML code '$'										value="others_new">'' cannot be parsed correct.
HTML code '$'</option>
									<option'' cannot be parsed correct.
HTML code '$'										value="others_ignored">'' cannot be parsed correct.
HTML code '$'</option>
									<option'' cannot be parsed correct.
HTML code '$'										value="others_moderated">'' cannot be parsed correct.
HTML code '$'</option>
								</select>
								<select name="order'' cannot be parsed correct.
HTML code '$'][dir]">
									<optio'' cannot be parsed correct.
HTML code '$'										value="ASC">ASC
									</option>
									<option'' cannot be parsed correct.
HTML code '$'										value="DESC">DESC
									</option>
								</select>
							</li>
							'' cannot be parsed correct.
HTML code '$'</h4>

					<p><label for=\'limit\'>'' cannot be parsed correct.
HTML code '$'</legend>
				<div class="column">
					<h4>'' cannot be parsed correct.
HTML code '$'</h4>
					<dt>
						<input
							id=\'filter-user\' '' cannot be parsed correct.
HTML code '$' name=\'active_filters[user]\' type=\'checkbox\'/>
						<label
							for=\'filter-user\'>'' cannot be parsed correct.
HTML code '$'</label>
					</dt>
					<dd>
						<input id=\'user\' class=\'line\' size=\'40\' type=\'text\'
							   name=\'filters[user]\' value=\''' cannot be parsed correct.
HTML code '$'\'/>
						<label
							for=\'user\'>'' cannot be parsed correct.
HTML code '$'</label>
					</dd>
					'' cannot be parsed correct.
HTML code '$'\' '' cannot be parsed correct.
HTML code '$'</option>
							<option
								value="mark_spammer">'' cannot be parsed correct.
HTML code '$'</th>
						<th class="manage-column column-own-contents"
							scope="col">'' cannot be parsed correct.
HTML code '$'</th>
						<th class="manage-column column-other-contents"
							scope="col">'' cannot be parsed correct.
HTML code '$'</th>
					</tr>
					</thead>
					<tfoot>
					<tr>
						<th class="manage-column column-cb check-column"
							scope="col"><input type="checkbox"></th>
						<th class="manage-column column-author"
							scope="col">'' cannot be parsed correct.
HTML code '$'</th>
						<th class="manage-column column-own-contents"
							scope="col">'' cannot be parsed correct.
HTML code '$'</th>
						<th class="manage-column column-other-contents"
							scope="col">'' cannot be parsed correct.
HTML code '$'</th>
					</tr>
					</tfoot>

					<tbody>
					'' cannot be parsed correct.
HTML code '$'"
									name="bulk_items[]"></th>
							<td class="column-author">
								<strong>'' cannot be parsed correct.
HTML code '$'</strong>
								<br>'' cannot be parsed correct.
HTML code '$'								<div class="row-actions">
									'' cannot be parsed correct.
HTML code '$'</span>
									'' cannot be parsed correct.
HTML code '$'"
										   title="'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</a>
									'' cannot be parsed correct.
HTML code '$'"
										   title="'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</a>
									'' cannot be parsed correct.
HTML code '$'</strong> '' cannot be parsed correct.
HTML code '$'</strong> '' cannot be parsed correct.
HTML code '$'									<strong>'' cannot be parsed correct.
HTML code '$'</strong> '' cannot be parsed correct.
HTML code '$'									<strong>'' cannot be parsed correct.
HTML code '$'</strong> '' cannot be parsed correct.
HTML code '$'"
									   title="'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</a>
								</div>

							</td>
							<td class="column-other-contents">
								'' cannot be parsed correct.
HTML code '$'</strong> '' cannot be parsed correct.
HTML code '$'</strong> '' cannot be parsed correct.
HTML code '$'									<strong>'' cannot be parsed correct.
HTML code '$'</strong> '' cannot be parsed correct.
HTML code '$'"
									   title="'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</a>
								</div>

							</td>
						</tr>
					'' cannot be parsed correct.
HTML code '$' name=\'active_filters['' cannot be parsed correct.
HTML code '$']\'
								type=\'checkbox\'/>
							<label
								for=\'filter-'' cannot be parsed correct.
HTML code '$'\'>'' cannot be parsed correct.
HTML code '$'</label>
						</dt>
						<dd>
							<label
								for=\''' cannot be parsed correct.
HTML code '$'\'>'' cannot be parsed correct.
HTML code '$'</h4>
					<ol class="order-by">
						'' cannot be parsed correct.
HTML code '$'][by]">
									<optio'' cannot be parsed correct.
HTML code '$'										value="none">'' cannot be parsed correct.
HTML code '$'</option>
									<option'' cannot be parsed correct.
HTML code '$'<pre>'' cannot be parsed correct.
HTML code '$'</pre>'' cannot be parsed correct.
HTML code '$'<p class="bp-mod-pm-thread-links">'' cannot be parsed correct.
HTML code '$'</p>'' cannot be parsed correct.
HTML code '$'<p class="bp-mod-pm-thread-links">'' cannot be parsed correct.
HTML code '$'</p>'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:19.133773.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.039444.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 22 do_action/apply_filters calls and 31 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:02.177580.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbplusDetector
### Start running FrontBaseDetector
### Finish running FileProDetector
### Start running HashDetector
### Finish running DbaseDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running FrontBaseDetector
### Start running IngresDetector
### Finish running FirebirdInterBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running IBMDb2Detector
### Start running MsqlDetector
### Finish running MongoDetector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running MongoDbDetector
### Start running OpenSSLDetector
### Finish running Oci8Detector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running ArrayElementDetector
### Start running PhpCurlDetector
### Finish running HashDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PhpCurlDetector
### Start running PHPRetrievalDetector
### Finish running PasswordHashingDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPIncludedDetector
### Start running PhpVarDetector
### Finish running PHPStorageDetector
### Start running PostgreSQLDetector
### Finish running PHPRetrievalDetector
### Start running PropertyDetector
### Finish running OpenSSLDetector
### Start running Sqlite3Detector
### Finish running PostgreSQLDetector
### Start running SqliteDetector
### Finish running Sqlite3Detector
### Start running SqlServerDetector
### Finish running SqliteDetector
### Start running SybaseDetector
### Finish running SybaseDetector
### Start running TokyoTyrantDetector
### Finish running PropertyDetector
### Start running UserInputDetector
### Finish running TokyoTyrantDetector
### Start running VariableDetector
### Finish running SqlServerDetector
### Start running WordpressHashingFnDetector
### Finish running PhpVarDetector
### Start running WordPressRemoteDetector
### Finish running MySQLiDetector
### Start running WordPressRetrievalDetector
### Finish running maxdbDetector
### Start running WordPressStorageDetector
### Finish running WordPressRemoteDetector
### Start running WP_UserDetector
### Finish running UserInputDetector
### Start running GenericDatabaseUsageDetector
### Finish running WP_UserDetector
### Start running GenericEncryptionDetector
### Finish running WordpressHashingFnDetector
### Start running DeletionDetector
### Finish running GenericEncryptionDetector
### Start running UninstallDetector
### Finish running GenericDatabaseUsageDetector
### Finish running VariableDetector
### Finish running WordPressStorageDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running WordPressRetrievalDetector
### Finished running detectors
classes/bpModBackend.php:578
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
classes/bpModDefaultContentTypes.php:331
  - object property '$comment->comment_author_email' of personal types {'email'} is found.
  - Data types: email 

classes/bpModActions.php:164
  - variable '$author_email' of personal types {'email'} is found.
  - Data types: email
classes/bpModActions.php:173
  - variable '$author_email' of personal types {'email'} is found.
  - Data types: email
classes/bpModBackend.php:608
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
classes/bpModBackend.php:609
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
classes/bpModBackend.php:612
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
classes/bpModBackend.php:613
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
classes/bpModBackend.php:615
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
classes/bpModBackendActions.php:104
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
classes/bpModBackendActions.php:105
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
classes/bpModBackendActions.php:106
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
classes/bpModBackendActions.php:106
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
classes/bpModBackendActions.php:108
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
classes/bpModDefaultContentTypes.php:365
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
classes/bpModDefaultContentTypes.php:368
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
classes/bpModDefaultContentTypes.php:370
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
classes/bpModDefaultContentTypes.php:371
  - variable '$email' of personal types {'email'} is found.
  - Data types: email 

bpModLoader.php:199
  - CRYPTOGRAPHY call to wp_set_password("pass", $uid) alters data types {'user_meta'}. Passed arguments: 0: $password (string), 1: $user_id (int).
  - Data types: user_meta 

bpModLoader.php:193
  - RETRIEVAL call to get_user_meta($uid, "activation_key") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $key (string). Returns (mixed).
  - Data types: user_meta
classes/bpModBackend.php:133
  - RETRIEVAL call to get_user_option("bp_moderation_hotkeys") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: user_meta
classes/bpModBackend.php:474
  - RETRIEVAL call to get_userdata($content->item_author) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
classes/bpModBackend.php:571
  - RETRIEVAL call to get_userdata($uid) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
classes/bpModBackend.php:629
  - RETRIEVAL call to get_option("date_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
classes/bpModBackend.php:637
  - RETRIEVAL call to get_user_option("bp_moderation_hotkeys") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: user_meta
classes/bpModBackend.php:990
  - RETRIEVAL call to get_userdata($user->user_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
classes/bpModDefaultContentTypes.php:247
  - RETRIEVAL call to get_post($id2) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: wp_post, post_meta, post
classes/bpModDefaultContentTypes.php:273
  - RETRIEVAL call to get_post($id2) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: wp_post, post_meta, post
classes/bpModDefaultContentTypes.php:326
  - RETRIEVAL call to get_comment($id2). Passed arguments: 0: $comment (WP_Comment|string|int). Returns (WP_Comment|array|null).
classes/bpModDefaultContentTypes.php:331
  - RETRIEVAL call to get_user_by_email($comment->comment_author_email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $email (string). Returns (bool|object).
  - Data types: user, user_meta
classes/bpModDefaultContentTypes.php:354
  - RETRIEVAL call to get_comment($id2). Passed arguments: 0: $comment (WP_Comment|string|int). Returns (WP_Comment|array|null).
classes/bpModDefaultContentTypes.php:365
  - RETRIEVAL call to get_comment_author_email($cont->item_id2) alters data types {'email'}. Passed arguments: 0: $comment_ID (int|WP_Comment). Returns (string).
  - Data types: email
classes/bpModDefaultContentTypes.php:400
  - RETRIEVAL call to get_userdata($id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
classes/bpModDefaultContentTypes.php:420
  - RETRIEVAL call to get_userdata($id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
classes/bpModInstaller.php:84
  - RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).
classes/bpModInstaller.php:102
  - RETRIEVAL call to get_option("admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
examples/bpMod_ContentType_BlogPostExample.php:94
  - RETRIEVAL call to get_the_author_meta("id") alters data types {'user_meta'}. Passed arguments: 0: $field (string). Returns (string).
  - Data types: user_meta
examples/bpMod_ContentType_BlogPostExample.php:125
  - RETRIEVAL call to get_post($id2) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: wp_post, post_meta, post
examples/bpMod_ContentType_BlogPostExample.php:176
  - RETRIEVAL call to get_post($id2) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: wp_post, post_meta, post 

bpModLoader.php:199
  - STORAGE call to wp_set_password("pass", $uid) alters data types {'user_meta'}. Passed arguments: 0: $password (string), 1: $user_id (int).
  - Data types: user_meta
classes/bpModBackendActions.php:302
  - STORAGE call to update_user_option(get_current_user_id(), "bp_moderation_hotkeys", $_REQUEST["set_hotkeys"], true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed), 3: $global (bool). Returns (int|bool).
  - Data types: user_meta
classes/bpModDefaultContentTypes.php:273
  - STORAGE call to wp_delete_post($id2) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: wp_post, post_meta, post
examples/bpMod_ContentType_BlogPostExample.php:176
  - STORAGE call to wp_delete_post($id2) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: wp_post, post_meta, post 

classes/bpModDefaultContentTypes.php:273
  - DELETION call to wp_delete_post($id2) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: wp_post, post_meta, post
classes/bpModDefaultContentTypes.php:354
  - DELETION call to wp_delete_comment($id2) alters data types {'comment_meta', 'comment'}. Passed arguments: 0: $comment_id (int|WP_Comment). Returns (bool).
  - Data types: comment_meta, comment
examples/bpMod_ContentType_BlogPostExample.php:176
  - DELETION call to wp_delete_post($id2) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: wp_post, post_meta, post 

By data type:
comment
	DeletionDetector.wp_delete_comment($id2) - {'comment_meta', 'comment'}
comment_meta
	DeletionDetector.wp_delete_comment($id2) - {'comment_meta', 'comment'}
email
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	WordPressRetrievalDetector.get_comment_author_email($cont->item_id2) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
none
	WordPressRetrievalDetector.get_comment($id2) - set()
	WordPressRetrievalDetector.get_comment($id2) - set()
	WordPressRetrievalDetector.dbDelta($sql) - set()
option
	WordPressRetrievalDetector.get_option("date_format") - {'option'}
	WordPressRetrievalDetector.get_option("admin_email") - {'option'}
post
	WordPressRetrievalDetector.get_post($id2) - {'wp_post', 'post_meta', 'post'}
	DeletionDetector.wp_delete_post($id2) - {'wp_post', 'post_meta', 'post'}
	DeletionDetector.wp_delete_post($id2) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post($id2) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post($id2) - {'wp_post', 'post_meta', 'post'}
	WordPressStorageDetector.wp_delete_post($id2) - {'wp_post', 'post_meta', 'post'}
	WordPressStorageDetector.wp_delete_post($id2) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post($id2) - {'wp_post', 'post_meta', 'post'}
post_meta
	WordPressRetrievalDetector.get_post($id2) - {'wp_post', 'post_meta', 'post'}
	DeletionDetector.wp_delete_post($id2) - {'wp_post', 'post_meta', 'post'}
	DeletionDetector.wp_delete_post($id2) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post($id2) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post($id2) - {'wp_post', 'post_meta', 'post'}
	WordPressStorageDetector.wp_delete_post($id2) - {'wp_post', 'post_meta', 'post'}
	WordPressStorageDetector.wp_delete_post($id2) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post($id2) - {'wp_post', 'post_meta', 'post'}
user
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($content->item_author) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($id) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($id) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($uid) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by_email($comment->comment_author_email) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($user->user_id) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
user_meta
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_option(get_current_user_id(), "bp_moderation_hotkeys", $_REQUEST["set_hotkeys"], true) - {'user_meta'}
	WordPressRetrievalDetector.get_userdata($content->item_author) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($id) - {'user', 'user_meta'}
	WordPressStorageDetector.wp_set_password("pass", $uid) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_option("bp_moderation_hotkeys") - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($id) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($uid) - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_set_password("pass", $uid) - {'user_meta'}
	WordPressRetrievalDetector.get_the_author_meta("id") - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($uid, "activation_key") - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_option("bp_moderation_hotkeys") - {'user_meta'}
	WordPressRetrievalDetector.get_user_by_email($comment->comment_author_email) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($user->user_id) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
wp_post
	WordPressRetrievalDetector.get_post($id2) - {'wp_post', 'post_meta', 'post'}
	DeletionDetector.wp_delete_post($id2) - {'wp_post', 'post_meta', 'post'}
	DeletionDetector.wp_delete_post($id2) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post($id2) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post($id2) - {'wp_post', 'post_meta', 'post'}
	WordPressStorageDetector.wp_delete_post($id2) - {'wp_post', 'post_meta', 'post'}
	WordPressStorageDetector.wp_delete_post($id2) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post($id2) - {'wp_post', 'post_meta', 'post'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:10.283117.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 28 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.195335.

28 STORE_REACHES edges created
28 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 123 nodes as PERSONAL
In total, tainted 123 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 76 nodes as ENCRYPTED
In total, tainted 76 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:04.812915.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:01:30.004895!
DELETION call to wp_delete_post($id2) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).,None,None
DELETION call to wp_delete_comment($id2) alters data types {'comment_meta', 'comment'}. Passed arguments: 0: $comment_id (int|WP_Comment). Returns (bool).,None,None
DELETION call to wp_delete_post($id2) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).,None,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$comment->comment_author_email' of personal types {'email'} is found.,,None
variable '$author_email' of personal types {'email'} is found.,,None
variable '$author_email' of personal types {'email'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
RETRIEVAL call to get_user_meta($uid, "activation_key") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_option("bp_moderation_hotkeys") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdata($content->item_author) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_userdata($uid) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_option("date_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_option("bp_moderation_hotkeys") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdata($user->user_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_post($id2) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($id2) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_comment($id2). Passed arguments: 0: $comment (WP_Comment|string|int). Returns (WP_Comment|array|null).,None,None
RETRIEVAL call to get_user_by_email($comment->comment_author_email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $email (string). Returns (bool|object).,None,None
RETRIEVAL call to get_comment($id2). Passed arguments: 0: $comment (WP_Comment|string|int). Returns (WP_Comment|array|null).,None,None
RETRIEVAL call to get_comment_author_email($cont->item_id2) alters data types {'email'}. Passed arguments: 0: $comment_ID (int|WP_Comment). Returns (string).,None,None
RETRIEVAL call to get_userdata($id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_userdata($id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_option("admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to get_post($id2) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($id2) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_the_author_meta("id") alters data types {'user_meta'}. Passed arguments: 0: $field (string). Returns (string).,None,None
STORAGE call to wp_set_password("pass", $uid) alters data types {'user_meta'}. Passed arguments: 0: $password (string), 1: $user_id (int).,None,None
STORAGE call to update_user_option(get_current_user_id(), "bp_moderation_hotkeys", $_REQUEST["set_hotkeys"], true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed), 3: $global (bool). Returns (int|bool).,None,None
STORAGE call to wp_delete_post($id2) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).,None,None
STORAGE call to wp_delete_post($id2) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).,None,None
CRYPTOGRAPHY call to wp_set_password("pass", $uid) alters data types {'user_meta'}. Passed arguments: 0: $password (string), 1: $user_id (int).,hash,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] PII of types (['email', 'user', 'user_meta']) stored through WordPress function "update_user_option(get_current_user_id(), "bp_moderation_hotkeys", $_REQUEST["set_hotkeys"], true)", found in file classes/bpModBackendActions.php at line 302. 

[has_storage] WP User info of types (['user_meta']) stored through WordPress function "wp_set_password("pass", $uid)", found in file bpModLoader.php at line 199. 

[has_storage] Storage check is WP 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_option(get_current_user_id(), "bp_moderation_hotkeys", $_REQUEST["set_hotkeys"], true) does not have corresponding deletion method. Storage method found in file classes/bpModBackendActions.php at line 302. 

[Art.17, Right to erasure] Deletion access is NONE 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 10835. Found in file classes/bpModBackendActions.php at line 302 

[Art.15, Right to access] Data access is NONE_BUT_NOT_REQUIRED 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['access', 'deletion', 'encryption', 'third_party'] 

[main] Is deletion in violation? True 

[main] Is access in violation? False 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? False 


###########
### Q&A ###
###########

1. Why is my plugin in violation against GDPR?

GDPR (https://gdpr-info.eu/) aims to give citizens in the European Union (EU) control over their personal data. If a website collects or store user data, it is required to provide users functionalities to control their data, such as ones to erase or export their data. While a plugin do not directly interact with users, it may provide functionalities that collect or store personal data, which would make websites that deploy the plugin in violation against GDPR if the plugin does not provide corresponding functionalities to allow users control their personal data. Therefore, plugin developers are responsible to provide functions to manage the personal data they handle in accordance with GDPR. We list requirements by specific GDPR articles relevant to your plugin below.


[Art. 13, Information to be provided where personal data are collected from the data subject] If a plugin collects or handles personal data, it needs to provide privacy policy texts that explain what personal data is being collected and for what purpose. The texts are meant to be added to the privacy policy of the websites that deploy the plugin. 


            
[Art.17, Right to erasure] If a plugin stores personal data in a custom database they create or manage, or through Wordpress's native storage functions (e.g., update_user_meta), it needs to provide methods for users to erase the data upon request. Note that deleting data for all users upon uninstallation does not satisfy the requirement. 


            
        

2. How do I make my plugin compliant?

Please refer to the fix report below to see how you can make your plugin comply with GDPR.

        

##################
### Fix Report ###
##################

############################
# Data Deletion Fix Report #
############################

This report suggests fixes to comply with the GDPR Art. 17, Right to erasure (https://gdpr-info.eu/art-17-gdpr/). The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/adding-the-personal-data-eraser-to-your-plugin/ for more details.

1) Implement a function that deletes all the user data collected in the plugin. Sample code:


/**
* Removes all collected data of a user.
*
* @param string $email_address   email address to manipulate
* @param int    $page            pagination
*
* @return array
*/
function bp-moderation_remove_data( $email_address, $page = 1 ) {
    
    $page = (int) $page;


    //TODO: Delete the user data that was stored using Wordpress functions

    //Below is the sample code for deleting user meta and may need to be modified to suit the plugin.
    $user_id = get_user_by('email', $email_address)
    $key = 'email' //Sample user meta key
    if ( $customer->user_id > 0 ) {
        //Delete user meta data by $key
        delete_user_meta( $user_id, $key );
    }
        



    // Tell core if we have more data to delete still
    $done = true;
    return array(
        'items_removed'  => $items_removed, // true if collected data of a user is being deleted
        'items_retained' => $items_retained, // true if certain data needs to be retained
        'messages'       => sprintf( __( 'Data of user with email %s successfully deleted.', 'bp-moderation' ), $email_address ), // Put messages for data removal
        'done'           => $done, // true if all the removal processes are done (all data of the user is removed)
    );
}
        

2) Hook the deletion function to the Wordpress's Personal Data Removal tool


/**
* Registers all data erasers.
*
* @param array $exporters
*
* @return mixed
*/
function bp-moderation_register_privacy_erasers( $erasers ) {
    $erasers['my-plugin-slug'] = array(
        'eraser_friendly_name' => __( '<eraser name>', 'bp-moderation' ),
        'callback'             => 'bp-moderation_remove_data',
    );
    return $erasers;
}
        

add_filter( 'wp_privacy_personal_data_erasers', 'bp-moderation_register_privacy_erasers' );
        

        

#############################
# Privacy Policy Fix Report #
#############################

This report suggests fixes to comply with the GDPR Art. 13 (https://gdpr-info.eu/art-13-gdpr/) through including a privacy notice. The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/suggesting-text-for-the-site-privacy-policy/ for more details.

1) Implement a function that includes the privacy policy for the plugin and provide it to wordpress through wp_add_privacy_policy_content(). Sample code:


/**
* Adds a privacy policy statement.
*/
function bp-moderation_add_privacy_policy_content() {
    if ( ! function_exists( 'wp_add_privacy_policy_content' ) ) {
        return;
    }
    //TODO: modify the content below to include the privacy policy for the plugin.
    $content = '<p class="privacy-policy-tutorial">' . __( 'Some introductory content for the suggested text.', 'bp-moderation' ) . '</p>'
            . '<strong class="privacy-policy-tutorial">' . __( 'Suggested Text:', 'bp-moderation' ) . '</strong> '
            . sprintf(
                __( 'When you leave a comment on this site, we send your name, email address, IP address and comment text to example.com. Example.com does not retain your personal data. The example.com privacy policy is <a href="%1$s" target="_blank">here</a>.', 'bp-moderation' ),
                'https://example.com/privacy-policy'
            );
    wp_add_privacy_policy_content( 'bp-moderation', wp_kses_post( wpautop( $content, false ) ) );
}
        

2) Hook the privacy policy function to the Wordpress's admin initialization action.


add_action( 'admin_init', 'bp-moderation_add_privacy_policy_content' );
        

        


Disclaimer: The sample code provided above is only for reference and does not guarantee GDPR compliance. The recommended list of data to delete/export may not be comprehensive. 
        
Done.
