Timeout in resolving values
Timeout in running neo4j query
Running Main.py on vxor-convertor

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:01.585702.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.490813.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 65 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.468375.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 0 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.457424.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 1377 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:01.191762.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 0 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.471066.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.086521.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 497 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:12.747070.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 8991
Added 7052 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 27772
Added 18781 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:03.294312.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/vxor-convertor/vxor-convertor.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/vxor-convertor/lib/convert.func.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/vxor-convertor/lib/db.class.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/vxor-convertor/lib/vxor.class.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/vxor-convertor/lib/vxor.func.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/vxor-convertor/plugins/f2cont/config.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/vxor-convertor/plugins/f2cont/functions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/vxor-convertor/plugins/f2cont/step_10.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/vxor-convertor/plugins/f2cont/step_11.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/vxor-convertor/plugins/f2cont/step_1.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/vxor-convertor/plugins/f2cont/step_2.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/vxor-convertor/plugins/f2cont/step_3.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/vxor-convertor/plugins/f2cont/step_4.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/vxor-convertor/plugins/f2cont/step_5.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/vxor-convertor/plugins/f2cont/step_6.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/vxor-convertor/plugins/f2cont/step_7.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/vxor-convertor/plugins/f2cont/step_8.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/vxor-convertor/plugins/f2cont/step_9.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/vxor-convertor/plugins/pjblog3/config.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/vxor-convertor/plugins/pjblog3/functions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/vxor-convertor/plugins/pjblog3/step_10.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/vxor-convertor/plugins/pjblog3/step_11.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/vxor-convertor/plugins/pjblog3/step_1.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/vxor-convertor/plugins/pjblog3/step_2.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/vxor-convertor/plugins/pjblog3/step_3.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/vxor-convertor/plugins/pjblog3/step_4.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/vxor-convertor/plugins/pjblog3/step_5.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/vxor-convertor/plugins/pjblog3/step_6.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/vxor-convertor/plugins/pjblog3/step_7.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/vxor-convertor/plugins/pjblog3/step_8.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/vxor-convertor/plugins/pjblog3/step_9.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:02.960421.

1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
8991 PHP_REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
14000 PHP_REACHES edges created
15000 PHP_REACHES edges created
16000 PHP_REACHES edges created
17000 PHP_REACHES edges created
18000 PHP_REACHES edges created
18781 PHP_REACHES edges created
27772 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 3211 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.223281.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 2 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:03.680499.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 286 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:08.880697.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 335 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.177422.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.500887.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:02.012330.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.050780.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.041124.

2 CALLS edges created
621 PHP_REACHES edges created
623 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 365 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.168297.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
40 SQL operations to process.
SELECT * FROM $wpdb_tmp WHERE user_id = $user_id AND meta_key = %s
SELECT * FROM $wpdb_tmp WHERE user_id = $user_id AND meta_key = preg_replace("|[^a-z0-9_]|i", "", $meta_key)
SELECT * FROM $wpdb_tmp WHERE user_id = $user_id AND meta_key = preg_replace("|[^a-z0-9_]|i", "", $meta_key)
SQL command (SELECT * FROM $wpdb_tmp WHERE user_id = $user_id AND meta_key = preg_replace("|[^a-z0-9_]|i", "", $meta_key)) cannot be parsed correct.
SELECT $this_field FROM $dbprefix$this_table
SQL command (SELECT $this_field FROM $dbprefix$this_table) cannot be parsed correct.
SELECT * FROM $dbprefixguestbook WHERE id >= $start AND id < $start + $dbrpp ORDER BY id
SQL command (SELECT * FROM $dbprefixguestbook WHERE id >= $start AND id < $start + $dbrpp ORDER BY id) cannot be parsed correct.
SELECT * FROM $dbprefixtrackbacks ORDER BY id
SQL command (SELECT * FROM $dbprefixtrackbacks ORDER BY id) cannot be parsed correct.
SELECT * FROM $dbprefixmembers ORDER BY id
SQL command (SELECT * FROM $dbprefixmembers ORDER BY id) cannot be parsed correct.
SELECT * FROM $dbprefixcategories ORDER BY id
SQL command (SELECT * FROM $dbprefixcategories ORDER BY id) cannot be parsed correct.
SELECT * FROM $dbprefixlinkgroup ORDER BY id
SQL command (SELECT * FROM $dbprefixlinkgroup ORDER BY id) cannot be parsed correct.
SELECT * FROM $dbprefixlinks ORDER BY id
SQL command (SELECT * FROM $dbprefixlinks ORDER BY id) cannot be parsed correct.
SELECT * FROM $dbprefixlogs WHERE id >= $start AND id < $start + $dbrpp ORDER BY id
SQL command (SELECT * FROM $dbprefixlogs WHERE id >= $start AND id < $start + $dbrpp ORDER BY id) cannot be parsed correct.
SELECT * FROM $dbprefixattachments WHERE id >= $start AND id < $start + $dbrpp ORDER BY id
SQL command (SELECT * FROM $dbprefixattachments WHERE id >= $start AND id < $start + $dbrpp ORDER BY id) cannot be parsed correct.
SELECT * FROM $dbprefixcomments WHERE id >= $start AND id < $start + $dbrpp ORDER BY id
SQL command (SELECT * FROM $dbprefixcomments WHERE id >= $start AND id < $start + $dbrpp ORDER BY id) cannot be parsed correct.
SELECT * FROM $dbprefixComment WHERE comm_ID >= $start AND comm_ID < $start + $dbrpp ORDER BY comm_ID
SQL command (SELECT * FROM $dbprefixComment WHERE comm_ID >= $start AND comm_ID < $start + $dbrpp ORDER BY comm_ID) cannot be parsed correct.
SELECT * FROM $dbprefixTrackback ORDER BY tb_ID
SQL command (SELECT * FROM $dbprefixTrackback ORDER BY tb_ID) cannot be parsed correct.
SELECT * FROM $dbprefixmember ORDER BY mem_ID
SQL command (SELECT * FROM $dbprefixmember ORDER BY mem_ID) cannot be parsed correct.
SELECT * FROM $dbprefixCategory WHERE cate_Outlink >= 0 ORDER BY cate_ID
SQL command (SELECT * FROM $dbprefixCategory WHERE cate_Outlink >= 0 ORDER BY cate_ID) cannot be parsed correct.
SELECT * FROM $dbprefixLinkClass ORDER BY LinkClass_ID
SQL command (SELECT * FROM $dbprefixLinkClass ORDER BY LinkClass_ID) cannot be parsed correct.
SELECT * FROM $dbprefixLinks ORDER BY link_ID
SQL command (SELECT * FROM $dbprefixLinks ORDER BY link_ID) cannot be parsed correct.
SELECT * FROM $dbprefixContent WHERE log_ID >= $start AND log_ID < $start + $dbrpp ORDER BY log_ID
SQL command (SELECT * FROM $dbprefixContent WHERE log_ID >= $start AND log_ID < $start + $dbrpp ORDER BY log_ID) cannot be parsed correct.
SELECT * FROM $dbprefixFiles WHERE ID >= $start AND ID < $start + $dbrpp ORDER BY ID
SQL command (SELECT * FROM $dbprefixFiles WHERE ID >= $start AND ID < $start + $dbrpp ORDER BY ID) cannot be parsed correct.
SELECT * FROM $wpdb_tmp WHERE user_id = $user_id AND meta_key = preg_replace("|[^a-z0-9_]|i", "", $meta_key)
SQL command (SELECT * FROM $wpdb_tmp WHERE user_id = $user_id AND meta_key = preg_replace("|[^a-z0-9_]|i", "", $meta_key)) cannot be parsed correct.
SELECT * FROM $wpdb_tmp WHERE ID = absint($user_id) LIMIT 1
SELECT * FROM $wpdb_tmp WHERE ID = absint($user_id) LIMIT 1
SQL command (SELECT * FROM $wpdb_tmp WHERE ID = absint($user_id) LIMIT 1) cannot be parsed correct.
SELECT ID FROM $wpdb_tmp WHERE `user_login` = '$Name'
SQL command (SELECT ID FROM $wpdb_tmp WHERE `user_login` = '$Name') cannot be parsed correct.
SELECT tag_name FROM $dbprefixtag WHERE `tag_id` = $tag_id
SQL command (SELECT tag_name FROM $dbprefixtag WHERE `tag_id` = $tag_id) cannot be parsed correct.
UPDATE $wpdb_tmp SET user_pass = MD5('$user_pass') WHERE user_login = '$user_name'
SQL command (UPDATE $wpdb_tmp SET user_pass = MD5('$user_pass') WHERE user_login = '$user_name') cannot be parsed correct.
INSERT INTO $wpdb (link_id, link_url, link_name, link_image, link_target, link_description, link_visible, link_owner, link_rating, link_rel, link_notes, link_rss) VALUES($link_id, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)
INSERT INTO $wpdb (link_id, link_url, link_name, link_image, link_target, link_description, link_visible, link_owner, link_rating, link_rel, link_notes, link_rss) VALUES($link_id, $link_url, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)
INSERT INTO $wpdb (link_id, link$link_urlrl, link_name, link_image, link_target, link_description, link_visible, link_owner, link_rating, link_rel, link_notes, link_rss) VALUES($link_id, $link_url, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)
INSERT INTO $wpdb (lk_id, link$link_urlrl, link_name, link_image, link_target, link_description, link_visible, link_owner, link_rating, link_rel, link_notes, link_rss) VALUES($link_id, $link_url, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)
INSERT INTOwpdb (lk_id, link$link_urlrl, link_name, link_image, link_target, link_description, link_visible, link_owner, link_rating, link_rel, link_notes, link_rss) VALUES($link_id, $link_url, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)
INSERT INTOwpdb (lk_id, link$linkrlrl, link_name, link_image, link_target, link_description, link_visible, link_owner, link_rating, link_rel, link_notes, link_rss) VALUES($link_id, $link_url, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)
INSERT INTOwpdb (lk_id, link$linkrlrl, link_name, link_image, link_target, link_description, link_visible, link_owner, link_rating, link_rel, link_notes, link_rss) VALUES($link_id, $link_url, Y, %s, %s, %s, %s, %s, %s, %s, %s, %s)
INSERT INTOwpdb (lk_id$current_userlink$linkrlrl, link_name, link_image, link_target, link_description, link_visible, link_owner, link_rating, link_rel, link_notes, link_rss) VALUES($link_id, $link_url, Y, %s, %s, %s, %s, %s, %s, %s, %s, %s)
INSERT INTOwpdb (lk_id$current_userlink$linkrlrl, link_name, link_image, link_target, link_description, link_visible, link_owner, link_rating, link_rel, link_notes, link_rss) VALUES($link_id, $link_url, Y,0s, %s, %s, %s, %s, %s, %s, %s, %s)
INSERT INTOwpdb (lk_id$current_userlink$linkrlrl, link_name, link_image, link_target, link_description, link_visible, link_owner, link_rating, link_rel, link_notes, link_rss) VALUES($link_id, $link_url, Y,, %s, %s, %s, %s, %s, %s, %s, %s)
INSERT INTOwpdb (lk_id$current_userlink$linkrlrl, link_name, link_image, link_target, link_description, link_visible, link_owner, link_rating, link_rel, link_note link_rss) VALUES($link_id, $link_url, Y,, %s, %s, %s, %s, %s, %s, %s, %s)
INSERT INTOwpdb (lk_id$current_userlink$linkrlrl, link_name, link_image, link_target, link_description, link_visible, link_owner, link_rating, link_rel, link_note link_rss) VALUES($link_id, $link_url, Y,,s, %s, %s, %s, %s, %s, %s, %s)
INSERT INTOwpdb (lk_id$current_userlink$linkrlrl, link_name, link_image, link_target, link_description, link_visible, link_owner, link_rating, link_rel, link_note link_rss) VALUES($link_id, $link_url, Y,,s, %s, %s, %s, %s, %s, %s, %s)
SQL command (INSERT INTOwpdb (lk_id$current_userlink$linkrlrl, link_name, link_image, link_target, link_description, link_visible, link_owner, link_rating, link_rel, link_note link_rss) VALUES($link_id, $link_url, Y,,s, %s, %s, %s, %s, %s, %s, %s)) cannot be parsed correct.
SET NAMES '$this'
SQL command (SET NAMES '$this') cannot be parsed correct.
SELECT tt.term_taxonomy_id FROM $wpdb AS tt INNER JOIN $wpdb AS t ON tt.term_id = t.term_id WHERE tt.taxonomy = $taxonomy AND t.term_id = %d
SELECT tt.term_taxonomy_id FROM $wpdb AS tt INNER JOIN $wpdb AS t ON tt.term_id = t.term_id WHERE tt.taxonomy = $taxonomy AND t.term_id = $term_id
SELECT tt.term_taxonomy_id FROM $wpdb AS tt INNER JOIN $wpdb AS t ON tt.term_id = t.term_id WHERE tt.taxonomy = $taxonomy AND t.term_id = $term_id
SQL command (SELECT tt.term_taxonomy_id FROM $wpdb AS tt INNER JOIN $wpdb AS t ON tt.term_id = t.term_id WHERE tt.taxonomy = $taxonomy AND t.term_id = $term_id) cannot be parsed correct.
SELECT * FROM $wpdb_tmp WHERE user_id = $user_id AND meta_key = preg_replace("|[^a-z0-9_]|i", "", $meta_key)
SQL command (SELECT * FROM $wpdb_tmp WHERE user_id = $user_id AND meta_key = preg_replace("|[^a-z0-9_]|i", "", $meta_key)) cannot be parsed correct.
$query
SQL command ($query) cannot be parsed correct.
$query
SQL command ($query) cannot be parsed correct.
query
SQL command (query) cannot be parsed correct.
TRUNCATE TABLE $wpdb_$table
SQL command (TRUNCATE TABLE $wpdb_$table) cannot be parsed correct.
CREATE TABLE IF NOT EXISTS $wpdb_tmp (
ID bigint(20) unsigned NOT NULL auto_increment,
user_login varchar(60) NOT NULL default '',
user_pass varchar(64) NOT NULL default '',
user_nicename varchar(50) NOT NULL default '',
user_email varchar(100) NOT NULL default '',
user_url varchar(100) NOT NULL default '',
user_registered datetime NOT NULL default '0000-00-00 00:00:00',
user_activation_key varchar(60) NOT NULL default '',
user_status int(11) NOT NULL default '0',
display_name varchar(250) NOT NULL default '',
PRIMARY KEY  (ID),
KEY user_login_key (user_login),
KEY user_nicename (user_nicename)
) DEFAULT CHARACTER SET $wpdb;
SQL command (CREATE TABLE IF NOT EXISTS $wpdb_tmp ( ID bigint(20) unsigned NOT NULL auto_increment, user_login varchar(60) NOT NULL default '', user_pass varchar(64) NOT NULL default '', user_nicename varchar(50) NOT NULL default '', user_email varchar(100) NOT NULL default '', user_url varchar(100) NOT NULL default '', user_registered datetime NOT NULL default '0000-00-00 00:00:00', user_activation_key varchar(60) NOT NULL default '', user_status int(11) NOT NULL default '0', display_name varchar(250) NOT NULL default '', PRIMARY KEY (ID), KEY user_login_key (user_login), KEY user_nicename (user_nicename) ) DEFAULT CHARACTER SET $wpdb;) cannot be parsed correct.
CREATE TABLE IF NOT EXISTS $wpdb_tmp (
umeta_id bigint(20) unsigned NOT NULL auto_increment,
user_id bigint(20) unsigned NOT NULL default '0',
meta_key varchar(255) default NULL,
meta_value longtext,
PRIMARY KEY  (umeta_id),
KEY user_id (user_id),
KEY meta_key (meta_key)
) DEFAULT CHARACTER SET $wpdb;
SQL command (CREATE TABLE IF NOT EXISTS $wpdb_tmp ( umeta_id bigint(20) unsigned NOT NULL auto_increment, user_id bigint(20) unsigned NOT NULL default '0', meta_key varchar(255) default NULL, meta_value longtext, PRIMARY KEY (umeta_id), KEY user_id (user_id), KEY meta_key (meta_key) ) DEFAULT CHARACTER SET $wpdb;) cannot be parsed correct.
SHOW TABLES LIKE '$wpdb_tmp'
SQL command (SHOW TABLES LIKE '$wpdb_tmp') cannot be parsed correct.
DROP TABLE $wpdb
SQL command (DROP TABLE $wpdb) cannot be parsed correct.
RENAME TABLE $wpdb_tmp TO $wpdb
SQL command (RENAME TABLE $wpdb_tmp TO $wpdb) cannot be parsed correct.
SHOW TABLES LIKE '$wpdb_tmp'
SQL command (SHOW TABLES LIKE '$wpdb_tmp') cannot be parsed correct.
DROP TABLE $wpdb
SQL command (DROP TABLE $wpdb) cannot be parsed correct.
RENAME TABLE $wpdb_tmp TO $wpdb
SQL command (RENAME TABLE $wpdb_tmp TO $wpdb) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [4799, 7605, 11094, 11243, 11344, 11453, 11567, 11684, 11801, 12047, 12429, 13150, 13306, 13401, 13517, 13625, 13743, 13860, 14150, 1781, 1987, 4188, 13040, 2037, 3517, 4488, 5298, 5402, 5554, 5646, 4745, 10511, 10572, 10592, 10611, 10624, 10635, 10653, 10666, 10677]
Added 0 SQL nodes. 0 out of 40 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:10.467927.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'<p>'' cannot be parsed correct.
HTML code '$'$new_array_0'' cannot be parsed correct.
HTML code '$'<link rel="stylesheet" type="text/css" href="VXOR_CSS_URL/vxor.css" /
'' cannot be parsed correct.
HTML code '$'<script type="text/javascript" src="VXOR_JS_URL/jquery.js"></script
'' cannot be parsed correct.
HTML code '$'<script type="text/javascript" src="VXOR_JS_URL/vxor.js"></script
'' cannot be parsed correct.
HTML code '$'get_bloginfo("url")/wp-admin/admin.php?import=$this_plugin'' cannot be parsed correct.
HTML code '$'_vxor_blog_extend_post_replace()'' cannot be parsed correct.
HTML code '$'$this_config_Title'' cannot be parsed correct.
HTML code '$'$this_config_Meta'' cannot be parsed correct.
HTML code '$'<div><input id="vxor_next_step" type="hidden" value="$step&start=&maxid=$maxid" /></div'' cannot be parsed correct.
HTML code '$'$this_plugin'' cannot be parsed correct.
HTML code '$'$this_plugin'' cannot be parsed correct.
HTML code '$'<h3>sprintf(__("All done.") . " <a href="%s">" . __("Have fun!") . "</a>", get_option("home"))</h3>'' cannot be parsed correct.
HTML code '$'$this_plugin'' cannot be parsed correct.
HTML code '$'$this_plugin'' cannot be parsed correct.
HTML code '$'$this_plugin'' cannot be parsed correct.
HTML code '$'$this_plugin'' cannot be parsed correct.
HTML code '$'$this_config_BlogType'' cannot be parsed correct.
HTML code '$'$dbuser'' cannot be parsed correct.
HTML code '$'$dbpassword'' cannot be parsed correct.
HTML code '$'$dbname'' cannot be parsed correct.
HTML code '$'$dbhostlocalhost'' cannot be parsed correct.
HTML code '$'<option value=$_temp"$_temp</option>'' cannot be parsed correct.
HTML code '$'$dbprefix'' cannot be parsed correct.
HTML code '$'$dbrpp100'' cannot be parsed correct.
HTML code '$'$ext_url_old'' cannot be parsed correct.
HTML code '$'$ext_url_new'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'get_option("vxor_extend")_ext_post_old_'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'get_option("vxor_extend")_ext_post_new_'' cannot be parsed correct.
HTML code '$'ext_$extend_ID'' cannot be parsed correct.
HTML code '$'$extend_name'' cannot be parsed correct.
HTML code '$'<input type="text" name="ext_$extend_ID" id="ext_$extend_ID" value="$$ext" /
'' cannot be parsed correct.
HTML code '$'<label for="ext$ID"><input type="checkbox" name="ext_$extend_ID" id="ext_$extend_ID checked="checked" />&nbsp;Add</label>
'' cannot be parsed correct.
HTML code '$'&amp;action=extend" id="extend" class="button">'' cannot be parsed correct.
HTML code '$'&amp;action=clean" id="clean" class="button">'' cannot be parsed correct.
HTML code '$'</strong></p>
'' cannot be parsed correct.
HTML code '$'&amp;action=config" method="post">
            '' cannot be parsed correct.
HTML code '$'&amp;action=extend" method="post">
            '' cannot be parsed correct.
HTML code '$'&amp;action=config" id="config" class="button">'' cannot be parsed correct.
HTML code '$'&amp;action=convert" id="convert" class="button">'' cannot be parsed correct.
HTML code '$'select'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:05.560956.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.042879.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 24 do_action/apply_filters calls and 4 add_action/add_filter calls. Now connecting do-add pairs.
Added 1 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:01.120912.

1 PHP_REACHES edges created
1 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbaseDetector
### Start running FrontBaseDetector
### Finish running FileProDetector
### Start running HashDetector
### Finish running DbplusDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running FirebirdInterBaseDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IBMDb2Detector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IngresDetector
### Start running MySQLDetector
### Finish running ArrayElementDetector
### Start running MySQLiDetector
### Finish running HashDetector
### Start running Oci8Detector
### Finish running MsqlDetector
### Start running OpenSSLDetector
### Finish running MongoDbDetector
### Start running ParadoxDetector
### Finish running Oci8Detector
### Start running PasswordHashingDetector
### Finish running OpenSSLDetector
### Start running PhpCurlDetector
### Finish running ParadoxDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PhpCurlDetector
### Start running PHPRetrievalDetector
### Finish running PasswordHashingDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPIncludedDetector
### Start running PhpVarDetector
### Finish running PhpVarDetector
### Start running PostgreSQLDetector
### Finish running PHPStorageDetector
### Start running PropertyDetector
### Finish running PostgreSQLDetector
### Start running Sqlite3Detector
### Finish running PropertyDetector
### Start running SqliteDetector
### Finish running Sqlite3Detector
### Start running SqlServerDetector
### Finish running PHPRetrievalDetector
### Start running SybaseDetector
### Finish running SqliteDetector
### Start running TokyoTyrantDetector
### Finish running SybaseDetector
### Start running UserInputDetector
### Finish running TokyoTyrantDetector
### Start running VariableDetector
### Finish running SqlServerDetector
### Start running WordpressHashingFnDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRemoteDetector
### Finish running WordPressRemoteDetector
### Start running WordPressRetrievalDetector
### Finish running UserInputDetector
### Start running WordPressStorageDetector
### Finish running VariableDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running GenericDatabaseUsageDetector
### Start running GenericEncryptionDetector
### Finish running MySQLiDetector
### Start running DeletionDetector
### Finish running GenericEncryptionDetector
### Start running UninstallDetector
### Finish running maxdbDetector
### Finish running WordPressStorageDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running WordPressRetrievalDetector
### Finish running MySQLDetector
### Finished running detectors
lib/db.class.php:27
  - mysql_connect called without SSL flag. MySQL extension is deprecated as of PHP 5.5.0 and removed in PHP 7.0.0.
  - Data types: database 

lib/vxor.func.php:218
  - RETRIEVAL call to file($step).
  - Data types: file 

lib/convert.func.php:414
  - variable '$user_pass' of personal types {'password'} is found.
  - Data types: password
lib/convert.func.php:415
  - variable '$user_pass' of personal types {'password'} is found.
  - Data types: password
lib/convert.func.php:417
  - variable '$user_nicename' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
lib/convert.func.php:418
  - variable '$user_nicename' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
lib/convert.func.php:419
  - variable '$user_nicename' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
lib/convert.func.php:419
  - variable '$user_nicename' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
lib/convert.func.php:425
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
lib/convert.func.php:426
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
lib/convert.func.php:427
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
lib/convert.func.php:427
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
lib/convert.func.php:437
  - variable '$first_name' of personal types {'first_name'} is found.
  - Data types: first_name
lib/convert.func.php:438
  - variable '$first_name' of personal types {'first_name'} is found.
  - Data types: first_name
lib/convert.func.php:439
  - variable '$first_name' of personal types {'first_name'} is found.
  - Data types: first_name
lib/convert.func.php:439
  - variable '$first_name' of personal types {'first_name'} is found.
  - Data types: first_name
lib/convert.func.php:441
  - variable '$last_name' of personal types {'last_name'} is found.
  - Data types: last_name
lib/convert.func.php:442
  - variable '$last_name' of personal types {'last_name'} is found.
  - Data types: last_name
lib/convert.func.php:443
  - variable '$last_name' of personal types {'last_name'} is found.
  - Data types: last_name
lib/convert.func.php:443
  - variable '$last_name' of personal types {'last_name'} is found.
  - Data types: last_name
lib/convert.func.php:462
  - variable '$user_nicename_check' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
lib/convert.func.php:462
  - variable '$user_nicename' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
lib/convert.func.php:464
  - variable '$user_nicename_check' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
lib/convert.func.php:466
  - variable '$user_nicename_check' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
lib/convert.func.php:467
  - variable '$alt_user_nicename' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
lib/convert.func.php:467
  - variable '$user_nicename' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
lib/convert.func.php:468
  - variable '$user_nicename_check' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
lib/convert.func.php:468
  - variable '$alt_user_nicename' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
lib/convert.func.php:471
  - variable '$user_nicename' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
lib/convert.func.php:471
  - variable '$alt_user_nicename' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
lib/convert.func.php:480
  - variable '$first_name' of personal types {'first_name'} is found.
  - Data types: first_name
lib/convert.func.php:481
  - variable '$last_name' of personal types {'last_name'} is found.
  - Data types: last_name
lib/convert.func.php:601
  - variable '$user_pass' of personal types {'password'} is found.
  - Data types: password
lib/convert.func.php:601
  - variable '$user_name' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
plugins/pjblog3/step_2.php:28
  - variable '$ext_admin_pass' of personal types {'password'} is found.
  - Data types: password 

lib/convert.func.php:415
  - CRYPTOGRAPHY call to wp_hash_password(wp_generate_password()). Passed arguments: 0: $password (string). Returns (string). 

lib/convert.func.php:87
  - RETRIEVAL call to get_option("vxor_" . $field) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/convert.func.php:168
  - RETRIEVAL call to get_option("vxor_extend") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/convert.func.php:181
  - RETRIEVAL call to get_option("siteurl") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/convert.func.php:415
  - RETRIEVAL call to wp_hash_password(wp_generate_password()). Passed arguments: 0: $password (string). Returns (string).
lib/convert.func.php:493
  - RETRIEVAL call to get_option("default_role") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/convert.func.php:882
  - RETRIEVAL call to get_option("vxor_extend") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/convert.func.php:906
  - RETRIEVAL call to get_option("vxor_extend") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/convert.func.php:935
  - RETRIEVAL call to get_post($id) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, wp_post, post
lib/convert.func.php:1105
  - RETRIEVAL call to get_option("default_link_category") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/convert.func.php:1141
  - RETRIEVAL call to get_option("default_link_category") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/convert.func.php:1203
  - RETRIEVAL call to get_comment($id). Passed arguments: 0: $comment (WP_Comment|string|int). Returns (WP_Comment|array|null).
lib/convert.func.php:1223
  - RETRIEVAL call to get_option("vxor_extend") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/convert.func.php:1259
  - RETRIEVAL call to get_option("vxor_extend") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/convert.func.php:1316
  - RETRIEVAL call to get_post($post_id, ARRAY_A) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 1: $output (string), 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, wp_post, post
lib/vxor.class.php:260
  - RETRIEVAL call to get_option("vxor_config") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/vxor.class.php:261
  - RETRIEVAL call to get_option("vxor_extend") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/vxor.class.php:262
  - RETRIEVAL call to get_option("vxor_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/vxor.class.php:357
  - RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/vxor.class.php:430
  - RETRIEVAL call to get_option("vxor_config") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/vxor.class.php:490
  - RETRIEVAL call to get_option("vxor_config") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/vxor.func.php:318
  - RETRIEVAL call to get_option("vxor_config") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/vxor.func.php:380
  - RETRIEVAL call to get_option("vxor_extend") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/vxor.func.php:414
  - RETRIEVAL call to get_option("vxor_extend") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/vxor.func.php:448
  - RETRIEVAL call to get_option("vxor_extend") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/vxor.func.php:505
  - RETRIEVAL call to get_option("vxor_action") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
plugins/f2cont/functions.php:21
  - RETRIEVAL call to get_option("default_role") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
plugins/f2cont/step_11.php:25
  - RETRIEVAL call to wp_insert_comment($commentdata). Passed arguments: 0: $commentdata (array). Returns (int|false).
plugins/f2cont/step_4.php:8
  - RETRIEVAL call to get_option("vxor_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
plugins/f2cont/step_5.php:8
  - RETRIEVAL call to get_option("vxor_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
plugins/f2cont/step_7.php:15
  - RETRIEVAL call to get_option("vxor_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
plugins/f2cont/step_7.php:43
  - RETRIEVAL call to get_post($sAttach["logId"]) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, wp_post, post
plugins/f2cont/step_7.php:57
  - RETRIEVAL call to get_post($sAttach["logId"], ARRAY_A) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 1: $output (string), 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, wp_post, post
plugins/f2cont/step_9.php:18
  - RETRIEVAL call to get_post($sComment["logId"]) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, wp_post, post
plugins/pjblog3/functions.php:16
  - RETRIEVAL call to get_option("default_role") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
plugins/pjblog3/functions.php:84
  - RETRIEVAL call to get_option("vxor_config", EXTR_SKIP) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
plugins/pjblog3/step_10.php:18
  - RETRIEVAL call to get_post($sComment["blog_ID"]) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, wp_post, post
plugins/pjblog3/step_11.php:24
  - RETRIEVAL call to wp_insert_comment($commentdata). Passed arguments: 0: $commentdata (array). Returns (int|false).
plugins/pjblog3/step_4.php:8
  - RETRIEVAL call to get_option("vxor_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
plugins/pjblog3/step_5.php:8
  - RETRIEVAL call to get_option("vxor_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
plugins/pjblog3/step_7.php:15
  - RETRIEVAL call to get_option("vxor_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
plugins/pjblog3/step_8.php:9
  - RETRIEVAL call to get_option("vxor_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
plugins/pjblog3/step_8.php:16
  - RETRIEVAL call to get_post($post_id, ARRAY_A) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 1: $output (string), 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, wp_post, post
plugins/pjblog3/step_8.php:22
  - RETRIEVAL call to get_post($attach_id_new, ARRAY_A) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 1: $output (string), 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, wp_post, post 

lib/convert.func.php:95
  - STORAGE call to update_option("vxor_" . $field, $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/convert.func.php:535
  - STORAGE call to delete_usermeta($user_id, $meta_key) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
lib/convert.func.php:818
  - STORAGE call to wp_insert_post($postarr, true). Passed arguments: 0: $postarr (array), 1: $wp_error (bool). Returns (int|WP_Error).
lib/vxor.class.php:347
  - STORAGE call to delete_option($option) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
lib/vxor.class.php:429
  - STORAGE call to update_option("vxor_config", $config) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/vxor.class.php:479
  - STORAGE call to update_option("vxor_extend", $ext) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/vxor.func.php:506
  - STORAGE call to update_option("vxor_action", $thisaction) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/vxor.func.php:527
  - STORAGE call to update_option($option, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/vxor.func.php:529
  - STORAGE call to update_option("sticky_posts", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
plugins/f2cont/step_4.php:31
  - STORAGE call to update_option("default_link_category", $$term_id) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
plugins/pjblog3/step_4.php:31
  - STORAGE call to update_option("default_link_category", $catarr["cat_ID"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option 

lib/vxor.class.php:347
  - DELETION call to delete_option($option) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

By data type:
database
	MySQLDetector.(unknown) - {'database'}
email
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
file
	PHPRetrievalDetector.file($step) - {'file'}
first_name
	VariableDetector.(unknown) - {'first_name'}
	VariableDetector.(unknown) - {'first_name'}
	VariableDetector.(unknown) - {'first_name'}
	VariableDetector.(unknown) - {'first_name'}
	VariableDetector.(unknown) - {'first_name'}
last_name
	VariableDetector.(unknown) - {'last_name'}
	VariableDetector.(unknown) - {'last_name'}
	VariableDetector.(unknown) - {'last_name'}
	VariableDetector.(unknown) - {'last_name'}
	VariableDetector.(unknown) - {'last_name'}
none
	WordPressStorageDetector.wp_insert_post($postarr, true) - set()
	WordPressRetrievalDetector.get_comment($id) - set()
	WordPressRetrievalDetector.wp_hash_password(wp_generate_password()) - set()
	WordpressHashingFnDetector.wp_hash_password(wp_generate_password()) - set()
	WordPressRetrievalDetector.wp_insert_comment($commentdata) - set()
	WordPressRetrievalDetector.wp_insert_comment($commentdata) - set()
option
	WordPressRetrievalDetector.get_option("default_link_category") - {'option'}
	WordPressRetrievalDetector.get_option("vxor_step") - {'option'}
	WordPressRetrievalDetector.get_option("vxor_extend") - {'option'}
	WordPressRetrievalDetector.get_option("home") - {'option'}
	WordPressRetrievalDetector.get_option("vxor_config") - {'option'}
	WordPressStorageDetector.update_option("vxor_extend", $ext) - {'option'}
	WordPressRetrievalDetector.get_option("vxor_extend") - {'option'}
	WordPressStorageDetector.update_option("sticky_posts", []) - {'option'}
	WordPressRetrievalDetector.get_option("vxor_step") - {'option'}
	WordPressStorageDetector.update_option("default_link_category", $$term_id) - {'option'}
	WordPressStorageDetector.update_option("default_link_category", $catarr["cat_ID"]) - {'option'}
	WordPressRetrievalDetector.get_option("vxor_extend") - {'option'}
	WordPressRetrievalDetector.get_option("vxor_config") - {'option'}
	WordPressRetrievalDetector.get_option("vxor_config") - {'option'}
	DeletionDetector.delete_option($option) - {'option'}
	WordPressRetrievalDetector.get_option("vxor_extend") - {'option'}
	WordPressStorageDetector.update_option("vxor_config", $config) - {'option'}
	WordPressRetrievalDetector.get_option("vxor_extend") - {'option'}
	WordPressRetrievalDetector.get_option("vxor_step") - {'option'}
	WordPressRetrievalDetector.get_option("vxor_step") - {'option'}
	WordPressStorageDetector.update_option($option, []) - {'option'}
	WordPressRetrievalDetector.get_option("vxor_" . $field) - {'option'}
	WordPressRetrievalDetector.get_option("default_role") - {'option'}
	WordPressRetrievalDetector.get_option("vxor_extend") - {'option'}
	WordPressRetrievalDetector.get_option("default_role") - {'option'}
	WordPressRetrievalDetector.get_option("vxor_step") - {'option'}
	WordPressRetrievalDetector.get_option("vxor_extend") - {'option'}
	WordPressRetrievalDetector.get_option("default_link_category") - {'option'}
	WordPressRetrievalDetector.get_option("vxor_config", EXTR_SKIP) - {'option'}
	WordPressRetrievalDetector.get_option("vxor_step") - {'option'}
	WordPressRetrievalDetector.get_option("siteurl") - {'option'}
	WordPressRetrievalDetector.get_option("vxor_extend") - {'option'}
	WordPressRetrievalDetector.get_option("vxor_extend") - {'option'}
	WordPressRetrievalDetector.get_option("default_role") - {'option'}
	WordPressRetrievalDetector.get_option("vxor_step") - {'option'}
	WordPressRetrievalDetector.get_option("vxor_config") - {'option'}
	WordPressStorageDetector.delete_option($option) - {'option'}
	WordPressRetrievalDetector.get_option("vxor_action") - {'option'}
	WordPressRetrievalDetector.get_option("vxor_step") - {'option'}
	WordPressStorageDetector.update_option("vxor_action", $thisaction) - {'option'}
	WordPressStorageDetector.update_option("vxor_" . $field, $options) - {'option'}
password
	VariableDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
post
	WordPressRetrievalDetector.get_post($post_id, ARRAY_A) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($post_id, ARRAY_A) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($id) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($attach_id_new, ARRAY_A) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($sComment["blog_ID"]) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($sComment["logId"]) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($sAttach["logId"], ARRAY_A) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($sAttach["logId"]) - {'post_meta', 'wp_post', 'post'}
post_meta
	WordPressRetrievalDetector.get_post($post_id, ARRAY_A) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($post_id, ARRAY_A) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($id) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($attach_id_new, ARRAY_A) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($sComment["blog_ID"]) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($sComment["logId"]) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($sAttach["logId"], ARRAY_A) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($sAttach["logId"]) - {'post_meta', 'wp_post', 'post'}
user
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
user_meta
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressStorageDetector.delete_usermeta($user_id, $meta_key) - {'user_meta'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
wp_post
	WordPressRetrievalDetector.get_post($post_id, ARRAY_A) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($post_id, ARRAY_A) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($id) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($attach_id_new, ARRAY_A) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($sComment["blog_ID"]) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($sComment["logId"]) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($sAttach["logId"], ARRAY_A) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($sAttach["logId"]) - {'post_meta', 'wp_post', 'post'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:21.055413.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 279 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.342507.

279 STORE_REACHES edges created
279 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 91 nodes as PERSONAL
In total, tainted 91 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 2 nodes as ENCRYPTED
In total, tainted 2 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:04.566327.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:01:36.678686!
DELETION call to delete_option($option) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
mysql_connect called without SSL flag. MySQL extension is deprecated as of PHP 5.5.0 and removed in PHP 7.0.0.,None,None
RETRIEVAL call to file($step).,None,None
variable '$user_pass' of personal types {'password'} is found.,,None
variable '$user_pass' of personal types {'password'} is found.,,None
variable '$user_nicename' of personal types {'user_meta', 'user'} is found.,,None
variable '$user_nicename' of personal types {'user_meta', 'user'} is found.,,None
variable '$user_nicename' of personal types {'user_meta', 'user'} is found.,,None
variable '$user_nicename' of personal types {'user_meta', 'user'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$first_name' of personal types {'first_name'} is found.,,None
variable '$first_name' of personal types {'first_name'} is found.,,None
variable '$first_name' of personal types {'first_name'} is found.,,None
variable '$first_name' of personal types {'first_name'} is found.,,None
variable '$last_name' of personal types {'last_name'} is found.,,None
variable '$last_name' of personal types {'last_name'} is found.,,None
variable '$last_name' of personal types {'last_name'} is found.,,None
variable '$last_name' of personal types {'last_name'} is found.,,None
variable '$user_nicename_check' of personal types {'user_meta', 'user'} is found.,,None
variable '$user_nicename' of personal types {'user_meta', 'user'} is found.,,None
variable '$user_nicename_check' of personal types {'user_meta', 'user'} is found.,,None
variable '$user_nicename_check' of personal types {'user_meta', 'user'} is found.,,None
variable '$alt_user_nicename' of personal types {'user_meta', 'user'} is found.,,None
variable '$user_nicename' of personal types {'user_meta', 'user'} is found.,,None
variable '$alt_user_nicename' of personal types {'user_meta', 'user'} is found.,,None
variable '$user_nicename_check' of personal types {'user_meta', 'user'} is found.,,None
variable '$user_nicename' of personal types {'user_meta', 'user'} is found.,,None
variable '$alt_user_nicename' of personal types {'user_meta', 'user'} is found.,,None
variable '$first_name' of personal types {'first_name'} is found.,,None
variable '$last_name' of personal types {'last_name'} is found.,,None
variable '$user_name' of personal types {'user_meta', 'user'} is found.,,None
variable '$user_pass' of personal types {'password'} is found.,,None
variable '$ext_admin_pass' of personal types {'password'} is found.,,None
RETRIEVAL call to get_option("default_link_category") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("default_link_category") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_comment($id). Passed arguments: 0: $comment (WP_Comment|string|int). Returns (WP_Comment|array|null).,None,None
RETRIEVAL call to get_option("vxor_extend") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vxor_extend") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($post_id, ARRAY_A) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 1: $output (string), 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("vxor_extend") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("siteurl") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_hash_password(wp_generate_password()). Passed arguments: 0: $password (string). Returns (string).,None,None
RETRIEVAL call to get_option("default_role") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vxor_" . $field) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vxor_extend") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vxor_extend") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($id) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("vxor_config") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vxor_extend") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vxor_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vxor_config") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vxor_config") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vxor_config") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vxor_extend") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vxor_extend") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vxor_extend") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vxor_action") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("default_role") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_insert_comment($commentdata). Passed arguments: 0: $commentdata (array). Returns (int|false).,None,None
RETRIEVAL call to get_option("vxor_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vxor_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vxor_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($sAttach["logId"]) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($sAttach["logId"], ARRAY_A) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 1: $output (string), 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($sComment["logId"]) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("default_role") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vxor_config", EXTR_SKIP) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post($sComment["blog_ID"]) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to wp_insert_comment($commentdata). Passed arguments: 0: $commentdata (array). Returns (int|false).,None,None
RETRIEVAL call to get_option("vxor_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vxor_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vxor_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($post_id, ARRAY_A) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 1: $output (string), 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($attach_id_new, ARRAY_A) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 1: $output (string), 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("vxor_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
STORAGE call to delete_usermeta($user_id, $meta_key) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to wp_insert_post($postarr, true). Passed arguments: 0: $postarr (array), 1: $wp_error (bool). Returns (int|WP_Error).,None,None
STORAGE call to update_option("vxor_" . $field, $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option($option) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("vxor_config", $config) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("vxor_extend", $ext) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("vxor_action", $thisaction) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option($option, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sticky_posts", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("default_link_category", $$term_id) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("default_link_category", $catarr["cat_ID"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
CRYPTOGRAPHY call to wp_hash_password(wp_generate_password()). Passed arguments: 0: $password (string). Returns (string).,hash,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "delete_usermeta($user_id, $meta_key)", found in file lib/convert.func.php at line 535. 

[has_storage] Storage check is WP 

[Art.17, Right to erasure] Wordpress storage of PII through delete_usermeta($user_id, $meta_key) does not have corresponding deletion method. Storage method found in file lib/convert.func.php at line 535. 

[Art.17, Right to erasure] Deletion access is NONE 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1770. Found in file lib/convert.func.php at line 535 

[Art.15, Right to access] Data access is NONE_BUT_NOT_REQUIRED 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['access', 'deletion', 'encryption', 'third_party'] 

[main] Is deletion in violation? True 

[main] Is access in violation? False 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? False 


###########
### Q&A ###
###########

1. Why is my plugin in violation against GDPR?

GDPR (https://gdpr-info.eu/) aims to give citizens in the European Union (EU) control over their personal data. If a website collects or store user data, it is required to provide users functionalities to control their data, such as ones to erase or export their data. While a plugin do not directly interact with users, it may provide functionalities that collect or store personal data, which would make websites that deploy the plugin in violation against GDPR if the plugin does not provide corresponding functionalities to allow users control their personal data. Therefore, plugin developers are responsible to provide functions to manage the personal data they handle in accordance with GDPR. We list requirements by specific GDPR articles relevant to your plugin below.


[Art. 13, Information to be provided where personal data are collected from the data subject] If a plugin collects or handles personal data, it needs to provide privacy policy texts that explain what personal data is being collected and for what purpose. The texts are meant to be added to the privacy policy of the websites that deploy the plugin. 


            
[Art.17, Right to erasure] If a plugin stores personal data in a custom database they create or manage, or through Wordpress's native storage functions (e.g., update_user_meta), it needs to provide methods for users to erase the data upon request. Note that deleting data for all users upon uninstallation does not satisfy the requirement. 


            
        

2. How do I make my plugin compliant?

Please refer to the fix report below to see how you can make your plugin comply with GDPR.

        

##################
### Fix Report ###
##################

############################
# Data Deletion Fix Report #
############################

This report suggests fixes to comply with the GDPR Art. 17, Right to erasure (https://gdpr-info.eu/art-17-gdpr/). The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/adding-the-personal-data-eraser-to-your-plugin/ for more details.

1) Implement a function that deletes all the user data collected in the plugin. Sample code:


/**
* Removes all collected data of a user.
*
* @param string $email_address   email address to manipulate
* @param int    $page            pagination
*
* @return array
*/
function vxor-convertor_remove_data( $email_address, $page = 1 ) {
    
    $page = (int) $page;


    //TODO: Delete the user data that was stored using Wordpress functions

    //Below is the sample code for deleting user meta and may need to be modified to suit the plugin.
    $user_id = get_user_by('email', $email_address)
    $key = 'email' //Sample user meta key
    if ( $customer->user_id > 0 ) {
        //Delete user meta data by $key
        delete_user_meta( $user_id, $key );
    }
        



    // Tell core if we have more data to delete still
    $done = true;
    return array(
        'items_removed'  => $items_removed, // true if collected data of a user is being deleted
        'items_retained' => $items_retained, // true if certain data needs to be retained
        'messages'       => sprintf( __( 'Data of user with email %s successfully deleted.', 'vxor-convertor' ), $email_address ), // Put messages for data removal
        'done'           => $done, // true if all the removal processes are done (all data of the user is removed)
    );
}
        

2) Hook the deletion function to the Wordpress's Personal Data Removal tool


/**
* Registers all data erasers.
*
* @param array $exporters
*
* @return mixed
*/
function vxor-convertor_register_privacy_erasers( $erasers ) {
    $erasers['my-plugin-slug'] = array(
        'eraser_friendly_name' => __( '<eraser name>', 'vxor-convertor' ),
        'callback'             => 'vxor-convertor_remove_data',
    );
    return $erasers;
}
        

add_filter( 'wp_privacy_personal_data_erasers', 'vxor-convertor_register_privacy_erasers' );
        

        

#############################
# Privacy Policy Fix Report #
#############################

This report suggests fixes to comply with the GDPR Art. 13 (https://gdpr-info.eu/art-13-gdpr/) through including a privacy notice. The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/suggesting-text-for-the-site-privacy-policy/ for more details.

1) Implement a function that includes the privacy policy for the plugin and provide it to wordpress through wp_add_privacy_policy_content(). Sample code:


/**
* Adds a privacy policy statement.
*/
function vxor-convertor_add_privacy_policy_content() {
    if ( ! function_exists( 'wp_add_privacy_policy_content' ) ) {
        return;
    }
    //TODO: modify the content below to include the privacy policy for the plugin.
    $content = '<p class="privacy-policy-tutorial">' . __( 'Some introductory content for the suggested text.', 'vxor-convertor' ) . '</p>'
            . '<strong class="privacy-policy-tutorial">' . __( 'Suggested Text:', 'vxor-convertor' ) . '</strong> '
            . sprintf(
                __( 'When you leave a comment on this site, we send your name, email address, IP address and comment text to example.com. Example.com does not retain your personal data. The example.com privacy policy is <a href="%1$s" target="_blank">here</a>.', 'vxor-convertor' ),
                'https://example.com/privacy-policy'
            );
    wp_add_privacy_policy_content( 'vxor-convertor', wp_kses_post( wpautop( $content, false ) ) );
}
        

2) Hook the privacy policy function to the Wordpress's admin initialization action.


add_action( 'admin_init', 'vxor-convertor_add_privacy_policy_content' );
        

        


Disclaimer: The sample code provided above is only for reference and does not guarantee GDPR compliance. The recommended list of data to delete/export may not be comprehensive. 
        
Done.
