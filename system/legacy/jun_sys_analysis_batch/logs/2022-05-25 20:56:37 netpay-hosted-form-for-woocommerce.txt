Timeout in resolving values
Timeout in running neo4j query
Running Main.py on netpay-hosted-form-for-woocommerce

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.338321.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:00.922439.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 14 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.377258.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 1 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.594903.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 442 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:00.917899.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 0 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.646078.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.124456.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 164 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:03.349029.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 4138
Added 3517 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 4138
Added 0 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.321591.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/netpay-hosted-form-for-woocommerce/index.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.163902.

14 PHP_REACHES edges created
1 REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
4123 PHP_REACHES edges created
4138 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 1346 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.189109.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:03.630274.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 72 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:02.287692.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 31 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.153964.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.413475.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.531621.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.008924.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.032784.

103 PHP_REACHES edges created
103 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 110 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.138032.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
No SQL nodes to process.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:00.125781.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'wpautop(wptexturize($this->description))<br>'' cannot be parsed correct.
HTML code '$'$this->generate_netpay_form($order)'' cannot be parsed correct.
HTML code '$'<h3>NetPay Hosted Form Method Payment Configuration</h3>'' cannot be parsed correct.
HTML code '$'<p>NetPay is most popular payment gateway for online payment processing</p>'' cannot be parsed correct.
HTML code '$'<div id="message" class="error"><p><strong style="text-transform: uppercase; font-size: 18px;">You need to have cURL extension enabled in your PHP installation to use this plugin</strong></p></div>'' cannot be parsed correct.
HTML code '$'<html><head><script language="javascript">
				   <!--
				   window.location="add_query_arg("key", $order->order_key, $this->get_return_url($order))";
				   //-->
				   </script>
				   </head><body><noscript><meta http-equiv="refresh" content="0;url=add_query_arg("key", $order->order_key, $this->get_return_url($order))"></noscript></body></html'' cannot be parsed correct.
HTML code '$'<table class="form-table">'' cannot be parsed correct.
HTML code '$'<tr><td>(Module Version 1.0.6)</td></tr></table>'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:02.020739.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.045082.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 0 do_action/apply_filters calls and 8 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.585932.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbaseDetector
### Start running FrontBaseDetector
### Finish running FileProDetector
### Start running HashDetector
### Finish running DbplusDetector
### Start running IBMDb2Detector
### Finish running FirebirdInterBaseDetector
### Start running InformixDetector
### Finish running CubridDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running IngresDetector
### Start running MongoDbDetector
### Finish running InformixDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running Oci8Detector
### Start running OpenSSLDetector
### Finish running MongoDbDetector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running ArrayElementDetector
### Start running PhpCurlDetector
### Finish running PasswordHashingDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running HashDetector
### Start running PHPRetrievalDetector
### Finish running OpenSSLDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPRetrievalDetector
### Start running PhpVarDetector
### Finish running PHPStorageDetector
### Start running PostgreSQLDetector
### Finish running PHPIncludedDetector
### Start running PropertyDetector
### Finish running PhpVarDetector
### Start running Sqlite3Detector
### Finish running PostgreSQLDetector
### Start running SqliteDetector
### Finish running SqliteDetector
### Start running SqlServerDetector
### Finish running Sqlite3Detector
### Start running SybaseDetector
### Finish running SybaseDetector
### Start running TokyoTyrantDetector
### Finish running TokyoTyrantDetector
### Start running UserInputDetector
### Finish running MySQLiDetector
### Start running VariableDetector
### Finish running maxdbDetector
### Start running WordpressHashingFnDetector
### Finish running SqlServerDetector
### Start running WordPressRemoteDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRetrievalDetector
### Finish running WordPressRemoteDetector
### Start running WordPressStorageDetector
### Finish running VariableDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running UserInputDetector
### Start running GenericEncryptionDetector
### Finish running GenericDatabaseUsageDetector
### Start running DeletionDetector
### Finish running PropertyDetector
### Start running UninstallDetector
### Finish running PhpCurlDetector
### Finish running WordPressStorageDetector
### Finish running DeletionDetector
### Finish running WordPressRetrievalDetector
### Finish running UninstallDetector
### Finish running GenericEncryptionDetector
### Finished running detectors
index.php:630
  - SHA1 called with parameters [transaction_id, get_woocommerce_currency, order, order_total, session_token]. Ignore if [transaction_id, get_woocommerce_currency, order, order_total, session_token] does not contain personal information. 

index.php:57
  - object property '$this->netpay_username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
index.php:58
  - object property '$this->netpay_password' of personal types {'password'} is found.
  - Data types: password
index.php:620
  - object property '$this->netpay_username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
index.php:621
  - object property '$this->netpay_password' of personal types {'password'} is found.
  - Data types: password
index.php:741
  - object property '$order->billing_address_1' of personal types {'address'} is found.
  - Data types: address
index.php:741
  - object property '$order->billing_address_2' of personal types {'address'} is found.
  - Data types: address
index.php:742
  - object property '$order->billing_city' of personal types {'city'} is found.
  - Data types: city
index.php:743
  - object property '$order->billing_state' of personal types {'state'} is found.
  - Data types: state
index.php:744
  - object property '$order->billing_postcode' of personal types {'postcode'} is found.
  - Data types: postcode
index.php:745
  - object property '$order->billing_country' of personal types {'country'} is found.
  - Data types: country
index.php:746
  - object property '$order->billing_email' of personal types {'email'} is found.
  - Data types: email
index.php:748
  - object property '$order->billing_first_name' of personal types {'first_name'} is found.
  - Data types: first_name
index.php:749
  - object property '$order->billing_last_name' of personal types {'last_name'} is found.
  - Data types: last_name
index.php:750
  - object property '$order->billing_first_name' of personal types {'first_name'} is found.
  - Data types: first_name
index.php:750
  - object property '$order->billing_last_name' of personal types {'last_name'} is found.
  - Data types: last_name
index.php:752
  - object property '$order->billing_address_1' of personal types {'address'} is found.
  - Data types: address
index.php:752
  - object property '$order->billing_address_2' of personal types {'address'} is found.
  - Data types: address
index.php:753
  - object property '$order->billing_city' of personal types {'city'} is found.
  - Data types: city
index.php:754
  - object property '$order->billing_state' of personal types {'state'} is found.
  - Data types: state
index.php:755
  - object property '$order->billing_country' of personal types {'country'} is found.
  - Data types: country
index.php:756
  - object property '$order->billing_postcode' of personal types {'postcode'} is found.
  - Data types: postcode
index.php:768
  - object property '$order->billing_address_1' of personal types {'address'} is found.
  - Data types: address
index.php:768
  - object property '$order->billing_address_2' of personal types {'address'} is found.
  - Data types: address
index.php:769
  - object property '$order->billing_city' of personal types {'city'} is found.
  - Data types: city
index.php:770
  - object property '$order->billing_state' of personal types {'state'} is found.
  - Data types: state
index.php:771
  - object property '$order->billing_postcode' of personal types {'postcode'} is found.
  - Data types: postcode
index.php:772
  - object property '$order->billing_country' of personal types {'country'} is found.
  - Data types: country
index.php:773
  - object property '$order->billing_email' of personal types {'email'} is found.
  - Data types: email
index.php:775
  - object property '$order->shipping_first_name' of personal types {'first_name'} is found.
  - Data types: first_name
index.php:776
  - object property '$order->shipping_last_name' of personal types {'last_name'} is found.
  - Data types: last_name
index.php:777
  - object property '$order->shipping_first_name' of personal types {'first_name'} is found.
  - Data types: first_name
index.php:777
  - object property '$order->shipping_last_name' of personal types {'last_name'} is found.
  - Data types: last_name
index.php:779
  - object property '$order->shipping_address_1' of personal types {'address'} is found.
  - Data types: address
index.php:779
  - object property '$order->shipping_address_2' of personal types {'address'} is found.
  - Data types: address
index.php:780
  - object property '$order->shipping_city' of personal types {'city'} is found.
  - Data types: city
index.php:781
  - object property '$order->shipping_state' of personal types {'state'} is found.
  - Data types: state
index.php:782
  - object property '$order->shipping_country' of personal types {'country'} is found.
  - Data types: country
index.php:783
  - object property '$order->shipping_postcode' of personal types {'postcode'} is found.
  - Data types: postcode 

index.php:321
  - RETRIEVAL call to get_option("woocommerce_pay_page_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
index.php:380
  - RETRIEVAL call to get_post_meta($orderId, "netpay_transaction_id", TRUE) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
index.php:450
  - RETRIEVAL call to get_option("woocommerce_thanks_page_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
index.php:466
  - RETRIEVAL call to get_option("woocommerce_thanks_page_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
index.php:492
  - RETRIEVAL call to get_option("woocommerce_thanks_page_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
index.php:529
  - RETRIEVAL call to get_post_meta($orderId, "netpay_transaction_id", TRUE) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
index.php:566
  - RETRIEVAL call to get_option("woocommerce_thanks_page_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
index.php:602
  - RETRIEVAL call to get_option("woocommerce_thanks_page_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
index.php:602
  - RETRIEVAL call to get_option("woocommerce_thanks_page_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
index.php:687
  - RETRIEVAL call to get_post_meta($cartItem["product_id"], "_sale_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
index.php:688
  - RETRIEVAL call to get_post_meta($cartItem["product_id"], "_sale_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
index.php:691
  - RETRIEVAL call to get_post_meta($cartItem["product_id"], "_regular_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
index.php:707
  - RETRIEVAL call to get_post_meta($cartItem["product_id"], "_tax_status", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta 

index.php:363
  - STORAGE call to update_post_meta($orderId, "netpay_order_id", $response_array["order_id"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
index.php:364
  - STORAGE call to update_post_meta($orderId, "netpay_payment_status", $response_array["result"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
index.php:398
  - STORAGE call to update_post_meta($orderId, "netpay_order_id", $response_array["order_id"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
index.php:399
  - STORAGE call to update_post_meta($orderId, "netpay_payment_status", $response_array["result"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
index.php:510
  - STORAGE call to update_post_meta($orderId, "netpay_order_id", $response_array["order_id"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
index.php:511
  - STORAGE call to update_post_meta($orderId, "netpay_payment_status", $response_array["result"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
index.php:547
  - STORAGE call to update_post_meta($orderId, "netpay_order_id", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
index.php:548
  - STORAGE call to update_post_meta($orderId, "netpay_payment_status", $response_array["result"] . " : " . $response_array["explanation"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
index.php:843
  - STORAGE call to update_post_meta($order_id, "netpay_transaction_id", $transaction_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta 

index.php:204
  - CRYPTOGRAPHY call to mcrypt_decrypt(MCRYPT_RIJNDAEL_128, pack("H*", $key), pack("H*", $input), MCRYPT_MODE_CBC, pack("H*", $iv)).
index.php:273
  - CRYPTOGRAPHY call to mcrypt_get_block_size(MCRYPT_RIJNDAEL_128, MCRYPT_MODE_CBC).
index.php:275
  - CRYPTOGRAPHY call to mcrypt_module_open(MCRYPT_RIJNDAEL_128, "", MCRYPT_MODE_CBC, "").
index.php:277
  - CRYPTOGRAPHY call to mcrypt_generic_init($td, pack("H*", $key), pack("H*", $iv)).
index.php:278
  - CRYPTOGRAPHY call to mcrypt_generic($td, $input).
index.php:279
  - CRYPTOGRAPHY call to mcrypt_generic_deinit($td).
index.php:280
  - CRYPTOGRAPHY call to mcrypt_module_close($td).
index.php:343
  - CRYPTOGRAPHY call to $this->mcrypt_decrypt_cbc($response, $this->enc_key, $this->enc_iv).
index.php:418
  - CRYPTOGRAPHY call to $this->mcrypt_decrypt_cbc($response, $this->enc_key, $this->enc_iv).
index.php:479
  - CRYPTOGRAPHY call to $this->mcrypt_decrypt_cbc($response, $this->enc_key, $this->enc_iv).
index.php:612
  - CRYPTOGRAPHY call to $this->mcrypt_encrypt_cbc($relay_url, $this->enc_key, $this->enc_iv).
index.php:620
  - CRYPTOGRAPHY call to $this->mcrypt_encrypt_cbc($this->netpay_username, $this->enc_key, $this->enc_iv).
index.php:621
  - CRYPTOGRAPHY call to $this->mcrypt_encrypt_cbc($this->netpay_password, $this->enc_key, $this->enc_iv).
index.php:622
  - CRYPTOGRAPHY call to $this->mcrypt_encrypt_cbc($this->operation_mode(), $this->enc_key, $this->enc_iv).
index.php:623
  - CRYPTOGRAPHY call to $this->mcrypt_encrypt_cbc($session_token, $this->enc_key, $this->enc_iv).
index.php:624
  - CRYPTOGRAPHY call to $this->mcrypt_encrypt_cbc(trim(substr($order_description, 0, 100)), $this->enc_key, $this->enc_iv).
index.php:625
  - CRYPTOGRAPHY call to $this->mcrypt_encrypt_cbc($order->order_total, $this->enc_key, $this->enc_iv).
index.php:626
  - CRYPTOGRAPHY call to $this->mcrypt_encrypt_cbc(get_woocommerce_currency(), $this->enc_key, $this->enc_iv).
index.php:627
  - CRYPTOGRAPHY call to $this->mcrypt_encrypt_cbc($transaction_id, $this->enc_key, $this->enc_iv).
index.php:629
  - CRYPTOGRAPHY call to $this->mcrypt_encrypt_cbc("JSON", $this->enc_key, $this->enc_iv).
index.php:630
  - CRYPTOGRAPHY call to $this->mcrypt_encrypt_cbc(sha1($session_token . $order->order_total . get_woocommerce_currency() . $transaction_id), $this->enc_key, $this->enc_iv).
index.php:635
  - CRYPTOGRAPHY call to $this->mcrypt_encrypt_cbc("SWIFT", $this->enc_key, $this->enc_iv).
index.php:640
  - CRYPTOGRAPHY call to $this->mcrypt_encrypt_cbc("1", $this->enc_key, $this->enc_iv).
index.php:802
  - CRYPTOGRAPHY call to $this->mcrypt_encrypt_cbc($value, $this->enc_key, $this->enc_iv).
index.php:837
  - CRYPTOGRAPHY call to $this->mcrypt_decrypt_cbc($response, $this->enc_key, $this->enc_iv, $this->method). 

By data type:
address
	PropertyDetector.(unknown) - {'address'}
	PropertyDetector.(unknown) - {'address'}
	PropertyDetector.(unknown) - {'address'}
	PropertyDetector.(unknown) - {'address'}
	PropertyDetector.(unknown) - {'address'}
	PropertyDetector.(unknown) - {'address'}
	PropertyDetector.(unknown) - {'address'}
	PropertyDetector.(unknown) - {'address'}
city
	PropertyDetector.(unknown) - {'city'}
	PropertyDetector.(unknown) - {'city'}
	PropertyDetector.(unknown) - {'city'}
	PropertyDetector.(unknown) - {'city'}
country
	PropertyDetector.(unknown) - {'country'}
	PropertyDetector.(unknown) - {'country'}
	PropertyDetector.(unknown) - {'country'}
	PropertyDetector.(unknown) - {'country'}
email
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
first_name
	PropertyDetector.(unknown) - {'first_name'}
	PropertyDetector.(unknown) - {'first_name'}
	PropertyDetector.(unknown) - {'first_name'}
	PropertyDetector.(unknown) - {'first_name'}
last_name
	PropertyDetector.(unknown) - {'last_name'}
	PropertyDetector.(unknown) - {'last_name'}
	PropertyDetector.(unknown) - {'last_name'}
	PropertyDetector.(unknown) - {'last_name'}
none
	GenericEncryptionDetector.$this->mcrypt_encrypt_cbc("JSON", $this->enc_key, $this->enc_iv) - set()
	GenericEncryptionDetector.$this->mcrypt_encrypt_cbc(sha1($session_token . $order->order_total . get_woocommerce_currency() . $transaction_id), $this->enc_key, $this->enc_iv) - set()
	GenericEncryptionDetector.$this->mcrypt_encrypt_cbc($transaction_id, $this->enc_key, $this->enc_iv) - set()
	GenericEncryptionDetector.$this->mcrypt_encrypt_cbc(trim(substr($order_description, 0, 100)), $this->enc_key, $this->enc_iv) - set()
	GenericEncryptionDetector.$this->mcrypt_encrypt_cbc($this->operation_mode(), $this->enc_key, $this->enc_iv) - set()
	GenericEncryptionDetector.mcrypt_generic_init($td, pack("H*", $key), pack("H*", $iv)) - set()
	GenericEncryptionDetector.$this->mcrypt_encrypt_cbc(get_woocommerce_currency(), $this->enc_key, $this->enc_iv) - set()
	GenericEncryptionDetector.$this->mcrypt_decrypt_cbc($response, $this->enc_key, $this->enc_iv) - set()
	GenericEncryptionDetector.mcrypt_generic_deinit($td) - set()
	GenericEncryptionDetector.$this->mcrypt_decrypt_cbc($response, $this->enc_key, $this->enc_iv) - set()
	GenericEncryptionDetector.$this->mcrypt_encrypt_cbc($this->netpay_username, $this->enc_key, $this->enc_iv) - set()
	GenericEncryptionDetector.mcrypt_get_block_size(MCRYPT_RIJNDAEL_128, MCRYPT_MODE_CBC) - set()
	GenericEncryptionDetector.$this->mcrypt_encrypt_cbc($order->order_total, $this->enc_key, $this->enc_iv) - set()
	GenericEncryptionDetector.$this->mcrypt_encrypt_cbc($relay_url, $this->enc_key, $this->enc_iv) - set()
	GenericEncryptionDetector.mcrypt_module_open(MCRYPT_RIJNDAEL_128, "", MCRYPT_MODE_CBC, "") - set()
	GenericEncryptionDetector.$this->mcrypt_encrypt_cbc($this->netpay_password, $this->enc_key, $this->enc_iv) - set()
	GenericEncryptionDetector.mcrypt_generic($td, $input) - set()
	GenericEncryptionDetector.$this->mcrypt_decrypt_cbc($response, $this->enc_key, $this->enc_iv, $this->method) - set()
	GenericEncryptionDetector.$this->mcrypt_encrypt_cbc($session_token, $this->enc_key, $this->enc_iv) - set()
	GenericEncryptionDetector.$this->mcrypt_encrypt_cbc("1", $this->enc_key, $this->enc_iv) - set()
	GenericEncryptionDetector.$this->mcrypt_encrypt_cbc($value, $this->enc_key, $this->enc_iv) - set()
	GenericEncryptionDetector.$this->mcrypt_decrypt_cbc($response, $this->enc_key, $this->enc_iv) - set()
	PHPIncludedDetector.(unknown) - set()
	GenericEncryptionDetector.$this->mcrypt_encrypt_cbc("SWIFT", $this->enc_key, $this->enc_iv) - set()
	GenericEncryptionDetector.mcrypt_module_close($td) - set()
	GenericEncryptionDetector.mcrypt_decrypt(MCRYPT_RIJNDAEL_128, pack("H*", $key), pack("H*", $input), MCRYPT_MODE_CBC, pack("H*", $iv)) - set()
option
	WordPressRetrievalDetector.get_option("woocommerce_pay_page_id") - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_thanks_page_id") - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_thanks_page_id") - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_thanks_page_id") - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_thanks_page_id") - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_thanks_page_id") - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_thanks_page_id") - {'option'}
password
	PropertyDetector.(unknown) - {'password'}
	PropertyDetector.(unknown) - {'password'}
post_meta
	WordPressStorageDetector.update_post_meta($orderId, "netpay_order_id", $response_array["order_id"]) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($orderId, "netpay_order_id", $response_array["order_id"]) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($orderId, "netpay_transaction_id", TRUE) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($orderId, "netpay_payment_status", $response_array["result"]) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($cartItem["product_id"], "_tax_status", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($orderId, "netpay_payment_status", $response_array["result"]) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "netpay_transaction_id", $transaction_id) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($orderId, "netpay_order_id", $response_array["order_id"]) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($orderId, "netpay_payment_status", $response_array["result"]) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($orderId, "netpay_payment_status", $response_array["result"] . " : " . $response_array["explanation"]) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($cartItem["product_id"], "_regular_price", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($cartItem["product_id"], "_sale_price", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($cartItem["product_id"], "_sale_price", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($orderId, "netpay_order_id", "") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($orderId, "netpay_transaction_id", TRUE) - {'post_meta'}
postcode
	PropertyDetector.(unknown) - {'postcode'}
	PropertyDetector.(unknown) - {'postcode'}
	PropertyDetector.(unknown) - {'postcode'}
	PropertyDetector.(unknown) - {'postcode'}
state
	PropertyDetector.(unknown) - {'state'}
	PropertyDetector.(unknown) - {'state'}
	PropertyDetector.(unknown) - {'state'}
	PropertyDetector.(unknown) - {'state'}
user
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
user_meta
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:15.763064.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 54 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.184082.

54 STORE_REACHES edges created
54 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 218 nodes as PERSONAL
In total, tainted 218 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 264 nodes as ENCRYPTED
In total, tainted 264 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:07.517294.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:00:49.766493!
CRYPTOGRAPHY call to mcrypt_decrypt(MCRYPT_RIJNDAEL_128, pack("H*", $key), pack("H*", $input), MCRYPT_MODE_CBC, pack("H*", $iv)).,None,None
CRYPTOGRAPHY call to mcrypt_get_block_size(MCRYPT_RIJNDAEL_128, MCRYPT_MODE_CBC).,None,None
CRYPTOGRAPHY call to mcrypt_module_open(MCRYPT_RIJNDAEL_128, "", MCRYPT_MODE_CBC, "").,None,None
CRYPTOGRAPHY call to mcrypt_generic_init($td, pack("H*", $key), pack("H*", $iv)).,None,None
CRYPTOGRAPHY call to mcrypt_generic($td, $input).,None,None
CRYPTOGRAPHY call to mcrypt_generic_deinit($td).,None,None
CRYPTOGRAPHY call to mcrypt_module_close($td).,None,None
CRYPTOGRAPHY call to $this->mcrypt_decrypt_cbc($response, $this->enc_key, $this->enc_iv).,None,None
CRYPTOGRAPHY call to $this->mcrypt_decrypt_cbc($response, $this->enc_key, $this->enc_iv).,None,None
CRYPTOGRAPHY call to $this->mcrypt_decrypt_cbc($response, $this->enc_key, $this->enc_iv).,None,None
CRYPTOGRAPHY call to $this->mcrypt_encrypt_cbc($relay_url, $this->enc_key, $this->enc_iv).,None,None
CRYPTOGRAPHY call to $this->mcrypt_encrypt_cbc($this->netpay_username, $this->enc_key, $this->enc_iv).,None,None
CRYPTOGRAPHY call to $this->mcrypt_encrypt_cbc($this->netpay_password, $this->enc_key, $this->enc_iv).,None,None
CRYPTOGRAPHY call to $this->mcrypt_encrypt_cbc($this->operation_mode(), $this->enc_key, $this->enc_iv).,None,None
CRYPTOGRAPHY call to $this->mcrypt_encrypt_cbc($session_token, $this->enc_key, $this->enc_iv).,None,None
CRYPTOGRAPHY call to $this->mcrypt_encrypt_cbc(trim(substr($order_description, 0, 100)), $this->enc_key, $this->enc_iv).,None,None
CRYPTOGRAPHY call to $this->mcrypt_encrypt_cbc($order->order_total, $this->enc_key, $this->enc_iv).,None,None
CRYPTOGRAPHY call to $this->mcrypt_encrypt_cbc(get_woocommerce_currency(), $this->enc_key, $this->enc_iv).,None,None
CRYPTOGRAPHY call to $this->mcrypt_encrypt_cbc($transaction_id, $this->enc_key, $this->enc_iv).,None,None
CRYPTOGRAPHY call to $this->mcrypt_encrypt_cbc("JSON", $this->enc_key, $this->enc_iv).,None,None
CRYPTOGRAPHY call to $this->mcrypt_encrypt_cbc(sha1($session_token . $order->order_total . get_woocommerce_currency() . $transaction_id), $this->enc_key, $this->enc_iv).,None,None
CRYPTOGRAPHY call to $this->mcrypt_encrypt_cbc("SWIFT", $this->enc_key, $this->enc_iv).,None,None
CRYPTOGRAPHY call to $this->mcrypt_encrypt_cbc("1", $this->enc_key, $this->enc_iv).,None,None
CRYPTOGRAPHY call to $this->mcrypt_encrypt_cbc($value, $this->enc_key, $this->enc_iv).,None,None
CRYPTOGRAPHY call to $this->mcrypt_decrypt_cbc($response, $this->enc_key, $this->enc_iv, $this->method).,None,None
SHA1 called with parameters [transaction_id, get_woocommerce_currency, order, order_total, session_token]. Ignore if [transaction_id, get_woocommerce_currency, order, order_total, session_token] does not contain personal information.,sha1,None
object property '$this->netpay_username' of personal types {'user', 'user_meta'} is found.,,None
object property '$this->netpay_password' of personal types {'password'} is found.,,None
object property '$this->netpay_username' of personal types {'user', 'user_meta'} is found.,,None
object property '$this->netpay_password' of personal types {'password'} is found.,,None
object property '$order->billing_address_1' of personal types {'address'} is found.,,None
object property '$order->billing_address_2' of personal types {'address'} is found.,,None
object property '$order->billing_city' of personal types {'city'} is found.,,None
object property '$order->billing_state' of personal types {'state'} is found.,,None
object property '$order->billing_postcode' of personal types {'postcode'} is found.,,None
object property '$order->billing_country' of personal types {'country'} is found.,,None
object property '$order->billing_email' of personal types {'email'} is found.,,None
object property '$order->billing_first_name' of personal types {'first_name'} is found.,,None
object property '$order->billing_last_name' of personal types {'last_name'} is found.,,None
object property '$order->billing_last_name' of personal types {'last_name'} is found.,,None
object property '$order->billing_first_name' of personal types {'first_name'} is found.,,None
object property '$order->billing_address_1' of personal types {'address'} is found.,,None
object property '$order->billing_address_2' of personal types {'address'} is found.,,None
object property '$order->billing_city' of personal types {'city'} is found.,,None
object property '$order->billing_state' of personal types {'state'} is found.,,None
object property '$order->billing_country' of personal types {'country'} is found.,,None
object property '$order->billing_postcode' of personal types {'postcode'} is found.,,None
object property '$order->billing_address_2' of personal types {'address'} is found.,,None
object property '$order->billing_address_1' of personal types {'address'} is found.,,None
object property '$order->billing_city' of personal types {'city'} is found.,,None
object property '$order->billing_state' of personal types {'state'} is found.,,None
object property '$order->billing_postcode' of personal types {'postcode'} is found.,,None
object property '$order->billing_country' of personal types {'country'} is found.,,None
object property '$order->billing_email' of personal types {'email'} is found.,,None
object property '$order->shipping_first_name' of personal types {'first_name'} is found.,,None
object property '$order->shipping_last_name' of personal types {'last_name'} is found.,,None
object property '$order->shipping_first_name' of personal types {'first_name'} is found.,,None
object property '$order->shipping_last_name' of personal types {'last_name'} is found.,,None
object property '$order->shipping_address_2' of personal types {'address'} is found.,,None
object property '$order->shipping_address_1' of personal types {'address'} is found.,,None
object property '$order->shipping_city' of personal types {'city'} is found.,,None
object property '$order->shipping_state' of personal types {'state'} is found.,,None
object property '$order->shipping_country' of personal types {'country'} is found.,,None
object property '$order->shipping_postcode' of personal types {'postcode'} is found.,,None
RETRIEVAL call to get_option("woocommerce_pay_page_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($orderId, "netpay_transaction_id", TRUE) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_thanks_page_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_thanks_page_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_thanks_page_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($orderId, "netpay_transaction_id", TRUE) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_thanks_page_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_thanks_page_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_thanks_page_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($cartItem["product_id"], "_sale_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($cartItem["product_id"], "_sale_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($cartItem["product_id"], "_regular_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($cartItem["product_id"], "_tax_status", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
STORAGE call to update_post_meta($orderId, "netpay_order_id", $response_array["order_id"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($orderId, "netpay_payment_status", $response_array["result"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($orderId, "netpay_order_id", $response_array["order_id"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($orderId, "netpay_payment_status", $response_array["result"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($orderId, "netpay_order_id", $response_array["order_id"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($orderId, "netpay_payment_status", $response_array["result"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($orderId, "netpay_order_id", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($orderId, "netpay_payment_status", $response_array["result"] . " : " . $response_array["explanation"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "netpay_transaction_id", $transaction_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] Storage check is NONE 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['encryption', 'third_party'] 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? True 

No findings
