Timeout in resolving values
Timeout in running neo4j query
Running Main.py on affiliate-mlm-party-plan

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.774463.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.167358.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 358 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.662047.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 6 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.771252.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 2344 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:01.502591.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 13 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:01.227997.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
Added 2 PHP_REACHES edges.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.070523.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 1042 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:25.882340.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 16283
Added 12518 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 20680
Added 4397 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:02.523553.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/bv-affiliate-users.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/classes/AddressData.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/classes/AffiliateData.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/classes/CountryData.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/classes/CustomerAccess.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/classes/CustomerData.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/classes/DataStruct.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/classes/DiscountData.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/classes/DiscountResultData.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/classes/EmailData.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/classes/OrderData.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/classes/OrderDataResult.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/classes/OrderNoteRequest.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/classes/OrderProductVariantData.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/classes/OrderShipmentDataResult.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/classes/ProductAttributeData.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/classes/ProductVariantImage.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/classes/ProductVariant.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/classes/ShipmentData.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/classes/ShippingOptionData.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/classes/ShippingRequestData.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/classes/StateData.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/classes/interfaces/AddressDataInterface.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/classes/interfaces/AffiliateDataInterface.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/classes/interfaces/CountryDataInterface.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/classes/interfaces/CustomerAccessInterface.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/classes/interfaces/CustomerDataInterface.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/classes/interfaces/DiscountDataInterface.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/classes/interfaces/DiscountResultDataInterface.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/classes/interfaces/EmailDataInterface.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/classes/interfaces/OrderDataInterface.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/classes/interfaces/OrderDataResultInterface.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/classes/interfaces/OrderNoteRequestInterface.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/classes/interfaces/OrderProductVariantDataInterface.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/classes/interfaces/OrderShipmentDataResultInterface.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/classes/interfaces/ProductAttributeDataInterface.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/classes/interfaces/ProductVariantImageInterface.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/classes/interfaces/ProductVariantInterface.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/classes/interfaces/ShipmentDataInterface.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/classes/interfaces/ShippingOptionDataInterface.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/classes/interfaces/ShippingRequestDataInterface.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/classes/interfaces/StateDataInterface.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/includes/activation.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/includes/db.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/includes/optionsBuilder.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/includes/pluginOptions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/includes/sb.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/includes/socialbug-api.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/includes/usersList.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliate-mlm-party-plan/includes/usersRoutes.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:04.333647.

358 PHP_REACHES edges created
6 REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
2354 PHP_REACHES edges created
3 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
13562 PHP_REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
4397 PHP_REACHES edges created
20680 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 6374 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.435088.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 10 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:21.016574.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 182 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:09.019152.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 222 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.157030.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:09.226928.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:06.568558.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.062998.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.028751.

10 CALLS edges created
404 PHP_REACHES edges created
414 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 341 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.164104.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
11 SQL operations to process.
SELECT  *  FROM  $wpdbwoocommerce_order_items  WHERE  order_id = $request->get_param("order_id") 
SELECT  *  FROM  $wpdbwoocommerce_order_items  WHERE  order_id = $request->get_param("order_id") 
SQL command (SELECT * FROM $wpdbwoocommerce_order_items WHERE order_id = $request->get_param("order_id") ) cannot be parsed correct.
DROP TABLE `$this_table`;
SQL command (DROP TABLE `$this_table`;) cannot be parsed correct.
CREATE TABLE `$this_table` (
            `affiliate_id` int(11) unsigned NOT NULL,
            `username` varchar(100) NOT NULL default '',
            `name` varchar(100) NOT NULL default '',
            `created_at` datetime NOT NULL default '0000-00-00 00:00:00',
            `updated_at` datetime NOT NULL default '0000-00-00 00:00:00',
            PRIMARY KEY (affiliate_id),
            KEY username (username)
        );
SQL command (CREATE TABLE `$this_table` ( `affiliate_id` int(11) unsigned NOT NULL, `username` varchar(100) NOT NULL default '', `name` varchar(100) NOT NULL default '', `created_at` datetime NOT NULL default '0000-00-00 00:00:00', `updated_at` datetime NOT NULL default '0000-00-00 00:00:00', PRIMARY KEY (affiliate_id), KEY username (username) );) cannot be parsed correct.
SELECT * FROM $this_table WHERE esc_sql($field) = esc_sql($value)
SELECT * FROM $this_table WHERE esc_sql($field) = esc_sql($value)
SQL command (SELECT * FROM $this_table WHERE esc_sql($field) = esc_sql($value)) cannot be parsed correct.
SELECT * FROM $this_table WHERE affiliate_id IN (implode(",", array_map("intval", $args["bulk"]))) ORDER BY wp_parse_args($args, $defaults)_orderby wp_parse_args($args, $defaults)_orderwp_parse_args($args, $defaults)
SQL command (SELECT * FROM $this_table WHERE affiliate_id IN (implode(",", array_map("intval", $args["bulk"]))) ORDER BY wp_parse_args($args, $defaults)_orderby wp_parse_args($args, $defaults)_orderwp_parse_args($args, $defaults)) cannot be parsed correct.
DELETE FROM $this_table WHERE affiliate_id IN (implode(", ", array_fill(0, count($ids), "array_map("strip_tags", $_GET["bulk"])")))
DELETE FROM $this_table WHERE affiliate_id IN (implode(", ", array_fill(0, count($ids), "array_map("strip_tags", $_GET["bulk"])")))
SQL command (DELETE FROM $this_table WHERE affiliate_id IN (implode(", ", array_fill(0, count($ids), "array_map("strip_tags", $_GET["bulk"])")))) cannot be parsed correct.
CREATE TABLE $wpdbsb_integrations (
	integration_id int(11) unsigned NOT NULL AUTO_INCREMENT,
	name varchar(100) NOT NULL,
	created_at datetime DEFAULT '0000-00-00 00:00:00' NOT NULL,
	guid varchar(36) DEFAULT '' NOT NULL,
	status tinyint NOT NULL,
	UNIQUE KEY guid (guid(36)),
	PRIMARY KEY  (integration_id)
	) ENGINE=InnoDB $wpdb->get_charset_collate();
SQL command (CREATE TABLE $wpdbsb_integrations ( integration_id int(11) unsigned NOT NULL AUTO_INCREMENT, name varchar(100) NOT NULL, created_at datetime DEFAULT '0000-00-00 00:00:00' NOT NULL, guid varchar(36) DEFAULT '' NOT NULL, status tinyint NOT NULL, UNIQUE KEY guid (guid(36)), PRIMARY KEY (integration_id) ) ENGINE=InnoDB $wpdb->get_charset_collate();) cannot be parsed correct.
SELECT * FROM `$wpdbsb_integrations`
SQL command (SELECT * FROM `$wpdbsb_integrations`) cannot be parsed correct.
SELECT * FROM $wpdbsb_integrations WHERE integration_id = absint($integration_id)
SELECT * FROM $wpdbsb_integrations WHERE integration_id = absint($integration_id)
SQL command (SELECT * FROM $wpdbsb_integrations WHERE integration_id = absint($integration_id)) cannot be parsed correct.
SELECT p.`ID` FROM `$wpdb` AS pm INNER JOIN `$wpdb` AS p ON p.ID=pm.post_id WHERE pm.meta_key='_sku' AND p.`post_type`='product' AND pm.`meta_value` IN (implode(",", $placeholders))
SQL command (SELECT p.`ID` FROM `$wpdb` AS pm INNER JOIN `$wpdb` AS p ON p.ID=pm.post_id WHERE pm.meta_key='_sku' AND p.`post_type`='product' AND pm.`meta_value` IN (implode(",", $placeholders))) cannot be parsed correct.
SELECT * FROM $wpdb WHERE post_title = '$affiliate_id' AND post_status = 'publish' AND post_type = 'debug_log'
SELECT * FROM $wpdb WHERE post_title = '$affiliate_id' AND post_status = 'publish' AND post_type = 'debug_log'
SQL command (SELECT * FROM $wpdb WHERE post_title = '$affiliate_id' AND post_status = 'publish' AND post_type = 'debug_log') cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [5334, 13069, 13085, 13180, 13404, 13488, 15049, 15512, 16590, 19554, 26173]
Added 0 SQL nodes. 0 out of 11 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:04.216090.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'<input class="regular-text" type="text" id="$id" name="[$id]" value="$value" /'' cannot be parsed correct.
HTML code '$'get_admin_page_title()'' cannot be parsed correct.
HTML code '$'<br /><span class="description">$desc</span>'' cannot be parsed correct.
HTML code '$'<textarea class="code large-text" cols="50" rows="10" id="$id" name="[$id]"$options_$id</textarea>'' cannot be parsed correct.
HTML code '$'<br /><span class="description">$desc</span>'' cannot be parsed correct.
HTML code '$'<label><input type="checkbox" id="$id" name="[$id]$checked value="on" />'' cannot be parsed correct.
HTML code '$'$desc'' cannot be parsed correct.
HTML code '$'<label><input type="radio" name="[$id]" value="$v$checked />$l</label><br />'' cannot be parsed correct.
HTML code '$'<br /><span class="description">$desc</span>'' cannot be parsed correct.
HTML code '$'<select id=$id" name="[$id]"'' cannot be parsed correct.
HTML code '$'<option value=$v$selected>$l</option>'' cannot be parsed correct.
HTML code '$'<br /><span class="description">$desc</span>'' cannot be parsed correct.
HTML code '$'<input class="regular-text colorpicker" type="text" id="$id" name="[$id]" value="$options_$id" /'' cannot be parsed correct.
HTML code '$'<br /><span class="description">$desc</span>'' cannot be parsed correct.
HTML code '$'<a class="nav-ta$this->getCurrentTab()" href="get_admin_url(null, "admin.php?page=" . plugin_basename(AFFILIATE_USERS_PAGE) . "&tab=" . $id)"$title</a>'' cannot be parsed correct.
HTML code '$'admin_url("admin.php?page=sb_integrations_list&page_type=edit&integration_id=0")'' cannot be parsed correct.
HTML code '$'admin_url("admin.php?page=sb_integrations_list&page_type=list")'' cannot be parsed correct.
HTML code '$'admin_url("admin.php?page=sb_integrations_list&page_type=settings")'' cannot be parsed correct.
HTML code '$'get_option("sb_api_key")'' cannot be parsed correct.
HTML code '$'get_option("sb_api_url")'' cannot be parsed correct.
HTML code '$'get_option("sb_redirect_url")'' cannot be parsed correct.
HTML code '$'get_option("sb_page_title")'' cannot be parsed correct.
HTML code '$'get_option("sb_api_setup")'' cannot be parsed correct.
HTML code '$'stripslashes($sb_footer_script)'' cannot be parsed correct.
HTML code '$'sb_admin_integrations_list_pagination($nr_integrations, $per_page, $current_page, $filter, $order)'' cannot be parsed correct.
HTML code '$'asc'' cannot be parsed correct.
HTML code '$'admin_url("admin.php?page=sb_integrations_list&orderby=integration_id&order=" . $new_order)'' cannot be parsed correct.
HTML code '$'asc'' cannot be parsed correct.
HTML code '$'admin_url("admin.php?page=sb_integrations_list&orderby=name&order=" . $new_order)'' cannot be parsed correct.
HTML code '$'asc'' cannot be parsed correct.
HTML code '$'admin_url("admin.php?page=sb_integrations_list&orderby=guid&order=" . $new_order)'' cannot be parsed correct.
HTML code '$'asc'' cannot be parsed correct.
HTML code '$'admin_url("admin.php?page=sb_integrations_list&orderby=created_at&order=" . $new_order)'' cannot be parsed correct.
HTML code '$'asc'' cannot be parsed correct.
HTML code '$'admin_url("admin.php?page=sb_integrations_list&orderby=status&order=" . $new_order)'' cannot be parsed correct.
HTML code '$'$integration_integration_id'' cannot be parsed correct.
HTML code '$'$integration_integration_id'' cannot be parsed correct.
HTML code '$'admin_url("admin.php?page=sb_integrations_list&page_type=edit&integration_id=" . $iid)'' cannot be parsed correct.
HTML code '$'$integration_name'' cannot be parsed correct.
HTML code '$'$integration_name'' cannot be parsed correct.
HTML code '$'$integration_guid'' cannot be parsed correct.
HTML code '$'$integration_created_at'' cannot be parsed correct.
HTML code '$'asc'' cannot be parsed correct.
HTML code '$'admin_url("admin.php?page=sb_integrations_list&orderby=integration_id&order=" . $new_order)'' cannot be parsed correct.
HTML code '$'asc'' cannot be parsed correct.
HTML code '$'admin_url("admin.php?page=sb_integrations_list&orderby=name&order=" . $new_order)'' cannot be parsed correct.
HTML code '$'asc'' cannot be parsed correct.
HTML code '$'admin_url("admin.php?page=sb_integrations_list&orderby=guid&order=" . $new_order)'' cannot be parsed correct.
HTML code '$'asc'' cannot be parsed correct.
HTML code '$'admin_url("admin.php?page=sb_integrations_list&orderby=created_at&order=" . $new_order)'' cannot be parsed correct.
HTML code '$'asc'' cannot be parsed correct.
HTML code '$'admin_url("admin.php?page=sb_integrations_list&orderby=status&order=" . $new_order)'' cannot be parsed correct.
HTML code '$'sb_admin_integrations_list_pagination($nr_integrations, $per_page, $current_page, $filter, $order)'' cannot be parsed correct.
HTML code '$'get_user_meta($user, "sb_integration_edit_message_class", true)'' cannot be parsed correct.
HTML code '$'get_user_meta($user, "sb_integration_edit_message", true)'' cannot be parsed correct.
HTML code '$'sanitize_text_field($_GET["integration_id"])'' cannot be parsed correct.
HTML code '$'sb_get_integration($integration_id)_name'' cannot be parsed correct.
HTML code '$'sb_get_integration($integration_id)_guid'' cannot be parsed correct.
HTML code '$'sb_get_integration($integration_id)_status'' cannot be parsed correct.
HTML code '$'json_encode($suggestions)'' cannot be parsed correct.
HTML code '$'stripslashes(get_option("sb_footer_script"))
'' cannot be parsed correct.
HTML code '$'sprintf("<input type="hidden" name="%s" value="%s" />", "page", filter_input(INPUT_GET, "page"))'' cannot be parsed correct.
HTML code '$'sprintf("<input type="hidden" name="%s" value="%s" />", "tab", filter_input(INPUT_GET, "tab"))'' cannot be parsed correct.
HTML code '$'sprintf("<div class="%s"><p>%s</p></div>", $message["type"], $message["text"])'' cannot be parsed correct.
HTML code '$'preg_replace($pattern, $code, $buffer)'' cannot be parsed correct.
HTML code '$'</h2>            '' cannot be parsed correct.
HTML code '$'</label>'' cannot be parsed correct.
HTML code '$'<fieldset>'' cannot be parsed correct.
HTML code '$'</fieldset>'' cannot be parsed correct.
HTML code '$'</select>'' cannot be parsed correct.
HTML code '$'<h2 class="nav-tab-wrapper">'' cannot be parsed correct.
HTML code '$'</h2>'' cannot be parsed correct.
HTML code '$' class="current"'' cannot be parsed correct.
HTML code '$' class="current"'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'" class="status-publish hentry">
                                        <td class="column-integrationid">
                                            '' cannot be parsed correct.
HTML code '$'Disabled'' cannot be parsed correct.
HTML code '$'Enabled'' cannot be parsed correct.
HTML code '$'has ok maximum amount
'' cannot be parsed correct.
HTML code '$'it is dying <br />'' cannot be parsed correct.
HTML code '$'<form method="get" class="tablenav">'' cannot be parsed correct.
HTML code '$'</form>'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:07.823744.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.040641.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 0 do_action/apply_filters calls and 27 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.794162.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FileProDetector
### Start running FrontBaseDetector
### Finish running DbaseDetector
### Start running HashDetector
### Finish running DbplusDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running FirebirdInterBaseDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running MySQLDetector
### Start running MySQLiDetector
### Finish running ArrayElementDetector
### Start running Oci8Detector
### Finish running MsqlDetector
### Start running OpenSSLDetector
### Finish running MongoDbDetector
### Start running ParadoxDetector
### Finish running Oci8Detector
### Start running PasswordHashingDetector
### Finish running ParadoxDetector
### Start running PhpCurlDetector
### Finish running PasswordHashingDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running HashDetector
### Start running PHPRetrievalDetector
### Finish running PHPIncludedDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running OpenSSLDetector
### Start running PhpVarDetector
### Finish running PhpVarDetector
### Start running PostgreSQLDetector
### Finish running PHPRetrievalDetector
### Start running PropertyDetector
### Finish running PostgreSQLDetector
### Start running Sqlite3Detector
### Finish running maxdbDetector
### Start running SqliteDetector
### Finish running MySQLiDetector
### Start running SqlServerDetector
### Finish running Sqlite3Detector
### Start running SybaseDetector
### Finish running SqliteDetector
### Start running TokyoTyrantDetector
### Finish running SybaseDetector
### Start running UserInputDetector
### Finish running TokyoTyrantDetector
### Start running VariableDetector
### Finish running SqlServerDetector
### Start running WordpressHashingFnDetector
### Finish running UserInputDetector
### Start running WordPressRemoteDetector
### Finish running PhpCurlDetector
### Start running WordPressRetrievalDetector
### Finish running PropertyDetector
### Start running WordPressStorageDetector
### Finish running WordpressHashingFnDetector
### Start running WP_UserDetector
### Finish running PHPStorageDetector
### Start running GenericDatabaseUsageDetector
### Finish running WP_UserDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running GenericDatabaseUsageDetector
### Start running UninstallDetector
### Finish running UninstallDetector
### Finish running WordPressRemoteDetector
### Finish running DeletionDetector
### Finish running VariableDetector
### Finish running WordPressRetrievalDetector
### Finish running WordPressStorageDetector
### Finished running detectors
includes/sb.php:507
  - hash called with unapproved hash algorithm ripemd128. Ignore if this is not encrypting personal information 

includes/sb.php:507
  - MD5 called with parameters [data]. Ignore if [data] does not contain personal information. 

includes/sb.php:1783
  - RETRIEVAL call to fread($postresource, 1024).
  - Data types: file
includes/sb.php:1950
  - RETRIEVAL call to fread($postresource, 1024).
  - Data types: file 

includes/sb.php:1027
  - STORAGE call to file_put_contents("request_debug_variants.txt", print_r($products, true)).
  - Data types: file
includes/sb.php:1074
  - STORAGE call to file_put_contents("request_debug.txt", print_r($request, true)).
  - Data types: file
includes/sb.php:1307
  - STORAGE call to file_put_contents("request_debug_tax.txt", print_r($request, true)).
  - Data types: file
includes/sb.php:1317
  - STORAGE call to file_put_contents("request_debug_tax1.txt", print_r(WC()->cart, true)).
  - Data types: file
includes/sb.php:1356
  - STORAGE call to file_put_contents("request_debug_taxvar3.txt", print_r($product_variation, true)).
  - Data types: file
includes/sb.php:1367
  - STORAGE call to file_put_contents("request_debug_taxvar4.txt", print_r($ex, true)).
  - Data types: file
includes/sb.php:1374
  - STORAGE call to file_put_contents("request_debug_tax2.txt", "2 working now").
  - Data types: file
includes/sb.php:1429
  - STORAGE call to file_put_contents("request_debug_tax3.txt", print_r($package, true)).
  - Data types: file
includes/sb.php:1444
  - STORAGE call to file_put_contents("request_debug_tax4.txt", print_r($shipping_tax, true)).
  - Data types: file
includes/sb.php:1456
  - STORAGE call to file_put_contents("request_debug_tax5.txt", print_r(WC()->cart, true)).
  - Data types: file
includes/sb.php:1460
  - STORAGE call to file_put_contents("request_debug_tax.txt", print_r(WC()->cart->get_tax_totals(), true)).
  - Data types: file
includes/sb.php:1475
  - STORAGE call to file_put_contents("request_debug_tax6.txt", print_r($tax_rate, true)).
  - Data types: file
includes/sb.php:1481
  - STORAGE call to file_put_contents("request_debug_tax.txt", print_r($request, true)).
  - Data types: file
includes/sb.php:1610
  - STORAGE call to file_put_contents("request_debug_tax.txt", print_r($tmp_package, true)).
  - Data types: file
includes/sb.php:1766
  - STORAGE call to file_put_contents("request_debug_ship.txt", print_r($rates, true)).
  - Data types: file 

classes/AddressData.php:57
  - object property '$user->billing_first_name' of personal types {'user_meta', 'first_name', 'user'} is found.
  - Data types: user_meta, first_name, user
classes/AddressData.php:57
  - object property '$user->billing_last_name' of personal types {'user_meta', 'last_name', 'user'} is found.
  - Data types: user_meta, last_name, user
classes/AddressData.php:61
  - object property '$user->billing_first_name' of personal types {'user_meta', 'first_name', 'user'} is found.
  - Data types: user_meta, first_name, user
classes/AddressData.php:62
  - object property '$user->billing_last_name' of personal types {'user_meta', 'last_name', 'user'} is found.
  - Data types: user_meta, last_name, user
classes/AddressData.php:64
  - object property '$user->billing_address_1' of personal types {'address'} is found.
  - Data types: address
classes/AddressData.php:65
  - object property '$user->billing_address_2' of personal types {'address'} is found.
  - Data types: address
classes/AddressData.php:66
  - object property '$user->billing_city' of personal types {'city'} is found.
  - Data types: city
classes/AddressData.php:67
  - object property '$user->billing_state' of personal types {'state'} is found.
  - Data types: state
classes/AddressData.php:68
  - object property '$user->billing_postcode' of personal types {'postcode'} is found.
  - Data types: postcode
classes/AddressData.php:69
  - object property '$user->billing_country' of personal types {'country'} is found.
  - Data types: country
classes/AddressData.php:70
  - object property '$user->billing_email' of personal types {'email'} is found.
  - Data types: email
classes/AddressData.php:77
  - object property '$user->shipping_first_name' of personal types {'user_meta', 'first_name', 'user'} is found.
  - Data types: user_meta, first_name, user
classes/AddressData.php:77
  - object property '$user->shipping_last_name' of personal types {'user_meta', 'last_name', 'user'} is found.
  - Data types: user_meta, last_name, user
classes/AddressData.php:81
  - object property '$user->shipping_first_name' of personal types {'user_meta', 'first_name', 'user'} is found.
  - Data types: user_meta, first_name, user
classes/AddressData.php:82
  - object property '$user->shipping_last_name' of personal types {'user_meta', 'last_name', 'user'} is found.
  - Data types: user_meta, last_name, user
classes/AddressData.php:84
  - object property '$user->shipping_address_1' of personal types {'address'} is found.
  - Data types: address
classes/AddressData.php:85
  - object property '$user->shipping_address_2' of personal types {'address'} is found.
  - Data types: address
classes/AddressData.php:86
  - object property '$user->shipping_city' of personal types {'city'} is found.
  - Data types: city
classes/AddressData.php:87
  - object property '$user->shipping_state' of personal types {'state'} is found.
  - Data types: state
classes/AddressData.php:88
  - object property '$user->shipping_postcode' of personal types {'postcode'} is found.
  - Data types: postcode
classes/AddressData.php:89
  - object property '$user->shipping_country' of personal types {'country'} is found.
  - Data types: country
classes/AddressData.php:90
  - object property '$user->shipping_email' of personal types {'email'} is found.
  - Data types: email
classes/CustomerData.php:24
  - object property '$this->_password' of personal types {'password'} is found.
  - Data types: password
classes/CustomerData.php:32
  - object property '$this->_password' of personal types {'password'} is found.
  - Data types: password
classes/CustomerData.php:61
  - object property '$customer->user_email' of personal types {'email'} is found.
  - Data types: email
classes/OrderDataResult.php:135
  - object property '$post->_customer_ip_address' of personal types {'ip', 'address'} is found.
  - Data types: ip, address
classes/OrderDataResult.php:135
  - object property '$post->_customer_ip_address' of personal types {'ip', 'address'} is found.
  - Data types: ip, address
classes/OrderDataResult.php:162
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
includes/activation.php:23
  - object property '$affiliate->username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
includes/sb.php:877
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
includes/sb.php:2440
  - object property '$user->username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
includes/usersList.php:121
  - object property '$item->username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user 

classes/AddressData.php:35
  - variable '$first_name' of personal types {'first_name'} is found.
  - Data types: first_name
classes/AddressData.php:36
  - variable '$last_name' of personal types {'last_name'} is found.
  - Data types: last_name
classes/AddressData.php:37
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
classes/AddressData.php:39
  - variable '$country_id' of personal types {'country'} is found.
  - Data types: country
classes/AddressData.php:42
  - variable '$address1' of personal types {'address'} is found.
  - Data types: address
classes/AddressData.php:43
  - variable '$address2' of personal types {'address'} is found.
  - Data types: address
classes/AffiliateData.php:20
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
classes/CountryData.php:17
  - variable '$country_id' of personal types {'country'} is found.
  - Data types: country
classes/CustomerAccess.php:18
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
classes/CustomerData.php:27
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
classes/CustomerData.php:28
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
classes/CustomerData.php:38
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
classes/CustomerData.php:39
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
classes/CustomerData.php:42
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
classes/CustomerData.php:43
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
classes/CustomerData.php:63
  - variable '$billing_address' of personal types {'address'} is found.
  - Data types: address
classes/CustomerData.php:64
  - variable '$billing_address' of personal types {'address'} is found.
  - Data types: address
classes/CustomerData.php:65
  - variable '$shipping_address' of personal types {'address'} is found.
  - Data types: address
classes/CustomerData.php:66
  - variable '$shipping_address' of personal types {'address'} is found.
  - Data types: address
classes/CustomerData.php:67
  - variable '$billing_address' of personal types {'address'} is found.
  - Data types: address
classes/CustomerData.php:68
  - variable '$billing_address' of personal types {'address'} is found.
  - Data types: address
classes/CustomerData.php:70
  - variable '$shipping_address' of personal types {'address'} is found.
  - Data types: address
classes/CustomerData.php:71
  - variable '$shipping_address' of personal types {'address'} is found.
  - Data types: address
classes/OrderShipmentDataResult.php:27
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
classes/StateData.php:22
  - variable '$country_id' of personal types {'country'} is found.
  - Data types: country
includes/activation.php:21
  - variable '$db_affiliate_usernames' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
includes/activation.php:23
  - variable '$db_affiliate_usernames' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
includes/activation.php:28
  - variable '$db_affiliate_usernames' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
includes/sb.php:790
  - variable '$email_data' of personal types {'email'} is found.
  - Data types: email
includes/sb.php:792
  - variable '$email_data' of personal types {'email'} is found.
  - Data types: email
includes/sb.php:792
  - variable '$email_data' of personal types {'email'} is found.
  - Data types: email
includes/sb.php:793
  - variable '$from_email' of personal types {'email'} is found.
  - Data types: email
includes/sb.php:793
  - variable '$email_data' of personal types {'email'} is found.
  - Data types: email
includes/sb.php:795
  - variable '$from_email' of personal types {'email'} is found.
  - Data types: email
includes/sb.php:797
  - variable '$email_data' of personal types {'email'} is found.
  - Data types: email
includes/sb.php:797
  - variable '$email_data' of personal types {'email'} is found.
  - Data types: email
includes/sb.php:798
  - variable '$email_data' of personal types {'email'} is found.
  - Data types: email
includes/sb.php:802
  - variable '$from_email' of personal types {'email'} is found.
  - Data types: email
includes/sb.php:804
  - variable '$from_email' of personal types {'email'} is found.
  - Data types: email
includes/sb.php:806
  - variable '$from_email' of personal types {'email'} is found.
  - Data types: email
includes/sb.php:810
  - variable '$email_data' of personal types {'email'} is found.
  - Data types: email
includes/sb.php:810
  - variable '$email_data' of personal types {'email'} is found.
  - Data types: email
includes/sb.php:811
  - variable '$email_data' of personal types {'email'} is found.
  - Data types: email
includes/sb.php:813
  - variable '$email_data' of personal types {'email'} is found.
  - Data types: email
includes/sb.php:813
  - variable '$email_data' of personal types {'email'} is found.
  - Data types: email
includes/sb.php:814
  - variable '$email_data' of personal types {'email'} is found.
  - Data types: email
includes/sb.php:816
  - variable '$email_data' of personal types {'email'} is found.
  - Data types: email
includes/sb.php:816
  - variable '$email_data' of personal types {'email'} is found.
  - Data types: email
includes/sb.php:817
  - variable '$email_data' of personal types {'email'} is found.
  - Data types: email
includes/sb.php:817
  - variable '$email_data' of personal types {'email'} is found.
  - Data types: email
includes/sb.php:819
  - variable '$email_data' of personal types {'email'} is found.
  - Data types: email
includes/sb.php:822
  - variable '$email_processed' of personal types {'email'} is found.
  - Data types: email
includes/sb.php:822
  - variable '$email_data' of personal types {'email'} is found.
  - Data types: email
includes/sb.php:822
  - variable '$email_data' of personal types {'email'} is found.
  - Data types: email
includes/sb.php:824
  - variable '$email_processed' of personal types {'email'} is found.
  - Data types: email
includes/sb.php:828
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/sb.php:829
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/sb.php:837
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
includes/sb.php:838
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
includes/sb.php:857
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
includes/sb.php:863
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
includes/sb.php:878
  - variable '$billing_address' of personal types {'address'} is found.
  - Data types: address
includes/sb.php:879
  - variable '$billing_address' of personal types {'address'} is found.
  - Data types: address
includes/sb.php:880
  - variable '$shipping_address' of personal types {'address'} is found.
  - Data types: address
includes/sb.php:881
  - variable '$shipping_address' of personal types {'address'} is found.
  - Data types: address
includes/sb.php:882
  - variable '$billing_address' of personal types {'address'} is found.
  - Data types: address
includes/sb.php:883
  - variable '$billing_address' of personal types {'address'} is found.
  - Data types: address
includes/sb.php:885
  - variable '$shipping_address' of personal types {'address'} is found.
  - Data types: address
includes/sb.php:886
  - variable '$shipping_address' of personal types {'address'} is found.
  - Data types: address
includes/sb.php:899
  - variable '$username_exists' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
includes/sb.php:902
  - variable '$email_exists' of personal types {'email'} is found.
  - Data types: email
includes/sb.php:904
  - variable '$email_exists' of personal types {'email'} is found.
  - Data types: email
includes/sb.php:906
  - variable '$email_exists' of personal types {'email'} is found.
  - Data types: email
includes/sb.php:906
  - variable '$username_exists' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
includes/sb.php:909
  - variable '$billing_address' of personal types {'address'} is found.
  - Data types: address
includes/sb.php:910
  - variable '$billing_address' of personal types {'address'} is found.
  - Data types: address
includes/sb.php:911
  - variable '$billing_address' of personal types {'address'} is found.
  - Data types: address
includes/sb.php:912
  - variable '$billing_address' of personal types {'address'} is found.
  - Data types: address
includes/sb.php:913
  - variable '$billing_address' of personal types {'address'} is found.
  - Data types: address
includes/sb.php:914
  - variable '$billing_address' of personal types {'address'} is found.
  - Data types: address
includes/sb.php:915
  - variable '$billing_address' of personal types {'address'} is found.
  - Data types: address
includes/sb.php:916
  - variable '$billing_address' of personal types {'address'} is found.
  - Data types: address
includes/sb.php:917
  - variable '$billing_address' of personal types {'address'} is found.
  - Data types: address
includes/sb.php:918
  - variable '$billing_address' of personal types {'address'} is found.
  - Data types: address
includes/sb.php:919
  - variable '$billing_address' of personal types {'address'} is found.
  - Data types: address
includes/sb.php:920
  - variable '$billing_address' of personal types {'address'} is found.
  - Data types: address
includes/sb.php:921
  - variable '$billing_address' of personal types {'address'} is found.
  - Data types: address
includes/sb.php:924
  - variable '$shipping_address' of personal types {'address'} is found.
  - Data types: address
includes/sb.php:925
  - variable '$shipping_address' of personal types {'address'} is found.
  - Data types: address
includes/sb.php:926
  - variable '$shipping_address' of personal types {'address'} is found.
  - Data types: address
includes/sb.php:927
  - variable '$shipping_address' of personal types {'address'} is found.
  - Data types: address
includes/sb.php:928
  - variable '$shipping_address' of personal types {'address'} is found.
  - Data types: address
includes/sb.php:929
  - variable '$shipping_address' of personal types {'address'} is found.
  - Data types: address
includes/sb.php:930
  - variable '$shipping_address' of personal types {'address'} is found.
  - Data types: address
includes/sb.php:931
  - variable '$shipping_address' of personal types {'address'} is found.
  - Data types: address
includes/sb.php:932
  - variable '$shipping_address' of personal types {'address'} is found.
  - Data types: address
includes/sb.php:933
  - variable '$shipping_address' of personal types {'address'} is found.
  - Data types: address
includes/sb.php:934
  - variable '$shipping_address' of personal types {'address'} is found.
  - Data types: address
includes/sb.php:935
  - variable '$shipping_address' of personal types {'address'} is found.
  - Data types: address
includes/sb.php:936
  - variable '$shipping_address' of personal types {'address'} is found.
  - Data types: address
includes/sb.php:945
  - variable '$username_exists' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
includes/sb.php:956
  - variable '$country_list' of personal types {'country'} is found.
  - Data types: country
includes/sb.php:959
  - variable '$country_list' of personal types {'country'} is found.
  - Data types: country
includes/sb.php:960
  - variable '$country' of personal types {'country'} is found.
  - Data types: country
includes/sb.php:961
  - variable '$country' of personal types {'country'} is found.
  - Data types: country
includes/sb.php:962
  - variable '$country' of personal types {'country'} is found.
  - Data types: country
includes/sb.php:963
  - variable '$country' of personal types {'country'} is found.
  - Data types: country
includes/sb.php:993
  - variable '$country' of personal types {'country'} is found.
  - Data types: country
includes/sb.php:994
  - variable '$country' of personal types {'country'} is found.
  - Data types: country
includes/sb.php:995
  - variable '$country' of personal types {'country'} is found.
  - Data types: country
includes/sb.php:996
  - variable '$country' of personal types {'country'} is found.
  - Data types: country
includes/sb.php:2039
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
includes/sb.php:2040
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
includes/sb.php:2045
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
includes/sb.php:2047
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
includes/socialbug-api.php:16
  - variable '$luv_username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
includes/socialbug-api.php:24
  - variable '$luv_username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
includes/socialbug-api.php:43
  - variable '$luv_username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
includes/socialbug-api.php:52
  - variable '$luv_username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
includes/socialbug-api.php:67
  - variable '$luv_username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
includes/socialbug-api.php:75
  - variable '$luv_username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
includes/socialbug-api.php:112
  - variable '$luv_states' of personal types {'state'} is found.
  - Data types: state
includes/socialbug-api.php:120
  - variable '$luv_states' of personal types {'state'} is found.
  - Data types: state
includes/socialbug-api.php:123
  - variable '$get_states' of personal types {'state'} is found.
  - Data types: state
includes/socialbug-api.php:125
  - variable '$get_states' of personal types {'state'} is found.
  - Data types: state
includes/socialbug-api.php:140
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/socialbug-api.php:141
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/socialbug-api.php:158
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/usersRoutes.php:46
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
includes/usersRoutes.php:73
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
includes/usersRoutes.php:75
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
includes/usersRoutes.php:79
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
includes/usersRoutes.php:82
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
includes/usersRoutes.php:88
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
includes/usersRoutes.php:93
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
includes/usersRoutes.php:103
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
includes/usersRoutes.php:105
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
includes/usersRoutes.php:108
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user 

includes/sb.php:907
  - CRYPTOGRAPHY call to wp_create_user($customer->getUserName(), $customer->getPassword(), $customer->getEmail()) alters data types {'user_meta', 'user'}. Passed arguments: 0: $username (string), 1: $password (string), 2: $email (string). Returns (int|WP_Error).
  - Data types: user_meta, user 

includes/sb.php:2498
  - API call to wp_remote_get($luv_affiliates). Passed arguments: 0: $url (string). Returns (array|WP_Error).
  - Data types: remote
includes/socialbug-api.php:24
  - API call to wp_remote_get($luv_username). Passed arguments: 0: $url (string). Returns (array|WP_Error).
  - Data types: remote
includes/socialbug-api.php:52
  - API call to wp_remote_get($luv_username). Passed arguments: 0: $url (string). Returns (array|WP_Error).
  - Data types: remote
includes/socialbug-api.php:75
  - API call to wp_remote_get($luv_username). Passed arguments: 0: $url (string). Returns (array|WP_Error).
  - Data types: remote
includes/socialbug-api.php:98
  - API call to wp_remote_get($v_parties). Passed arguments: 0: $url (string). Returns (array|WP_Error).
  - Data types: remote
includes/socialbug-api.php:120
  - API call to wp_remote_get($luv_states). Passed arguments: 0: $url (string). Returns (array|WP_Error).
  - Data types: remote
includes/socialbug-api.php:171
  - API call to wp_remote_get($luv_affiliates). Passed arguments: 0: $url (string). Returns (array|WP_Error).
  - Data types: remote
includes/socialbug-api.php:213
  - API call to wp_remote_post($service_url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote 

classes/CustomerData.php:62
  - RETRIEVAL call to get_user_meta($customer->ID, "affiliate_id", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
classes/OrderDataResult.php:160
  - RETRIEVAL call to get_user_by("ID", $post->_customer_user) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user_meta, user
classes/ProductVariant.php:112
  - RETRIEVAL call to get_post($product_id) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, post_meta, wp_post
classes/ProductVariant.php:126
  - RETRIEVAL call to get_post($product_id) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, post_meta, wp_post
classes/ProductVariant.php:234
  - RETRIEVAL call to get_post($variation->variation_id) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, post_meta, wp_post
includes/db.php:29
  - RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).
includes/db.php:42
  - RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).
includes/pluginOptions.php:22
  - RETRIEVAL call to get_option(self::"AFFILIATE_USERS_OPTION") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/sb.php:13
  - RETRIEVAL call to get_option("sb_error_suppress") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/sb.php:62
  - RETRIEVAL call to dbDelta($sql_integrations). Passed arguments: 0: $queries (string[]|string). Returns (array).
includes/sb.php:177
  - RETRIEVAL call to get_option("sb_error_suppress") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/sb.php:178
  - RETRIEVAL call to get_option("sb_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/sb.php:179
  - RETRIEVAL call to get_option("sb_api_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/sb.php:180
  - RETRIEVAL call to get_option("sb_redirect_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/sb.php:181
  - RETRIEVAL call to get_option("sb_page_title") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/sb.php:182
  - RETRIEVAL call to get_option("sb_api_setup") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/sb.php:183
  - RETRIEVAL call to get_option("sb_footer_script") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/sb.php:190
  - RETRIEVAL call to $screen->get_option("per_page", "option") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/sb.php:191
  - RETRIEVAL call to get_user_meta($user, $option, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
includes/sb.php:193
  - RETRIEVAL call to $screen->get_option("per_page", "default") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/sb.php:635
  - RETRIEVAL call to get_user_meta($user, "sb_integration_edit_message", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
includes/sb.php:636
  - RETRIEVAL call to get_user_meta($user, "sb_integration_edit_message_class", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
includes/sb.php:795
  - RETRIEVAL call to get_option("woocommerce_email_from_address", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/sb.php:800
  - RETRIEVAL call to get_option("woocommerce_email_from_name", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/sb.php:829
  - RETRIEVAL call to get_user_by_email($email) alters data types {'user_meta', 'user'}. Passed arguments: 0: $email (string). Returns (bool|object).
  - Data types: user_meta, user
includes/sb.php:838
  - RETRIEVAL call to get_user_by("login", $username) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user_meta, user
includes/sb.php:900
  - RETRIEVAL call to get_user_by_email($customer->getEmail()) alters data types {'user_meta', 'user'}. Passed arguments: 0: $email (string). Returns (bool|object).
  - Data types: user_meta, user
includes/sb.php:946
  - RETRIEVAL call to get_user_by("login", $customer->getUserName()) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user_meta, user
includes/sb.php:1463
  - RETRIEVAL call to get_option("woocommerce_tax_total_display") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/sb.php:1975
  - RETRIEVAL call to get_post($post) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, post_meta, wp_post
includes/sb.php:2215
  - RETRIEVAL call to get_user_by("id", $affiliate_id) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user_meta, user
includes/sb.php:2252
  - RETRIEVAL call to wp_insert_comment($data). Passed arguments: 0: $commentdata (array). Returns (int|false).
includes/sb.php:2270
  - RETRIEVAL call to wp_insert_comment($data). Passed arguments: 0: $commentdata (array). Returns (int|false).
includes/sb.php:2297
  - RETRIEVAL call to get_user_meta($user_id, "affiliate_id", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
includes/sb.php:2518
  - RETRIEVAL call to get_option("sb_footer_script") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/socialbug-api.php:5
  - RETRIEVAL call to get_option("sb_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/socialbug-api.php:6
  - RETRIEVAL call to get_option("sb_api_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/usersList.php:92
  - RETRIEVAL call to get_option("gmt_offset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/usersList.php:212
  - RETRIEVAL call to get_transient(get_current_user_id() . "_affiliate_users_messages") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site 

includes/sb.php:63
  - STORAGE call to add_option("sb_version", $sb_version) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/sb.php:165
  - STORAGE call to update_option($option, $_POST[$option]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/sb.php:167
  - STORAGE call to update_option($option, sanitize_text_field($_POST[$option])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/sb.php:533
  - STORAGE call to update_user_meta($user, "sb_integration_edit_message", "Error saving the integration. Invalid Name!") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
includes/sb.php:534
  - STORAGE call to update_user_meta($user, "sb_integration_edit_message_class", "error") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
includes/sb.php:574
  - STORAGE call to update_user_meta($user, "sb_integration_edit_message", "Error saving the integration. Invalid API KEY!") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
includes/sb.php:575
  - STORAGE call to update_user_meta($user, "sb_integration_edit_message_class", "error") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
includes/sb.php:610
  - STORAGE call to update_user_meta($user, "sb_integration_edit_message", "Integration saved successfully.") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
includes/sb.php:611
  - STORAGE call to update_user_meta($user, "sb_integration_edit_message_class", "notice") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
includes/sb.php:613
  - STORAGE call to update_user_meta($user, "sb_integration_edit_message", "Error saving the integration. Check the values and try again.") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
includes/sb.php:614
  - STORAGE call to update_user_meta($user, "sb_integration_edit_message_class", "error") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
includes/sb.php:637
  - STORAGE call to delete_user_meta($user, "sb_integration_edit_message") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
includes/sb.php:638
  - STORAGE call to delete_user_meta($user, "sb_integration_edit_message_class") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
includes/sb.php:907
  - STORAGE call to wp_create_user($customer->getUserName(), $customer->getPassword(), $customer->getEmail()) alters data types {'user_meta', 'user'}. Passed arguments: 0: $username (string), 1: $password (string), 2: $email (string). Returns (int|WP_Error).
  - Data types: user_meta, user
includes/sb.php:911
  - STORAGE call to add_user_meta($user_id, "billing_first_name", $billing_address->getFirstName()) alters data types {'user_meta', 'first_name'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta, first_name
includes/sb.php:912
  - STORAGE call to add_user_meta($user_id, "billing_last_name", $billing_address->getLastName()) alters data types {'user_meta', 'last_name'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta, last_name
includes/sb.php:913
  - STORAGE call to add_user_meta($user_id, "billing_company", $billing_address->getCompany()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta
includes/sb.php:914
  - STORAGE call to add_user_meta($user_id, "billing_address_1", $billing_address->getAddress1()) alters data types {'user_meta', 'address'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta, address
includes/sb.php:915
  - STORAGE call to add_user_meta($user_id, "billing_address_2", $billing_address->getAddress2()) alters data types {'user_meta', 'address'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta, address
includes/sb.php:916
  - STORAGE call to add_user_meta($user_id, "billing_city", $billing_address->getCity()) alters data types {'user_meta', 'city'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta, city
includes/sb.php:917
  - STORAGE call to add_user_meta($user_id, "billing_state", $billing_address->getStateProvinceId()) alters data types {'user_meta', 'state'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta, state
includes/sb.php:918
  - STORAGE call to add_user_meta($user_id, "billing_country", $billing_address->getCountryId()) alters data types {'user_meta', 'country'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta, country
includes/sb.php:919
  - STORAGE call to add_user_meta($user_id, "billing_postcode", $billing_address->getZipPostalCode()) alters data types {'user_meta', 'postcode'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta, postcode
includes/sb.php:920
  - STORAGE call to add_user_meta($user_id, "billing_email", $billing_address->getEmail()) alters data types {'user_meta', 'email'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta, email
includes/sb.php:921
  - STORAGE call to add_user_meta($user_id, "billing_phone", $billing_address->getPhoneNumber()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta
includes/sb.php:926
  - STORAGE call to add_user_meta($user_id, "shipping_first_name", $shipping_address->getFirstName()) alters data types {'user_meta', 'first_name'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta, first_name
includes/sb.php:927
  - STORAGE call to add_user_meta($user_id, "shipping_last_name", $shipping_address->getLastName()) alters data types {'user_meta', 'last_name'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta, last_name
includes/sb.php:928
  - STORAGE call to add_user_meta($user_id, "shipping_company", $shipping_address->getCompany()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta
includes/sb.php:929
  - STORAGE call to add_user_meta($user_id, "shipping_address_1", $shipping_address->getAddress1()) alters data types {'user_meta', 'address'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta, address
includes/sb.php:930
  - STORAGE call to add_user_meta($user_id, "shipping_address_2", $shipping_address->getAddress2()) alters data types {'user_meta', 'address'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta, address
includes/sb.php:931
  - STORAGE call to add_user_meta($user_id, "shipping_city", $shipping_address->getCity()) alters data types {'user_meta', 'city'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta, city
includes/sb.php:932
  - STORAGE call to add_user_meta($user_id, "shipping_state", $shipping_address->getStateProvinceId()) alters data types {'user_meta', 'state'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta, state
includes/sb.php:933
  - STORAGE call to add_user_meta($user_id, "shipping_country", $shipping_address->getCountryId()) alters data types {'user_meta', 'country'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta, country
includes/sb.php:934
  - STORAGE call to add_user_meta($user_id, "shipping_postcode", $shipping_address->getZipPostalCode()) alters data types {'user_meta', 'postcode'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta, postcode
includes/sb.php:935
  - STORAGE call to add_user_meta($user_id, "shipping_email", $shipping_address->getEmail()) alters data types {'user_meta', 'email'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta, email
includes/sb.php:936
  - STORAGE call to add_user_meta($user_id, "shipping_phone", $shipping_address->getPhoneNumber()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta
includes/sb.php:938
  - STORAGE call to add_user_meta($user_id, "affiliate_id", $customer->getAffiliateId()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta
includes/sb.php:940
  - STORAGE call to update_user_meta($user_id, "show_admin_bar_front", false) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
includes/sb.php:1091
  - STORAGE call to update_post_meta($order->id, "_customer_ip_address", $req["CustomerIp"]) alters data types {'ip', 'address', 'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: ip, address, post_meta
includes/sb.php:1240
  - STORAGE call to update_post_meta($order->id, "_order_tax", $taxAmount) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/sb.php:1241
  - STORAGE call to update_post_meta($order->id, "_order_total", $subtotalAmount + $shippingAmount + $taxAmount + $discountAmount) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/sb.php:1491
  - STORAGE call to update_post_meta($order->id, "_customer_ip_address", $req["CustomerIp"]) alters data types {'ip', 'address', 'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: ip, address, post_meta
includes/sb.php:1652
  - STORAGE call to wp_delete_post($order->id) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post, post_meta, wp_post
includes/sb.php:2222
  - STORAGE call to update_user_meta($user_id, "affiliate_id", $affiliate_id) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
includes/sb.php:2246
  - STORAGE call to update_post_meta($post_id, "affiliate_id", $affiliate_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/sb.php:2262
  - STORAGE call to wp_insert_post($mypost). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
includes/sb.php:2264
  - STORAGE call to add_post_meta($post_id, "affiliate_id", $affiliate_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: post_meta
includes/sb.php:2279
  - STORAGE call to update_user_meta($user_id, "affiliate_id", $affiliate_id) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
includes/sb.php:2287
  - STORAGE call to update_user_meta($user_id, "affiliate_id", $affiliate_id) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
includes/sb.php:2302
  - STORAGE call to update_post_meta($post_id, "affiliate_id", $affiliate_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/usersList.php:140
  - STORAGE call to set_transient(get_current_user_id() . "_affiliate_users_messages", $messages) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed). Returns (bool).
  - Data types: site
includes/usersList.php:216
  - STORAGE call to delete_transient(get_current_user_id() . "_affiliate_users_messages") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).
  - Data types: site 

includes/sb.php:908
  - WP_User object is created.
  - Data types: user_meta, user 

includes/sb.php:507
  - CRYPTOGRAPHY call to hash("ripemd128", $uid . md5($data)). 

includes/sb.php:623
  - Data from table $wpdbsb_integrations deleted: "$wpdb->delete($wpdb->prefix . "sb_integrations", ["integration_id" => $integration_id], "%d")"
includes/sb.php:637
  - DELETION call to delete_user_meta($user, "sb_integration_edit_message") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
includes/sb.php:638
  - DELETION call to delete_user_meta($user, "sb_integration_edit_message_class") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
includes/sb.php:1652
  - DELETION call to wp_delete_post($order->id) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post, post_meta, wp_post 

By data type:
address
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	PropertyDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	PropertyDetector.(unknown) - {'ip', 'address'}
	WordPressStorageDetector.add_user_meta($user_id, "shipping_address_2", $shipping_address->getAddress2()) - {'user_meta', 'address'}
	VariableDetector.(unknown) - {'address'}
	PropertyDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	PropertyDetector.(unknown) - {'ip', 'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	PropertyDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	WordPressStorageDetector.update_post_meta($order->id, "_customer_ip_address", $req["CustomerIp"]) - {'ip', 'address', 'post_meta'}
	WordPressStorageDetector.add_user_meta($user_id, "shipping_address_1", $shipping_address->getAddress1()) - {'user_meta', 'address'}
	WordPressStorageDetector.add_user_meta($user_id, "billing_address_1", $billing_address->getAddress1()) - {'user_meta', 'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	WordPressStorageDetector.add_user_meta($user_id, "billing_address_2", $billing_address->getAddress2()) - {'user_meta', 'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	WordPressStorageDetector.update_post_meta($order->id, "_customer_ip_address", $req["CustomerIp"]) - {'ip', 'address', 'post_meta'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	PropertyDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
city
	WordPressStorageDetector.add_user_meta($user_id, "shipping_city", $shipping_address->getCity()) - {'user_meta', 'city'}
	PropertyDetector.(unknown) - {'city'}
	WordPressStorageDetector.add_user_meta($user_id, "billing_city", $billing_address->getCity()) - {'user_meta', 'city'}
	PropertyDetector.(unknown) - {'city'}
country
	PropertyDetector.(unknown) - {'country'}
	VariableDetector.(unknown) - {'country'}
	VariableDetector.(unknown) - {'country'}
	VariableDetector.(unknown) - {'country'}
	VariableDetector.(unknown) - {'country'}
	VariableDetector.(unknown) - {'country'}
	PropertyDetector.(unknown) - {'country'}
	VariableDetector.(unknown) - {'country'}
	VariableDetector.(unknown) - {'country'}
	VariableDetector.(unknown) - {'country'}
	VariableDetector.(unknown) - {'country'}
	WordPressStorageDetector.add_user_meta($user_id, "billing_country", $billing_address->getCountryId()) - {'user_meta', 'country'}
	VariableDetector.(unknown) - {'country'}
	WordPressStorageDetector.add_user_meta($user_id, "shipping_country", $shipping_address->getCountryId()) - {'user_meta', 'country'}
	VariableDetector.(unknown) - {'country'}
	VariableDetector.(unknown) - {'country'}
	VariableDetector.(unknown) - {'country'}
email
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	WordPressStorageDetector.add_user_meta($user_id, "billing_email", $billing_address->getEmail()) - {'user_meta', 'email'}
	WordPressStorageDetector.add_user_meta($user_id, "shipping_email", $shipping_address->getEmail()) - {'user_meta', 'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
file
	PHPRetrievalDetector.fread($postresource, 1024) - {'file'}
	PHPStorageDetector.file_put_contents("request_debug_taxvar4.txt", print_r($ex, true)) - {'file'}
	PHPRetrievalDetector.fread($postresource, 1024) - {'file'}
	PHPStorageDetector.file_put_contents("request_debug_variants.txt", print_r($products, true)) - {'file'}
	PHPStorageDetector.file_put_contents("request_debug_taxvar3.txt", print_r($product_variation, true)) - {'file'}
	PHPStorageDetector.file_put_contents("request_debug_tax1.txt", print_r(WC()->cart, true)) - {'file'}
	PHPStorageDetector.file_put_contents("request_debug_tax2.txt", "2 working now") - {'file'}
	PHPStorageDetector.file_put_contents("request_debug.txt", print_r($request, true)) - {'file'}
	PHPStorageDetector.file_put_contents("request_debug_tax3.txt", print_r($package, true)) - {'file'}
	PHPStorageDetector.file_put_contents("request_debug_tax.txt", print_r($request, true)) - {'file'}
	PHPStorageDetector.file_put_contents("request_debug_tax.txt", print_r(WC()->cart->get_tax_totals(), true)) - {'file'}
	PHPStorageDetector.file_put_contents("request_debug_tax5.txt", print_r(WC()->cart, true)) - {'file'}
	PHPStorageDetector.file_put_contents("request_debug_tax6.txt", print_r($tax_rate, true)) - {'file'}
	PHPStorageDetector.file_put_contents("request_debug_ship.txt", print_r($rates, true)) - {'file'}
	PHPStorageDetector.file_put_contents("request_debug_tax.txt", print_r($request, true)) - {'file'}
	PHPStorageDetector.file_put_contents("request_debug_tax4.txt", print_r($shipping_tax, true)) - {'file'}
	PHPStorageDetector.file_put_contents("request_debug_tax.txt", print_r($tmp_package, true)) - {'file'}
first_name
	PropertyDetector.(unknown) - {'user_meta', 'first_name', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'first_name', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'first_name', 'user'}
	VariableDetector.(unknown) - {'first_name'}
	PropertyDetector.(unknown) - {'user_meta', 'first_name', 'user'}
	WordPressStorageDetector.add_user_meta($user_id, "billing_first_name", $billing_address->getFirstName()) - {'user_meta', 'first_name'}
	WordPressStorageDetector.add_user_meta($user_id, "shipping_first_name", $shipping_address->getFirstName()) - {'user_meta', 'first_name'}
ip
	PropertyDetector.(unknown) - {'ip', 'address'}
	PropertyDetector.(unknown) - {'ip', 'address'}
	WordPressStorageDetector.update_post_meta($order->id, "_customer_ip_address", $req["CustomerIp"]) - {'ip', 'address', 'post_meta'}
	WordPressStorageDetector.update_post_meta($order->id, "_customer_ip_address", $req["CustomerIp"]) - {'ip', 'address', 'post_meta'}
last_name
	PropertyDetector.(unknown) - {'user_meta', 'last_name', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'last_name', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'last_name', 'user'}
	VariableDetector.(unknown) - {'last_name'}
	WordPressStorageDetector.add_user_meta($user_id, "billing_last_name", $billing_address->getLastName()) - {'user_meta', 'last_name'}
	WordPressStorageDetector.add_user_meta($user_id, "shipping_last_name", $shipping_address->getLastName()) - {'user_meta', 'last_name'}
	PropertyDetector.(unknown) - {'user_meta', 'last_name', 'user'}
none
	WordPressRetrievalDetector.dbDelta($sql_integrations) - set()
	WordPressRetrievalDetector.dbDelta($sql) - set()
	WordPressRetrievalDetector.dbDelta($sql) - set()
	PHPIncludedDetector.(unknown) - set()
	WordPressRetrievalDetector.wp_insert_comment($data) - set()
	WordPressStorageDetector.wp_insert_post($mypost) - set()
	HashDetector.(unknown) - set()
	GenericEncryptionDetector.hash("ripemd128", $uid . md5($data)) - set()
	DeletionDetector.$wpdb->delete($wpdb->prefix . "sb_integrations", ["integration_id" => $integration_id], "%d") - set()
	WordPressRetrievalDetector.wp_insert_comment($data) - set()
option
	WordPressRetrievalDetector.get_option("sb_api_url") - {'option'}
	WordPressRetrievalDetector.get_option("sb_redirect_url") - {'option'}
	WordPressRetrievalDetector.get_option("sb_page_title") - {'option'}
	WordPressRetrievalDetector.get_option("sb_api_setup") - {'option'}
	WordPressRetrievalDetector.get_option("sb_footer_script") - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_email_from_address", "") - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_email_from_name", "") - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_tax_total_display") - {'option'}
	WordPressRetrievalDetector.get_option("sb_error_suppress") - {'option'}
	WordPressRetrievalDetector.get_option("sb_api_key") - {'option'}
	WordPressRetrievalDetector.get_option("sb_footer_script") - {'option'}
	WordPressRetrievalDetector.get_option("sb_api_key") - {'option'}
	WordPressRetrievalDetector.get_option("sb_api_url") - {'option'}
	WordPressStorageDetector.add_option("sb_version", $sb_version) - {'option'}
	WordPressRetrievalDetector.$screen->get_option("per_page", "option") - {'option'}
	WordPressRetrievalDetector.$screen->get_option("per_page", "default") - {'option'}
	WordPressRetrievalDetector.get_option("gmt_offset") - {'option'}
	WordPressRetrievalDetector.get_option(self::"AFFILIATE_USERS_OPTION") - {'option'}
	WordPressStorageDetector.update_option($option, $_POST[$option]) - {'option'}
	WordPressRetrievalDetector.get_option("sb_error_suppress") - {'option'}
	WordPressStorageDetector.update_option($option, sanitize_text_field($_POST[$option])) - {'option'}
password
	PropertyDetector.(unknown) - {'password'}
	PropertyDetector.(unknown) - {'password'}
post
	WordPressRetrievalDetector.get_post($post) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($product_id) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($variation->variation_id) - {'post', 'post_meta', 'wp_post'}
	WordPressStorageDetector.wp_delete_post($order->id) - {'post', 'post_meta', 'wp_post'}
	DeletionDetector.wp_delete_post($order->id) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($product_id) - {'post', 'post_meta', 'wp_post'}
post_meta
	WordPressStorageDetector.update_post_meta($post_id, "affiliate_id", $affiliate_id) - {'post_meta'}
	WordPressRetrievalDetector.get_post($post) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($product_id) - {'post', 'post_meta', 'wp_post'}
	WordPressStorageDetector.update_post_meta($post_id, "affiliate_id", $affiliate_id) - {'post_meta'}
	WordPressRetrievalDetector.get_post($variation->variation_id) - {'post', 'post_meta', 'wp_post'}
	WordPressStorageDetector.add_post_meta($post_id, "affiliate_id", $affiliate_id) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order->id, "_order_tax", $taxAmount) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order->id, "_customer_ip_address", $req["CustomerIp"]) - {'ip', 'address', 'post_meta'}
	WordPressStorageDetector.wp_delete_post($order->id) - {'post', 'post_meta', 'wp_post'}
	WordPressStorageDetector.update_post_meta($order->id, "_order_total", $subtotalAmount + $shippingAmount + $taxAmount + $discountAmount) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order->id, "_customer_ip_address", $req["CustomerIp"]) - {'ip', 'address', 'post_meta'}
	DeletionDetector.wp_delete_post($order->id) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($product_id) - {'post', 'post_meta', 'wp_post'}
postcode
	PropertyDetector.(unknown) - {'postcode'}
	WordPressStorageDetector.add_user_meta($user_id, "billing_postcode", $billing_address->getZipPostalCode()) - {'user_meta', 'postcode'}
	PropertyDetector.(unknown) - {'postcode'}
	WordPressStorageDetector.add_user_meta($user_id, "shipping_postcode", $shipping_address->getZipPostalCode()) - {'user_meta', 'postcode'}
remote
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
site
	WordPressStorageDetector.set_transient(get_current_user_id() . "_affiliate_users_messages", $messages) - {'site'}
	WordPressStorageDetector.delete_transient(get_current_user_id() . "_affiliate_users_messages") - {'site'}
	WordPressRetrievalDetector.get_transient(get_current_user_id() . "_affiliate_users_messages") - {'site'}
state
	WordPressStorageDetector.add_user_meta($user_id, "shipping_state", $shipping_address->getStateProvinceId()) - {'user_meta', 'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	PropertyDetector.(unknown) - {'state'}
	PropertyDetector.(unknown) - {'state'}
	WordPressStorageDetector.add_user_meta($user_id, "billing_state", $billing_address->getStateProvinceId()) - {'user_meta', 'state'}
user
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_user_by("ID", $post->_customer_user) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_user_by("id", $affiliate_id) - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'first_name', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'first_name', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'last_name', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'last_name', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'first_name', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'last_name', 'user'}
	WordPressRetrievalDetector.get_user_by("login", $customer->getUserName()) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordpressHashingFnDetector.wp_create_user($customer->getUserName(), $customer->getPassword(), $customer->getEmail()) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WP_UserDetector.WP_User($user_id) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'first_name', 'user'}
	WordPressRetrievalDetector.get_user_by_email($email) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_user_by("login", $username) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressStorageDetector.wp_create_user($customer->getUserName(), $customer->getPassword(), $customer->getEmail()) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_user_by_email($customer->getEmail()) - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'last_name', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
user_meta
	WordPressStorageDetector.update_user_meta($user, "sb_integration_edit_message", "Error saving the integration. Invalid API KEY!") - {'user_meta'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'user'}
	WordPressStorageDetector.update_user_meta($user, "sb_integration_edit_message_class", "error") - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "affiliate_id", $affiliate_id) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user, "sb_integration_edit_message_class", "error") - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($customer->ID, "affiliate_id", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_by("ID", $post->_customer_user) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_user_by("id", $affiliate_id) - {'user_meta', 'user'}
	WordPressStorageDetector.add_user_meta($user_id, "shipping_state", $shipping_address->getStateProvinceId()) - {'user_meta', 'state'}
	WordPressRetrievalDetector.get_user_meta($user, $option, true) - {'user_meta'}
	WordPressStorageDetector.add_user_meta($user_id, "shipping_city", $shipping_address->getCity()) - {'user_meta', 'city'}
	PropertyDetector.(unknown) - {'user_meta', 'first_name', 'user'}
	DeletionDetector.delete_user_meta($user, "sb_integration_edit_message_class") - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user, "sb_integration_edit_message_class", "error") - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "affiliate_id", $affiliate_id) - {'user_meta'}
	PropertyDetector.(unknown) - {'user_meta', 'first_name', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	DeletionDetector.delete_user_meta($user, "sb_integration_edit_message") - {'user_meta'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_user_meta($user, "sb_integration_edit_message_class", true) - {'user_meta'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressStorageDetector.update_user_meta($user, "sb_integration_edit_message", "Integration saved successfully.") - {'user_meta'}
	PropertyDetector.(unknown) - {'user_meta', 'last_name', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'last_name', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'first_name', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'last_name', 'user'}
	WordPressStorageDetector.delete_user_meta($user, "sb_integration_edit_message") - {'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", $customer->getUserName()) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordpressHashingFnDetector.wp_create_user($customer->getUserName(), $customer->getPassword(), $customer->getEmail()) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressStorageDetector.add_user_meta($user_id, "shipping_address_2", $shipping_address->getAddress2()) - {'user_meta', 'address'}
	WP_UserDetector.WP_User($user_id) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressStorageDetector.update_user_meta($user, "sb_integration_edit_message_class", "notice") - {'user_meta'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressStorageDetector.update_user_meta($user, "sb_integration_edit_message", "Error saving the integration. Check the values and try again.") - {'user_meta'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_user_meta($user_id, "affiliate_id", true) - {'user_meta'}
	PropertyDetector.(unknown) - {'user_meta', 'first_name', 'user'}
	WordPressStorageDetector.update_user_meta($user_id, "affiliate_id", $affiliate_id) - {'user_meta'}
	WordPressStorageDetector.add_user_meta($user_id, "shipping_company", $shipping_address->getCompany()) - {'user_meta'}
	WordPressStorageDetector.add_user_meta($user_id, "billing_phone", $billing_address->getPhoneNumber()) - {'user_meta'}
	WordPressStorageDetector.add_user_meta($user_id, "shipping_address_1", $shipping_address->getAddress1()) - {'user_meta', 'address'}
	WordPressRetrievalDetector.get_user_by_email($email) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_user_by("login", $username) - {'user_meta', 'user'}
	WordPressStorageDetector.add_user_meta($user_id, "billing_email", $billing_address->getEmail()) - {'user_meta', 'email'}
	WordPressStorageDetector.add_user_meta($user_id, "billing_address_1", $billing_address->getAddress1()) - {'user_meta', 'address'}
	WordPressStorageDetector.add_user_meta($user_id, "shipping_email", $shipping_address->getEmail()) - {'user_meta', 'email'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressStorageDetector.add_user_meta($user_id, "billing_city", $billing_address->getCity()) - {'user_meta', 'city'}
	WordPressStorageDetector.wp_create_user($customer->getUserName(), $customer->getPassword(), $customer->getEmail()) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_user_by_email($customer->getEmail()) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_user_meta($user, "sb_integration_edit_message", true) - {'user_meta'}
	WordPressStorageDetector.add_user_meta($user_id, "billing_address_2", $billing_address->getAddress2()) - {'user_meta', 'address'}
	WordPressStorageDetector.add_user_meta($user_id, "billing_first_name", $billing_address->getFirstName()) - {'user_meta', 'first_name'}
	WordPressStorageDetector.update_user_meta($user, "sb_integration_edit_message", "Error saving the integration. Invalid Name!") - {'user_meta'}
	WordPressStorageDetector.delete_user_meta($user, "sb_integration_edit_message_class") - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "show_admin_bar_front", false) - {'user_meta'}
	PropertyDetector.(unknown) - {'user_meta', 'user'}
	WordPressStorageDetector.add_user_meta($user_id, "billing_last_name", $billing_address->getLastName()) - {'user_meta', 'last_name'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressStorageDetector.add_user_meta($user_id, "billing_country", $billing_address->getCountryId()) - {'user_meta', 'country'}
	WordPressStorageDetector.add_user_meta($user_id, "billing_postcode", $billing_address->getZipPostalCode()) - {'user_meta', 'postcode'}
	WordPressStorageDetector.add_user_meta($user_id, "affiliate_id", $customer->getAffiliateId()) - {'user_meta'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressStorageDetector.add_user_meta($user_id, "shipping_phone", $shipping_address->getPhoneNumber()) - {'user_meta'}
	WordPressStorageDetector.add_user_meta($user_id, "shipping_last_name", $shipping_address->getLastName()) - {'user_meta', 'last_name'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressStorageDetector.add_user_meta($user_id, "billing_state", $billing_address->getStateProvinceId()) - {'user_meta', 'state'}
	PropertyDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressStorageDetector.add_user_meta($user_id, "shipping_postcode", $shipping_address->getZipPostalCode()) - {'user_meta', 'postcode'}
	WordPressStorageDetector.add_user_meta($user_id, "shipping_country", $shipping_address->getCountryId()) - {'user_meta', 'country'}
	PropertyDetector.(unknown) - {'user_meta', 'last_name', 'user'}
	WordPressStorageDetector.add_user_meta($user_id, "shipping_first_name", $shipping_address->getFirstName()) - {'user_meta', 'first_name'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressStorageDetector.add_user_meta($user_id, "billing_company", $billing_address->getCompany()) - {'user_meta'}
wp_post
	WordPressRetrievalDetector.get_post($post) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($product_id) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($variation->variation_id) - {'post', 'post_meta', 'wp_post'}
	WordPressStorageDetector.wp_delete_post($order->id) - {'post', 'post_meta', 'wp_post'}
	DeletionDetector.wp_delete_post($order->id) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($product_id) - {'post', 'post_meta', 'wp_post'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:24.555893.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 536 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.607178.

536 STORE_REACHES edges created
536 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 936 nodes as PERSONAL
In total, tainted 936 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 471 nodes as ENCRYPTED
In total, tainted 471 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:45.011087.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:03:24.920437!
DELETION call to wp_delete_post($order->id) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).,None,None
Data from table $wpdbsb_integrations deleted: "$wpdb->delete($wpdb->prefix . "sb_integrations", ["integration_id" => $integration_id], "%d")",None,None
DELETION call to delete_user_meta($user, "sb_integration_edit_message") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_user_meta($user, "sb_integration_edit_message_class") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
CRYPTOGRAPHY call to hash("ripemd128", $uid . md5($data)).,None,None
hash called with unapproved hash algorithm ripemd128. Ignore if this is not encrypting personal information,ripemd128,None
MD5 called with parameters [data]. Ignore if [data] does not contain personal information.,md5,None
RETRIEVAL call to fread($postresource, 1024).,None,None
RETRIEVAL call to fread($postresource, 1024).,None,None
STORAGE call to file_put_contents("request_debug_variants.txt", print_r($products, true)).,None,None
STORAGE call to file_put_contents("request_debug.txt", print_r($request, true)).,None,None
STORAGE call to file_put_contents("request_debug_tax.txt", print_r($request, true)).,None,None
STORAGE call to file_put_contents("request_debug_tax1.txt", print_r(WC()->cart, true)).,None,None
STORAGE call to file_put_contents("request_debug_taxvar3.txt", print_r($product_variation, true)).,None,None
STORAGE call to file_put_contents("request_debug_taxvar4.txt", print_r($ex, true)).,None,None
STORAGE call to file_put_contents("request_debug_tax2.txt", "2 working now").,None,None
STORAGE call to file_put_contents("request_debug_tax3.txt", print_r($package, true)).,None,None
STORAGE call to file_put_contents("request_debug_tax4.txt", print_r($shipping_tax, true)).,None,None
STORAGE call to file_put_contents("request_debug_tax5.txt", print_r(WC()->cart, true)).,None,None
STORAGE call to file_put_contents("request_debug_tax.txt", print_r(WC()->cart->get_tax_totals(), true)).,None,None
STORAGE call to file_put_contents("request_debug_tax6.txt", print_r($tax_rate, true)).,None,None
STORAGE call to file_put_contents("request_debug_tax.txt", print_r($request, true)).,None,None
STORAGE call to file_put_contents("request_debug_tax.txt", print_r($tmp_package, true)).,None,None
STORAGE call to file_put_contents("request_debug_ship.txt", print_r($rates, true)).,None,None
object property '$user->billing_first_name' of personal types {'user_meta', 'first_name', 'user'} is found.,,None
object property '$user->billing_last_name' of personal types {'user_meta', 'last_name', 'user'} is found.,,None
object property '$user->billing_first_name' of personal types {'user_meta', 'first_name', 'user'} is found.,,None
object property '$user->billing_last_name' of personal types {'user_meta', 'last_name', 'user'} is found.,,None
object property '$user->billing_address_1' of personal types {'address'} is found.,,None
object property '$user->billing_address_2' of personal types {'address'} is found.,,None
object property '$user->billing_city' of personal types {'city'} is found.,,None
object property '$user->billing_state' of personal types {'state'} is found.,,None
object property '$user->billing_postcode' of personal types {'postcode'} is found.,,None
object property '$user->billing_country' of personal types {'country'} is found.,,None
object property '$user->billing_email' of personal types {'email'} is found.,,None
object property '$user->shipping_last_name' of personal types {'user_meta', 'last_name', 'user'} is found.,,None
object property '$user->shipping_first_name' of personal types {'user_meta', 'first_name', 'user'} is found.,,None
object property '$user->shipping_first_name' of personal types {'user_meta', 'first_name', 'user'} is found.,,None
object property '$user->shipping_last_name' of personal types {'user_meta', 'last_name', 'user'} is found.,,None
object property '$user->shipping_address_1' of personal types {'address'} is found.,,None
object property '$user->shipping_address_2' of personal types {'address'} is found.,,None
object property '$user->shipping_city' of personal types {'city'} is found.,,None
object property '$user->shipping_state' of personal types {'state'} is found.,,None
object property '$user->shipping_postcode' of personal types {'postcode'} is found.,,None
object property '$user->shipping_country' of personal types {'country'} is found.,,None
object property '$user->shipping_email' of personal types {'email'} is found.,,None
object property '$this->_password' of personal types {'password'} is found.,,None
object property '$this->_password' of personal types {'password'} is found.,,None
object property '$customer->user_email' of personal types {'email'} is found.,,None
object property '$post->_customer_ip_address' of personal types {'ip', 'address'} is found.,,None
object property '$post->_customer_ip_address' of personal types {'ip', 'address'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$affiliate->username' of personal types {'user_meta', 'user'} is found.,,None
object property '$user->username' of personal types {'user_meta', 'user'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$item->username' of personal types {'user_meta', 'user'} is found.,,None
variable '$first_name' of personal types {'first_name'} is found.,,None
variable '$last_name' of personal types {'last_name'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$country_id' of personal types {'country'} is found.,,None
variable '$address1' of personal types {'address'} is found.,,None
variable '$address2' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$country_id' of personal types {'country'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$billing_address' of personal types {'address'} is found.,,None
variable '$billing_address' of personal types {'address'} is found.,,None
variable '$shipping_address' of personal types {'address'} is found.,,None
variable '$shipping_address' of personal types {'address'} is found.,,None
variable '$billing_address' of personal types {'address'} is found.,,None
variable '$billing_address' of personal types {'address'} is found.,,None
variable '$shipping_address' of personal types {'address'} is found.,,None
variable '$shipping_address' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$country_id' of personal types {'country'} is found.,,None
variable '$db_affiliate_usernames' of personal types {'user_meta', 'user'} is found.,,None
variable '$db_affiliate_usernames' of personal types {'user_meta', 'user'} is found.,,None
variable '$db_affiliate_usernames' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$email_data' of personal types {'email'} is found.,,None
variable '$email_data' of personal types {'email'} is found.,,None
variable '$email_data' of personal types {'email'} is found.,,None
variable '$from_email' of personal types {'email'} is found.,,None
variable '$email_data' of personal types {'email'} is found.,,None
variable '$from_email' of personal types {'email'} is found.,,None
variable '$email_data' of personal types {'email'} is found.,,None
variable '$email_data' of personal types {'email'} is found.,,None
variable '$email_data' of personal types {'email'} is found.,,None
variable '$from_email' of personal types {'email'} is found.,,None
variable '$from_email' of personal types {'email'} is found.,,None
variable '$from_email' of personal types {'email'} is found.,,None
variable '$email_data' of personal types {'email'} is found.,,None
variable '$email_data' of personal types {'email'} is found.,,None
variable '$email_data' of personal types {'email'} is found.,,None
variable '$email_data' of personal types {'email'} is found.,,None
variable '$email_data' of personal types {'email'} is found.,,None
variable '$email_data' of personal types {'email'} is found.,,None
variable '$email_data' of personal types {'email'} is found.,,None
variable '$email_data' of personal types {'email'} is found.,,None
variable '$email_data' of personal types {'email'} is found.,,None
variable '$email_data' of personal types {'email'} is found.,,None
variable '$email_data' of personal types {'email'} is found.,,None
variable '$email_processed' of personal types {'email'} is found.,,None
variable '$email_data' of personal types {'email'} is found.,,None
variable '$email_data' of personal types {'email'} is found.,,None
variable '$email_processed' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$billing_address' of personal types {'address'} is found.,,None
variable '$billing_address' of personal types {'address'} is found.,,None
variable '$shipping_address' of personal types {'address'} is found.,,None
variable '$shipping_address' of personal types {'address'} is found.,,None
variable '$billing_address' of personal types {'address'} is found.,,None
variable '$billing_address' of personal types {'address'} is found.,,None
variable '$shipping_address' of personal types {'address'} is found.,,None
variable '$shipping_address' of personal types {'address'} is found.,,None
variable '$username_exists' of personal types {'user_meta', 'user'} is found.,,None
variable '$email_exists' of personal types {'email'} is found.,,None
variable '$email_exists' of personal types {'email'} is found.,,None
variable '$username_exists' of personal types {'user_meta', 'user'} is found.,,None
variable '$email_exists' of personal types {'email'} is found.,,None
variable '$billing_address' of personal types {'address'} is found.,,None
variable '$billing_address' of personal types {'address'} is found.,,None
variable '$billing_address' of personal types {'address'} is found.,,None
variable '$billing_address' of personal types {'address'} is found.,,None
variable '$billing_address' of personal types {'address'} is found.,,None
variable '$billing_address' of personal types {'address'} is found.,,None
variable '$billing_address' of personal types {'address'} is found.,,None
variable '$billing_address' of personal types {'address'} is found.,,None
variable '$billing_address' of personal types {'address'} is found.,,None
variable '$billing_address' of personal types {'address'} is found.,,None
variable '$billing_address' of personal types {'address'} is found.,,None
variable '$billing_address' of personal types {'address'} is found.,,None
variable '$billing_address' of personal types {'address'} is found.,,None
variable '$shipping_address' of personal types {'address'} is found.,,None
variable '$shipping_address' of personal types {'address'} is found.,,None
variable '$shipping_address' of personal types {'address'} is found.,,None
variable '$shipping_address' of personal types {'address'} is found.,,None
variable '$shipping_address' of personal types {'address'} is found.,,None
variable '$shipping_address' of personal types {'address'} is found.,,None
variable '$shipping_address' of personal types {'address'} is found.,,None
variable '$shipping_address' of personal types {'address'} is found.,,None
variable '$shipping_address' of personal types {'address'} is found.,,None
variable '$shipping_address' of personal types {'address'} is found.,,None
variable '$shipping_address' of personal types {'address'} is found.,,None
variable '$shipping_address' of personal types {'address'} is found.,,None
variable '$shipping_address' of personal types {'address'} is found.,,None
variable '$username_exists' of personal types {'user_meta', 'user'} is found.,,None
variable '$country_list' of personal types {'country'} is found.,,None
variable '$country_list' of personal types {'country'} is found.,,None
variable '$country' of personal types {'country'} is found.,,None
variable '$country' of personal types {'country'} is found.,,None
variable '$country' of personal types {'country'} is found.,,None
variable '$country' of personal types {'country'} is found.,,None
variable '$country' of personal types {'country'} is found.,,None
variable '$country' of personal types {'country'} is found.,,None
variable '$country' of personal types {'country'} is found.,,None
variable '$country' of personal types {'country'} is found.,,None
variable '$luv_states' of personal types {'state'} is found.,,None
variable '$luv_states' of personal types {'state'} is found.,,None
variable '$get_states' of personal types {'state'} is found.,,None
variable '$get_states' of personal types {'state'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$luv_username' of personal types {'user_meta', 'user'} is found.,,None
variable '$luv_username' of personal types {'user_meta', 'user'} is found.,,None
variable '$luv_username' of personal types {'user_meta', 'user'} is found.,,None
variable '$luv_username' of personal types {'user_meta', 'user'} is found.,,None
variable '$luv_username' of personal types {'user_meta', 'user'} is found.,,None
variable '$luv_username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
WP_User object is created.,,None
API call to wp_remote_get($luv_affiliates). Passed arguments: 0: $url (string). Returns (array|WP_Error).,https,[]
API call to wp_remote_get($luv_states). Passed arguments: 0: $url (string). Returns (array|WP_Error).,https,[]
API call to wp_remote_get($luv_affiliates). Passed arguments: 0: $url (string). Returns (array|WP_Error).,https,[]
API call to wp_remote_post($service_url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_get($luv_username). Passed arguments: 0: $url (string). Returns (array|WP_Error).,https,[]
API call to wp_remote_get($luv_username). Passed arguments: 0: $url (string). Returns (array|WP_Error).,https,[]
API call to wp_remote_get($luv_username). Passed arguments: 0: $url (string). Returns (array|WP_Error).,https,[]
API call to wp_remote_get($v_parties). Passed arguments: 0: $url (string). Returns (array|WP_Error).,https,[]
RETRIEVAL call to get_user_meta($customer->ID, "affiliate_id", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_by("ID", $post->_customer_user) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_post($product_id) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($product_id) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($variation->variation_id) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to get_option(self::"AFFILIATE_USERS_OPTION") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sb_error_suppress") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_tax_total_display") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sb_error_suppress") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sb_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sb_api_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sb_redirect_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sb_page_title") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sb_api_setup") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sb_footer_script") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to $screen->get_option("per_page", "option") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user, $option, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to $screen->get_option("per_page", "default") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post($post) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_user_by("id", $affiliate_id) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to wp_insert_comment($data). Passed arguments: 0: $commentdata (array). Returns (int|false).,None,None
RETRIEVAL call to wp_insert_comment($data). Passed arguments: 0: $commentdata (array). Returns (int|false).,None,None
RETRIEVAL call to get_user_meta($user_id, "affiliate_id", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sb_footer_script") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to dbDelta($sql_integrations). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to get_user_meta($user, "sb_integration_edit_message", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user, "sb_integration_edit_message_class", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_email_from_address", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_email_from_name", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_user_by_email($email) alters data types {'user_meta', 'user'}. Passed arguments: 0: $email (string). Returns (bool|object).,None,None
RETRIEVAL call to get_user_by("login", $username) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_by_email($customer->getEmail()) alters data types {'user_meta', 'user'}. Passed arguments: 0: $email (string). Returns (bool|object).,None,None
RETRIEVAL call to get_user_by("login", $customer->getUserName()) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_option("sb_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sb_api_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_transient(get_current_user_id() . "_affiliate_users_messages") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("gmt_offset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
STORAGE call to update_post_meta($order->id, "_customer_ip_address", $req["CustomerIp"]) alters data types {'ip', 'address', 'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order->id, "_order_tax", $taxAmount) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order->id, "_order_total", $subtotalAmount + $shippingAmount + $taxAmount + $discountAmount) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order->id, "_customer_ip_address", $req["CustomerIp"]) alters data types {'ip', 'address', 'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option($option, $_POST[$option]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to wp_delete_post($order->id) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).,None,None
STORAGE call to update_option($option, sanitize_text_field($_POST[$option])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_user_meta($user_id, "affiliate_id", $affiliate_id) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "affiliate_id", $affiliate_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_insert_post($mypost). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to add_post_meta($post_id, "affiliate_id", $affiliate_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to update_user_meta($user_id, "affiliate_id", $affiliate_id) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "affiliate_id", $affiliate_id) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "affiliate_id", $affiliate_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user, "sb_integration_edit_message", "Error saving the integration. Invalid Name!") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user, "sb_integration_edit_message_class", "error") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user, "sb_integration_edit_message", "Error saving the integration. Invalid API KEY!") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user, "sb_integration_edit_message_class", "error") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user, "sb_integration_edit_message", "Integration saved successfully.") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user, "sb_integration_edit_message_class", "notice") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user, "sb_integration_edit_message", "Error saving the integration. Check the values and try again.") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user, "sb_integration_edit_message_class", "error") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to add_option("sb_version", $sb_version) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_user_meta($user, "sb_integration_edit_message") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_user_meta($user, "sb_integration_edit_message_class") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to wp_create_user($customer->getUserName(), $customer->getPassword(), $customer->getEmail()) alters data types {'user_meta', 'user'}. Passed arguments: 0: $username (string), 1: $password (string), 2: $email (string). Returns (int|WP_Error).,None,None
STORAGE call to add_user_meta($user_id, "billing_first_name", $billing_address->getFirstName()) alters data types {'user_meta', 'first_name'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "billing_last_name", $billing_address->getLastName()) alters data types {'user_meta', 'last_name'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "billing_company", $billing_address->getCompany()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "billing_address_1", $billing_address->getAddress1()) alters data types {'user_meta', 'address'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "billing_address_2", $billing_address->getAddress2()) alters data types {'user_meta', 'address'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "billing_city", $billing_address->getCity()) alters data types {'user_meta', 'city'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "billing_state", $billing_address->getStateProvinceId()) alters data types {'user_meta', 'state'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "billing_country", $billing_address->getCountryId()) alters data types {'user_meta', 'country'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "billing_postcode", $billing_address->getZipPostalCode()) alters data types {'user_meta', 'postcode'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "billing_email", $billing_address->getEmail()) alters data types {'user_meta', 'email'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "billing_phone", $billing_address->getPhoneNumber()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "shipping_first_name", $shipping_address->getFirstName()) alters data types {'user_meta', 'first_name'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "shipping_last_name", $shipping_address->getLastName()) alters data types {'user_meta', 'last_name'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "shipping_company", $shipping_address->getCompany()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "shipping_address_1", $shipping_address->getAddress1()) alters data types {'user_meta', 'address'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "shipping_address_2", $shipping_address->getAddress2()) alters data types {'user_meta', 'address'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "shipping_city", $shipping_address->getCity()) alters data types {'user_meta', 'city'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "shipping_state", $shipping_address->getStateProvinceId()) alters data types {'user_meta', 'state'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "shipping_country", $shipping_address->getCountryId()) alters data types {'user_meta', 'country'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "shipping_postcode", $shipping_address->getZipPostalCode()) alters data types {'user_meta', 'postcode'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "shipping_email", $shipping_address->getEmail()) alters data types {'user_meta', 'email'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "shipping_phone", $shipping_address->getPhoneNumber()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "affiliate_id", $customer->getAffiliateId()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to update_user_meta($user_id, "show_admin_bar_front", false) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to set_transient(get_current_user_id() . "_affiliate_users_messages", $messages) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_transient(get_current_user_id() . "_affiliate_users_messages") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).,None,None
CRYPTOGRAPHY call to wp_create_user($customer->getUserName(), $customer->getPassword(), $customer->getEmail()) alters data types {'user_meta', 'user'}. Passed arguments: 0: $username (string), 1: $password (string), 2: $email (string). Returns (int|WP_Error).,hash,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] PII of types (['user_meta', 'last_name', 'state', 'email', 'country', 'first_name', 'city', 'address', 'user', 'ip', 'postcode']) stored through WordPress function "update_user_meta($user, "sb_integration_edit_message", "Error saving the integration. Invalid API KEY!")", found in file includes/sb.php at line 574. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user, "sb_integration_edit_message_class", "error")", found in file includes/sb.php at line 575. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user_id, "affiliate_id", $affiliate_id)", found in file includes/sb.php at line 2287. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user, "sb_integration_edit_message_class", "error")", found in file includes/sb.php at line 534. 

[has_storage] PII of types (['user_meta', 'address', 'state', 'user']) stored through WordPress function "add_user_meta($user_id, "shipping_state", $shipping_address->getStateProvinceId())", found in file includes/sb.php at line 932. 

[has_storage] PII of types (['user_meta', 'address', 'user', 'city']) stored through WordPress function "add_user_meta($user_id, "shipping_city", $shipping_address->getCity())", found in file includes/sb.php at line 931. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user, "sb_integration_edit_message_class", "error")", found in file includes/sb.php at line 614. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user_id, "affiliate_id", $affiliate_id)", found in file includes/sb.php at line 2279. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user, "sb_integration_edit_message", "Integration saved successfully.")", found in file includes/sb.php at line 610. 

[has_storage] PII of types (['user_meta', 'address', 'user']) stored through WordPress function "add_user_meta($user_id, "shipping_address_2", $shipping_address->getAddress2())", found in file includes/sb.php at line 930. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user, "sb_integration_edit_message_class", "notice")", found in file includes/sb.php at line 611. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user, "sb_integration_edit_message", "Error saving the integration. Check the values and try again.")", found in file includes/sb.php at line 613. 

[has_storage] PII of types (['user_meta', 'last_name', 'state', 'email', 'country', 'first_name', 'city', 'address', 'user', 'ip', 'postcode']) stored through WordPress function "update_post_meta($post_id, "affiliate_id", $affiliate_id)", found in file includes/sb.php at line 2302. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user_id, "affiliate_id", $affiliate_id)", found in file includes/sb.php at line 2222. 

[has_storage] PII of types (['user_meta', 'address', 'user']) stored through WordPress function "add_user_meta($user_id, "shipping_company", $shipping_address->getCompany())", found in file includes/sb.php at line 928. 

[has_storage] PII of types (['ip', 'address']) stored through WordPress function "update_post_meta($order->id, "_customer_ip_address", $req["CustomerIp"])", found in file includes/sb.php at line 1491. 

[has_storage] PII of types (['user_meta', 'address', 'user']) stored through WordPress function "add_user_meta($user_id, "billing_phone", $billing_address->getPhoneNumber())", found in file includes/sb.php at line 921. 

[has_storage] PII of types (['user_meta', 'address', 'user']) stored through WordPress function "add_user_meta($user_id, "shipping_address_1", $shipping_address->getAddress1())", found in file includes/sb.php at line 929. 

[has_storage] PII of types (['user_meta', 'address', 'email', 'user']) stored through WordPress function "add_user_meta($user_id, "billing_email", $billing_address->getEmail())", found in file includes/sb.php at line 920. 

[has_storage] PII of types (['user_meta', 'address', 'user']) stored through WordPress function "add_user_meta($user_id, "billing_address_1", $billing_address->getAddress1())", found in file includes/sb.php at line 914. 

[has_storage] PII of types (['user_meta', 'address', 'email', 'user']) stored through WordPress function "add_user_meta($user_id, "shipping_email", $shipping_address->getEmail())", found in file includes/sb.php at line 935. 

[has_storage] PII of types (['user_meta', 'address', 'user', 'city']) stored through WordPress function "add_user_meta($user_id, "billing_city", $billing_address->getCity())", found in file includes/sb.php at line 916. 

[has_storage] WP User info of types (['user_meta', 'user']) stored through WordPress function "wp_create_user($customer->getUserName(), $customer->getPassword(), $customer->getEmail())", found in file includes/sb.php at line 907. 

[has_storage] PII of types (['user_meta', 'address', 'user']) stored through WordPress function "add_user_meta($user_id, "billing_address_2", $billing_address->getAddress2())", found in file includes/sb.php at line 915. 

[has_storage] PII of types (['user_meta', 'address', 'user', 'first_name']) stored through WordPress function "add_user_meta($user_id, "billing_first_name", $billing_address->getFirstName())", found in file includes/sb.php at line 911. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user, "sb_integration_edit_message", "Error saving the integration. Invalid Name!")", found in file includes/sb.php at line 533. 

[has_storage] PII of types (['user_meta', 'user']) stored through WordPress function "update_user_meta($user_id, "show_admin_bar_front", false)", found in file includes/sb.php at line 940. 

[has_storage] PII of types (['user_meta', 'last_name', 'address', 'user']) stored through WordPress function "add_user_meta($user_id, "billing_last_name", $billing_address->getLastName())", found in file includes/sb.php at line 912. 

[has_storage] PII of types (['user_meta', 'address', 'country', 'user']) stored through WordPress function "add_user_meta($user_id, "billing_country", $billing_address->getCountryId())", found in file includes/sb.php at line 918. 

[has_storage] PII of types (['ip', 'address']) stored through WordPress function "update_post_meta($order->id, "_customer_ip_address", $req["CustomerIp"])", found in file includes/sb.php at line 1091. 

[has_storage] PII of types (['user_meta', 'address', 'user', 'postcode']) stored through WordPress function "add_user_meta($user_id, "billing_postcode", $billing_address->getZipPostalCode())", found in file includes/sb.php at line 919. 

[has_storage] PII of types (['user_meta', 'user']) stored through WordPress function "add_user_meta($user_id, "affiliate_id", $customer->getAffiliateId())", found in file includes/sb.php at line 938. 

[has_storage] PII of types (['user_meta', 'address', 'user']) stored through WordPress function "add_user_meta($user_id, "shipping_phone", $shipping_address->getPhoneNumber())", found in file includes/sb.php at line 936. 

[has_storage] PII of types (['user_meta', 'last_name', 'address', 'user']) stored through WordPress function "add_user_meta($user_id, "shipping_last_name", $shipping_address->getLastName())", found in file includes/sb.php at line 927. 

[has_storage] PII of types (['user_meta', 'address', 'state', 'user']) stored through WordPress function "add_user_meta($user_id, "billing_state", $billing_address->getStateProvinceId())", found in file includes/sb.php at line 917. 

[has_storage] PII of types (['user_meta', 'address', 'user', 'postcode']) stored through WordPress function "add_user_meta($user_id, "shipping_postcode", $shipping_address->getZipPostalCode())", found in file includes/sb.php at line 934. 

[has_storage] PII of types (['user_meta', 'address', 'country', 'user']) stored through WordPress function "add_user_meta($user_id, "shipping_country", $shipping_address->getCountryId())", found in file includes/sb.php at line 933. 

[has_storage] PII of types (['user_meta', 'address', 'user', 'first_name']) stored through WordPress function "add_user_meta($user_id, "shipping_first_name", $shipping_address->getFirstName())", found in file includes/sb.php at line 926. 

[has_storage] PII of types (['user_meta', 'address', 'user']) stored through WordPress function "add_user_meta($user_id, "billing_company", $billing_address->getCompany())", found in file includes/sb.php at line 913. 

[has_storage] Storage check is WP 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user, "sb_integration_edit_message", "Error saving the integration. Invalid API KEY!") has deletion method delete_user_meta($user, "sb_integration_edit_message"). Storage method found in file includes/sb.php at line 574. Deletion method found in file includes/sb.php at line 637. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user, "sb_integration_edit_message_class", "error") has deletion method delete_user_meta($user, "sb_integration_edit_message_class"). Storage method found in file includes/sb.php at line 575. Deletion method found in file includes/sb.php at line 638. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "affiliate_id", $affiliate_id) does not have corresponding deletion method. Storage method found in file includes/sb.php at line 2287. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user, "sb_integration_edit_message_class", "error") has deletion method delete_user_meta($user, "sb_integration_edit_message_class"). Storage method found in file includes/sb.php at line 534. Deletion method found in file includes/sb.php at line 638. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "shipping_state", $shipping_address->getStateProvinceId()) does not have corresponding deletion method. Storage method found in file includes/sb.php at line 932. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "shipping_city", $shipping_address->getCity()) does not have corresponding deletion method. Storage method found in file includes/sb.php at line 931. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user, "sb_integration_edit_message_class", "error") has deletion method delete_user_meta($user, "sb_integration_edit_message_class"). Storage method found in file includes/sb.php at line 614. Deletion method found in file includes/sb.php at line 638. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "affiliate_id", $affiliate_id) does not have corresponding deletion method. Storage method found in file includes/sb.php at line 2279. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user, "sb_integration_edit_message", "Integration saved successfully.") has deletion method delete_user_meta($user, "sb_integration_edit_message"). Storage method found in file includes/sb.php at line 610. Deletion method found in file includes/sb.php at line 637. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "shipping_address_2", $shipping_address->getAddress2()) does not have corresponding deletion method. Storage method found in file includes/sb.php at line 930. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user, "sb_integration_edit_message_class", "notice") has deletion method delete_user_meta($user, "sb_integration_edit_message_class"). Storage method found in file includes/sb.php at line 611. Deletion method found in file includes/sb.php at line 638. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user, "sb_integration_edit_message", "Error saving the integration. Check the values and try again.") has deletion method delete_user_meta($user, "sb_integration_edit_message"). Storage method found in file includes/sb.php at line 613. Deletion method found in file includes/sb.php at line 637. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post_id, "affiliate_id", $affiliate_id) does not have corresponding deletion method. Storage method found in file includes/sb.php at line 2302. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "affiliate_id", $affiliate_id) does not have corresponding deletion method. Storage method found in file includes/sb.php at line 2222. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "shipping_company", $shipping_address->getCompany()) does not have corresponding deletion method. Storage method found in file includes/sb.php at line 928. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($order->id, "_customer_ip_address", $req["CustomerIp"]) does not have corresponding deletion method. Storage method found in file includes/sb.php at line 1491. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "billing_phone", $billing_address->getPhoneNumber()) does not have corresponding deletion method. Storage method found in file includes/sb.php at line 921. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "shipping_address_1", $shipping_address->getAddress1()) does not have corresponding deletion method. Storage method found in file includes/sb.php at line 929. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "billing_email", $billing_address->getEmail()) does not have corresponding deletion method. Storage method found in file includes/sb.php at line 920. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "billing_address_1", $billing_address->getAddress1()) does not have corresponding deletion method. Storage method found in file includes/sb.php at line 914. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "shipping_email", $shipping_address->getEmail()) does not have corresponding deletion method. Storage method found in file includes/sb.php at line 935. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "billing_city", $billing_address->getCity()) does not have corresponding deletion method. Storage method found in file includes/sb.php at line 916. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "billing_address_2", $billing_address->getAddress2()) does not have corresponding deletion method. Storage method found in file includes/sb.php at line 915. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "billing_first_name", $billing_address->getFirstName()) does not have corresponding deletion method. Storage method found in file includes/sb.php at line 911. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user, "sb_integration_edit_message", "Error saving the integration. Invalid Name!") has deletion method delete_user_meta($user, "sb_integration_edit_message"). Storage method found in file includes/sb.php at line 533. Deletion method found in file includes/sb.php at line 637. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "show_admin_bar_front", false) does not have corresponding deletion method. Storage method found in file includes/sb.php at line 940. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "billing_last_name", $billing_address->getLastName()) does not have corresponding deletion method. Storage method found in file includes/sb.php at line 912. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "billing_country", $billing_address->getCountryId()) does not have corresponding deletion method. Storage method found in file includes/sb.php at line 918. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($order->id, "_customer_ip_address", $req["CustomerIp"]) does not have corresponding deletion method. Storage method found in file includes/sb.php at line 1091. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "billing_postcode", $billing_address->getZipPostalCode()) does not have corresponding deletion method. Storage method found in file includes/sb.php at line 919. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "affiliate_id", $customer->getAffiliateId()) does not have corresponding deletion method. Storage method found in file includes/sb.php at line 938. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "shipping_phone", $shipping_address->getPhoneNumber()) does not have corresponding deletion method. Storage method found in file includes/sb.php at line 936. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "shipping_last_name", $shipping_address->getLastName()) does not have corresponding deletion method. Storage method found in file includes/sb.php at line 927. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "billing_state", $billing_address->getStateProvinceId()) does not have corresponding deletion method. Storage method found in file includes/sb.php at line 917. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "shipping_postcode", $shipping_address->getZipPostalCode()) does not have corresponding deletion method. Storage method found in file includes/sb.php at line 934. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "shipping_country", $shipping_address->getCountryId()) does not have corresponding deletion method. Storage method found in file includes/sb.php at line 933. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "shipping_first_name", $shipping_address->getFirstName()) does not have corresponding deletion method. Storage method found in file includes/sb.php at line 926. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "billing_company", $billing_address->getCompany()) does not have corresponding deletion method. Storage method found in file includes/sb.php at line 913. 

[Art.17, Right to erasure] Deletion access is NONE 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 17196. Found in file includes/sb.php at line 574 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 17204. Found in file includes/sb.php at line 575 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 26401. Found in file includes/sb.php at line 2287 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 16878. Found in file includes/sb.php at line 534 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 18924. Found in file includes/sb.php at line 932 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 18912. Found in file includes/sb.php at line 931 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 17370. Found in file includes/sb.php at line 614 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 26362. Found in file includes/sb.php at line 2279 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 17343. Found in file includes/sb.php at line 610 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 18900. Found in file includes/sb.php at line 930 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 17351. Found in file includes/sb.php at line 611 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 17362. Found in file includes/sb.php at line 613 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 26494. Found in file includes/sb.php at line 2302 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 26074. Found in file includes/sb.php at line 2222 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 18876. Found in file includes/sb.php at line 928 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 22053. Found in file includes/sb.php at line 1491 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 18827. Found in file includes/sb.php at line 921 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 18888. Found in file includes/sb.php at line 929 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 18815. Found in file includes/sb.php at line 920 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 18743. Found in file includes/sb.php at line 914 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 18960. Found in file includes/sb.php at line 935 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 18767. Found in file includes/sb.php at line 916 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 18755. Found in file includes/sb.php at line 915 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 18707. Found in file includes/sb.php at line 911 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 16870. Found in file includes/sb.php at line 533 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 19002. Found in file includes/sb.php at line 940 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 18719. Found in file includes/sb.php at line 912 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 18791. Found in file includes/sb.php at line 918 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 19898. Found in file includes/sb.php at line 1091 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 18803. Found in file includes/sb.php at line 919 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 18984. Found in file includes/sb.php at line 938 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 18972. Found in file includes/sb.php at line 936 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 18864. Found in file includes/sb.php at line 927 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 18779. Found in file includes/sb.php at line 917 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 18948. Found in file includes/sb.php at line 934 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 18936. Found in file includes/sb.php at line 933 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 18852. Found in file includes/sb.php at line 926 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 18731. Found in file includes/sb.php at line 913 

[Art.15, Right to access] Data access is NONE_BUT_NOT_REQUIRED 

[third_party] Third party usage is NONE for data types [] 

[encryption] API call that sends PII to unknown url uses unknown protocol. PII is insecurely encrypted with []. Found in file includes/socialbug-api.php at line 75 

[encryption] API call that sends PII to unknown url uses unknown protocol. PII is insecurely encrypted with []. Found in file includes/socialbug-api.php at line 24 

[encryption] API call that sends PII to unknown url uses unknown protocol. PII is insecurely encrypted with []. Found in file includes/socialbug-api.php at line 171 

[encryption] API call that sends PII to unknown url uses unknown protocol. PII is insecurely encrypted with []. Found in file includes/socialbug-api.php at line 120 

[encryption] API call that sends PII to unknown url uses unknown protocol. PII is insecurely encrypted with []. Found in file includes/socialbug-api.php at line 52 

[main] Applicable GDPR requirements: ['access', 'deletion', 'encryption', 'third_party'] 

[main] Is deletion in violation? True 

[main] Is access in violation? False 

[main] Is third_party in violation? False 

[main] Is encryption in violation? True 

[main] Complaint? False 


###########
### Q&A ###
###########

1. Why is my plugin in violation against GDPR?

GDPR (https://gdpr-info.eu/) aims to give citizens in the European Union (EU) control over their personal data. If a website collects or store user data, it is required to provide users functionalities to control their data, such as ones to erase or export their data. While a plugin do not directly interact with users, it may provide functionalities that collect or store personal data, which would make websites that deploy the plugin in violation against GDPR if the plugin does not provide corresponding functionalities to allow users control their personal data. Therefore, plugin developers are responsible to provide functions to manage the personal data they handle in accordance with GDPR. We list requirements by specific GDPR articles relevant to your plugin below.


[Art. 13, Information to be provided where personal data are collected from the data subject] If a plugin collects or handles personal data, it needs to provide privacy policy texts that explain what personal data is being collected and for what purpose. The texts are meant to be added to the privacy policy of the websites that deploy the plugin. 


            
[Art.17, Right to erasure] If a plugin stores personal data in a custom database they create or manage, or through Wordpress's native storage functions (e.g., update_user_meta), it needs to provide methods for users to erase the data upon request. Note that deleting data for all users upon uninstallation does not satisfy the requirement. 


            
        

2. How do I make my plugin compliant?

Please refer to the fix report below to see how you can make your plugin comply with GDPR.

        

##################
### Fix Report ###
##################

############################
# Data Deletion Fix Report #
############################

This report suggests fixes to comply with the GDPR Art. 17, Right to erasure (https://gdpr-info.eu/art-17-gdpr/). The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/adding-the-personal-data-eraser-to-your-plugin/ for more details.

1) Implement a function that deletes all the user data collected in the plugin. Sample code:


/**
* Removes all collected data of a user.
*
* @param string $email_address   email address to manipulate
* @param int    $page            pagination
*
* @return array
*/
function affiliate-mlm-party-plan_remove_data( $email_address, $page = 1 ) {
    
    $page = (int) $page;


    //TODO: Delete the user data that was stored using Wordpress functions

    //Below is the sample code for deleting user meta and may need to be modified to suit the plugin.
    $user_id = get_user_by('email', $email_address)
    $key = 'email' //Sample user meta key
    if ( $customer->user_id > 0 ) {
        //Delete user meta data by $key
        delete_user_meta( $user_id, $key );
    }
        



    // Tell core if we have more data to delete still
    $done = true;
    return array(
        'items_removed'  => $items_removed, // true if collected data of a user is being deleted
        'items_retained' => $items_retained, // true if certain data needs to be retained
        'messages'       => sprintf( __( 'Data of user with email %s successfully deleted.', 'affiliate-mlm-party-plan' ), $email_address ), // Put messages for data removal
        'done'           => $done, // true if all the removal processes are done (all data of the user is removed)
    );
}
        

2) Hook the deletion function to the Wordpress's Personal Data Removal tool


/**
* Registers all data erasers.
*
* @param array $exporters
*
* @return mixed
*/
function affiliate-mlm-party-plan_register_privacy_erasers( $erasers ) {
    $erasers['my-plugin-slug'] = array(
        'eraser_friendly_name' => __( '<eraser name>', 'affiliate-mlm-party-plan' ),
        'callback'             => 'affiliate-mlm-party-plan_remove_data',
    );
    return $erasers;
}
        

add_filter( 'wp_privacy_personal_data_erasers', 'affiliate-mlm-party-plan_register_privacy_erasers' );
        

        

#############################
# Privacy Policy Fix Report #
#############################

This report suggests fixes to comply with the GDPR Art. 13 (https://gdpr-info.eu/art-13-gdpr/) through including a privacy notice. The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/suggesting-text-for-the-site-privacy-policy/ for more details.

1) Implement a function that includes the privacy policy for the plugin and provide it to wordpress through wp_add_privacy_policy_content(). Sample code:


/**
* Adds a privacy policy statement.
*/
function affiliate-mlm-party-plan_add_privacy_policy_content() {
    if ( ! function_exists( 'wp_add_privacy_policy_content' ) ) {
        return;
    }
    //TODO: modify the content below to include the privacy policy for the plugin.
    $content = '<p class="privacy-policy-tutorial">' . __( 'Some introductory content for the suggested text.', 'affiliate-mlm-party-plan' ) . '</p>'
            . '<strong class="privacy-policy-tutorial">' . __( 'Suggested Text:', 'affiliate-mlm-party-plan' ) . '</strong> '
            . sprintf(
                __( 'When you leave a comment on this site, we send your name, email address, IP address and comment text to example.com. Example.com does not retain your personal data. The example.com privacy policy is <a href="%1$s" target="_blank">here</a>.', 'affiliate-mlm-party-plan' ),
                'https://example.com/privacy-policy'
            );
    wp_add_privacy_policy_content( 'affiliate-mlm-party-plan', wp_kses_post( wpautop( $content, false ) ) );
}
        

2) Hook the privacy policy function to the Wordpress's admin initialization action.


add_action( 'admin_init', 'affiliate-mlm-party-plan_add_privacy_policy_content' );
        

        


Disclaimer: The sample code provided above is only for reference and does not guarantee GDPR compliance. The recommended list of data to delete/export may not be comprehensive. 
        
Done.
