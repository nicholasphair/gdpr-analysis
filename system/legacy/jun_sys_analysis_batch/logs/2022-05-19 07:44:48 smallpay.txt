Timeout in resolving values
Timeout in running neo4j query
Running Main.py on smallpay

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.531810.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:00.874059.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 105 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.740909.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 2 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.577699.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 599 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:00.897329.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 22 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:01.056634.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
Added 1 PHP_REACHES edges.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.082511.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 281 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:04.198977.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 5496
Added 4486 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 5773
Added 277 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.225380.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smallpay/smallpay.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smallpay/includes/class-wc-gateway-smallpay-admin-order-details.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smallpay/includes/class-wc-gateway-smallpay-api.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smallpay/includes/class-wc-gateway-smallpay-configuration.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smallpay/includes/class-wc-gateway-smallpay-logger.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smallpay/includes/class-wc-gateway-smallpay-order-payment-info.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smallpay/includes/class-wc-gateway-smallpay.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smallpay/includes/config_smallpay.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smallpay/includes/constant_smallpay.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smallpay/includes/configs/smallpay_prod.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smallpay/includes/configs/smallpay_staging.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smallpay/includes/configs/smallpay_svil.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smallpay/templates/details_payment_xpay.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smallpay/templates/form.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smallpay/templates/installments_plan.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smallpay/templates/smallpay_widget.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smallpay/templates/tos.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/smallpay/templates/wc_smallpay_myorder.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:01.584132.

105 PHP_REACHES edges created
2 REACHES edges created
599 PHP_REACHES edges created
21 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
4769 PHP_REACHES edges created
277 PHP_REACHES edges created
5773 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 1934 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.084142.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 1 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:03.723353.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 74 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:02.456654.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 61 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.153821.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.565086.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.584037.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.011376.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.038070.

1 CALLS edges created
135 PHP_REACHES edges created
136 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 120 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.127435.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
1 SQL operations to process.
The following function calls could not successfully be analyzed for SQL content: [4644]
Added 0 SQL nodes. 0 out of 1 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:00.239042.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'$id'' cannot be parsed correct.
HTML code '$'selected($id, $_GET["_shop_order_payment_method"], false)'' cannot be parsed correct.
HTML code '$'$gateway->get_method_title()'' cannot be parsed correct.
HTML code '$'<div class="smallpay-custom-field-wrapper" ><span class="smallpay-custom-badge" style="text-transform: uppercase;padding: 3px;width: 100%;max-width: 400px;margin-bottom: 1em;border: 1px solid;border-radius: 3px;/*color: black;border-color: black;*/display: inline-block;margin-top: 1em;"">product available in $this_sp_max_installments installments</span></div>'' cannot be parsed correct.
HTML code '$'<div class="smallpay-custom-field-wrapper" style="background-color: lightgrey; border-left-color: #f8b250; border-left-style: outset; padding: 15px; max-width: 600px; display: block; margin-bottom: 30px;""><table style="margin: 0;"><tr><td style="border: 0; vertical-align: middle; padding: 0; background-color: lightgrey; padding-right: 8px;"><h5 style="padding-left: 10px; margin: 0; font-weight: bold;">INSTALLABLE PRODUCT</h5></td><td rowspan="2" style="border: 0; vertical-align: middle; padding: 0; background-color: lightgrey; width: 115px;"><img src=plugins_url("assets/images/smallpay.png", plugin_dir_path()) style="max-height: 45px; float: right;"></td></tr><tr><td style="border: 0; vertical-align: middle; padding: 0; background-color: lightgrey; padding-right: 8px;"><h6 style="padding-left:10px; margin: 0;">you can pay this products in $this_sp_max_installments installments</h6></td></tr></table></div>'' cannot be parsed correct.
HTML code '$'Payment in installments get_post_meta($post->ID, "_payment_method", true)'' cannot be parsed correct.
HTML code '$'Credit card get_post_meta($post->ID, "_payment_method", true)'' cannot be parsed correct.
HTML code '$'null'' cannot be parsed correct.
HTML code '$'0/count($data->installments)'' cannot be parsed correct.
HTML code '$'null'' cannot be parsed correct.
HTML code '$'__SMALLPAY_ICON_KO__'' cannot be parsed correct.
HTML code '$'null'' cannot be parsed correct.
HTML code '$'Choose the number of installments'' cannot be parsed correct.
HTML code '$'<option value="1" selected="selected">>Single solution</option>'' cannot be parsed correct.
HTML code '$'<option value=$minCartInstallments selected="selected">>$minCartInstallments</option>'' cannot be parsed correct.
HTML code '$'Credit card via SmallPay'' cannot be parsed correct.
HTML code '$'admin_url()'' cannot be parsed correct.
HTML code '$'$maxCartInstallments'' cannot be parsed correct.
HTML code '$'you have chosen to make the payment in a single solution of â¬'' cannot be parsed correct.
HTML code '$'$maxCartInstallments'' cannot be parsed correct.
HTML code '$'$totalFormatted'' cannot be parsed correct.
HTML code '$'your installment plan will be:'' cannot be parsed correct.
HTML code '$'Installment nÂ°'' cannot be parsed correct.
HTML code '$'Installment price'' cannot be parsed correct.
HTML code '$'Installment of'' cannot be parsed correct.
HTML code '$'First payment'' cannot be parsed correct.
HTML code '$'$first_installment_amount'' cannot be parsed correct.
HTML code '$'$date->format("m/Y")'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'$installment_amount'' cannot be parsed correct.
HTML code '$'$date->format("m/Y")'' cannot be parsed correct.
HTML code '$'Total'' cannot be parsed correct.
HTML code '$'$totalFormatted'' cannot be parsed correct.
HTML code '$'$logo'' cannot be parsed correct.
HTML code '$'$ok'' cannot be parsed correct.
HTML code '$'$okText'' cannot be parsed correct.
HTML code '$'$ko'' cannot be parsed correct.
HTML code '$'$koText'' cannot be parsed correct.
HTML code '$'$completed'' cannot be parsed correct.
HTML code '$'$completedText'' cannot be parsed correct.
HTML code '$'<div class="error"><p>SmallPay is inactive because WooCommerce is not installed.</p></div>'' cannot be parsed correct.
HTML code '$'Installments Information'' cannot be parsed correct.
HTML code '$'Nr.'' cannot be parsed correct.
HTML code '$'Amount'' cannot be parsed correct.
HTML code '$'Expected Date'' cannot be parsed correct.
HTML code '$'Payment Date'' cannot be parsed correct.
HTML code '$'Paid'' cannot be parsed correct.
HTML code '$'First payment$i'' cannot be parsed correct.
HTML code '$'â¬ number_format($set->amount, 2, ",", "")'' cannot be parsed correct.
HTML code '$'$expDate->format("d/m/Y")'' cannot be parsed correct.
HTML code '$'$actDate->format("d/m/Y")'' cannot be parsed correct.
HTML code '$'__SMALLPAY_ICON_OK__'' cannot be parsed correct.
HTML code '$'__SMALLPAY_ICON_KO__'' cannot be parsed correct.
HTML code '$' <a href=$aOrderInstallments" target="_blank">Download your contract</a> fore the installment plan by SmallPay'' cannot be parsed correct.
HTML code '$'Installments Information'' cannot be parsed correct.
HTML code '$'Nr.'' cannot be parsed correct.
HTML code '$'Amount'' cannot be parsed correct.
HTML code '$'Expected Date'' cannot be parsed correct.
HTML code '$'Payment Date'' cannot be parsed correct.
HTML code '$'Paid'' cannot be parsed correct.
HTML code '$'First payment$i'' cannot be parsed correct.
HTML code '$'â¬ number_format($set->amount, 2, ",", "")'' cannot be parsed correct.
HTML code '$'$expDate->format("d/m/Y")'' cannot be parsed correct.
HTML code '$'$actDate->format("d/m/Y")'' cannot be parsed correct.
HTML code '$'__SMALLPAY_ICON_OK__'' cannot be parsed correct.
HTML code '$'__SMALLPAY_ICON_KO__'' cannot be parsed correct.
HTML code '$' <a href=$aOrderInstallments" target="_blank">Download your contract</a> fore the installment plan by SmallPay'' cannot be parsed correct.
HTML code '$'Install the amount, choose the number of installments (from $minCartInstallments to $maxCartInstallments) and insert yours credit card! The installments will be charged to you every first day of every month up to the deadline.'' cannot be parsed correct.
HTML code '$'I confirm that I have read and accepted the <a href=site_url()/?tos=1" target="_blank">contractual conditions</a>'' cannot be parsed correct.
HTML code '$'">
    <input type="hidden" value="'' cannot be parsed correct.
HTML code '$'" id="smallpay_xpay_maxInstallments">
    <input type="hidden" name="oneInstallmentText" id="oneInstallmentText" value="'' cannot be parsed correct.
HTML code '$'">
    <input type="hidden" name="installments" id="installments" value="'' cannot be parsed correct.
HTML code '$'">
    <input type="hidden" id="total-formated" value="'' cannot be parsed correct.
HTML code '$'">
</div'' cannot be parsed correct.
HTML code '$'</p>
    <table class="shop_table woocommerce-checkout-review-order-table smallpay-table" >
        <tr class="cart_item">
            <th class="product-name smallpay-installment" >'' cannot be parsed correct.
HTML code '$'</th>
            <th class="product-total smallpay-amount" >'' cannot be parsed correct.
HTML code '$'</th>
            <th class="product-name smallpay-date" >'' cannot be parsed correct.
HTML code '$'</th>
        </tr>
        <tr class="cart_item">
            <td class="product-name smallpay-installment" >'' cannot be parsed correct.
HTML code '$'</td>
            <td class="product-total smallpay-amount" >â¬ '' cannot be parsed correct.
HTML code '$'</td>
            <td class="product-name smallpay-date" >'' cannot be parsed correct.
HTML code '$'</td>
        </tr>

        '' cannot be parsed correct.
HTML code '$'</td>
                <td class="product-total smallpay-amount" >â¬ '' cannot be parsed correct.
HTML code '$'</td>
                <td class="product-name smallpay-date" >'' cannot be parsed correct.
HTML code '$'</td>
            </tr>
            '' cannot be parsed correct.
HTML code '$'</td>
            <td class="product-total smallpay-amount">â¬ '' cannot be parsed correct.
HTML code '$'</td>
        </tr>
    </table>
    '' cannot be parsed correct.
HTML code '$'" style="margin-left: auto;margin-right: auto;display: block;padding-bottom: 10px;">
    </div>
    <ul class="wc_status_list" style="overflow: hidden">
        <li style="margin: 0 -12px;padding: 8px 12px 4px;width:50%;display: block;float:left;text-align:center;">
            <h1><strong><span style="color:green;font-size:50px;">'' cannot be parsed correct.
HTML code '$'</span></strong></h1>
            '' cannot be parsed correct.
HTML code '$'        </li>
        <li style="margin: 0 -12px;padding: 8px 12px 4px;width:50%;display: block;float:left;text-align:center;">
            <h1><strong><span style="color:red;font-size:50px;">'' cannot be parsed correct.
HTML code '$'</span></strong></h1>
            '' cannot be parsed correct.
HTML code '$'        </li>
        <li style="margin: 0 -12px;padding: 8px 12px 4px;width:100%;display: block;float:left;text-align:center;margin-top: 20px;">
            <h1><strong><span style="color:black;font-size:50px;">'' cannot be parsed correct.
HTML code '$'</span></strong></h1>
                    '' cannot be parsed correct.
HTML code '$'        </li>
    </ul>
</div>
'' cannot be parsed correct.
HTML code '$'</th>
                                <th>'' cannot be parsed correct.
HTML code '$'</th>
                                <th>'' cannot be parsed correct.
HTML code '$'</th>
                                <th>'' cannot be parsed correct.
HTML code '$'</th>
                                <th>'' cannot be parsed correct.
HTML code '$'</th>
                            </tr>
                        </thead>
                        <tbody>
                            '' cannot be parsed correct.
HTML code '$'</td>
                                    <td>'' cannot be parsed correct.
HTML code '$'</td>
                                    <td>
                                        '' cannot be parsed correct.
HTML code '$'</th>
                    <th style="text-align: center;">'' cannot be parsed correct.
HTML code '$'</th>
                    <th style="text-align: center;">'' cannot be parsed correct.
HTML code '$'</th>
                    <th style="text-align: center;">'' cannot be parsed correct.
HTML code '$'</th>
                    <th style="text-align: center;">'' cannot be parsed correct.
HTML code '$'</th>
                </tr>
            </thead>
            <tbody>
                '' cannot be parsed correct.
HTML code '$'</td>
                        <td style="text-align: center;">'' cannot be parsed correct.
HTML code '$'</td>
                        <td style="text-align: center;">
                            '' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:11.204031.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.045193.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 0 do_action/apply_filters calls and 29 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:01.007191.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FileProDetector
### Start running FrontBaseDetector
### Finish running CubridDetector
### Start running HashDetector
### Finish running DbaseDetector
### Start running IBMDb2Detector
### Finish running DbplusDetector
### Start running InformixDetector
### Finish running FirebirdInterBaseDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running MongoDbDetector
### Start running OpenSSLDetector
### Finish running Oci8Detector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running ArrayElementDetector
### Start running PhpCurlDetector
### Finish running PasswordHashingDetector
### Start running PHPDataObjectDetector
### Finish running HashDetector
### Start running PHPIncludedDetector
### Finish running PHPDataObjectDetector
### Start running PHPRetrievalDetector
### Finish running PhpCurlDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running OpenSSLDetector
### Start running PhpVarDetector
### Finish running PHPStorageDetector
### Start running PostgreSQLDetector
### Finish running PhpVarDetector
### Start running PropertyDetector
### Finish running PHPRetrievalDetector
### Start running Sqlite3Detector
### Finish running PostgreSQLDetector
### Start running SqliteDetector
### Finish running SqliteDetector
### Start running SqlServerDetector
### Finish running PHPIncludedDetector
### Start running SybaseDetector
### Finish running PropertyDetector
### Start running TokyoTyrantDetector
### Finish running SybaseDetector
### Start running UserInputDetector
### Finish running Sqlite3Detector
### Start running VariableDetector
### Finish running TokyoTyrantDetector
### Start running WordpressHashingFnDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRemoteDetector
### Finish running SqlServerDetector
### Start running WordPressRetrievalDetector
### Finish running maxdbDetector
### Start running WordPressStorageDetector
### Finish running MySQLiDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running VariableDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running GenericDatabaseUsageDetector
### Start running UninstallDetector
### Finish running UserInputDetector
### Finish running WordPressStorageDetector
### Finish running WordPressRemoteDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running WordPressRetrievalDetector
### Finished running detectors
includes/class-wc-gateway-smallpay-api.php:133
  - SHA1 called with parameters [service, serviceSmallpay=, domain=, this, paymentId=, secret, domain, uniqueId=]. Ignore if [service, serviceSmallpay=, domain=, this, paymentId=, secret, domain, uniqueId=] does not contain personal information.
includes/class-wc-gateway-smallpay-api.php:156
  - SHA1 called with parameters [service, serviceSmallpay=, domain=, this, paymentId=, secret, orderReference, domain, uniqueId=]. Ignore if [service, serviceSmallpay=, domain=, this, paymentId=, secret, orderReference, domain, uniqueId=] does not contain personal information.
includes/class-wc-gateway-smallpay-api.php:200
  - SHA1 called with parameters [serviceSmallpay=, domain=, this, paymentId=, secret, orderReference, domain, uniqueId=]. Ignore if [serviceSmallpay=, domain=, this, paymentId=, secret, orderReference, domain, uniqueId=] does not contain personal information.
includes/class-wc-gateway-smallpay.php:913
  - SHA1 called with parameters [sp_secret, timestamp, domain=, this, request, settings, paymentId=, timestamp=, domain, uniqueId=, paymentId]. Ignore if [sp_secret, timestamp, domain=, this, request, settings, paymentId=, timestamp=, domain, uniqueId=, paymentId] does not contain personal information. 

includes/class-wc-gateway-smallpay.php:903
  - RETRIEVAL call to file_get_contents("php://input").
  - Data types: file 

includes/class-wc-gateway-smallpay-api.php:234
  - API call to wp_remote_post($url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote 

includes/class-wc-gateway-smallpay-admin-order-details.php:29
  - RETRIEVAL call to get_post_field("ID") alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $field (string). Returns (string).
  - Data types: post, wp_post, post_meta
includes/class-wc-gateway-smallpay-admin-order-details.php:46
  - RETRIEVAL call to get_post_field("ID") alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $field (string). Returns (string).
  - Data types: post, wp_post, post_meta
includes/class-wc-gateway-smallpay-admin-order-details.php:55
  - RETRIEVAL call to get_post_meta(get_post_field("ID"), "smallpay_installments", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-wc-gateway-smallpay-admin-order-details.php:55
  - RETRIEVAL call to get_post_field("ID") alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $field (string). Returns (string).
  - Data types: post, wp_post, post_meta
includes/class-wc-gateway-smallpay-order-payment-info.php:58
  - RETRIEVAL call to get_post_meta($this->order_id, "xpay_details_order", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-wc-gateway-smallpay.php:194
  - RETRIEVAL call to get_option("woocommerce_smallpay_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class-wc-gateway-smallpay.php:295
  - RETRIEVAL call to get_post_meta($post->ID, "smallpay_installments", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-wc-gateway-smallpay.php:296
  - RETRIEVAL call to get_post_meta($post->ID, "smallpay_installments", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-wc-gateway-smallpay.php:298
  - RETRIEVAL call to get_post_meta($post->ID, "smallpay_installments", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-wc-gateway-smallpay.php:304
  - RETRIEVAL call to get_post_meta($post->ID, "_payment_method", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-wc-gateway-smallpay.php:306
  - RETRIEVAL call to get_post_meta($post->ID, "_payment_method", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-wc-gateway-smallpay.php:330
  - RETRIEVAL call to get_post_meta($post->ID, "smallpay_installments", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-wc-gateway-smallpay.php:331
  - RETRIEVAL call to get_post_meta($post->ID, "smallpay_installments", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-wc-gateway-smallpay.php:333
  - RETRIEVAL call to get_post_meta($post->ID, "smallpay_installments", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-wc-gateway-smallpay.php:386
  - RETRIEVAL call to get_post_meta($orders_id, "smallpay_installments", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-wc-gateway-smallpay.php:387
  - RETRIEVAL call to get_post_meta($orders_id, "smallpay_installments", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-wc-gateway-smallpay.php:443
  - RETRIEVAL call to get_post_meta($order_id, "smallpay_installments", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-wc-gateway-smallpay.php:868
  - RETRIEVAL call to get_option("woocommerce_smallpay_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class-wc-gateway-smallpay.php:938
  - RETRIEVAL call to get_option("woocommerce_smallpay_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class-wc-gateway-smallpay.php:944
  - RETRIEVAL call to get_option("woocommerce_smallpay_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class-wc-gateway-smallpay.php:963
  - RETRIEVAL call to get_option("woocommerce_smallpay_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
smallpay.php:109
  - RETRIEVAL call to get_option("active_plugins", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
smallpay.php:192
  - RETRIEVAL call to get_option("active_plugins", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option 

includes/class-wc-gateway-smallpay-order-payment-info.php:48
  - STORAGE call to update_post_meta($this->order_id, "xpay_details_order", json_encode(wc_clean($info))) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-wc-gateway-smallpay.php:197
  - STORAGE call to update_option("woocommerce_smallpay_settings", $option) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-wc-gateway-smallpay.php:864
  - STORAGE call to update_post_meta($orderIds["post_id"], "smallpay_installments", json_encode($response)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-wc-gateway-smallpay.php:933
  - STORAGE call to update_post_meta($orderIds["post_id"], "smallpay_installments", json_encode($request)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta 

By data type:
file
	PHPRetrievalDetector.file_get_contents("php://input") - {'file'}
none
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
option
	WordPressRetrievalDetector.get_option("active_plugins", []) - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_smallpay_settings") - {'option'}
	WordPressRetrievalDetector.get_option("active_plugins", []) - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_smallpay_settings") - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_smallpay_settings") - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_smallpay_settings") - {'option'}
	WordPressStorageDetector.update_option("woocommerce_smallpay_settings", $option) - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_smallpay_settings") - {'option'}
post
	WordPressRetrievalDetector.get_post_field("ID") - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post_field("ID") - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post_field("ID") - {'post', 'wp_post', 'post_meta'}
post_meta
	WordPressRetrievalDetector.get_post_field("ID") - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "smallpay_installments", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "smallpay_installments", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "smallpay_installments", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_field("ID") - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "smallpay_installments", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($this->order_id, "xpay_details_order", json_encode(wc_clean($info))) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "smallpay_installments", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($orderIds["post_id"], "smallpay_installments", json_encode($response)) - {'post_meta'}
	WordPressRetrievalDetector.get_post_field("ID") - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "_payment_method", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "smallpay_installments", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "_payment_method", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "smallpay_installments", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($this->order_id, "xpay_details_order", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($orders_id, "smallpay_installments", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($orderIds["post_id"], "smallpay_installments", json_encode($request)) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($orders_id, "smallpay_installments", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_post_field("ID"), "smallpay_installments", true) - {'post_meta'}
remote
	WordPressRemoteDetector.(unknown) - {'remote'}
wp_post
	WordPressRetrievalDetector.get_post_field("ID") - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post_field("ID") - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post_field("ID") - {'post', 'wp_post', 'post_meta'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:09.414117.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 55 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.204459.

55 STORE_REACHES edges created
55 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
In total, tainted 0 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 4 nodes as ENCRYPTED
In total, tainted 4 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:00.366914.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:00:58.883286!
SHA1 called with parameters [service, serviceSmallpay=, domain=, this, paymentId=, secret, domain, uniqueId=]. Ignore if [service, serviceSmallpay=, domain=, this, paymentId=, secret, domain, uniqueId=] does not contain personal information.,sha1,None
SHA1 called with parameters [service, serviceSmallpay=, domain=, this, paymentId=, secret, orderReference, domain, uniqueId=]. Ignore if [service, serviceSmallpay=, domain=, this, paymentId=, secret, orderReference, domain, uniqueId=] does not contain personal information.,sha1,None
SHA1 called with parameters [serviceSmallpay=, domain=, this, paymentId=, secret, orderReference, domain, uniqueId=]. Ignore if [serviceSmallpay=, domain=, this, paymentId=, secret, orderReference, domain, uniqueId=] does not contain personal information.,sha1,None
SHA1 called with parameters [sp_secret, timestamp, domain=, this, request, settings, paymentId=, timestamp=, domain, uniqueId=, paymentId]. Ignore if [sp_secret, timestamp, domain=, this, request, settings, paymentId=, timestamp=, domain, uniqueId=, paymentId] does not contain personal information.,sha1,None
RETRIEVAL call to file_get_contents("php://input").,None,None
API call to wp_remote_post($url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
RETRIEVAL call to get_post_field("ID") alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $field (string). Returns (string).,None,None
RETRIEVAL call to get_post_field("ID") alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $field (string). Returns (string).,None,None
RETRIEVAL call to get_post_field("ID") alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $field (string). Returns (string).,None,None
RETRIEVAL call to get_post_meta(get_post_field("ID"), "smallpay_installments", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($this->order_id, "xpay_details_order", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_smallpay_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "smallpay_installments", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "smallpay_installments", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "smallpay_installments", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "_payment_method", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "_payment_method", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "smallpay_installments", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "smallpay_installments", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "smallpay_installments", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($orders_id, "smallpay_installments", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($orders_id, "smallpay_installments", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "smallpay_installments", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_smallpay_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_smallpay_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_smallpay_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_smallpay_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("active_plugins", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("active_plugins", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
STORAGE call to update_post_meta($this->order_id, "xpay_details_order", json_encode(wc_clean($info))) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("woocommerce_smallpay_settings", $option) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($orderIds["post_id"], "smallpay_installments", json_encode($response)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($orderIds["post_id"], "smallpay_installments", json_encode($request)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found no personal data in the plugin. No analysis needed. 

[main] Complaint? True 

No findings
