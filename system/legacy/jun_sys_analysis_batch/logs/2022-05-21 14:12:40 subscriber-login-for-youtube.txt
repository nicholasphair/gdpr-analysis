Timeout in resolving values
Timeout in running neo4j query
Running Main.py on subscriber-login-for-youtube

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.486970.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:00.881938.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 247 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.784218.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 0 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.391257.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 729 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:01.328000.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 33 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:01.507721.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
Added 9 PHP_REACHES edges.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.083549.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 327 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:04.233832.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 5297
Added 3952 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 5297
Added 0 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.379301.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/subscriber-login-for-youtube/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/subscriber-login-for-youtube/subscriber-login-for-youtube.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/subscriber-login-for-youtube/uninstall.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/subscriber-login-for-youtube/src/Admin/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/subscriber-login-for-youtube/src/Admin/Setting.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/subscriber-login-for-youtube/src/Site/GoogleOauth2.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/subscriber-login-for-youtube/src/Site/GoogleUser.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/subscriber-login-for-youtube/src/Site/HttpClient.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/subscriber-login-for-youtube/src/Site/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/subscriber-login-for-youtube/src/Site/Option.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/subscriber-login-for-youtube/src/Site/Plugin.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/subscriber-login-for-youtube/src/Site/Query.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/subscriber-login-for-youtube/src/Site/Session.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/subscriber-login-for-youtube/src/Site/User.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/subscriber-login-for-youtube/src/Site/YouTubeOauth2.php' cannot be parsed correct.
Added new directory node for: vendor
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/subscriber-login-for-youtube/vendor/autoload.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/subscriber-login-for-youtube/vendor/autoload.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: composer
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/subscriber-login-for-youtube/vendor/composer/autoload_classmap.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/subscriber-login-for-youtube/vendor/composer/autoload_classmap.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: composer
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/subscriber-login-for-youtube/vendor/composer/autoload_namespaces.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/subscriber-login-for-youtube/vendor/composer/autoload_namespaces.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: composer
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/subscriber-login-for-youtube/vendor/composer/autoload_psr4.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/subscriber-login-for-youtube/vendor/composer/autoload_psr4.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: composer
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/subscriber-login-for-youtube/vendor/composer/autoload_real.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/subscriber-login-for-youtube/vendor/composer/autoload_real.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: composer
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/subscriber-login-for-youtube/vendor/composer/autoload_static.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/subscriber-login-for-youtube/vendor/composer/autoload_static.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: composer
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/subscriber-login-for-youtube/vendor/composer/ClassLoader.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/subscriber-login-for-youtube/vendor/composer/ClassLoader.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: composer
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/subscriber-login-for-youtube/vendor/composer/installed.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/subscriber-login-for-youtube/vendor/composer/installed.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: composer
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/subscriber-login-for-youtube/vendor/composer/InstalledVersions.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/subscriber-login-for-youtube/vendor/composer/InstalledVersions.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: composer
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/subscriber-login-for-youtube/vendor/composer/platform_check.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/subscriber-login-for-youtube/vendor/composer/platform_check.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:02.323274.

39 Nodes Created
1000 PHP_REACHES edges created
1007 PHP_REACHES edges created
2 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
4288 PHP_REACHES edges created
2 DIRECTORY_OF edges created
1 FILE_OF edges created
3 DIRECTORY_OF edges created
1 FILE_OF edges created
3 DIRECTORY_OF edges created
1 FILE_OF edges created
3 DIRECTORY_OF edges created
1 FILE_OF edges created
3 DIRECTORY_OF edges created
1 FILE_OF edges created
3 DIRECTORY_OF edges created
1 FILE_OF edges created
3 DIRECTORY_OF edges created
1 FILE_OF edges created
3 DIRECTORY_OF edges created
1 FILE_OF edges created
3 DIRECTORY_OF edges created
1 FILE_OF edges created
3 DIRECTORY_OF edges created
1 FILE_OF edges created
5336 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 1846 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.045404.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 29 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.964840.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 125 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:05.404422.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 172 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.184207.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.070650.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:01.126531.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.029504.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.032802.

29 CALLS edges created
297 PHP_REACHES edges created
326 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 357 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.147732.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
14 SQL operations to process.
code
SQL command (code) cannot be parsed correct.
state
SQL command (state) cannot be parsed correct.
$this->query->getActionkey()
SQL command ($this->query->getActionkey()) cannot be parsed correct.
user_id
SQL command (user_id) cannot be parsed correct.
$this->query->get($this->query->getActionkey())
SQL command ($this->query->get($this->query->getActionkey())) cannot be parsed correct.
$this->query->getLoginKey()
SQL command ($this->query->getLoginKey()) cannot be parsed correct.
$this->query->get($this->query->getLoginKey())
SQL command ($this->query->get($this->query->getLoginKey())) cannot be parsed correct.
DELETE FROM `$wpdb` WHERE `meta_key` IN ('subscriber_login_for_youtube_picture$s', '%2$s', '%3$s', '%4$s')
DELETE FROM `$wpdb` WHERE `meta_key` IN ('subscriber_login_for_youtube_picture$s', 'subscriber_login_for_youtube_token$s', '%3$s', '%4$s')
DELETE FROM `$wpdb` WHERE `meta_key` IN ('subscrsubscriber_login_for_youtube_refresh_tokener_login_for_youtube_picture$s', 'subscriber_login_for_youtube_token$s', '%3$s', '%4$s')
DELETE FROM `$wpdb` WHERE `meta_key` IN ('subscrsubscriber_login_for_yousubscriber_login_for_youtube_expires_inbe_refresh_tokener_login_for_youtube_picture$s', 'subscriber_login_for_youtube_token$s', '%3$s', '%4$s')
DELETE FROM `$wpdb` WHERE `meta_key` IN ('subscrsubscriber_login_for_yousubscriber_login_for_youtube_expires_inbe_refresh_tokener_login_for_youtube_picture$s', 'subscriber_login_for_youtube_token$s', '%3$s', '%4$s')
SQL command (DELETE FROM `$wpdb` WHERE `meta_key` IN ('subscrsubscriber_login_for_yousubscriber_login_for_youtube_expires_inbe_refresh_tokener_login_for_youtube_picture$s', 'subscriber_login_for_youtube_token$s', '%3$s', '%4$s')) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [1199, 1899, 5441, 5459, 5632, 5639, 5649, 5661, 6021, 6046, 6053, 6067, 7514, 8536]
Added 0 SQL nodes. 0 out of 14 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:02.799324.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'<input id=\'$args_label_for\' name=\'$this->option->getName()[$this->option->removeName($inputId)]\' type=\'text\' value=\'$this->option->get($optionKey)\'>'' cannot be parsed correct.
HTML code '$'<input id=\'$args_label_for\' name=\'$this->option->getName()[$this->option->removeName($inputId)]\' type=\'checkbox\'checked(1, $value, false)>'' cannot be parsed correct.
HTML code '$'<div class="settings_section_text">'' cannot be parsed correct.
HTML code '$'<div id=\'$args_label_for\'>'' cannot be parsed correct.
HTML code '$'<input id=\'$args_label_for_basic\' name=\'$this->option->getName()[$this->option->removeName($inputId)]\' type=\'radio\' value=\'0\'checked(0, $value, false)>'' cannot be parsed correct.
HTML code '$'<label for=\'$args_label_for_basic\'>Basic</label>'' cannot be parsed correct.
HTML code '$'<input id=\'$args_label_for_full\' name=\'$this->option->getName()[$this->option->removeName($inputId)]\' type=\'radio\' value=\'1\'checked(1, $value, false)>'' cannot be parsed correct.
HTML code '$'<label for=\'$args_label_for_full\'>Full</label>'' cannot be parsed correct.
HTML code '$'<select id=\'$args_label_for\' name=\'$this->option->getName()[$this->option->removeName($inputId)]\'>'' cannot be parsed correct.
HTML code '$'<div class="settings_section_text">'' cannot be parsed correct.
HTML code '$'<div class="settings_section_text">'' cannot be parsed correct.
HTML code '$'<div class="settings_section_text">'' cannot be parsed correct.
HTML code '$'<div class="wrap">'' cannot be parsed correct.
HTML code '$'</div></form></div>'' cannot be parsed correct.
HTML code '$'plugins_url($this->option->getPluginSlug() . "/resources" . $path)'' cannot be parsed correct.
HTML code '$'$this->yt->with($params)->redirect($state)'' cannot be parsed correct.
HTML code '$'<div class="login message">wp_kses_post(wpautop($message))</div>'' cannot be parsed correct.
HTML code '$'<h2>Google account</h2>PHP_EOL'' cannot be parsed correct.
HTML code '$'wp_kses_post($message)'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'</select>'' cannot be parsed correct.
HTML code '$'Sorry! I\'m just a WordPress plugin. I don\'t work alone. ;)'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:03.815799.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.040335.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 2 do_action/apply_filters calls and 16 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.687246.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FileProDetector
### Start running FrontBaseDetector
### Finish running DbaseDetector
### Start running HashDetector
### Finish running CubridDetector
### Start running IBMDb2Detector
### Finish running DbplusDetector
### Start running InformixDetector
### Finish running FrontBaseDetector
### Start running IngresDetector
### Finish running FirebirdInterBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running MongoDbDetector
### Start running OpenSSLDetector
### Finish running Oci8Detector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running ArrayElementDetector
### Start running PhpCurlDetector
### Finish running HashDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PasswordHashingDetector
### Start running PHPRetrievalDetector
### Finish running PhpCurlDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running OpenSSLDetector
### Start running PhpVarDetector
### Finish running PhpVarDetector
### Start running PostgreSQLDetector
### Finish running PHPIncludedDetector
### Start running PropertyDetector
### Finish running PHPStorageDetector
### Start running Sqlite3Detector
### Finish running PHPRetrievalDetector
### Start running SqliteDetector
### Finish running SqliteDetector
### Start running SqlServerDetector
### Finish running PostgreSQLDetector
### Start running SybaseDetector
### Finish running Sqlite3Detector
### Start running TokyoTyrantDetector
### Finish running SybaseDetector
### Start running UserInputDetector
### Finish running maxdbDetector
### Start running VariableDetector
### Finish running MySQLiDetector
### Start running WordpressHashingFnDetector
### Finish running SqlServerDetector
### Start running WordPressRemoteDetector
### Finish running TokyoTyrantDetector
### Start running WordPressRetrievalDetector
### Finish running PropertyDetector
### Start running WordPressStorageDetector
### Finish running UserInputDetector
### Start running WP_UserDetector
### Finish running VariableDetector
### Start running GenericDatabaseUsageDetector
### Finish running WP_UserDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running WordpressHashingFnDetector
### Start running UninstallDetector
### Finish running GenericDatabaseUsageDetector
### Finish running WordPressRemoteDetector
### Finish running DeletionDetector
### Finish running UninstallDetector
### Finish running WordPressRetrievalDetector
### Finish running WordPressStorageDetector
### Finished running detectors
src/Site/Session.php:82
  - MD5 called with parameters [true, rand, uniqid]. Ignore if [true, rand, uniqid] does not contain personal information. 

src/Site/GoogleUser.php:114
  - object property '$this->email' of personal types {'email'} is found.
  - Data types: email
src/Site/GoogleUser.php:115
  - object property '$this->emailVerified' of personal types {'email'} is found.
  - Data types: email
src/Site/GoogleUser.php:170
  - object property '$this->email' of personal types {'email'} is found.
  - Data types: email
src/Site/GoogleUser.php:180
  - object property '$this->emailVerified' of personal types {'email'} is found.
  - Data types: email 

src/Site/GoogleOauth2.php:507
  - variable '$session_state' of personal types {'state'} is found.
  - Data types: state
src/Site/GoogleOauth2.php:534
  - variable '$session_state' of personal types {'state'} is found.
  - Data types: state
src/Site/Plugin.php:214
  - variable '$session_state' of personal types {'state'} is found.
  - Data types: state
src/Site/Plugin.php:215
  - variable '$session_state' of personal types {'state'} is found.
  - Data types: state
src/Site/User.php:187
  - variable '$email' of personal types {'email'} is found.
  - Data types: email 

src/Site/User.php:126
  - CRYPTOGRAPHY call to wp_update_user($userdata) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta 

src/Site/HttpClient.php:16
  - API call to wp_remote_get($url). Passed arguments: 0: $url (string). Returns (array|WP_Error).
  - Data types: remote
src/Site/HttpClient.php:37
  - API call to wp_remote_post($url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote 

src/Site/Option.php:66
  - RETRIEVAL call to get_option(self::"OPTION_NAME") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
src/Site/Option.php:86
  - RETRIEVAL call to get_option(self::"OPTION_NAME") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
src/Site/Plugin.php:188
  - RETRIEVAL call to get_userdata(get_current_user_id()) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
src/Site/Plugin.php:191
  - RETRIEVAL call to get_user_meta($user->ID, $this->option->addName("token"), true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
src/Site/User.php:59
  - RETRIEVAL call to wp_set_current_user($wpUser->ID, $wpUser->user_login) alters data types {'user_meta'}. Passed arguments: 0: $id (int), 1: $name (string). Returns (WP_User).
  - Data types: user_meta
src/Site/User.php:88
  - RETRIEVAL call to get_user_by("id", $wpUserId) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
src/Site/User.php:151
  - RETRIEVAL call to get_user_meta($userId, $this->option->addName("expires_in"), true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
src/Site/User.php:153
  - RETRIEVAL call to get_user_meta($userId, $this->option->addName("refresh_token"), true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
src/Site/User.php:173
  - RETRIEVAL call to get_user_meta($userId, $this->option->addName("refresh_token"), true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
src/Site/User.php:187
  - RETRIEVAL call to get_user_by("email", $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
src/Site/User.php:203
  - RETRIEVAL call to get_user_meta($profileuser->ID, $this->option->addName("refresh_token"), true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
src/Site/User.php:231
  - RETRIEVAL call to get_user_meta($userId, $this->option->addName("refresh_token"), true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
src/Site/User.php:258
  - RETRIEVAL call to get_user_by("email", $idOrEmail) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
src/Site/User.php:265
  - RETRIEVAL call to get_user_meta($userId, $this->option->addName("picture"), true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta 

src/Site/Option.php:76
  - STORAGE call to update_option(self::"OPTION_NAME", self::"DEFAULT", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
src/Site/Option.php:103
  - STORAGE call to update_option(self::"OPTION_NAME", $option, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
src/Site/Option.php:113
  - STORAGE call to delete_option(self::"OPTION_NAME") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
src/Site/User.php:86
  - STORAGE call to wp_insert_user($userdata) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
src/Site/User.php:92
  - STORAGE call to add_user_meta($wpUser->ID, $this->option->addName("picture"), $gu->getPicture(), true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).
  - Data types: user_meta
src/Site/User.php:93
  - STORAGE call to add_user_meta($wpUser->ID, $this->option->addName("token"), $gu->getToken()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta
src/Site/User.php:95
  - STORAGE call to add_user_meta($wpUser->ID, $this->option->addName("refresh_token"), $gu->getRefreshToken(), true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).
  - Data types: user_meta
src/Site/User.php:99
  - STORAGE call to add_user_meta($wpUser->ID, $this->option->addName("expires_in"), date("Y-m-d H:i:s", $expiresIn), true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).
  - Data types: user_meta
src/Site/User.php:126
  - STORAGE call to wp_update_user($userdata) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
src/Site/User.php:127
  - STORAGE call to update_user_meta($wpUser->ID, $this->option->addName("picture"), $gu->getPicture()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
src/Site/User.php:128
  - STORAGE call to update_user_meta($wpUser->ID, $this->option->addName("token"), $gu->getToken()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
src/Site/User.php:130
  - STORAGE call to update_user_meta($wpUser->ID, $this->option->addName("refresh_token"), $gu->getRefreshToken()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
src/Site/User.php:134
  - STORAGE call to update_user_meta($wpUser->ID, $this->option->addName("expires_in"), date("Y-m-d H:i:s", $expiresIn)) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
src/Site/User.php:156
  - STORAGE call to update_user_meta($userId, $this->option->addName("token"), $token) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
src/Site/User.php:159
  - STORAGE call to update_user_meta($userId, $this->option->addName("expires_in"), $expiresIn) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
src/Site/User.php:235
  - STORAGE call to update_user_meta($userId, $this->option->addName("token"), null) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
src/Site/User.php:236
  - STORAGE call to update_user_meta($userId, $this->option->addName("refresh_token"), null) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
src/Site/User.php:237
  - STORAGE call to update_user_meta($userId, $this->option->addName("expires_in"), null) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
uninstall.php:25
  - STORAGE call to delete_option($slug) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

src/Site/Option.php:113
  - DELETION call to delete_option(self::"OPTION_NAME") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:25
  - DELETION call to delete_option($slug) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

uninstall.php:25
  - Uninstall deletion call: DELETION call to delete_option($slug) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

By data type:
email
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
none
	PHPIncludedDetector.(unknown) - set()
option
	WordPressStorageDetector.update_option(self::"OPTION_NAME", self::"DEFAULT", false) - {'option'}
	DeletionDetector.delete_option(self::"OPTION_NAME") - {'option'}
	UninstallDetector.delete_option($slug) - {'option'}
	DeletionDetector.delete_option($slug) - {'option'}
	WordPressStorageDetector.delete_option(self::"OPTION_NAME") - {'option'}
	WordPressRetrievalDetector.get_option(self::"OPTION_NAME") - {'option'}
	WordPressStorageDetector.delete_option($slug) - {'option'}
	WordPressRetrievalDetector.get_option(self::"OPTION_NAME") - {'option'}
	WordPressStorageDetector.update_option(self::"OPTION_NAME", $option, false) - {'option'}
remote
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
state
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
user
	WordPressStorageDetector.wp_update_user($userdata) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $email) - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_update_user($userdata) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("id", $wpUserId) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $idOrEmail) - {'user', 'user_meta'}
	WordPressStorageDetector.wp_insert_user($userdata) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata(get_current_user_id()) - {'user', 'user_meta'}
user_meta
	WordPressStorageDetector.wp_update_user($userdata) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($wpUser->ID, $this->option->addName("picture"), $gu->getPicture()) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($wpUser->ID, $this->option->addName("token"), $gu->getToken()) - {'user_meta'}
	WordPressStorageDetector.add_user_meta($wpUser->ID, $this->option->addName("token"), $gu->getToken()) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($wpUser->ID, $this->option->addName("refresh_token"), $gu->getRefreshToken()) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($userId, $this->option->addName("token"), null) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($userId, $this->option->addName("expires_in"), null) - {'user_meta'}
	WordPressStorageDetector.add_user_meta($wpUser->ID, $this->option->addName("expires_in"), date("Y-m-d H:i:s", $expiresIn), true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $email) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_set_current_user($wpUser->ID, $wpUser->user_login) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($userId, $this->option->addName("refresh_token"), true) - {'user_meta'}
	WordpressHashingFnDetector.wp_update_user($userdata) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("id", $wpUserId) - {'user', 'user_meta'}
	WordPressStorageDetector.add_user_meta($wpUser->ID, $this->option->addName("refresh_token"), $gu->getRefreshToken(), true) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($userId, $this->option->addName("refresh_token"), null) - {'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $idOrEmail) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($userId, $this->option->addName("refresh_token"), true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($userId, $this->option->addName("picture"), true) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($userId, $this->option->addName("token"), $token) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($wpUser->ID, $this->option->addName("expires_in"), date("Y-m-d H:i:s", $expiresIn)) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($userId, $this->option->addName("expires_in"), $expiresIn) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user->ID, $this->option->addName("token"), true) - {'user_meta'}
	WordPressStorageDetector.wp_insert_user($userdata) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($userId, $this->option->addName("refresh_token"), true) - {'user_meta'}
	WordPressStorageDetector.add_user_meta($wpUser->ID, $this->option->addName("picture"), $gu->getPicture(), true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($profileuser->ID, $this->option->addName("refresh_token"), true) - {'user_meta'}
	WordPressRetrievalDetector.get_userdata(get_current_user_id()) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($userId, $this->option->addName("expires_in"), true) - {'user_meta'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:12.000066.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 188 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.225252.

188 STORE_REACHES edges created
188 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 346 nodes as PERSONAL
In total, tainted 346 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 311 nodes as ENCRYPTED
In total, tainted 311 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:13.563518.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:01:10.396639!
DELETION call to delete_option(self::"OPTION_NAME") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option($slug) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
MD5 called with parameters [true, rand, uniqid]. Ignore if [true, rand, uniqid] does not contain personal information.,md5,None
object property '$this->email' of personal types {'email'} is found.,,None
object property '$this->emailVerified' of personal types {'email'} is found.,,None
object property '$this->email' of personal types {'email'} is found.,,None
object property '$this->emailVerified' of personal types {'email'} is found.,,None
Uninstall deletion call: DELETION call to delete_option($slug) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
variable '$session_state' of personal types {'state'} is found.,,None
variable '$session_state' of personal types {'state'} is found.,,None
variable '$session_state' of personal types {'state'} is found.,,None
variable '$session_state' of personal types {'state'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
API call to wp_remote_get($url). Passed arguments: 0: $url (string). Returns (array|WP_Error).,https,[]
API call to wp_remote_post($url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,['https://accounts.google.com/o/oauth2/token', 'https://accounts.google.com/o/oauth2/token']
RETRIEVAL call to get_option(self::"OPTION_NAME") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"OPTION_NAME") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdata(get_current_user_id()) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_meta($user->ID, $this->option->addName("token"), true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($userId, $this->option->addName("expires_in"), true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($userId, $this->option->addName("refresh_token"), true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($userId, $this->option->addName("refresh_token"), true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_by("email", $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_meta($profileuser->ID, $this->option->addName("refresh_token"), true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($userId, $this->option->addName("refresh_token"), true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_by("email", $idOrEmail) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_meta($userId, $this->option->addName("picture"), true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to wp_set_current_user($wpUser->ID, $wpUser->user_login) alters data types {'user_meta'}. Passed arguments: 0: $id (int), 1: $name (string). Returns (WP_User).,None,None
RETRIEVAL call to get_user_by("id", $wpUserId) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
STORAGE call to update_option(self::"OPTION_NAME", $option, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to delete_option(self::"OPTION_NAME") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option(self::"OPTION_NAME", self::"DEFAULT", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to wp_update_user($userdata) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,None,None
STORAGE call to update_user_meta($wpUser->ID, $this->option->addName("picture"), $gu->getPicture()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($wpUser->ID, $this->option->addName("token"), $gu->getToken()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($wpUser->ID, $this->option->addName("refresh_token"), $gu->getRefreshToken()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($wpUser->ID, $this->option->addName("expires_in"), date("Y-m-d H:i:s", $expiresIn)) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($userId, $this->option->addName("token"), $token) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($userId, $this->option->addName("expires_in"), $expiresIn) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($userId, $this->option->addName("token"), null) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($userId, $this->option->addName("refresh_token"), null) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($userId, $this->option->addName("expires_in"), null) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_insert_user($userdata) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,None,None
STORAGE call to add_user_meta($wpUser->ID, $this->option->addName("picture"), $gu->getPicture(), true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).,None,None
STORAGE call to add_user_meta($wpUser->ID, $this->option->addName("token"), $gu->getToken()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($wpUser->ID, $this->option->addName("refresh_token"), $gu->getRefreshToken(), true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).,None,None
STORAGE call to add_user_meta($wpUser->ID, $this->option->addName("expires_in"), date("Y-m-d H:i:s", $expiresIn), true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).,None,None
STORAGE call to delete_option($slug) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
CRYPTOGRAPHY call to wp_update_user($userdata) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,hash,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] WP User info of types (['email', 'user_meta', 'user']) stored through WordPress function "wp_update_user($userdata)", found in file src/Site/User.php at line 126. 

[has_storage] PII of types (['email', 'user_meta', 'user']) stored through WordPress function "update_user_meta($wpUser->ID, $this->option->addName("picture"), $gu->getPicture())", found in file src/Site/User.php at line 127. 

[has_storage] PII of types (['email', 'user_meta', 'user']) stored through WordPress function "update_user_meta($wpUser->ID, $this->option->addName("token"), $gu->getToken())", found in file src/Site/User.php at line 128. 

[has_storage] PII of types (['email', 'user_meta', 'user']) stored through WordPress function "add_user_meta($wpUser->ID, $this->option->addName("token"), $gu->getToken())", found in file src/Site/User.php at line 93. 

[has_storage] PII of types (['email', 'user_meta', 'user']) stored through WordPress function "update_user_meta($wpUser->ID, $this->option->addName("refresh_token"), $gu->getRefreshToken())", found in file src/Site/User.php at line 130. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($userId, $this->option->addName("token"), null)", found in file src/Site/User.php at line 235. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($userId, $this->option->addName("expires_in"), null)", found in file src/Site/User.php at line 237. 

[has_storage] PII of types (['email', 'user_meta', 'user']) stored through WordPress function "add_user_meta($wpUser->ID, $this->option->addName("expires_in"), date("Y-m-d H:i:s", $expiresIn), true)", found in file src/Site/User.php at line 99. 

[has_storage] PII of types (['email', 'user_meta', 'user']) stored through WordPress function "add_user_meta($wpUser->ID, $this->option->addName("refresh_token"), $gu->getRefreshToken(), true)", found in file src/Site/User.php at line 95. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($userId, $this->option->addName("refresh_token"), null)", found in file src/Site/User.php at line 236. 

[has_storage] PII of types (['email', 'user_meta', 'user']) stored through WordPress function "update_user_meta($userId, $this->option->addName("token"), $token)", found in file src/Site/User.php at line 156. 

[has_storage] PII of types (['email', 'user_meta', 'user']) stored through WordPress function "update_user_meta($wpUser->ID, $this->option->addName("expires_in"), date("Y-m-d H:i:s", $expiresIn))", found in file src/Site/User.php at line 134. 

[has_storage] PII of types (['email', 'user_meta', 'user']) stored through WordPress function "update_user_meta($userId, $this->option->addName("expires_in"), $expiresIn)", found in file src/Site/User.php at line 159. 

[has_storage] WP User info of types (['email', 'user', 'user_meta']) stored through WordPress function "wp_insert_user($userdata)", found in file src/Site/User.php at line 86. 

[has_storage] PII of types (['email', 'user_meta', 'user']) stored through WordPress function "add_user_meta($wpUser->ID, $this->option->addName("picture"), $gu->getPicture(), true)", found in file src/Site/User.php at line 92. 

[has_storage] Storage check is WP 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($wpUser->ID, $this->option->addName("picture"), $gu->getPicture()) does not have corresponding deletion method. Storage method found in file src/Site/User.php at line 127. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($wpUser->ID, $this->option->addName("token"), $gu->getToken()) does not have corresponding deletion method. Storage method found in file src/Site/User.php at line 128. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($wpUser->ID, $this->option->addName("token"), $gu->getToken()) does not have corresponding deletion method. Storage method found in file src/Site/User.php at line 93. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($wpUser->ID, $this->option->addName("refresh_token"), $gu->getRefreshToken()) does not have corresponding deletion method. Storage method found in file src/Site/User.php at line 130. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($userId, $this->option->addName("token"), null) does not have corresponding deletion method. Storage method found in file src/Site/User.php at line 235. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($userId, $this->option->addName("expires_in"), null) does not have corresponding deletion method. Storage method found in file src/Site/User.php at line 237. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($wpUser->ID, $this->option->addName("expires_in"), date("Y-m-d H:i:s", $expiresIn), true) does not have corresponding deletion method. Storage method found in file src/Site/User.php at line 99. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($wpUser->ID, $this->option->addName("refresh_token"), $gu->getRefreshToken(), true) does not have corresponding deletion method. Storage method found in file src/Site/User.php at line 95. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($userId, $this->option->addName("refresh_token"), null) does not have corresponding deletion method. Storage method found in file src/Site/User.php at line 236. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($userId, $this->option->addName("token"), $token) does not have corresponding deletion method. Storage method found in file src/Site/User.php at line 156. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($wpUser->ID, $this->option->addName("expires_in"), date("Y-m-d H:i:s", $expiresIn)) does not have corresponding deletion method. Storage method found in file src/Site/User.php at line 134. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($userId, $this->option->addName("expires_in"), $expiresIn) does not have corresponding deletion method. Storage method found in file src/Site/User.php at line 159. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($wpUser->ID, $this->option->addName("picture"), $gu->getPicture(), true) does not have corresponding deletion method. Storage method found in file src/Site/User.php at line 92. 

[Art.17, Right to erasure] Deletion access is NONE 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 7119. Found in file src/Site/User.php at line 127 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 7140. Found in file src/Site/User.php at line 128 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 6907. Found in file src/Site/User.php at line 93 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 7169. Found in file src/Site/User.php at line 130 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 7743. Found in file src/Site/User.php at line 235 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 7777. Found in file src/Site/User.php at line 237 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 6974. Found in file src/Site/User.php at line 99 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 6936. Found in file src/Site/User.php at line 95 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 7760. Found in file src/Site/User.php at line 236 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 7335. Found in file src/Site/User.php at line 156 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 7204. Found in file src/Site/User.php at line 134 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 7372. Found in file src/Site/User.php at line 159 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 6883. Found in file src/Site/User.php at line 92 

[Art.15, Right to access] Data access is NONE_BUT_NOT_REQUIRED 

[third_party] Third party at "https://accounts.google.com/o/oauth2/token" used with data types ['email', 'user_meta', 'user'], found in file src/Site/HttpClient.php at line 37 . Personal data flows from sources with nodeID [7169, 3585, 7301, 7447, 6936, 7449, 7454, 7204, 7335, 6974, 7743, 6850, 6852, 5317, 7113, 7372, 7119, 7760, 6871, 7777, 6883, 7140, 3692, 6907]  

[third_party] Third party usage is CONFIRMED for data types ['email', 'user', 'user_meta'] 

[encryption] API call that sends PII to "https://accounts.google.com/o/oauth2/token" uses https. PII is securely encrypted with ['hash']. Found in file src/Site/HttpClient.php at line 37  

[main] Applicable GDPR requirements: ['access', 'deletion', 'encryption', 'third_party'] 

[main] Is deletion in violation? True 

[main] Is access in violation? False 

[main] Is third_party in violation? True 

[main] Is encryption in violation? False 

[main] Complaint? False 


###########
### Q&A ###
###########

1. Why is my plugin in violation against GDPR?

GDPR (https://gdpr-info.eu/) aims to give citizens in the European Union (EU) control over their personal data. If a website collects or store user data, it is required to provide users functionalities to control their data, such as ones to erase or export their data. While a plugin do not directly interact with users, it may provide functionalities that collect or store personal data, which would make websites that deploy the plugin in violation against GDPR if the plugin does not provide corresponding functionalities to allow users control their personal data. Therefore, plugin developers are responsible to provide functions to manage the personal data they handle in accordance with GDPR. We list requirements by specific GDPR articles relevant to your plugin below.


[Art. 13, Information to be provided where personal data are collected from the data subject] If a plugin collects or handles personal data, it needs to provide privacy policy texts that explain what personal data is being collected and for what purpose. The texts are meant to be added to the privacy policy of the websites that deploy the plugin. 


            
[Art.17, Right to erasure] If a plugin stores personal data in a custom database they create or manage, or through Wordpress's native storage functions (e.g., update_user_meta), it needs to provide methods for users to erase the data upon request. Note that deleting data for all users upon uninstallation does not satisfy the requirement. 


            
        

2. How do I make my plugin compliant?

Please refer to the fix report below to see how you can make your plugin comply with GDPR.

        

##################
### Fix Report ###
##################

############################
# Data Deletion Fix Report #
############################

This report suggests fixes to comply with the GDPR Art. 17, Right to erasure (https://gdpr-info.eu/art-17-gdpr/). The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/adding-the-personal-data-eraser-to-your-plugin/ for more details.

1) Implement a function that deletes all the user data collected in the plugin. Sample code:


/**
* Removes all collected data of a user.
*
* @param string $email_address   email address to manipulate
* @param int    $page            pagination
*
* @return array
*/
function subscriber-login-for-youtube_remove_data( $email_address, $page = 1 ) {
    
    $page = (int) $page;


    //TODO: Delete the user data that was stored using Wordpress functions

    //Below is the sample code for deleting user meta and may need to be modified to suit the plugin.
    $user_id = get_user_by('email', $email_address)
    $key = 'email' //Sample user meta key
    if ( $customer->user_id > 0 ) {
        //Delete user meta data by $key
        delete_user_meta( $user_id, $key );
    }
        



    // Tell core if we have more data to delete still
    $done = true;
    return array(
        'items_removed'  => $items_removed, // true if collected data of a user is being deleted
        'items_retained' => $items_retained, // true if certain data needs to be retained
        'messages'       => sprintf( __( 'Data of user with email %s successfully deleted.', 'subscriber-login-for-youtube' ), $email_address ), // Put messages for data removal
        'done'           => $done, // true if all the removal processes are done (all data of the user is removed)
    );
}
        

2) Hook the deletion function to the Wordpress's Personal Data Removal tool


/**
* Registers all data erasers.
*
* @param array $exporters
*
* @return mixed
*/
function subscriber-login-for-youtube_register_privacy_erasers( $erasers ) {
    $erasers['my-plugin-slug'] = array(
        'eraser_friendly_name' => __( '<eraser name>', 'subscriber-login-for-youtube' ),
        'callback'             => 'subscriber-login-for-youtube_remove_data',
    );
    return $erasers;
}
        

add_filter( 'wp_privacy_personal_data_erasers', 'subscriber-login-for-youtube_register_privacy_erasers' );
        

        

#############################
# Privacy Policy Fix Report #
#############################

This report suggests fixes to comply with the GDPR Art. 13 (https://gdpr-info.eu/art-13-gdpr/) through including a privacy notice. The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/suggesting-text-for-the-site-privacy-policy/ for more details.

1) Implement a function that includes the privacy policy for the plugin and provide it to wordpress through wp_add_privacy_policy_content(). Sample code:


/**
* Adds a privacy policy statement.
*/
function subscriber-login-for-youtube_add_privacy_policy_content() {
    if ( ! function_exists( 'wp_add_privacy_policy_content' ) ) {
        return;
    }
    //TODO: modify the content below to include the privacy policy for the plugin.
    $content = '<p class="privacy-policy-tutorial">' . __( 'Some introductory content for the suggested text.', 'subscriber-login-for-youtube' ) . '</p>'
            . '<strong class="privacy-policy-tutorial">' . __( 'Suggested Text:', 'subscriber-login-for-youtube' ) . '</strong> '
            . sprintf(
                __( 'When you leave a comment on this site, we send your name, email address, IP address and comment text to example.com. Example.com does not retain your personal data. The example.com privacy policy is <a href="%1$s" target="_blank">here</a>.', 'subscriber-login-for-youtube' ),
                'https://example.com/privacy-policy'
            );
    wp_add_privacy_policy_content( 'subscriber-login-for-youtube', wp_kses_post( wpautop( $content, false ) ) );
}
        

2) Hook the privacy policy function to the Wordpress's admin initialization action.


add_action( 'admin_init', 'subscriber-login-for-youtube_add_privacy_policy_content' );
        

        


Disclaimer: The sample code provided above is only for reference and does not guarantee GDPR compliance. The recommended list of data to delete/export may not be comprehensive. 
        
Done.
