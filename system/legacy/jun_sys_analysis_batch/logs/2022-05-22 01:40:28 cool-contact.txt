Timeout in resolving values
Timeout in running neo4j query
Running Main.py on cool-contact

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.684318.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:00.954195.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 710 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:01.293374.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 0 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.497740.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 2887 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:01.727571.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 83 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:01.974398.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
Added 40 PHP_REACHES edges.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.076224.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 1127 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:17.803633.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 14723
Added 9876 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 19448
Added 4725 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:02.019549.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cool-contact/contact_admin.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cool-contact/form.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cool-contact/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cool-contact/process.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cool-contact/uninstall.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cool-contact/includes/functions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cool-contact/includes/options.php' cannot be parsed correct.
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cool-contact/securimage/captcha.html
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cool-contact/securimage/captcha.html' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cool-contact/securimage/example_form.ajax.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cool-contact/securimage/example_form.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cool-contact/securimage/securimage.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cool-contact/securimage/securimage_play.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cool-contact/securimage/securimage_show.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cool-contact/securimage/WavFile.php' cannot be parsed correct.
Added new directory node for: database
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cool-contact/securimage/database/index.html
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cool-contact/securimage/database/index.html' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:01.453879.

5 Nodes Created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
3597 PHP_REACHES edges created
4 CALLS edges created
75 PHP_REACHES edges created
1 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
11046 PHP_REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
4725 PHP_REACHES edges created
1 DIRECTORY_OF edges created
1 FILE_OF edges created
2 DIRECTORY_OF edges created
1 FILE_OF edges created
19453 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 5305 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.307437.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 3 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:01.554479.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 18094
Added 91 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:03.802294.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 306 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.162531.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.668480.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 18094
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:01.820620.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.048227.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.033579.

3 CALLS edges created
397 PHP_REACHES edges created
400 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 315 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.122684.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
7 SQL operations to process.
{"1": ["$this->getCaptchaId(false)"], "2": ["$this_code"], "3": ["$this_code_display"], "4": ["$this_namespace"], "5": ["time()"]}
SQL command ({"1": ["$this->getCaptchaId(false)"], "2": ["$this_code"], "3": ["$this_code_display"], "4": ["$this_namespace"], "5": ["time()"]}) cannot be parsed correct.
sprintf("DELETE FROM %s WHERE %s - created > %s", $this->database_table, $this->pdo_conn->quote($now, PDO::"PARAM_INT"), $this->pdo_conn->quote($limit, PDO::"PARAM_INT"))
SQL command (sprintf("DELETE FROM %s WHERE %s - created > %s", $this->database_table, $this->pdo_conn->quote($now, PDO::"PARAM_INT"), $this->pdo_conn->quote($limit, PDO::"PARAM_INT"))) cannot be parsed correct.
$query
SQL command ($query) cannot be parsed correct.
$query
SQL command ($query) cannot be parsed correct.
{"1": []}
SQL command ({"1": []}) cannot be parsed correct.
{"1": ["$_SERVER_REMOTE_ADDR"], "2": ["$this_namespace"]}
SQL command ({"1": ["$_SERVER_REMOTE_ADDR"], "2": ["$this_namespace"]}) cannot be parsed correct.
sprintf("DELETE FROM %s WHERE id = %s AND namespace = %s", $this->database_table, $id, $ns)
SQL command (sprintf("DELETE FROM %s WHERE id = %s AND namespace = %s", $this->database_table, $id, $ns)) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [18699, 20076, 19338, 19580, 19716, 19770, 19961]
Added 0 SQL nodes. 0 out of 7 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:03.282861.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'$_POST_required_symbol'' cannot be parsed correct.
HTML code '$'minlength:$name_minlength,'' cannot be parsed correct.
HTML code '$'maxlength:$name_maxlength'' cannot be parsed correct.
HTML code '$'minlength:$subject_minlength,'' cannot be parsed correct.
HTML code '$'maxlength:$subject_maxlength'' cannot be parsed correct.
HTML code '$'minlength:$url_minlength,'' cannot be parsed correct.
HTML code '$'maxlength:$url_maxlength,'' cannot be parsed correct.
HTML code '$'minlength:$content_minlength,'' cannot be parsed correct.
HTML code '$'maxlength:$content_maxlength'' cannot be parsed correct.
HTML code '$'minlength:$phone_minlength,'' cannot be parsed correct.
HTML code '$'maxlength:$phone_maxlength,'' cannot be parsed correct.
HTML code '$'$_POST_toemail'' cannot be parsed correct.
HTML code '$'$_POST_fromemail'' cannot be parsed correct.
HTML code '$'$_POST_email_subject'' cannot be parsed correct.
HTML code '$'$_POST_name_minlength'' cannot be parsed correct.
HTML code '$'$_POST_name_maxlength'' cannot be parsed correct.
HTML code '$'$_POST_subject_minlength'' cannot be parsed correct.
HTML code '$'$_POST_subject_maxlength'' cannot be parsed correct.
HTML code '$'$_POST_url_minlength'' cannot be parsed correct.
HTML code '$'$_POST_url_maxlength'' cannot be parsed correct.
HTML code '$'$_POST_phone_minlength'' cannot be parsed correct.
HTML code '$'$_POST_phone_maxlength'' cannot be parsed correct.
HTML code '$'$_POST_content_minlength'' cannot be parsed correct.
HTML code '$'$_POST_content_maxlength'' cannot be parsed correct.
HTML code '$'admin_url("admin-ajax.php")'' cannot be parsed correct.
HTML code '$' <img src=plugins_url("images/thank_you.jpg", )">'' cannot be parsed correct.
HTML code '$'$required_symbol'' cannot be parsed correct.
HTML code '$'$required_symbol'' cannot be parsed correct.
HTML code '$'$required_symbol'' cannot be parsed correct.
HTML code '$'$required_symbol'' cannot be parsed correct.
HTML code '$'$required_symbol'' cannot be parsed correct.
HTML code '$'$required_symbol'' cannot be parsed correct.
HTML code '$'$required_symbol'' cannot be parsed correct.
HTML code '$'plugins_url("securimage/securimage_show.php", )'' cannot be parsed correct.
HTML code '$'plugins_url("securimage/securimage_show.php", )'' cannot be parsed correct.
HTML code '$'$_SERVER_HTTP_REFERER'' cannot be parsed correct.
HTML code '$'captcha'' cannot be parsed correct.
HTML code '$'pass'' cannot be parsed correct.
HTML code '$'$_SESSION_ctform_timetosolve'' cannot be parsed correct.
HTML code '$'htmlspecialchars($_SERVER["REQUEST_URI"] . $_SERVER["QUERY_STRING"])'' cannot be parsed correct.
HTML code '$'htmlspecialchars(@$_SESSION["ctform"]["ct_name"])'' cannot be parsed correct.
HTML code '$'htmlspecialchars(@$_SESSION["ctform"]["ct_email"])'' cannot be parsed correct.
HTML code '$'htmlspecialchars(@$_SESSION["ctform"]["ct_URL"])'' cannot be parsed correct.
HTML code '$'htmlspecialchars(@$_SESSION["ctform"]["ct_content"])'' cannot be parsed correct.
HTML code '$'md5(uniqid())'' cannot be parsed correct.
HTML code '$'$_SERVER_PHP_SELF'' cannot be parsed correct.
HTML code '$'$this->audioError()'' cannot be parsed correct.
HTML code '$'<hr /><strong>Failed to generate audio file, content has already been output.<br />This is most likely due to misconfiguration or a PHP error was sent to the browser.</strong>'' cannot be parsed correct.
HTML code '$'<hr /><strong>Failed to generate captcha image, content has already been output.<br />This is most likely due to misconfiguration or a PHP error was sent to the browser.</strong>'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'required: true,'' cannot be parsed correct.
HTML code '$' // required
        '' cannot be parsed correct.
HTML code '$' // min
         '' cannot be parsed correct.
HTML code '$' // required    
        
     },
     email: {
    '' cannot be parsed correct.
HTML code '$'required: true,'' cannot be parsed correct.
HTML code '$' // required
    
     email: true
     },
     subject: {
        '' cannot be parsed correct.
HTML code '$'required: true,'' cannot be parsed correct.
HTML code '$' // required
        '' cannot be parsed correct.
HTML code '$' // min
         '' cannot be parsed correct.
HTML code '$' // required    
     },
      url: {
        '' cannot be parsed correct.
HTML code '$'required: true,'' cannot be parsed correct.
HTML code '$' // required
        '' cannot be parsed correct.
HTML code '$' // min
         '' cannot be parsed correct.
HTML code '$' // required 
         url: true    
     },            
     content: {
        required: true,
        '' cannot be parsed correct.
HTML code '$' 
         '' cannot be parsed correct.
HTML code '$' 
       },
     
       phone: {
        '' cannot be parsed correct.
HTML code '$'required: true,'' cannot be parsed correct.
HTML code '$' // required
        '' cannot be parsed correct.
HTML code '$' // min
         '' cannot be parsed correct.
HTML code '$' // required 
            
     }              
       
   }, //end rules
   messages: {
      name: {
         required: '' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$' /></td>
		<td><input name="requirename" type="checkbox" '' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$' /></td>
                <td><input  class="input_length" name="name_minlength" type="text" value="'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$' /></td>
		<td><input name="require_subject" type="checkbox" '' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$' /></td>
		<td><input class="input_length" name="subject_minlength" type="text" value="'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$' /></td>
		<td><input name="require_url" type="checkbox" '' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$' /></td>
		<td><input class="input_length" name="url_minlength" type="text" value="'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$' /></td>
		<td><input name="require_phone" type="checkbox" '' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$' /></td>
		<td><input class="input_length" name="phone_minlength" type="text" value="'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$' /></td>
		<td><input name="require_email" type="checkbox" '' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$' /></td>
		<td>&nbsp;</td>
		<td>&nbsp;</td>
	</tr>
	<tr>
		<td>'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$' /></td>

		<td>&nbsp;</td>
		<td>&nbsp;</td>
		<td>&nbsp;</td>
	</tr>
        </tbody>
                        <tfoot>
    <tr>
       
		<th>'' cannot be parsed correct.
HTML code '$'" alt="CAPTCHA Image" style="display: block"/>

			<input type="text" name="captcha_code" size="10" maxlength="6" />
                        <a href="#" onclick="document.getElementById(\'captcha\').src = \''' cannot be parsed correct.
HTML code '$'?\' + Math.random(); return false"><br>'' cannot be parsed correct.
HTML code '$'fail'' cannot be parsed correct.
HTML code '$' seconds.</div><br />
'' cannot be parsed correct.
HTML code '$'" id="contact_form">
  <input type="hidden" name="do" value="contact" />

  <p>
    <label for="ct_name">Name*:</label>
    '' cannot be parsed correct.
HTML code '$'    <input type="text" name="ct_name" size="35" value="'' cannot be parsed correct.
HTML code '$'" />
  </p>

  <p>
    <label for="ct_email">Email*:</label>
    '' cannot be parsed correct.
HTML code '$'    <input type="text" name="ct_email" size="35" value="'' cannot be parsed correct.
HTML code '$'" />
  </p>

  <p>
    <label for="ct_URL">URL:</label>
    '' cannot be parsed correct.
HTML code '$'    <input type="text" name="ct_URL" size="35" value="'' cannot be parsed correct.
HTML code '$'" />
  </p>

  <p>
    <label for="ct_content">content*:</label>
    '' cannot be parsed correct.
HTML code '$'    <textarea name="ct_content" rows="12" cols="60">'' cannot be parsed correct.
HTML code '$'</textarea>
  </p>

  <p>
    '' cannot be parsed correct.
HTML code '$'" alt="CAPTCHA Image" align="left" />
    <object type="application/x-shockwave-flash" data="./securimage_play.swf?bgcol=#ffffff&amp;icon_file=./images/audio_icon.png&amp;audio_file=./securimage_play.php" height="32" width="32">
    <param name="movie" value="./securimage_play.swf?bgcol=#ffffff&amp;icon_file=./images/audio_icon.png&amp;audio_file=./securimage_play.php" />
    </object>
    &nbsp;
    <a tabindex="-1" style="border-style: none;" href="#" title="Refresh Image" onclick="document.getElementById(\'siimage\').src = \'./securimage_show.php?sid=\' + Math.random(); this.blur(); return false"><img src="./images/refresh.png" alt="Reload Image" height="32" width="32" onclick="this.blur()" align="bottom" border="0" /></a><br />
    <strong>Enter Code*:</strong><br />
    <input type="text" name="ct_captcha" size="12" maxlength="8" />
  </p>

  <p>
    <br />
    <input type="submit" value="Submit content" />
  </p>

</form>
</fieldset>

<script src="http://code.jquery.com/jquery-1.10.1.min.js"></script>
<script type="text/javascript">
    $.noConflict();

    function reloadCaptcha()
    {
        jQuery(\'#siimage\').prop(\'src\', \'./securimage_show.php?sid=\' + Math.random());
    }

    function processForm()
    {
		jQuery.ajax({
			url: \''' cannot be parsed correct.
HTML code '$'\',
			type: \'POST\',
			data: jQuery(\'#contact_form\').serialize(),
			dataType: \'json\',
		}).done(function(data) {
			if (data.error === 0) {
				jQuery(\'#success_content\').show();
				jQuery(\'#contact_form\')[0].reset();
				reloadCaptcha();
				setTimeout("jQuery(\'#success_content\').fadeOut()", 12000);
			} else {
				alert("There was an error with your submission.\n\n" + data.content);
			}
		});

        return false;
    }
</script>

</body>
</html>

'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:09.360494.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.038826.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 0 do_action/apply_filters calls and 4 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.331762.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbaseDetector
### Start running FrontBaseDetector
### Finish running FileProDetector
### Start running HashDetector
### Finish running DbplusDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running FirebirdInterBaseDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running MongoDbDetector
### Start running OpenSSLDetector
### Finish running Oci8Detector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running ArrayElementDetector
### Start running PhpCurlDetector
### Finish running PhpCurlDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running HashDetector
### Start running PHPRetrievalDetector
### Finish running PasswordHashingDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running OpenSSLDetector
### Start running PhpVarDetector
### Finish running PhpVarDetector
### Start running PostgreSQLDetector
### Finish running PostgreSQLDetector
### Start running PropertyDetector
### Finish running PropertyDetector
### Start running Sqlite3Detector
### Finish running maxdbDetector
### Start running SqliteDetector
### Finish running MySQLiDetector
### Start running SqlServerDetector
### Finish running PHPStorageDetector
### Start running SybaseDetector
### Finish running PHPIncludedDetector
### Start running TokyoTyrantDetector
### Finish running SqliteDetector
### Start running UserInputDetector
### Finish running SybaseDetector
### Start running VariableDetector
### Finish running TokyoTyrantDetector
### Start running WordpressHashingFnDetector
### Finish running Sqlite3Detector
### Start running WordPressRemoteDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRetrievalDetector
### Finish running WordPressRemoteDetector
### Start running WordPressStorageDetector
### Finish running SqlServerDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running PHPRetrievalDetector
### Start running GenericEncryptionDetector
### Finish running UserInputDetector
### Start running DeletionDetector
### Finish running GenericEncryptionDetector
### Start running UninstallDetector
### Finish running GenericDatabaseUsageDetector
### Finish running VariableDetector
### Finish running WordPressRetrievalDetector
### Finish running DeletionDetector
### Finish running UninstallDetector
### Finish running WordPressStorageDetector
### Finished running detectors
contact_admin.php:123
  - Request variable '$_POST["toemail"]' of personal types {'email'} is found.
  - Data types: email
contact_admin.php:125
  - Request variable '$_POST["fromemail"]' of personal types {'email'} is found.
  - Data types: email
contact_admin.php:135
  - Request variable '$_POST["require_email"]' of personal types {'email'} is found.
  - Data types: email
contact_admin.php:137
  - Request variable '$_POST["used_email"]' of personal types {'email'} is found.
  - Data types: email
contact_admin.php:149
  - Request variable '$_POST["email_subject"]' of personal types {'email'} is found.
  - Data types: email
contact_admin.php:157
  - Request variable '$_POST["ip_address"]' of personal types {'ip', 'address'} is found.
  - Data types: ip, address
securimage/example_form.ajax.php:135
  - Request variable '$_POST["ct_email"]' of personal types {'email'} is found.
  - Data types: email
securimage/example_form.php:122
  - Request variable '$_POST["ct_email"]' of personal types {'email'} is found.
  - Data types: email 

securimage/example_form.ajax.php:66
  - MD5 called with parameters [uniqid]. Ignore if [uniqid] does not contain personal information.
securimage/securimage.php:995
  - SHA1 called with parameters [REMOTE_ADDR, uniqid, true, _SERVER]. Ignore if [REMOTE_ADDR, uniqid, true, _SERVER] does not contain personal information.
securimage/securimage.php:1169
  - MD5 called with parameters [REMOTE_PORT, uniqid, true, _SERVER]. Ignore if [REMOTE_PORT, uniqid, true, _SERVER] does not contain personal information.
securimage/securimage.php:1320
  - MD5 called with parameters [uniqid, microtime]. Ignore if [uniqid, microtime] does not contain personal information. 

securimage/WavFile.php:1060
  - RETRIEVAL call to fread($this->_fp, 36).
  - Data types: file
securimage/WavFile.php:1147
  - RETRIEVAL call to fread($this->_fp, $fmt["SubchunkSize"] - 16 + $fmt["SubchunkSize"]1).
  - Data types: file
securimage/WavFile.php:1216
  - RETRIEVAL call to fread($this->_fp, 8).
  - Data types: file
securimage/WavFile.php:1225
  - RETRIEVAL call to fread($this->_fp, $subchunk["SubchunkSize"] + $subchunk["SubchunkSize"]1).
  - Data types: file
securimage/WavFile.php:1322
  - RETRIEVAL call to fread($this->_fp, $dataSize).
  - Data types: file
securimage/securimage.php:1949
  - RETRIEVAL call to fread($fp, 64).
  - Data types: file
securimage/securimage.php:2762
  - RETRIEVAL call to file_get_contents(dirname() . "/audio/en/error.wav").
  - Data types: file 

securimage/WavFile.php:936
  - STORAGE call to fwrite($fp, $this->makeHeader()).
  - Data types: file
securimage/WavFile.php:937
  - STORAGE call to fwrite($fp, $this->getDataSubchunk()).
  - Data types: file
securimage/WavFile.php:1004
  - STORAGE call to fwrite($this->_fp, $data).
  - Data types: file
securimage/securimage.php:1311
  - STORAGE call to fwrite($fp, date("Y-m-d H:i:s") . ": Securimage audio error " . $ex->getcontent() . "" . "
").
  - Data types: file 

index.php:58
  - object property '$current_user->user_email' of personal types {'email'} is found.
  - Data types: email
securimage/securimage.php:2169
  - object property '$this->database_pass' of personal types {'password'} is found.
  - Data types: password 

contact_admin.php:123
  - variable '$toemail' of personal types {'email'} is found.
  - Data types: email
contact_admin.php:124
  - variable '$toemail' of personal types {'email'} is found.
  - Data types: email
contact_admin.php:125
  - variable '$fromemail' of personal types {'email'} is found.
  - Data types: email
contact_admin.php:126
  - variable '$fromemail' of personal types {'email'} is found.
  - Data types: email
contact_admin.php:135
  - variable '$require_email' of personal types {'email'} is found.
  - Data types: email
contact_admin.php:136
  - variable '$require_email' of personal types {'email'} is found.
  - Data types: email
contact_admin.php:137
  - variable '$used_email' of personal types {'email'} is found.
  - Data types: email
contact_admin.php:138
  - variable '$used_email' of personal types {'email'} is found.
  - Data types: email
contact_admin.php:149
  - variable '$email_subject' of personal types {'email'} is found.
  - Data types: email
contact_admin.php:150
  - variable '$email_subject' of personal types {'email'} is found.
  - Data types: email
contact_admin.php:157
  - variable '$ip_address' of personal types {'ip', 'address'} is found.
  - Data types: ip, address
contact_admin.php:158
  - variable '$ip_address' of personal types {'ip', 'address'} is found.
  - Data types: ip, address
contact_admin.php:202
  - variable '$toemail' of personal types {'email'} is found.
  - Data types: email
contact_admin.php:206
  - variable '$fromemail' of personal types {'email'} is found.
  - Data types: email
contact_admin.php:210
  - variable '$email_subject' of personal types {'email'} is found.
  - Data types: email
contact_admin.php:280
  - variable '$used_email' of personal types {'email'} is found.
  - Data types: email
contact_admin.php:281
  - variable '$require_email' of personal types {'email'} is found.
  - Data types: email
contact_admin.php:316
  - variable '$ip_address' of personal types {'ip', 'address'} is found.
  - Data types: ip, address
form.php:47
  - variable '$require_email' of personal types {'email'} is found.
  - Data types: email
form.php:186
  - variable '$used_email' of personal types {'email'} is found.
  - Data types: email
form.php:187
  - variable '$require_email' of personal types {'email'} is found.
  - Data types: email
includes/options.php:3
  - variable '$toemail' of personal types {'email'} is found.
  - Data types: email
includes/options.php:4
  - variable '$fromemail' of personal types {'email'} is found.
  - Data types: email
includes/options.php:9
  - variable '$used_email' of personal types {'email'} is found.
  - Data types: email
includes/options.php:10
  - variable '$require_email' of personal types {'email'} is found.
  - Data types: email
includes/options.php:14
  - variable '$email_subject' of personal types {'email'} is found.
  - Data types: email
includes/options.php:20
  - variable '$ip_address' of personal types {'ip', 'address'} is found.
  - Data types: ip, address
index.php:58
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
index.php:60
  - variable '$fromemail' of personal types {'email'} is found.
  - Data types: email
index.php:61
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
index.php:62
  - variable '$fromemail' of personal types {'email'} is found.
  - Data types: email
index.php:89
  - variable '$webmaster_email' of personal types {'email'} is found.
  - Data types: email
index.php:90
  - variable '$default_from_email' of personal types {'email'} is found.
  - Data types: email
index.php:90
  - variable '$webmaster_email' of personal types {'email'} is found.
  - Data types: email
index.php:91
  - variable '$default_from_email' of personal types {'email'} is found.
  - Data types: email
process.php:10
  - variable '$toemail' of personal types {'email'} is found.
  - Data types: email
process.php:11
  - variable '$fromemail' of personal types {'email'} is found.
  - Data types: email
process.php:12
  - variable '$email_subject' of personal types {'email'} is found.
  - Data types: email
process.php:12
  - variable '$email_subject' of personal types {'email'} is found.
  - Data types: email
process.php:14
  - variable '$ipaddress' of personal types {'ip', 'address'} is found.
  - Data types: ip, address
process.php:48
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
process.php:50
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
process.php:60
  - variable '$email_body' of personal types {'email'} is found.
  - Data types: email
process.php:61
  - variable '$email_body' of personal types {'email'} is found.
  - Data types: email
process.php:64
  - variable '$email_body' of personal types {'email'} is found.
  - Data types: email
process.php:68
  - variable '$email_body' of personal types {'email'} is found.
  - Data types: email
process.php:71
  - variable '$email_body' of personal types {'email'} is found.
  - Data types: email
process.php:72
  - variable '$email_body' of personal types {'email'} is found.
  - Data types: email
process.php:74
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
process.php:76
  - variable '$email_body' of personal types {'email'} is found.
  - Data types: email
process.php:76
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
process.php:78
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
process.php:83
  - variable '$email_body' of personal types {'email'} is found.
  - Data types: email
process.php:87
  - variable '$email_body' of personal types {'email'} is found.
  - Data types: email
process.php:89
  - variable '$ip_address' of personal types {'ip', 'address'} is found.
  - Data types: ip, address
process.php:91
  - variable '$email_body' of personal types {'email'} is found.
  - Data types: email
process.php:91
  - variable '$ipaddress' of personal types {'ip', 'address'} is found.
  - Data types: ip, address
process.php:95
  - variable '$email_body' of personal types {'email'} is found.
  - Data types: email
process.php:97
  - variable '$email_body' of personal types {'email'} is found.
  - Data types: email
process.php:101
  - variable '$email_body' of personal types {'email'} is found.
  - Data types: email
process.php:123
  - variable '$email_subject' of personal types {'email'} is found.
  - Data types: email
process.php:123
  - variable '$email_subject' of personal types {'email'} is found.
  - Data types: email
process.php:124
  - variable '$email_body' of personal types {'email'} is found.
  - Data types: email
process.php:124
  - variable '$email_body' of personal types {'email'} is found.
  - Data types: email
process.php:130
  - variable '$email_subject' of personal types {'email'} is found.
  - Data types: email
process.php:130
  - variable '$email_body' of personal types {'email'} is found.
  - Data types: email
securimage/example_form.ajax.php:135
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
securimage/example_form.ajax.php:151
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
securimage/example_form.ajax.php:154
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
securimage/example_form.ajax.php:181
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
securimage/example_form.ajax.php:191
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
securimage/example_form.php:122
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
securimage/example_form.php:138
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
securimage/example_form.php:141
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
securimage/example_form.php:168
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
securimage/example_form.php:180
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
securimage/example_form.php:189
  - variable '$email' of personal types {'email'} is found.
  - Data types: email 

includes/functions.php:28
  - RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/functions.php:29
  - RETRIEVAL call to get_option("siteurl") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/options.php:3
  - RETRIEVAL call to get_option("toemail") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/options.php:4
  - RETRIEVAL call to get_option("fromemail") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/options.php:5
  - RETRIEVAL call to get_option("requirename") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/options.php:6
  - RETRIEVAL call to get_option("name_minlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/options.php:7
  - RETRIEVAL call to get_option("name_maxlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/options.php:8
  - RETRIEVAL call to get_option("used_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/options.php:9
  - RETRIEVAL call to get_option("used_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/options.php:10
  - RETRIEVAL call to get_option("require_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/options.php:11
  - RETRIEVAL call to get_option("used_captcha") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/options.php:12
  - RETRIEVAL call to get_option("used_subject") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/options.php:13
  - RETRIEVAL call to get_option("require_subject") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/options.php:14
  - RETRIEVAL call to get_option("email_subject") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/options.php:15
  - RETRIEVAL call to get_option("subject_minlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/options.php:16
  - RETRIEVAL call to get_option("subject_maxlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/options.php:17
  - RETRIEVAL call to get_option("content_minlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/options.php:18
  - RETRIEVAL call to get_option("content_maxlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/options.php:20
  - RETRIEVAL call to get_option("ip_address") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/options.php:21
  - RETRIEVAL call to get_option("user_referer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/options.php:22
  - RETRIEVAL call to get_option("user_browser") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/options.php:24
  - RETRIEVAL call to get_option("used_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/options.php:25
  - RETRIEVAL call to get_option("require_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/options.php:26
  - RETRIEVAL call to get_option("url_minlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/options.php:27
  - RETRIEVAL call to get_option("url_maxlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/options.php:29
  - RETRIEVAL call to get_option("used_phone") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/options.php:30
  - RETRIEVAL call to get_option("require_phone") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/options.php:31
  - RETRIEVAL call to get_option("phone_minlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/options.php:32
  - RETRIEVAL call to get_option("phone_maxlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/options.php:34
  - RETRIEVAL call to get_option("required_symbol") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/options.php:36
  - RETRIEVAL call to get_option("send_copy") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
index.php:57
  - RETRIEVAL call to get_currentuserinfo() alters data types {'user', 'user_meta'}. Returns (bool|WP_User).
  - Data types: user, user_meta
index.php:79
  - RETRIEVAL call to get_option("siteurl") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option 

contact_admin.php:124
  - STORAGE call to update_option("toemail", $toemail) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
contact_admin.php:126
  - STORAGE call to update_option("fromemail", $fromemail) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
contact_admin.php:128
  - STORAGE call to update_option("requirename", $requirename) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
contact_admin.php:130
  - STORAGE call to update_option("used_name", $used_name) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
contact_admin.php:132
  - STORAGE call to update_option("name_minlength", $name_minlength) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
contact_admin.php:134
  - STORAGE call to update_option("name_maxlength", $name_maxlength) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
contact_admin.php:136
  - STORAGE call to update_option("require_email", $require_email) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
contact_admin.php:138
  - STORAGE call to update_option("used_email", $used_email) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
contact_admin.php:140
  - STORAGE call to update_option("used_captcha", $used_captcha) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
contact_admin.php:142
  - STORAGE call to update_option("require_subject", $require_subject) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
contact_admin.php:144
  - STORAGE call to update_option("used_subject", $used_subject) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
contact_admin.php:146
  - STORAGE call to update_option("subject_minlength", $subject_minlength) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
contact_admin.php:148
  - STORAGE call to update_option("subject_maxlength", $subject_maxlength) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
contact_admin.php:150
  - STORAGE call to update_option("email_subject", $email_subject) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
contact_admin.php:153
  - STORAGE call to update_option("content_minlength", $content_minlength) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
contact_admin.php:155
  - STORAGE call to update_option("content_maxlength", $content_maxlength) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
contact_admin.php:158
  - STORAGE call to update_option("ip_address", $ip_address) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
contact_admin.php:160
  - STORAGE call to update_option("user_referer", $user_referer) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
contact_admin.php:162
  - STORAGE call to update_option("user_browser", $user_browser) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
contact_admin.php:165
  - STORAGE call to update_option("used_url", $used_url) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
contact_admin.php:167
  - STORAGE call to update_option("require_url", $require_url) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
contact_admin.php:169
  - STORAGE call to update_option("url_minlength", $url_minlength) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
contact_admin.php:171
  - STORAGE call to update_option("url_maxlength", $url_maxlength) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
contact_admin.php:174
  - STORAGE call to update_option("used_phone", $used_phone) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
contact_admin.php:176
  - STORAGE call to update_option("require_phone", $require_phone) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
contact_admin.php:178
  - STORAGE call to update_option("phone_minlength", $phone_minlength) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
contact_admin.php:180
  - STORAGE call to update_option("phone_maxlength", $phone_maxlength) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
contact_admin.php:183
  - STORAGE call to update_option("required_symbol", $required_symbol) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
contact_admin.php:186
  - STORAGE call to update_option("send_copy", $send_copy) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
index.php:61
  - STORAGE call to add_option("toemail", $user_email) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
index.php:62
  - STORAGE call to add_option("fromemail", $fromemail) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
index.php:63
  - STORAGE call to add_option("requirename", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
index.php:64
  - STORAGE call to add_option("used_name", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
index.php:65
  - STORAGE call to add_option("require_email", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
index.php:66
  - STORAGE call to add_option("used_email", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
index.php:67
  - STORAGE call to add_option("used_subject", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
index.php:68
  - STORAGE call to add_option("email_subject", "This message sent to you from your site") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
index.php:69
  - STORAGE call to add_option("ip_address", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
index.php:70
  - STORAGE call to add_option("required_symbol", "*") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
uninstall.php:12
  - STORAGE call to delete_option("toemail") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:13
  - STORAGE call to delete_option("fromemail") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:14
  - STORAGE call to delete_option("requirename") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:15
  - STORAGE call to delete_option("used_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:16
  - STORAGE call to delete_option("name_minlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:17
  - STORAGE call to delete_option("name_maxlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:18
  - STORAGE call to delete_option("require_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:19
  - STORAGE call to delete_option("used_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:20
  - STORAGE call to delete_option("used_captcha") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:21
  - STORAGE call to delete_option("require_subject") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:22
  - STORAGE call to delete_option("used_subject") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:23
  - STORAGE call to delete_option("subject_minlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:24
  - STORAGE call to delete_option("subject_maxlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:25
  - STORAGE call to delete_option("email_subject") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:26
  - STORAGE call to delete_option("content_minlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:27
  - STORAGE call to delete_option("content_maxlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:28
  - STORAGE call to delete_option("ip_address") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:29
  - STORAGE call to delete_option("user_referer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:30
  - STORAGE call to delete_option("user_browser") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:31
  - STORAGE call to delete_option("used_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:32
  - STORAGE call to delete_option("require_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:33
  - STORAGE call to delete_option("url_minlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:34
  - STORAGE call to delete_option("url_maxlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:35
  - STORAGE call to delete_option("used_phone") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:36
  - STORAGE call to delete_option("require_phone") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:37
  - STORAGE call to delete_option("phone_minlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:38
  - STORAGE call to delete_option("phone_maxlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:39
  - STORAGE call to delete_option("required_symbol") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:40
  - STORAGE call to delete_option("send_copy") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

securimage/WavFile.php:887
  - CRYPTOGRAPHY call to $this->getChannelMask().
securimage/WavFile.php:1871
  - CRYPTOGRAPHY call to $this->getChannelMask(). 

uninstall.php:12
  - DELETION call to delete_option("toemail") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:13
  - DELETION call to delete_option("fromemail") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:14
  - DELETION call to delete_option("requirename") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:15
  - DELETION call to delete_option("used_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:16
  - DELETION call to delete_option("name_minlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:17
  - DELETION call to delete_option("name_maxlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:18
  - DELETION call to delete_option("require_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:19
  - DELETION call to delete_option("used_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:20
  - DELETION call to delete_option("used_captcha") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:21
  - DELETION call to delete_option("require_subject") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:22
  - DELETION call to delete_option("used_subject") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:23
  - DELETION call to delete_option("subject_minlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:24
  - DELETION call to delete_option("subject_maxlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:25
  - DELETION call to delete_option("email_subject") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:26
  - DELETION call to delete_option("content_minlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:27
  - DELETION call to delete_option("content_maxlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:28
  - DELETION call to delete_option("ip_address") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:29
  - DELETION call to delete_option("user_referer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:30
  - DELETION call to delete_option("user_browser") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:31
  - DELETION call to delete_option("used_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:32
  - DELETION call to delete_option("require_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:33
  - DELETION call to delete_option("url_minlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:34
  - DELETION call to delete_option("url_maxlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:35
  - DELETION call to delete_option("used_phone") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:36
  - DELETION call to delete_option("require_phone") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:37
  - DELETION call to delete_option("phone_minlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:38
  - DELETION call to delete_option("phone_maxlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:39
  - DELETION call to delete_option("required_symbol") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:40
  - DELETION call to delete_option("send_copy") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

uninstall.php:12
  - Uninstall deletion call: DELETION call to delete_option("toemail") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:13
  - Uninstall deletion call: DELETION call to delete_option("fromemail") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:14
  - Uninstall deletion call: DELETION call to delete_option("requirename") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:15
  - Uninstall deletion call: DELETION call to delete_option("used_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:16
  - Uninstall deletion call: DELETION call to delete_option("name_minlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:17
  - Uninstall deletion call: DELETION call to delete_option("name_maxlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:18
  - Uninstall deletion call: DELETION call to delete_option("require_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:19
  - Uninstall deletion call: DELETION call to delete_option("used_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:20
  - Uninstall deletion call: DELETION call to delete_option("used_captcha") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:21
  - Uninstall deletion call: DELETION call to delete_option("require_subject") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:22
  - Uninstall deletion call: DELETION call to delete_option("used_subject") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:23
  - Uninstall deletion call: DELETION call to delete_option("subject_minlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:24
  - Uninstall deletion call: DELETION call to delete_option("subject_maxlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:25
  - Uninstall deletion call: DELETION call to delete_option("email_subject") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:26
  - Uninstall deletion call: DELETION call to delete_option("content_minlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:27
  - Uninstall deletion call: DELETION call to delete_option("content_maxlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:28
  - Uninstall deletion call: DELETION call to delete_option("ip_address") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:29
  - Uninstall deletion call: DELETION call to delete_option("user_referer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:30
  - Uninstall deletion call: DELETION call to delete_option("user_browser") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:31
  - Uninstall deletion call: DELETION call to delete_option("used_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:32
  - Uninstall deletion call: DELETION call to delete_option("require_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:33
  - Uninstall deletion call: DELETION call to delete_option("url_minlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:34
  - Uninstall deletion call: DELETION call to delete_option("url_maxlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:35
  - Uninstall deletion call: DELETION call to delete_option("used_phone") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:36
  - Uninstall deletion call: DELETION call to delete_option("require_phone") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:37
  - Uninstall deletion call: DELETION call to delete_option("phone_minlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:38
  - Uninstall deletion call: DELETION call to delete_option("phone_maxlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:39
  - Uninstall deletion call: DELETION call to delete_option("required_symbol") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:40
  - Uninstall deletion call: DELETION call to delete_option("send_copy") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

By data type:
address
	VariableDetector.(unknown) - {'ip', 'address'}
	ArrayElementDetector.(unknown) - {'ip', 'address'}
	VariableDetector.(unknown) - {'ip', 'address'}
	VariableDetector.(unknown) - {'ip', 'address'}
	VariableDetector.(unknown) - {'ip', 'address'}
	VariableDetector.(unknown) - {'ip', 'address'}
	VariableDetector.(unknown) - {'ip', 'address'}
	VariableDetector.(unknown) - {'ip', 'address'}
email
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
file
	PHPRetrievalDetector.fread($this->_fp, $fmt["SubchunkSize"] - 16 + $fmt["SubchunkSize"]1) - {'file'}
	PHPRetrievalDetector.file_get_contents(dirname() . "/audio/en/error.wav") - {'file'}
	PHPRetrievalDetector.fread($this->_fp, 36) - {'file'}
	PHPStorageDetector.fwrite($fp, date("Y-m-d H:i:s") . ": Securimage audio error " . $ex->getcontent() . "" . "
") - {'file'}
	PHPRetrievalDetector.fread($fp, 64) - {'file'}
	PHPRetrievalDetector.fread($this->_fp, $dataSize) - {'file'}
	PHPStorageDetector.fwrite($fp, $this->getDataSubchunk()) - {'file'}
	PHPStorageDetector.fwrite($this->_fp, $data) - {'file'}
	PHPRetrievalDetector.fread($this->_fp, $subchunk["SubchunkSize"] + $subchunk["SubchunkSize"]1) - {'file'}
	PHPStorageDetector.fwrite($fp, $this->makeHeader()) - {'file'}
	PHPRetrievalDetector.fread($this->_fp, 8) - {'file'}
ip
	VariableDetector.(unknown) - {'ip', 'address'}
	ArrayElementDetector.(unknown) - {'ip', 'address'}
	VariableDetector.(unknown) - {'ip', 'address'}
	VariableDetector.(unknown) - {'ip', 'address'}
	VariableDetector.(unknown) - {'ip', 'address'}
	VariableDetector.(unknown) - {'ip', 'address'}
	VariableDetector.(unknown) - {'ip', 'address'}
	VariableDetector.(unknown) - {'ip', 'address'}
none
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	GenericEncryptionDetector.$this->getChannelMask() - set()
	GenericEncryptionDetector.$this->getChannelMask() - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
option
	UninstallDetector.delete_option("require_phone") - {'option'}
	WordPressStorageDetector.delete_option("require_phone") - {'option'}
	UninstallDetector.delete_option("subject_maxlength") - {'option'}
	WordPressStorageDetector.update_option("name_minlength", $name_minlength) - {'option'}
	WordPressStorageDetector.add_option("fromemail", $fromemail) - {'option'}
	UninstallDetector.delete_option("send_copy") - {'option'}
	WordPressStorageDetector.delete_option("requirename") - {'option'}
	WordPressStorageDetector.update_option("subject_maxlength", $subject_maxlength) - {'option'}
	WordPressStorageDetector.delete_option("require_email") - {'option'}
	WordPressStorageDetector.delete_option("url_maxlength") - {'option'}
	WordPressStorageDetector.update_option("user_browser", $user_browser) - {'option'}
	WordPressStorageDetector.update_option("name_maxlength", $name_maxlength) - {'option'}
	UninstallDetector.delete_option("phone_maxlength") - {'option'}
	WordPressRetrievalDetector.get_option("phone_maxlength") - {'option'}
	WordPressStorageDetector.delete_option("used_url") - {'option'}
	WordPressStorageDetector.delete_option("phone_maxlength") - {'option'}
	DeletionDetector.delete_option("content_minlength") - {'option'}
	WordPressRetrievalDetector.get_option("require_subject") - {'option'}
	WordPressRetrievalDetector.get_option("content_maxlength") - {'option'}
	WordPressStorageDetector.update_option("used_url", $used_url) - {'option'}
	WordPressStorageDetector.update_option("content_maxlength", $content_maxlength) - {'option'}
	WordPressStorageDetector.add_option("require_email", 1) - {'option'}
	WordPressStorageDetector.delete_option("phone_minlength") - {'option'}
	WordPressStorageDetector.delete_option("required_symbol") - {'option'}
	UninstallDetector.delete_option("require_url") - {'option'}
	WordPressRetrievalDetector.get_option("require_email") - {'option'}
	WordPressStorageDetector.delete_option("url_minlength") - {'option'}
	WordPressStorageDetector.add_option("email_subject", "This message sent to you from your site") - {'option'}
	WordPressStorageDetector.delete_option("fromemail") - {'option'}
	WordPressStorageDetector.delete_option("used_email") - {'option'}
	WordPressStorageDetector.update_option("subject_minlength", $subject_minlength) - {'option'}
	WordPressStorageDetector.add_option("used_email", 1) - {'option'}
	DeletionDetector.delete_option("used_captcha") - {'option'}
	WordPressStorageDetector.delete_option("require_url") - {'option'}
	WordPressRetrievalDetector.get_option("used_subject") - {'option'}
	WordPressStorageDetector.update_option("used_subject", $used_subject) - {'option'}
	WordPressStorageDetector.delete_option("name_minlength") - {'option'}
	UninstallDetector.delete_option("used_url") - {'option'}
	WordPressRetrievalDetector.get_option("used_captcha") - {'option'}
	WordPressRetrievalDetector.get_option("home") - {'option'}
	WordPressStorageDetector.update_option("used_email", $used_email) - {'option'}
	WordPressStorageDetector.update_option("email_subject", $email_subject) - {'option'}
	WordPressStorageDetector.delete_option("ip_address") - {'option'}
	WordPressRetrievalDetector.get_option("name_minlength") - {'option'}
	WordPressStorageDetector.add_option("ip_address", 1) - {'option'}
	WordPressRetrievalDetector.get_option("subject_minlength") - {'option'}
	WordPressRetrievalDetector.get_option("email_subject") - {'option'}
	WordPressStorageDetector.update_option("content_minlength", $content_minlength) - {'option'}
	WordPressRetrievalDetector.get_option("used_email") - {'option'}
	WordPressRetrievalDetector.get_option("user_referer") - {'option'}
	WordPressStorageDetector.delete_option("send_copy") - {'option'}
	WordPressStorageDetector.update_option("required_symbol", $required_symbol) - {'option'}
	WordPressStorageDetector.delete_option("used_phone") - {'option'}
	UninstallDetector.delete_option("phone_minlength") - {'option'}
	WordPressStorageDetector.delete_option("toemail") - {'option'}
	UninstallDetector.delete_option("required_symbol") - {'option'}
	WordPressRetrievalDetector.get_option("used_name") - {'option'}
	WordPressStorageDetector.delete_option("user_browser") - {'option'}
	WordPressStorageDetector.update_option("ip_address", $ip_address) - {'option'}
	WordPressStorageDetector.delete_option("used_name") - {'option'}
	WordPressStorageDetector.delete_option("user_referer") - {'option'}
	WordPressStorageDetector.add_option("used_subject", 1) - {'option'}
	UninstallDetector.delete_option("used_phone") - {'option'}
	WordPressStorageDetector.add_option("used_name", 1) - {'option'}
	WordPressStorageDetector.update_option("phone_minlength", $phone_minlength) - {'option'}
	WordPressStorageDetector.delete_option("used_captcha") - {'option'}
	WordPressRetrievalDetector.get_option("phone_minlength") - {'option'}
	UninstallDetector.delete_option("used_subject") - {'option'}
	WordPressStorageDetector.update_option("url_maxlength", $url_maxlength) - {'option'}
	UninstallDetector.delete_option("require_email") - {'option'}
	WordPressStorageDetector.update_option("fromemail", $fromemail) - {'option'}
	WordPressRetrievalDetector.get_option("siteurl") - {'option'}
	DeletionDetector.delete_option("used_email") - {'option'}
	DeletionDetector.delete_option("required_symbol") - {'option'}
	UninstallDetector.delete_option("user_browser") - {'option'}
	DeletionDetector.delete_option("user_browser") - {'option'}
	UninstallDetector.delete_option("url_minlength") - {'option'}
	UninstallDetector.delete_option("url_maxlength") - {'option'}
	WordPressStorageDetector.update_option("phone_maxlength", $phone_maxlength) - {'option'}
	WordPressStorageDetector.delete_option("used_subject") - {'option'}
	DeletionDetector.delete_option("require_subject") - {'option'}
	DeletionDetector.delete_option("subject_maxlength") - {'option'}
	WordPressStorageDetector.update_option("requirename", $requirename) - {'option'}
	DeletionDetector.delete_option("send_copy") - {'option'}
	UninstallDetector.delete_option("used_name") - {'option'}
	WordPressRetrievalDetector.get_option("subject_maxlength") - {'option'}
	WordPressStorageDetector.update_option("used_name", $used_name) - {'option'}
	WordPressStorageDetector.update_option("toemail", $toemail) - {'option'}
	DeletionDetector.delete_option("used_subject") - {'option'}
	DeletionDetector.delete_option("ip_address") - {'option'}
	DeletionDetector.delete_option("used_url") - {'option'}
	WordPressStorageDetector.delete_option("require_subject") - {'option'}
	UninstallDetector.delete_option("ip_address") - {'option'}
	WordPressRetrievalDetector.get_option("require_url") - {'option'}
	WordPressStorageDetector.update_option("send_copy", $send_copy) - {'option'}
	DeletionDetector.delete_option("phone_maxlength") - {'option'}
	WordPressStorageDetector.add_option("toemail", $user_email) - {'option'}
	DeletionDetector.delete_option("url_minlength") - {'option'}
	WordPressRetrievalDetector.get_option("toemail") - {'option'}
	WordPressRetrievalDetector.get_option("require_phone") - {'option'}
	WordPressRetrievalDetector.get_option("fromemail") - {'option'}
	WordPressStorageDetector.update_option("url_minlength", $url_minlength) - {'option'}
	DeletionDetector.delete_option("toemail") - {'option'}
	UninstallDetector.delete_option("name_minlength") - {'option'}
	WordPressStorageDetector.update_option("require_email", $require_email) - {'option'}
	DeletionDetector.delete_option("content_maxlength") - {'option'}
	WordPressStorageDetector.delete_option("email_subject") - {'option'}
	UninstallDetector.delete_option("toemail") - {'option'}
	DeletionDetector.delete_option("url_maxlength") - {'option'}
	UninstallDetector.delete_option("content_minlength") - {'option'}
	UninstallDetector.delete_option("used_captcha") - {'option'}
	WordPressStorageDetector.update_option("require_subject", $require_subject) - {'option'}
	WordPressRetrievalDetector.get_option("requirename") - {'option'}
	WordPressStorageDetector.update_option("require_url", $require_url) - {'option'}
	WordPressStorageDetector.delete_option("subject_minlength") - {'option'}
	DeletionDetector.delete_option("require_url") - {'option'}
	WordPressRetrievalDetector.get_option("required_symbol") - {'option'}
	WordPressStorageDetector.update_option("require_phone", $require_phone) - {'option'}
	WordPressRetrievalDetector.get_option("send_copy") - {'option'}
	DeletionDetector.delete_option("email_subject") - {'option'}
	UninstallDetector.delete_option("content_maxlength") - {'option'}
	WordPressRetrievalDetector.get_option("ip_address") - {'option'}
	DeletionDetector.delete_option("require_email") - {'option'}
	DeletionDetector.delete_option("name_maxlength") - {'option'}
	WordPressRetrievalDetector.get_option("used_phone") - {'option'}
	DeletionDetector.delete_option("used_name") - {'option'}
	UninstallDetector.delete_option("user_referer") - {'option'}
	UninstallDetector.delete_option("fromemail") - {'option'}
	WordPressStorageDetector.add_option("required_symbol", "*") - {'option'}
	WordPressRetrievalDetector.get_option("siteurl") - {'option'}
	DeletionDetector.delete_option("fromemail") - {'option'}
	WordPressStorageDetector.delete_option("content_maxlength") - {'option'}
	DeletionDetector.delete_option("phone_minlength") - {'option'}
	WordPressRetrievalDetector.get_option("user_browser") - {'option'}
	UninstallDetector.delete_option("require_subject") - {'option'}
	WordPressStorageDetector.delete_option("subject_maxlength") - {'option'}
	WordPressStorageDetector.delete_option("content_minlength") - {'option'}
	DeletionDetector.delete_option("subject_minlength") - {'option'}
	WordPressStorageDetector.delete_option("name_maxlength") - {'option'}
	UninstallDetector.delete_option("requirename") - {'option'}
	DeletionDetector.delete_option("used_phone") - {'option'}
	WordPressStorageDetector.update_option("used_captcha", $used_captcha) - {'option'}
	WordPressStorageDetector.update_option("user_referer", $user_referer) - {'option'}
	DeletionDetector.delete_option("user_referer") - {'option'}
	WordPressStorageDetector.update_option("used_phone", $used_phone) - {'option'}
	UninstallDetector.delete_option("name_maxlength") - {'option'}
	UninstallDetector.delete_option("subject_minlength") - {'option'}
	UninstallDetector.delete_option("email_subject") - {'option'}
	WordPressRetrievalDetector.get_option("url_minlength") - {'option'}
	WordPressRetrievalDetector.get_option("name_maxlength") - {'option'}
	WordPressRetrievalDetector.get_option("url_maxlength") - {'option'}
	DeletionDetector.delete_option("require_phone") - {'option'}
	WordPressRetrievalDetector.get_option("content_minlength") - {'option'}
	WordPressStorageDetector.add_option("requirename", 1) - {'option'}
	DeletionDetector.delete_option("name_minlength") - {'option'}
	UninstallDetector.delete_option("used_email") - {'option'}
	DeletionDetector.delete_option("requirename") - {'option'}
	WordPressRetrievalDetector.get_option("used_url") - {'option'}
password
	PropertyDetector.(unknown) - {'password'}
user
	WordPressRetrievalDetector.get_currentuserinfo() - {'user', 'user_meta'}
user_meta
	WordPressRetrievalDetector.get_currentuserinfo() - {'user', 'user_meta'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:19.370659.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 2204 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.663573.

1000 STORE_REACHES edges created
2000 STORE_REACHES edges created
2204 STORE_REACHES edges created
2204 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 564 nodes as PERSONAL
In total, tainted 564 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 958 nodes as ENCRYPTED
In total, tainted 958 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:31.230393.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:02:29.247737!
Request variable '$_POST["toemail"]' of personal types {'email'} is found.,,None
Request variable '$_POST["fromemail"]' of personal types {'email'} is found.,,None
Request variable '$_POST["require_email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["used_email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["email_subject"]' of personal types {'email'} is found.,,None
Request variable '$_POST["ip_address"]' of personal types {'ip', 'address'} is found.,,None
Request variable '$_POST["ct_email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["ct_email"]' of personal types {'email'} is found.,,None
DELETION call to delete_option("toemail") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("fromemail") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("requirename") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("used_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("name_minlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("name_maxlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("require_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("used_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("used_captcha") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("require_subject") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("used_subject") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("subject_minlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("subject_maxlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("email_subject") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("content_minlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("content_maxlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("ip_address") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("user_referer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("user_browser") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("used_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("require_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("url_minlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("url_maxlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("used_phone") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("require_phone") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("phone_minlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("phone_maxlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("required_symbol") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("send_copy") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
CRYPTOGRAPHY call to $this->getChannelMask().,None,None
CRYPTOGRAPHY call to $this->getChannelMask().,None,None
MD5 called with parameters [uniqid]. Ignore if [uniqid] does not contain personal information.,md5,None
MD5 called with parameters [REMOTE_PORT, uniqid, true, _SERVER]. Ignore if [REMOTE_PORT, uniqid, true, _SERVER] does not contain personal information.,md5,None
MD5 called with parameters [uniqid, microtime]. Ignore if [uniqid, microtime] does not contain personal information.,md5,None
SHA1 called with parameters [REMOTE_ADDR, uniqid, true, _SERVER]. Ignore if [REMOTE_ADDR, uniqid, true, _SERVER] does not contain personal information.,sha1,None
RETRIEVAL call to fread($this->_fp, 36).,None,None
RETRIEVAL call to fread($this->_fp, $fmt["SubchunkSize"] - 16 + $fmt["SubchunkSize"]1).,None,None
RETRIEVAL call to fread($this->_fp, 8).,None,None
RETRIEVAL call to fread($this->_fp, $subchunk["SubchunkSize"] + $subchunk["SubchunkSize"]1).,None,None
RETRIEVAL call to fread($this->_fp, $dataSize).,None,None
RETRIEVAL call to fread($fp, 64).,None,None
RETRIEVAL call to file_get_contents(dirname() . "/audio/en/error.wav").,None,None
STORAGE call to fwrite($this->_fp, $data).,None,None
STORAGE call to fwrite($fp, $this->makeHeader()).,None,None
STORAGE call to fwrite($fp, $this->getDataSubchunk()).,None,None
STORAGE call to fwrite($fp, date("Y-m-d H:i:s") . ": Securimage audio error " . $ex->getcontent() . "" . "
").,None,None
object property '$current_user->user_email' of personal types {'email'} is found.,,None
object property '$this->database_pass' of personal types {'password'} is found.,,None
Uninstall deletion call: DELETION call to delete_option("toemail") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("fromemail") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("requirename") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("used_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("name_minlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("name_maxlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("require_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("used_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("used_captcha") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("require_subject") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("used_subject") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("subject_minlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("subject_maxlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("email_subject") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("content_minlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("content_maxlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("ip_address") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("user_referer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("user_browser") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("used_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("require_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("url_minlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("url_maxlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("used_phone") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("require_phone") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("phone_minlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("phone_maxlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("required_symbol") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("send_copy") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
variable '$toemail' of personal types {'email'} is found.,,None
variable '$toemail' of personal types {'email'} is found.,,None
variable '$fromemail' of personal types {'email'} is found.,,None
variable '$fromemail' of personal types {'email'} is found.,,None
variable '$require_email' of personal types {'email'} is found.,,None
variable '$require_email' of personal types {'email'} is found.,,None
variable '$used_email' of personal types {'email'} is found.,,None
variable '$used_email' of personal types {'email'} is found.,,None
variable '$email_subject' of personal types {'email'} is found.,,None
variable '$email_subject' of personal types {'email'} is found.,,None
variable '$ip_address' of personal types {'ip', 'address'} is found.,,None
variable '$ip_address' of personal types {'ip', 'address'} is found.,,None
variable '$toemail' of personal types {'email'} is found.,,None
variable '$fromemail' of personal types {'email'} is found.,,None
variable '$email_subject' of personal types {'email'} is found.,,None
variable '$used_email' of personal types {'email'} is found.,,None
variable '$require_email' of personal types {'email'} is found.,,None
variable '$ip_address' of personal types {'ip', 'address'} is found.,,None
variable '$used_email' of personal types {'email'} is found.,,None
variable '$require_email' of personal types {'email'} is found.,,None
variable '$require_email' of personal types {'email'} is found.,,None
variable '$require_email' of personal types {'email'} is found.,,None
variable '$email_subject' of personal types {'email'} is found.,,None
variable '$ip_address' of personal types {'ip', 'address'} is found.,,None
variable '$toemail' of personal types {'email'} is found.,,None
variable '$fromemail' of personal types {'email'} is found.,,None
variable '$used_email' of personal types {'email'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$fromemail' of personal types {'email'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$fromemail' of personal types {'email'} is found.,,None
variable '$webmaster_email' of personal types {'email'} is found.,,None
variable '$webmaster_email' of personal types {'email'} is found.,,None
variable '$default_from_email' of personal types {'email'} is found.,,None
variable '$default_from_email' of personal types {'email'} is found.,,None
variable '$toemail' of personal types {'email'} is found.,,None
variable '$email_body' of personal types {'email'} is found.,,None
variable '$fromemail' of personal types {'email'} is found.,,None
variable '$email_subject' of personal types {'email'} is found.,,None
variable '$email_subject' of personal types {'email'} is found.,,None
variable '$email_subject' of personal types {'email'} is found.,,None
variable '$email_subject' of personal types {'email'} is found.,,None
variable '$email_body' of personal types {'email'} is found.,,None
variable '$email_body' of personal types {'email'} is found.,,None
variable '$email_subject' of personal types {'email'} is found.,,None
variable '$email_body' of personal types {'email'} is found.,,None
variable '$ipaddress' of personal types {'ip', 'address'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email_body' of personal types {'email'} is found.,,None
variable '$email_body' of personal types {'email'} is found.,,None
variable '$email_body' of personal types {'email'} is found.,,None
variable '$email_body' of personal types {'email'} is found.,,None
variable '$email_body' of personal types {'email'} is found.,,None
variable '$email_body' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email_body' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email_body' of personal types {'email'} is found.,,None
variable '$email_body' of personal types {'email'} is found.,,None
variable '$ip_address' of personal types {'ip', 'address'} is found.,,None
variable '$ipaddress' of personal types {'ip', 'address'} is found.,,None
variable '$email_body' of personal types {'email'} is found.,,None
variable '$email_body' of personal types {'email'} is found.,,None
variable '$email_body' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("siteurl") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("require_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("used_captcha") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("used_subject") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("require_subject") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("email_subject") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("subject_minlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("subject_maxlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("content_minlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("content_maxlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("ip_address") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("user_referer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("user_browser") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("used_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("require_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("url_minlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("url_maxlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("used_phone") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("toemail") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("require_phone") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("phone_minlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("phone_maxlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("required_symbol") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("send_copy") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("fromemail") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("requirename") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("name_minlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("name_maxlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("used_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("used_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_currentuserinfo() alters data types {'user', 'user_meta'}. Returns (bool|WP_User).,None,None
RETRIEVAL call to get_option("siteurl") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
STORAGE call to update_option("toemail", $toemail) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("fromemail", $fromemail) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("requirename", $requirename) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("used_name", $used_name) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("name_minlength", $name_minlength) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("name_maxlength", $name_maxlength) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("require_email", $require_email) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("used_email", $used_email) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("used_captcha", $used_captcha) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("require_subject", $require_subject) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("used_subject", $used_subject) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("subject_minlength", $subject_minlength) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("subject_maxlength", $subject_maxlength) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("email_subject", $email_subject) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("content_minlength", $content_minlength) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("content_maxlength", $content_maxlength) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("ip_address", $ip_address) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("user_referer", $user_referer) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("user_browser", $user_browser) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("used_url", $used_url) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("require_url", $require_url) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("url_minlength", $url_minlength) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("url_maxlength", $url_maxlength) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("used_phone", $used_phone) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("require_phone", $require_phone) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("phone_minlength", $phone_minlength) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("phone_maxlength", $phone_maxlength) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("required_symbol", $required_symbol) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("send_copy", $send_copy) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("toemail", $user_email) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("fromemail", $fromemail) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("requirename", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("used_name", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("require_email", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("used_email", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("used_subject", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("email_subject", "This message sent to you from your site") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("ip_address", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("required_symbol", "*") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("toemail") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("fromemail") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("requirename") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("used_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("name_minlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("name_maxlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("require_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("used_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("used_captcha") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("require_subject") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("used_subject") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("subject_minlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("subject_maxlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("email_subject") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("content_minlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("content_maxlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("ip_address") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("user_referer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("user_browser") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("used_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("require_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("url_minlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("url_maxlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("used_phone") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("require_phone") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("phone_minlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("phone_maxlength") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("required_symbol") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("send_copy") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] PII of types (['ip', 'email', 'address']) stored through WordPress function "add_option("fromemail", $fromemail)", found in file index.php at line 62. 

[has_storage] PII of types (['email']) stored through WordPress function "update_option("used_email", $used_email)", found in file contact_admin.php at line 138. 

[has_storage] PII of types (['email']) stored through WordPress function "update_option("email_subject", $email_subject)", found in file contact_admin.php at line 150. 

[has_storage] PII of types (['ip', 'address']) stored through WordPress function "update_option("ip_address", $ip_address)", found in file contact_admin.php at line 158. 

[has_storage] PII of types (['email']) stored through WordPress function "update_option("fromemail", $fromemail)", found in file contact_admin.php at line 126. 

[has_storage] PII of types (['email']) stored through WordPress function "update_option("toemail", $toemail)", found in file contact_admin.php at line 124. 

[has_storage] PII of types (['email']) stored through WordPress function "add_option("toemail", $user_email)", found in file index.php at line 61. 

[has_storage] PII of types (['email']) stored through WordPress function "update_option("require_email", $require_email)", found in file contact_admin.php at line 136. 

[has_storage] Storage check is WP 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("fromemail", $fromemail) has deletion method delete_option("toemail"). Storage method found in file index.php at line 62. Deletion method found in file uninstall.php at line 12. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("fromemail", $fromemail) has deletion method delete_option("fromemail"). Storage method found in file index.php at line 62. Deletion method found in file uninstall.php at line 13. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("fromemail", $fromemail) has deletion method delete_option("requirename"). Storage method found in file index.php at line 62. Deletion method found in file uninstall.php at line 14. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("fromemail", $fromemail) has deletion method delete_option("used_name"). Storage method found in file index.php at line 62. Deletion method found in file uninstall.php at line 15. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("fromemail", $fromemail) has deletion method delete_option("name_minlength"). Storage method found in file index.php at line 62. Deletion method found in file uninstall.php at line 16. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("fromemail", $fromemail) has deletion method delete_option("name_maxlength"). Storage method found in file index.php at line 62. Deletion method found in file uninstall.php at line 17. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("fromemail", $fromemail) has deletion method delete_option("require_email"). Storage method found in file index.php at line 62. Deletion method found in file uninstall.php at line 18. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("fromemail", $fromemail) has deletion method delete_option("used_email"). Storage method found in file index.php at line 62. Deletion method found in file uninstall.php at line 19. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("fromemail", $fromemail) has deletion method delete_option("used_captcha"). Storage method found in file index.php at line 62. Deletion method found in file uninstall.php at line 20. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("fromemail", $fromemail) has deletion method delete_option("require_subject"). Storage method found in file index.php at line 62. Deletion method found in file uninstall.php at line 21. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("fromemail", $fromemail) has deletion method delete_option("used_subject"). Storage method found in file index.php at line 62. Deletion method found in file uninstall.php at line 22. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("fromemail", $fromemail) has deletion method delete_option("subject_minlength"). Storage method found in file index.php at line 62. Deletion method found in file uninstall.php at line 23. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("fromemail", $fromemail) has deletion method delete_option("subject_maxlength"). Storage method found in file index.php at line 62. Deletion method found in file uninstall.php at line 24. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("fromemail", $fromemail) has deletion method delete_option("email_subject"). Storage method found in file index.php at line 62. Deletion method found in file uninstall.php at line 25. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("fromemail", $fromemail) has deletion method delete_option("content_minlength"). Storage method found in file index.php at line 62. Deletion method found in file uninstall.php at line 26. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("fromemail", $fromemail) has deletion method delete_option("content_maxlength"). Storage method found in file index.php at line 62. Deletion method found in file uninstall.php at line 27. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("fromemail", $fromemail) has deletion method delete_option("ip_address"). Storage method found in file index.php at line 62. Deletion method found in file uninstall.php at line 28. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("fromemail", $fromemail) has deletion method delete_option("user_referer"). Storage method found in file index.php at line 62. Deletion method found in file uninstall.php at line 29. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("fromemail", $fromemail) has deletion method delete_option("user_browser"). Storage method found in file index.php at line 62. Deletion method found in file uninstall.php at line 30. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("fromemail", $fromemail) has deletion method delete_option("used_url"). Storage method found in file index.php at line 62. Deletion method found in file uninstall.php at line 31. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("fromemail", $fromemail) has deletion method delete_option("require_url"). Storage method found in file index.php at line 62. Deletion method found in file uninstall.php at line 32. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("fromemail", $fromemail) has deletion method delete_option("url_minlength"). Storage method found in file index.php at line 62. Deletion method found in file uninstall.php at line 33. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("fromemail", $fromemail) has deletion method delete_option("url_maxlength"). Storage method found in file index.php at line 62. Deletion method found in file uninstall.php at line 34. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("fromemail", $fromemail) has deletion method delete_option("used_phone"). Storage method found in file index.php at line 62. Deletion method found in file uninstall.php at line 35. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("fromemail", $fromemail) has deletion method delete_option("require_phone"). Storage method found in file index.php at line 62. Deletion method found in file uninstall.php at line 36. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("fromemail", $fromemail) has deletion method delete_option("phone_minlength"). Storage method found in file index.php at line 62. Deletion method found in file uninstall.php at line 37. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("fromemail", $fromemail) has deletion method delete_option("phone_maxlength"). Storage method found in file index.php at line 62. Deletion method found in file uninstall.php at line 38. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("fromemail", $fromemail) has deletion method delete_option("required_symbol"). Storage method found in file index.php at line 62. Deletion method found in file uninstall.php at line 39. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("fromemail", $fromemail) has deletion method delete_option("send_copy"). Storage method found in file index.php at line 62. Deletion method found in file uninstall.php at line 40. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("used_email", $used_email) has deletion method delete_option("toemail"). Storage method found in file contact_admin.php at line 138. Deletion method found in file uninstall.php at line 12. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("used_email", $used_email) has deletion method delete_option("fromemail"). Storage method found in file contact_admin.php at line 138. Deletion method found in file uninstall.php at line 13. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("used_email", $used_email) has deletion method delete_option("requirename"). Storage method found in file contact_admin.php at line 138. Deletion method found in file uninstall.php at line 14. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("used_email", $used_email) has deletion method delete_option("used_name"). Storage method found in file contact_admin.php at line 138. Deletion method found in file uninstall.php at line 15. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("used_email", $used_email) has deletion method delete_option("name_minlength"). Storage method found in file contact_admin.php at line 138. Deletion method found in file uninstall.php at line 16. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("used_email", $used_email) has deletion method delete_option("name_maxlength"). Storage method found in file contact_admin.php at line 138. Deletion method found in file uninstall.php at line 17. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("used_email", $used_email) has deletion method delete_option("require_email"). Storage method found in file contact_admin.php at line 138. Deletion method found in file uninstall.php at line 18. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("used_email", $used_email) has deletion method delete_option("used_email"). Storage method found in file contact_admin.php at line 138. Deletion method found in file uninstall.php at line 19. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("used_email", $used_email) has deletion method delete_option("used_captcha"). Storage method found in file contact_admin.php at line 138. Deletion method found in file uninstall.php at line 20. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("used_email", $used_email) has deletion method delete_option("require_subject"). Storage method found in file contact_admin.php at line 138. Deletion method found in file uninstall.php at line 21. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("used_email", $used_email) has deletion method delete_option("used_subject"). Storage method found in file contact_admin.php at line 138. Deletion method found in file uninstall.php at line 22. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("used_email", $used_email) has deletion method delete_option("subject_minlength"). Storage method found in file contact_admin.php at line 138. Deletion method found in file uninstall.php at line 23. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("used_email", $used_email) has deletion method delete_option("subject_maxlength"). Storage method found in file contact_admin.php at line 138. Deletion method found in file uninstall.php at line 24. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("used_email", $used_email) has deletion method delete_option("email_subject"). Storage method found in file contact_admin.php at line 138. Deletion method found in file uninstall.php at line 25. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("used_email", $used_email) has deletion method delete_option("content_minlength"). Storage method found in file contact_admin.php at line 138. Deletion method found in file uninstall.php at line 26. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("used_email", $used_email) has deletion method delete_option("content_maxlength"). Storage method found in file contact_admin.php at line 138. Deletion method found in file uninstall.php at line 27. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("used_email", $used_email) has deletion method delete_option("ip_address"). Storage method found in file contact_admin.php at line 138. Deletion method found in file uninstall.php at line 28. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("used_email", $used_email) has deletion method delete_option("user_referer"). Storage method found in file contact_admin.php at line 138. Deletion method found in file uninstall.php at line 29. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("used_email", $used_email) has deletion method delete_option("user_browser"). Storage method found in file contact_admin.php at line 138. Deletion method found in file uninstall.php at line 30. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("used_email", $used_email) has deletion method delete_option("used_url"). Storage method found in file contact_admin.php at line 138. Deletion method found in file uninstall.php at line 31. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("used_email", $used_email) has deletion method delete_option("require_url"). Storage method found in file contact_admin.php at line 138. Deletion method found in file uninstall.php at line 32. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("used_email", $used_email) has deletion method delete_option("url_minlength"). Storage method found in file contact_admin.php at line 138. Deletion method found in file uninstall.php at line 33. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("used_email", $used_email) has deletion method delete_option("url_maxlength"). Storage method found in file contact_admin.php at line 138. Deletion method found in file uninstall.php at line 34. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("used_email", $used_email) has deletion method delete_option("used_phone"). Storage method found in file contact_admin.php at line 138. Deletion method found in file uninstall.php at line 35. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("used_email", $used_email) has deletion method delete_option("require_phone"). Storage method found in file contact_admin.php at line 138. Deletion method found in file uninstall.php at line 36. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("used_email", $used_email) has deletion method delete_option("phone_minlength"). Storage method found in file contact_admin.php at line 138. Deletion method found in file uninstall.php at line 37. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("used_email", $used_email) has deletion method delete_option("phone_maxlength"). Storage method found in file contact_admin.php at line 138. Deletion method found in file uninstall.php at line 38. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("used_email", $used_email) has deletion method delete_option("required_symbol"). Storage method found in file contact_admin.php at line 138. Deletion method found in file uninstall.php at line 39. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("used_email", $used_email) has deletion method delete_option("send_copy"). Storage method found in file contact_admin.php at line 138. Deletion method found in file uninstall.php at line 40. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("email_subject", $email_subject) has deletion method delete_option("toemail"). Storage method found in file contact_admin.php at line 150. Deletion method found in file uninstall.php at line 12. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("email_subject", $email_subject) has deletion method delete_option("fromemail"). Storage method found in file contact_admin.php at line 150. Deletion method found in file uninstall.php at line 13. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("email_subject", $email_subject) has deletion method delete_option("requirename"). Storage method found in file contact_admin.php at line 150. Deletion method found in file uninstall.php at line 14. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("email_subject", $email_subject) has deletion method delete_option("used_name"). Storage method found in file contact_admin.php at line 150. Deletion method found in file uninstall.php at line 15. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("email_subject", $email_subject) has deletion method delete_option("name_minlength"). Storage method found in file contact_admin.php at line 150. Deletion method found in file uninstall.php at line 16. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("email_subject", $email_subject) has deletion method delete_option("name_maxlength"). Storage method found in file contact_admin.php at line 150. Deletion method found in file uninstall.php at line 17. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("email_subject", $email_subject) has deletion method delete_option("require_email"). Storage method found in file contact_admin.php at line 150. Deletion method found in file uninstall.php at line 18. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("email_subject", $email_subject) has deletion method delete_option("used_email"). Storage method found in file contact_admin.php at line 150. Deletion method found in file uninstall.php at line 19. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("email_subject", $email_subject) has deletion method delete_option("used_captcha"). Storage method found in file contact_admin.php at line 150. Deletion method found in file uninstall.php at line 20. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("email_subject", $email_subject) has deletion method delete_option("require_subject"). Storage method found in file contact_admin.php at line 150. Deletion method found in file uninstall.php at line 21. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("email_subject", $email_subject) has deletion method delete_option("used_subject"). Storage method found in file contact_admin.php at line 150. Deletion method found in file uninstall.php at line 22. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("email_subject", $email_subject) has deletion method delete_option("subject_minlength"). Storage method found in file contact_admin.php at line 150. Deletion method found in file uninstall.php at line 23. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("email_subject", $email_subject) has deletion method delete_option("subject_maxlength"). Storage method found in file contact_admin.php at line 150. Deletion method found in file uninstall.php at line 24. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("email_subject", $email_subject) has deletion method delete_option("email_subject"). Storage method found in file contact_admin.php at line 150. Deletion method found in file uninstall.php at line 25. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("email_subject", $email_subject) has deletion method delete_option("content_minlength"). Storage method found in file contact_admin.php at line 150. Deletion method found in file uninstall.php at line 26. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("email_subject", $email_subject) has deletion method delete_option("content_maxlength"). Storage method found in file contact_admin.php at line 150. Deletion method found in file uninstall.php at line 27. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("email_subject", $email_subject) has deletion method delete_option("ip_address"). Storage method found in file contact_admin.php at line 150. Deletion method found in file uninstall.php at line 28. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("email_subject", $email_subject) has deletion method delete_option("user_referer"). Storage method found in file contact_admin.php at line 150. Deletion method found in file uninstall.php at line 29. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("email_subject", $email_subject) has deletion method delete_option("user_browser"). Storage method found in file contact_admin.php at line 150. Deletion method found in file uninstall.php at line 30. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("email_subject", $email_subject) has deletion method delete_option("used_url"). Storage method found in file contact_admin.php at line 150. Deletion method found in file uninstall.php at line 31. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("email_subject", $email_subject) has deletion method delete_option("require_url"). Storage method found in file contact_admin.php at line 150. Deletion method found in file uninstall.php at line 32. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("email_subject", $email_subject) has deletion method delete_option("url_minlength"). Storage method found in file contact_admin.php at line 150. Deletion method found in file uninstall.php at line 33. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("email_subject", $email_subject) has deletion method delete_option("url_maxlength"). Storage method found in file contact_admin.php at line 150. Deletion method found in file uninstall.php at line 34. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("email_subject", $email_subject) has deletion method delete_option("used_phone"). Storage method found in file contact_admin.php at line 150. Deletion method found in file uninstall.php at line 35. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("email_subject", $email_subject) has deletion method delete_option("require_phone"). Storage method found in file contact_admin.php at line 150. Deletion method found in file uninstall.php at line 36. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("email_subject", $email_subject) has deletion method delete_option("phone_minlength"). Storage method found in file contact_admin.php at line 150. Deletion method found in file uninstall.php at line 37. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("email_subject", $email_subject) has deletion method delete_option("phone_maxlength"). Storage method found in file contact_admin.php at line 150. Deletion method found in file uninstall.php at line 38. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("email_subject", $email_subject) has deletion method delete_option("required_symbol"). Storage method found in file contact_admin.php at line 150. Deletion method found in file uninstall.php at line 39. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("email_subject", $email_subject) has deletion method delete_option("send_copy"). Storage method found in file contact_admin.php at line 150. Deletion method found in file uninstall.php at line 40. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("ip_address", $ip_address) has deletion method delete_option("toemail"). Storage method found in file contact_admin.php at line 158. Deletion method found in file uninstall.php at line 12. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("ip_address", $ip_address) has deletion method delete_option("fromemail"). Storage method found in file contact_admin.php at line 158. Deletion method found in file uninstall.php at line 13. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("ip_address", $ip_address) has deletion method delete_option("requirename"). Storage method found in file contact_admin.php at line 158. Deletion method found in file uninstall.php at line 14. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("ip_address", $ip_address) has deletion method delete_option("used_name"). Storage method found in file contact_admin.php at line 158. Deletion method found in file uninstall.php at line 15. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("ip_address", $ip_address) has deletion method delete_option("name_minlength"). Storage method found in file contact_admin.php at line 158. Deletion method found in file uninstall.php at line 16. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("ip_address", $ip_address) has deletion method delete_option("name_maxlength"). Storage method found in file contact_admin.php at line 158. Deletion method found in file uninstall.php at line 17. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("ip_address", $ip_address) has deletion method delete_option("require_email"). Storage method found in file contact_admin.php at line 158. Deletion method found in file uninstall.php at line 18. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("ip_address", $ip_address) has deletion method delete_option("used_email"). Storage method found in file contact_admin.php at line 158. Deletion method found in file uninstall.php at line 19. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("ip_address", $ip_address) has deletion method delete_option("used_captcha"). Storage method found in file contact_admin.php at line 158. Deletion method found in file uninstall.php at line 20. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("ip_address", $ip_address) has deletion method delete_option("require_subject"). Storage method found in file contact_admin.php at line 158. Deletion method found in file uninstall.php at line 21. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("ip_address", $ip_address) has deletion method delete_option("used_subject"). Storage method found in file contact_admin.php at line 158. Deletion method found in file uninstall.php at line 22. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("ip_address", $ip_address) has deletion method delete_option("subject_minlength"). Storage method found in file contact_admin.php at line 158. Deletion method found in file uninstall.php at line 23. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("ip_address", $ip_address) has deletion method delete_option("subject_maxlength"). Storage method found in file contact_admin.php at line 158. Deletion method found in file uninstall.php at line 24. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("ip_address", $ip_address) has deletion method delete_option("email_subject"). Storage method found in file contact_admin.php at line 158. Deletion method found in file uninstall.php at line 25. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("ip_address", $ip_address) has deletion method delete_option("content_minlength"). Storage method found in file contact_admin.php at line 158. Deletion method found in file uninstall.php at line 26. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("ip_address", $ip_address) has deletion method delete_option("content_maxlength"). Storage method found in file contact_admin.php at line 158. Deletion method found in file uninstall.php at line 27. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("ip_address", $ip_address) has deletion method delete_option("ip_address"). Storage method found in file contact_admin.php at line 158. Deletion method found in file uninstall.php at line 28. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("ip_address", $ip_address) has deletion method delete_option("user_referer"). Storage method found in file contact_admin.php at line 158. Deletion method found in file uninstall.php at line 29. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("ip_address", $ip_address) has deletion method delete_option("user_browser"). Storage method found in file contact_admin.php at line 158. Deletion method found in file uninstall.php at line 30. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("ip_address", $ip_address) has deletion method delete_option("used_url"). Storage method found in file contact_admin.php at line 158. Deletion method found in file uninstall.php at line 31. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("ip_address", $ip_address) has deletion method delete_option("require_url"). Storage method found in file contact_admin.php at line 158. Deletion method found in file uninstall.php at line 32. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("ip_address", $ip_address) has deletion method delete_option("url_minlength"). Storage method found in file contact_admin.php at line 158. Deletion method found in file uninstall.php at line 33. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("ip_address", $ip_address) has deletion method delete_option("url_maxlength"). Storage method found in file contact_admin.php at line 158. Deletion method found in file uninstall.php at line 34. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("ip_address", $ip_address) has deletion method delete_option("used_phone"). Storage method found in file contact_admin.php at line 158. Deletion method found in file uninstall.php at line 35. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("ip_address", $ip_address) has deletion method delete_option("require_phone"). Storage method found in file contact_admin.php at line 158. Deletion method found in file uninstall.php at line 36. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("ip_address", $ip_address) has deletion method delete_option("phone_minlength"). Storage method found in file contact_admin.php at line 158. Deletion method found in file uninstall.php at line 37. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("ip_address", $ip_address) has deletion method delete_option("phone_maxlength"). Storage method found in file contact_admin.php at line 158. Deletion method found in file uninstall.php at line 38. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("ip_address", $ip_address) has deletion method delete_option("required_symbol"). Storage method found in file contact_admin.php at line 158. Deletion method found in file uninstall.php at line 39. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("ip_address", $ip_address) has deletion method delete_option("send_copy"). Storage method found in file contact_admin.php at line 158. Deletion method found in file uninstall.php at line 40. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fromemail", $fromemail) has deletion method delete_option("toemail"). Storage method found in file contact_admin.php at line 126. Deletion method found in file uninstall.php at line 12. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fromemail", $fromemail) has deletion method delete_option("fromemail"). Storage method found in file contact_admin.php at line 126. Deletion method found in file uninstall.php at line 13. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fromemail", $fromemail) has deletion method delete_option("requirename"). Storage method found in file contact_admin.php at line 126. Deletion method found in file uninstall.php at line 14. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fromemail", $fromemail) has deletion method delete_option("used_name"). Storage method found in file contact_admin.php at line 126. Deletion method found in file uninstall.php at line 15. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fromemail", $fromemail) has deletion method delete_option("name_minlength"). Storage method found in file contact_admin.php at line 126. Deletion method found in file uninstall.php at line 16. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fromemail", $fromemail) has deletion method delete_option("name_maxlength"). Storage method found in file contact_admin.php at line 126. Deletion method found in file uninstall.php at line 17. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fromemail", $fromemail) has deletion method delete_option("require_email"). Storage method found in file contact_admin.php at line 126. Deletion method found in file uninstall.php at line 18. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fromemail", $fromemail) has deletion method delete_option("used_email"). Storage method found in file contact_admin.php at line 126. Deletion method found in file uninstall.php at line 19. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fromemail", $fromemail) has deletion method delete_option("used_captcha"). Storage method found in file contact_admin.php at line 126. Deletion method found in file uninstall.php at line 20. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fromemail", $fromemail) has deletion method delete_option("require_subject"). Storage method found in file contact_admin.php at line 126. Deletion method found in file uninstall.php at line 21. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fromemail", $fromemail) has deletion method delete_option("used_subject"). Storage method found in file contact_admin.php at line 126. Deletion method found in file uninstall.php at line 22. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fromemail", $fromemail) has deletion method delete_option("subject_minlength"). Storage method found in file contact_admin.php at line 126. Deletion method found in file uninstall.php at line 23. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fromemail", $fromemail) has deletion method delete_option("subject_maxlength"). Storage method found in file contact_admin.php at line 126. Deletion method found in file uninstall.php at line 24. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fromemail", $fromemail) has deletion method delete_option("email_subject"). Storage method found in file contact_admin.php at line 126. Deletion method found in file uninstall.php at line 25. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fromemail", $fromemail) has deletion method delete_option("content_minlength"). Storage method found in file contact_admin.php at line 126. Deletion method found in file uninstall.php at line 26. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fromemail", $fromemail) has deletion method delete_option("content_maxlength"). Storage method found in file contact_admin.php at line 126. Deletion method found in file uninstall.php at line 27. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fromemail", $fromemail) has deletion method delete_option("ip_address"). Storage method found in file contact_admin.php at line 126. Deletion method found in file uninstall.php at line 28. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fromemail", $fromemail) has deletion method delete_option("user_referer"). Storage method found in file contact_admin.php at line 126. Deletion method found in file uninstall.php at line 29. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fromemail", $fromemail) has deletion method delete_option("user_browser"). Storage method found in file contact_admin.php at line 126. Deletion method found in file uninstall.php at line 30. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fromemail", $fromemail) has deletion method delete_option("used_url"). Storage method found in file contact_admin.php at line 126. Deletion method found in file uninstall.php at line 31. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fromemail", $fromemail) has deletion method delete_option("require_url"). Storage method found in file contact_admin.php at line 126. Deletion method found in file uninstall.php at line 32. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fromemail", $fromemail) has deletion method delete_option("url_minlength"). Storage method found in file contact_admin.php at line 126. Deletion method found in file uninstall.php at line 33. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fromemail", $fromemail) has deletion method delete_option("url_maxlength"). Storage method found in file contact_admin.php at line 126. Deletion method found in file uninstall.php at line 34. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fromemail", $fromemail) has deletion method delete_option("used_phone"). Storage method found in file contact_admin.php at line 126. Deletion method found in file uninstall.php at line 35. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fromemail", $fromemail) has deletion method delete_option("require_phone"). Storage method found in file contact_admin.php at line 126. Deletion method found in file uninstall.php at line 36. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fromemail", $fromemail) has deletion method delete_option("phone_minlength"). Storage method found in file contact_admin.php at line 126. Deletion method found in file uninstall.php at line 37. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fromemail", $fromemail) has deletion method delete_option("phone_maxlength"). Storage method found in file contact_admin.php at line 126. Deletion method found in file uninstall.php at line 38. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fromemail", $fromemail) has deletion method delete_option("required_symbol"). Storage method found in file contact_admin.php at line 126. Deletion method found in file uninstall.php at line 39. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fromemail", $fromemail) has deletion method delete_option("send_copy"). Storage method found in file contact_admin.php at line 126. Deletion method found in file uninstall.php at line 40. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("toemail", $toemail) has deletion method delete_option("toemail"). Storage method found in file contact_admin.php at line 124. Deletion method found in file uninstall.php at line 12. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("toemail", $toemail) has deletion method delete_option("fromemail"). Storage method found in file contact_admin.php at line 124. Deletion method found in file uninstall.php at line 13. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("toemail", $toemail) has deletion method delete_option("requirename"). Storage method found in file contact_admin.php at line 124. Deletion method found in file uninstall.php at line 14. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("toemail", $toemail) has deletion method delete_option("used_name"). Storage method found in file contact_admin.php at line 124. Deletion method found in file uninstall.php at line 15. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("toemail", $toemail) has deletion method delete_option("name_minlength"). Storage method found in file contact_admin.php at line 124. Deletion method found in file uninstall.php at line 16. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("toemail", $toemail) has deletion method delete_option("name_maxlength"). Storage method found in file contact_admin.php at line 124. Deletion method found in file uninstall.php at line 17. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("toemail", $toemail) has deletion method delete_option("require_email"). Storage method found in file contact_admin.php at line 124. Deletion method found in file uninstall.php at line 18. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("toemail", $toemail) has deletion method delete_option("used_email"). Storage method found in file contact_admin.php at line 124. Deletion method found in file uninstall.php at line 19. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("toemail", $toemail) has deletion method delete_option("used_captcha"). Storage method found in file contact_admin.php at line 124. Deletion method found in file uninstall.php at line 20. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("toemail", $toemail) has deletion method delete_option("require_subject"). Storage method found in file contact_admin.php at line 124. Deletion method found in file uninstall.php at line 21. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("toemail", $toemail) has deletion method delete_option("used_subject"). Storage method found in file contact_admin.php at line 124. Deletion method found in file uninstall.php at line 22. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("toemail", $toemail) has deletion method delete_option("subject_minlength"). Storage method found in file contact_admin.php at line 124. Deletion method found in file uninstall.php at line 23. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("toemail", $toemail) has deletion method delete_option("subject_maxlength"). Storage method found in file contact_admin.php at line 124. Deletion method found in file uninstall.php at line 24. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("toemail", $toemail) has deletion method delete_option("email_subject"). Storage method found in file contact_admin.php at line 124. Deletion method found in file uninstall.php at line 25. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("toemail", $toemail) has deletion method delete_option("content_minlength"). Storage method found in file contact_admin.php at line 124. Deletion method found in file uninstall.php at line 26. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("toemail", $toemail) has deletion method delete_option("content_maxlength"). Storage method found in file contact_admin.php at line 124. Deletion method found in file uninstall.php at line 27. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("toemail", $toemail) has deletion method delete_option("ip_address"). Storage method found in file contact_admin.php at line 124. Deletion method found in file uninstall.php at line 28. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("toemail", $toemail) has deletion method delete_option("user_referer"). Storage method found in file contact_admin.php at line 124. Deletion method found in file uninstall.php at line 29. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("toemail", $toemail) has deletion method delete_option("user_browser"). Storage method found in file contact_admin.php at line 124. Deletion method found in file uninstall.php at line 30. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("toemail", $toemail) has deletion method delete_option("used_url"). Storage method found in file contact_admin.php at line 124. Deletion method found in file uninstall.php at line 31. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("toemail", $toemail) has deletion method delete_option("require_url"). Storage method found in file contact_admin.php at line 124. Deletion method found in file uninstall.php at line 32. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("toemail", $toemail) has deletion method delete_option("url_minlength"). Storage method found in file contact_admin.php at line 124. Deletion method found in file uninstall.php at line 33. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("toemail", $toemail) has deletion method delete_option("url_maxlength"). Storage method found in file contact_admin.php at line 124. Deletion method found in file uninstall.php at line 34. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("toemail", $toemail) has deletion method delete_option("used_phone"). Storage method found in file contact_admin.php at line 124. Deletion method found in file uninstall.php at line 35. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("toemail", $toemail) has deletion method delete_option("require_phone"). Storage method found in file contact_admin.php at line 124. Deletion method found in file uninstall.php at line 36. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("toemail", $toemail) has deletion method delete_option("phone_minlength"). Storage method found in file contact_admin.php at line 124. Deletion method found in file uninstall.php at line 37. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("toemail", $toemail) has deletion method delete_option("phone_maxlength"). Storage method found in file contact_admin.php at line 124. Deletion method found in file uninstall.php at line 38. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("toemail", $toemail) has deletion method delete_option("required_symbol"). Storage method found in file contact_admin.php at line 124. Deletion method found in file uninstall.php at line 39. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("toemail", $toemail) has deletion method delete_option("send_copy"). Storage method found in file contact_admin.php at line 124. Deletion method found in file uninstall.php at line 40. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("toemail", $user_email) has deletion method delete_option("toemail"). Storage method found in file index.php at line 61. Deletion method found in file uninstall.php at line 12. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("toemail", $user_email) has deletion method delete_option("fromemail"). Storage method found in file index.php at line 61. Deletion method found in file uninstall.php at line 13. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("toemail", $user_email) has deletion method delete_option("requirename"). Storage method found in file index.php at line 61. Deletion method found in file uninstall.php at line 14. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("toemail", $user_email) has deletion method delete_option("used_name"). Storage method found in file index.php at line 61. Deletion method found in file uninstall.php at line 15. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("toemail", $user_email) has deletion method delete_option("name_minlength"). Storage method found in file index.php at line 61. Deletion method found in file uninstall.php at line 16. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("toemail", $user_email) has deletion method delete_option("name_maxlength"). Storage method found in file index.php at line 61. Deletion method found in file uninstall.php at line 17. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("toemail", $user_email) has deletion method delete_option("require_email"). Storage method found in file index.php at line 61. Deletion method found in file uninstall.php at line 18. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("toemail", $user_email) has deletion method delete_option("used_email"). Storage method found in file index.php at line 61. Deletion method found in file uninstall.php at line 19. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("toemail", $user_email) has deletion method delete_option("used_captcha"). Storage method found in file index.php at line 61. Deletion method found in file uninstall.php at line 20. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("toemail", $user_email) has deletion method delete_option("require_subject"). Storage method found in file index.php at line 61. Deletion method found in file uninstall.php at line 21. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("toemail", $user_email) has deletion method delete_option("used_subject"). Storage method found in file index.php at line 61. Deletion method found in file uninstall.php at line 22. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("toemail", $user_email) has deletion method delete_option("subject_minlength"). Storage method found in file index.php at line 61. Deletion method found in file uninstall.php at line 23. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("toemail", $user_email) has deletion method delete_option("subject_maxlength"). Storage method found in file index.php at line 61. Deletion method found in file uninstall.php at line 24. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("toemail", $user_email) has deletion method delete_option("email_subject"). Storage method found in file index.php at line 61. Deletion method found in file uninstall.php at line 25. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("toemail", $user_email) has deletion method delete_option("content_minlength"). Storage method found in file index.php at line 61. Deletion method found in file uninstall.php at line 26. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("toemail", $user_email) has deletion method delete_option("content_maxlength"). Storage method found in file index.php at line 61. Deletion method found in file uninstall.php at line 27. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("toemail", $user_email) has deletion method delete_option("ip_address"). Storage method found in file index.php at line 61. Deletion method found in file uninstall.php at line 28. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("toemail", $user_email) has deletion method delete_option("user_referer"). Storage method found in file index.php at line 61. Deletion method found in file uninstall.php at line 29. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("toemail", $user_email) has deletion method delete_option("user_browser"). Storage method found in file index.php at line 61. Deletion method found in file uninstall.php at line 30. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("toemail", $user_email) has deletion method delete_option("used_url"). Storage method found in file index.php at line 61. Deletion method found in file uninstall.php at line 31. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("toemail", $user_email) has deletion method delete_option("require_url"). Storage method found in file index.php at line 61. Deletion method found in file uninstall.php at line 32. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("toemail", $user_email) has deletion method delete_option("url_minlength"). Storage method found in file index.php at line 61. Deletion method found in file uninstall.php at line 33. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("toemail", $user_email) has deletion method delete_option("url_maxlength"). Storage method found in file index.php at line 61. Deletion method found in file uninstall.php at line 34. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("toemail", $user_email) has deletion method delete_option("used_phone"). Storage method found in file index.php at line 61. Deletion method found in file uninstall.php at line 35. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("toemail", $user_email) has deletion method delete_option("require_phone"). Storage method found in file index.php at line 61. Deletion method found in file uninstall.php at line 36. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("toemail", $user_email) has deletion method delete_option("phone_minlength"). Storage method found in file index.php at line 61. Deletion method found in file uninstall.php at line 37. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("toemail", $user_email) has deletion method delete_option("phone_maxlength"). Storage method found in file index.php at line 61. Deletion method found in file uninstall.php at line 38. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("toemail", $user_email) has deletion method delete_option("required_symbol"). Storage method found in file index.php at line 61. Deletion method found in file uninstall.php at line 39. 

[Art.17, Right to erasure] Wordpress storage of PII through add_option("toemail", $user_email) has deletion method delete_option("send_copy"). Storage method found in file index.php at line 61. Deletion method found in file uninstall.php at line 40. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("require_email", $require_email) has deletion method delete_option("toemail"). Storage method found in file contact_admin.php at line 136. Deletion method found in file uninstall.php at line 12. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("require_email", $require_email) has deletion method delete_option("fromemail"). Storage method found in file contact_admin.php at line 136. Deletion method found in file uninstall.php at line 13. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("require_email", $require_email) has deletion method delete_option("requirename"). Storage method found in file contact_admin.php at line 136. Deletion method found in file uninstall.php at line 14. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("require_email", $require_email) has deletion method delete_option("used_name"). Storage method found in file contact_admin.php at line 136. Deletion method found in file uninstall.php at line 15. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("require_email", $require_email) has deletion method delete_option("name_minlength"). Storage method found in file contact_admin.php at line 136. Deletion method found in file uninstall.php at line 16. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("require_email", $require_email) has deletion method delete_option("name_maxlength"). Storage method found in file contact_admin.php at line 136. Deletion method found in file uninstall.php at line 17. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("require_email", $require_email) has deletion method delete_option("require_email"). Storage method found in file contact_admin.php at line 136. Deletion method found in file uninstall.php at line 18. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("require_email", $require_email) has deletion method delete_option("used_email"). Storage method found in file contact_admin.php at line 136. Deletion method found in file uninstall.php at line 19. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("require_email", $require_email) has deletion method delete_option("used_captcha"). Storage method found in file contact_admin.php at line 136. Deletion method found in file uninstall.php at line 20. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("require_email", $require_email) has deletion method delete_option("require_subject"). Storage method found in file contact_admin.php at line 136. Deletion method found in file uninstall.php at line 21. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("require_email", $require_email) has deletion method delete_option("used_subject"). Storage method found in file contact_admin.php at line 136. Deletion method found in file uninstall.php at line 22. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("require_email", $require_email) has deletion method delete_option("subject_minlength"). Storage method found in file contact_admin.php at line 136. Deletion method found in file uninstall.php at line 23. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("require_email", $require_email) has deletion method delete_option("subject_maxlength"). Storage method found in file contact_admin.php at line 136. Deletion method found in file uninstall.php at line 24. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("require_email", $require_email) has deletion method delete_option("email_subject"). Storage method found in file contact_admin.php at line 136. Deletion method found in file uninstall.php at line 25. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("require_email", $require_email) has deletion method delete_option("content_minlength"). Storage method found in file contact_admin.php at line 136. Deletion method found in file uninstall.php at line 26. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("require_email", $require_email) has deletion method delete_option("content_maxlength"). Storage method found in file contact_admin.php at line 136. Deletion method found in file uninstall.php at line 27. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("require_email", $require_email) has deletion method delete_option("ip_address"). Storage method found in file contact_admin.php at line 136. Deletion method found in file uninstall.php at line 28. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("require_email", $require_email) has deletion method delete_option("user_referer"). Storage method found in file contact_admin.php at line 136. Deletion method found in file uninstall.php at line 29. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("require_email", $require_email) has deletion method delete_option("user_browser"). Storage method found in file contact_admin.php at line 136. Deletion method found in file uninstall.php at line 30. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("require_email", $require_email) has deletion method delete_option("used_url"). Storage method found in file contact_admin.php at line 136. Deletion method found in file uninstall.php at line 31. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("require_email", $require_email) has deletion method delete_option("require_url"). Storage method found in file contact_admin.php at line 136. Deletion method found in file uninstall.php at line 32. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("require_email", $require_email) has deletion method delete_option("url_minlength"). Storage method found in file contact_admin.php at line 136. Deletion method found in file uninstall.php at line 33. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("require_email", $require_email) has deletion method delete_option("url_maxlength"). Storage method found in file contact_admin.php at line 136. Deletion method found in file uninstall.php at line 34. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("require_email", $require_email) has deletion method delete_option("used_phone"). Storage method found in file contact_admin.php at line 136. Deletion method found in file uninstall.php at line 35. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("require_email", $require_email) has deletion method delete_option("require_phone"). Storage method found in file contact_admin.php at line 136. Deletion method found in file uninstall.php at line 36. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("require_email", $require_email) has deletion method delete_option("phone_minlength"). Storage method found in file contact_admin.php at line 136. Deletion method found in file uninstall.php at line 37. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("require_email", $require_email) has deletion method delete_option("phone_maxlength"). Storage method found in file contact_admin.php at line 136. Deletion method found in file uninstall.php at line 38. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("require_email", $require_email) has deletion method delete_option("required_symbol"). Storage method found in file contact_admin.php at line 136. Deletion method found in file uninstall.php at line 39. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("require_email", $require_email) has deletion method delete_option("send_copy"). Storage method found in file contact_admin.php at line 136. Deletion method found in file uninstall.php at line 40. 

[Art.17, Right to erasure] Deletion access is NONE_BUT_NOT_REQUIRED 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 2658. Found in file index.php at line 62 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 265. Found in file contact_admin.php at line 138 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 361. Found in file contact_admin.php at line 150 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 407. Found in file contact_admin.php at line 158 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 165. Found in file contact_admin.php at line 126 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 151. Found in file contact_admin.php at line 124 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 2651. Found in file index.php at line 61 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 247. Found in file contact_admin.php at line 136 

[Art.15, Right to access] Data access is NONE_BUT_NOT_REQUIRED 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['access', 'deletion', 'encryption', 'third_party'] 

[main] Is deletion in violation? False 

[main] Is access in violation? False 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? True 


###########
### Q&A ###
###########

1. Why is my plugin in violation against GDPR?

GDPR (https://gdpr-info.eu/) aims to give citizens in the European Union (EU) control over their personal data. If a website collects or store user data, it is required to provide users functionalities to control their data, such as ones to erase or export their data. While a plugin do not directly interact with users, it may provide functionalities that collect or store personal data, which would make websites that deploy the plugin in violation against GDPR if the plugin does not provide corresponding functionalities to allow users control their personal data. Therefore, plugin developers are responsible to provide functions to manage the personal data they handle in accordance with GDPR. We list requirements by specific GDPR articles relevant to your plugin below.


[Art. 13, Information to be provided where personal data are collected from the data subject] If a plugin collects or handles personal data, it needs to provide privacy policy texts that explain what personal data is being collected and for what purpose. The texts are meant to be added to the privacy policy of the websites that deploy the plugin. 


            
[Art.17, Right to erasure] If a plugin stores personal data in a custom database they create or manage, or through Wordpress's native storage functions (e.g., update_user_meta), it needs to provide methods for users to erase the data upon request. Note that deleting data for all users upon uninstallation does not satisfy the requirement. 


            
        

2. How do I make my plugin compliant?

Please refer to the fix report below to see how you can make your plugin comply with GDPR.

        

##################
### Fix Report ###
##################

############################
# Data Deletion Fix Report #
############################

This report suggests fixes to comply with the GDPR Art. 17, Right to erasure (https://gdpr-info.eu/art-17-gdpr/). The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/adding-the-personal-data-eraser-to-your-plugin/ for more details.

1) Implement a function that deletes all the user data collected in the plugin. Sample code:


/**
* Removes all collected data of a user.
*
* @param string $email_address   email address to manipulate
* @param int    $page            pagination
*
* @return array
*/
function cool-contact_remove_data( $email_address, $page = 1 ) {
    
    $page = (int) $page;


    //TODO: Delete the user data that was stored using Wordpress functions

    //Below is the sample code for deleting user meta and may need to be modified to suit the plugin.
    $user_id = get_user_by('email', $email_address)
    $key = 'email' //Sample user meta key
    if ( $customer->user_id > 0 ) {
        //Delete user meta data by $key
        delete_user_meta( $user_id, $key );
    }
        



    // Tell core if we have more data to delete still
    $done = true;
    return array(
        'items_removed'  => $items_removed, // true if collected data of a user is being deleted
        'items_retained' => $items_retained, // true if certain data needs to be retained
        'messages'       => sprintf( __( 'Data of user with email %s successfully deleted.', 'cool-contact' ), $email_address ), // Put messages for data removal
        'done'           => $done, // true if all the removal processes are done (all data of the user is removed)
    );
}
        

2) Hook the deletion function to the Wordpress's Personal Data Removal tool


/**
* Registers all data erasers.
*
* @param array $exporters
*
* @return mixed
*/
function cool-contact_register_privacy_erasers( $erasers ) {
    $erasers['my-plugin-slug'] = array(
        'eraser_friendly_name' => __( '<eraser name>', 'cool-contact' ),
        'callback'             => 'cool-contact_remove_data',
    );
    return $erasers;
}
        

add_filter( 'wp_privacy_personal_data_erasers', 'cool-contact_register_privacy_erasers' );
        

        

#############################
# Privacy Policy Fix Report #
#############################

This report suggests fixes to comply with the GDPR Art. 13 (https://gdpr-info.eu/art-13-gdpr/) through including a privacy notice. The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/suggesting-text-for-the-site-privacy-policy/ for more details.

1) Implement a function that includes the privacy policy for the plugin and provide it to wordpress through wp_add_privacy_policy_content(). Sample code:


/**
* Adds a privacy policy statement.
*/
function cool-contact_add_privacy_policy_content() {
    if ( ! function_exists( 'wp_add_privacy_policy_content' ) ) {
        return;
    }
    //TODO: modify the content below to include the privacy policy for the plugin.
    $content = '<p class="privacy-policy-tutorial">' . __( 'Some introductory content for the suggested text.', 'cool-contact' ) . '</p>'
            . '<strong class="privacy-policy-tutorial">' . __( 'Suggested Text:', 'cool-contact' ) . '</strong> '
            . sprintf(
                __( 'When you leave a comment on this site, we send your name, email address, IP address and comment text to example.com. Example.com does not retain your personal data. The example.com privacy policy is <a href="%1$s" target="_blank">here</a>.', 'cool-contact' ),
                'https://example.com/privacy-policy'
            );
    wp_add_privacy_policy_content( 'cool-contact', wp_kses_post( wpautop( $content, false ) ) );
}
        

2) Hook the privacy policy function to the Wordpress's admin initialization action.


add_action( 'admin_init', 'cool-contact_add_privacy_policy_content' );
        

        


Disclaimer: The sample code provided above is only for reference and does not guarantee GDPR compliance. The recommended list of data to delete/export may not be comprehensive. 
        
Done.
