Timeout in resolving values
Timeout in running neo4j query
Running Main.py on media-sitemap

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.332625.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.059315.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 3 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.342926.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 0 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.413261.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 233 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:00.779639.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 0 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.578861.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.109090.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 136 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:02.885563.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 1961
Added 1589 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 1961
Added 0 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.076745.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/media-sitemap/mediasitemap.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/media-sitemap/uninstall.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/media-sitemap/lib/class-mediasitemapadmin.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/media-sitemap/lib/class-mediasitemap.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.489119.

1000 PHP_REACHES edges created
1961 PHP_REACHES edges created
1961 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 729 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.180497.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.641720.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 6 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.875403.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 6 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.182995.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.075581.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.123469.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.011789.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.039474.

12 PHP_REACHES edges created
12 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 16 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.152264.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
2 SQL operations to process.

			SELECT ID
			FROM $wpdbposts
			WHERE post_type = 'attachment'
			AND post_mime_type LIKE 'video%'
			
SQL command ( SELECT ID FROM $wpdbposts WHERE post_type = 'attachment' AND post_mime_type LIKE 'video%' ) cannot be parsed correct.
SELECT blog_id FROM $wpdbblogs
SQL command (SELECT blog_id FROM $wpdbblogs) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [1825, 3552]
Added 0 SQL nodes. 0 out of 2 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:01.727172.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'get_option("blog_charset")'' cannot be parsed correct.
HTML code '$'home_url("?feed=gis-xsl")'' cannot be parsed correct.
HTML code '$'get_option("blog_charset")'' cannot be parsed correct.
HTML code '$'https://wordpress.org/plugins/media-sitemap/'' cannot be parsed correct.
HTML code '$'get_option("blog_charset")'' cannot be parsed correct.
HTML code '$'home_url("?feed=gvs-xsl")'' cannot be parsed correct.
HTML code '$'get_permalink($pid)'' cannot be parsed correct.
HTML code '$'null'' cannot be parsed correct.
HTML code '$'get_the_title($v_id)'' cannot be parsed correct.
HTML code '$'wp_get_attachment_caption($v_id)'' cannot be parsed correct.
HTML code '$'$value'' cannot be parsed correct.
HTML code '$'get_post_meta($v_id, "_wp_attachment_metadata", true)_length'' cannot be parsed correct.
HTML code '$'get_option("blog_charset")'' cannot be parsed correct.
HTML code '$'https://wordpress.org/plugins/media-sitemap/'' cannot be parsed correct.
HTML code '$'get_permalink($pid)'' cannot be parsed correct.
HTML code '$'$value'' cannot be parsed correct.
HTML code '$'json_decode($json, true)_items_0_snippet_thumbnails_default_url'' cannot be parsed correct.
HTML code '$'json_decode($json, true)_items_0_snippet_title'' cannot be parsed correct.
HTML code '$'json_decode($json, true)_items_0_snippet_description'' cannot be parsed correct.
HTML code '$'$value'' cannot be parsed correct.
HTML code '$'$this->youtube_duration($duration_org)'' cannot be parsed correct.
HTML code '$'<link rel="alternate" type="feed_content_type()" title="get_bloginfo("name") &raquo; Google Image Sitemap" href="home_url("?feed=googleimagesitemap")" />'' cannot be parsed correct.
HTML code '$'<link rel="alternate" type="feed_content_type()" title="get_bloginfo("name") &raquo; Google Video Sitemap" href="home_url("?feed=googlevideossitemap")" />'' cannot be parsed correct.
HTML code '$'<div class="notice notice-success is-dismissible"><ul><li>sprintf(__("Saved %s", "media-sitemap"), "API")</li></ul></div>'' cannot be parsed correct.
HTML code '$'Version: get_file_data($plugin_path . $file, ["name" => "Plugin Name", "version" => "Version"])_version'' cannot be parsed correct.
HTML code '$'sprintf(__("https://wordpress.org/plugins/%s/faq", "media-sitemap"), $slug)'' cannot be parsed correct.
HTML code '$'https://wordpress.org/support/plugin/end($slugs)'' cannot be parsed correct.
HTML code '$'https://wordpress.org/support/view/plugin-reviews/end($slugs)'' cannot be parsed correct.
HTML code '$'https://translate.wordpress.org/projects/wp-plugins/end($slugs)'' cannot be parsed correct.
HTML code '$'sprintf(__("Translations for %s"), $plugin_name)'' cannot be parsed correct.
HTML code '$'https://www.facebook.com/katsushikawamori/'' cannot be parsed correct.
HTML code '$'https://twitter.com/dodesyo312'' cannot be parsed correct.
HTML code '$'https://www.youtube.com/channel/UC5zTLeyROkvZm86OgNRcb_w'' cannot be parsed correct.
HTML code '$'https://shop.riverforest-wp.info/donate/'' cannot be parsed correct.
HTML code '$'admin_url("options-general.php?page=MediaSitemap")'' cannot be parsed correct.
HTML code '$'https://developers.google.com/search/docs/advanced/sitemaps/image-sitemaps'' cannot be parsed correct.
HTML code '$'home_url("?feed=googleimagesitemap")'' cannot be parsed correct.
HTML code '$'home_url("?feed=googleimagesitemap")'' cannot be parsed correct.
HTML code '$'$value'' cannot be parsed correct.
HTML code '$'$value'' cannot be parsed correct.
HTML code '$'https://developers.google.com/search/docs/advanced/sitemaps/video-sitemaps'' cannot be parsed correct.
HTML code '$'home_url("?feed=googlevideossitemap")'' cannot be parsed correct.
HTML code '$'home_url("?feed=googlevideossitemap")'' cannot be parsed correct.
HTML code '$'YouTube Data API v3 Key'' cannot be parsed correct.
HTML code '$'https://console.cloud.google.com/apis/'' cannot be parsed correct.
HTML code '$'get_option("msfg_youtube_api")'' cannot be parsed correct.
HTML code '$'<div class="notice notice-success is-dismissible"><ul><li>sprintf(__("Saved %s", "media-sitemap"), __("MIME Type", "media-sitemap"))</li></ul></div>'' cannot be parsed correct.
HTML code '$'<div class="notice notice-success is-dismissible"><ul><li>All types removed.</li></ul></div>'' cannot be parsed correct.
HTML code '$'<?'' cannot be parsed correct.
HTML code '$'?>'' cannot be parsed correct.
HTML code '$'<?'' cannot be parsed correct.
HTML code '$'?>'' cannot be parsed correct.
HTML code '$'<?'' cannot be parsed correct.
HTML code '$'?>'' cannot be parsed correct.
HTML code '$'<?'' cannot be parsed correct.
HTML code '$'?>'' cannot be parsed correct.
HTML code '$'<?'' cannot be parsed correct.
HTML code '$'?>'' cannot be parsed correct.
HTML code '$'<?'' cannot be parsed correct.
HTML code '$'?>'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:07.751563.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.047530.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 0 do_action/apply_filters calls and 6 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.393715.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FileProDetector
### Start running FrontBaseDetector
### Finish running DbaseDetector
### Start running HashDetector
### Finish running DbplusDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running FirebirdInterBaseDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running Oci8Detector
### Start running OpenSSLDetector
### Finish running MongoDbDetector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running HashDetector
### Start running PhpCurlDetector
### Finish running ArrayElementDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PasswordHashingDetector
### Start running PHPRetrievalDetector
### Finish running PHPIncludedDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running OpenSSLDetector
### Start running PhpVarDetector
### Finish running PhpCurlDetector
### Start running PostgreSQLDetector
### Finish running PhpVarDetector
### Start running PropertyDetector
### Finish running PostgreSQLDetector
### Start running Sqlite3Detector
### Finish running PHPStorageDetector
### Start running SqliteDetector
### Finish running Sqlite3Detector
### Start running SqlServerDetector
### Finish running SqliteDetector
### Start running SybaseDetector
### Finish running SybaseDetector
### Start running TokyoTyrantDetector
### Finish running PropertyDetector
### Start running UserInputDetector
### Finish running TokyoTyrantDetector
### Start running VariableDetector
### Finish running SqlServerDetector
### Start running WordpressHashingFnDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRemoteDetector
### Finish running maxdbDetector
### Start running WordPressRetrievalDetector
### Finish running WordPressRemoteDetector
### Start running WordPressStorageDetector
### Finish running PHPRetrievalDetector
### Start running WP_UserDetector
### Finish running MySQLiDetector
### Start running GenericDatabaseUsageDetector
### Finish running VariableDetector
### Start running GenericEncryptionDetector
### Finish running WP_UserDetector
### Start running DeletionDetector
### Finish running GenericEncryptionDetector
### Start running UninstallDetector
### Finish running UserInputDetector
### Finish running GenericDatabaseUsageDetector
### Finish running WordPressStorageDetector
### Finish running DeletionDetector
### Finish running WordPressRetrievalDetector
### Finish running UninstallDetector
### Finished running detectors
lib/class-mediasitemap.php:628
  - RETRIEVAL call to file_get_contents($youtube_api).
  - Data types: file
lib/class-mediasitemap.php:629
  - RETRIEVAL call to file_get_contents($youtube_api).
  - Data types: file 

lib/class-mediasitemap.php:80
  - RETRIEVAL call to get_posts($arg). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
lib/class-mediasitemap.php:82
  - RETRIEVAL call to get_option("blog_charset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/class-mediasitemap.php:84
  - RETRIEVAL call to get_option("blog_charset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/class-mediasitemap.php:105
  - RETRIEVAL call to get_option("blog_charset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/class-mediasitemap.php:107
  - RETRIEVAL call to get_option("blog_charset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/class-mediasitemap.php:267
  - RETRIEVAL call to get_posts($arg). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
lib/class-mediasitemap.php:269
  - RETRIEVAL call to get_option("blog_charset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/class-mediasitemap.php:271
  - RETRIEVAL call to get_option("blog_charset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/class-mediasitemap.php:292
  - RETRIEVAL call to get_option("blog_charset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/class-mediasitemap.php:294
  - RETRIEVAL call to get_option("blog_charset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/class-mediasitemap.php:511
  - RETRIEVAL call to get_option("msfg_mime_types") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/class-mediasitemap.php:605
  - RETRIEVAL call to get_post_meta($v_id, "_wp_attachment_metadata", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
lib/class-mediasitemap.php:619
  - RETRIEVAL call to get_option("msfg_youtube_api") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/class-mediasitemap.php:627
  - RETRIEVAL call to get_option("msfg_youtube_api") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/class-mediasitemap.php:704
  - RETRIEVAL call to get_post_meta($attachment->ID, "_wp_attached_file", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
lib/class-mediasitemapadmin.php:122
  - RETRIEVAL call to get_option("msfg_mime_types") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/class-mediasitemapadmin.php:141
  - RETRIEVAL call to get_option("msfg_youtube_api") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/class-mediasitemapadmin.php:199
  - RETRIEVAL call to get_option("msfg_mime_types") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option 

lib/class-mediasitemapadmin.php:175
  - STORAGE call to update_option("msfg_mime_types", $list_types) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/class-mediasitemapadmin.php:179
  - STORAGE call to update_option("msfg_mime_types", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/class-mediasitemapadmin.php:183
  - STORAGE call to update_option("msfg_youtube_api", sanitize_text_field(wp_unslash($_POST["youtube_api"]))) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/class-mediasitemapadmin.php:207
  - STORAGE call to update_option("msfg_mime_types", $list_types) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
uninstall.php:14
  - STORAGE call to delete_option("msfg_mime_types") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:15
  - STORAGE call to delete_option("msfg_youtube_api") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:23
  - STORAGE call to delete_option("msfg_mime_types") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:24
  - STORAGE call to delete_option("msfg_youtube_api") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

uninstall.php:14
  - DELETION call to delete_option("msfg_mime_types") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:15
  - DELETION call to delete_option("msfg_youtube_api") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:23
  - DELETION call to delete_option("msfg_mime_types") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:24
  - DELETION call to delete_option("msfg_youtube_api") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

uninstall.php:14
  - Uninstall deletion call: DELETION call to delete_option("msfg_mime_types") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:15
  - Uninstall deletion call: DELETION call to delete_option("msfg_youtube_api") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:23
  - Uninstall deletion call: DELETION call to delete_option("msfg_mime_types") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:24
  - Uninstall deletion call: DELETION call to delete_option("msfg_youtube_api") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:29
  - Uninstall deletion call: DELETION call to delete_site_option("msfg_mime_types"). Passed arguments: 0: $option (string). Returns (bool).
uninstall.php:30
  - Uninstall deletion call: DELETION call to delete_site_option("msfg_youtube_api"). Passed arguments: 0: $option (string). Returns (bool). 

By data type:
file
	PHPRetrievalDetector.file_get_contents($youtube_api) - {'file'}
	PHPRetrievalDetector.file_get_contents($youtube_api) - {'file'}
none
	UninstallDetector.delete_site_option("msfg_mime_types") - set()
	WordPressRetrievalDetector.get_posts($arg) - set()
	WordPressRetrievalDetector.get_posts($arg) - set()
	UninstallDetector.delete_site_option("msfg_youtube_api") - set()
option
	UninstallDetector.delete_option("msfg_youtube_api") - {'option'}
	WordPressRetrievalDetector.get_option("msfg_youtube_api") - {'option'}
	WordPressStorageDetector.delete_option("msfg_mime_types") - {'option'}
	WordPressRetrievalDetector.get_option("blog_charset") - {'option'}
	UninstallDetector.delete_option("msfg_youtube_api") - {'option'}
	WordPressRetrievalDetector.get_option("blog_charset") - {'option'}
	WordPressStorageDetector.delete_option("msfg_youtube_api") - {'option'}
	WordPressRetrievalDetector.get_option("blog_charset") - {'option'}
	WordPressStorageDetector.delete_option("msfg_mime_types") - {'option'}
	UninstallDetector.delete_option("msfg_mime_types") - {'option'}
	WordPressRetrievalDetector.get_option("blog_charset") - {'option'}
	WordPressRetrievalDetector.get_option("msfg_mime_types") - {'option'}
	WordPressStorageDetector.update_option("msfg_mime_types", $list_types) - {'option'}
	WordPressStorageDetector.update_option("msfg_mime_types", $list_types) - {'option'}
	WordPressRetrievalDetector.get_option("blog_charset") - {'option'}
	WordPressRetrievalDetector.get_option("blog_charset") - {'option'}
	WordPressStorageDetector.update_option("msfg_youtube_api", sanitize_text_field(wp_unslash($_POST["youtube_api"]))) - {'option'}
	WordPressRetrievalDetector.get_option("msfg_mime_types") - {'option'}
	UninstallDetector.delete_option("msfg_mime_types") - {'option'}
	DeletionDetector.delete_option("msfg_mime_types") - {'option'}
	DeletionDetector.delete_option("msfg_youtube_api") - {'option'}
	WordPressRetrievalDetector.get_option("msfg_mime_types") - {'option'}
	WordPressRetrievalDetector.get_option("blog_charset") - {'option'}
	WordPressRetrievalDetector.get_option("blog_charset") - {'option'}
	WordPressRetrievalDetector.get_option("msfg_youtube_api") - {'option'}
	WordPressStorageDetector.delete_option("msfg_youtube_api") - {'option'}
	DeletionDetector.delete_option("msfg_youtube_api") - {'option'}
	WordPressStorageDetector.update_option("msfg_mime_types", []) - {'option'}
	DeletionDetector.delete_option("msfg_mime_types") - {'option'}
	WordPressRetrievalDetector.get_option("msfg_youtube_api") - {'option'}
post_meta
	WordPressRetrievalDetector.get_post_meta($v_id, "_wp_attachment_metadata", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($attachment->ID, "_wp_attached_file", true) - {'post_meta'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:08.553118.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 112 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.207425.

112 STORE_REACHES edges created
112 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
In total, tainted 0 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
In total, tainted 0 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:00.005872.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:00:35.363743!
DELETION call to delete_option("msfg_mime_types") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("msfg_youtube_api") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("msfg_mime_types") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("msfg_youtube_api") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
RETRIEVAL call to file_get_contents($youtube_api).,None,None
RETRIEVAL call to file_get_contents($youtube_api).,None,None
Uninstall deletion call: DELETION call to delete_option("msfg_mime_types") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("msfg_youtube_api") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("msfg_mime_types") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("msfg_youtube_api") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_site_option("msfg_mime_types"). Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_site_option("msfg_youtube_api"). Passed arguments: 0: $option (string). Returns (bool).,None,None
RETRIEVAL call to get_option("blog_charset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("blog_charset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_posts($arg). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_option("blog_charset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("blog_charset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("blog_charset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("blog_charset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("msfg_mime_types") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($v_id, "_wp_attachment_metadata", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("msfg_youtube_api") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("msfg_youtube_api") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($attachment->ID, "_wp_attached_file", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_posts($arg). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_option("blog_charset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("blog_charset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("msfg_mime_types") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("msfg_youtube_api") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("msfg_mime_types") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
STORAGE call to update_option("msfg_mime_types", $list_types) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("msfg_mime_types", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("msfg_youtube_api", sanitize_text_field(wp_unslash($_POST["youtube_api"]))) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("msfg_mime_types", $list_types) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("msfg_mime_types") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("msfg_youtube_api") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("msfg_mime_types") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("msfg_youtube_api") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found no personal data in the plugin. No analysis needed. 

[main] Complaint? True 

No findings
