Timeout in resolving values
Timeout in running neo4j query
Running Main.py on marketing-performance

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.965512.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:00.928502.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 146 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.586182.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 0 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.447342.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 1158 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:01.129560.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 0 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.546276.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.081850.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 422 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:06.308270.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 7566
Added 5840 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 8520
Added 954 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.497382.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/marketing-performance/marketing-performance.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/marketing-performance/vsmp-functions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/marketing-performance/activate/vsmp-run_ddl.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/marketing-performance/adminpages/vsmp-attribution_report.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/marketing-performance/adminpages/vsmp-campaign_performance_report.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/marketing-performance/adminpages/vsmp-campaign_setup.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/marketing-performance/adminpages/vsmp-channel_config.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/marketing-performance/adminpages/vsmp-commissions_download.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/marketing-performance/adminpages/vsmp-commissions_report.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/marketing-performance/adminpages/vsmp-marketing_performance.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/marketing-performance/adminpages/vsmp-start.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/marketing-performance/adminpages/vsmp-test_data_generator.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/marketing-performance/classes/class.vsmp-campaign.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/marketing-performance/classes/class.vsmp-channel.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/marketing-performance/classes/class.vsmp-delivery_event.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:01.460427.

1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
7566 PHP_REACHES edges created
954 PHP_REACHES edges created
8520 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 2451 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.159490.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 20 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:03.456006.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 98 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:03.613708.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 112 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.187599.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.439558.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.779844.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.019186.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.033792.

20 CALLS edges created
210 PHP_REACHES edges created
230 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 191 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.128947.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
14 SQL operations to process.

SELECT a.delivery_event_id, c.post_title AS delivery_event_desc, CONVERT(d.meta_value, INTEGER) AS campaign_id, f.post_title AS campaign_desc, IFNULL(g.post_title, 'Unattributed') AS channel, IFNULL(g.ID, 'unattr') AS channel_id, a.attributed_conversions, a.attributed_value, 100 * a.attributed_value / b.attribution_total AS attributed_percent FROM ( SELECT delivery_event_id, SUM(attributed_conversions) AS attributed_conversions, SUM(attributed_value) AS attributed_value FROM $wpdbvsmp_attribution WHERE cal_date BETWEEN $from_date AND $to_date GROUP BY delivery_event_id ) a CROSS JOIN ( SELECT SUM(attributed_value) AS attribution_total FROM $wpdbvsmp_attribution WHERE cal_date BETWEEN $from_date AND $to_date ) b LEFT JOIN $wpdbposts c ON c.ID = a.delivery_event_id AND c.post_type = 'vsmp_delivery_event' AND c.post_status = 'publish' LEFT JOIN $wpdbpostmeta d ON d.post_id = c.ID AND d.meta_key = 'campaign_id' LEFT JOIN $wpdbpostmeta e ON e.post_id = c.ID AND e.meta_key = 'channel_id' LEFT JOIN $wpdbposts f ON f.post_type = 'vsmp_campaign' AND f.ID = CONVERT(d.meta_value, INTEGER) LEFT JOIN $wpdbposts g ON g.post_type = 'vsmp_channel' AND g.ID = CONVERT(e.meta_value, INTEGER) ORDER BY g.post_title, f.post_title, a.delivery_event_id
SQL command (SELECT a.delivery_event_id, c.post_title AS delivery_event_desc, CONVERT(d.meta_value, INTEGER) AS campaign_id, f.post_title AS campaign_desc, IFNULL(g.post_title, 'Unattributed') AS channel, IFNULL(g.ID, 'unattr') AS channel_id, a.attributed_conversions, a.attributed_value, 100 * a.attributed_value / b.attribution_total AS attributed_percent FROM ( SELECT delivery_event_id, SUM(attributed_conversions) AS attributed_conversions, SUM(attributed_value) AS attributed_value FROM $wpdbvsmp_attribution WHERE cal_date BETWEEN $from_date AND $to_date GROUP BY delivery_event_id ) a CROSS JOIN ( SELECT SUM(attributed_value) AS attribution_total FROM $wpdbvsmp_attribution WHERE cal_date BETWEEN $from_date AND $to_date ) b LEFT JOIN $wpdbposts c ON c.ID = a.delivery_event_id AND c.post_type = 'vsmp_delivery_event' AND c.post_status = 'publish' LEFT JOIN $wpdbpostmeta d ON d.post_id = c.ID AND d.meta_key = 'campaign_id' LEFT JOIN $wpdbpostmeta e ON e.post_id = c.ID AND e.meta_key = 'channel_id' LEFT JOIN $wpdbposts f ON f.post_type = 'vsmp_campaign' AND f.ID = CONVERT(d.meta_value, INTEGER) LEFT JOIN $wpdbposts g ON g.post_type = 'vsmp_channel' AND g.ID = CONVERT(e.meta_value, INTEGER) ORDER BY g.post_title, f.post_title, a.delivery_event_id) cannot be parsed correct.
select metric_detail, SUM(metric_count) AS metric_count from $wpdbvsmp_channel_metric WHERE metric_type = 'channels' AND cal_date BETWEEN NULL AND NULL GROUP BY metric_detail ORDER BY 2 DESC LIMIT 10
SQL command (select metric_detail, SUM(metric_count) AS metric_count from $wpdbvsmp_channel_metric WHERE metric_type = 'channels' AND cal_date BETWEEN NULL AND NULL GROUP BY metric_detail ORDER BY 2 DESC LIMIT 10) cannot be parsed correct.
select metric_detail, SUM(metric_count) AS metric_count from $wpdbvsmp_channel_metric WHERE metric_type = 'starter' AND cal_date BETWEEN '$_POST_from_date' AND NULL GROUP BY metric_detail ORDER BY 2 DESC LIMIT 3
SQL command (select metric_detail, SUM(metric_count) AS metric_count from $wpdbvsmp_channel_metric WHERE metric_type = 'starter' AND cal_date BETWEEN '$_POST_from_date' AND NULL GROUP BY metric_detail ORDER BY 2 DESC LIMIT 3) cannot be parsed correct.
select metric_detail, SUM(metric_count) AS metric_count from $wpdbvsmp_channel_metric WHERE metric_type = 'closer' AND cal_date BETWEEN '$_POST_from_date' AND NULL GROUP BY metric_detail ORDER BY 2 DESC LIMIT 3
SQL command (select metric_detail, SUM(metric_count) AS metric_count from $wpdbvsmp_channel_metric WHERE metric_type = 'closer' AND cal_date BETWEEN '$_POST_from_date' AND NULL GROUP BY metric_detail ORDER BY 2 DESC LIMIT 3) cannot be parsed correct.
SELECT b.ID AS delivery_event_id, b.post_title AS delivery_event_desc, d.post_title AS channel, IFNULL(e.attributed_conversions, 0) AS attributed_conversions,	IFNULL(e.attributed_value, 0) AS attributed_value FROM ( SELECT post_id FROM $wpdbpostmeta WHERE meta_key = 'campaign_id' AND meta_value = '$campaign_id' ) a JOIN $wpdbposts b ON b.ID = a.post_id AND b.post_status = 'publish' JOIN $wpdbpostmeta c ON c.post_id = b.ID AND c.meta_key = 'channel_id' JOIN $wpdbposts d ON d.ID = CONVERT(c.meta_value, INTEGER) LEFT JOIN ( SELECT delivery_event_id, SUM(attributed_conversions) AS attributed_conversions, SUM(attributed_value) AS attributed_value FROM $wpdbvsmp_attribution GROUP BY 1 ) e ON e.delivery_event_id = b.ID
SQL command (SELECT b.ID AS delivery_event_id, b.post_title AS delivery_event_desc, d.post_title AS channel, IFNULL(e.attributed_conversions, 0) AS attributed_conversions, IFNULL(e.attributed_value, 0) AS attributed_value FROM ( SELECT post_id FROM $wpdbpostmeta WHERE meta_key = 'campaign_id' AND meta_value = '$campaign_id' ) a JOIN $wpdbposts b ON b.ID = a.post_id AND b.post_status = 'publish' JOIN $wpdbpostmeta c ON c.post_id = b.ID AND c.meta_key = 'channel_id' JOIN $wpdbposts d ON d.ID = CONVERT(c.meta_value, INTEGER) LEFT JOIN ( SELECT delivery_event_id, SUM(attributed_conversions) AS attributed_conversions, SUM(attributed_value) AS attributed_value FROM $wpdbvsmp_attribution GROUP BY 1 ) e ON e.delivery_event_id = b.ID) cannot be parsed correct.
SELECT a.delivery_event_id, b.post_title AS delivery_event_desc, a.conversion_id, a.conversion_date, a.conversion_val, a.commission_pct, a.commission FROM $wpdbvsmp_commission a JOIN $wpdbposts b ON b.id = a.delivery_event_id WHERE conversion_date BETWEEN $_GET_from_date AND $_GET_to_date ORDER BY b.post_title, a.conversion_id
SQL command (SELECT a.delivery_event_id, b.post_title AS delivery_event_desc, a.conversion_id, a.conversion_date, a.conversion_val, a.commission_pct, a.commission FROM $wpdbvsmp_commission a JOIN $wpdbposts b ON b.id = a.delivery_event_id WHERE conversion_date BETWEEN $_GET_from_date AND $_GET_to_date ORDER BY b.post_title, a.conversion_id) cannot be parsed correct.
SELECT a.delivery_event_id, b.post_title AS delivery_event_desc, a.conversion_date, a.l1_order_count, a.l1_commission FROM ( SELECT conversion_date, delivery_event_id, count(*) AS l1_order_count, sum(commission) AS l1_commission FROM $wpdbvsmp_commission WHERE conversion_date BETWEEN NULL AND NULL GROUP BY delivery_event_id, conversion_date ) a JOIN $wpdbposts b ON b.id = a.delivery_event_id ORDER BY b.post_title, a.conversion_date
SQL command (SELECT a.delivery_event_id, b.post_title AS delivery_event_desc, a.conversion_date, a.l1_order_count, a.l1_commission FROM ( SELECT conversion_date, delivery_event_id, count(*) AS l1_order_count, sum(commission) AS l1_commission FROM $wpdbvsmp_commission WHERE conversion_date BETWEEN NULL AND NULL GROUP BY delivery_event_id, conversion_date ) a JOIN $wpdbposts b ON b.id = a.delivery_event_id ORDER BY b.post_title, a.conversion_date) cannot be parsed correct.
SELECT COUNT(*) AS conversion_count FROM $wpdbvsmp_conversion_log WHERE conversion_id = 'addslashes($conversion_id)'
SQL command (SELECT COUNT(*) AS conversion_count FROM $wpdbvsmp_conversion_log WHERE conversion_id = 'addslashes($conversion_id)') cannot be parsed correct.

CALL $wpdbvsmp_compute_influence('$wpdb')
SQL command (CALL $wpdbvsmp_compute_influence('$wpdb')) cannot be parsed correct.
CALL $wpdbvsmp_compute_attribution('$wpdb')
SQL command (CALL $wpdbvsmp_compute_attribution('$wpdb')) cannot be parsed correct.
CALL $wpdbvsmp_compute_path('$wpdb')
SQL command (CALL $wpdbvsmp_compute_path('$wpdb')) cannot be parsed correct.
CALL $wpdbvsmp_compute_commission('$wpdb')
SQL command (CALL $wpdbvsmp_compute_commission('$wpdb')) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [139, 451, 1318, 1441, 1537, 1883, 2555, 2892, 9755, 165, 9819, 9842, 9865, 9888]
Added 0 SQL nodes. 0 out of 14 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:07.108936.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'$_POST_from_date'' cannot be parsed correct.
HTML code '$'$_POST_to_date'' cannot be parsed correct.
HTML code '$'<td><div class="dashicons dashicons-plus" ID="NULL_toggle"></div></td'' cannot be parsed correct.
HTML code '$'<td align=center>NULL</td>'' cannot be parsed correct.
HTML code '$'<td align=right>number_format($attributed_conversions, 2)</td>'' cannot be parsed correct.
HTML code '$'<td align=right>$number_format($attributed_value, 2)</td>'' cannot be parsed correct.
HTML code '$'<td align=right>number_format($attributed_percent, 2)%</td>'' cannot be parsed correct.
HTML code '$'$table_string<tr ID=$channel_id_$result" style="display: none"><td></td><td></td><td>$result $result</td><td>$result</td><td align=right>number_format($result->attributed_conversions, 2)</td><td align=right>$number_format($result->attributed_value, 2)</td><td align=right>number_format($result->attributed_percent, 2)%</td></tr>'' cannot be parsed correct.
HTML code '$'<script>n = attribution.length;attribution.push(new Array());attribution[n].push($channel")attribution[n].push(0);attribution[n].push($channel_colors_$channel")</script>'' cannot be parsed correct.
HTML code '$'$java_script_string$jQuery_ref.click(function(){$java_script_toggle_string if ($jQuery_ref.hasClass("dashicons dashicons-plus")) { $jQuery_ref.removeClass(); $jQuery_ref.addClass("dashicons dashicons-minus"); } else { jQuery("NULL_toggle".removeClass(); jQuery("NULL_toggle".addClass("dashicons dashicons-plus");}});});</script>'' cannot be parsed correct.
HTML code '$'<script>var attrPiechart = new Piechart({canvas:attrCanvas,data:attribution,legend:attrLegend});attrPiechart.draw();</script>'' cannot be parsed correct.
HTML code '$'<script>n = paths.length;paths.push(new Array());paths[n].push($result")paths[n].push($result);paths[n].push($channel_colors_$result")</script>'' cannot be parsed correct.
HTML code '$'<script>var pathBarchart = new Barchart({canvas:pathCanvas,title:"Top 10 Influencing Channel Combinations",data:paths,});pathBarchart.draw();</script>'' cannot be parsed correct.
HTML code '$'n = starter.length;starter.push(new Array());starter[n].push($result")starter[n].push($result);starter[n].push($channel_colors_$result")'' cannot be parsed correct.
HTML code '$'var starterBarchart = new Barchart({canvas:starterCanvas,title:"Top Starter Channels",data:starter,});starterBarchart.draw();'' cannot be parsed correct.
HTML code '$'<thead><tr><th style=\'width:10px;\'></th><th style=\'text-align:center;\'>Channel</th><th style=\'text-align:center;\'>Delivery Event</th><th style=\'text-align:center;\'>Campaign</th><th style=\'text-align:center;width:100px;\'>Conversions</th><th COLSPAN=2 style=\'text-align:center;width:180px;\'>Attribution</th></thead>'' cannot be parsed correct.
HTML code '$'<td><div class="dashicons dashicons-plus" ID="NULL_toggle"></div></td'' cannot be parsed correct.
HTML code '$'<td align=center>$channel</td>'' cannot be parsed correct.
HTML code '$'<td align=right>number_format($attributed_conversions, 2)</td>'' cannot be parsed correct.
HTML code '$'<td align=right>$number_format($attributed_value, 2)</td>'' cannot be parsed correct.
HTML code '$'<td style=\'text-align:right\'>number_format($attributed_percent, 2)%</td>'' cannot be parsed correct.
HTML code '$'<script>n = attribution.length;attribution.push(new Array());attribution[n].push($channel")attribution[n].push(0);attribution[n].push($channel_colors_NULL")</script>'' cannot be parsed correct.
HTML code '$'<td align=right>$number_format($result->attributed_value, 2)</td>'' cannot be parsed correct.
HTML code '$'<tr><td colspan=2><i>Total</i></td><td align=right>number_format($tot_attributed_conversions, 2)</td><td align=right>$number_format($tot_attributed_value, 2)</td></tr>'' cannot be parsed correct.
HTML code '$'jQuery("#act_return").html("<B>number_format($tot_attributed_value / $campaign->spend, 2)</B>"'' cannot be parsed correct.
HTML code '$'n = closer.length;closer.push(new Array());closer[n].push($result")closer[n].push($result);closer[n].push($channel_colors_$result")'' cannot be parsed correct.
HTML code '$'var closerBarchart = new Barchart({canvas:closerCanvas,title:"Top Closer Channels",data:closer,});closerBarchart.draw();'' cannot be parsed correct.
HTML code '$'<script> jQuery(document).ready(function(){ jQuery("#vsmp_charts").show()})</script>'' cannot be parsed correct.
HTML code '$'vsmp_cpt_select("vsmp_campaign", "campaign_id", "ID", "desc", $campaign_id, NULL, TRUE)'' cannot be parsed correct.
HTML code '$'<tr><td>Description</td><td></td></tr>'' cannot be parsed correct.
HTML code '$'<tr><td>From Date</td><td>$campaign->get_from_date_html_view()</td></tr>'' cannot be parsed correct.
HTML code '$'<tr><td>To Date</td><td>$campaign->get_to_date_html_view()</td></tr>'' cannot be parsed correct.
HTML code '$'<tr><td>Spend</td><td>$campaign->get_spend_html_view()</td></tr>'' cannot be parsed correct.
HTML code '$'<tr><td>Estimated Return (ROAS)</td><td>$campaign->get_est_roas_html_view()</td></tr>'' cannot be parsed correct.
HTML code '$'<td>$result $result</td>'' cannot be parsed correct.
HTML code '$'<td align=center>$result</td>'' cannot be parsed correct.
HTML code '$'<td align=right>number_format($result->attributed_conversions, 2)</td>'' cannot be parsed correct.
HTML code '$'<td><div class="dashicons dashicons-plus" ID="$delivery_event_id-toggle"></div></td'' cannot be parsed correct.
HTML code '$'<td align=LEFT>NULL ($delivery_event_id)</td>'' cannot be parsed correct.
HTML code '$'<td style=\'text-align:right\'>0</td>'' cannot be parsed correct.
HTML code '$'<td style=\'text-align:right\'>$number_format($l2_commission, 2)</td>'' cannot be parsed correct.
HTML code '$'<td><div class="dashicons dashicons-plus" ID="NULL-toggle"></div></td'' cannot be parsed correct.
HTML code '$'<td align=LEFT>NULL ($delivery_event_id)</td>'' cannot be parsed correct.
HTML code '$'<td style=\'text-align:right\'>0</td>'' cannot be parsed correct.
HTML code '$'<td style=\'text-align:right\'>$number_format($l2_commission, 2)</td>'' cannot be parsed correct.
HTML code '$'<script> jQuery(document).ready(function(){'' cannot be parsed correct.
HTML code '$'<BR><BR><a href=plugins_url()/marketing-performance/adminpages/vsmp-commissions_download.php?from_date=\'$_POST_from_date\'&to_date=\'$_POST_to_date\'>Download</a>'' cannot be parsed correct.
HTML code '$'admin_url()admin.php?page=vsmp_campaign_setup'' cannot be parsed correct.
HTML code '$'admin_url()admin.php?page=vsmp_campaign_setup'' cannot be parsed correct.
HTML code '$'admin_url()admin.php?page=vsmp_channel_config'' cannot be parsed correct.
HTML code '$'admin_url()admin.php?page=vsmp_attribution_report'' cannot be parsed correct.
HTML code '$'admin_url()admin.php?page=vsmp_campaign_performance_report'' cannot be parsed correct.
HTML code '$'admin_url()admin.php?page=vsmp_channel_config'' cannot be parsed correct.
HTML code '$'plugin_dir_url()MPP-short.png'' cannot be parsed correct.
HTML code '$'admin_url()admin.php?page=vsmp_channel_config'' cannot be parsed correct.
HTML code '$'admin_url()admin.php?page=vsmp_campaign_setup'' cannot be parsed correct.
HTML code '$'admin_url()admin.php?page=vsmp_campaign_setup'' cannot be parsed correct.
HTML code '$'admin_url()admin.php?page=vsmp_campaign_setup'' cannot be parsed correct.
HTML code '$'admin_url()admin.php?page=vsmp_channel_config'' cannot be parsed correct.
HTML code '$'admin_url()admin.php?page=vsmp_attribution_report'' cannot be parsed correct.
HTML code '$'admin_url()admin.php?page=vsmp_campaign_performance_report'' cannot be parsed correct.
HTML code '$'admin_url()admin.php?page=vsmp_channel_config'' cannot be parsed correct.
HTML code '$'wp_create_nonce("vsmp-test_data_generator")'' cannot be parsed correct.
HTML code '$'wp_create_nonce("vsmp-campaign_setup")'' cannot be parsed correct.
HTML code '$'vsmp_cpt_select("vsmp_campaign", "campaign_id", "ID", "desc")'' cannot be parsed correct.
HTML code '$'get_from_date_mask()'' cannot be parsed correct.
HTML code '$'get_to_date_mask()'' cannot be parsed correct.
HTML code '$'get_spend_mask()'' cannot be parsed correct.
HTML code '$'get_est_roas_mask()'' cannot be parsed correct.
HTML code '$'vsmp_cpt_select("vsmp_channel", "channel_id", "post_title", "asc")'' cannot be parsed correct.
HTML code '$'wp_create_nonce("vsmp-channel_config")'' cannot be parsed correct.
HTML code '$'vsmp_cpt_select("vsmp_channel", "channel_id", "post_title", "asc")'' cannot be parsed correct.
HTML code '$'get_lag_days_mask()'' cannot be parsed correct.
HTML code '$'<TR id="day0"><TD><label>Day0<p ID="influence0_value"></p></label></TD'' cannot be parsed correct.
HTML code '$'get_influence_mask($i)'' cannot be parsed correct.
HTML code '$'get_detection_mask()'' cannot be parsed correct.
HTML code '$'$_POST_from_date'' cannot be parsed correct.
HTML code '$'$_POST_to_date'' cannot be parsed correct.
HTML code '$'<thead><tr><th style=\'width:10px;\'></th><th style=\'text-align:center;\'>Delivery Event</th><th style=\'text-align:center;\'>Conversion Date</th><th style=\'text-align:center;width:100px;\'>Order Count</th><th style=\'text-align:center;width:180px;\'>Commissions</th></thead>'' cannot be parsed correct.
HTML code '$'wp_create_nonce("test_data_generator")'' cannot be parsed correct.
HTML code '$'vsmp_cpt_select("vsmp_delivery_event", "delivery_event_id", "ID", "desc", NULL, TRUE)'' cannot be parsed correct.
HTML code '$'var vsmp_ajaxurl = admin_url("admin-ajax.php")"'' cannot be parsed correct.
HTML code '$'var vsmp_posturl = admin_url("admin-post.php")"'' cannot be parsed correct.
HTML code '$'$channel->get_lag_days_html_input()'' cannot be parsed correct.
HTML code '$'$channel->get_influence_html_input()'' cannot be parsed correct.
HTML code '$'$channel->get_detection_html_input()'' cannot be parsed correct.
HTML code '$'$campaign->get_from_date_html_input()'' cannot be parsed correct.
HTML code '$'$campaign->get_to_date_html_input()'' cannot be parsed correct.
HTML code '$'$campaign->get_spend_html_input()'' cannot be parsed correct.
HTML code '$'$campaign->get_est_roas_html_input()'' cannot be parsed correct.
HTML code '$'$delivery_event->get_campaign_id_html_input()'' cannot be parsed correct.
HTML code '$'$delivery_event->get_channel_id_html_input()'' cannot be parsed correct.
HTML code '$'$delivery_event->get_commission_html_input()'' cannot be parsed correct.
HTML code '$'{"id":"", "success":"true" }'' cannot be parsed correct.
HTML code '$'{"html":json_encode(vsmp_cpt_select("vsmp_campaign", "campaign_id", "ID", "desc", $campaign->id)) }'' cannot be parsed correct.
HTML code '$'{"id":""'' cannot be parsed correct.
HTML code '$'{"result":"nonce"'' cannot be parsed correct.
HTML code '$'json_encode($channel)'' cannot be parsed correct.
HTML code '$'{"result":"vsmp_log_conversion($vsmp_visitor_id, $conversion_id, $conversion_value)"'' cannot be parsed correct.
HTML code '$'<tr><td>Is this page a conversion</td><td><SELECT ID="is_conversion" NAME="is_conversion">'' cannot be parsed correct.
HTML code '$'get_post_custom($post->ID)_conversion_id_data_source_type_0'' cannot be parsed correct.
HTML code '$'get_post_custom($post->ID)_conversion_value_data_source_type_0'' cannot be parsed correct.
HTML code '$'<B><I>Security error on page.</I></B>'' cannot be parsed correct.
HTML code '$'" style="width:180px;" required></td>
<td width=100>To Date<INPUT TYPE="DATE" ID="to_date" NAME="to_date" SIZE=10 VALUE="'' cannot be parsed correct.
HTML code '$'" style="width:180px;" required></td>
<td><INPUT TYPE=SUBMIT VALUE="Query" class="button button-small"></td>
</tr>
</table>
</FORM>


'' cannot be parsed correct.
HTML code '$'<B><I>Invalid selection.</I></B>'' cannot be parsed correct.
HTML code '$'<tr>'' cannot be parsed correct.
HTML code '$'<td></td>'' cannot be parsed correct.
HTML code '$'<td></td>'' cannot be parsed correct.
HTML code '$'<td></td>'' cannot be parsed correct.
HTML code '$'</tr>'' cannot be parsed correct.
HTML code '$'</tbody>'' cannot be parsed correct.
HTML code '$'</table>'' cannot be parsed correct.
HTML code '$'<script>'' cannot be parsed correct.
HTML code '$'</script>'' cannot be parsed correct.
HTML code '$'<BR><I>No results found for your selected date range!</I>'' cannot be parsed correct.
HTML code '$'<script>initCharts();</script>'' cannot be parsed correct.
HTML code '$'<table class=\'wp-list-table widefat fixed striped posts\'>'' cannot be parsed correct.
HTML code '$'<tbody>'' cannot be parsed correct.
HTML code '$'<tr>'' cannot be parsed correct.
HTML code '$'<td></td>'' cannot be parsed correct.
HTML code '$'<td></td>'' cannot be parsed correct.
HTML code '$'<td></td>'' cannot be parsed correct.
HTML code '$'</tr>'' cannot be parsed correct.
HTML code '$'</tr>'' cannot be parsed correct.
HTML code '$'<script>'' cannot be parsed correct.
HTML code '$'<script>'' cannot be parsed correct.
HTML code '$'</script>'' cannot be parsed correct.
HTML code '$'<FORM METHOD="POST">'' cannot be parsed correct.
HTML code '$'<B><I>Invalid selection.</I></B>'' cannot be parsed correct.
HTML code '$'<BR><BR><B><I>Security error on page.</I></B><BR><BR>'' cannot be parsed correct.
HTML code '$'Campaign&nbsp;'' cannot be parsed correct.
HTML code '$'</FORM>'' cannot be parsed correct.
HTML code '$'<table class="wp-list-table widefat fixed striped posts">'' cannot be parsed correct.
HTML code '$'<tr><td>Actual Return</td><td><span id="act_return"></span></td></tr>'' cannot be parsed correct.
HTML code '$'</TABLE>'' cannot be parsed correct.
HTML code '$'<table class="wp-list-table widefat fixed striped posts">'' cannot be parsed correct.
HTML code '$'<thead><tr><th style="text-align:center;width:200px">Delivery Event</th><th style="text-align:center;width:100px;">Channel</th><th style="text-align:center;width:100px;">Attributed<BR>Conversions</th><th style="text-align:center;width:100px;">Attributed<BR>Value</th></tr></thead>'' cannot be parsed correct.
HTML code '$'<tr>'' cannot be parsed correct.
HTML code '$'<tr>'' cannot be parsed correct.
HTML code '$'<td></td>'' cannot be parsed correct.
HTML code '$'</tr>'' cannot be parsed correct.
HTML code '$'<tr>'' cannot be parsed correct.
HTML code '$'<td></td>'' cannot be parsed correct.
HTML code '$'</tr>'' cannot be parsed correct.
HTML code '$'</tbody>'' cannot be parsed correct.
HTML code '$'</table>'' cannot be parsed correct.
HTML code '$'</script>'' cannot be parsed correct.
HTML code '$'<script>'' cannot be parsed correct.
HTML code '$'jQuery("#act_return").css("color", "green");'' cannot be parsed correct.
HTML code '$'jQuery("#act_return").css("color", "yellow");'' cannot be parsed correct.
HTML code '$'jQuery("#act_return").css("color", "red");'' cannot be parsed correct.
HTML code '$'</script>'' cannot be parsed correct.
HTML code '$'</table>'' cannot be parsed correct.
HTML code '$';
			
			jQuery( \'#campaign_id\' ).on( \'change\',
				function() {
					if ( !! ( jQuery( \'#campaign_id\' ).val() ) ) {
						jQuery( \'#campaign_toggle\' ).hide();
						jQuery( \'#channel_toggle\' ).show();
					} else {
						jQuery( \'#channel_toggle\' ).hide();
					}

				}
			)

			jQuery( \'#channel_id\' ).on( \'change\',
				function() {
					jQuery( \'#delivery_event_toggle\' ).show();
				}
			)

			jQuery( \'#campaign_show_button\' ).click(
				function() {
					jQuery( \'#campaign_title\' ).val( \'\' );
					jQuery( \'#campaign_desc\' ).val( \'\' );
					jQuery( \'#from_date\' ).val( \'\' );
					jQuery( \'#to_date\' ).val( \'\' );
					jQuery( \'#spend\' ).val( \'\' );
					jQuery( \'#est_roas\' ).val( \'\' );
					jQuery( \'#campaign_toggle\' ).show();
					jQuery( \'#channel_toggle\' ).hide();
					jQuery( \'#delivery_event_toggle\' ).hide();
					jQuery( \'#step_4\' ).hide();
				}
			)
			
			jQuery( \'#campaign_form\' ).submit(
				function() {
					event.preventDefault();

					var campaign = {
						title: jQuery( \'#campaign_title\' ).val(),
						description: jQuery( \'#campaign_desc\' ).val(),
						from_date: jQuery( \'#from_date\' ).val(),
						to_date: jQuery( \'#to_date\' ).val(),
						spend: jQuery( \'#spend\' ).val(),
						est_roas: jQuery( \'#est_roas\' ).val()
					}

					var post_data = \'action=insert_campaign\'
						+ \'&payload=\' + encodeURIComponent( JSON.stringify( campaign ) )
						+ \'&vsmp-campaign_setup_nonce=\' + nonce;
	
					jQuery.ajax({
						url: vsmp_ajaxurl, 
						type: \'POST\',
						dataType: \'json\',
						data: post_data,
						error: function( request, status, error ) {
							alert( status );
						},
						success: function( response ) {
							if ( typeof response.success != "undefined" && ! response.success ) {
								alert( response.data );
							} else {
								jQuery( \'#campaign_toggle\' ).hide(); 
								jQuery( \'#campaign_select\' ).html( response.html );
								jQuery( \'#channel_toggle\' ).show();
							}
						}
					})
				}
			)

			jQuery( \'#delivery_event_form\' ).submit(
				function() {
					event.preventDefault();

					var delivery_event = {
						title: jQuery( \'#delivery_event_title\' ).val(),
						description: jQuery( \'#delivery_event_description\' ).val(),
						campaign_id: jQuery( \'#campaign_id\' ).val(),
						channel_id: jQuery( \'#channel_id\' ).val(),
						commission_days: jQuery( \'#commission_days\' ).val(),
						commission_pct: jQuery( \'#commission_pct\' ).val()
					}

					var post_data = \'action=insert_delivery_event\'
						+ \'&payload=\' + encodeURIComponent( JSON.stringify( delivery_event ) )
						+ \'&vsmp-campaign_setup_nonce=\' + nonce;

					jQuery.ajax({
						url: vsmp_ajaxurl, 
						type: \'post\',
						dataType: \'json\',
						data: post_data,
						error: function(request, status, error) {
							alert(status)
						},
						success: function(response) {
							if ( typeof response.success != "undefined" && ! response.success ) {
								alert( response.data );
							} else {
								jQuery( \'#create_delivery_event\' ).hide(); 
								jQuery( \'#step_4\' ).show(); 
								jQuery( \'#query_string\' ).show(); 
								jQuery( \'#query_string\' ).html( \'<BR><BR>?vsmp=\' + response.id )
							}
						}
					})
				}
			)

			jQuery( \'#reload\' ).click(
				function() {
					window.location.reload( true );
					window.scrollTo( 0, 0 );
				}
			)
			
		}
	);

</script>
</head>


<body><div class="wrap">
<h1>Create A New Marketing Delivery Event</h1>
Use this page to get the query string parameter to put on any link to your website that you want tracked in your marketing. You can also set up campaigns here to put your Delivery Events into.
<h3>Campaign</h3>
1. Pick a campaign

<span ID="campaign_select">
'' cannot be parsed correct.
HTML code '$';
			
			jQuery( \'#channel_id\' ).on( \'change\',
				function() {
					if ( !! ( jQuery( \'#channel_id\' ).val() ) ) {
						var post_data = \'action=get_channel\';
						post_data += \'&vsmp_channel_id=\' + jQuery( \'#channel_id\' ).val();

						jQuery.ajax({
							url: vsmp_ajaxurl, 
							type: \'POST\',
							dataType: \'json\',
							data: post_data,
							error: function( request, status, error ) {
								alert( status, error );
							},
							success: function( response ) {
								if ( typeof response.success != "undefined" && ! response.success ) {
									alert( response.data );
								} else {
									channel_view( response );
								}
							}
						})
					} else {
						jQuery( "#channel_toggle" ).hide();
					}
				}
			)

			jQuery( \'#channel_new\' ).click(
				function() {
					jQuery( \'#db_action\' ).val( \'a\' );
					jQuery( \'#channel_id\' ).val( \'\' );
					jQuery( \'#channel_title\' ).val( \'\' );
					jQuery( \'#channel_title\' ).prop( \'readOnly\', false );
					jQuery( \'#channel_desc\' ).val( \'\' );
					jQuery( \'#lag_days\' ).val( \'0\' );
					jQuery( \'#lag_days_value\' ).text( \'0\' );
					jQuery( \'#influence_0\' ).val( \'0\' );
					influence_view();
					jQuery( \'#detection\' ).val( \'vsmp_evt\' );
					jQuery( \'#channel_upsert\' ).html( \'Add New Channel\' );
					jQuery( \'#channel_toggle\' ).show();
				}
			)

			jQuery( \'#channel_form\' ).submit(
				function() {
					event.preventDefault();

					var influence = [];
					for ( i = 0; i <= jQuery( \'#lag_days\' ).val(); i++ ) {
						influence.push( jQuery( \'#influence_\' + i ).val() );
					}

					var channel = {
						id: jQuery( \'#channel_id\' ).val(),
						title: jQuery( \'#channel_title\' ).val(),
						description: jQuery( \'#channel_desc\' ).val(),
						lag_days: jQuery( \'#lag_days\' ).val(),
						influence: influence,
						detection: jQuery( \'input[name="detection"]:checked\' ).val()
					}
					
					var post_data = \'action=upsert_channel\'
						+ \'&payload=\' + encodeURIComponent( JSON.stringify( channel ) )
						+ \'&vsmp-channel_config_nonce=\' + nonce;

					jQuery.ajax({
						url: vsmp_ajaxurl, 
						type: \'POST\',
						dataType: \'json\',
						data: post_data,
						error: function( request, status, error ) {
							alert( status )
						},
						success: function( response ) {
							if ( typeof response.success != "undefined" && ! response.success ) {
								alert( response.data );
							} else {
								alert( \'Channel updated successfully\' );
								window.location.reload( true );
								window.scrollTo( 0, 0 );
							}
						}
					})
				}
			);

			jQuery( \'#lag_days\' ).on( \'change\',
				function() {
					influence_view();
				}
			);

			jQuery( \'#influence_0\' ).on( \'change\', 
				function() {
					influence_text(0);
				}
			);
			jQuery( \'#influence_1\' ).on( \'change\',
				function() {
					influence_text(1);
				}
			);
			jQuery( \'#influence_2\' ).on( \'change\',
				function() {
					influence_text(2);
				}
			);
			jQuery( \'#influence_3\' ).on( \'change\', 
				function() {
					influence_text(3);
				}
			);
			jQuery( \'#influence_4\' ).on( \'change\', 
				function() {
					influence_text(4);
				}
			);
			jQuery( \'#influence_5\' ).on( \'change\',
				function() {
					influence_text(5);
				}
			);
			jQuery( \'#influence_6\' ).on( \'change\', 
				function() {
					influence_text(6);
				}
			);
			jQuery( \'#influence_7\' ).on( \'change\',
				function() {
					influence_text(7);
				}
			);
			jQuery( \'#influence_8\' ).on( \'change\', 
				function() {
					influence_text(8);
				}
			);
			jQuery( \'#influence_9\' ).on( \'change\',
				function() {
					influence_text(9);
				}
			);


			jQuery( \'#lag_wizard_button\' ).click(
				function() {
					jQuery( \'#lag_wizard_overlay\' ).css( \'display\', \'block\' );
				}
			)
			jQuery( \'#lag_wizard_close\' ).click(
				function() {
					jQuery( \'#lag_wizard_overlay\' ).css( \'display\', \'none\' );
				}
			)	
			jQuery( \'#lag_wizard_calculate\' ).click(
				function() {
					var adj_factor = jQuery( \'input[name="brand_awareness"]:checked\' ).val();
					var marketing_type = jQuery( \'input[name="marketing_type"]:checked\' ).val();
					if (marketing_type === \'push\') {
						jQuery( \'#lag_days\' ).val( \'5\' );
						for ( var i = 0; i <= 5; i++ ) {
							var influence = Math.floor( ((Math.log(i+1) * -50) + 100) / adj_factor );
							jQuery( \'#influence_\' + i ).val( influence );
						}
					} else if ( marketing_type === \'active\' ) {
						jQuery( \'#lag_days\' ).val( \'3\' );
						for ( var i = 0; i <= 3; i++ ) {
							var influence = Math.floor( ((Math.log(i+1) * -66) + 100) / adj_factor );
							jQuery( \'#influence_\' + i ).val( influence );
						}
					} else if ( marketing_type == \'passive\' ) {
						jQuery( \'#lag_days\' ).val( \'1\' );
						for ( var i = 0; i <= 1; i++ ) {
							var influence = Math.floor( ((Math.log(i+1) * -100) + 100) / adj_factor );
							jQuery( \'#influence_\' + i ).val( influence );
						}
					} else if ( marketing_type == \'assist\' ) {
						jQuery( \'#lag_days\' ).val( \'0\' );
						jQuery( \'#influence_0\' ).val( \'25\' );
					}
					influence_view();
					jQuery( \'#lag_wizard_overlay\' ).css( \'display\', \'none\' );
				}
			)
		}
	)

</script>
</head>
<body><div class="wrap"><h1>Channels and Default Lags</h1>
Pick a channel
'' cannot be parsed correct.
HTML code '$'<TD>'' cannot be parsed correct.
HTML code '$'</TD></TR>'' cannot be parsed correct.
HTML code '$'<B><I>Security error on page.</I></B>'' cannot be parsed correct.
HTML code '$'" style="width:180px;" required></td>
<td width=100>To Date<INPUT TYPE="DATE" ID="to_date" NAME="to_date" SIZE=10 VALUE="'' cannot be parsed correct.
HTML code '$'" style="width:180px;" required></td>
<td><INPUT TYPE=SUBMIT VALUE="Query" class="button button-small"></td>
</tr>
</table>
</FORM>


'' cannot be parsed correct.
HTML code '$'<B><I>Invalid selection.</I></B>'' cannot be parsed correct.
HTML code '$'<BR><I>No results found for your selected date range!</I>'' cannot be parsed correct.
HTML code '$'<table class=\'wp-list-table widefat fixed striped posts\'>'' cannot be parsed correct.
HTML code '$'<tbody>'' cannot be parsed correct.
HTML code '$';
		
			jQuery( \'#sim_click_through\' ).on( \'submit\',
				function() {
					event.preventDefault()
					var vsmp_visitor_id = jQuery( \'#delivery_event_visitor_id\' ).val()
					var delivery_event_id = jQuery( \'#delivery_event_id\' ).val()
					jQuery.ajax({
						url: vsmp_ajaxurl,
						type: \'POST\',
						timeout: 5000,
						dataType: \'json\',
						data: \'action=insert_click_thru&vsmp_visitor_id=\'	+ encodeURIComponent( vsmp_visitor_id )
							+ \'&delivery_event_id=\' +  delivery_event_id
							+ \'&vsmp-test_data_generator_nonce=\' + nonce,
						error: function( request, status, error ) {
							alert( status + \' \' + error )
						},
						success: function(response) {
							if ( response.result === \'baddata\' ) {
								alert(\'Bad or missing data.\');		
							} else if ( response.result === \'nonce\' ) {
								alert( \' Not authorized. \' );								
							} else {
								alert( \'Click-Through logged\' )
								window.location.reload( true );
								window.scrollTo( 0, 0 );
							}
						}
					})
				}
			)
			
			jQuery( \'#sim_conversion\' ).on( \'submit\',
				function() {
					event.preventDefault()
					var vsmp_visitor_id = jQuery( \'#conversion_visitor_id\' ).val();
					var conversion_id = jQuery( \'#conversion_id\' ).val();
					var conversion_val = jQuery( \'#conversion_val\' ).val();
					jQuery.ajax({
						url: vsmp_ajaxurl,
						type: \'post\',
						dataType: \'json\',
						data: \'action=insert_conversion&vsmp_visitor_id=\' + encodeURIComponent( vsmp_visitor_id ) 
							+ \'&conversion_id=\' + encodeURIComponent( conversion_id ) 
							+ \'&conversion_val=\' + conversion_val
							+ \'&vsmp-test_data_generator_nonce=\' + nonce,
						error: function( request, status, error ) {
							alert( error )
						},
						success: function( response ) {
							if ( response.result === \'dupid\' ) {
								alert( \'Conversion Id already exists.\' );
							} else if ( response.result === \'baddata\' ) {
								alert( \'Bad or missing data.\' );
							} else if ( response.result === \'nonce\' ) {
								alert( \' Not authorized. \' );
							} else {
								alert( \'Conversion logged\' );
								window.location.reload( true );
								window.scrollTo( 0, 0 );
							}
						}
					})
				}
			)
			
			jQuery( \'#compute\' ).click(
				function() {
					event.preventDefault()
					jQuery.ajax({
						url: vsmp_ajaxurl,
						type: \'post\',
						dataType: \'html\',
						data: "action=compute",
						error: function( request, status, error ) {
							alert( status )
						},
						success: function(response) {
							alert( \'Compute Completed\' )
							window.location.reload(true);
							window.scrollTo( 0, 0 );
						}
					})
				}
			)
		}
	)


</script>

</head>


<body>

<span id="test_data_generator_nonce" style="display: none;">'' cannot be parsed correct.
HTML code '$'<script type="text/JavaScript">'' cannot be parsed correct.
HTML code '$'</script>'' cannot be parsed correct.
HTML code '$'Compute step has been run.  It will be run again in 24 hours.'' cannot be parsed correct.
HTML code '$'<table>'' cannot be parsed correct.
HTML code '$'<OPTION VALUE="Y"'' cannot be parsed correct.
HTML code '$' SELECTED'' cannot be parsed correct.
HTML code '$'>Yes</OPTION>'' cannot be parsed correct.
HTML code '$'<OPTION VALUE="N"'' cannot be parsed correct.
HTML code '$' SELECTED'' cannot be parsed correct.
HTML code '$'>No</OPTION>'' cannot be parsed correct.
HTML code '$'</SELECT></td></tr>'' cannot be parsed correct.
HTML code '$'<INPUT TYPE=HIDDEN ID="conversion_id_data_source_type" NAME="conversion_id_data_source_type" VALUE="'' cannot be parsed correct.
HTML code '$'AUTO'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'<INPUT TYPE=HIDDEN ID="conversion_id_data_source" NAME="conversion_id_data_source" VALUE="'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'<INPUT TYPE=HIDDEN ID="conversion_value_data_source_type" NAME="conversion_value_data_source_type" VALUE="'' cannot be parsed correct.
HTML code '$'CONST'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'<INPUT TYPE=HIDDEN ID="conversion_value_data_source" NAME="conversion_value_data_source" VALUE="'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</table>'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:19.412450.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.043933.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 0 do_action/apply_filters calls and 23 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.647552.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FirebirdInterBaseDetector
### Start running FrontBaseDetector
### Finish running FileProDetector
### Start running HashDetector
### Finish running DbaseDetector
### Start running IBMDb2Detector
### Finish running DbplusDetector
### Start running InformixDetector
### Finish running CubridDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running IBMDb2Detector
### Start running MsqlDetector
### Finish running MongoDetector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running MongoDbDetector
### Start running Oci8Detector
### Finish running MySQLDetector
### Start running OpenSSLDetector
### Finish running Oci8Detector
### Start running ParadoxDetector
### Finish running ArrayElementDetector
### Start running PasswordHashingDetector
### Finish running ParadoxDetector
### Start running PhpCurlDetector
### Finish running PhpCurlDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PasswordHashingDetector
### Start running PHPRetrievalDetector
### Finish running HashDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPIncludedDetector
### Start running PhpVarDetector
### Finish running PhpVarDetector
### Start running PostgreSQLDetector
### Finish running OpenSSLDetector
### Start running PropertyDetector
### Finish running PostgreSQLDetector
### Start running Sqlite3Detector
### Finish running PropertyDetector
### Start running SqliteDetector
### Finish running PHPRetrievalDetector
### Start running SqlServerDetector
### Finish running Sqlite3Detector
### Start running SybaseDetector
### Finish running SqliteDetector
### Start running TokyoTyrantDetector
### Finish running SybaseDetector
### Start running UserInputDetector
### Finish running SqlServerDetector
### Start running VariableDetector
### Finish running TokyoTyrantDetector
### Start running WordpressHashingFnDetector
### Finish running maxdbDetector
### Start running WordPressRemoteDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRetrievalDetector
### Finish running WordPressRemoteDetector
### Start running WordPressStorageDetector
### Finish running UserInputDetector
### Start running WP_UserDetector
### Finish running MySQLiDetector
### Start running GenericDatabaseUsageDetector
### Finish running WP_UserDetector
### Start running GenericEncryptionDetector
### Finish running VariableDetector
### Start running DeletionDetector
### Finish running GenericDatabaseUsageDetector
### Start running UninstallDetector
### Finish running PHPStorageDetector
### Finish running GenericEncryptionDetector
### Finish running WordPressRetrievalDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running WordPressStorageDetector
### Finished running detectors
vsmp-functions.php:35
  - hash called with unapproved hash algorithm ripemd128. Ignore if this is not encrypting personal information
vsmp-functions.php:61
  - hash called with unapproved hash algorithm ripemd128. Ignore if this is not encrypting personal information 

activate/vsmp-run_ddl.php:23
  - RETRIEVAL call to fgets($script).
  - Data types: file 

adminpages/vsmp-commissions_download.php:21
  - STORAGE call to fputcsv($cfd, ["Delivery Event Id", "Delivery Event Desc", "Order Id", "Order Date", "Gross Sales", "Commission %", "Commission"]).
  - Data types: file
adminpages/vsmp-commissions_download.php:24
  - STORAGE call to fputcsv($cfd, ["From Date", $_GET["from_date"]]).
  - Data types: file
adminpages/vsmp-commissions_download.php:25
  - STORAGE call to fputcsv($cfd, ["To Date", $_GET["to_date"]]).
  - Data types: file
adminpages/vsmp-commissions_download.php:38
  - STORAGE call to fputcsv($cfd, ["Invalid selection"]).
  - Data types: file
adminpages/vsmp-commissions_download.php:64
  - STORAGE call to fputcsv($cfd, ["No results found"]).
  - Data types: file
adminpages/vsmp-commissions_download.php:70
  - STORAGE call to fputcsv($cfd, [$result->delivery_event_id, $result->delivery_event_desc, $result->conversion_id, $result->conversion_date, $result->conversion_val, $result->commission_pct, $result->commission]).
  - Data types: file 

activate/vsmp-run_ddl.php:35
  - RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).
classes/class.vsmp-campaign.php:31
  - RETRIEVAL call to get_post($campaign_id) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: wp_post, post_meta, post
classes/class.vsmp-campaign.php:35
  - RETRIEVAL call to get_post_custom($campaign_id). Passed arguments: 0: $post_id (int). Returns (array).
classes/class.vsmp-channel.php:33
  - RETRIEVAL call to get_post($this->id) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: wp_post, post_meta, post
classes/class.vsmp-channel.php:36
  - RETRIEVAL call to get_post_custom($channel_id). Passed arguments: 0: $post_id (int). Returns (array).
classes/class.vsmp-delivery_event.php:31
  - RETRIEVAL call to get_post($delivery_event_id) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: wp_post, post_meta, post
classes/class.vsmp-delivery_event.php:35
  - RETRIEVAL call to get_post_custom($delivery_event_id). Passed arguments: 0: $post_id (int). Returns (array).
classes/class.vsmp-delivery_event.php:166
  - RETRIEVAL call to get_post($this->campaign_id) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: wp_post, post_meta, post
classes/class.vsmp-delivery_event.php:173
  - RETRIEVAL call to get_post($this->channel_id) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: wp_post, post_meta, post
classes/class.vsmp-delivery_event.php:174
  - RETRIEVAL call to get_post_meta($this->channel_id, "detection") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $key (string). Returns (mixed).
  - Data types: post_meta
vsmp-functions.php:789
  - RETRIEVAL call to get_post_custom($post->ID). Passed arguments: 0: $post_id (int). Returns (array).
vsmp-functions.php:1023
  - RETRIEVAL call to get_post_custom($post->ID). Passed arguments: 0: $post_id (int). Returns (array). 

classes/class.vsmp-campaign.php:208
  - STORAGE call to wp_insert_post(["post_type" => "vsmp_campaign", "post_title" => $this->title, "post_content" => $this->description, "post_status" => "publish"]). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
classes/class.vsmp-campaign.php:217
  - STORAGE call to wp_update_post(["ID" => $this->id, "post_title" => $this->title, "post_content" => $this->description]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
classes/class.vsmp-campaign.php:229
  - STORAGE call to update_post_meta($this->id, "from_date", $this->from_date) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
classes/class.vsmp-campaign.php:230
  - STORAGE call to update_post_meta($this->id, "to_date", $this->to_date) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
classes/class.vsmp-campaign.php:231
  - STORAGE call to update_post_meta($this->id, "spend", $this->spend) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
classes/class.vsmp-campaign.php:232
  - STORAGE call to update_post_meta($this->id, "est_roas", $this->est_roas) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
classes/class.vsmp-channel.php:193
  - STORAGE call to wp_insert_post(["post_type" => "vsmp_channel", "post_title" => $this->title, "post_content" => $this->description, "post_status" => "publish"]). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
classes/class.vsmp-channel.php:202
  - STORAGE call to wp_update_post(["ID" => $this->id, "post_title" => $this->title, "post_content" => $this->description]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
classes/class.vsmp-channel.php:214
  - STORAGE call to update_post_meta($this->id, "lag_days", $this->lag_days) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
classes/class.vsmp-channel.php:217
  - STORAGE call to update_post_meta($this->id, "influence_" . $i, $this->influence[$i]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
classes/class.vsmp-channel.php:220
  - STORAGE call to update_post_meta($this->id, "detection", $this->detection) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
classes/class.vsmp-delivery_event.php:194
  - STORAGE call to wp_insert_post(["post_type" => "vsmp_delivery_event", "post_title" => $this->title, "post_content" => $this->description, "post_status" => "publish"]). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
classes/class.vsmp-delivery_event.php:203
  - STORAGE call to wp_update_post(["ID" => $this->id, "post_title" => $this->title, "post_content" => $this->description]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
classes/class.vsmp-delivery_event.php:215
  - STORAGE call to update_post_meta($this->id, "campaign_id", $this->campaign_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
classes/class.vsmp-delivery_event.php:216
  - STORAGE call to update_post_meta($this->id, "channel_id", $this->channel_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
classes/class.vsmp-delivery_event.php:217
  - STORAGE call to update_post_meta($this->id, "commission_days", $this->commission_days) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
classes/class.vsmp-delivery_event.php:218
  - STORAGE call to update_post_meta($this->id, "commission_pct", $this->commission_pct) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
vsmp-functions.php:929
  - STORAGE call to update_post_meta($post->ID, "is_conversion", $is_conversion) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
vsmp-functions.php:931
  - STORAGE call to delete_post_meta($post->ID, "conversion_id_data_source_type") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
vsmp-functions.php:932
  - STORAGE call to delete_post_meta($post->ID, "conversion_id_data_source") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
vsmp-functions.php:933
  - STORAGE call to delete_post_meta($post->ID, "conversion_value_data_source_type") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
vsmp-functions.php:934
  - STORAGE call to delete_post_meta($post->ID, "conversion_value_data_source") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
vsmp-functions.php:939
  - STORAGE call to update_post_meta($post->ID, "conversion_id_data_source_type", $conversion_id_data_source_type) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
vsmp-functions.php:941
  - STORAGE call to delete_post_meta($post->ID, "conversion_id_data_source_type") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
vsmp-functions.php:947
  - STORAGE call to update_post_meta($post->ID, "conversion_id_data_source", $conversion_id_data_source) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
vsmp-functions.php:949
  - STORAGE call to delete_post_meta($post->ID, "conversion_id_data_source") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
vsmp-functions.php:955
  - STORAGE call to update_post_meta($post->ID, "conversion_value_data_source_type", $conversion_value_data_source_type) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
vsmp-functions.php:957
  - STORAGE call to delete_post_meta($post->ID, "conversion_value_data_source_type") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
vsmp-functions.php:963
  - STORAGE call to update_post_meta($post->ID, "conversion_value_data_source", $conversion_value_data_source) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
vsmp-functions.php:965
  - STORAGE call to delete_post_meta($post->ID, "conversion_value_data_source") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta 

adminpages/vsmp-campaign_setup.php:176
  - CRYPTOGRAPHY call to get_from_date_mask().
adminpages/vsmp-campaign_setup.php:211
  - CRYPTOGRAPHY call to get_to_date_mask().
adminpages/vsmp-campaign_setup.php:212
  - CRYPTOGRAPHY call to get_spend_mask().
adminpages/vsmp-campaign_setup.php:213
  - CRYPTOGRAPHY call to get_est_roas_mask().
adminpages/vsmp-channel_config.php:305
  - CRYPTOGRAPHY call to get_lag_days_mask().
adminpages/vsmp-channel_config.php:313
  - CRYPTOGRAPHY call to get_influence_mask($i).
adminpages/vsmp-channel_config.php:319
  - CRYPTOGRAPHY call to get_detection_mask().
classes/class.vsmp-campaign.php:153
  - CRYPTOGRAPHY call to get_from_date_mask().
classes/class.vsmp-campaign.php:164
  - CRYPTOGRAPHY call to get_to_date_mask().
classes/class.vsmp-campaign.php:175
  - CRYPTOGRAPHY call to get_spend_mask().
classes/class.vsmp-campaign.php:190
  - CRYPTOGRAPHY call to get_est_roas_mask().
classes/class.vsmp-channel.php:142
  - CRYPTOGRAPHY call to get_lag_days_mask().
classes/class.vsmp-channel.php:158
  - CRYPTOGRAPHY call to get_influence_mask($i).
classes/class.vsmp-channel.php:174
  - CRYPTOGRAPHY call to get_detection_mask().
vsmp-functions.php:35
  - CRYPTOGRAPHY call to hash("ripemd128", $v1 . $v2 . $v3).
vsmp-functions.php:61
  - CRYPTOGRAPHY call to hash("ripemd128", $v1 . $v2). 

vsmp-functions.php:931
  - DELETION call to delete_post_meta($post->ID, "conversion_id_data_source_type") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
vsmp-functions.php:932
  - DELETION call to delete_post_meta($post->ID, "conversion_id_data_source") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
vsmp-functions.php:933
  - DELETION call to delete_post_meta($post->ID, "conversion_value_data_source_type") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
vsmp-functions.php:934
  - DELETION call to delete_post_meta($post->ID, "conversion_value_data_source") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
vsmp-functions.php:941
  - DELETION call to delete_post_meta($post->ID, "conversion_id_data_source_type") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
vsmp-functions.php:949
  - DELETION call to delete_post_meta($post->ID, "conversion_id_data_source") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
vsmp-functions.php:957
  - DELETION call to delete_post_meta($post->ID, "conversion_value_data_source_type") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
vsmp-functions.php:965
  - DELETION call to delete_post_meta($post->ID, "conversion_value_data_source") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta 

By data type:
file
	PHPRetrievalDetector.fgets($script) - {'file'}
	PHPStorageDetector.fputcsv($cfd, ["Invalid selection"]) - {'file'}
	PHPStorageDetector.fputcsv($cfd, ["Delivery Event Id", "Delivery Event Desc", "Order Id", "Order Date", "Gross Sales", "Commission %", "Commission"]) - {'file'}
	PHPStorageDetector.fputcsv($cfd, ["No results found"]) - {'file'}
	PHPStorageDetector.fputcsv($cfd, ["From Date", $_GET["from_date"]]) - {'file'}
	PHPStorageDetector.fputcsv($cfd, ["To Date", $_GET["to_date"]]) - {'file'}
	PHPStorageDetector.fputcsv($cfd, [$result->delivery_event_id, $result->delivery_event_desc, $result->conversion_id, $result->conversion_date, $result->conversion_val, $result->commission_pct, $result->commission]) - {'file'}
none
	GenericEncryptionDetector.get_detection_mask() - set()
	GenericEncryptionDetector.get_from_date_mask() - set()
	GenericEncryptionDetector.get_spend_mask() - set()
	GenericEncryptionDetector.hash("ripemd128", $v1 . $v2) - set()
	WordPressRetrievalDetector.get_post_custom($campaign_id) - set()
	WordPressRetrievalDetector.get_post_custom($delivery_event_id) - set()
	GenericEncryptionDetector.get_lag_days_mask() - set()
	WordPressRetrievalDetector.dbDelta($sql) - set()
	GenericEncryptionDetector.get_lag_days_mask() - set()
	WordPressStorageDetector.wp_update_post(["ID" => $this->id, "post_title" => $this->title, "post_content" => $this->description]) - set()
	GenericEncryptionDetector.get_est_roas_mask() - set()
	GenericEncryptionDetector.hash("ripemd128", $v1 . $v2 . $v3) - set()
	GenericEncryptionDetector.get_from_date_mask() - set()
	WordPressRetrievalDetector.get_post_custom($post->ID) - set()
	WordPressStorageDetector.wp_insert_post(["post_type" => "vsmp_delivery_event", "post_title" => $this->title, "post_content" => $this->description, "post_status" => "publish"]) - set()
	GenericEncryptionDetector.get_to_date_mask() - set()
	WordPressRetrievalDetector.get_post_custom($post->ID) - set()
	WordPressStorageDetector.wp_update_post(["ID" => $this->id, "post_title" => $this->title, "post_content" => $this->description]) - set()
	GenericEncryptionDetector.get_influence_mask($i) - set()
	WordPressRetrievalDetector.get_post_custom($channel_id) - set()
	GenericEncryptionDetector.get_to_date_mask() - set()
	HashDetector.(unknown) - set()
	GenericEncryptionDetector.get_spend_mask() - set()
	HashDetector.(unknown) - set()
	WordPressStorageDetector.wp_insert_post(["post_type" => "vsmp_campaign", "post_title" => $this->title, "post_content" => $this->description, "post_status" => "publish"]) - set()
	WordPressStorageDetector.wp_update_post(["ID" => $this->id, "post_title" => $this->title, "post_content" => $this->description]) - set()
	GenericEncryptionDetector.get_detection_mask() - set()
	GenericEncryptionDetector.get_influence_mask($i) - set()
	GenericEncryptionDetector.get_est_roas_mask() - set()
	WordPressStorageDetector.wp_insert_post(["post_type" => "vsmp_channel", "post_title" => $this->title, "post_content" => $this->description, "post_status" => "publish"]) - set()
post
	WordPressRetrievalDetector.get_post($delivery_event_id) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post($this->id) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post($this->campaign_id) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post($campaign_id) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post($this->channel_id) - {'wp_post', 'post_meta', 'post'}
post_meta
	WordPressStorageDetector.update_post_meta($post->ID, "conversion_id_data_source_type", $conversion_id_data_source_type) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($this->id, "commission_days", $this->commission_days) - {'post_meta'}
	DeletionDetector.delete_post_meta($post->ID, "conversion_value_data_source_type") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($this->id, "detection", $this->detection) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($this->id, "to_date", $this->to_date) - {'post_meta'}
	DeletionDetector.delete_post_meta($post->ID, "conversion_value_data_source") - {'post_meta'}
	DeletionDetector.delete_post_meta($post->ID, "conversion_id_data_source") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($this->id, "from_date", $this->from_date) - {'post_meta'}
	WordPressRetrievalDetector.get_post($delivery_event_id) - {'wp_post', 'post_meta', 'post'}
	WordPressStorageDetector.update_post_meta($post->ID, "conversion_id_data_source", $conversion_id_data_source) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($this->channel_id, "detection") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($this->id, "campaign_id", $this->campaign_id) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($this->id, "lag_days", $this->lag_days) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post->ID, "conversion_value_data_source_type", $conversion_value_data_source_type) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($this->id, "commission_pct", $this->commission_pct) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post->ID, "conversion_id_data_source") - {'post_meta'}
	DeletionDetector.delete_post_meta($post->ID, "conversion_value_data_source_type") - {'post_meta'}
	WordPressRetrievalDetector.get_post($this->id) - {'wp_post', 'post_meta', 'post'}
	WordPressStorageDetector.delete_post_meta($post->ID, "conversion_value_data_source") - {'post_meta'}
	DeletionDetector.delete_post_meta($post->ID, "conversion_id_data_source_type") - {'post_meta'}
	WordPressRetrievalDetector.get_post($this->campaign_id) - {'wp_post', 'post_meta', 'post'}
	WordPressStorageDetector.update_post_meta($this->id, "channel_id", $this->channel_id) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($this->id, "est_roas", $this->est_roas) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post->ID, "conversion_id_data_source_type") - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post->ID, "conversion_value_data_source_type") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post->ID, "is_conversion", $is_conversion) - {'post_meta'}
	WordPressRetrievalDetector.get_post($campaign_id) - {'wp_post', 'post_meta', 'post'}
	DeletionDetector.delete_post_meta($post->ID, "conversion_id_data_source") - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post->ID, "conversion_id_data_source") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($this->id, "spend", $this->spend) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($this->id, "influence_" . $i, $this->influence[$i]) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post->ID, "conversion_value_data_source_type") - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post->ID, "conversion_value_data_source") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post->ID, "conversion_value_data_source", $conversion_value_data_source) - {'post_meta'}
	WordPressRetrievalDetector.get_post($this->channel_id) - {'wp_post', 'post_meta', 'post'}
	WordPressStorageDetector.delete_post_meta($post->ID, "conversion_id_data_source_type") - {'post_meta'}
	DeletionDetector.delete_post_meta($post->ID, "conversion_id_data_source_type") - {'post_meta'}
	DeletionDetector.delete_post_meta($post->ID, "conversion_value_data_source") - {'post_meta'}
wp_post
	WordPressRetrievalDetector.get_post($delivery_event_id) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post($this->id) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post($this->campaign_id) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post($campaign_id) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post($this->channel_id) - {'wp_post', 'post_meta', 'post'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:14.531043.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 150 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.304953.

150 STORE_REACHES edges created
150 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
In total, tainted 0 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 125 nodes as ENCRYPTED
In total, tainted 125 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:02.594227.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:01:23.667322!
DELETION call to delete_post_meta($post->ID, "conversion_id_data_source_type") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($post->ID, "conversion_id_data_source") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($post->ID, "conversion_value_data_source_type") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($post->ID, "conversion_value_data_source") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($post->ID, "conversion_id_data_source_type") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($post->ID, "conversion_id_data_source") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($post->ID, "conversion_value_data_source_type") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($post->ID, "conversion_value_data_source") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
CRYPTOGRAPHY call to get_from_date_mask().,None,None
CRYPTOGRAPHY call to get_to_date_mask().,None,None
CRYPTOGRAPHY call to get_spend_mask().,None,None
CRYPTOGRAPHY call to get_est_roas_mask().,None,None
CRYPTOGRAPHY call to get_lag_days_mask().,None,None
CRYPTOGRAPHY call to get_influence_mask($i).,None,None
CRYPTOGRAPHY call to get_detection_mask().,None,None
CRYPTOGRAPHY call to get_from_date_mask().,None,None
CRYPTOGRAPHY call to get_to_date_mask().,None,None
CRYPTOGRAPHY call to get_spend_mask().,None,None
CRYPTOGRAPHY call to get_est_roas_mask().,None,None
CRYPTOGRAPHY call to get_lag_days_mask().,None,None
CRYPTOGRAPHY call to get_influence_mask($i).,None,None
CRYPTOGRAPHY call to get_detection_mask().,None,None
CRYPTOGRAPHY call to hash("ripemd128", $v1 . $v2 . $v3).,None,None
CRYPTOGRAPHY call to hash("ripemd128", $v1 . $v2).,None,None
hash called with unapproved hash algorithm ripemd128. Ignore if this is not encrypting personal information,ripemd128,None
hash called with unapproved hash algorithm ripemd128. Ignore if this is not encrypting personal information,ripemd128,None
RETRIEVAL call to fgets($script).,None,None
STORAGE call to fputcsv($cfd, ["Delivery Event Id", "Delivery Event Desc", "Order Id", "Order Date", "Gross Sales", "Commission %", "Commission"]).,None,None
STORAGE call to fputcsv($cfd, ["From Date", $_GET["from_date"]]).,None,None
STORAGE call to fputcsv($cfd, ["To Date", $_GET["to_date"]]).,None,None
STORAGE call to fputcsv($cfd, ["Invalid selection"]).,None,None
STORAGE call to fputcsv($cfd, ["No results found"]).,None,None
STORAGE call to fputcsv($cfd, [$result->delivery_event_id, $result->delivery_event_desc, $result->conversion_id, $result->conversion_date, $result->conversion_val, $result->commission_pct, $result->commission]).,None,None
RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to get_post($campaign_id) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_custom($campaign_id). Passed arguments: 0: $post_id (int). Returns (array).,None,None
RETRIEVAL call to get_post($this->id) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_custom($channel_id). Passed arguments: 0: $post_id (int). Returns (array).,None,None
RETRIEVAL call to get_post($this->campaign_id) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($this->channel_id) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($this->channel_id, "detection") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($delivery_event_id) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_custom($delivery_event_id). Passed arguments: 0: $post_id (int). Returns (array).,None,None
RETRIEVAL call to get_post_custom($post->ID). Passed arguments: 0: $post_id (int). Returns (array).,None,None
RETRIEVAL call to get_post_custom($post->ID). Passed arguments: 0: $post_id (int). Returns (array).,None,None
STORAGE call to wp_insert_post(["post_type" => "vsmp_campaign", "post_title" => $this->title, "post_content" => $this->description, "post_status" => "publish"]). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to wp_update_post(["ID" => $this->id, "post_title" => $this->title, "post_content" => $this->description]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($this->id, "from_date", $this->from_date) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($this->id, "to_date", $this->to_date) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($this->id, "spend", $this->spend) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($this->id, "est_roas", $this->est_roas) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_insert_post(["post_type" => "vsmp_channel", "post_title" => $this->title, "post_content" => $this->description, "post_status" => "publish"]). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to wp_update_post(["ID" => $this->id, "post_title" => $this->title, "post_content" => $this->description]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($this->id, "lag_days", $this->lag_days) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($this->id, "influence_" . $i, $this->influence[$i]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($this->id, "detection", $this->detection) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_insert_post(["post_type" => "vsmp_delivery_event", "post_title" => $this->title, "post_content" => $this->description, "post_status" => "publish"]). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to wp_update_post(["ID" => $this->id, "post_title" => $this->title, "post_content" => $this->description]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($this->id, "campaign_id", $this->campaign_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($this->id, "channel_id", $this->channel_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($this->id, "commission_days", $this->commission_days) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($this->id, "commission_pct", $this->commission_pct) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post->ID, "is_conversion", $is_conversion) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($post->ID, "conversion_id_data_source_type") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_post_meta($post->ID, "conversion_id_data_source") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_post_meta($post->ID, "conversion_value_data_source_type") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_post_meta($post->ID, "conversion_value_data_source") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($post->ID, "conversion_id_data_source_type", $conversion_id_data_source_type) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($post->ID, "conversion_id_data_source_type") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($post->ID, "conversion_id_data_source", $conversion_id_data_source) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($post->ID, "conversion_id_data_source") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($post->ID, "conversion_value_data_source_type", $conversion_value_data_source_type) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($post->ID, "conversion_value_data_source_type") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($post->ID, "conversion_value_data_source", $conversion_value_data_source) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($post->ID, "conversion_value_data_source") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found no personal data in the plugin. No analysis needed. 

[main] Complaint? True 

No findings
