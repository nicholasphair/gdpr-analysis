Timeout in resolving values
Timeout in running neo4j query
Running Main.py on video-jacker

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.410878.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:00.900182.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 9 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.426666.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 2 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.565853.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 121 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:00.589538.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 0 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.597920.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.109496.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 54 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:00.979303.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 1330
Added 1144 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 1432
Added 102 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.015082.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/video-jacker/form.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/video-jacker/video-jacker.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.412966.

9 PHP_REACHES edges created
2 REACHES edges created
1000 PHP_REACHES edges created
1319 PHP_REACHES edges created
102 PHP_REACHES edges created
1432 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 440 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:00.968618.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.718551.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 8 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.719208.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 21 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.155585.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.089546.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.099810.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.009330.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.034608.

29 PHP_REACHES edges created
29 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 15 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.110534.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
No SQL nodes to process.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:00.115897.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'get_option("siteurl")'' cannot be parsed correct.
HTML code '$'<option value="0">No Saved Videos Found</option>'' cannot be parsed correct.
HTML code '$'<input type="text" id="vidjac_descr" name="vidjac_descr" value="get_post_meta($post->ID, "vidjac_descr", true)" size="70" /><br/><br/>'' cannot be parsed correct.
HTML code '$'<textarea id="vidjac_video" name="vidjac_video" rows="4" cols="70">get_post_meta($post->ID, "vidjac_video", true)</textarea></p>'' cannot be parsed correct.
HTML code '$'WP_PLUGIN_URL/video-jacker/images/video_jacker32.png'' cannot be parsed correct.
HTML code '$'get_post_meta(get_the_ID(), "vidjac_descr", true)'' cannot be parsed correct.
HTML code '$'get_post_meta(get_the_ID(), "vidjac_type", true)'' cannot be parsed correct.
HTML code '$'WP_PLUGIN_URL/video-jacker/images/video_jacker32.png'' cannot be parsed correct.
HTML code '$'get_admin_page_title()'' cannot be parsed correct.
HTML code '$'WP_PLUGIN_URL/video-jacker/images/vj_inst_01.gif'' cannot be parsed correct.
HTML code '$'WP_PLUGIN_URL/video-jacker/images/vj_inst_02.gif'' cannot be parsed correct.
HTML code '$'WP_PLUGIN_URL/video-jacker/images/vj_inst_03.gif'' cannot be parsed correct.
HTML code '$'/wp-includes/js/tinymce/tiny_mce_popup.js"></script>
    <script type="text/javascript">
        var $ = jQuery;
        var video_jacker = {
            e: \'\',
            init: function(e) {
                video_jacker.e = e;
                tinyMCEPopup.resizeToInnerSize();
            },
            insert: function createVJShortcode(e) {
                var value = $(\'#vidjac_code\').val();
                var value2 = $(\'#vidjac_code2\').val();
                var value3 = $(\'#vidjac_code3\').val();
                var saved_tool = $(\'#vidjac_saved_videos\').val();
                var src = "";
                var atts = new Array();
                var style = "";
                var flashvars = "";

                if ( value !== \'\' )
                {
                    flashvars = $(value).find(\'param[name="flashVars"]\').val();
                    value = vartest(value);
                    src = $(value).attr("src");
                    atts[\'height\'] = $(value).attr("height");
                    atts[\'width\'] = $(value).attr("width");
                    style = $(value).attr("style");
                    insertshort(src,atts,style);
                }
                if ( value2 !== \'\' )
                {
                    flashvars = $(value2).find(\'param[name="flashVars"]\').val();
                    value2 = vartest(value2);
                    src = $(value2).attr("src");
                    atts[\'height\'] = $(value2).attr("height");
                    atts[\'width\'] = $(value2).attr("width");
                    style = $(value2).attr("style");
                    insertshort(src,atts,style);
                }
                if ( value3 !== \'\' )
                {
                    flashvars = $(value3).find(\'param[name="flashVars"]\').val();
                    value3 = vartest(value3);
                    src = $(value3).attr("src");
                    atts[\'height\'] = $(value).attr("height");
                    atts[\'width\'] = $(value).attr("width");
                    style = $(value3).attr("style");
                    insertshort(src,atts,style,flashvars);
                }
                if( saved_tool != 0)
                {
                    insertshort(saved_tool,\'\',\'saved\');
                }
                tinyMCEPopup.close();
            }
        }
        tinyMCEPopup.onInit.add(video_jacker.init, video_jacker);

        function vartest(tvalue)
        {
            tvalue = strip_tags(tvalue, \'<iframe>\');

            var myRe = new RegExp("var.+?;", "g");
            var pattern = /<object><iframe>.+?<\/iframe><\/object>/;
            var myArray;
            var params = "";
            while (myArray = myRe.exec(tvalue))
            {
                params = params+htmlEntities(myArray[0]);
            }
            if(params != ""){
                insertshort(params,\'\',\'saved_var\');
                tvalue = tvalue.replace(pattern, "");
                return tvalue;
            }
            return tvalue;
        }

        function strip_tags (input, allowed) {
            allowed = (((allowed || "") + "").toLowerCase().match(/<[a-z][a-z0-9]*>/g) || []).join(\'\'); // making sure the allowed arg is a string containing only tags in lowercase (<a><b><c>)
            var tags = /<\/?([a-z][a-z0-9]*)\b[^>]*>/gi,
                commentsAndPhpTags = /<!--[\s\S]*?-->|<\?(?:php)?[\s\S]*?\?>/gi;
            return input.replace(commentsAndPhpTags, \'\').replace(tags, function ($0, $1) {
                return allowed.indexOf(\'<\' + $1.toLowerCase() + \'>\') > -1 ? $0 : \'\';
            });
        }


        function htmlEntities(str) {
            return String(str).replace(/&/g, \'&amp;\').replace(/</g, \'&lt;\').replace(/>/g, \'&gt;\').replace(/"/g, \'&quot;\');
        }


        function insertshort(src,atts,style,flashvars)
        {
            var shortcode = \'video_jacker\';
            var shortcode_close = \'[/video_jacker]\';
            var vidjac;
            var height;
            var width;
            var flashvartxt;

            if (atts[\'height\'] !== undefined) {
                height = \' height=\' + atts[\'height\'];
            }
            if (atts[\'width\'] !== undefined) {
                width = \' width=\' + atts[\'width\'];
            }

            if (flashvars !== undefined) {
                flashvartxt = flashvars.replace(/&/gi," ")
            }

            if (style === undefined) {

                if (src !== undefined) {
                    vidjac = \'[\' + shortcode + height + width +\']\' + src + shortcode_close;
                    tinyMCEPopup.execCommand(\'mceInsertContent\', 0, vidjac);
                }



            } else if(style === \'saved\'){
                vidjac = \'[\' + shortcode + \' saved="\' + src + \'" /]\';
                tinyMCEPopup.execCommand(\'mceInsertContent\', 0, vidjac);

            } else if(style === \'saved_var\'){
                vidjac = \'[\' + shortcode + \' type="vars"]\' + src + shortcode_close;
                tinyMCEPopup.execCommand(\'mceInsertContent\', 0, vidjac);

            }else {
                vidjac = \'[\' + shortcode + height + width + \' \' + flashvartxt + \' style="\' + style + \'"]\' + src + shortcode_close;
                tinyMCEPopup.execCommand(\'mceInsertContent\', 0, vidjac);
            }
            return;
        }
    </script>
    <style>
        label {
            display: block;
        }
        textarea {
            margin-bottom: 10px;
        }
        #bz9_tools_txt {
            margin-bottom: 10px;
        }
        a {
            width:155px;
            display:block;
            margin-left:auto;
            margin-right:auto;
            padding: 2px 5px 2px 5px;
            text-decoration:none;
            font-family:arial;
            font-weight:bold;
            text-align:center;
            background-color: #fff9f8;
            color: white;
            font-size:9pt;
            border: 3px #454545 ridge;
        }
        a:hover {
            color: #5c79b7;
        }
    </style>
</head>
<body>
<div id="video_jacker_txt">Enter your video embed code into one of the boxes below. To save you time three boxes have been provided to make multiple shortcodes.</div>
<div id="vidjac-form"><table id="vidjac-table" class="form-table">
        <tr>
            <th><label for="vidjac_code">Video Code</label></th>
            <td><textarea id="vidjac_code" name="columns" rows="5" cols="40" /></textarea>
            </td>
        </tr>
        <tr>
            <th><label for="vidjac_code2">Video Code</label></th>
            <td><textarea id="vidjac_code2" name="columns" rows="5" cols="40" /></textarea>
            </td>
        </tr>
        <tr>
            <th><label for="vidjac_code3">Video Code</label></th>
            <td><textarea id="vidjac_code3" name="columns" rows="5" cols="40" /></textarea>
            </td>
        </tr>
        <tr>
            <th><label for="vidjac_saved_videos">Saved Videos</label></th>
            <td><select name="vidjac_saved_videos" id="vidjac_saved_videos">'' cannot be parsed correct.
HTML code '$'<label class="vidjac_label" for="vidjac_descr">'' cannot be parsed correct.
HTML code '$'</label> '' cannot be parsed correct.
HTML code '$'<p class="formfield"><label class="vidjac_label" for="vidjac_tool">'' cannot be parsed correct.
HTML code '$'</label> '' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:02.532346.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.056587.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 0 do_action/apply_filters calls and 15 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.652192.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FileProDetector
### Start running FrontBaseDetector
### Finish running FirebirdInterBaseDetector
### Start running HashDetector
### Finish running DbplusDetector
### Start running IBMDb2Detector
### Finish running DbaseDetector
### Start running InformixDetector
### Finish running FrontBaseDetector
### Start running IngresDetector
### Finish running CubridDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running Oci8Detector
### Start running OpenSSLDetector
### Finish running MongoDbDetector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running HashDetector
### Start running PhpCurlDetector
### Finish running ArrayElementDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PasswordHashingDetector
### Start running PHPRetrievalDetector
### Finish running PHPIncludedDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running OpenSSLDetector
### Start running PhpVarDetector
### Finish running PhpCurlDetector
### Start running PostgreSQLDetector
### Finish running PhpVarDetector
### Start running PropertyDetector
### Finish running PostgreSQLDetector
### Start running Sqlite3Detector
### Finish running PHPRetrievalDetector
### Start running SqliteDetector
### Finish running Sqlite3Detector
### Start running SqlServerDetector
### Finish running PHPStorageDetector
### Start running SybaseDetector
### Finish running SqliteDetector
### Start running TokyoTyrantDetector
### Finish running PropertyDetector
### Start running UserInputDetector
### Finish running SybaseDetector
### Start running VariableDetector
### Finish running TokyoTyrantDetector
### Start running WordpressHashingFnDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRemoteDetector
### Finish running SqlServerDetector
### Start running WordPressRetrievalDetector
### Finish running WordPressRemoteDetector
### Start running WordPressStorageDetector
### Finish running maxdbDetector
### Start running WP_UserDetector
### Finish running VariableDetector
### Start running GenericDatabaseUsageDetector
### Finish running MySQLiDetector
### Start running GenericEncryptionDetector
### Finish running WP_UserDetector
### Start running DeletionDetector
### Finish running GenericEncryptionDetector
### Start running UninstallDetector
### Finish running GenericDatabaseUsageDetector
### Finish running UserInputDetector
### Finish running DeletionDetector
### Finish running WordPressRetrievalDetector
### Finish running UninstallDetector
### Finish running WordPressStorageDetector
### Finished running detectors
form.php:27
  - RETRIEVAL call to get_option("siteurl") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
video-jacker.php:119
  - RETRIEVAL call to get_post_meta($saved, "vidjac_video", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
video-jacker.php:228
  - RETRIEVAL call to get_user_option("rich_editing") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: user_meta
video-jacker.php:317
  - RETRIEVAL call to get_post_meta($post->ID, "vidjac_descr", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
video-jacker.php:318
  - RETRIEVAL call to get_post_meta($post->ID, "vidjac_video", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
video-jacker.php:463
  - RETRIEVAL call to get_post_meta(get_the_ID(), "vidjac_descr", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
video-jacker.php:467
  - RETRIEVAL call to get_post_meta(get_the_ID(), "vidjac_type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta 

video-jacker.php:360
  - STORAGE call to add_post_meta($post_ID, "vidjac_descr", $mydata, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).
  - Data types: post_meta
video-jacker.php:361
  - STORAGE call to update_post_meta($post_ID, "vidjac_descr", $mydata) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
video-jacker.php:365
  - STORAGE call to add_post_meta($post_ID, "vidjac_video", $mydata2, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).
  - Data types: post_meta
video-jacker.php:366
  - STORAGE call to update_post_meta($post_ID, "vidjac_video", $mydata2) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
video-jacker.php:368
  - STORAGE call to add_post_meta($post_ID, "vidjac_type", $this->vidjac_type, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).
  - Data types: post_meta
video-jacker.php:369
  - STORAGE call to update_post_meta($post_ID, "vidjac_type", $this->vidjac_type) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta 

By data type:
option
	WordPressRetrievalDetector.get_option("siteurl") - {'option'}
post_meta
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "vidjac_descr", true) - {'post_meta'}
	WordPressStorageDetector.add_post_meta($post_ID, "vidjac_type", $this->vidjac_type, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "vidjac_descr", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($saved, "vidjac_video", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "vidjac_type", true) - {'post_meta'}
	WordPressStorageDetector.add_post_meta($post_ID, "vidjac_video", $mydata2, true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_ID, "vidjac_type", $this->vidjac_type) - {'post_meta'}
	WordPressStorageDetector.add_post_meta($post_ID, "vidjac_descr", $mydata, true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_ID, "vidjac_descr", $mydata) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_ID, "vidjac_video", $mydata2) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "vidjac_video", true) - {'post_meta'}
user_meta
	WordPressRetrievalDetector.get_user_option("rich_editing") - {'user_meta'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:07.265003.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 30 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.128336.

30 STORE_REACHES edges created
30 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 1 nodes as PERSONAL
In total, tainted 1 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
In total, tainted 0 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:00.115614.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:00:27.705064!
RETRIEVAL call to get_option("siteurl") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($saved, "vidjac_video", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_option("rich_editing") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "vidjac_descr", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "vidjac_video", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "vidjac_descr", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "vidjac_type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
STORAGE call to add_post_meta($post_ID, "vidjac_descr", $mydata, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).,None,None
STORAGE call to update_post_meta($post_ID, "vidjac_descr", $mydata) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to add_post_meta($post_ID, "vidjac_video", $mydata2, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).,None,None
STORAGE call to update_post_meta($post_ID, "vidjac_video", $mydata2) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to add_post_meta($post_ID, "vidjac_type", $this->vidjac_type, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).,None,None
STORAGE call to update_post_meta($post_ID, "vidjac_type", $this->vidjac_type) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] Storage check is NONE 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['encryption', 'third_party'] 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? True 

No findings
