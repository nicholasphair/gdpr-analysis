Timeout in resolving values
Timeout in running neo4j query
Running Main.py on login-with-yourmembership

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.921776.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.001469.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 5 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.397517.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 0 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.463715.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 426 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:00.884644.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 0 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.707407.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.118209.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 242 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:04.308824.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 3521
Added 2848 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 6739
Added 3218 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.767987.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/login-with-yourmembership/moym_page.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/login-with-yourmembership/moym_settings.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/login-with-yourmembership/moym_sso.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/login-with-yourmembership/uninstall.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/login-with-yourmembership/includes/classes/moym_customer.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/login-with-yourmembership/includes/classes/moym_login_widget.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/login-with-yourmembership/includes/classes/actions/moym_config.action.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/login-with-yourmembership/includes/classes/actions/moym_customer.action.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/login-with-yourmembership/includes/tmpl/moym_attr.tmpl.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/login-with-yourmembership/includes/tmpl/moym_config.tmpl.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/login-with-yourmembership/includes/tmpl/moym_feedback.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/login-with-yourmembership/includes/tmpl/moym_license.tmpl.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/login-with-yourmembership/includes/tmpl/moym_login.tmpl.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/login-with-yourmembership/includes/tmpl/moym_reg.tmpl.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/login-with-yourmembership/includes/tmpl/moym_support.tmpl.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/login-with-yourmembership/includes/utils/moym_global.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/login-with-yourmembership/includes/utils/moym_utility.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:01.755842.

1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
3521 PHP_REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
3218 PHP_REACHES edges created
6739 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 1334 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.180045.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 1 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:01.067572.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 77 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:03.636175.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 83 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.191110.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.097563.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.703229.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.024417.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.055693.

1 CALLS edges created
160 PHP_REACHES edges created
161 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 109 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.126316.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
No SQL nodes to process.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:00.183515.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'$this->get_field_id("wid_title")'' cannot be parsed correct.
HTML code '$'$this->get_field_id("wid_title")'' cannot be parsed correct.
HTML code '$'$this->get_field_name("wid_title")'' cannot be parsed correct.
HTML code '$'Hello, wp_get_current_user()'' cannot be parsed correct.
HTML code '$'| <a href=wp_logout_url(moym_get_current_page_url())>Logout</a>'' cannot be parsed correct.
HTML code '$'
    <div class="moym_table_layout">
        <h3>Basic Attribute Mapping</h3>
	    <hr>
	    <div>Map Attributes sent by YourMembership to the following user attributes in WordPress.</div><br/>
        <table width="80%">
            <tr><td><strong><span style="color: red">*</span> Username: </strong></td><td><b>Email</b></td></tr>
            <tr><td><strong><span style="color: red">*</span> Email: </strong></td><td><b>Email</b></td></tr>
            <tr><td><strong><span style="color: red">*</span> First Name: </strong></td><td><input type="text" name="moym_first_name" style="width:90%;background: #DCDAD1;color:darkslategray;" disabled placeholder="Enter attribute name for First Name"></td></tr>
            <tr><td><strong><span style="color: red">*</span> Last Name: </strong></td><td><input type="text" name="moym_last_name" style="width:90%;background: #DCDAD1;color:darkslategray;" disabled placeholder="Enter attribute name for Last Name"></td></tr>
            <tr><td><strong><span style="color: red">*</span> Group/Role: </strong></td><td><input type="text" name="moym_group_role" style="width:90%;background: #DCDAD1;color:darkslategray;" disabled placeholder="Enter attribute name for Group/Role"></td></tr>
            <tr>
                <td colspan="3"><br/>
                    <span style="color: red">*</span>
                    These attributes are configurable in <a href="admin_url("admin.php?page=moym_settings&tab=pricing")">Premium and All-Inclusive</a> versions of the plugin.
                </td>
            </tr>
        </table>
	    <br>
	    
	    <h3>Custom Attribute Mapping</h3>
	    <hr>
	    <div>Map Attributes sent by YourMembership to the <strong>usermeta</strong> table of WordPress Database.</div>
		<table width="80%">
		    <tr><td colsapn="3">
		        <br/><input type="button" name="add_attribute" value="Add Attribute" disabled
		                    class="button button-primary button-large"><br/><br/>
		    </td></tr>
            <tr>
                <td colspan="3"><br/>
                    Customized Attribute Mapping is configurable in <a href="admin_url("admin.php?page=moym_settings&tab=pricing")">All-Inclusive</a> version of the plugin.
                </td>
            </tr>
        </table>
                
        <br>
        <h3>Role Mapping</h3>
        <hr>
        <div>Map roles sent by YourMembership to the following user roles in WordPress.</div><br/>
        <table width="80%">
            <tr>
                <td><strong><span style="color: red">*</span>Default Role: </strong></td>
                <td>
                    <select id="moym_default_user_role" name="moym_default_user_role" style="width:150px;background-color: #DCDAD1;color:darkslategray;" disabled>
                        <option selected="selected" value="Subscriber"> Subscriber</option>
                    </select>
                    &nbsp;<i>Select the default role to assign to Users.</i>
                </td>
            </tr>'' cannot be parsed correct.
HTML code '$'<tr><td><span style="color: red">*</span><b>$role_name</b></td><td><input type="text" placeholder="Semi-colon(;) separated Group/Role value for $role_name" style="width: 400px;background-color: #DCDAD1;" disabled/></td></tr>'' cannot be parsed correct.
HTML code '$'
            <tr id="save_config_element1">
                <td colspan="3" style="text-align:center;"><br/>
                    <input type="submit" style="width:100px;" name="submit" value="Save" 
                            class="button button-primary button-large" disabled/>
                </td>
            </tr>
            <tr>
                <td colspan="3"><br/>
                    <span style="color: red">*</span>
                    Default role mapping is configurable in <a href="admin_url("admin.php?page=moym_settings&tab=pricing")">Premium and All-Inclusive</a> version of the plugin. 
                    <br>
                    <span style="color: red">*</span>
                    Customized role mapping is configurable in <a href="admin_url("admin.php?page=moym_settings&tab=pricing")">All-Inclusive</a> version of the plugin.
                </td>
            </tr>
        </table>
    </div'' cannot be parsed correct.
HTML code '$'<script>
            function showTestWindow() {
                var myWindow = window.open(site_url()/?option=moymsso&testconfig=true", "TEST YOURMEMBERSHIP SSO", "scrollbars=1 width=800, height=600");
            }
        </script>
        <div class="moym_table_layout">
        	<h2>Configure YourMembership Settings <font size="2px"></font></h2>
            
		        <br>
		        <form name="moym_app_config_form" method="post" action="" id="moym_app_config_form">'' cannot be parsed correct.
HTML code '$'	
					<input type="hidden" name="option" value="moym_save_app_config">
			        <table class="moym_settings_table">
			        <tr>
			            <td><b>Application: </b></td>
			            <td><div class="ym_logo" style="border:1px solid #7e8993;border-radius: 4px;">
                        <img src="plugins_url()/login-with-yourmembership/includes/images/ym_image.png"/>
                        
                    </div>  <a href="https://plugins.miniorange.com/setup-single-sign-on-sso-for-wordpress-using-yourmembership" target="_blank" rel="noopener noreferrer" class="button button-primary" style="margin-top:7%; margin-left: 5%;">Click here to open setup guide</a></td>
					</tr>
                    <tr>
                    <td></td>
                    <td><h4>YourMembership Application</h4></td>
                    </tr>
			        <tr>
			            <td><b>Redirect URL: </b></td>
			            <td> <input type="text" class="moym_table_textbox" name="moym_callback" readonly="true" value="site_url()"></td>
					</tr>
					<tr>
			            <td><b>Client ID<span style="color:red;">*</span>: </b></td>
			            <td> <input type="text" class="moym_table_textbox" name="moym_clientID" pattern="[a-zA-Z0-9]+" required value="get_option("moym_clientID")"></td>
					</tr>
					<tr>
			            <td><b>App ID<span style="color:red;">*</span>: </b></td>
			            <td> <input type="text" class="moym_table_textbox" name="moym_appID" required value="get_option("moym_appID")"></td>
					</tr>
					<tr>
			            <td><b>App Secret<span style="color:red;">*</span>: </b></td>
			            <td> <input type="password" class="moym_table_textbox" name="moym_app_secret" required value="get_option("moym_app_secret")"></td>
					</tr>
					<tr>
			            <td><b>Scope: </b></td>
			            <td> <input type="text" class="moym_table_textbox" name="moym_scope" readonly="true" value="basic_profile"></td>
					</tr>
                    <tr>
                        <td></td>
                        <td><b><span style="color:red;">Note:</span> full_profile scope is available in <a href="admin_url("admin.php?page=moym_settings&tab=pricing")">Premium and All-Inclusive</a> plans.</b></td>
                    </tr>
					<tr>
			            <td><b>Authorize Endpoint<span style="color:red;">*</span>: </b></td>
			            <td> <input type="text" class="moym_table_textbox" name="moym_authURL" required value="get_option("moym_authURL")"></td>
					</tr>
					<tr>
			            <td></td>
			            <td><p><input type="submit" name="submit" value="Save" class="button button-primary button-large"><input type="button" name="test" title="You can test your Configuration only after configuring the app" onclick="showTestWindow();" '' cannot be parsed correct.
HTML code '$' onchange="document.getElementById(\'moym_add_sso_button_wp_form\').submit();"/> 
                        <span class="slider round" title="You can add the button only after configuring the app"></span></label>
                        <span style="padding-left:5px"><b>Add a Single Sign on button on the WordPress login page</b></span>
                    </p>
                </form>
            
        </div>
        </br>


        <div style="background-color:#FFFFFF;position: relative" id="minorange-use-widget">
            <h3>
                <b>Option 2: Use a Widget</b>
                <sup style="font-size: 12px;"> [Available in current version of the plugin]</sup>
            </h3>
            <hr>
            <div style="margin:2% 0 2% 17px;">
                <p>Add the SSO Widget by following the instructions below. This will add the SSO link on your site.</p>
                <div id="moym_add_widget_steps">
                    <ol>
                        <li>Go to Appearances > <a href=" get_admin_url()widgets.php">Widgets</a></li>
                        <li>Select "Login with YourMembership". Drag and drop to your favourite location and save.</li>
                    </ol>
                </div>
            </div>
            <br>
       
            <div style="background-color:#FFFFFF;position: relative" id="moym_short_code">
                <h3>
                    Option 3: Use a ShortCode
                    <sup style="font-size: 12px;">[Available in <a href="admin_url("admin.php?page=moym_settings&tab=pricing")">Premium and All-Inclusive</a> plans]</sup>
                </h3>
                <hr>
                <div style="margin:2% 0 2% 17px;">
                    <label class="switch">
                      <input type="checkbox" disabled>
                      <span class="slider round"></span>
                    </label>

                    <span style="padding-left:5px">
                        <b><span style="color: red">*</span>
                            Check this option if you want to add a shortcode to your page
                        </b>
                    </span>
                </div>
                <br/>
            </div>
		
		    <h3>
                <b>Option 4: Auto Redirection</b>
                <sup style="font-size: 12px;">[Available in <a href="admin_url("admin.php?page=moym_settings&tab=pricing")">Premium and All-Inclusive</a> plans]</sup>
            </h3>
            <hr>
            Enable the following option if you want to restrict your site to only logged in users. Any un-authenticated user trying to access your site will be redirected to YourMembership login.<br/><br/>
            <div style="margin:0 0 0 17px;">
                <input type="checkbox" name="moym_enable_auto_redirect" value="true" disabled>
                &nbsp;&nbsp; <strong><span style="color: red">*</span> Enable Auto Redirect to YM</strong>
            </div>
            <br><br>

            Enable the following option if you want the users visiting any of the following URLs to get redirected to YourMembership login page for authentication:
            <br><code><b>wp_login_url()</b></code> or <code><b> admin_url()</b></code><br><br>
            <div style="margin:0 0 0 17px;">
                <input type="checkbox" name="moym_wp_redirect" value="true" disabled>
                &nbsp; &nbsp;<strong><span style="color: red">*</span> Enable Auto-redirect from WP Login</strong>
            </div>
            <br><br>
		
		    Enable this option to create a backdoor, using which you can login to your website using WordPress credentials, incase you get locked out of your YM account.
			<br><br>
			<input type="checkbox" name="moym_enable_backdoor" value="true" disabled>
			&nbsp;&nbsp;<strong><span style="color: red">*</span> Enable Backdoor Login</strong>
			<br><br>

            <i>
                <table width="100%">
                    <tr>
                        <td style="display:block;"><b>Backdoor URL:</b><br/>(Please note it down) </td>
                        <td>
                            <div style="background-color:#ededed;padding:1%;display:block;"><b>
                                site_url()/wp-login.php?ym_sso=
                                <input style="width:150px" type="text" id="backdoor_url" name="moym_backdoor_url" disabled value="false">
                            </b></div>
                        </td>
                    </tr>
                </table>
				<div style="display:block;text-align:center; margin:2%;">
				<button class="button button-primary button-large" disabled>Update</button>
				</div>
			</i>
			<div style="background-color:#CBCBCB;padding:1%;">
				<span style="color:#FF0000;">WARNING:</span>
                Checking the above option will <b>open a security hole</b>.
                Anybody knowing the above URL will be able to login to your website using WordPress Credentials.
                <b>Please do not share this URL.</b>
			</div>
			<br/><br>
		
            <span style="color:red;">*</span>
            These options are configurable in the <a href="admin_url("admin.php?page=moym_settings&tab=pricing")"><b>Premium and All-Inclusive</b></a> version of the plugin.
            <br/>
        </div'' cannot be parsed correct.
HTML code '$'plugins_url()/login-with-yourmembership/includes/images/angry.png'' cannot be parsed correct.
HTML code '$'plugins_url()/login-with-yourmembership/includes/images/sad.png'' cannot be parsed correct.
HTML code '$'plugins_url()/login-with-yourmembership/includes/images/normal.png'' cannot be parsed correct.
HTML code '$'plugins_url()/login-with-yourmembership/includes/images/smile.png'' cannot be parsed correct.
HTML code '$'plugins_url()/login-with-yourmembership/includes/images/happy.png'' cannot be parsed correct.
HTML code '$'get_option("moym_admin_email")'' cannot be parsed correct.
HTML code '$'plugins_url()/login-with-yourmembership/includes/images/edit.png'' cannot be parsed correct.
HTML code '$'
        <div class="moym_table_layout">
            <input type="hidden" value="moym_is_customer_registered()" id="moym_customer_registered">
	        <form style="display:none;" id="moym_loginform" action="get_option("moym_host_name")/moas/login" target="_blank" method="post">
				<input type="email" name="username" value="get_option("moym_admin_email")" />
				<input type="text" name="redirectUrl" value="get_option("moym_host_name")/moas/initializepayment" />
				<input type="text" name="requestOrigin" id="requestOrigin"  />
			</form>
			<a id="moym_backto_accountsetup" style="display:none;" href="admin_url("admin.php?page=moym_settings&tab=register")">Back</a>
			
			<table class="moym_pricing_table">
                <h2>LICENSING PLANS - <font color="cadetblue">You are currently on the FREE Version of the plugin</font></h2>
                <hr>
                <div style="padding:0px">
                <div class="moym_plan_col">
                    <div class="moym_plan_header">
                        <p class="moym_plan_heading" >Premium</p>
                        <div class="moym_plan_price" >
                            <span class="moym_plan_currency">$</span>
                            <span class="moym_plan_value">449&nbsp;</span></span>
                        </div>
                    </div>
                    <div class="moym_plan_footer" onclick="window.open(\'https://www.miniorange.com/contact\', \'_blank\');">
                        <a href="#" class="moym_plan_select" >Upgrade Now</a>
                    </div>
                    <br>
                    <div class="moym_plan_body" style="text-align: center;">
                        <b style="font-weight: 600; font-size: 18px;">Premium Features</b>
                        <ul class="moym_plan_features">
                            <li>Redirect to YM Login Page for Authentication</li>
                            <li>Unlimited Authentications</li>
                            <li>Widget, Shortcode for SSO</li>
                            <li>SSO Login Link</li>
                            <li>Basic Attribute Mapping</li>
                            <li>Default Role Mapping</li>
                            <li>Auto-Redirect to YourMembership</li>
                            <li>Protect Complete Site</li>
                            <li>&nbsp;</li>
                            <li>&nbsp;</li>
                            <li>&nbsp;</li>
                            <li>&nbsp;</li>
                        </ul>
                        <b>Add-ons</b><br>
                        <ul>
                            <li>Purchase Separately</li>
                            <li><a style="color:blue; font-size:14px;" href="https://www.miniorange.com/contact" target="_blank"><b> Contact us</b></a></li>
                            <li> &nbsp;</li>
                            <li> &nbsp;</li>
                            <li> &nbsp;</li> 
                        </ul>
                        <a><b></b></a>
                        <br><br>
                    </div>
                </div>
                
                <div class="moym_plan_col">
                    <div class="moym_plan_header">
                        <p class="moym_plan_heading" >All-Inclusive</p>
                        <div class="moym_plan_price" >
                            <span class="moym_plan_currency">$</span>
                            <span class="moym_plan_value">649&nbsp;</span></span>
                        </div>
                    </div>
                    <div class="moym_plan_footer" onclick="window.open(\'https://www.miniorange.com/contact\', \'_blank\');">
                        <a href="#" class="moym_plan_select">Upgrade Now</a>
                    </div>
                    <br>
                    <div class="moym_plan_body" style="text-align: center;">
                        <b style="font-weight: 600; font-size: 18px;">All-Inclusive Features</b>
                        <ul class="moym_plan_features">
                            <li>YM Authentication on WP Login Page</li>
                            <li>Unlimited Authentications</li>
                            <li>Widget, Shortcode for SSO</li>
                            <li>SSO Login Link</li>
                            <li>Basic Attribute Mapping</li>
                            <li>Default Role Mapping</li>
                            <li>Auto-Redirect to YourMembership</li>
                            <li>Protect Complete Site</li>
                            <li>Custom Attribute Mapping</li>
                            <li>Advanced Role Mapping</li>
                            <li>Multisite network support</li>
                            <li>One time setup support</li>
                        </ul>
                        <b>Add-ons</b><br>
                        <ul>
                            <li>Page Restriction</li>
                            <li>Attribute-based Restriction/Redirection</li>
                            <li>Media Restriction</li>
                            <li>SSO Login Audit</li>
                            <li>WP User Role Editor</li> 
                        </ul>
                        <a style="color:blue; font-size:14px;" href="https://www.miniorange.com/contact" target="_blank"><b>Contact us</b></a>
                        <br><br>
                    </div>
                </div>
                </div>
			
			</table>
			<div id="disclaimer" style="margin-bottom:15px;">
				<div style="text-align:left; font-size:12px;  padding-right:30px;">
                <br><br>
                *If you have any doubts regarding the licensing plans, you can mail us at <a href="mailto: samlsupport@xecurify.com"> samlsupport@xecurify.com</a> or submit a query using the <b>support form</b> on right.
                <br><br>
                    <h3>Steps to Upgrade to Premium Plugin -</h3>
                    <p>1. Click on Upgrade now button of the required licensing plan. You will be redirected to miniOrange Login Console. Enter your password with which you created an account
                        with us. After that you will be redirected to payment page.</p>
                    <p>2. Enter your card details and complete the payment. On successful payment completion, you will see the link
                        to download the premium plugin.</p>
                    <p>3. To install the premium plugin, first deactivate and delete the free version of the plugin. Enable the "Keep Configuration Intact" checkbox before deactivating and deleting the plugin. By doing so, your saved configurations of the plugin will not get lost.</p>
                    <p>4. From this point on, do not update the premium plugin from the Wordpress store.</p>
        
                    <h3>* Cost applicable for one instance only. Licenses are subscription-based and the Support Plan includes 12 months of maintenance (support and version updates). You can renew maintenance after 12 months at 50% of the current license cost.</h3>
                    <br/>
                    <li class="bottom-heading"> MultiSite Network Support -<br></li>
                    <p style="padding-left:14px"><b>*</b> There is an additional cost for the number of subsites in Multisite Network.</p>
                    <br/>
                    <p>
                        <strong>Note :</strong> miniOrange does not store or transfer any data which is coming from the Identity Provider to the WordPress. All the data remains within your premises / server. We do not provide the developer license for our paid plugins and the source code is protected. It is strictly prohibited to make any changes in the code without having written permission from miniOrange. There are hooks provided in the plugin which can be used by the developers to extend the plugin\'s functionality.
                    </p>
        
                    <h3>10 Days Return Policy -</h3>
                    At miniOrange, we want to ensure you are 100% happy with your purchase. If the premium plugin you purchased is
                    not working as advertised and you\'ve attempted to resolve any issues with our support team, which couldn\'t get
                    resolved. We will refund the whole amount within 10 days of the purchase. Please email us at <b><a href="mailto:info@xecurify.com">info@xecurify.com</a></b>
                    for any queries regarding the return policy.

                </div>
			</div>
		</div>'' cannot be parsed correct.
HTML code '$'
				<input type="hidden" name="option" value="moym_connect_verify_customer" />
				<div class="moym_table_layout">
				    <h3>Login with miniOrange</h3>
					<p><b>It seems you already have an account with miniOrange. Please enter your miniOrange email and password. <a href="https://login.xecurify.com/moas/idp/resetpassword">Click here if you forgot your password?</a></b></p>
					<table class="moym_settings_table">
						<tr>
							<td><b><font color="#FF0000">*</font>Email:</b></td>
							<td><input class="moym_table_textbox" id="email" type="email" name="email"
								required placeholder="person@example.com"
								value="get_option("moym_admin_email")" /></td>
						</tr>
						<td><b><font color="#FF0000">*</font>Password:</b></td>
						<td><input class="moym_table_textbox" required type="password"
							name="password" placeholder="Choose your password" /></td>
						</tr>
						<tr>
							<td>&nbsp;</td>
							<td>
							    <input type="submit" name="submit" class="button button-primary button-large" />
							    <input type="button" value="Register?" id="moym_go_back" class="button button-primary button-large" />
							</td>
						</tr>
					</table>
				</div>
			</form>
			<form name="f" method="post" action="" id="ymgobackform">'' cannot be parsed correct.
HTML code '$'get_option("moym_admin_email")'' cannot be parsed correct.
HTML code '$'get_option("moym_admin_customer_key")'' cannot be parsed correct.
HTML code '$'admin_url("admin.php?page=moym_settings&tab=pricing")'' cannot be parsed correct.
HTML code '$'get_option("moym_admin_email")'' cannot be parsed correct.
HTML code '$'
				<input type="hidden" name="option" value="moym_contact_us_query_option" />
				<table class="moym_settings_table">
					<tr>
						<td><input type="email" class="moym_table_contact" required placeholder="Enter your Email" 
							name="moym_contact_us_email" value="$moym_admin_email"></td>
					</tr>
					<tr>
					    <td>
                        	<input type="tel" id="moym_contact_us_phone"
                                   pattern="[\+]\d{11,14}|[\+]\d{1,4}[\s]\d{9,10}"
                                   class="moym_table_contact"
                                   name="moym_contact_us_phone"
                                   value="get_option("moym_admin_phone")"
                                   placeholder="Enter your phone">
                        </td>
                    </tr>
					<tr>
						<td><textarea class="moym_table_contact" onkeypress="moym_valid_query(this)" 
							onkeyup="moym_valid_query(this)" placeholder="Write your query here" onblur="moym_valid_query(this)" 
							required name="moym_contact_us_query" rows="4" style="resize: vertical;"></textarea></td>
					</tr>
				</table>
				<br>
			<input type="submit" name="submit" value="Submit Query" style="width:110px;" class="button button-primary button-large" />

			</form>
			<p>If you want custom features in the plugin, just drop an email at <a href="mailto:info@xecurify.com">info@xecurify.com</a>.</p>
		</div>
		</div>
		</div>
		</div>
		<script>
			jQuery("#moym_contact_us_phone").intlTelInput();
		</script>'' cannot be parsed correct.
HTML code '$'get_option("moym_message")'' cannot be parsed correct.
HTML code '$'get_option("moym_message")'' cannot be parsed correct.
HTML code '$'$args_before_widget'' cannot be parsed correct.
HTML code '$'$args_before_titleapply_filters("widget_title", $instance["wid_title"])$args_after_title'' cannot be parsed correct.
HTML code '$'$args_after_widget'' cannot be parsed correct.
HTML code '$'
		
		
        <div id="tab">
            <h2 class="nav-tab-wrapper">
                <a class="nav-tab nav-tab-active" href="add_query_arg(["tab" => "config"], $request_URI)">SSO Settings</a>
                <a class="nav-tab nav-tab-active" href="add_query_arg(["tab" => "attr"], $request_URI)">Attribute/Role Mapping</a>
                <a class="nav-tab nav-tab-active" href=" add_query_arg(["tab" => "pricing"], $request_URI)">Licensing Plans</a>
                <a class="nav-tab nav-tab-active" href="add_query_arg(["tab" => "register"], $request_URI)">Account Setup</a>
            </h2>
	    </div>

	    <div id="moym_settings">
		    <div class="moym_container">
			    <div id="moym_msgs"></div>
			    <table style="width:100%;">
				<tr>
			    <td style="vertical-align:top;width:65%;">'' cannot be parsed correct.
HTML code '$'
			<style>
				.test_window{
					color: #3c763d;
					background-color: #dff0d8; 
					padding:2%;
					margin-bottom:20px;
					text-align:center; 
					border:1px solid #AEDB9A; 
					font-size:18pt;
				}
			</style>
			<div class = "test_window">TEST SUCCESSFUL</div>
			<div style="display:block;text-align:center;margin-bottom:4%;"><img style="width:15%;" <img src="plugins_url()/login-with-yourmembership/includes/images/green_check.png"/></div'' cannot be parsed correct.
HTML code '$'<span style="font-size:14pt;"><b>Hello</b>, moym_basic_profile</span>'' cannot be parsed correct.
HTML code '$'<td style=\'font-weight:bold;border:2px solid #949090;padding:2%;\'></td>
<td style=\'padding:2%;border:2px solid #949090; word-wrap:break-word;\'>$value</td>'' cannot be parsed correct.
HTML code '$'
            <script>
                function submitMoYMForm(){ document.getElementById("miniorange-ym-sso-login-form").submit(); }
            </script>
            <form name="miniorange-ym-sso-login-form" id="miniorange-ym-sso-login-form" method="post" action="">'' cannot be parsed correct.
HTML code '$'   
                <input type="hidden" name="option" value="moymsso" />
                <font size="+1" style="vertical-align:top;"> </font>'' cannot be parsed correct.
HTML code '$'<a onClick="submitMoYMForm()">Login with Your Membership </a>'' cannot be parsed correct.
HTML code '$'Please configure the miniOrange YM Plugin first.'' cannot be parsed correct.
HTML code '$'</form>'' cannot be parsed correct.
HTML code '$'disabled'' cannot be parsed correct.
HTML code '$'
                       value="Test configuration" class="button button-primary button-large" style="margin-left: 3%;"/></p></td>
					</tr>
					</table>
		        </form>
               
        </div>



        <div class="moym_table_layout" id="miniorange-use-sso-button">

            <h3><b>Option 1: Use a Single Sign-On button</b>
                    <sup style="font-size: 12px;">[Available in current version of the plugin]</sup>
                </h3>
                <hr>
            <div style="margin:2% 0 2% 17px;">
                <form id="moym_add_sso_button_wp_form" method="post" action="">'' cannot be parsed correct.
HTML code '$'<input type="hidden" name="option" value="moym_add_sso_button"/>
                    <p><label class="switch">
                        <input type="checkbox" name="moym_add_sso_button" value="true"'' cannot be parsed correct.
HTML code '$'disabled'' cannot be parsed correct.
HTML code '$' <!--Verify password with miniOrange-->
			<form name="f" method="post" action="">'' cannot be parsed correct.
HTML code '$'		<input type="hidden" name="option" value="moym_go_back"/>
			</form>
			<form name="forgotpassword" method="post" action="" id="ymforgotpasswordform">'' cannot be parsed correct.
HTML code '$'	<input type="hidden" name="option" value="moym_forgot_password"/>
				<input type="hidden" id="forgot_pass_email" name="email" value=""/>
			</form>
			<script>
				jQuery(\'#moym_go_back\').click(function() {
					jQuery(\'#ymgobackform\').submit();
				});
				jQuery(\'a[href="#forgot_password"]\').click(function(){
					jQuery(\'#forgot_pass_email\').val(jQuery(\'#email\').val());
					jQuery(\'#ymforgotpasswordform\').submit();
				});
			</script>'' cannot be parsed correct.
HTML code '$'</td>
                </tr>
            </table>

            <table>
                <tr>
                    <td>
                        <form name="f1" method="post" action="" id="moym_goto_login_form">
                            '' cannot be parsed correct.
HTML code '$'        <input type="hidden" name="option" value="moym_goto_login"/>
    </form>
    <script>
        var text = "&nbsp;&nbsp;We will call only if you need support."
        jQuery(\'.intl-number-input\').append(text);

        jQuery(\'#moym_goto_login\').click(function () {
            jQuery(\'#moym_goto_login_form\').submit();
        });
    </script>

'' cannot be parsed correct.
HTML code '$'
        <div class="moym_support_layout">
			<h3>Support</h3>
			<p>Need any help? Just send us a query so we can help you.</p>
			<form method="post" action="">'' cannot be parsed correct.
HTML code '$'Unable to connect to the Internet. Please try again.'' cannot be parsed correct.
HTML code '$'<p style="color:red;">(Warning: <a href="http://php.net/manual/en/curl.installation.php" target="_blank">PHP CURL extension</a> is not installed or disabled) Please go to Troubleshooting for steps to enable cURL.</p>'' cannot be parsed correct.
HTML code '$'
        <div style="margin-top: 20px; margin-bottom: 10px; display: flex;">
            <div style="float:left; width:35%; font-size: 22px; padding-top: 10px;"> miniOrange YourMembership Single Sign-On </div>
            <div style="float:left; width:30%;">
                <button class="button button-large button-primary" onclick="window.open(\'https://faq.miniorange.com/\', \'_blank\');">FAQs</a></button>
                &nbsp;&nbsp;&nbsp;<button class="button button-large button-secondary" onclick="window.open(\'https://forum.miniorange.com/\', \'_blank\');">Ask questions on our forum</button>
            </div>
        </div>'' cannot be parsed correct.
HTML code '$'
			<script>
				function loginWithSSOButton(id) {
					if( id === "moym_login_sso_button")
						document.getElementById("moym_user_login_input").value = "moymsso";
					document.getElementById("loginform").submit(); 
				}
			</script>
			<div class = "moym_login_button"><b>OR</b></div>
			<input id="moym_user_login_input" type="hidden" name="option" value="" />
			<div id="moym_button">
				<div id="moym_login_sso_button" onclick="loginWithSSOButton(this.id)" class="button button-primary">Login with YourMembership</div>
			</div>'' cannot be parsed correct.
HTML code '$'<br/><p style="font-weight:bold;font-size:14pt;margin-left:1%;">ATTRIBUTES RECEIVED:</p>
				<table style="border-collapse:collapse;border-spacing:0; display:table;width:100%; font-size:14pt;background-color:#EDEDED;">
				<tr style="text-align:center;"><td style="font-weight:bold;border:2px solid #949090;padding:2%;">ATTRIBUTE NAME</td><td style="font-weight:bold;padding:2%;border:2px solid #949090; word-wrap:break-word;">ATTRIBUTE VALUE</td></tr>'' cannot be parsed correct.
HTML code '$'<tr>'' cannot be parsed correct.
HTML code '$'</tr>'' cannot be parsed correct.
HTML code '$'</table></div>'' cannot be parsed correct.
HTML code '$'<div style="margin:3%;display:block;text-align:center;">
			<input style="padding:1%;width:100px;background: #0091CD none repeat scroll 0% 0%;cursor: pointer;font-size:15px;border-width: 1px;border-style: solid;border-radius: 3px;white-space: nowrap;box-sizing: border-box;border-color: #0073AA;box-shadow: 0px 1px 0px rgba(120, 200, 230, 0.6) inset;color: #FFF;
			"type="button" value="Done" onClick="self.close();"></div>'' cannot be parsed correct.
HTML code '$'      </td>
			    <td style="vertical-align:top;padding-left:1%;">'' cannot be parsed correct.
HTML code '$'      </td>
				</tr>
			    </table>
		    </div>
		</div>'' cannot be parsed correct.
HTML code '$'ERROR: No Authorization Code found'' cannot be parsed correct.
HTML code '$'ERROR: Access Token not found'' cannot be parsed correct.
HTML code '$'ERROR: Session information not found'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:08.586724.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.065692.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 3 do_action/apply_filters calls and 11 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.741978.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FileProDetector
### Start running FrontBaseDetector
### Finish running DbaseDetector
### Start running HashDetector
### Finish running DbplusDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running FirebirdInterBaseDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running IBMDb2Detector
### Start running MsqlDetector
### Finish running MongoDetector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running MongoDbDetector
### Start running OpenSSLDetector
### Finish running Oci8Detector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running ArrayElementDetector
### Start running PhpCurlDetector
### Finish running HashDetector
### Start running PHPDataObjectDetector
### Finish running PhpCurlDetector
### Start running PHPIncludedDetector
### Finish running PasswordHashingDetector
### Start running PHPRetrievalDetector
### Finish running PHPDataObjectDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running OpenSSLDetector
### Start running PhpVarDetector
### Finish running PHPIncludedDetector
### Start running PostgreSQLDetector
### Finish running PHPRetrievalDetector
### Start running PropertyDetector
### Finish running PHPStorageDetector
### Start running Sqlite3Detector
### Finish running PostgreSQLDetector
### Start running SqliteDetector
### Finish running SqliteDetector
### Start running SqlServerDetector
### Finish running PhpVarDetector
### Start running SybaseDetector
### Finish running SybaseDetector
### Start running TokyoTyrantDetector
### Finish running Sqlite3Detector
### Start running UserInputDetector
### Finish running TokyoTyrantDetector
### Start running VariableDetector
### Finish running SqlServerDetector
### Start running WordpressHashingFnDetector
### Finish running PropertyDetector
### Start running WordPressRemoteDetector
### Finish running maxdbDetector
### Start running WordPressRetrievalDetector
### Finish running MySQLiDetector
### Start running WordPressStorageDetector
### Finish running UserInputDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running GenericDatabaseUsageDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running WordpressHashingFnDetector
### Start running UninstallDetector
### Finish running VariableDetector
### Finish running WordPressRemoteDetector
### Finish running WordPressRetrievalDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running WordPressStorageDetector
### Finished running detectors
includes/classes/moym_customer.php:139
  - hash called with approved hash algorithm sha512.
includes/classes/moym_customer.php:176
  - hash called with approved hash algorithm sha512. 

includes/classes/actions/moym_customer.action.php:261
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
includes/classes/moym_customer.php:11
  - object property '$this->email' of personal types {'email'} is found.
  - Data types: email
includes/classes/moym_customer.php:16
  - object property '$this->email' of personal types {'email'} is found.
  - Data types: email
includes/classes/moym_customer.php:183
  - object property '$user->user_firstname' of personal types {'user', 'first_name', 'user_meta'} is found.
  - Data types: user, first_name, user_meta
includes/classes/moym_customer.php:183
  - object property '$user->user_lastname' of personal types {'user', 'last_name', 'user_meta'} is found.
  - Data types: user, last_name, user_meta
includes/classes/moym_customer.php:183
  - object property '$user->user_firstname' of personal types {'user', 'first_name', 'user_meta'} is found.
  - Data types: user, first_name, user_meta
includes/classes/moym_customer.php:183
  - object property '$user->user_lastname' of personal types {'user', 'last_name', 'user_meta'} is found.
  - Data types: user, last_name, user_meta
includes/tmpl/moym_feedback.php:49
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email 

includes/classes/actions/moym_customer.action.php:7
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/classes/actions/moym_customer.action.php:25
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/classes/actions/moym_customer.action.php:29
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/classes/actions/moym_customer.action.php:75
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/classes/actions/moym_customer.action.php:93
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/classes/actions/moym_customer.action.php:97
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/classes/actions/moym_customer.action.php:122
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/classes/actions/moym_customer.action.php:123
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/classes/actions/moym_customer.action.php:129
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/classes/actions/moym_customer.action.php:133
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/classes/actions/moym_customer.action.php:145
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/classes/actions/moym_customer.action.php:149
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/classes/actions/moym_customer.action.php:153
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/classes/actions/moym_customer.action.php:257
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/classes/actions/moym_customer.action.php:258
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/classes/actions/moym_customer.action.php:259
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/classes/actions/moym_customer.action.php:260
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/classes/actions/moym_customer.action.php:261
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/classes/actions/moym_customer.action.php:266
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/classes/moym_customer.php:39
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/classes/moym_customer.php:44
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/classes/moym_customer.php:67
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/classes/moym_customer.php:70
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/classes/moym_customer.php:92
  - variable '$first_name' of personal types {'first_name'} is found.
  - Data types: first_name
includes/classes/moym_customer.php:93
  - variable '$last_name' of personal types {'last_name'} is found.
  - Data types: last_name
includes/classes/moym_customer.php:97
  - variable '$first_name' of personal types {'first_name'} is found.
  - Data types: first_name
includes/classes/moym_customer.php:98
  - variable '$last_name' of personal types {'last_name'} is found.
  - Data types: last_name
includes/classes/moym_customer.php:100
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/classes/moym_customer.php:145
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/classes/moym_customer.php:183
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/classes/moym_customer.php:183
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/classes/moym_login_widget.php:65
  - variable '$link_with_username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
includes/classes/moym_login_widget.php:66
  - variable '$link_with_username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
includes/tmpl/moym_feedback.php:46
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/tmpl/moym_feedback.php:47
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/tmpl/moym_feedback.php:49
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/tmpl/moym_feedback.php:55
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/tmpl/moym_license.tmpl.php:6
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
includes/tmpl/moym_license.tmpl.php:13
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
includes/tmpl/moym_support.tmpl.php:4
  - variable '$moym_admin_email' of personal types {'email'} is found.
  - Data types: email
includes/tmpl/moym_support.tmpl.php:16
  - variable '$moym_admin_email' of personal types {'email'} is found.
  - Data types: email
includes/utils/moym_utility.php:45
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/utils/moym_utility.php:47
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/utils/moym_utility.php:124
  - variable '$relay_state' of personal types {'state'} is found.
  - Data types: state
includes/utils/moym_utility.php:125
  - variable '$relay_state' of personal types {'state'} is found.
  - Data types: state
moym_sso.php:67
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
moym_sso.php:83
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
moym_sso.php:147
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
moym_sso.php:153
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
moym_sso.php:161
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
moym_sso.php:166
  - variable '$email_addr' of personal types {'email'} is found.
  - Data types: email
moym_sso.php:167
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
moym_sso.php:167
  - variable '$email_addr' of personal types {'email'} is found.
  - Data types: email
moym_sso.php:171
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
moym_sso.php:177
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
moym_sso.php:178
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
moym_sso.php:179
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
moym_sso.php:180
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
moym_sso.php:185
  - variable '$random_password' of personal types {'password'} is found.
  - Data types: password
moym_sso.php:189
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
moym_sso.php:189
  - variable '$random_password' of personal types {'password'} is found.
  - Data types: password
moym_sso.php:217
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta 

moym_sso.php:178
  - CRYPTOGRAPHY call to wp_update_user(["ID" => $user_id, "user_email" => $email]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
moym_sso.php:189
  - CRYPTOGRAPHY call to wp_create_user($userName, $random_password, $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $username (string), 1: $password (string), 2: $email (string). Returns (int|WP_Error).
  - Data types: user, user_meta
moym_sso.php:207
  - CRYPTOGRAPHY call to wp_update_user(["ID" => $user_id, "first_name" => $firstName]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
moym_sso.php:209
  - CRYPTOGRAPHY call to wp_update_user(["ID" => $user_id, "last_name" => $lastName]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
moym_sso.php:211
  - CRYPTOGRAPHY call to wp_update_user(["ID" => $user_id, "display_name" => $displayName]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta 

includes/utils/moym_utility.php:82
  - API call to wp_remote_post($url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
includes/utils/moym_utility.php:107
  - API call to wp_remote_post($url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
includes/utils/moym_utility.php:131
  - API call to wp_remote_post($url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
includes/utils/moym_utility.php:133
  - API call to wp_remote_get($url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote 

includes/classes/actions/moym_customer.action.php:122
  - RETRIEVAL call to get_option("moym_admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/classes/actions/moym_customer.action.php:240
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
includes/classes/actions/moym_customer.action.php:259
  - RETRIEVAL call to get_option("moym_admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/classes/actions/moym_customer.action.php:263
  - RETRIEVAL call to get_option("moym_admin_phone") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/classes/moym_customer.php:9
  - RETRIEVAL call to get_option("moym_host_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/classes/moym_customer.php:11
  - RETRIEVAL call to get_option("moym_admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/classes/moym_customer.php:12
  - RETRIEVAL call to get_option("moym_admin_password") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/classes/moym_customer.php:38
  - RETRIEVAL call to get_option("moym_host_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/classes/moym_customer.php:39
  - RETRIEVAL call to get_option("moym_admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/classes/moym_customer.php:41
  - RETRIEVAL call to get_option("moym_admin_password") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/classes/moym_customer.php:66
  - RETRIEVAL call to get_option("moym_host_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/classes/moym_customer.php:67
  - RETRIEVAL call to get_option("moym_admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/classes/moym_customer.php:91
  - RETRIEVAL call to get_option("moym_admin_company_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/classes/moym_customer.php:91
  - RETRIEVAL call to get_option("moym_admin_company_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/classes/moym_customer.php:92
  - RETRIEVAL call to get_option("moym_admin_first_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/classes/moym_customer.php:92
  - RETRIEVAL call to get_option("moym_admin_first_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/classes/moym_customer.php:93
  - RETRIEVAL call to get_option("moym_admin_last_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/classes/moym_customer.php:93
  - RETRIEVAL call to get_option("moym_admin_last_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/classes/moym_customer.php:95
  - RETRIEVAL call to get_option("moym_host_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/classes/moym_customer.php:126
  - RETRIEVAL call to get_option("moym_host_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/classes/moym_customer.php:129
  - RETRIEVAL call to get_option("moym_admin_customer_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/classes/moym_customer.php:132
  - RETRIEVAL call to get_option("moym_admin_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/classes/moym_customer.php:171
  - RETRIEVAL call to get_option("moym_host_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/classes/moym_customer.php:181
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
includes/classes/moym_login_widget.php:57
  - RETRIEVAL call to get_option("moym_app_secret") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/classes/moym_login_widget.php:64
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
includes/tmpl/moym_config.tmpl.php:36
  - RETRIEVAL call to get_option("moym_clientID") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/tmpl/moym_config.tmpl.php:40
  - RETRIEVAL call to get_option("moym_appID") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/tmpl/moym_config.tmpl.php:44
  - RETRIEVAL call to get_option("moym_app_secret") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/tmpl/moym_config.tmpl.php:56
  - RETRIEVAL call to get_option("moym_authURL") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/tmpl/moym_config.tmpl.php:61
  - RETRIEVAL call to get_option("moym_clientID") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/tmpl/moym_config.tmpl.php:61
  - RETRIEVAL call to get_option("moym_appID") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/tmpl/moym_config.tmpl.php:84
  - RETRIEVAL call to get_option("moym_clientID") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/tmpl/moym_config.tmpl.php:84
  - RETRIEVAL call to get_option("moym_appID") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/tmpl/moym_config.tmpl.php:85
  - RETRIEVAL call to get_option("moym_add_sso_button") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/tmpl/moym_feedback.php:46
  - RETRIEVAL call to get_option("moym_admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/tmpl/moym_feedback.php:48
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
includes/tmpl/moym_license.tmpl.php:4
  - RETRIEVAL call to get_option("moym_host_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/tmpl/moym_license.tmpl.php:6
  - RETRIEVAL call to get_option("moym_admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/tmpl/moym_login.tmpl.php:17
  - RETRIEVAL call to get_option("moym_admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/tmpl/moym_login.tmpl.php:61
  - RETRIEVAL call to get_option("moym_admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/tmpl/moym_login.tmpl.php:65
  - RETRIEVAL call to get_option("moym_admin_customer_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/tmpl/moym_reg.tmpl.php:23
  - RETRIEVAL call to get_option("moym_admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/tmpl/moym_support.tmpl.php:4
  - RETRIEVAL call to get_option("moym_admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/tmpl/moym_support.tmpl.php:4
  - RETRIEVAL call to get_option("moym_admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/tmpl/moym_support.tmpl.php:4
  - RETRIEVAL call to get_option("admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/tmpl/moym_support.tmpl.php:24
  - RETRIEVAL call to get_option("moym_admin_phone") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/utils/moym_utility.php:21
  - RETRIEVAL call to get_option("moym_message") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/utils/moym_utility.php:34
  - RETRIEVAL call to get_option("moym_message") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/utils/moym_utility.php:45
  - RETRIEVAL call to get_option("moym_admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/utils/moym_utility.php:46
  - RETRIEVAL call to get_option("moym_admin_customer_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
moym_page.php:59
  - RETRIEVAL call to get_option("moym_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
moym_page.php:61
  - RETRIEVAL call to get_option("moym_admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
moym_page.php:61
  - RETRIEVAL call to get_option("moym_admin_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
moym_page.php:61
  - RETRIEVAL call to get_option("moym_new_registration") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
moym_sso.php:25
  - RETRIEVAL call to get_option("moym_add_sso_button") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
moym_sso.php:65
  - RETRIEVAL call to get_option("moym_basic_profile") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
moym_sso.php:105
  - RETRIEVAL call to get_option("moym_authURL") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
moym_sso.php:106
  - RETRIEVAL call to get_option("moym_appID") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
moym_sso.php:107
  - RETRIEVAL call to get_option("moym_callback") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
moym_sso.php:114
  - RETRIEVAL call to get_option("moym_appID") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
moym_sso.php:115
  - RETRIEVAL call to get_option("moym_app_secret") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
moym_sso.php:116
  - RETRIEVAL call to get_option("moym_clientID") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
moym_sso.php:175
  - RETRIEVAL call to get_user_by("login", $userName) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
moym_sso.php:180
  - RETRIEVAL call to get_user_by("email", $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
moym_sso.php:217
  - RETRIEVAL call to get_user_by("login", $username) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta 

includes/classes/actions/moym_config.action.php:8
  - STORAGE call to update_option("moym_message", "Please enter valid Client ID, App ID and App Secret") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_config.action.php:13
  - STORAGE call to update_option("moym_message", "Please enter a valid Client ID") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_config.action.php:18
  - STORAGE call to update_option("moym_message", "Please enter valid Authorization Endpoint") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_config.action.php:30
  - STORAGE call to update_option("moym_callback", $callbackURL) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_config.action.php:31
  - STORAGE call to update_option("moym_clientID", $clientID) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_config.action.php:32
  - STORAGE call to update_option("moym_appID", $appID) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_config.action.php:33
  - STORAGE call to update_option("moym_app_secret", $app_secret) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_config.action.php:34
  - STORAGE call to update_option("moym_scope", $scope) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_config.action.php:35
  - STORAGE call to update_option("moym_authURL", $authURL) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_config.action.php:37
  - STORAGE call to update_option("moym_message", "App settings saved successfully.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:13
  - STORAGE call to update_option("moym_message", "All the fields are required. Please enter valid entries.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:17
  - STORAGE call to update_option("moym_message", "Choose a password with minimum length 6.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:21
  - STORAGE call to update_option("moym_message", "Please match the format of Email. No special characters are allowed.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:29
  - STORAGE call to update_option("moym_admin_email", $email) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:33
  - STORAGE call to update_option("moym_admin_password", $password) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:44
  - STORAGE call to update_option("moym_message", "Customer registered successfully.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:48
  - STORAGE call to update_option("moym_message", "This is not a valid email. Please enter a valid email.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:53
  - STORAGE call to update_option("moym_message", "This is not a valid email. Please enter a valid email.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:59
  - STORAGE call to update_option("moym_message", "Customer Retrieved Successfully.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:66
  - STORAGE call to update_option("moym_message", "Passwords do not match.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:67
  - STORAGE call to delete_option("moym_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:68
  - STORAGE call to delete_option("moym_admin_customer_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:80
  - STORAGE call to update_option("moym_message", "All the fields are required. Please enter valid entries.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:84
  - STORAGE call to update_option("moym_message", "Please match the format of Email. No special characters are allowed.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:88
  - STORAGE call to update_option("moym_message", "Minimum 6 characters should be present. Maximum 15 characters should be present. Only following symbols (!@#.$%^&*-_) should be present.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:97
  - STORAGE call to update_option("moym_admin_email", $email) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:98
  - STORAGE call to update_option("moym_admin_password", $password) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:105
  - STORAGE call to update_option("moym_admin_customer_key", $customerKey["id"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:106
  - STORAGE call to update_option("moym_admin_api_key", $customerKey["apiKey"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:107
  - STORAGE call to update_option("moym_customer_token", $customerKey["token"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:108
  - STORAGE call to update_option("moym_admin_password", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:109
  - STORAGE call to update_option("moym_message", "Your account has been retrieved successfully.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:110
  - STORAGE call to delete_option("moym_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:113
  - STORAGE call to delete_option("moym_admin_customer_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:114
  - STORAGE call to update_option("moym_message", "Invalid username or password. Please try again.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:118
  - STORAGE call to update_option("moym_admin_password", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:125
  - STORAGE call to update_option("moym_message", "No email provided. Please enter your email below to reset password.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:135
  - STORAGE call to update_option("moym_message", "You password has been reset successfully. Please enter the new password sent to your registered mail here.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:138
  - STORAGE call to update_option("moym_message", "An error occured while processing your request. Please make sure you are registered with miniOrange with the given email address.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:150
  - STORAGE call to update_option("moym_message", "Please fill up Email and Query fields to submit your query.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:155
  - STORAGE call to update_option("moym_message", "Your query could not be submitted. Please try again.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:158
  - STORAGE call to update_option("moym_message", "Thanks for getting in touch! We shall get back to you shortly.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:165
  - STORAGE call to update_option("moym_registration_status", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:166
  - STORAGE call to delete_option("moym_new_registration") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:167
  - STORAGE call to delete_option("moym_admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:168
  - STORAGE call to delete_option("moym_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:172
  - STORAGE call to delete_option("moym_new_registration") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:173
  - STORAGE call to update_option("moym_verify_customer", "true") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:188
  - STORAGE call to update_option("moym_admin_customer_key", $customerKey["id"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:189
  - STORAGE call to update_option("moym_admin_api_key", $customerKey["apiKey"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:190
  - STORAGE call to update_option("moym_customer_token", $customerKey["token"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:191
  - STORAGE call to update_option("moym_admin_password", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:192
  - STORAGE call to update_option("moym_message", "Registration complete!") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:193
  - STORAGE call to update_option("moym_registration_status", "mo_ym_REGISTRATION_COMPLETE") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:194
  - STORAGE call to delete_option("moym_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:195
  - STORAGE call to delete_option("moym_new_registration") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:200
  - STORAGE call to update_option("moym_admin_password", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:211
  - STORAGE call to update_option("moym_admin_customer_key", $customerKey["id"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:212
  - STORAGE call to update_option("moym_admin_api_key", $customerKey["apiKey"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:213
  - STORAGE call to update_option("moym_customer_token", $customerKey["token"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:214
  - STORAGE call to update_option("moym_admin_password", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:215
  - STORAGE call to update_option("moym_message", "Your account has been retrieved successfully.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:216
  - STORAGE call to delete_option("moym_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:217
  - STORAGE call to delete_option("moym_new_registration") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:222
  - STORAGE call to update_option("moym_message", "You already have an account with miniOrange. Please enter a valid password.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:223
  - STORAGE call to update_option("moym_verify_customer", "true") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:224
  - STORAGE call to delete_option("moym_new_registration") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:225
  - STORAGE call to delete_option("moym_admin_customer_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:234
  - STORAGE call to update_option("moym_message", "Plugin deactivated successfully") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:269
  - STORAGE call to update_option("moym_message", $submited["message"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:274
  - STORAGE call to update_option("moym_message", "Error while submitting the query.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:279
  - STORAGE call to update_option("moym_message", "Thank you for the feedback.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:290
  - STORAGE call to update_option("moym_add_sso_button", $add_button) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:291
  - STORAGE call to update_option("moym_message", "Sign in option updated.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/tmpl/moym_reg.tmpl.php:4
  - STORAGE call to update_option("moym_new_registration", "true") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/utils/moym_utility.php:87
  - STORAGE call to update_option("moym_message", "Unable to connect to the Internet. Please try again.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
moym_page.php:64
  - STORAGE call to delete_option("password_mismatch") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
moym_settings.php:39
  - STORAGE call to update_option("moym_host_name", "https://login.xecurify.com") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
moym_settings.php:73
  - STORAGE call to delete_option("moym_host_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
moym_settings.php:74
  - STORAGE call to delete_option("moym_admin_first_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
moym_settings.php:75
  - STORAGE call to delete_option("moym_admin_last_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
moym_settings.php:76
  - STORAGE call to delete_option("moym_admin_phone") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
moym_settings.php:77
  - STORAGE call to delete_option("moym_transactionId") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
moym_settings.php:78
  - STORAGE call to delete_option("moym_registration_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
moym_settings.php:79
  - STORAGE call to delete_option("moym_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
moym_settings.php:80
  - STORAGE call to delete_option("moym_admin_customer_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
moym_settings.php:81
  - STORAGE call to delete_option("moym_admin_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
moym_settings.php:82
  - STORAGE call to delete_option("moym_customer_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
moym_settings.php:83
  - STORAGE call to delete_option("moym_new_registration") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
moym_sso.php:143
  - STORAGE call to update_option("moym_basic_profile", $basicProfile) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
moym_sso.php:178
  - STORAGE call to wp_update_user(["ID" => $user_id, "user_email" => $email]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
moym_sso.php:189
  - STORAGE call to wp_create_user($userName, $random_password, $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $username (string), 1: $password (string), 2: $email (string). Returns (int|WP_Error).
  - Data types: user, user_meta
moym_sso.php:207
  - STORAGE call to wp_update_user(["ID" => $user_id, "first_name" => $firstName]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
moym_sso.php:209
  - STORAGE call to wp_update_user(["ID" => $user_id, "last_name" => $lastName]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
moym_sso.php:211
  - STORAGE call to wp_update_user(["ID" => $user_id, "display_name" => $displayName]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
uninstall.php:7
  - STORAGE call to delete_option("moym_host_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:8
  - STORAGE call to delete_option("moym_enable_redirect_on_login") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:9
  - STORAGE call to delete_option("moym_message") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:10
  - STORAGE call to delete_option("moym_admin_company_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:11
  - STORAGE call to delete_option("moym_admin_first_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:12
  - STORAGE call to delete_option("moym_admin_last_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:13
  - STORAGE call to delete_option("moym_admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:14
  - STORAGE call to delete_option("moym_admin_phone") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:15
  - STORAGE call to delete_option("moym_admin_password") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:16
  - STORAGE call to delete_option("moym_email_otp_count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:17
  - STORAGE call to delete_option("moym_transactionId") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:18
  - STORAGE call to delete_option("moym_registration_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:19
  - STORAGE call to delete_option("moym_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:20
  - STORAGE call to delete_option("moym_admin_customer_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:21
  - STORAGE call to delete_option("moym_admin_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:22
  - STORAGE call to delete_option("moym_customer_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:23
  - STORAGE call to delete_option("moym_cust") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:24
  - STORAGE call to delete_option("moym_new_registration") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

includes/classes/moym_customer.php:139
  - CRYPTOGRAPHY call to hash("sha512", $stringToHash).
includes/classes/moym_customer.php:176
  - CRYPTOGRAPHY call to hash("sha512", $stringToHash). 

includes/classes/actions/moym_customer.action.php:67
  - DELETION call to delete_option("moym_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:68
  - DELETION call to delete_option("moym_admin_customer_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:110
  - DELETION call to delete_option("moym_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:113
  - DELETION call to delete_option("moym_admin_customer_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:166
  - DELETION call to delete_option("moym_new_registration") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:167
  - DELETION call to delete_option("moym_admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:168
  - DELETION call to delete_option("moym_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:172
  - DELETION call to delete_option("moym_new_registration") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:194
  - DELETION call to delete_option("moym_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:195
  - DELETION call to delete_option("moym_new_registration") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:216
  - DELETION call to delete_option("moym_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:217
  - DELETION call to delete_option("moym_new_registration") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:224
  - DELETION call to delete_option("moym_new_registration") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/classes/actions/moym_customer.action.php:225
  - DELETION call to delete_option("moym_admin_customer_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
moym_page.php:64
  - DELETION call to delete_option("password_mismatch") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
moym_settings.php:73
  - DELETION call to delete_option("moym_host_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
moym_settings.php:74
  - DELETION call to delete_option("moym_admin_first_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
moym_settings.php:75
  - DELETION call to delete_option("moym_admin_last_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
moym_settings.php:76
  - DELETION call to delete_option("moym_admin_phone") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
moym_settings.php:77
  - DELETION call to delete_option("moym_transactionId") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
moym_settings.php:78
  - DELETION call to delete_option("moym_registration_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
moym_settings.php:79
  - DELETION call to delete_option("moym_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
moym_settings.php:80
  - DELETION call to delete_option("moym_admin_customer_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
moym_settings.php:81
  - DELETION call to delete_option("moym_admin_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
moym_settings.php:82
  - DELETION call to delete_option("moym_customer_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
moym_settings.php:83
  - DELETION call to delete_option("moym_new_registration") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:7
  - DELETION call to delete_option("moym_host_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:8
  - DELETION call to delete_option("moym_enable_redirect_on_login") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:9
  - DELETION call to delete_option("moym_message") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:10
  - DELETION call to delete_option("moym_admin_company_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:11
  - DELETION call to delete_option("moym_admin_first_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:12
  - DELETION call to delete_option("moym_admin_last_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:13
  - DELETION call to delete_option("moym_admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:14
  - DELETION call to delete_option("moym_admin_phone") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:15
  - DELETION call to delete_option("moym_admin_password") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:16
  - DELETION call to delete_option("moym_email_otp_count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:17
  - DELETION call to delete_option("moym_transactionId") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:18
  - DELETION call to delete_option("moym_registration_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:19
  - DELETION call to delete_option("moym_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:20
  - DELETION call to delete_option("moym_admin_customer_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:21
  - DELETION call to delete_option("moym_admin_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:22
  - DELETION call to delete_option("moym_customer_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:23
  - DELETION call to delete_option("moym_cust") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:24
  - DELETION call to delete_option("moym_new_registration") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

uninstall.php:7
  - Uninstall deletion call: DELETION call to delete_option("moym_host_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:8
  - Uninstall deletion call: DELETION call to delete_option("moym_enable_redirect_on_login") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:9
  - Uninstall deletion call: DELETION call to delete_option("moym_message") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:10
  - Uninstall deletion call: DELETION call to delete_option("moym_admin_company_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:11
  - Uninstall deletion call: DELETION call to delete_option("moym_admin_first_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:12
  - Uninstall deletion call: DELETION call to delete_option("moym_admin_last_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:13
  - Uninstall deletion call: DELETION call to delete_option("moym_admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:14
  - Uninstall deletion call: DELETION call to delete_option("moym_admin_phone") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:15
  - Uninstall deletion call: DELETION call to delete_option("moym_admin_password") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:16
  - Uninstall deletion call: DELETION call to delete_option("moym_email_otp_count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:17
  - Uninstall deletion call: DELETION call to delete_option("moym_transactionId") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:18
  - Uninstall deletion call: DELETION call to delete_option("moym_registration_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:19
  - Uninstall deletion call: DELETION call to delete_option("moym_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:20
  - Uninstall deletion call: DELETION call to delete_option("moym_admin_customer_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:21
  - Uninstall deletion call: DELETION call to delete_option("moym_admin_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:22
  - Uninstall deletion call: DELETION call to delete_option("moym_customer_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:23
  - Uninstall deletion call: DELETION call to delete_option("moym_cust") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:24
  - Uninstall deletion call: DELETION call to delete_option("moym_new_registration") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

By data type:
email
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
first_name
	VariableDetector.(unknown) - {'first_name'}
	PropertyDetector.(unknown) - {'user', 'first_name', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'first_name', 'user_meta'}
	VariableDetector.(unknown) - {'first_name'}
last_name
	PropertyDetector.(unknown) - {'user', 'last_name', 'user_meta'}
	VariableDetector.(unknown) - {'last_name'}
	VariableDetector.(unknown) - {'last_name'}
	PropertyDetector.(unknown) - {'user', 'last_name', 'user_meta'}
none
	HashDetector.(unknown) - set()
	HashDetector.(unknown) - set()
	GenericEncryptionDetector.hash("sha512", $stringToHash) - set()
	GenericEncryptionDetector.hash("sha512", $stringToHash) - set()
option
	WordPressStorageDetector.update_option("moym_message", "Please match the format of Email. No special characters are allowed.") - {'option'}
	WordPressStorageDetector.update_option("moym_host_name", "https://login.xecurify.com") - {'option'}
	WordPressStorageDetector.delete_option("moym_host_name") - {'option'}
	WordPressStorageDetector.update_option("moym_message", "Unable to connect to the Internet. Please try again.") - {'option'}
	WordPressStorageDetector.delete_option("moym_enable_redirect_on_login") - {'option'}
	DeletionDetector.delete_option("moym_admin_last_name") - {'option'}
	WordPressStorageDetector.delete_option("password_mismatch") - {'option'}
	WordPressRetrievalDetector.get_option("moym_admin_last_name") - {'option'}
	WordPressRetrievalDetector.get_option("moym_host_name") - {'option'}
	WordPressRetrievalDetector.get_option("moym_host_name") - {'option'}
	WordPressStorageDetector.delete_option("moym_new_registration") - {'option'}
	UninstallDetector.delete_option("moym_email_otp_count") - {'option'}
	WordPressStorageDetector.delete_option("moym_customer_token") - {'option'}
	DeletionDetector.delete_option("moym_new_registration") - {'option'}
	WordPressRetrievalDetector.get_option("moym_admin_customer_key") - {'option'}
	DeletionDetector.delete_option("moym_enable_redirect_on_login") - {'option'}
	WordPressRetrievalDetector.get_option("moym_admin_api_key") - {'option'}
	WordPressRetrievalDetector.get_option("moym_message") - {'option'}
	WordPressRetrievalDetector.get_option("moym_host_name") - {'option'}
	WordPressRetrievalDetector.get_option("moym_admin_email") - {'option'}
	WordPressStorageDetector.delete_option("moym_admin_phone") - {'option'}
	WordPressStorageDetector.delete_option("moym_verify_customer") - {'option'}
	WordPressRetrievalDetector.get_option("moym_new_registration") - {'option'}
	WordPressRetrievalDetector.get_option("moym_admin_customer_key") - {'option'}
	WordPressRetrievalDetector.get_option("moym_appID") - {'option'}
	WordPressRetrievalDetector.get_option("moym_admin_email") - {'option'}
	UninstallDetector.delete_option("moym_cust") - {'option'}
	UninstallDetector.delete_option("moym_admin_first_name") - {'option'}
	WordPressStorageDetector.delete_option("moym_registration_status") - {'option'}
	WordPressRetrievalDetector.get_option("moym_admin_email") - {'option'}
	WordPressRetrievalDetector.get_option("moym_admin_email") - {'option'}
	WordPressRetrievalDetector.get_option("moym_authURL") - {'option'}
	DeletionDetector.delete_option("moym_admin_company_name") - {'option'}
	WordPressRetrievalDetector.get_option("moym_admin_api_key") - {'option'}
	DeletionDetector.delete_option("moym_admin_customer_key") - {'option'}
	WordPressRetrievalDetector.get_option("admin_email") - {'option'}
	WordPressStorageDetector.delete_option("moym_transactionId") - {'option'}
	UninstallDetector.delete_option("moym_message") - {'option'}
	WordPressRetrievalDetector.get_option("moym_admin_email") - {'option'}
	WordPressRetrievalDetector.get_option("moym_verify_customer") - {'option'}
	WordPressRetrievalDetector.get_option("moym_clientID") - {'option'}
	WordPressRetrievalDetector.get_option("moym_appID") - {'option'}
	DeletionDetector.delete_option("moym_admin_phone") - {'option'}
	WordPressStorageDetector.update_option("moym_message", "Sign in option updated.") - {'option'}
	WordPressRetrievalDetector.get_option("moym_add_sso_button") - {'option'}
	WordPressRetrievalDetector.get_option("moym_admin_email") - {'option'}
	WordPressStorageDetector.delete_option("moym_admin_password") - {'option'}
	UninstallDetector.delete_option("moym_verify_customer") - {'option'}
	WordPressStorageDetector.update_option("moym_admin_email", $email) - {'option'}
	WordPressStorageDetector.delete_option("moym_admin_phone") - {'option'}
	WordPressStorageDetector.update_option("moym_basic_profile", $basicProfile) - {'option'}
	WordPressStorageDetector.update_option("moym_message", "Choose a password with minimum length 6.") - {'option'}
	WordPressStorageDetector.update_option("moym_message", "An error occured while processing your request. Please make sure you are registered with miniOrange with the given email address.") - {'option'}
	WordPressStorageDetector.update_option("moym_admin_customer_key", $customerKey["id"]) - {'option'}
	WordPressStorageDetector.update_option("moym_admin_api_key", $customerKey["apiKey"]) - {'option'}
	WordPressRetrievalDetector.get_option("moym_admin_email") - {'option'}
	UninstallDetector.delete_option("moym_enable_redirect_on_login") - {'option'}
	WordPressStorageDetector.update_option("moym_message", "Please fill up Email and Query fields to submit your query.") - {'option'}
	WordPressStorageDetector.delete_option("moym_new_registration") - {'option'}
	WordPressStorageDetector.delete_option("moym_admin_company_name") - {'option'}
	WordPressStorageDetector.update_option("moym_verify_customer", "true") - {'option'}
	WordPressStorageDetector.delete_option("moym_admin_first_name") - {'option'}
	WordPressStorageDetector.update_option("moym_message", "You password has been reset successfully. Please enter the new password sent to your registered mail here.") - {'option'}
	WordPressStorageDetector.delete_option("moym_admin_email") - {'option'}
	WordPressStorageDetector.delete_option("moym_admin_last_name") - {'option'}
	WordPressStorageDetector.delete_option("moym_verify_customer") - {'option'}
	WordPressStorageDetector.delete_option("moym_new_registration") - {'option'}
	WordPressRetrievalDetector.get_option("moym_appID") - {'option'}
	WordPressRetrievalDetector.get_option("moym_admin_phone") - {'option'}
	WordPressStorageDetector.update_option("moym_message", "Please enter valid Client ID, App ID and App Secret") - {'option'}
	WordPressRetrievalDetector.get_option("moym_admin_email") - {'option'}
	WordPressRetrievalDetector.get_option("moym_admin_customer_key") - {'option'}
	WordPressRetrievalDetector.get_option("moym_add_sso_button") - {'option'}
	WordPressRetrievalDetector.get_option("moym_host_name") - {'option'}
	WordPressRetrievalDetector.get_option("moym_clientID") - {'option'}
	WordPressStorageDetector.update_option("moym_admin_password", $password) - {'option'}
	WordPressStorageDetector.delete_option("moym_host_name") - {'option'}
	WordPressRetrievalDetector.get_option("moym_basic_profile") - {'option'}
	WordPressRetrievalDetector.get_option("moym_app_secret") - {'option'}
	WordPressStorageDetector.update_option("moym_admin_password", $password) - {'option'}
	WordPressRetrievalDetector.get_option("moym_admin_first_name") - {'option'}
	WordPressRetrievalDetector.get_option("moym_admin_email") - {'option'}
	DeletionDetector.delete_option("moym_new_registration") - {'option'}
	WordPressStorageDetector.delete_option("moym_message") - {'option'}
	DeletionDetector.delete_option("moym_host_name") - {'option'}
	WordPressRetrievalDetector.get_option("moym_admin_email") - {'option'}
	WordPressStorageDetector.delete_option("moym_verify_customer") - {'option'}
	DeletionDetector.delete_option("moym_transactionId") - {'option'}
	WordPressRetrievalDetector.get_option("moym_admin_password") - {'option'}
	WordPressRetrievalDetector.get_option("moym_admin_password") - {'option'}
	WordPressRetrievalDetector.get_option("moym_appID") - {'option'}
	WordPressRetrievalDetector.get_option("moym_app_secret") - {'option'}
	WordPressStorageDetector.update_option("moym_message", "Customer registered successfully.") - {'option'}
	DeletionDetector.delete_option("moym_admin_password") - {'option'}
	UninstallDetector.delete_option("moym_admin_customer_key") - {'option'}
	WordPressRetrievalDetector.get_option("moym_app_secret") - {'option'}
	WordPressRetrievalDetector.get_option("moym_authURL") - {'option'}
	WordPressRetrievalDetector.get_option("moym_appID") - {'option'}
	WordPressRetrievalDetector.get_option("moym_clientID") - {'option'}
	UninstallDetector.delete_option("moym_admin_last_name") - {'option'}
	WordPressStorageDetector.update_option("moym_admin_password", "") - {'option'}
	WordPressStorageDetector.update_option("moym_customer_token", $customerKey["token"]) - {'option'}
	WordPressStorageDetector.update_option("moym_callback", $callbackURL) - {'option'}
	WordPressStorageDetector.update_option("moym_clientID", $clientID) - {'option'}
	WordPressRetrievalDetector.get_option("moym_admin_email") - {'option'}
	WordPressStorageDetector.update_option("moym_registration_status", "mo_ym_REGISTRATION_COMPLETE") - {'option'}
	WordPressStorageDetector.update_option("moym_appID", $appID) - {'option'}
	WordPressStorageDetector.update_option("moym_app_secret", $app_secret) - {'option'}
	WordPressRetrievalDetector.get_option("moym_host_name") - {'option'}
	WordPressStorageDetector.update_option("moym_message", "Registration complete!") - {'option'}
	WordPressStorageDetector.update_option("moym_scope", $scope) - {'option'}
	DeletionDetector.delete_option("moym_message") - {'option'}
	WordPressStorageDetector.update_option("moym_authURL", $authURL) - {'option'}
	DeletionDetector.delete_option("moym_email_otp_count") - {'option'}
	WordPressStorageDetector.update_option("moym_admin_customer_key", $customerKey["id"]) - {'option'}
	WordPressStorageDetector.update_option("moym_message", "All the fields are required. Please enter valid entries.") - {'option'}
	WordPressStorageDetector.delete_option("moym_customer_token") - {'option'}
	UninstallDetector.delete_option("moym_admin_api_key") - {'option'}
	WordPressStorageDetector.delete_option("moym_new_registration") - {'option'}
	WordPressStorageDetector.update_option("moym_message", "Please enter a valid Client ID") - {'option'}
	WordPressStorageDetector.update_option("moym_admin_password", "") - {'option'}
	WordPressStorageDetector.delete_option("moym_admin_customer_key") - {'option'}
	WordPressStorageDetector.update_option("moym_message", "Plugin deactivated successfully") - {'option'}
	WordPressRetrievalDetector.get_option("moym_admin_phone") - {'option'}
	WordPressStorageDetector.delete_option("moym_admin_first_name") - {'option'}
	WordPressStorageDetector.delete_option("moym_cust") - {'option'}
	WordPressStorageDetector.update_option("moym_message", "App settings saved successfully.") - {'option'}
	WordPressStorageDetector.update_option("moym_message", $submited["message"]) - {'option'}
	WordPressStorageDetector.delete_option("moym_admin_api_key") - {'option'}
	WordPressRetrievalDetector.get_option("moym_callback") - {'option'}
	WordPressStorageDetector.update_option("moym_message", "Your query could not be submitted. Please try again.") - {'option'}
	WordPressStorageDetector.update_option("moym_message", "Error while submitting the query.") - {'option'}
	WordPressStorageDetector.update_option("moym_message", "Thanks for getting in touch! We shall get back to you shortly.") - {'option'}
	WordPressStorageDetector.update_option("moym_verify_customer", "true") - {'option'}
	DeletionDetector.delete_option("moym_admin_api_key") - {'option'}
	WordPressStorageDetector.delete_option("moym_admin_last_name") - {'option'}
	WordPressStorageDetector.delete_option("moym_admin_customer_key") - {'option'}
	DeletionDetector.delete_option("moym_verify_customer") - {'option'}
	UninstallDetector.delete_option("moym_registration_status") - {'option'}
	WordPressStorageDetector.delete_option("moym_new_registration") - {'option'}
	DeletionDetector.delete_option("moym_customer_token") - {'option'}
	WordPressStorageDetector.delete_option("moym_admin_email") - {'option'}
	WordPressStorageDetector.update_option("moym_message", "Your account has been retrieved successfully.") - {'option'}
	WordPressRetrievalDetector.get_option("moym_admin_company_name") - {'option'}
	WordPressStorageDetector.update_option("moym_registration_status", "") - {'option'}
	UninstallDetector.delete_option("moym_admin_password") - {'option'}
	WordPressStorageDetector.delete_option("moym_verify_customer") - {'option'}
	WordPressRetrievalDetector.get_option("moym_admin_company_name") - {'option'}
	UninstallDetector.delete_option("moym_transactionId") - {'option'}
	WordPressRetrievalDetector.get_option("moym_admin_email") - {'option'}
	WordPressRetrievalDetector.get_option("moym_admin_email") - {'option'}
	WordPressStorageDetector.update_option("moym_message", "This is not a valid email. Please enter a valid email.") - {'option'}
	WordPressRetrievalDetector.get_option("moym_host_name") - {'option'}
	WordPressStorageDetector.update_option("moym_admin_password", "") - {'option'}
	WordPressStorageDetector.update_option("moym_customer_token", $customerKey["token"]) - {'option'}
	WordPressRetrievalDetector.get_option("moym_host_name") - {'option'}
	UninstallDetector.delete_option("moym_admin_phone") - {'option'}
	UninstallDetector.delete_option("moym_customer_token") - {'option'}
	WordPressRetrievalDetector.get_option("moym_admin_last_name") - {'option'}
	WordPressStorageDetector.update_option("moym_admin_api_key", $customerKey["apiKey"]) - {'option'}
	DeletionDetector.delete_option("moym_admin_customer_key") - {'option'}
	UninstallDetector.delete_option("moym_admin_email") - {'option'}
	WordPressStorageDetector.update_option("moym_new_registration", "true") - {'option'}
	WordPressStorageDetector.update_option("moym_message", "No email provided. Please enter your email below to reset password.") - {'option'}
	DeletionDetector.delete_option("moym_admin_email") - {'option'}
	WordPressStorageDetector.delete_option("moym_new_registration") - {'option'}
	WordPressRetrievalDetector.get_option("moym_admin_first_name") - {'option'}
	WordPressStorageDetector.update_option("moym_message", "This is not a valid email. Please enter a valid email.") - {'option'}
	WordPressStorageDetector.update_option("moym_message", "Passwords do not match.") - {'option'}
	WordPressStorageDetector.update_option("moym_message", "Customer Retrieved Successfully.") - {'option'}
	WordPressStorageDetector.delete_option("moym_admin_customer_key") - {'option'}
	WordPressStorageDetector.delete_option("moym_verify_customer") - {'option'}
	WordPressStorageDetector.update_option("moym_message", "Thank you for the feedback.") - {'option'}
	WordPressStorageDetector.delete_option("moym_verify_customer") - {'option'}
	WordPressStorageDetector.update_option("moym_add_sso_button", $add_button) - {'option'}
	WordPressStorageDetector.update_option("moym_admin_customer_key", $customerKey["id"]) - {'option'}
	WordPressStorageDetector.update_option("moym_admin_api_key", $customerKey["apiKey"]) - {'option'}
	WordPressStorageDetector.update_option("moym_customer_token", $customerKey["token"]) - {'option'}
	WordPressStorageDetector.update_option("moym_admin_password", "") - {'option'}
	WordPressStorageDetector.update_option("moym_message", "Your account has been retrieved successfully.") - {'option'}
	WordPressStorageDetector.delete_option("moym_admin_customer_key") - {'option'}
	WordPressStorageDetector.update_option("moym_message", "Invalid username or password. Please try again.") - {'option'}
	WordPressStorageDetector.update_option("moym_admin_password", "") - {'option'}
	DeletionDetector.delete_option("moym_cust") - {'option'}
	DeletionDetector.delete_option("moym_customer_token") - {'option'}
	DeletionDetector.delete_option("moym_verify_customer") - {'option'}
	DeletionDetector.delete_option("moym_admin_customer_key") - {'option'}
	DeletionDetector.delete_option("moym_new_registration") - {'option'}
	DeletionDetector.delete_option("password_mismatch") - {'option'}
	DeletionDetector.delete_option("moym_new_registration") - {'option'}
	DeletionDetector.delete_option("moym_verify_customer") - {'option'}
	DeletionDetector.delete_option("moym_admin_customer_key") - {'option'}
	DeletionDetector.delete_option("moym_new_registration") - {'option'}
	WordPressStorageDetector.delete_option("moym_new_registration") - {'option'}
	WordPressStorageDetector.delete_option("moym_admin_api_key") - {'option'}
	DeletionDetector.delete_option("moym_new_registration") - {'option'}
	DeletionDetector.delete_option("moym_verify_customer") - {'option'}
	WordPressStorageDetector.delete_option("moym_admin_customer_key") - {'option'}
	DeletionDetector.delete_option("moym_admin_first_name") - {'option'}
	UninstallDetector.delete_option("moym_host_name") - {'option'}
	DeletionDetector.delete_option("moym_admin_last_name") - {'option'}
	DeletionDetector.delete_option("moym_verify_customer") - {'option'}
	DeletionDetector.delete_option("moym_admin_phone") - {'option'}
	DeletionDetector.delete_option("moym_transactionId") - {'option'}
	DeletionDetector.delete_option("moym_registration_status") - {'option'}
	UninstallDetector.delete_option("moym_new_registration") - {'option'}
	WordPressRetrievalDetector.get_option("moym_message") - {'option'}
	DeletionDetector.delete_option("moym_verify_customer") - {'option'}
	DeletionDetector.delete_option("moym_admin_customer_key") - {'option'}
	WordPressStorageDetector.delete_option("moym_email_otp_count") - {'option'}
	WordPressStorageDetector.update_option("moym_message", "You already have an account with miniOrange. Please enter a valid password.") - {'option'}
	DeletionDetector.delete_option("moym_admin_email") - {'option'}
	DeletionDetector.delete_option("moym_admin_api_key") - {'option'}
	WordPressStorageDetector.update_option("moym_message", "Please enter valid Authorization Endpoint") - {'option'}
	WordPressStorageDetector.delete_option("moym_verify_customer") - {'option'}
	DeletionDetector.delete_option("moym_host_name") - {'option'}
	UninstallDetector.delete_option("moym_admin_company_name") - {'option'}
	WordPressStorageDetector.delete_option("moym_transactionId") - {'option'}
	WordPressRetrievalDetector.get_option("moym_clientID") - {'option'}
	DeletionDetector.delete_option("moym_new_registration") - {'option'}
	DeletionDetector.delete_option("moym_admin_first_name") - {'option'}
	WordPressStorageDetector.update_option("moym_message", "Please match the format of Email. No special characters are allowed.") - {'option'}
	WordPressStorageDetector.delete_option("moym_registration_status") - {'option'}
	DeletionDetector.delete_option("moym_verify_customer") - {'option'}
	WordPressStorageDetector.update_option("moym_message", "Minimum 6 characters should be present. Maximum 15 characters should be present. Only following symbols (!@#.$%^&*-_) should be present.") - {'option'}
	DeletionDetector.delete_option("moym_registration_status") - {'option'}
	WordPressStorageDetector.update_option("moym_message", "All the fields are required. Please enter valid entries.") - {'option'}
	WordPressRetrievalDetector.get_option("moym_admin_email") - {'option'}
	WordPressStorageDetector.update_option("moym_admin_email", $email) - {'option'}
password
	VariableDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
remote
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
state
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
user
	WordPressStorageDetector.wp_update_user(["ID" => $user_id, "first_name" => $firstName]) - {'user', 'user_meta'}
	WordPressStorageDetector.wp_update_user(["ID" => $user_id, "user_email" => $email]) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $email) - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_update_user(["ID" => $user_id, "first_name" => $firstName]) - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_update_user(["ID" => $user_id, "display_name" => $displayName]) - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_update_user(["ID" => $user_id, "last_name" => $lastName]) - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_create_user($userName, $random_password, $email) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'first_name', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'last_name', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'first_name', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.wp_update_user(["ID" => $user_id, "display_name" => $displayName]) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'last_name', 'user_meta'}
	WordPressStorageDetector.wp_update_user(["ID" => $user_id, "last_name" => $lastName]) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressStorageDetector.wp_create_user($userName, $random_password, $email) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", $username) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", $userName) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_update_user(["ID" => $user_id, "user_email" => $email]) - {'user', 'user_meta'}
user_meta
	WordPressStorageDetector.wp_update_user(["ID" => $user_id, "first_name" => $firstName]) - {'user', 'user_meta'}
	WordPressStorageDetector.wp_update_user(["ID" => $user_id, "user_email" => $email]) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $email) - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_update_user(["ID" => $user_id, "first_name" => $firstName]) - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_update_user(["ID" => $user_id, "display_name" => $displayName]) - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_update_user(["ID" => $user_id, "last_name" => $lastName]) - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_create_user($userName, $random_password, $email) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'first_name', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'last_name', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'first_name', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.wp_update_user(["ID" => $user_id, "display_name" => $displayName]) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'last_name', 'user_meta'}
	WordPressStorageDetector.wp_update_user(["ID" => $user_id, "last_name" => $lastName]) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressStorageDetector.wp_create_user($userName, $random_password, $email) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", $username) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", $userName) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_update_user(["ID" => $user_id, "user_email" => $email]) - {'user', 'user_meta'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:27.597678.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 6407 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:01.305507.

!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 1597
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 3141
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 3573
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 2685
1000 STORE_REACHES edges created
2000 STORE_REACHES edges created
3000 STORE_REACHES edges created
4000 STORE_REACHES edges created
5000 STORE_REACHES edges created
6000 STORE_REACHES edges created
6407 STORE_REACHES edges created
6407 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 663 nodes as PERSONAL
In total, tainted 663 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 625 nodes as ENCRYPTED
In total, tainted 625 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:41.458719.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:01:51.879574!
DELETION call to delete_option("moym_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("moym_admin_customer_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("moym_new_registration") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("moym_admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("moym_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("moym_new_registration") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("moym_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("moym_new_registration") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("moym_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("moym_new_registration") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("moym_new_registration") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("moym_admin_customer_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("moym_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("moym_admin_customer_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("password_mismatch") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("moym_host_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("moym_admin_first_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("moym_admin_last_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("moym_admin_phone") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("moym_transactionId") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("moym_registration_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("moym_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("moym_admin_customer_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("moym_admin_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("moym_customer_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("moym_new_registration") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("moym_admin_company_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("moym_admin_first_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("moym_admin_last_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("moym_admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("moym_admin_phone") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("moym_admin_password") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("moym_email_otp_count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("moym_transactionId") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("moym_registration_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("moym_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("moym_admin_customer_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("moym_admin_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("moym_customer_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("moym_cust") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("moym_new_registration") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("moym_host_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("moym_enable_redirect_on_login") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("moym_message") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
CRYPTOGRAPHY call to hash("sha512", $stringToHash).,None,None
CRYPTOGRAPHY call to hash("sha512", $stringToHash).,None,None
hash called with approved hash algorithm sha512.,sha512,None
hash called with approved hash algorithm sha512.,sha512,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$this->email' of personal types {'email'} is found.,,None
object property '$this->email' of personal types {'email'} is found.,,None
object property '$user->user_firstname' of personal types {'user', 'first_name', 'user_meta'} is found.,,None
object property '$user->user_lastname' of personal types {'user', 'last_name', 'user_meta'} is found.,,None
object property '$user->user_firstname' of personal types {'user', 'first_name', 'user_meta'} is found.,,None
object property '$user->user_lastname' of personal types {'user', 'last_name', 'user_meta'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
Uninstall deletion call: DELETION call to delete_option("moym_admin_company_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("moym_admin_first_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("moym_admin_last_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("moym_admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("moym_admin_phone") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("moym_admin_password") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("moym_email_otp_count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("moym_transactionId") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("moym_registration_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("moym_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("moym_admin_customer_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("moym_admin_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("moym_customer_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("moym_cust") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("moym_new_registration") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("moym_host_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("moym_enable_redirect_on_login") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("moym_message") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$first_name' of personal types {'first_name'} is found.,,None
variable '$last_name' of personal types {'last_name'} is found.,,None
variable '$first_name' of personal types {'first_name'} is found.,,None
variable '$last_name' of personal types {'last_name'} is found.,,None
variable '$link_with_username' of personal types {'user', 'user_meta'} is found.,,None
variable '$link_with_username' of personal types {'user', 'user_meta'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$moym_admin_email' of personal types {'email'} is found.,,None
variable '$moym_admin_email' of personal types {'email'} is found.,,None
variable '$relay_state' of personal types {'state'} is found.,,None
variable '$relay_state' of personal types {'state'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email_addr' of personal types {'email'} is found.,,None
variable '$email_addr' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$random_password' of personal types {'password'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$random_password' of personal types {'password'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
API call to wp_remote_post($url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_post($url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_get($url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_post($url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
RETRIEVAL call to get_option("moym_admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_option("moym_admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_admin_phone") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_admin_password") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_host_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_admin_customer_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_admin_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_host_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_option("moym_host_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_admin_password") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_host_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_host_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_admin_company_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_admin_company_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_admin_first_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_admin_first_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_admin_last_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_admin_last_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_host_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_app_secret") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_option("moym_clientID") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_appID") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_app_secret") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_authURL") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_appID") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_clientID") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_clientID") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_appID") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_add_sso_button") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_option("moym_host_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_admin_customer_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_admin_phone") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_message") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_message") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_admin_customer_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_new_registration") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_admin_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_authURL") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_appID") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_callback") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_appID") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_app_secret") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_clientID") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_by("login", $userName) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_by("email", $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_by("login", $username) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_option("moym_add_sso_button") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("moym_basic_profile") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
STORAGE call to update_option("moym_message", "Please enter a valid Client ID") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_message", "Please enter valid Authorization Endpoint") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_callback", $callbackURL) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_clientID", $clientID) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_appID", $appID) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_app_secret", $app_secret) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_scope", $scope) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_authURL", $authURL) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_message", "App settings saved successfully.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_message", "Please enter valid Client ID, App ID and App Secret") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_admin_customer_key", $customerKey["id"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_admin_api_key", $customerKey["apiKey"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_customer_token", $customerKey["token"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_admin_password", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_message", "Your account has been retrieved successfully.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("moym_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("moym_admin_customer_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("moym_message", "Invalid username or password. Please try again.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_admin_password", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_message", "No email provided. Please enter your email below to reset password.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_message", "All the fields are required. Please enter valid entries.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_message", "You password has been reset successfully. Please enter the new password sent to your registered mail here.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_message", "An error occured while processing your request. Please make sure you are registered with miniOrange with the given email address.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_message", "Please fill up Email and Query fields to submit your query.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_message", "Your query could not be submitted. Please try again.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_message", "Thanks for getting in touch! We shall get back to you shortly.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_registration_status", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("moym_new_registration") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("moym_admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("moym_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("moym_message", "Choose a password with minimum length 6.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("moym_new_registration") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("moym_verify_customer", "true") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_admin_customer_key", $customerKey["id"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_admin_api_key", $customerKey["apiKey"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_customer_token", $customerKey["token"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_admin_password", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_message", "Registration complete!") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_registration_status", "mo_ym_REGISTRATION_COMPLETE") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("moym_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("moym_new_registration") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("moym_admin_password", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_message", "Please match the format of Email. No special characters are allowed.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_admin_customer_key", $customerKey["id"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_admin_api_key", $customerKey["apiKey"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_customer_token", $customerKey["token"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_admin_password", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_message", "Your account has been retrieved successfully.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("moym_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("moym_new_registration") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("moym_message", "You already have an account with miniOrange. Please enter a valid password.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_verify_customer", "true") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("moym_new_registration") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("moym_admin_customer_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("moym_message", "Plugin deactivated successfully") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_message", $submited["message"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_message", "Error while submitting the query.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_message", "Thank you for the feedback.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_admin_email", $email) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_add_sso_button", $add_button) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_message", "Sign in option updated.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_admin_password", $password) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_message", "Customer registered successfully.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_message", "This is not a valid email. Please enter a valid email.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_message", "This is not a valid email. Please enter a valid email.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_message", "Customer Retrieved Successfully.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_message", "Passwords do not match.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("moym_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("moym_admin_customer_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("moym_message", "All the fields are required. Please enter valid entries.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_message", "Please match the format of Email. No special characters are allowed.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_message", "Minimum 6 characters should be present. Maximum 15 characters should be present. Only following symbols (!@#.$%^&*-_) should be present.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_admin_email", $email) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_admin_password", $password) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_new_registration", "true") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("moym_message", "Unable to connect to the Internet. Please try again.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("password_mismatch") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("moym_host_name", "https://login.xecurify.com") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("moym_host_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("moym_admin_first_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("moym_admin_last_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("moym_admin_phone") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("moym_transactionId") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("moym_registration_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("moym_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("moym_admin_customer_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("moym_admin_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("moym_customer_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("moym_new_registration") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("moym_basic_profile", $basicProfile) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to wp_update_user(["ID" => $user_id, "user_email" => $email]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,None,None
STORAGE call to wp_create_user($userName, $random_password, $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $username (string), 1: $password (string), 2: $email (string). Returns (int|WP_Error).,None,None
STORAGE call to wp_update_user(["ID" => $user_id, "first_name" => $firstName]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,None,None
STORAGE call to wp_update_user(["ID" => $user_id, "last_name" => $lastName]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,None,None
STORAGE call to wp_update_user(["ID" => $user_id, "display_name" => $displayName]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,None,None
STORAGE call to delete_option("moym_admin_company_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("moym_admin_first_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("moym_admin_last_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("moym_admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("moym_admin_phone") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("moym_admin_password") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("moym_email_otp_count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("moym_transactionId") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("moym_registration_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("moym_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("moym_admin_customer_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("moym_admin_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("moym_customer_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("moym_cust") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("moym_new_registration") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("moym_host_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("moym_enable_redirect_on_login") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("moym_message") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
CRYPTOGRAPHY call to wp_update_user(["ID" => $user_id, "user_email" => $email]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,hash,None
CRYPTOGRAPHY call to wp_create_user($userName, $random_password, $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $username (string), 1: $password (string), 2: $email (string). Returns (int|WP_Error).,hash,None
CRYPTOGRAPHY call to wp_update_user(["ID" => $user_id, "first_name" => $firstName]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,hash,None
CRYPTOGRAPHY call to wp_update_user(["ID" => $user_id, "last_name" => $lastName]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,hash,None
CRYPTOGRAPHY call to wp_update_user(["ID" => $user_id, "display_name" => $displayName]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,hash,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] WP User info of types (['user', 'email', 'last_name', 'user_meta', 'password', 'first_name']) stored through WordPress function "wp_update_user(["ID" => $user_id, "first_name" => $firstName])", found in file moym_sso.php at line 207. 

[has_storage] WP User info of types (['user', 'email', 'last_name', 'user_meta', 'password', 'first_name']) stored through WordPress function "wp_update_user(["ID" => $user_id, "user_email" => $email])", found in file moym_sso.php at line 178. 

[has_storage] PII of types (['email']) stored through WordPress function "update_option("moym_admin_email", $email)", found in file includes/classes/actions/moym_customer.action.php at line 97. 

[has_storage] PII of types (['user', 'email', 'last_name', 'user_meta', 'password', 'first_name']) stored through WordPress function "update_option("moym_basic_profile", $basicProfile)", found in file moym_sso.php at line 143. 

[has_storage] PII of types (['user', 'email', 'last_name', 'user_meta', 'password', 'first_name']) stored through WordPress function "update_option("moym_admin_customer_key", $customerKey["id"])", found in file includes/classes/actions/moym_customer.action.php at line 188. 

[has_storage] PII of types (['user', 'email', 'last_name', 'user_meta', 'password', 'first_name']) stored through WordPress function "update_option("moym_admin_api_key", $customerKey["apiKey"])", found in file includes/classes/actions/moym_customer.action.php at line 189. 

[has_storage] WP User info of types (['user', 'email', 'last_name', 'user_meta', 'password', 'first_name']) stored through WordPress function "wp_update_user(["ID" => $user_id, "display_name" => $displayName])", found in file moym_sso.php at line 211. 

[has_storage] WP User info of types (['user', 'email', 'last_name', 'user_meta', 'password', 'first_name']) stored through WordPress function "wp_update_user(["ID" => $user_id, "last_name" => $lastName])", found in file moym_sso.php at line 209. 

[has_storage] PII of types (['user', 'email', 'last_name', 'user_meta', 'password', 'first_name']) stored through WordPress function "update_option("moym_customer_token", $customerKey["token"])", found in file includes/classes/actions/moym_customer.action.php at line 190. 

[has_storage] PII of types (['user', 'email', 'last_name', 'user_meta', 'password', 'first_name']) stored through WordPress function "update_option("moym_admin_customer_key", $customerKey["id"])", found in file includes/classes/actions/moym_customer.action.php at line 211. 

[has_storage] WP User info of types (['user', 'email', 'last_name', 'user_meta', 'password', 'first_name']) stored through WordPress function "wp_create_user($userName, $random_password, $email)", found in file moym_sso.php at line 189. 

[has_storage] PII of types (['user', 'email', 'last_name', 'user_meta', 'password', 'first_name']) stored through WordPress function "update_option("moym_message", $submited["message"])", found in file includes/classes/actions/moym_customer.action.php at line 269. 

[has_storage] PII of types (['user', 'email', 'last_name', 'user_meta', 'password', 'first_name']) stored through WordPress function "update_option("moym_customer_token", $customerKey["token"])", found in file includes/classes/actions/moym_customer.action.php at line 213. 

[has_storage] PII of types (['user', 'email', 'last_name', 'user_meta', 'password', 'first_name']) stored through WordPress function "update_option("moym_admin_api_key", $customerKey["apiKey"])", found in file includes/classes/actions/moym_customer.action.php at line 212. 

[has_storage] PII of types (['user', 'email', 'last_name', 'user_meta', 'password', 'first_name']) stored through WordPress function "update_option("moym_admin_customer_key", $customerKey["id"])", found in file includes/classes/actions/moym_customer.action.php at line 105. 

[has_storage] PII of types (['user', 'email', 'last_name', 'user_meta', 'password', 'first_name']) stored through WordPress function "update_option("moym_admin_api_key", $customerKey["apiKey"])", found in file includes/classes/actions/moym_customer.action.php at line 106. 

[has_storage] PII of types (['user', 'email', 'last_name', 'user_meta', 'password', 'first_name']) stored through WordPress function "update_option("moym_customer_token", $customerKey["token"])", found in file includes/classes/actions/moym_customer.action.php at line 107. 

[has_storage] PII of types (['email']) stored through WordPress function "update_option("moym_admin_email", $email)", found in file includes/classes/actions/moym_customer.action.php at line 29. 

[has_storage] Storage check is WP 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 67. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 68. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 110. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 113. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 166. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_admin_email"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 167. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 168. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 172. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 194. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 195. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 216. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 217. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 224. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 225. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("password_mismatch"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file moym_page.php at line 64. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_host_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file moym_settings.php at line 73. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_admin_first_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file moym_settings.php at line 74. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_admin_last_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file moym_settings.php at line 75. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_admin_phone"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file moym_settings.php at line 76. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_transactionId"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file moym_settings.php at line 77. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_registration_status"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file moym_settings.php at line 78. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file moym_settings.php at line 79. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file moym_settings.php at line 80. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_admin_api_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file moym_settings.php at line 81. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_customer_token"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file moym_settings.php at line 82. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file moym_settings.php at line 83. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_host_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file uninstall.php at line 7. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_enable_redirect_on_login"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file uninstall.php at line 8. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_message"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file uninstall.php at line 9. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_admin_company_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file uninstall.php at line 10. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_admin_first_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file uninstall.php at line 11. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_admin_last_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file uninstall.php at line 12. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_admin_email"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file uninstall.php at line 13. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_admin_phone"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file uninstall.php at line 14. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_admin_password"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file uninstall.php at line 15. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_email_otp_count"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file uninstall.php at line 16. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_transactionId"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file uninstall.php at line 17. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_registration_status"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file uninstall.php at line 18. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file uninstall.php at line 19. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file uninstall.php at line 20. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_admin_api_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file uninstall.php at line 21. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_customer_token"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file uninstall.php at line 22. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_cust"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file uninstall.php at line 23. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 97. Deletion method found in file uninstall.php at line 24. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("moym_verify_customer"). Storage method found in file moym_sso.php at line 143. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 67. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file moym_sso.php at line 143. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 68. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("moym_verify_customer"). Storage method found in file moym_sso.php at line 143. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 110. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file moym_sso.php at line 143. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 113. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("moym_new_registration"). Storage method found in file moym_sso.php at line 143. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 166. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("moym_admin_email"). Storage method found in file moym_sso.php at line 143. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 167. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("moym_verify_customer"). Storage method found in file moym_sso.php at line 143. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 168. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("moym_new_registration"). Storage method found in file moym_sso.php at line 143. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 172. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("moym_verify_customer"). Storage method found in file moym_sso.php at line 143. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 194. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("moym_new_registration"). Storage method found in file moym_sso.php at line 143. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 195. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("moym_verify_customer"). Storage method found in file moym_sso.php at line 143. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 216. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("moym_new_registration"). Storage method found in file moym_sso.php at line 143. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 217. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("moym_new_registration"). Storage method found in file moym_sso.php at line 143. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 224. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file moym_sso.php at line 143. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 225. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("password_mismatch"). Storage method found in file moym_sso.php at line 143. Deletion method found in file moym_page.php at line 64. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("moym_host_name"). Storage method found in file moym_sso.php at line 143. Deletion method found in file moym_settings.php at line 73. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("moym_admin_first_name"). Storage method found in file moym_sso.php at line 143. Deletion method found in file moym_settings.php at line 74. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("moym_admin_last_name"). Storage method found in file moym_sso.php at line 143. Deletion method found in file moym_settings.php at line 75. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("moym_admin_phone"). Storage method found in file moym_sso.php at line 143. Deletion method found in file moym_settings.php at line 76. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("moym_transactionId"). Storage method found in file moym_sso.php at line 143. Deletion method found in file moym_settings.php at line 77. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("moym_registration_status"). Storage method found in file moym_sso.php at line 143. Deletion method found in file moym_settings.php at line 78. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("moym_verify_customer"). Storage method found in file moym_sso.php at line 143. Deletion method found in file moym_settings.php at line 79. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file moym_sso.php at line 143. Deletion method found in file moym_settings.php at line 80. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("moym_admin_api_key"). Storage method found in file moym_sso.php at line 143. Deletion method found in file moym_settings.php at line 81. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("moym_customer_token"). Storage method found in file moym_sso.php at line 143. Deletion method found in file moym_settings.php at line 82. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("moym_new_registration"). Storage method found in file moym_sso.php at line 143. Deletion method found in file moym_settings.php at line 83. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("moym_host_name"). Storage method found in file moym_sso.php at line 143. Deletion method found in file uninstall.php at line 7. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("moym_enable_redirect_on_login"). Storage method found in file moym_sso.php at line 143. Deletion method found in file uninstall.php at line 8. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("moym_message"). Storage method found in file moym_sso.php at line 143. Deletion method found in file uninstall.php at line 9. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("moym_admin_company_name"). Storage method found in file moym_sso.php at line 143. Deletion method found in file uninstall.php at line 10. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("moym_admin_first_name"). Storage method found in file moym_sso.php at line 143. Deletion method found in file uninstall.php at line 11. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("moym_admin_last_name"). Storage method found in file moym_sso.php at line 143. Deletion method found in file uninstall.php at line 12. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("moym_admin_email"). Storage method found in file moym_sso.php at line 143. Deletion method found in file uninstall.php at line 13. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("moym_admin_phone"). Storage method found in file moym_sso.php at line 143. Deletion method found in file uninstall.php at line 14. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("moym_admin_password"). Storage method found in file moym_sso.php at line 143. Deletion method found in file uninstall.php at line 15. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("moym_email_otp_count"). Storage method found in file moym_sso.php at line 143. Deletion method found in file uninstall.php at line 16. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("moym_transactionId"). Storage method found in file moym_sso.php at line 143. Deletion method found in file uninstall.php at line 17. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("moym_registration_status"). Storage method found in file moym_sso.php at line 143. Deletion method found in file uninstall.php at line 18. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("moym_verify_customer"). Storage method found in file moym_sso.php at line 143. Deletion method found in file uninstall.php at line 19. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file moym_sso.php at line 143. Deletion method found in file uninstall.php at line 20. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("moym_admin_api_key"). Storage method found in file moym_sso.php at line 143. Deletion method found in file uninstall.php at line 21. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("moym_customer_token"). Storage method found in file moym_sso.php at line 143. Deletion method found in file uninstall.php at line 22. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("moym_cust"). Storage method found in file moym_sso.php at line 143. Deletion method found in file uninstall.php at line 23. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_basic_profile", $basicProfile) has deletion method delete_option("moym_new_registration"). Storage method found in file moym_sso.php at line 143. Deletion method found in file uninstall.php at line 24. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 67. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 68. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 110. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 113. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 166. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_email"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 167. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 168. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 172. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 194. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 195. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 216. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 217. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 224. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 225. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("password_mismatch"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file moym_page.php at line 64. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_host_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file moym_settings.php at line 73. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_first_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file moym_settings.php at line 74. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_last_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file moym_settings.php at line 75. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_phone"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file moym_settings.php at line 76. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_transactionId"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file moym_settings.php at line 77. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_registration_status"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file moym_settings.php at line 78. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file moym_settings.php at line 79. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file moym_settings.php at line 80. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_api_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file moym_settings.php at line 81. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_customer_token"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file moym_settings.php at line 82. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file moym_settings.php at line 83. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_host_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file uninstall.php at line 7. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_enable_redirect_on_login"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file uninstall.php at line 8. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_message"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file uninstall.php at line 9. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_company_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file uninstall.php at line 10. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_first_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file uninstall.php at line 11. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_last_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file uninstall.php at line 12. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_email"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file uninstall.php at line 13. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_phone"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file uninstall.php at line 14. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_password"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file uninstall.php at line 15. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_email_otp_count"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file uninstall.php at line 16. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_transactionId"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file uninstall.php at line 17. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_registration_status"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file uninstall.php at line 18. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file uninstall.php at line 19. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file uninstall.php at line 20. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_api_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file uninstall.php at line 21. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_customer_token"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file uninstall.php at line 22. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_cust"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file uninstall.php at line 23. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 188. Deletion method found in file uninstall.php at line 24. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 67. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 68. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 110. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 113. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 166. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_email"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 167. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 168. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 172. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 194. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 195. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 216. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 217. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 224. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 225. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("password_mismatch"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file moym_page.php at line 64. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_host_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file moym_settings.php at line 73. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_first_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file moym_settings.php at line 74. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_last_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file moym_settings.php at line 75. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_phone"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file moym_settings.php at line 76. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_transactionId"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file moym_settings.php at line 77. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_registration_status"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file moym_settings.php at line 78. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file moym_settings.php at line 79. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file moym_settings.php at line 80. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_api_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file moym_settings.php at line 81. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_customer_token"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file moym_settings.php at line 82. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file moym_settings.php at line 83. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_host_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file uninstall.php at line 7. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_enable_redirect_on_login"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file uninstall.php at line 8. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_message"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file uninstall.php at line 9. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_company_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file uninstall.php at line 10. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_first_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file uninstall.php at line 11. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_last_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file uninstall.php at line 12. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_email"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file uninstall.php at line 13. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_phone"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file uninstall.php at line 14. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_password"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file uninstall.php at line 15. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_email_otp_count"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file uninstall.php at line 16. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_transactionId"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file uninstall.php at line 17. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_registration_status"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file uninstall.php at line 18. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file uninstall.php at line 19. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file uninstall.php at line 20. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_api_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file uninstall.php at line 21. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_customer_token"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file uninstall.php at line 22. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_cust"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file uninstall.php at line 23. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 189. Deletion method found in file uninstall.php at line 24. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 67. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 68. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 110. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 113. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 166. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_email"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 167. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 168. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 172. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 194. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 195. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 216. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 217. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 224. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 225. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("password_mismatch"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file moym_page.php at line 64. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_host_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file moym_settings.php at line 73. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_first_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file moym_settings.php at line 74. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_last_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file moym_settings.php at line 75. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_phone"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file moym_settings.php at line 76. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_transactionId"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file moym_settings.php at line 77. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_registration_status"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file moym_settings.php at line 78. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file moym_settings.php at line 79. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file moym_settings.php at line 80. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_api_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file moym_settings.php at line 81. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_customer_token"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file moym_settings.php at line 82. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file moym_settings.php at line 83. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_host_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file uninstall.php at line 7. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_enable_redirect_on_login"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file uninstall.php at line 8. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_message"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file uninstall.php at line 9. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_company_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file uninstall.php at line 10. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_first_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file uninstall.php at line 11. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_last_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file uninstall.php at line 12. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_email"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file uninstall.php at line 13. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_phone"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file uninstall.php at line 14. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_password"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file uninstall.php at line 15. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_email_otp_count"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file uninstall.php at line 16. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_transactionId"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file uninstall.php at line 17. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_registration_status"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file uninstall.php at line 18. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file uninstall.php at line 19. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file uninstall.php at line 20. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_api_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file uninstall.php at line 21. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_customer_token"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file uninstall.php at line 22. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_cust"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file uninstall.php at line 23. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 190. Deletion method found in file uninstall.php at line 24. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 67. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 68. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 110. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 113. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 166. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_email"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 167. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 168. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 172. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 194. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 195. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 216. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 217. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 224. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 225. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("password_mismatch"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file moym_page.php at line 64. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_host_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file moym_settings.php at line 73. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_first_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file moym_settings.php at line 74. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_last_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file moym_settings.php at line 75. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_phone"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file moym_settings.php at line 76. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_transactionId"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file moym_settings.php at line 77. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_registration_status"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file moym_settings.php at line 78. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file moym_settings.php at line 79. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file moym_settings.php at line 80. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_api_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file moym_settings.php at line 81. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_customer_token"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file moym_settings.php at line 82. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file moym_settings.php at line 83. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_host_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file uninstall.php at line 7. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_enable_redirect_on_login"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file uninstall.php at line 8. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_message"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file uninstall.php at line 9. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_company_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file uninstall.php at line 10. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_first_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file uninstall.php at line 11. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_last_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file uninstall.php at line 12. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_email"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file uninstall.php at line 13. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_phone"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file uninstall.php at line 14. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_password"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file uninstall.php at line 15. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_email_otp_count"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file uninstall.php at line 16. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_transactionId"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file uninstall.php at line 17. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_registration_status"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file uninstall.php at line 18. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file uninstall.php at line 19. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file uninstall.php at line 20. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_api_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file uninstall.php at line 21. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_customer_token"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file uninstall.php at line 22. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_cust"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file uninstall.php at line 23. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 211. Deletion method found in file uninstall.php at line 24. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 67. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 68. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 110. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 113. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 166. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("moym_admin_email"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 167. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 168. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 172. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 194. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 195. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 216. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 217. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 224. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 225. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("password_mismatch"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file moym_page.php at line 64. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("moym_host_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file moym_settings.php at line 73. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("moym_admin_first_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file moym_settings.php at line 74. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("moym_admin_last_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file moym_settings.php at line 75. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("moym_admin_phone"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file moym_settings.php at line 76. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("moym_transactionId"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file moym_settings.php at line 77. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("moym_registration_status"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file moym_settings.php at line 78. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file moym_settings.php at line 79. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file moym_settings.php at line 80. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("moym_admin_api_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file moym_settings.php at line 81. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("moym_customer_token"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file moym_settings.php at line 82. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file moym_settings.php at line 83. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("moym_host_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file uninstall.php at line 7. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("moym_enable_redirect_on_login"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file uninstall.php at line 8. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("moym_message"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file uninstall.php at line 9. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("moym_admin_company_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file uninstall.php at line 10. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("moym_admin_first_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file uninstall.php at line 11. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("moym_admin_last_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file uninstall.php at line 12. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("moym_admin_email"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file uninstall.php at line 13. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("moym_admin_phone"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file uninstall.php at line 14. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("moym_admin_password"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file uninstall.php at line 15. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("moym_email_otp_count"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file uninstall.php at line 16. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("moym_transactionId"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file uninstall.php at line 17. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("moym_registration_status"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file uninstall.php at line 18. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file uninstall.php at line 19. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file uninstall.php at line 20. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("moym_admin_api_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file uninstall.php at line 21. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("moym_customer_token"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file uninstall.php at line 22. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("moym_cust"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file uninstall.php at line 23. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_message", $submited["message"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 269. Deletion method found in file uninstall.php at line 24. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 67. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 68. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 110. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 113. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 166. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_email"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 167. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 168. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 172. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 194. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 195. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 216. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 217. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 224. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 225. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("password_mismatch"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file moym_page.php at line 64. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_host_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file moym_settings.php at line 73. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_first_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file moym_settings.php at line 74. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_last_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file moym_settings.php at line 75. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_phone"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file moym_settings.php at line 76. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_transactionId"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file moym_settings.php at line 77. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_registration_status"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file moym_settings.php at line 78. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file moym_settings.php at line 79. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file moym_settings.php at line 80. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_api_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file moym_settings.php at line 81. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_customer_token"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file moym_settings.php at line 82. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file moym_settings.php at line 83. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_host_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file uninstall.php at line 7. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_enable_redirect_on_login"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file uninstall.php at line 8. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_message"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file uninstall.php at line 9. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_company_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file uninstall.php at line 10. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_first_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file uninstall.php at line 11. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_last_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file uninstall.php at line 12. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_email"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file uninstall.php at line 13. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_phone"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file uninstall.php at line 14. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_password"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file uninstall.php at line 15. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_email_otp_count"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file uninstall.php at line 16. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_transactionId"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file uninstall.php at line 17. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_registration_status"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file uninstall.php at line 18. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file uninstall.php at line 19. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file uninstall.php at line 20. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_api_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file uninstall.php at line 21. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_customer_token"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file uninstall.php at line 22. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_cust"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file uninstall.php at line 23. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 213. Deletion method found in file uninstall.php at line 24. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 67. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 68. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 110. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 113. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 166. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_email"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 167. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 168. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 172. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 194. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 195. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 216. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 217. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 224. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 225. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("password_mismatch"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file moym_page.php at line 64. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_host_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file moym_settings.php at line 73. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_first_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file moym_settings.php at line 74. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_last_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file moym_settings.php at line 75. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_phone"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file moym_settings.php at line 76. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_transactionId"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file moym_settings.php at line 77. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_registration_status"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file moym_settings.php at line 78. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file moym_settings.php at line 79. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file moym_settings.php at line 80. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_api_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file moym_settings.php at line 81. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_customer_token"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file moym_settings.php at line 82. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file moym_settings.php at line 83. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_host_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file uninstall.php at line 7. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_enable_redirect_on_login"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file uninstall.php at line 8. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_message"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file uninstall.php at line 9. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_company_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file uninstall.php at line 10. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_first_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file uninstall.php at line 11. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_last_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file uninstall.php at line 12. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_email"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file uninstall.php at line 13. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_phone"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file uninstall.php at line 14. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_password"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file uninstall.php at line 15. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_email_otp_count"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file uninstall.php at line 16. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_transactionId"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file uninstall.php at line 17. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_registration_status"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file uninstall.php at line 18. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file uninstall.php at line 19. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file uninstall.php at line 20. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_api_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file uninstall.php at line 21. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_customer_token"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file uninstall.php at line 22. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_cust"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file uninstall.php at line 23. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 212. Deletion method found in file uninstall.php at line 24. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 67. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 68. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 110. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 113. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 166. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_email"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 167. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 168. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 172. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 194. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 195. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 216. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 217. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 224. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 225. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("password_mismatch"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file moym_page.php at line 64. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_host_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file moym_settings.php at line 73. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_first_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file moym_settings.php at line 74. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_last_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file moym_settings.php at line 75. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_phone"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file moym_settings.php at line 76. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_transactionId"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file moym_settings.php at line 77. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_registration_status"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file moym_settings.php at line 78. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file moym_settings.php at line 79. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file moym_settings.php at line 80. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_api_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file moym_settings.php at line 81. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_customer_token"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file moym_settings.php at line 82. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file moym_settings.php at line 83. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_host_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file uninstall.php at line 7. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_enable_redirect_on_login"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file uninstall.php at line 8. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_message"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file uninstall.php at line 9. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_company_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file uninstall.php at line 10. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_first_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file uninstall.php at line 11. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_last_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file uninstall.php at line 12. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_email"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file uninstall.php at line 13. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_phone"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file uninstall.php at line 14. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_password"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file uninstall.php at line 15. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_email_otp_count"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file uninstall.php at line 16. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_transactionId"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file uninstall.php at line 17. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_registration_status"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file uninstall.php at line 18. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file uninstall.php at line 19. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file uninstall.php at line 20. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_admin_api_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file uninstall.php at line 21. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_customer_token"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file uninstall.php at line 22. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_cust"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file uninstall.php at line 23. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_customer_key", $customerKey["id"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 105. Deletion method found in file uninstall.php at line 24. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 67. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 68. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 110. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 113. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 166. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_email"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 167. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 168. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 172. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 194. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 195. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 216. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 217. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 224. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 225. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("password_mismatch"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file moym_page.php at line 64. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_host_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file moym_settings.php at line 73. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_first_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file moym_settings.php at line 74. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_last_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file moym_settings.php at line 75. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_phone"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file moym_settings.php at line 76. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_transactionId"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file moym_settings.php at line 77. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_registration_status"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file moym_settings.php at line 78. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file moym_settings.php at line 79. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file moym_settings.php at line 80. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_api_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file moym_settings.php at line 81. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_customer_token"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file moym_settings.php at line 82. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file moym_settings.php at line 83. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_host_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file uninstall.php at line 7. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_enable_redirect_on_login"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file uninstall.php at line 8. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_message"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file uninstall.php at line 9. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_company_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file uninstall.php at line 10. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_first_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file uninstall.php at line 11. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_last_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file uninstall.php at line 12. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_email"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file uninstall.php at line 13. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_phone"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file uninstall.php at line 14. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_password"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file uninstall.php at line 15. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_email_otp_count"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file uninstall.php at line 16. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_transactionId"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file uninstall.php at line 17. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_registration_status"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file uninstall.php at line 18. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file uninstall.php at line 19. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file uninstall.php at line 20. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_admin_api_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file uninstall.php at line 21. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_customer_token"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file uninstall.php at line 22. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_cust"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file uninstall.php at line 23. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_api_key", $customerKey["apiKey"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 106. Deletion method found in file uninstall.php at line 24. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 67. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 68. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 110. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 113. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 166. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_email"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 167. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 168. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 172. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 194. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 195. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 216. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 217. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 224. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 225. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("password_mismatch"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file moym_page.php at line 64. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_host_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file moym_settings.php at line 73. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_first_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file moym_settings.php at line 74. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_last_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file moym_settings.php at line 75. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_phone"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file moym_settings.php at line 76. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_transactionId"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file moym_settings.php at line 77. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_registration_status"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file moym_settings.php at line 78. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file moym_settings.php at line 79. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file moym_settings.php at line 80. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_api_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file moym_settings.php at line 81. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_customer_token"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file moym_settings.php at line 82. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file moym_settings.php at line 83. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_host_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file uninstall.php at line 7. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_enable_redirect_on_login"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file uninstall.php at line 8. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_message"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file uninstall.php at line 9. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_company_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file uninstall.php at line 10. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_first_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file uninstall.php at line 11. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_last_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file uninstall.php at line 12. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_email"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file uninstall.php at line 13. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_phone"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file uninstall.php at line 14. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_password"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file uninstall.php at line 15. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_email_otp_count"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file uninstall.php at line 16. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_transactionId"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file uninstall.php at line 17. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_registration_status"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file uninstall.php at line 18. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file uninstall.php at line 19. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file uninstall.php at line 20. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_admin_api_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file uninstall.php at line 21. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_customer_token"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file uninstall.php at line 22. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_cust"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file uninstall.php at line 23. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_customer_token", $customerKey["token"]) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 107. Deletion method found in file uninstall.php at line 24. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 67. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 68. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 110. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 113. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 166. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_admin_email"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 167. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 168. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 172. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 194. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 195. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 216. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 217. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 224. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file includes/classes/actions/moym_customer.action.php at line 225. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("password_mismatch"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file moym_page.php at line 64. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_host_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file moym_settings.php at line 73. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_admin_first_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file moym_settings.php at line 74. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_admin_last_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file moym_settings.php at line 75. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_admin_phone"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file moym_settings.php at line 76. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_transactionId"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file moym_settings.php at line 77. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_registration_status"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file moym_settings.php at line 78. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file moym_settings.php at line 79. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file moym_settings.php at line 80. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_admin_api_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file moym_settings.php at line 81. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_customer_token"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file moym_settings.php at line 82. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file moym_settings.php at line 83. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_host_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file uninstall.php at line 7. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_enable_redirect_on_login"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file uninstall.php at line 8. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_message"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file uninstall.php at line 9. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_admin_company_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file uninstall.php at line 10. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_admin_first_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file uninstall.php at line 11. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_admin_last_name"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file uninstall.php at line 12. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_admin_email"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file uninstall.php at line 13. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_admin_phone"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file uninstall.php at line 14. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_admin_password"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file uninstall.php at line 15. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_email_otp_count"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file uninstall.php at line 16. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_transactionId"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file uninstall.php at line 17. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_registration_status"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file uninstall.php at line 18. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_verify_customer"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file uninstall.php at line 19. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_admin_customer_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file uninstall.php at line 20. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_admin_api_key"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file uninstall.php at line 21. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_customer_token"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file uninstall.php at line 22. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_cust"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file uninstall.php at line 23. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("moym_admin_email", $email) has deletion method delete_option("moym_new_registration"). Storage method found in file includes/classes/actions/moym_customer.action.php at line 29. Deletion method found in file uninstall.php at line 24. 

[Art.17, Right to erasure] Deletion access is NONE_BUT_NOT_REQUIRED 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 807. Found in file includes/classes/actions/moym_customer.action.php at line 97 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 5923. Found in file moym_sso.php at line 143 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1347. Found in file includes/classes/actions/moym_customer.action.php at line 188 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1356. Found in file includes/classes/actions/moym_customer.action.php at line 189 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1365. Found in file includes/classes/actions/moym_customer.action.php at line 190 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1464. Found in file includes/classes/actions/moym_customer.action.php at line 211 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1812. Found in file includes/classes/actions/moym_customer.action.php at line 269 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1482. Found in file includes/classes/actions/moym_customer.action.php at line 213 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1473. Found in file includes/classes/actions/moym_customer.action.php at line 212 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 869. Found in file includes/classes/actions/moym_customer.action.php at line 105 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 878. Found in file includes/classes/actions/moym_customer.action.php at line 106 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 887. Found in file includes/classes/actions/moym_customer.action.php at line 107 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 442. Found in file includes/classes/actions/moym_customer.action.php at line 29 

[Art.15, Right to access] Data access is NONE_BUT_NOT_REQUIRED 

[third_party] Third party usage is NONE for data types [] 

[encryption] API call that sends PII to unknown url uses unknown protocol. PII is securely encrypted with ['hash', 'generic']. Found in file includes/utils/moym_utility.php at line 133 

[encryption] API call that sends PII to unknown url uses unknown protocol. PII is securely encrypted with ['hash', 'generic']. Found in file includes/utils/moym_utility.php at line 131 

[encryption] API call that sends PII to unknown url uses unknown protocol. PII is securely encrypted with ['hash', 'generic']. Found in file includes/utils/moym_utility.php at line 82 

[main] Applicable GDPR requirements: ['access', 'deletion', 'encryption', 'third_party'] 

[main] Is deletion in violation? False 

[main] Is access in violation? False 

[main] Is third_party in violation? False 

[main] Is encryption in violation? True 

[main] Complaint? False 


###########
### Q&A ###
###########

1. Why is my plugin in violation against GDPR?

GDPR (https://gdpr-info.eu/) aims to give citizens in the European Union (EU) control over their personal data. If a website collects or store user data, it is required to provide users functionalities to control their data, such as ones to erase or export their data. While a plugin do not directly interact with users, it may provide functionalities that collect or store personal data, which would make websites that deploy the plugin in violation against GDPR if the plugin does not provide corresponding functionalities to allow users control their personal data. Therefore, plugin developers are responsible to provide functions to manage the personal data they handle in accordance with GDPR. We list requirements by specific GDPR articles relevant to your plugin below.


[Art. 13, Information to be provided where personal data are collected from the data subject] If a plugin collects or handles personal data, it needs to provide privacy policy texts that explain what personal data is being collected and for what purpose. The texts are meant to be added to the privacy policy of the websites that deploy the plugin. 


            
[Art.17, Right to erasure] If a plugin stores personal data in a custom database they create or manage, or through Wordpress's native storage functions (e.g., update_user_meta), it needs to provide methods for users to erase the data upon request. Note that deleting data for all users upon uninstallation does not satisfy the requirement. 


            
        

2. How do I make my plugin compliant?

Please refer to the fix report below to see how you can make your plugin comply with GDPR.

        

##################
### Fix Report ###
##################

############################
# Data Deletion Fix Report #
############################

This report suggests fixes to comply with the GDPR Art. 17, Right to erasure (https://gdpr-info.eu/art-17-gdpr/). The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/adding-the-personal-data-eraser-to-your-plugin/ for more details.

1) Implement a function that deletes all the user data collected in the plugin. Sample code:


/**
* Removes all collected data of a user.
*
* @param string $email_address   email address to manipulate
* @param int    $page            pagination
*
* @return array
*/
function login-with-yourmembership_remove_data( $email_address, $page = 1 ) {
    
    $page = (int) $page;


    //TODO: Delete the user data that was stored using Wordpress functions

    //Below is the sample code for deleting user meta and may need to be modified to suit the plugin.
    $user_id = get_user_by('email', $email_address)
    $key = 'email' //Sample user meta key
    if ( $customer->user_id > 0 ) {
        //Delete user meta data by $key
        delete_user_meta( $user_id, $key );
    }
        



    // Tell core if we have more data to delete still
    $done = true;
    return array(
        'items_removed'  => $items_removed, // true if collected data of a user is being deleted
        'items_retained' => $items_retained, // true if certain data needs to be retained
        'messages'       => sprintf( __( 'Data of user with email %s successfully deleted.', 'login-with-yourmembership' ), $email_address ), // Put messages for data removal
        'done'           => $done, // true if all the removal processes are done (all data of the user is removed)
    );
}
        

2) Hook the deletion function to the Wordpress's Personal Data Removal tool


/**
* Registers all data erasers.
*
* @param array $exporters
*
* @return mixed
*/
function login-with-yourmembership_register_privacy_erasers( $erasers ) {
    $erasers['my-plugin-slug'] = array(
        'eraser_friendly_name' => __( '<eraser name>', 'login-with-yourmembership' ),
        'callback'             => 'login-with-yourmembership_remove_data',
    );
    return $erasers;
}
        

add_filter( 'wp_privacy_personal_data_erasers', 'login-with-yourmembership_register_privacy_erasers' );
        

        

#############################
# Privacy Policy Fix Report #
#############################

This report suggests fixes to comply with the GDPR Art. 13 (https://gdpr-info.eu/art-13-gdpr/) through including a privacy notice. The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/suggesting-text-for-the-site-privacy-policy/ for more details.

1) Implement a function that includes the privacy policy for the plugin and provide it to wordpress through wp_add_privacy_policy_content(). Sample code:


/**
* Adds a privacy policy statement.
*/
function login-with-yourmembership_add_privacy_policy_content() {
    if ( ! function_exists( 'wp_add_privacy_policy_content' ) ) {
        return;
    }
    //TODO: modify the content below to include the privacy policy for the plugin.
    $content = '<p class="privacy-policy-tutorial">' . __( 'Some introductory content for the suggested text.', 'login-with-yourmembership' ) . '</p>'
            . '<strong class="privacy-policy-tutorial">' . __( 'Suggested Text:', 'login-with-yourmembership' ) . '</strong> '
            . sprintf(
                __( 'When you leave a comment on this site, we send your name, email address, IP address and comment text to example.com. Example.com does not retain your personal data. The example.com privacy policy is <a href="%1$s" target="_blank">here</a>.', 'login-with-yourmembership' ),
                'https://example.com/privacy-policy'
            );
    wp_add_privacy_policy_content( 'login-with-yourmembership', wp_kses_post( wpautop( $content, false ) ) );
}
        

2) Hook the privacy policy function to the Wordpress's admin initialization action.


add_action( 'admin_init', 'login-with-yourmembership_add_privacy_policy_content' );
        

        


Disclaimer: The sample code provided above is only for reference and does not guarantee GDPR compliance. The recommended list of data to delete/export may not be comprehensive. 
        
Done.
