Timeout in resolving values
Timeout in running neo4j query
Running Main.py on duplicate-post

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.850665.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:00.918705.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 295 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:01.185471.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 2 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.551079.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 1633 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:01.300908.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 50 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.961398.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.087970.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 538 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:09.854535.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 11479
Added 8961 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 14923
Added 3444 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.997070.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/admin-functions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/common-functions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/duplicate-post.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/options.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/compat/jetpack-functions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/compat/wpml-functions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/src/duplicate-post.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/src/permissions-helper.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/src/post-duplicator.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/src/post-republisher.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/src/revisions-migrator.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/src/utils.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/src/admin/options-form-generator.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/src/admin/options-inputs.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/src/admin/options-page.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/src/admin/options.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/src/admin/views/options.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/src/handlers/bulk-handler.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/src/handlers/check-changes-handler.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/src/handlers/handler.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/src/handlers/link-handler.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/src/handlers/save-post-handler.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/src/ui/admin-bar.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/src/ui/asset-manager.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/src/ui/block-editor.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/src/ui/bulk-actions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/src/ui/classic-editor.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/src/ui/column.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/src/ui/link-builder.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/src/ui/metabox.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/src/ui/newsletter.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/src/ui/post-states.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/src/ui/row-actions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/src/ui/user-interface.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/src/watchers/bulk-actions-watcher.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/src/watchers/copied-post-watcher.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/src/watchers/link-actions-watcher.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/src/watchers/original-post-watcher.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/src/watchers/republished-post-watcher.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/src/watchers/watchers.php' cannot be parsed correct.
Added new directory node for: vendor
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/vendor/autoload.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/vendor/autoload.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: composer
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/vendor/composer/autoload_classmap.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/vendor/composer/autoload_classmap.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: composer
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/vendor/composer/autoload_namespaces.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/vendor/composer/autoload_namespaces.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: composer
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/vendor/composer/autoload_psr4.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/vendor/composer/autoload_psr4.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: composer
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/vendor/composer/autoload_real.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/vendor/composer/autoload_real.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: composer
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/vendor/composer/autoload_static.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/vendor/composer/autoload_static.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: composer
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/vendor/composer/ClassLoader.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/vendor/composer/ClassLoader.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: composer
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/vendor/composer/installed.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/vendor/composer/installed.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: composer
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/vendor/composer/InstalledVersions.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/vendor/composer/InstalledVersions.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: composer
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/vendor/composer/platform_check.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/duplicate-post/vendor/composer/platform_check.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:04.247437.

39 Nodes Created
295 PHP_REACHES edges created
2 REACHES edges created
1000 PHP_REACHES edges created
1633 PHP_REACHES edges created
50 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
9499 PHP_REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
3444 PHP_REACHES edges created
2 DIRECTORY_OF edges created
1 FILE_OF edges created
3 DIRECTORY_OF edges created
1 FILE_OF edges created
3 DIRECTORY_OF edges created
1 FILE_OF edges created
3 DIRECTORY_OF edges created
1 FILE_OF edges created
3 DIRECTORY_OF edges created
1 FILE_OF edges created
3 DIRECTORY_OF edges created
1 FILE_OF edges created
3 DIRECTORY_OF edges created
1 FILE_OF edges created
3 DIRECTORY_OF edges created
1 FILE_OF edges created
3 DIRECTORY_OF edges created
1 FILE_OF edges created
3 DIRECTORY_OF edges created
1 FILE_OF edges created
14962 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 4135 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.207767.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 20 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:03.114159.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 312 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:12.102496.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 392 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.186379.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.262217.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:04.285313.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.057035.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.029215.

20 CALLS edges created
704 PHP_REACHES edges created
724 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 535 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.153721.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
No SQL nodes to process.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:00.154591.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'<div id="duplicate-post-notice" class="notice is-dismissible" style="display: flex; align-items: flex-start;">
			<img src="plugins_url("/duplicate_post_yoast_icon-125x125.png", )" alt="" style="margin: 1em 1em 1em 0; width: 130px; align-self: center;"/>
			<div stle="margin: 0.5em">
				<h1 style="font-size: 14px; color: #a4286a; font-weight: 600; margin-top: 8px;">sprintf(esc_html__("You\\'ve successfully installed %s!", "duplicate-post"), "Yoast Duplicate Post")</h1></div>
		</div>'' cannot be parsed correct.
HTML code '$'$beforeapply_filters("duplicate_post_clone_post_link", $link, $post->ID)$after'' cannot be parsed correct.
HTML code '$'$this->generate_input("duplicate_post_roles")'' cannot be parsed correct.
HTML code '$'$this->generate_input("duplicate_post_types_enabled")'' cannot be parsed correct.
HTML code '$'$this->generate_tab_inputs("display", "show-links")'' cannot be parsed correct.
HTML code '$'$this->generate_tab_inputs("display", "show-links-in")'' cannot be parsed correct.
HTML code '$'$this->generate_tab_inputs("display", "show-original")'' cannot be parsed correct.
HTML code '$'$this->generate_input("duplicate_post_show_notice")'' cannot be parsed correct.
HTML code '$'$this->generate_tab_inputs("what-to-copy", "elements-to-copy")'' cannot be parsed correct.
HTML code '$'$this->generate_input("duplicate_post_title_prefix")'' cannot be parsed correct.
HTML code '$'$this->generate_input("duplicate_post_title_suffix")'' cannot be parsed correct.
HTML code '$'$this->generate_input("duplicate_post_increase_menu_order_by")'' cannot be parsed correct.
HTML code '$'$this->generate_input("duplicate_post_blacklist")'' cannot be parsed correct.
HTML code '$'$this->generate_input("duplicate_post_taxonomies_blacklist")'' cannot be parsed correct.
HTML code '$'sprintf(esc_html__("Compare changes of duplicated post with the original (&#8220;%s&#8221;)", "duplicate-post"), Utils->get_edit_or_view_link($this->original))'' cannot be parsed correct.
HTML code '$'get_edit_post_link($this->post->ID)'' cannot be parsed correct.
HTML code '$'$name'' cannot be parsed correct.
HTML code '$'wp_text_diff($content_from, $content_to, $args)'' cannot be parsed correct.
HTML code '$'$this->link_builder->build_check_link($post)'' cannot be parsed correct.
HTML code '$'sprintf("<span class="duplicate_post_original_link"%s>%s</span>", $data_attr, $column_content)'' cannot be parsed correct.
HTML code '$'$this->link_builder->build_new_draft_link($post)'' cannot be parsed correct.
HTML code '$'$this->link_builder->build_rewrite_and_republish_link($post)'' cannot be parsed correct.
HTML code '$'<div id="message" class="notice notice-success is-dismissible"><p>$this->get_notice_text()</p></div>'' cannot be parsed correct.
HTML code '$'<script>
			function duplicate_post_dismiss_notice(){
				var data = {
				\'action\': \'duplicate_post_dismiss_notice\',
				};

				jQuery.post(ajaxurl, data, function(response) {
					jQuery(\'#duplicate-post-notice\').hide();
				});
			}

			jQuery(document).ready(function(){
				jQuery(\'body\').on(\'click\', \'.notice-dismiss\', function(){
					duplicate_post_dismiss_notice();
				});
			});
			</script>'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:03.771176.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.049462.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 25 do_action/apply_filters calls and 96 add_action/add_filter calls. Now connecting do-add pairs.
Added 32 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:04.686202.

32 PHP_REACHES edges created
32 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FileProDetector
### Start running FrontBaseDetector
### Finish running DbplusDetector
### Start running HashDetector
### Finish running DbaseDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running FirebirdInterBaseDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running IBMDb2Detector
### Start running MsqlDetector
### Finish running MongoDetector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running MongoDbDetector
### Start running OpenSSLDetector
### Finish running ArrayElementDetector
### Start running ParadoxDetector
### Finish running Oci8Detector
### Start running PasswordHashingDetector
### Finish running ParadoxDetector
### Start running PhpCurlDetector
### Finish running HashDetector
### Start running PHPDataObjectDetector
### Finish running PhpCurlDetector
### Start running PHPIncludedDetector
### Finish running PHPDataObjectDetector
### Start running PHPRetrievalDetector
### Finish running PasswordHashingDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPIncludedDetector
### Start running PhpVarDetector
### Finish running PHPStorageDetector
### Start running PostgreSQLDetector
### Finish running PHPRetrievalDetector
### Start running PropertyDetector
### Finish running OpenSSLDetector
### Start running Sqlite3Detector
### Finish running PostgreSQLDetector
### Start running SqliteDetector
### Finish running Sqlite3Detector
### Start running SqlServerDetector
### Finish running SqliteDetector
### Start running SybaseDetector
### Finish running SybaseDetector
### Start running TokyoTyrantDetector
### Finish running TokyoTyrantDetector
### Start running UserInputDetector
### Finish running PhpVarDetector
### Start running VariableDetector
### Finish running SqlServerDetector
### Start running WordpressHashingFnDetector
### Finish running PropertyDetector
### Start running WordPressRemoteDetector
### Finish running maxdbDetector
### Start running WordPressRetrievalDetector
### Finish running MySQLiDetector
### Start running WordPressStorageDetector
### Finish running WordpressHashingFnDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running UserInputDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running WordPressRemoteDetector
### Start running UninstallDetector
### Finish running VariableDetector
### Finish running GenericDatabaseUsageDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running WordPressStorageDetector
### Finish running WordPressRetrievalDetector
### Finished running detectors
admin-functions.php:541
  - object property '$comment->comment_author_email' of personal types {'email'} is found.
  - Data types: email
admin-functions.php:689
  - object property '$post->post_password' of personal types {'password'} is found.
  - Data types: password
src/post-duplicator.php:87
  - object property '$post->post_password' of personal types {'password'} is found.
  - Data types: password
src/ui/user-interface.php:113
  - object property '$this->post_states' of personal types {'state'} is found.
  - Data types: state
src/ui/user-interface.php:122
  - object property '$this->post_states' of personal types {'state'} is found.
  - Data types: state 

src/ui/newsletter.php:29
  - variable '$email_label' of personal types {'email'} is found.
  - Data types: email
src/ui/newsletter.php:55
  - variable '$email_label' of personal types {'email'} is found.
  - Data types: email
src/ui/newsletter.php:85
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
src/ui/newsletter.php:87
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
src/ui/newsletter.php:90
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
src/ui/newsletter.php:94
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
src/ui/newsletter.php:101
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
src/ui/newsletter.php:118
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
src/ui/post-states.php:49
  - variable '$post_states' of personal types {'state'} is found.
  - Data types: state
src/ui/post-states.php:50
  - variable '$post_states' of personal types {'state'} is found.
  - Data types: state
src/ui/post-states.php:56
  - variable '$post_states' of personal types {'state'} is found.
  - Data types: state
src/ui/post-states.php:61
  - variable '$post_states' of personal types {'state'} is found.
  - Data types: state
src/ui/post-states.php:62
  - variable '$post_states' of personal types {'state'} is found.
  - Data types: state
src/ui/post-states.php:67
  - variable '$post_states' of personal types {'state'} is found.
  - Data types: state
src/ui/post-states.php:70
  - variable '$post_states' of personal types {'state'} is found.
  - Data types: state 

src/ui/newsletter.php:112
  - API call to wp_remote_post("https://my.yoast.com/api/Mailing-list/subscribe", ["method" => "POST", "body" => ["customerDetails" => ["email" => $email, "firstName" => ""], "list" => "Yoast newsletter"]]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote 

admin-functions.php:24
  - RETRIEVAL call to get_option("duplicate_post_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin-functions.php:55
  - RETRIEVAL call to get_option("duplicate_post_copychildren") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin-functions.php:60
  - RETRIEVAL call to get_option("duplicate_post_copyattachments") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin-functions.php:65
  - RETRIEVAL call to get_option("duplicate_post_copycomments") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin-functions.php:145
  - RETRIEVAL call to get_option("duplicate_post_taxonomies_blacklist") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin-functions.php:155
  - RETRIEVAL call to get_option("duplicate_post_blacklist") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin-functions.php:196
  - RETRIEVAL call to get_option($old, $defaults[$new]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin-functions.php:286
  - RETRIEVAL call to get_option("duplicate_post_taxonomies_blacklist") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin-functions.php:290
  - RETRIEVAL call to get_option("duplicate_post_copyformat") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin-functions.php:327
  - RETRIEVAL call to get_option("duplicate_post_blacklist") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin-functions.php:340
  - RETRIEVAL call to get_option("duplicate_post_copytemplate") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin-functions.php:343
  - RETRIEVAL call to get_option("duplicate_post_copythumbnail") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin-functions.php:383
  - RETRIEVAL call to get_post_custom_values($meta_key, $post->ID). Passed arguments: 1: $post_id (int), 0: $key (string). Returns (array|null).
admin-functions.php:437
  - RETRIEVAL call to get_posts(["post_type" => "any", "numberposts" => -1, "post_status" => "any", "post_parent" => $post->ID]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
admin-functions.php:469
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
admin-functions.php:478
  - RETRIEVAL call to get_post_meta($child->ID, "_wp_attachment_image_alt", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin-functions.php:484
  - RETRIEVAL call to get_option("duplicate_post_copythumbnail") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin-functions.php:499
  - RETRIEVAL call to get_posts(["post_type" => "any", "numberposts" => -1, "post_status" => "any", "post_parent" => $post->ID]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
admin-functions.php:552
  - RETRIEVAL call to get_option("duplicate_post_copydate") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin-functions.php:556
  - RETRIEVAL call to wp_insert_comment($commentdata). Passed arguments: 0: $commentdata (array). Returns (int|false).
admin-functions.php:557
  - RETRIEVAL call to get_comment_meta($new_comment_id) alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int). Returns (mixed).
  - Data types: comment_meta
admin-functions.php:613
  - RETRIEVAL call to get_option("duplicate_post_title_prefix") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin-functions.php:614
  - RETRIEVAL call to get_option("duplicate_post_title_suffix") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin-functions.php:615
  - RETRIEVAL call to get_option("duplicate_post_copytitle") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin-functions.php:637
  - RETRIEVAL call to get_option("duplicate_post_copystatus") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin-functions.php:653
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
admin-functions.php:655
  - RETRIEVAL call to get_option("duplicate_post_copyauthor") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin-functions.php:667
  - RETRIEVAL call to get_option("duplicate_post_copymenuorder") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin-functions.php:668
  - RETRIEVAL call to get_option("duplicate_post_increase_menu_order_by") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin-functions.php:674
  - RETRIEVAL call to get_option("duplicate_post_copyslug") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin-functions.php:684
  - RETRIEVAL call to get_option("duplicate_post_copycontent") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin-functions.php:685
  - RETRIEVAL call to get_option("duplicate_post_copycontent") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin-functions.php:686
  - RETRIEVAL call to get_option("duplicate_post_copyexcerpt") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin-functions.php:689
  - RETRIEVAL call to get_option("duplicate_post_copypassword") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin-functions.php:696
  - RETRIEVAL call to get_option("duplicate_post_copydate") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
common-functions.php:20
  - RETRIEVAL call to get_option("duplicate_post_types_enabled", ["post", "page"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
common-functions.php:39
  - RETRIEVAL call to get_post($id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
common-functions.php:68
  - RETRIEVAL call to get_post($id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
compat/wpml-functions.php:54
  - RETRIEVAL call to get_post($details->element_id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
src/admin/options-form-generator.php:153
  - RETRIEVAL call to get_option("duplicate_post_taxonomies_blacklist") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
src/admin/options-form-generator.php:271
  - RETRIEVAL call to get_option($parent_option) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
src/admin/options-form-generator.php:271
  - RETRIEVAL call to get_option($option) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
src/admin/options-form-generator.php:304
  - RETRIEVAL call to get_option("duplicate_post_types_enabled", ["post", "page"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
src/admin/options-page.php:112
  - RETRIEVAL call to $this->options->get_option($option) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
src/admin/options-page.php:170
  - RETRIEVAL call to get_option("duplicate_post_roles") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
src/admin/options.php:193
  - RETRIEVAL call to get_option("duplicate_post_title_prefix") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
src/admin/options.php:200
  - RETRIEVAL call to get_option("duplicate_post_title_suffix") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
src/admin/options.php:207
  - RETRIEVAL call to get_option("duplicate_post_increase_menu_order_by") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
src/admin/options.php:214
  - RETRIEVAL call to get_option("duplicate_post_blacklist") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
src/handlers/bulk-handler.php:94
  - RETRIEVAL call to get_post($post_id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
src/handlers/bulk-handler.php:123
  - RETRIEVAL call to get_post($post_id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
src/handlers/bulk-handler.php:125
  - RETRIEVAL call to get_option("duplicate_post_copychildren") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
src/handlers/check-changes-handler.php:77
  - RETRIEVAL call to get_post($id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
src/handlers/check-changes-handler.php:142
  - RETRIEVAL call to get_post($this->post, ARRAY_A) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 1: $output (string), 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
src/handlers/link-handler.php:70
  - RETRIEVAL call to get_post($id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
src/handlers/link-handler.php:126
  - RETRIEVAL call to get_post($id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
src/handlers/link-handler.php:200
  - RETRIEVAL call to get_post($id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
src/handlers/save-post-handler.php:36
  - RETRIEVAL call to get_option("duplicate_post_show_original_meta_box") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
src/handlers/save-post-handler.php:37
  - RETRIEVAL call to get_option("duplicate_post_show_original_column") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
src/handlers/save-post-handler.php:56
  - RETRIEVAL call to get_post($post_id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
src/permissions-helper.php:20
  - RETRIEVAL call to get_option("duplicate_post_types_enabled", ["post", "page"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
src/permissions-helper.php:67
  - RETRIEVAL call to get_post_meta($post->ID, "_dp_is_rewrite_republish_copy", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
src/permissions-helper.php:78
  - RETRIEVAL call to get_post_meta($post->ID, "_dp_has_rewrite_republish_copy", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
src/permissions-helper.php:95
  - RETRIEVAL call to get_post($copy_id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
src/permissions-helper.php:187
  - RETRIEVAL call to get_post_meta($post->ID, "_dp_creation_date_gmt", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
src/permissions-helper.php:268
  - RETRIEVAL call to get_post_meta($post->ID, "_dp_has_rewrite_republish_copy", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
src/permissions-helper.php:274
  - RETRIEVAL call to get_post($copy_id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
src/post-duplicator.php:295
  - RETRIEVAL call to get_post_custom_values($meta_key, $post->ID). Passed arguments: 1: $post_id (int), 0: $key (string). Returns (array|null).
src/post-duplicator.php:371
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
src/post-republisher.php:108
  - RETRIEVAL call to get_post($postarr["ID"]) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
src/post-republisher.php:220
  - RETRIEVAL call to get_post_meta($copy_id, "_dp_has_been_republished", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
src/post-republisher.php:423
  - RETRIEVAL call to get_post($post_id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
src/revisions-migrator.php:33
  - RETRIEVAL call to get_post($copy_id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
src/revisions-migrator.php:34
  - RETRIEVAL call to get_post($original_id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
src/ui/admin-bar.php:165
  - RETRIEVAL call to get_post() alters data types {'post', 'wp_post', 'post_meta'}. Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
src/ui/block-editor.php:67
  - RETRIEVAL call to get_post() alters data types {'post', 'wp_post', 'post_meta'}. Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
src/ui/block-editor.php:83
  - RETRIEVAL call to get_post() alters data types {'post', 'wp_post', 'post_meta'}. Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
src/ui/block-editor.php:102
  - RETRIEVAL call to get_post() alters data types {'post', 'wp_post', 'post_meta'}. Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
src/ui/block-editor.php:126
  - RETRIEVAL call to get_post() alters data types {'post', 'wp_post', 'post_meta'}. Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
src/ui/block-editor.php:149
  - RETRIEVAL call to get_post() alters data types {'post', 'wp_post', 'post_meta'}. Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
src/ui/block-editor.php:164
  - RETRIEVAL call to get_post() alters data types {'post', 'wp_post', 'post_meta'}. Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
src/ui/block-editor.php:184
  - RETRIEVAL call to get_post() alters data types {'post', 'wp_post', 'post_meta'}. Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
src/ui/block-editor.php:199
  - RETRIEVAL call to get_post() alters data types {'post', 'wp_post', 'post_meta'}. Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
src/ui/block-editor.php:259
  - RETRIEVAL call to get_post($object_id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
src/ui/classic-editor.php:91
  - RETRIEVAL call to get_post($id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
src/ui/classic-editor.php:108
  - RETRIEVAL call to get_post($id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
src/ui/classic-editor.php:127
  - RETRIEVAL call to get_post($id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
src/ui/classic-editor.php:153
  - RETRIEVAL call to get_post($id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
src/ui/classic-editor.php:182
  - RETRIEVAL call to get_post($id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
src/ui/classic-editor.php:208
  - RETRIEVAL call to get_post() alters data types {'post', 'wp_post', 'post_meta'}. Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
src/ui/classic-editor.php:231
  - RETRIEVAL call to get_post() alters data types {'post', 'wp_post', 'post_meta'}. Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
src/ui/classic-editor.php:246
  - RETRIEVAL call to get_post() alters data types {'post', 'wp_post', 'post_meta'}. Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
src/ui/classic-editor.php:252
  - RETRIEVAL call to get_option("date_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
src/ui/classic-editor.php:253
  - RETRIEVAL call to get_option("time_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
src/ui/column.php:45
  - RETRIEVAL call to get_option("duplicate_post_show_original_column") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
src/ui/column.php:87
  - RETRIEVAL call to get_post($post_id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
src/ui/link-builder.php:70
  - RETRIEVAL call to get_post($post) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
src/ui/metabox.php:36
  - RETRIEVAL call to get_option("duplicate_post_show_original_meta_box") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
src/ui/post-states.php:65
  - RETRIEVAL call to get_option("duplicate_post_show_original_in_post_states") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
src/utils.php:64
  - RETRIEVAL call to get_post($post) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
src/utils.php:75
  - RETRIEVAL call to get_post($original_id, $output) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 1: $output (string), 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
src/utils.php:108
  - RETRIEVAL call to get_post($post) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
src/utils.php:161
  - RETRIEVAL call to get_post_meta($post_id, "_dp_original", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
src/utils.php:203
  - RETRIEVAL call to get_option($option) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
src/utils.php:226
  - RETRIEVAL call to get_option("active_plugins", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
src/watchers/copied-post-watcher.php:70
  - RETRIEVAL call to get_option("date_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
src/watchers/copied-post-watcher.php:71
  - RETRIEVAL call to get_option("time_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
src/watchers/copied-post-watcher.php:85
  - RETRIEVAL call to get_post() alters data types {'post', 'wp_post', 'post_meta'}. Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
src/watchers/copied-post-watcher.php:104
  - RETRIEVAL call to get_post() alters data types {'post', 'wp_post', 'post_meta'}. Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
src/watchers/original-post-watcher.php:67
  - RETRIEVAL call to get_post() alters data types {'post', 'wp_post', 'post_meta'}. Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
src/watchers/original-post-watcher.php:86
  - RETRIEVAL call to get_post() alters data types {'post', 'wp_post', 'post_meta'}. Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta 

admin-functions.php:101
  - STORAGE call to add_option("duplicate_post_show_notice", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-functions.php:104
  - STORAGE call to update_option("duplicate_post_show_notice", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-functions.php:114
  - STORAGE call to add_option("duplicate_post_copytitle", "1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-functions.php:115
  - STORAGE call to add_option("duplicate_post_copydate", "0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-functions.php:116
  - STORAGE call to add_option("duplicate_post_copystatus", "0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-functions.php:117
  - STORAGE call to add_option("duplicate_post_copyslug", "0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-functions.php:118
  - STORAGE call to add_option("duplicate_post_copyexcerpt", "1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-functions.php:119
  - STORAGE call to add_option("duplicate_post_copycontent", "1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-functions.php:120
  - STORAGE call to add_option("duplicate_post_copythumbnail", "1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-functions.php:121
  - STORAGE call to add_option("duplicate_post_copytemplate", "1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-functions.php:122
  - STORAGE call to add_option("duplicate_post_copyformat", "1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-functions.php:123
  - STORAGE call to add_option("duplicate_post_copyauthor", "0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-functions.php:124
  - STORAGE call to add_option("duplicate_post_copypassword", "0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-functions.php:125
  - STORAGE call to add_option("duplicate_post_copyattachments", "0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-functions.php:126
  - STORAGE call to add_option("duplicate_post_copychildren", "0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-functions.php:127
  - STORAGE call to add_option("duplicate_post_copycomments", "0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-functions.php:128
  - STORAGE call to add_option("duplicate_post_copymenuorder", "1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-functions.php:129
  - STORAGE call to add_option("duplicate_post_taxonomies_blacklist", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-functions.php:130
  - STORAGE call to add_option("duplicate_post_blacklist", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-functions.php:131
  - STORAGE call to add_option("duplicate_post_types_enabled", ["post", "page"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-functions.php:132
  - STORAGE call to add_option("duplicate_post_show_original_column", "0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-functions.php:133
  - STORAGE call to add_option("duplicate_post_show_original_in_post_states", "0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-functions.php:134
  - STORAGE call to add_option("duplicate_post_show_original_meta_box", "0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-functions.php:135
  - STORAGE call to add_option("duplicate_post_show_link", ["new_draft" => "1", "clone" => "1", "rewrite_republish" => "1"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-functions.php:143
  - STORAGE call to add_option("duplicate_post_show_link_in", $show_links_in_defaults) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-functions.php:150
  - STORAGE call to update_option("duplicate_post_copyformat", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-functions.php:152
  - STORAGE call to update_option("duplicate_post_taxonomies_blacklist", $taxonomies_blacklist) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-functions.php:161
  - STORAGE call to update_option("duplicate_post_copytemplate", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-functions.php:165
  - STORAGE call to update_option("duplicate_post_copythumbnail", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-functions.php:168
  - STORAGE call to update_option("duplicate_post_blacklist", implode(",", $meta_blacklist)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-functions.php:176
  - STORAGE call to update_option("duplicate_post_version", duplicate_post_get_current_version()) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-functions.php:198
  - STORAGE call to delete_option($old) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
admin-functions.php:201
  - STORAGE call to update_option("duplicate_post_show_link_in", $new_options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin-functions.php:386
  - STORAGE call to add_post_meta($new_id, $meta_key, duplicate_post_wp_slash($meta_value)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: post_meta
admin-functions.php:476
  - STORAGE call to wp_update_post(wp_slash($cloned_child)). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
admin-functions.php:480
  - STORAGE call to update_post_meta($new_attachment_id, "_wp_attachment_image_alt", wp_slash($alt_title)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin-functions.php:559
  - STORAGE call to add_comment_meta($new_comment_id, $meta_key, duplicate_post_wp_slash($meta_value)) alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: comment_meta
admin-functions.php:711
  - STORAGE call to wp_insert_post(wp_slash($new_post), true). Passed arguments: 0: $postarr (array), 1: $wp_error (bool). Returns (int|WP_Error).
admin-functions.php:724
  - STORAGE call to delete_post_meta($new_post_id, "_dp_original") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
admin-functions.php:725
  - STORAGE call to add_post_meta($new_post_id, "_dp_original", $post->ID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: post_meta
src/handlers/save-post-handler.php:61
  - STORAGE call to delete_post_meta($post_id, "_dp_original") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
src/post-duplicator.php:113
  - STORAGE call to wp_insert_post(wp_slash($new_post), true). Passed arguments: 0: $postarr (array), 1: $wp_error (bool). Returns (int|WP_Error).
src/post-duplicator.php:120
  - STORAGE call to delete_post_meta($new_post_id, "_dp_original") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
src/post-duplicator.php:121
  - STORAGE call to add_post_meta($new_post_id, "_dp_original", $post->ID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: post_meta
src/post-duplicator.php:171
  - STORAGE call to update_post_meta($new_post_id, "_dp_is_rewrite_republish_copy", 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
src/post-duplicator.php:172
  - STORAGE call to update_post_meta($post->ID, "_dp_has_rewrite_republish_copy", $new_post_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
src/post-duplicator.php:173
  - STORAGE call to update_post_meta($new_post_id, "_dp_creation_date_gmt", current_time("mysql", 1)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
src/post-duplicator.php:298
  - STORAGE call to delete_post_meta($new_id, $meta_key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
src/post-duplicator.php:302
  - STORAGE call to add_post_meta($new_id, $meta_key, Utils->recursively_slash_strings($meta_value)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: post_meta
src/post-republisher.php:271
  - STORAGE call to update_post_meta($post->ID, "_dp_has_been_republished", "1") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
src/post-republisher.php:296
  - STORAGE call to wp_delete_post($copy_id, $permanently_delete) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post, wp_post, post_meta
src/post-republisher.php:300
  - STORAGE call to delete_post_meta($post_id, "_dp_has_rewrite_republish_copy") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
src/post-republisher.php:329
  - STORAGE call to wp_update_post($post_to_be_rewritten). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
src/post-republisher.php:430
  - STORAGE call to delete_post_meta($original_post_id, "_dp_has_rewrite_republish_copy") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
src/revisions-migrator.php:44
  - STORAGE call to wp_update_post($revision). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
src/revisions-migrator.php:64
  - STORAGE call to wp_delete_post_revision($revisions[$i]->ID) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $revision_id (int|WP_Post). Returns (array|false|WP_Post|WP_Error|null).
  - Data types: post, wp_post, post_meta 

admin-functions.php:198
  - DELETION call to delete_option($old) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
admin-functions.php:724
  - DELETION call to delete_post_meta($new_post_id, "_dp_original") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
src/handlers/save-post-handler.php:61
  - DELETION call to delete_post_meta($post_id, "_dp_original") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
src/post-duplicator.php:120
  - DELETION call to delete_post_meta($new_post_id, "_dp_original") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
src/post-duplicator.php:298
  - DELETION call to delete_post_meta($new_id, $meta_key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
src/post-republisher.php:296
  - DELETION call to wp_delete_post($copy_id, $permanently_delete) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post, wp_post, post_meta
src/post-republisher.php:300
  - DELETION call to delete_post_meta($post_id, "_dp_has_rewrite_republish_copy") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
src/post-republisher.php:430
  - DELETION call to delete_post_meta($original_post_id, "_dp_has_rewrite_republish_copy") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta 

By data type:
comment_meta
	WordPressRetrievalDetector.get_comment_meta($new_comment_id) - {'comment_meta'}
	WordPressStorageDetector.add_comment_meta($new_comment_id, $meta_key, duplicate_post_wp_slash($meta_value)) - {'comment_meta'}
email
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
none
	WordPressRetrievalDetector.get_post_custom_values($meta_key, $post->ID) - set()
	WordPressRetrievalDetector.wp_insert_comment($commentdata) - set()
	WordPressRetrievalDetector.get_posts(["post_type" => "any", "numberposts" => -1, "post_status" => "any", "post_parent" => $post->ID]) - set()
	WordPressStorageDetector.wp_insert_post(wp_slash($new_post), true) - set()
	WordPressStorageDetector.wp_insert_post(wp_slash($new_post), true) - set()
	WordPressRetrievalDetector.get_posts(["post_type" => "any", "numberposts" => -1, "post_status" => "any", "post_parent" => $post->ID]) - set()
	WordPressStorageDetector.wp_update_post($revision) - set()
	WordPressStorageDetector.wp_update_post(wp_slash($cloned_child)) - set()
	WordPressRetrievalDetector.get_post_custom_values($meta_key, $post->ID) - set()
	WordPressStorageDetector.wp_update_post($post_to_be_rewritten) - set()
option
	WordPressRetrievalDetector.get_option("time_format") - {'option'}
	WordPressRetrievalDetector.get_option("duplicate_post_copydate") - {'option'}
	WordPressRetrievalDetector.get_option("duplicate_post_taxonomies_blacklist") - {'option'}
	WordPressRetrievalDetector.get_option("duplicate_post_types_enabled", ["post", "page"]) - {'option'}
	WordPressStorageDetector.add_option("duplicate_post_show_notice", 1) - {'option'}
	WordPressStorageDetector.update_option("duplicate_post_blacklist", implode(",", $meta_blacklist)) - {'option'}
	WordPressRetrievalDetector.get_option("duplicate_post_taxonomies_blacklist") - {'option'}
	WordPressRetrievalDetector.get_option("duplicate_post_types_enabled", ["post", "page"]) - {'option'}
	WordPressRetrievalDetector.get_option("duplicate_post_copydate") - {'option'}
	WordPressRetrievalDetector.get_option("duplicate_post_taxonomies_blacklist") - {'option'}
	WordPressStorageDetector.add_option("duplicate_post_copytitle", "1") - {'option'}
	WordPressStorageDetector.add_option("duplicate_post_types_enabled", ["post", "page"]) - {'option'}
	WordPressRetrievalDetector.get_option("duplicate_post_title_suffix") - {'option'}
	WordPressRetrievalDetector.get_option("duplicate_post_copypassword") - {'option'}
	WordPressRetrievalDetector.get_option("duplicate_post_roles") - {'option'}
	WordPressRetrievalDetector.get_option("duplicate_post_title_prefix") - {'option'}
	WordPressRetrievalDetector.get_option("duplicate_post_increase_menu_order_by") - {'option'}
	WordPressRetrievalDetector.get_option("duplicate_post_title_suffix") - {'option'}
	WordPressRetrievalDetector.get_option($old, $defaults[$new]) - {'option'}
	WordPressRetrievalDetector.get_option("duplicate_post_copythumbnail") - {'option'}
	WordPressRetrievalDetector.get_option("duplicate_post_blacklist") - {'option'}
	WordPressRetrievalDetector.get_option($option) - {'option'}
	WordPressRetrievalDetector.get_option("duplicate_post_copycomments") - {'option'}
	WordPressRetrievalDetector.get_option("duplicate_post_show_original_column") - {'option'}
	WordPressStorageDetector.add_option("duplicate_post_copytemplate", "1") - {'option'}
	WordPressRetrievalDetector.get_option("duplicate_post_blacklist") - {'option'}
	WordPressStorageDetector.add_option("duplicate_post_copydate", "0") - {'option'}
	WordPressRetrievalDetector.get_option("date_format") - {'option'}
	WordPressStorageDetector.update_option("duplicate_post_taxonomies_blacklist", $taxonomies_blacklist) - {'option'}
	WordPressStorageDetector.add_option("duplicate_post_copystatus", "0") - {'option'}
	WordPressRetrievalDetector.get_option("duplicate_post_copyattachments") - {'option'}
	WordPressRetrievalDetector.get_option("duplicate_post_blacklist") - {'option'}
	WordPressRetrievalDetector.get_option("duplicate_post_copyformat") - {'option'}
	WordPressRetrievalDetector.get_option("duplicate_post_copytemplate") - {'option'}
	WordPressRetrievalDetector.get_option("duplicate_post_copytitle") - {'option'}
	WordPressStorageDetector.update_option("duplicate_post_show_notice", 0) - {'option'}
	WordPressRetrievalDetector.get_option("duplicate_post_title_prefix") - {'option'}
	WordPressRetrievalDetector.get_option("duplicate_post_copycontent") - {'option'}
	WordPressStorageDetector.update_option("duplicate_post_show_link_in", $new_options) - {'option'}
	WordPressStorageDetector.add_option("duplicate_post_copyauthor", "0") - {'option'}
	WordPressStorageDetector.delete_option($old) - {'option'}
	WordPressStorageDetector.add_option("duplicate_post_show_original_column", "0") - {'option'}
	WordPressRetrievalDetector.get_option("duplicate_post_show_original_meta_box") - {'option'}
	WordPressRetrievalDetector.get_option("duplicate_post_copychildren") - {'option'}
	WordPressRetrievalDetector.get_option("duplicate_post_show_original_column") - {'option'}
	WordPressStorageDetector.update_option("duplicate_post_version", duplicate_post_get_current_version()) - {'option'}
	WordPressStorageDetector.add_option("duplicate_post_show_link", ["new_draft" => "1", "clone" => "1", "rewrite_republish" => "1"]) - {'option'}
	WordPressRetrievalDetector.get_option("duplicate_post_types_enabled", ["post", "page"]) - {'option'}
	WordPressRetrievalDetector.get_option($option) - {'option'}
	WordPressRetrievalDetector.get_option("duplicate_post_copycontent") - {'option'}
	WordPressStorageDetector.add_option("duplicate_post_copypassword", "0") - {'option'}
	WordPressStorageDetector.add_option("duplicate_post_copycontent", "1") - {'option'}
	WordPressStorageDetector.add_option("duplicate_post_copycomments", "0") - {'option'}
	WordPressRetrievalDetector.get_option("duplicate_post_increase_menu_order_by") - {'option'}
	WordPressRetrievalDetector.get_option("duplicate_post_show_original_in_post_states") - {'option'}
	WordPressRetrievalDetector.get_option("duplicate_post_show_original_meta_box") - {'option'}
	WordPressRetrievalDetector.get_option("duplicate_post_copyexcerpt") - {'option'}
	WordPressStorageDetector.add_option("duplicate_post_show_link_in", $show_links_in_defaults) - {'option'}
	WordPressRetrievalDetector.get_option("active_plugins", []) - {'option'}
	WordPressStorageDetector.add_option("duplicate_post_copychildren", "0") - {'option'}
	WordPressStorageDetector.add_option("duplicate_post_copythumbnail", "1") - {'option'}
	WordPressStorageDetector.add_option("duplicate_post_show_original_in_post_states", "0") - {'option'}
	WordPressRetrievalDetector.get_option("date_format") - {'option'}
	WordPressRetrievalDetector.get_option("duplicate_post_copyslug") - {'option'}
	WordPressRetrievalDetector.$this->options->get_option($option) - {'option'}
	WordPressStorageDetector.add_option("duplicate_post_copyformat", "1") - {'option'}
	WordPressStorageDetector.add_option("duplicate_post_taxonomies_blacklist", []) - {'option'}
	WordPressStorageDetector.add_option("duplicate_post_copyattachments", "0") - {'option'}
	WordPressRetrievalDetector.get_option("duplicate_post_copyauthor") - {'option'}
	WordPressRetrievalDetector.get_option("time_format") - {'option'}
	WordPressStorageDetector.add_option("duplicate_post_blacklist", "") - {'option'}
	WordPressStorageDetector.update_option("duplicate_post_copythumbnail", 0) - {'option'}
	WordPressStorageDetector.add_option("duplicate_post_copyexcerpt", "1") - {'option'}
	WordPressRetrievalDetector.get_option("duplicate_post_copystatus") - {'option'}
	WordPressStorageDetector.add_option("duplicate_post_show_original_meta_box", "0") - {'option'}
	WordPressRetrievalDetector.get_option("duplicate_post_version") - {'option'}
	WordPressStorageDetector.add_option("duplicate_post_copyslug", "0") - {'option'}
	WordPressRetrievalDetector.get_option("duplicate_post_copymenuorder") - {'option'}
	WordPressRetrievalDetector.get_option("duplicate_post_copychildren") - {'option'}
	DeletionDetector.delete_option($old) - {'option'}
	WordPressStorageDetector.update_option("duplicate_post_copyformat", 0) - {'option'}
	WordPressStorageDetector.update_option("duplicate_post_copytemplate", 0) - {'option'}
	WordPressStorageDetector.add_option("duplicate_post_copymenuorder", "1") - {'option'}
	WordPressRetrievalDetector.get_option($parent_option) - {'option'}
	WordPressRetrievalDetector.get_option("duplicate_post_copythumbnail") - {'option'}
password
	PropertyDetector.(unknown) - {'password'}
	PropertyDetector.(unknown) - {'password'}
post
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($this->post, ARRAY_A) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($original_id, $output) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($post) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($post) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'post', 'wp_post', 'post_meta'}
	WordPressStorageDetector.wp_delete_post_revision($revisions[$i]->ID) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($post) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($copy_id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($original_id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($copy_id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($copy_id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($details->element_id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($postarr["ID"]) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressStorageDetector.wp_delete_post($copy_id, $permanently_delete) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	DeletionDetector.wp_delete_post($copy_id, $permanently_delete) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($object_id) - {'post', 'wp_post', 'post_meta'}
post_meta
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'post', 'wp_post', 'post_meta'}
	WordPressStorageDetector.add_post_meta($new_post_id, "_dp_original", $post->ID) - {'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($this->post, ARRAY_A) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($original_id, $output) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'post', 'wp_post', 'post_meta'}
	DeletionDetector.delete_post_meta($post_id, "_dp_has_rewrite_republish_copy") - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($new_post_id, "_dp_original") - {'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($post) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($post) - {'post', 'wp_post', 'post_meta'}
	WordPressStorageDetector.delete_post_meta($new_id, $meta_key) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($child->ID, "_wp_attachment_image_alt", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'post', 'wp_post', 'post_meta'}
	DeletionDetector.delete_post_meta($original_post_id, "_dp_has_rewrite_republish_copy") - {'post_meta'}
	WordPressStorageDetector.wp_delete_post_revision($revisions[$i]->ID) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "_dp_original", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($post) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressStorageDetector.add_post_meta($new_id, $meta_key, Utils->recursively_slash_strings($meta_value)) - {'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'post', 'wp_post', 'post_meta'}
	DeletionDetector.delete_post_meta($post_id, "_dp_original") - {'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($copy_id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($original_id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "_dp_is_rewrite_republish_copy", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'post', 'wp_post', 'post_meta'}
	DeletionDetector.delete_post_meta($new_post_id, "_dp_original") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "_dp_has_rewrite_republish_copy", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($copy_id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'post', 'wp_post', 'post_meta'}
	WordPressStorageDetector.add_post_meta($new_post_id, "_dp_original", $post->ID) - {'post_meta'}
	WordPressRetrievalDetector.get_post($copy_id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($details->element_id) - {'post', 'wp_post', 'post_meta'}
	WordPressStorageDetector.update_post_meta($new_post_id, "_dp_is_rewrite_republish_copy", 1) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "_dp_has_rewrite_republish_copy", true) - {'post_meta'}
	DeletionDetector.delete_post_meta($new_id, $meta_key) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post_id, "_dp_original") - {'post_meta'}
	WordPressRetrievalDetector.get_post($postarr["ID"]) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post_meta($copy_id, "_dp_has_been_republished", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressStorageDetector.update_post_meta($new_post_id, "_dp_creation_date_gmt", current_time("mysql", 1)) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post->ID, "_dp_has_been_republished", "1") - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($new_post_id, "_dp_original") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($new_attachment_id, "_wp_attachment_image_alt", wp_slash($alt_title)) - {'post_meta'}
	WordPressStorageDetector.wp_delete_post($copy_id, $permanently_delete) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'post', 'wp_post', 'post_meta'}
	WordPressStorageDetector.add_post_meta($new_id, $meta_key, duplicate_post_wp_slash($meta_value)) - {'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressStorageDetector.update_post_meta($post->ID, "_dp_has_rewrite_republish_copy", $new_post_id) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post_id, "_dp_has_rewrite_republish_copy") - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($original_post_id, "_dp_has_rewrite_republish_copy") - {'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	DeletionDetector.delete_post_meta($new_post_id, "_dp_original") - {'post_meta'}
	DeletionDetector.wp_delete_post($copy_id, $permanently_delete) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($object_id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "_dp_creation_date_gmt", true) - {'post_meta'}
remote
	WordPressRemoteDetector.(unknown) - {'remote'}
state
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	PropertyDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	PropertyDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
user
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
user_meta
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
wp_post
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($this->post, ARRAY_A) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($original_id, $output) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($post) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($post) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'post', 'wp_post', 'post_meta'}
	WordPressStorageDetector.wp_delete_post_revision($revisions[$i]->ID) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($post) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($copy_id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($original_id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($copy_id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($copy_id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($details->element_id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($postarr["ID"]) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressStorageDetector.wp_delete_post($copy_id, $permanently_delete) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post', 'wp_post', 'post_meta'}
	DeletionDetector.wp_delete_post($copy_id, $permanently_delete) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($object_id) - {'post', 'wp_post', 'post_meta'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:24.256013.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 2551 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:01.054800.

!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 1675
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 2388
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 11805
1000 STORE_REACHES edges created
2000 STORE_REACHES edges created
2551 STORE_REACHES edges created
2551 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 1000 nodes as PERSONAL
Tainted 1405 nodes as PERSONAL
In total, tainted 1405 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
In total, tainted 0 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:24.823671.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:02:08.494444!
DELETION call to delete_option($old) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_post_meta($new_post_id, "_dp_original") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($post_id, "_dp_original") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($new_post_id, "_dp_original") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($new_id, $meta_key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to wp_delete_post($copy_id, $permanently_delete) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
DELETION call to delete_post_meta($post_id, "_dp_has_rewrite_republish_copy") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($original_post_id, "_dp_has_rewrite_republish_copy") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
object property '$comment->comment_author_email' of personal types {'email'} is found.,,None
object property '$post->post_password' of personal types {'password'} is found.,,None
object property '$post->post_password' of personal types {'password'} is found.,,None
object property '$this->post_states' of personal types {'state'} is found.,,None
object property '$this->post_states' of personal types {'state'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email_label' of personal types {'email'} is found.,,None
variable '$email_label' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$post_states' of personal types {'state'} is found.,,None
variable '$post_states' of personal types {'state'} is found.,,None
variable '$post_states' of personal types {'state'} is found.,,None
variable '$post_states' of personal types {'state'} is found.,,None
variable '$post_states' of personal types {'state'} is found.,,None
variable '$post_states' of personal types {'state'} is found.,,None
variable '$post_states' of personal types {'state'} is found.,,None
API call to wp_remote_post("https://my.yoast.com/api/Mailing-list/subscribe", ["method" => "POST", "body" => ["customerDetails" => ["email" => $email, "firstName" => ""], "list" => "Yoast newsletter"]]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,['https://my.yoast.com/api/Mailing-list/subscribe']
RETRIEVAL call to get_option("duplicate_post_taxonomies_blacklist") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("duplicate_post_blacklist") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($old, $defaults[$new]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("duplicate_post_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("duplicate_post_taxonomies_blacklist") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("duplicate_post_copyformat") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("duplicate_post_blacklist") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("duplicate_post_copytemplate") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("duplicate_post_copythumbnail") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_custom_values($meta_key, $post->ID). Passed arguments: 1: $post_id (int), 0: $key (string). Returns (array|null).,None,None
RETRIEVAL call to get_posts(["post_type" => "any", "numberposts" => -1, "post_status" => "any", "post_parent" => $post->ID]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_post_meta($child->ID, "_wp_attachment_image_alt", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("duplicate_post_copythumbnail") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_posts(["post_type" => "any", "numberposts" => -1, "post_status" => "any", "post_parent" => $post->ID]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_option("duplicate_post_copychildren") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("duplicate_post_copydate") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_insert_comment($commentdata). Passed arguments: 0: $commentdata (array). Returns (int|false).,None,None
RETRIEVAL call to get_comment_meta($new_comment_id) alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int). Returns (mixed).,None,None
RETRIEVAL call to get_option("duplicate_post_copyattachments") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("duplicate_post_title_prefix") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("duplicate_post_title_suffix") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("duplicate_post_copytitle") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("duplicate_post_copystatus") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("duplicate_post_copycomments") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_option("duplicate_post_copyauthor") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("duplicate_post_copymenuorder") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("duplicate_post_increase_menu_order_by") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("duplicate_post_copyslug") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("duplicate_post_copycontent") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("duplicate_post_copycontent") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("duplicate_post_copyexcerpt") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("duplicate_post_copypassword") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("duplicate_post_copydate") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("duplicate_post_types_enabled", ["post", "page"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post($id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($details->element_id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("duplicate_post_taxonomies_blacklist") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($option) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($parent_option) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("duplicate_post_types_enabled", ["post", "page"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $this->options->get_option($option) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("duplicate_post_roles") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("duplicate_post_title_prefix") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("duplicate_post_title_suffix") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("duplicate_post_increase_menu_order_by") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("duplicate_post_blacklist") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($post_id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("duplicate_post_copychildren") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($post_id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($this->post, ARRAY_A) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 1: $output (string), 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("duplicate_post_show_original_meta_box") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("duplicate_post_show_original_column") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($post_id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($post->ID, "_dp_creation_date_gmt", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("duplicate_post_types_enabled", ["post", "page"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "_dp_has_rewrite_republish_copy", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($copy_id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($post->ID, "_dp_is_rewrite_republish_copy", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "_dp_has_rewrite_republish_copy", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($copy_id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_custom_values($meta_key, $post->ID). Passed arguments: 1: $post_id (int), 0: $key (string). Returns (array|null).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_post($postarr["ID"]) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($copy_id, "_dp_has_been_republished", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($post_id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($copy_id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($original_id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post() alters data types {'post', 'wp_post', 'post_meta'}. Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post() alters data types {'post', 'wp_post', 'post_meta'}. Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post() alters data types {'post', 'wp_post', 'post_meta'}. Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post() alters data types {'post', 'wp_post', 'post_meta'}. Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post() alters data types {'post', 'wp_post', 'post_meta'}. Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post() alters data types {'post', 'wp_post', 'post_meta'}. Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post() alters data types {'post', 'wp_post', 'post_meta'}. Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($object_id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post() alters data types {'post', 'wp_post', 'post_meta'}. Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post() alters data types {'post', 'wp_post', 'post_meta'}. Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post() alters data types {'post', 'wp_post', 'post_meta'}. Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post() alters data types {'post', 'wp_post', 'post_meta'}. Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post() alters data types {'post', 'wp_post', 'post_meta'}. Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("date_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("time_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("duplicate_post_show_original_column") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($post_id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($post) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("duplicate_post_show_original_meta_box") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("duplicate_post_show_original_in_post_states") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($post) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($post_id, "_dp_original", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($option) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("active_plugins", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post($post) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($original_id, $output) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 1: $output (string), 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post() alters data types {'post', 'wp_post', 'post_meta'}. Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("date_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("time_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post() alters data types {'post', 'wp_post', 'post_meta'}. Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post() alters data types {'post', 'wp_post', 'post_meta'}. Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post() alters data types {'post', 'wp_post', 'post_meta'}. Returns (WP_Post|array|null).,None,None
STORAGE call to add_option("duplicate_post_show_notice", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("duplicate_post_show_notice", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("duplicate_post_copytitle", "1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("duplicate_post_copydate", "0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("duplicate_post_copystatus", "0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("duplicate_post_copyslug", "0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("duplicate_post_copyexcerpt", "1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("duplicate_post_copycontent", "1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("duplicate_post_copythumbnail", "1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("duplicate_post_copytemplate", "1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("duplicate_post_copyformat", "1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("duplicate_post_copyauthor", "0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("duplicate_post_copypassword", "0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("duplicate_post_copyattachments", "0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("duplicate_post_copychildren", "0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("duplicate_post_copycomments", "0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("duplicate_post_copymenuorder", "1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("duplicate_post_taxonomies_blacklist", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("duplicate_post_blacklist", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("duplicate_post_types_enabled", ["post", "page"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("duplicate_post_show_original_column", "0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("duplicate_post_show_original_in_post_states", "0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("duplicate_post_show_original_meta_box", "0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("duplicate_post_show_link", ["new_draft" => "1", "clone" => "1", "rewrite_republish" => "1"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("duplicate_post_show_link_in", $show_links_in_defaults) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("duplicate_post_copyformat", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("duplicate_post_taxonomies_blacklist", $taxonomies_blacklist) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("duplicate_post_copytemplate", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("duplicate_post_copythumbnail", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("duplicate_post_blacklist", implode(",", $meta_blacklist)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("duplicate_post_version", duplicate_post_get_current_version()) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option($old) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("duplicate_post_show_link_in", $new_options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_post_meta($new_id, $meta_key, duplicate_post_wp_slash($meta_value)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to wp_update_post(wp_slash($cloned_child)). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($new_attachment_id, "_wp_attachment_image_alt", wp_slash($alt_title)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to add_comment_meta($new_comment_id, $meta_key, duplicate_post_wp_slash($meta_value)) alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_insert_post(wp_slash($new_post), true). Passed arguments: 0: $postarr (array), 1: $wp_error (bool). Returns (int|WP_Error).,None,None
STORAGE call to delete_post_meta($new_post_id, "_dp_original") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to add_post_meta($new_post_id, "_dp_original", $post->ID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to delete_post_meta($post_id, "_dp_original") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to wp_insert_post(wp_slash($new_post), true). Passed arguments: 0: $postarr (array), 1: $wp_error (bool). Returns (int|WP_Error).,None,None
STORAGE call to delete_post_meta($new_post_id, "_dp_original") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to add_post_meta($new_post_id, "_dp_original", $post->ID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to update_post_meta($new_post_id, "_dp_is_rewrite_republish_copy", 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post->ID, "_dp_has_rewrite_republish_copy", $new_post_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($new_post_id, "_dp_creation_date_gmt", current_time("mysql", 1)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($new_id, $meta_key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to add_post_meta($new_id, $meta_key, Utils->recursively_slash_strings($meta_value)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to update_post_meta($post->ID, "_dp_has_been_republished", "1") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_delete_post($copy_id, $permanently_delete) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
STORAGE call to delete_post_meta($post_id, "_dp_has_rewrite_republish_copy") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to wp_update_post($post_to_be_rewritten). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to delete_post_meta($original_post_id, "_dp_has_rewrite_republish_copy") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to wp_update_post($revision). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to wp_delete_post_revision($revisions[$i]->ID) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $revision_id (int|WP_Post). Returns (array|false|WP_Post|WP_Error|null).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] PII of types (['user_meta', 'password', 'state', 'user']) stored through WordPress function "add_post_meta($new_post_id, "_dp_original", $post->ID)", found in file admin-functions.php at line 725. 

[has_storage] PII of types (['password', 'email', 'user_meta', 'state', 'user']) stored through WordPress function "add_comment_meta($new_comment_id, $meta_key, duplicate_post_wp_slash($meta_value))", found in file admin-functions.php at line 559. 

[has_storage] PII of types (['user_meta', 'password', 'state', 'user']) stored through WordPress function "wp_insert_post(wp_slash($new_post), true)", found in file src/post-duplicator.php at line 113. 

[has_storage] PII of types (['user_meta', 'password', 'state', 'user']) stored through WordPress function "wp_delete_post_revision($revisions[$i]->ID)", found in file src/revisions-migrator.php at line 64. 

[has_storage] PII of types (['user_meta', 'password', 'state', 'user']) stored through WordPress function "add_post_meta($new_id, $meta_key, Utils->recursively_slash_strings($meta_value))", found in file src/post-duplicator.php at line 302. 

[has_storage] PII of types (['user_meta', 'password', 'state', 'user']) stored through WordPress function "wp_insert_post(wp_slash($new_post), true)", found in file admin-functions.php at line 711. 

[has_storage] PII of types (['user_meta', 'password', 'state', 'user']) stored through WordPress function "add_post_meta($new_post_id, "_dp_original", $post->ID)", found in file src/post-duplicator.php at line 121. 

[has_storage] PII of types (['user_meta', 'password', 'state', 'user']) stored through WordPress function "update_post_meta($new_post_id, "_dp_is_rewrite_republish_copy", 1)", found in file src/post-duplicator.php at line 171. 

[has_storage] PII of types (['user_meta', 'password', 'state', 'user']) stored through WordPress function "wp_update_post(wp_slash($cloned_child))", found in file admin-functions.php at line 476. 

[has_storage] PII of types (['user_meta', 'password', 'state', 'user']) stored through WordPress function "update_post_meta($new_post_id, "_dp_creation_date_gmt", current_time("mysql", 1))", found in file src/post-duplicator.php at line 173. 

[has_storage] PII of types (['user_meta', 'password', 'state', 'user']) stored through WordPress function "update_post_meta($new_attachment_id, "_wp_attachment_image_alt", wp_slash($alt_title))", found in file admin-functions.php at line 480. 

[has_storage] PII of types (['user_meta', 'password', 'state', 'user']) stored through WordPress function "add_post_meta($new_id, $meta_key, duplicate_post_wp_slash($meta_value))", found in file admin-functions.php at line 386. 

[has_storage] PII of types (['user_meta', 'password', 'state', 'user']) stored through WordPress function "update_post_meta($post->ID, "_dp_has_rewrite_republish_copy", $new_post_id)", found in file src/post-duplicator.php at line 172. 

[has_storage] Storage check is WP 

[Art.17, Right to erasure] Wordpress storage of PII through add_post_meta($new_post_id, "_dp_original", $post->ID) has deletion method delete_post_meta($new_post_id, "_dp_original"). Storage method found in file admin-functions.php at line 725. Deletion method found in file admin-functions.php at line 724. 

[Art.17, Right to erasure] Wordpress storage of PII through add_post_meta($new_post_id, "_dp_original", $post->ID) has deletion method delete_post_meta($post_id, "_dp_original"). Storage method found in file admin-functions.php at line 725. Deletion method found in file src/handlers/save-post-handler.php at line 61. 

[Art.17, Right to erasure] Wordpress storage of PII through add_post_meta($new_post_id, "_dp_original", $post->ID) has deletion method delete_post_meta($new_post_id, "_dp_original"). Storage method found in file admin-functions.php at line 725. Deletion method found in file src/post-duplicator.php at line 120. 

[Art.17, Right to erasure] Wordpress storage of PII through add_comment_meta($new_comment_id, $meta_key, duplicate_post_wp_slash($meta_value)) does not have corresponding deletion method. Storage method found in file admin-functions.php at line 559. 

[Art.17, Right to erasure] Wordpress storage of PII through wp_insert_post(wp_slash($new_post), true) does not have corresponding deletion method. Storage method found in file src/post-duplicator.php at line 113. 

[Art.17, Right to erasure] Wordpress storage of PII through wp_delete_post_revision($revisions[$i]->ID) has deletion method wp_delete_post($copy_id, $permanently_delete). Storage method found in file src/revisions-migrator.php at line 64. Deletion method found in file src/post-republisher.php at line 296. 

[Art.17, Right to erasure] Wordpress storage of PII through add_post_meta($new_id, $meta_key, Utils->recursively_slash_strings($meta_value)) has deletion method delete_post_meta($new_id, $meta_key). Storage method found in file src/post-duplicator.php at line 302. Deletion method found in file src/post-duplicator.php at line 298. 

[Art.17, Right to erasure] Wordpress storage of PII through wp_insert_post(wp_slash($new_post), true) does not have corresponding deletion method. Storage method found in file admin-functions.php at line 711. 

[Art.17, Right to erasure] Wordpress storage of PII through add_post_meta($new_post_id, "_dp_original", $post->ID) has deletion method delete_post_meta($new_post_id, "_dp_original"). Storage method found in file src/post-duplicator.php at line 121. Deletion method found in file admin-functions.php at line 724. 

[Art.17, Right to erasure] Wordpress storage of PII through add_post_meta($new_post_id, "_dp_original", $post->ID) has deletion method delete_post_meta($post_id, "_dp_original"). Storage method found in file src/post-duplicator.php at line 121. Deletion method found in file src/handlers/save-post-handler.php at line 61. 

[Art.17, Right to erasure] Wordpress storage of PII through add_post_meta($new_post_id, "_dp_original", $post->ID) has deletion method delete_post_meta($new_post_id, "_dp_original"). Storage method found in file src/post-duplicator.php at line 121. Deletion method found in file src/post-duplicator.php at line 120. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($new_post_id, "_dp_is_rewrite_republish_copy", 1) does not have corresponding deletion method. Storage method found in file src/post-duplicator.php at line 171. 

[Art.17, Right to erasure] Wordpress storage of PII through wp_update_post(wp_slash($cloned_child)) does not have corresponding deletion method. Storage method found in file admin-functions.php at line 476. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($new_post_id, "_dp_creation_date_gmt", current_time("mysql", 1)) does not have corresponding deletion method. Storage method found in file src/post-duplicator.php at line 173. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($new_attachment_id, "_wp_attachment_image_alt", wp_slash($alt_title)) does not have corresponding deletion method. Storage method found in file admin-functions.php at line 480. 

[Art.17, Right to erasure] Wordpress storage of PII through add_post_meta($new_id, $meta_key, duplicate_post_wp_slash($meta_value)) has deletion method delete_post_meta($new_id, $meta_key). Storage method found in file admin-functions.php at line 386. Deletion method found in file src/post-duplicator.php at line 298. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post->ID, "_dp_has_rewrite_republish_copy", $new_post_id) has deletion method delete_post_meta($post_id, "_dp_has_rewrite_republish_copy"). Storage method found in file src/post-duplicator.php at line 172. Deletion method found in file src/post-republisher.php at line 300. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post->ID, "_dp_has_rewrite_republish_copy", $new_post_id) has deletion method delete_post_meta($original_post_id, "_dp_has_rewrite_republish_copy"). Storage method found in file src/post-duplicator.php at line 172. Deletion method found in file src/post-republisher.php at line 430. 

[Art.17, Right to erasure] Deletion access is NONE 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 2805. Found in file admin-functions.php at line 725 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 2074. Found in file admin-functions.php at line 559 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 10857. Found in file src/post-duplicator.php at line 113 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 13281. Found in file src/revisions-migrator.php at line 64 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 11592. Found in file src/post-duplicator.php at line 302 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 2727. Found in file admin-functions.php at line 711 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 10908. Found in file src/post-duplicator.php at line 121 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 11076. Found in file src/post-duplicator.php at line 171 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1708. Found in file admin-functions.php at line 476 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 11095. Found in file src/post-duplicator.php at line 173 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1738. Found in file admin-functions.php at line 480 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1423. Found in file admin-functions.php at line 386 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 11084. Found in file src/post-duplicator.php at line 172 

[Art.15, Right to access] Data access is NONE_BUT_NOT_REQUIRED 

[third_party] Third party at "https://my.yoast.com/api/Mailing-list/subscribe" used with data types ['email'], found in file src/ui/newsletter.php at line 112 . Personal data flows from sources with nodeID [17672, 17742, 17772, 17686]  

[third_party] Third party usage is CONFIRMED for data types ['email'] 

[encryption] API call that sends PII to "https://my.yoast.com/api/Mailing-list/subscribe" uses https. PII is insecurely encrypted with []. Found in file src/ui/newsletter.php at line 112 

[main] Applicable GDPR requirements: ['access', 'deletion', 'encryption', 'third_party'] 

[main] Is deletion in violation? True 

[main] Is access in violation? False 

[main] Is third_party in violation? True 

[main] Is encryption in violation? True 

[main] Complaint? False 


###########
### Q&A ###
###########

1. Why is my plugin in violation against GDPR?

GDPR (https://gdpr-info.eu/) aims to give citizens in the European Union (EU) control over their personal data. If a website collects or store user data, it is required to provide users functionalities to control their data, such as ones to erase or export their data. While a plugin do not directly interact with users, it may provide functionalities that collect or store personal data, which would make websites that deploy the plugin in violation against GDPR if the plugin does not provide corresponding functionalities to allow users control their personal data. Therefore, plugin developers are responsible to provide functions to manage the personal data they handle in accordance with GDPR. We list requirements by specific GDPR articles relevant to your plugin below.


[Art. 13, Information to be provided where personal data are collected from the data subject] If a plugin collects or handles personal data, it needs to provide privacy policy texts that explain what personal data is being collected and for what purpose. The texts are meant to be added to the privacy policy of the websites that deploy the plugin. 


            
[Art.17, Right to erasure] If a plugin stores personal data in a custom database they create or manage, or through Wordpress's native storage functions (e.g., update_user_meta), it needs to provide methods for users to erase the data upon request. Note that deleting data for all users upon uninstallation does not satisfy the requirement. 


            
        

2. How do I make my plugin compliant?

Please refer to the fix report below to see how you can make your plugin comply with GDPR.

        
