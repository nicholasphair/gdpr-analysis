Timeout in resolving values
Timeout in running neo4j query
Running Main.py on wordpress-importer

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.399469.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.034887.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 155 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.661325.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 0 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.412444.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 1500 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:01.350359.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 2 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.551799.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.077860.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 504 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:07.858114.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 8102
Added 5941 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 8102
Added 0 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.640501.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wordpress-importer/class-wp-import.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wordpress-importer/compat.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wordpress-importer/parsers.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wordpress-importer/wordpress-importer.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wordpress-importer/parsers/class-wxr-parser.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wordpress-importer/parsers/class-wxr-parser-regex.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wordpress-importer/parsers/class-wxr-parser-simplexml.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wordpress-importer/parsers/class-wxr-parser-xml.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.803560.

1000 PHP_REACHES edges created
1655 PHP_REACHES edges created
2 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
6445 PHP_REACHES edges created
8102 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 3006 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.378417.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 4 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:05.238056.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 153 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:03.745521.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 126 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.148889.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:01.577534.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:01.038053.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.017534.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.031430.

4 CALLS edges created
279 PHP_REACHES edges created
283 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 260 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.151457.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
2 SQL operations to process.
UPDATE $wpdb SET post_content = REPLACE(post_content, $from_url, %s)
UPDATE $wpdb SET post_content = REPLACE(post_content, $from_url, $to_url)
UPDATE $wpdb SET post_content = REPLACE(post_content, $from_url, $to_url)
SQL command (UPDATE $wpdb SET post_content = REPLACE(post_content, $from_url, $to_url)) cannot be parsed correct.
UPDATE $wpdb SET meta_value = REPLACE(meta_value, $from_url, %s) WHERE meta_key='enclosure'
UPDATE $wpdb SET meta_value = REPLACE(meta_value, $from_url, $to_url) WHERE meta_key='enclosure'
UPDATE $wpdb SET meta_value = REPLACE(meta_value, $from_url, $to_url) WHERE meta_key='enclosure'
SQL command (UPDATE $wpdb SET meta_value = REPLACE(meta_value, $from_url, $to_url) WHERE meta_key='enclosure') cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [5991, 6015]
Added 0 SQL nodes. 0 out of 2 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:02.308037.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'<p><strong>Sorry, there has been an error.</strong><br />'' cannot be parsed correct.
HTML code '$'The file does not exist, please try again.</p>'' cannot be parsed correct.
HTML code '$'<p><strong>Sorry, there has been an error.</strong><br />'' cannot be parsed correct.
HTML code '$'$import_data->get_error_message()</p>'' cannot be parsed correct.
HTML code '$' <strong>$author_author_display_name'' cannot be parsed correct.
HTML code '$' ($author_author_login)'' cannot be parsed correct.
HTML code '$'<label for="user_new0"'' cannot be parsed correct.
HTML code '$' <input type="text" id="user_new_0" name="user_new[0]" value="sanitize_user($author["author_login"], true)" /><br /'' cannot be parsed correct.
HTML code '$'<label for="imported_authors0"'' cannot be parsed correct.
HTML code '$' wp_dropdown_users(["name" => "user_map["$n"]", "id" => "imported_authors_" . $n, "multi" => true, "show_option_all" => __("- Select -", "wordpress-importer"), "show" => "display_name_with_login", "echo" => 0])'' cannot be parsed correct.
HTML code '$'<input type="hidden" name="imported_authors[0]" value="$author_author_login" /'' cannot be parsed correct.
HTML code '$' $user_id->get_error_message()'' cannot be parsed correct.
HTML code '$': $id->get_error_message()'' cannot be parsed correct.
HTML code '$'<p>All done. <a href=admin_url()"Have fun!</a></p>'' cannot be parsed correct.
HTML code '$'<p>Remember to update the passwords and roles of imported users.</p>'' cannot be parsed correct.
HTML code '$'<p><strong>Sorry, there has been an error.</strong><br />'' cannot be parsed correct.
HTML code '$'wp_import_handle_upload()_error</p>'' cannot be parsed correct.
HTML code '$'<p><strong>Sorry, there has been an error.</strong><br />'' cannot be parsed correct.
HTML code '$'<p><strong>Sorry, there has been an error.</strong><br />'' cannot be parsed correct.
HTML code '$'$import_data->get_error_message()</p>'' cannot be parsed correct.
HTML code '$'admin_url("admin.php?import=wordpress&amp;step=2")'' cannot be parsed correct.
HTML code '$'$this_id'' cannot be parsed correct.
HTML code '$': $post_id->get_error_message()'' cannot be parsed correct.
HTML code '$': $t->get_error_message()'' cannot be parsed correct.
HTML code '$': $id->get_error_message()'' cannot be parsed correct.
HTML code '$': $id->get_error_message()'' cannot be parsed correct.
HTML code '$'<h2>Import WordPress</h2>'' cannot be parsed correct.
HTML code '$'<p>Howdy! Upload your WordPress eXtended RSS (WXR) file and we&#8217;ll import the posts, pages, comments, custom fields, categories, and tags into this site.</p>'' cannot be parsed correct.
HTML code '$'<p>Choose a WXR (.xml) file to upload, then click Upload file and import.</p>'' cannot be parsed correct.
HTML code '$'$error:$error $error
'' cannot be parsed correct.
HTML code '$'$result->get_error_data()_0:$result->get_error_data()_1 $result->get_error_data()_2'' cannot be parsed correct.
HTML code '$'<p><strong>There was an error when reading this WXR file</strong><br />'' cannot be parsed correct.
HTML code '$'Details are shown above. The importer will now try again with a different parser...</p>'' cannot be parsed correct.
HTML code '$'</strong><br />'' cannot be parsed correct.
HTML code '$'<div style="margin-left:18px">'' cannot be parsed correct.
HTML code '$'</label>'' cannot be parsed correct.
HTML code '$'</label>'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'<br />'' cannot be parsed correct.
HTML code '$'<br />'' cannot be parsed correct.
HTML code '$'</p>'' cannot be parsed correct.
HTML code '$'<div class="error"><p><strong>'' cannot be parsed correct.
HTML code '$'</strong></p></div>'' cannot be parsed correct.
HTML code '$'<br />'' cannot be parsed correct.
HTML code '$'<br />'' cannot be parsed correct.
HTML code '$'<br />'' cannot be parsed correct.
HTML code '$'<br />'' cannot be parsed correct.
HTML code '$'<br />'' cannot be parsed correct.
HTML code '$'<br />'' cannot be parsed correct.
HTML code '$'<br />'' cannot be parsed correct.
HTML code '$'<br />'' cannot be parsed correct.
HTML code '$'<br />'' cannot be parsed correct.
HTML code '$'<div class="wrap">'' cannot be parsed correct.
HTML code '$'<div class="error"><p><strong>'' cannot be parsed correct.
HTML code '$'</strong></p></div>'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'<div class="narrow">'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'<pre>'' cannot be parsed correct.
HTML code '$'</pre>'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:06.227567.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.055825.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 26 do_action/apply_filters calls and 3 add_action/add_filter calls. Now connecting do-add pairs.
Added 1 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:01.035776.

1 PHP_REACHES edges created
1 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FileProDetector
### Start running FrontBaseDetector
### Finish running DbaseDetector
### Start running HashDetector
### Finish running DbplusDetector
### Start running IBMDb2Detector
### Finish running FirebirdInterBaseDetector
### Start running InformixDetector
### Finish running CubridDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running jQueryRequestDetector
### Finish running InformixDetector
### Start running maxdbDetector
### Finish running IngresDetector
### Start running MongoDbDetector
### Finish running IBMDb2Detector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running MsqlDetector
### Start running MySQLDetector
### Finish running MongoDbDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running Oci8Detector
### Start running OpenSSLDetector
### Finish running ArrayElementDetector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running HashDetector
### Start running PhpCurlDetector
### Finish running PasswordHashingDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PhpCurlDetector
### Start running PHPRetrievalDetector
### Finish running jQueryRequestDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running OpenSSLDetector
### Start running PhpVarDetector
### Finish running PhpVarDetector
### Start running PostgreSQLDetector
### Finish running PHPStorageDetector
### Start running PropertyDetector
### Finish running PHPIncludedDetector
### Start running Sqlite3Detector
### Finish running PostgreSQLDetector
### Start running SqliteDetector
### Finish running SqliteDetector
### Start running SqlServerDetector
### Finish running maxdbDetector
### Start running SybaseDetector
### Finish running MySQLiDetector
### Start running TokyoTyrantDetector
### Finish running SybaseDetector
### Start running UserInputDetector
### Finish running Sqlite3Detector
### Start running VariableDetector
### Finish running TokyoTyrantDetector
### Start running WordpressHashingFnDetector
### Finish running SqlServerDetector
### Start running WordPressRemoteDetector
### Finish running WordPressRemoteDetector
### Start running WordPressRetrievalDetector
### Finish running PropertyDetector
### Start running WordPressStorageDetector
### Finish running PHPRetrievalDetector
### Start running WP_UserDetector
### Finish running VariableDetector
### Start running GenericDatabaseUsageDetector
### Finish running UserInputDetector
### Start running GenericEncryptionDetector
### Finish running WordpressHashingFnDetector
### Start running DeletionDetector
### Finish running WP_UserDetector
### Start running UninstallDetector
### Finish running GenericEncryptionDetector
### Finish running GenericDatabaseUsageDetector
### Finish running WordPressRetrievalDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running WordPressStorageDetector
### Finished running detectors
class-wp-import.php:995
  - MD5 called with parameters [url]. Ignore if [url] does not contain personal information. 

parsers/class-wxr-parser-regex.php:40
  - RETRIEVAL call to $this->fgets($fp).
  - Data types: file
parsers/class-wxr-parser-regex.php:310
  - RETRIEVAL call to fgets($fp, $len).
  - Data types: file
parsers/class-wxr-parser-simplexml.php:23
  - RETRIEVAL call to file_get_contents($file).
  - Data types: file
parsers/class-wxr-parser-xml.php:38
  - RETRIEVAL call to file_get_contents($file).
  - Data types: file 

parsers/class-wxr-parser-simplexml.php:72
  - object property '$a->author_email' of personal types {'email'} is found.
  - Data types: email
parsers/class-wxr-parser-simplexml.php:74
  - object property '$a->author_first_name' of personal types {'first_name'} is found.
  - Data types: first_name
parsers/class-wxr-parser-simplexml.php:75
  - object property '$a->author_last_name' of personal types {'last_name'} is found.
  - Data types: last_name
parsers/class-wxr-parser-simplexml.php:166
  - object property '$wp->post_password' of personal types {'password'} is found.
  - Data types: password
parsers/class-wxr-parser-simplexml.php:203
  - object property '$comment->comment_author_email' of personal types {'email'} is found.
  - Data types: email 

parsers/class-wxr-parser-regex.php:224
  - variable '$post_password' of personal types {'password'} is found.
  - Data types: password 

class-wp-import.php:342
  - CRYPTOGRAPHY call to wp_create_user($_POST["user_new"][$i], wp_generate_password()) alters data types {'user_meta', 'user'}. Passed arguments: 0: $username (string), 1: $password (string). Returns (int|WP_Error).
  - Data types: user_meta, user 

class-wp-import.php:241
  - RETRIEVAL call to get_option("default_role") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class-wp-import.php:334
  - RETRIEVAL call to get_userdata(intval($_POST["user_map"][$i])) alters data types {'user_meta', 'user'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user_meta, user
class-wp-import.php:795
  - RETRIEVAL call to wp_insert_comment($comment_data). Passed arguments: 0: $commentdata (array). Returns (int|false). 

class-wp-import.php:143
  - STORAGE call to delete_option($tax"_children") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
class-wp-import.php:342
  - STORAGE call to wp_create_user($_POST["user_new"][$i], wp_generate_password()) alters data types {'user_meta', 'user'}. Passed arguments: 0: $username (string), 1: $password (string). Returns (int|WP_Error).
  - Data types: user_meta, user
class-wp-import.php:352
  - STORAGE call to wp_insert_user($user_data) alters data types {'user_meta', 'user'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user_meta, user
class-wp-import.php:699
  - STORAGE call to wp_insert_post($postdata, true). Passed arguments: 0: $postarr (array), 1: $wp_error (bool). Returns (int|WP_Error).
class-wp-import.php:802
  - STORAGE call to add_comment_meta($inserted_comments[$key], wp_slash($meta["key"]), wp_slash_strings_only($value)) alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: comment_meta
class-wp-import.php:835
  - STORAGE call to add_post_meta($post_id, wp_slash($key), wp_slash_strings_only($value)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: post_meta
class-wp-import.php:1175
  - STORAGE call to update_post_meta($local_child_id, "_menu_item_menu_item_parent", $local_parent_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
class-wp-import.php:1205
  - STORAGE call to update_post_meta($post_id, "_thumbnail_id", $new_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta 

class-wp-import.php:143
  - DELETION call to delete_option($tax"_children") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

By data type:
comment_meta
	WordPressStorageDetector.add_comment_meta($inserted_comments[$key], wp_slash($meta["key"]), wp_slash_strings_only($value)) - {'comment_meta'}
email
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
file
	PHPRetrievalDetector.file_get_contents($file) - {'file'}
	PHPRetrievalDetector.$this->fgets($fp) - {'file'}
	PHPRetrievalDetector.file_get_contents($file) - {'file'}
	PHPRetrievalDetector.fgets($fp, $len) - {'file'}
first_name
	PropertyDetector.(unknown) - {'first_name'}
last_name
	PropertyDetector.(unknown) - {'last_name'}
none
	PHPIncludedDetector.(unknown) - set()
	WordPressStorageDetector.wp_insert_post($postdata, true) - set()
	WordPressRetrievalDetector.wp_insert_comment($comment_data) - set()
option
	WordPressStorageDetector.delete_option($tax"_children") - {'option'}
	WordPressRetrievalDetector.get_option("default_role") - {'option'}
	DeletionDetector.delete_option($tax"_children") - {'option'}
password
	VariableDetector.(unknown) - {'password'}
	PropertyDetector.(unknown) - {'password'}
post_meta
	WordPressStorageDetector.update_post_meta($post_id, "_thumbnail_id", $new_id) - {'post_meta'}
	WordPressStorageDetector.add_post_meta($post_id, wp_slash($key), wp_slash_strings_only($value)) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($local_child_id, "_menu_item_menu_item_parent", $local_parent_id) - {'post_meta'}
user
	WordpressHashingFnDetector.wp_create_user($_POST["user_new"][$i], wp_generate_password()) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_userdata(intval($_POST["user_map"][$i])) - {'user_meta', 'user'}
	WordPressStorageDetector.wp_create_user($_POST["user_new"][$i], wp_generate_password()) - {'user_meta', 'user'}
	WordPressStorageDetector.wp_insert_user($user_data) - {'user_meta', 'user'}
user_meta
	WordpressHashingFnDetector.wp_create_user($_POST["user_new"][$i], wp_generate_password()) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_userdata(intval($_POST["user_map"][$i])) - {'user_meta', 'user'}
	WordPressStorageDetector.wp_create_user($_POST["user_new"][$i], wp_generate_password()) - {'user_meta', 'user'}
	WordPressStorageDetector.wp_insert_user($user_data) - {'user_meta', 'user'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:12.706626.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 3 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.110708.

3 STORE_REACHES edges created
3 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Remove dataflow edges from keys to data storage sinks" (remove_edge_from_key_to_sink) begin.
Removing dataflow edges from keys to data storage sinks
Deleted PHP_REACHES edges from key to sink for 7 sinks
Deleted PHP_REACHES edges from keys to storage sinks.
╚[26] Preprocessing step "Remove dataflow edges from keys to data storage sinks" (remove_edge_from_key_to_sink) finished successfully in 0:00:00.225210.

0 edges imported to Neo4j
Preprocessing step 10 done!
╔[27] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 35 nodes as PERSONAL
In total, tainted 35 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 23 nodes as ENCRYPTED
In total, tainted 23 nodes as ENCRYPTED
╚[27] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:01.769257.

0 edges imported to Neo4j
Preprocessing step 11 done!
### Preprocessing done in 0:01:08.609212!
DELETION call to delete_option($tax"_children") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
MD5 called with parameters [url]. Ignore if [url] does not contain personal information.,md5,None
RETRIEVAL call to fgets($fp, $len).,None,None
RETRIEVAL call to $this->fgets($fp).,None,None
RETRIEVAL call to file_get_contents($file).,None,None
RETRIEVAL call to file_get_contents($file).,None,None
object property '$wp->post_password' of personal types {'password'} is found.,,None
object property '$comment->comment_author_email' of personal types {'email'} is found.,,None
object property '$a->author_email' of personal types {'email'} is found.,,None
object property '$a->author_first_name' of personal types {'first_name'} is found.,,None
object property '$a->author_last_name' of personal types {'last_name'} is found.,,None
variable '$post_password' of personal types {'password'} is found.,,None
RETRIEVAL call to get_option("default_role") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdata(intval($_POST["user_map"][$i])) alters data types {'user_meta', 'user'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to wp_insert_comment($comment_data). Passed arguments: 0: $commentdata (array). Returns (int|false).,None,None
STORAGE call to update_post_meta($local_child_id, "_menu_item_menu_item_parent", $local_parent_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_thumbnail_id", $new_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_option($tax"_children") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to wp_create_user($_POST["user_new"][$i], wp_generate_password()) alters data types {'user_meta', 'user'}. Passed arguments: 0: $username (string), 1: $password (string). Returns (int|WP_Error).,None,None
STORAGE call to wp_insert_user($user_data) alters data types {'user_meta', 'user'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,None,None
STORAGE call to wp_insert_post($postdata, true). Passed arguments: 0: $postarr (array), 1: $wp_error (bool). Returns (int|WP_Error).,None,None
STORAGE call to add_comment_meta($inserted_comments[$key], wp_slash($meta["key"]), wp_slash_strings_only($value)) alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to add_post_meta($post_id, wp_slash($key), wp_slash_strings_only($value)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
CRYPTOGRAPHY call to wp_create_user($_POST["user_new"][$i], wp_generate_password()) alters data types {'user_meta', 'user'}. Passed arguments: 0: $username (string), 1: $password (string). Returns (int|WP_Error).,hash,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] WP User info of types (['user_meta', 'user']) stored through WordPress function "wp_create_user($_POST["user_new"][$i], wp_generate_password())", found in file class-wp-import.php at line 342. 

[has_storage] WP User info of types (['user_meta', 'user']) stored through WordPress function "wp_insert_user($user_data)", found in file class-wp-import.php at line 352. 

[has_storage] Storage check is NONE 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['encryption', 'third_party'] 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? True 

No findings
