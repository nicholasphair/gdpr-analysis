Timeout in resolving values
Timeout in running neo4j query
Running Main.py on userplus

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:02.201818.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.487178.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 2 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.378978.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 1 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.692967.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 1076 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:01.469472.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 0 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.649696.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.119907.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 454 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:13.862978.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 8257
Added 6724 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 38733
Added 30476 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:03.693946.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/userplus/class-userplus.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/userplus/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/userplus/userplus.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/userplus/admin/admin-ajax.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/userplus/admin/admin-hook-actions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/userplus/admin/admin.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/userplus/admin/admin-post-metaboxes.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/userplus/admin/dashboard/dashboard.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/userplus/admin/dashboard/email_template.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/userplus/admin/dashboard/pending_approve.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/userplus/admin/dashboard/settings.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/userplus/admin/templates/form/userplus-admin-form-autologin.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/userplus/admin/templates/form/userplus-admin-form-builder.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/userplus/admin/templates/form/userplus-admin-form-role.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/userplus/admin/templates/form/userplus-admin-form-shortcode.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/userplus/admin/templates/form/userplus-admin-form-type.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/userplus/functions/ajax.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/userplus/functions/api.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/userplus/functions/default.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/userplus/functions/field_functions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/userplus/functions/hook-action.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/userplus/functions/initial_setup.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/userplus/functions/mail-functions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/userplus/functions/shortcode.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/userplus/functions/user-functions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/userplus/templates/edit.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/userplus/templates/forgot.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/userplus/templates/login.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/userplus/templates/profile.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/userplus/templates/register.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/userplus/templates/reset.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:02.536435.

2 PHP_REACHES edges created
1 REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
8254 PHP_REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
14000 PHP_REACHES edges created
15000 PHP_REACHES edges created
16000 PHP_REACHES edges created
17000 PHP_REACHES edges created
18000 PHP_REACHES edges created
19000 PHP_REACHES edges created
20000 PHP_REACHES edges created
21000 PHP_REACHES edges created
22000 PHP_REACHES edges created
23000 PHP_REACHES edges created
24000 PHP_REACHES edges created
25000 PHP_REACHES edges created
26000 PHP_REACHES edges created
27000 PHP_REACHES edges created
28000 PHP_REACHES edges created
29000 PHP_REACHES edges created
30000 PHP_REACHES edges created
30476 PHP_REACHES edges created
38733 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 2651 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.136328.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:01.011995.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 153 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:05.837706.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 140 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.172736.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.127200.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:01.393494.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.017439.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.042635.

293 PHP_REACHES edges created
293 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 195 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.154533.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
No SQL nodes to process.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:00.189700.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'$_POST_meta_key'' cannot be parsed correct.
HTML code '$'$_POST_arg2'' cannot be parsed correct.
HTML code '$'$_POST_type'' cannot be parsed correct.
HTML code '$'$_POST_meta_key'' cannot be parsed correct.
HTML code '$'ob_get_contents()'' cannot be parsed correct.
HTML code '$'ucfirst(get_post_meta($post_id, "userplus_form_type", true))'' cannot be parsed correct.
HTML code '$'[userplus id=$post_id]'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'$arg2'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'$arg2'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'$arg2'' cannot be parsed correct.
HTML code '$'ob_get_contents()'' cannot be parsed correct.
HTML code '$'$arg1'' cannot be parsed correct.
HTML code '$'$arg2'' cannot be parsed correct.
HTML code '$'ob_get_contents()'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'readonly'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$userplus->api->get_builtin_fields($arg1)_type'' cannot be parsed correct.
HTML code '$'$arg1'' cannot be parsed correct.
HTML code '$'$arg2'' cannot be parsed correct.
HTML code '$'$userplus->api->get_builtin_fields($arg1)_type'' cannot be parsed correct.
HTML code '$'$arg1'' cannot be parsed correct.
HTML code '$'ob_get_contents()'' cannot be parsed correct.
HTML code '$'get_option("userplus_custom_fields")_$arg1_type'' cannot be parsed correct.
HTML code '$'$arg1'' cannot be parsed correct.
HTML code '$'$arg2'' cannot be parsed correct.
HTML code '$'get_option("userplus_custom_fields")_$arg1_type'' cannot be parsed correct.
HTML code '$'$arg1'' cannot be parsed correct.
HTML code '$'ob_get_contents()'' cannot be parsed correct.
HTML code '$'$arg3'' cannot be parsed correct.
HTML code '$'$arg2'' cannot be parsed correct.
HTML code '$'$_POST_type'' cannot be parsed correct.
HTML code '$'<div class="updated"><p><strong>Settings saved.</strong></p></div>'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'<div class="updated"><p><strong>Settings are reset to default.</strong></p></div>'' cannot be parsed correct.
HTML code '$'<div class="updated"><p><strong>Reset form to default</strong></p></div>'' cannot be parsed correct.
HTML code '$'get_post_meta($object->ID, "fields", true)_get_post_meta($object->ID, "userplus_field_order", true)_0_type'' cannot be parsed correct.
HTML code '$'get_post_meta($object->ID, "userplus_field_order", true)_0'' cannot be parsed correct.
HTML code '$'$object'' cannot be parsed correct.
HTML code '$'get_post_meta($object->ID, "fields", true)_get_post_meta($object->ID, "userplus_field_order", true)_0_type'' cannot be parsed correct.
HTML code '$'get_post_meta($object->ID, "userplus_field_order", true)_0'' cannot be parsed correct.
HTML code '$'$object'' cannot be parsed correct.
HTML code '$'$object'' cannot be parsed correct.
HTML code '$'userplus_get_option("from_email_address")'' cannot be parsed correct.
HTML code '$'userplus_get_option("from_email_name")'' cannot be parsed correct.
HTML code '$'userplus_get_option("welcome_email_subject")'' cannot be parsed correct.
HTML code '$'userplus_get_option("welcome_email_content")'' cannot be parsed correct.
HTML code '$'userplus_get_option("passwordreset_subject")'' cannot be parsed correct.
HTML code '$'userplus_get_option("passwordreset_content")'' cannot be parsed correct.
HTML code '$'userplus_get_option("awaiting_admin_approval_s")'' cannot be parsed correct.
HTML code '$'userplus_get_option("awaiting_admin_approval_c")'' cannot be parsed correct.
HTML code '$'userplus_get_option("verify_email_s")'' cannot be parsed correct.
HTML code '$'userplus_get_option("verify_email_c")'' cannot be parsed correct.
HTML code '$'get_user_meta($user_id, "profile_pic", true)'' cannot be parsed correct.
HTML code '$'$pending_user'' cannot be parsed correct.
HTML code '$'$pending_user'' cannot be parsed correct.
HTML code '$'$pending_user'' cannot be parsed correct.
HTML code '$'selected(1, $form_autologin)'' cannot be parsed correct.
HTML code '$'selected(0, $form_autologin)'' cannot be parsed correct.
HTML code '$'json_encode($output)'' cannot be parsed correct.
HTML code '$'json_encode($ret)'' cannot be parsed correct.
HTML code '$'admin_url("admin-ajax.php")'' cannot be parsed correct.
HTML code '$'json_encode($output)'' cannot be parsed correct.
HTML code '$'json_encode($ret)'' cannot be parsed correct.
HTML code '$'json_encode($ret)'' cannot be parsed correct.
HTML code '$'$userplus->field_functions->edit_fields($key, $array)'' cannot be parsed correct.
HTML code '$'$atts_id'' cannot be parsed correct.
HTML code '$'USERPLUS_URLassets/images/cover.jpg'' cannot be parsed correct.
HTML code '$'USERPLUS_URLassets/images/profiledefault.png'' cannot be parsed correct.
HTML code '$'userplus_profile_details("display_name", $user_id)'' cannot be parsed correct.
HTML code '$'wp_logout_url()'' cannot be parsed correct.
HTML code '$'$userplus->field_functions->edit_fields($key, $array, $form_type, $user_id)'' cannot be parsed correct.
HTML code '$'USERPLUS_URLassets/images/loader.gif'' cannot be parsed correct.
HTML code '$'$form_type'' cannot be parsed correct.
HTML code '$'USERPLUS_URLassets/images/loader.gif'' cannot be parsed correct.
HTML code '$'$atts_id'' cannot be parsed correct.
HTML code '$'$userplus->field_functions->edit_fields($key, $array, $form_type)'' cannot be parsed correct.
HTML code '$'$atts_login_redirect'' cannot be parsed correct.
HTML code '$'$userplus->api->permalink(0, "register")'' cannot be parsed correct.
HTML code '$'USERPLUS_URLassets/images/loader.gif'' cannot be parsed correct.
HTML code '$'$atts_id'' cannot be parsed correct.
HTML code '$'USERPLUS_URLassets/images/cover.jpg'' cannot be parsed correct.
HTML code '$'USERPLUS_URLassets/images/profiledefault.png'' cannot be parsed correct.
HTML code '$'userplus_profile_details("display_name", $user_id)'' cannot be parsed correct.
HTML code '$'wp_logout_url()'' cannot be parsed correct.
HTML code '$'$userplus->field_functions->view_fields($key, $array, $form_type, $user_id)'' cannot be parsed correct.
HTML code '$'$form_type'' cannot be parsed correct.
HTML code '$'$atts_login_redirect'' cannot be parsed correct.
HTML code '$'get_post_meta($atts["id"], "userplus_form_role", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($atts["id"], "userplus_form_autologin", true)'' cannot be parsed correct.
HTML code '$'$userplus->api->permalink(0, "login")'' cannot be parsed correct.
HTML code '$'USERPLUS_URLassets/images/loader.gif'' cannot be parsed correct.
HTML code '$'USERPLUS_URLassets/images/loader.gif'' cannot be parsed correct.
HTML code '$'<span></div>
					<div class="userplus-admin-field-operations">
					<div></div>
					<div class="userplus-admin-delete-field"><a href="#">'' cannot be parsed correct.
HTML code '$'" data-action="userplus_admin_popup_edit_field" >Edit</a>
						<input type="hidden" name="userplus_field_order[]" value="'' cannot be parsed correct.
HTML code '$'</a>
					'' cannot be parsed correct.
HTML code '$'</a>
						'' cannot be parsed correct.
HTML code '$'</a>
						'' cannot be parsed correct.
HTML code '$'" data-arg2="'' cannot be parsed correct.
HTML code '$'</label><br>
						<input type="text" name="title" id="title" value="'' cannot be parsed correct.
HTML code '$'</label><br>
						<input type="text" name="label" id="label" value="'' cannot be parsed correct.
HTML code '$'</label><br>
						<input type="text" name="meta_key" id="meta_key" value="'' cannot be parsed correct.
HTML code '$'</label><br>
						<input type="text" name="placeholder" id="placeholder" value="'' cannot be parsed correct.
HTML code '$'</label><br>
						<select name="is_required" id="is_required" >
							<option value="1" '' cannot be parsed correct.
HTML code '$'</option>
							<option value="0" '' cannot be parsed correct.
HTML code '$'</option>
						</select>
					</p>	
					'' cannot be parsed correct.
HTML code '$'</label><br>
						<input type="text" name="help_text" id="help_text" value="'' cannot be parsed correct.
HTML code '$'</label><br>
						<select name="privacy" id="privacy" class="">
							<option value="1" '' cannot be parsed correct.
HTML code '$'</label><br>
						<input type="text" name="default_value" id="default_value" value="'' cannot be parsed correct.
HTML code '$'">
					<div class="userplus-admin-field-name">'' cannot be parsed correct.
HTML code '$'<span></div>
					<div class="userplus-admin-field-operations">
					<div class="userplus-admin-delete-field"><a href="#">'' cannot be parsed correct.
HTML code '$'" data-action="userplus_admin_popup_edit_field">Edit</a>
						<input type="hidden" name="userplus_field_order[]" value="'' cannot be parsed correct.
HTML code '$'">
					<div class="userplus-admin-field-name">'' cannot be parsed correct.
HTML code '$'<span></div>
					<div class="userplus-admin-field-operations">
					<div class="userplus-admin-delete-field"><a href="#">'' cannot be parsed correct.
HTML code '$'" data-action="userplus_admin_popup_edit_field">Edit</a>
						<input type="hidden" name="userplus_field_order[]" value="'' cannot be parsed correct.
HTML code '$'" data-arg2="'' cannot be parsed correct.
HTML code '$'">
					<div class="userplus-admin-field-name">'' cannot be parsed correct.
HTML code '$'</label><br>
						<select name="user_edit" id="user_edit" class="">
							<option value="1" '' cannot be parsed correct.
HTML code '$'</label><br>
						<input type="text" name="icon" id="icon" value="'' cannot be parsed correct.
HTML code '$'</label><br>
						<input type="text" name="min_length" id="min_length" value="'' cannot be parsed correct.
HTML code '$'</label><br>
						<input type="text" name="max_length" id="max_length" value="'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'</label><br>
						<input type="text" name="upload_button_text" id="upload_button_text" value="'' cannot be parsed correct.
HTML code '$'</label><br>
						<textarea name="edit_choices" id="edit_choices">'' cannot be parsed correct.
HTML code '$'">
					<div class="userplus-admin-field-name">'' cannot be parsed correct.
HTML code '$'<span></div>
					<div class="userplus-admin-field-operations">
					 <span class="userplus-admin-delete-field"><a href="#">'' cannot be parsed correct.
HTML code '$'" data-action="userplus_admin_popup_edit_field" >'' cannot be parsed correct.
HTML code '$'</div>
<div class="form_head"><input type = "radio" name ="userplus_form_type" value = "login" '' cannot be parsed correct.
HTML code '$'</div>
<div class="form_head"><input type = "radio" name ="userplus_form_type" value = "profile" '' cannot be parsed correct.
HTML code '$'</div>
</div>
'' cannot be parsed correct.
HTML code '$'</a>
 			</div>
 		</div>
 	</div>
 	<div class="userplus-profile-right">
 	</div>
 	<div class="userplus-clear"></div>
</div>	
	<div class="plugin_slug-form userplus-profile-content">
	  
		<form method="post" action="">
'' cannot be parsed correct.
HTML code '$'</a>
 			</div>
 		</div>
 	</div>
 	<div class="userplus-profile-right">
 	</div>
 	<div class="userplus-clear"></div>
</div>	
<div class="userplus-profile-content">
	'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:14.534987.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.044863.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 2 do_action/apply_filters calls and 31 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:01.271830.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FileProDetector
### Start running FrontBaseDetector
### Finish running DbaseDetector
### Start running HashDetector
### Finish running DbplusDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running FirebirdInterBaseDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running jQueryRequestDetector
### Finish running IBMDb2Detector
### Start running maxdbDetector
### Finish running HashDetector
### Start running MongoDbDetector
### Finish running InformixDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IngresDetector
### Start running MySQLDetector
### Finish running MySQLDetector
### Start running MySQLiDetector
### Finish running MongoDbDetector
### Start running Oci8Detector
### Finish running MsqlDetector
### Start running OpenSSLDetector
### Finish running OpenSSLDetector
### Start running ParadoxDetector
### Finish running Oci8Detector
### Start running PasswordHashingDetector
### Finish running ArrayElementDetector
### Start running PhpCurlDetector
### Finish running ParadoxDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PhpCurlDetector
### Start running PHPRetrievalDetector
### Finish running PasswordHashingDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPStorageDetector
### Start running PhpVarDetector
### Finish running PHPIncludedDetector
### Start running PostgreSQLDetector
### Finish running PhpVarDetector
### Start running PropertyDetector
### Finish running PHPRetrievalDetector
### Start running Sqlite3Detector
### Finish running jQueryRequestDetector
### Start running SqliteDetector
### Finish running PostgreSQLDetector
### Start running SqlServerDetector
### Finish running Sqlite3Detector
### Start running SybaseDetector
### Finish running PropertyDetector
### Start running TokyoTyrantDetector
### Finish running SqliteDetector
### Start running UserInputDetector
### Finish running TokyoTyrantDetector
### Start running VariableDetector
### Finish running SqlServerDetector
### Start running WordpressHashingFnDetector
### Finish running SybaseDetector
### Start running WordPressRemoteDetector
### Finish running WordPressRemoteDetector
### Start running WordPressRetrievalDetector
### Finish running UserInputDetector
### Start running WordPressStorageDetector
### Finish running WordpressHashingFnDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running maxdbDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running MySQLiDetector
### Start running UninstallDetector
### Finish running GenericDatabaseUsageDetector
### Finish running VariableDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running WordPressStorageDetector
### Finish running WordPressRetrievalDetector
### Finished running detectors
functions/ajax.php:45
  - Request variable '$_POST["user_email"]' of personal types {'email'} is found.
  - Data types: email
functions/ajax.php:47
  - Request variable '$_POST["user_email"]' of personal types {'email'} is found.
  - Data types: email
functions/ajax.php:47
  - Request variable '$_POST["user_email"]' of personal types {'email'} is found.
  - Data types: email
functions/ajax.php:48
  - Request variable '$_POST["user_pass"]' of personal types {'password'} is found.
  - Data types: password
functions/ajax.php:51
  - Request variable '$_POST["user_pass"]' of personal types {'password'} is found.
  - Data types: password
functions/ajax.php:54
  - Request variable '$_POST["user_email"]' of personal types {'email'} is found.
  - Data types: email
functions/ajax.php:55
  - Request variable '$_POST["user_email"]' of personal types {'email'} is found.
  - Data types: email
functions/ajax.php:62
  - Request variable '$_POST["user_email"]' of personal types {'email'} is found.
  - Data types: email
functions/ajax.php:67
  - Request variable '$_POST["user_email"]' of personal types {'email'} is found.
  - Data types: email
functions/ajax.php:99
  - Request variable '$_POST["username"]' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
functions/ajax.php:102
  - Request variable '$_POST["user_pass"]' of personal types {'password'} is found.
  - Data types: password
functions/ajax.php:138
  - Request variable '$_POST["user_email"]' of personal types {'email'} is found.
  - Data types: email
functions/ajax.php:162
  - Request variable '$_POST["user_pass"]' of personal types {'password'} is found.
  - Data types: password 

None:8
  - External request to possible URLs [].
  - Data types: remote
None:18
  - External request to possible URLs [].
  - Data types: remote
None:63
  - External request to possible URLs [].
  - Data types: remote
None:74
  - External request to possible URLs [].
  - Data types: remote
None:81
  - External request to possible URLs [].
  - Data types: remote
None:106
  - External request to possible URLs [].
  - Data types: remote
None:119
  - External request to possible URLs [].
  - Data types: remote 

functions/ajax.php:193
  - RETRIEVAL call to $finfo->file($_FILES["userplus_uploaded_file"]["tmp_name"], FILEINFO_MIME_TYPE).
  - Data types: file 

admin/dashboard/pending_approve.php:32
  - object property '$pending_user->user_email' of personal types {'email'} is found.
  - Data types: email
functions/mail-functions.php:29
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
functions/mail-functions.php:103
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
functions/user-functions.php:27
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email 

functions/ajax.php:49
  - variable '$user_pass' of personal types {'password'} is found.
  - Data types: password
functions/ajax.php:51
  - variable '$user_pass' of personal types {'password'} is found.
  - Data types: password
functions/ajax.php:67
  - variable '$user_pass' of personal types {'password'} is found.
  - Data types: password
functions/ajax.php:89
  - variable '$user_pass' of personal types {'password'} is found.
  - Data types: password
functions/ajax.php:92
  - variable '$user_pass' of personal types {'password'} is found.
  - Data types: password
functions/ajax.php:99
  - variable '$username_or_email' of personal types {'user', 'user_meta', 'email'} is found.
  - Data types: user, user_meta, email
functions/ajax.php:99
  - variable '$username_or_email' of personal types {'user', 'user_meta', 'email'} is found.
  - Data types: user, user_meta, email
functions/ajax.php:101
  - variable '$username_or_email' of personal types {'user', 'user_meta', 'email'} is found.
  - Data types: user, user_meta, email
functions/ajax.php:101
  - variable '$username_or_email' of personal types {'user', 'user_meta', 'email'} is found.
  - Data types: user, user_meta, email
functions/ajax.php:138
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
functions/ajax.php:139
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
functions/ajax.php:140
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
functions/api.php:114
  - variable '$user_password' of personal types {'password'} is found.
  - Data types: password
functions/api.php:116
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
functions/api.php:196
  - variable '$user_pass' of personal types {'password'} is found.
  - Data types: password
functions/api.php:204
  - variable '$user_pass' of personal types {'password'} is found.
  - Data types: password
functions/default.php:34
  - variable '$mail_verifyemail' of personal types {'email'} is found.
  - Data types: email
functions/default.php:35
  - variable '$mail_verifyemail' of personal types {'email'} is found.
  - Data types: email
functions/default.php:36
  - variable '$mail_verifyemail' of personal types {'email'} is found.
  - Data types: email
functions/default.php:37
  - variable '$mail_verifyemail' of personal types {'email'} is found.
  - Data types: email
functions/default.php:38
  - variable '$mail_verifyemail' of personal types {'email'} is found.
  - Data types: email
functions/default.php:39
  - variable '$mail_verifyemail' of personal types {'email'} is found.
  - Data types: email
functions/default.php:55
  - variable '$mail_verifyemail' of personal types {'email'} is found.
  - Data types: email
functions/mail-functions.php:16
  - variable '$email_template' of personal types {'email'} is found.
  - Data types: email
functions/mail-functions.php:57
  - variable '$email_template' of personal types {'email'} is found.
  - Data types: email
functions/mail-functions.php:59
  - variable '$email_template' of personal types {'email'} is found.
  - Data types: email
functions/mail-functions.php:69
  - variable '$email_template' of personal types {'email'} is found.
  - Data types: email
functions/mail-functions.php:71
  - variable '$email_template' of personal types {'email'} is found.
  - Data types: email
functions/mail-functions.php:79
  - variable '$email_template' of personal types {'email'} is found.
  - Data types: email
functions/mail-functions.php:81
  - variable '$email_template' of personal types {'email'} is found.
  - Data types: email
functions/mail-functions.php:87
  - variable '$email_template' of personal types {'email'} is found.
  - Data types: email
functions/mail-functions.php:89
  - variable '$email_template' of personal types {'email'} is found.
  - Data types: email
functions/mail-functions.php:94
  - variable '$email_template' of personal types {'email'} is found.
  - Data types: email
functions/mail-functions.php:96
  - variable '$email_template' of personal types {'email'} is found.
  - Data types: email
functions/user-functions.php:58
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
functions/user-functions.php:60
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
functions/user-functions.php:62
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
functions/user-functions.php:65
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
functions/user-functions.php:67
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
functions/user-functions.php:69
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta 

functions/ajax.php:162
  - CRYPTOGRAPHY call to wp_update_user(["ID" => $user_id, "user_pass" => $_POST["user_pass"]]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
functions/user-functions.php:47
  - CRYPTOGRAPHY call to wp_update_user(["ID" => $user_id, $key => $form_value]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta 

admin/admin-ajax.php:62
  - RETRIEVAL call to get_option("userplus_custom_fields") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/admin-ajax.php:111
  - RETRIEVAL call to get_post_meta($arg2, "fields", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/admin-ajax.php:135
  - RETRIEVAL call to get_post_meta($arg2, "fields", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/admin-ajax.php:136
  - RETRIEVAL call to get_option("userplus_custom_fields") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/admin-ajax.php:163
  - RETRIEVAL call to get_post_meta($arg2, "fields", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/admin-ajax.php:187
  - RETRIEVAL call to get_post_meta($_POST["arg2"], "fields", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/admin-ajax.php:192
  - RETRIEVAL call to get_option("userplus_custom_fields") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/admin-ajax.php:217
  - RETRIEVAL call to get_post_meta($_POST["arg2"], "fields", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/admin-hook-actions.php:26
  - RETRIEVAL call to get_post_meta($post_id, "userplus_form_type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/admin-post-metaboxes.php:32
  - RETRIEVAL call to get_post_meta($post->ID, "userplus_form_type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/admin.php:18
  - RETRIEVAL call to get_option("userplus") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/dashboard/pending_approve.php:14
  - RETRIEVAL call to get_users($meta_query_args) alters data types {'user', 'user_meta'}. Passed arguments: 0: $args (array). Returns (array).
  - Data types: user, user_meta
admin/dashboard/pending_approve.php:20
  - RETRIEVAL call to get_user_meta($user_id, "profile_pic", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
admin/templates/form/userplus-admin-form-autologin.php:2
  - RETRIEVAL call to get_post_meta($object->ID, "userplus_form_autologin", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/templates/form/userplus-admin-form-builder.php:4
  - RETRIEVAL call to get_post_meta($object->ID, "fields", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/templates/form/userplus-admin-form-builder.php:5
  - RETRIEVAL call to get_post_meta($object->ID, "userplus_field_order", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/templates/form/userplus-admin-form-role.php:2
  - RETRIEVAL call to get_post_meta($object->ID, "userplus_form_role", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/templates/form/userplus-admin-form-type.php:2
  - RETRIEVAL call to get_post_meta($object->ID, "userplus_form_type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
functions/ajax.php:90
  - RETRIEVAL call to get_option("userplus_default_login") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
functions/ajax.php:93
  - RETRIEVAL call to get_option("userplus_default_login") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
functions/ajax.php:111
  - RETRIEVAL call to get_user_meta($user->ID, "userplus_account_status", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
functions/ajax.php:114
  - RETRIEVAL call to get_user_meta($user->ID, "userplus_account_status", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
functions/ajax.php:140
  - RETRIEVAL call to get_user_by("email", $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
functions/ajax.php:152
  - RETRIEVAL call to get_users(["meta_key" => "userplus_secret_key", "meta_value" => $_POST["secretkey"], "meta_compare" => "="]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $args (array). Returns (array).
  - Data types: user, user_meta
functions/api.php:143
  - RETRIEVAL call to get_option($option) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
functions/api.php:147
  - RETRIEVAL call to get_option("userplus_pages") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
functions/api.php:182
  - RETRIEVAL call to get_user_meta($user_id, "_account_verify", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
functions/api.php:215
  - RETRIEVAL call to get_user_meta($_GET["user_id"], "_account_verify", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
functions/api.php:228
  - RETRIEVAL call to get_user_meta($user_id, "_account_status", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
functions/api.php:237
  - RETRIEVAL call to get_user_meta($user_id, "_pending_pass", true) alters data types {'user_meta', 'password'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta, password
functions/api.php:238
  - RETRIEVAL call to get_user_meta($user_id, "_pending_form", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
functions/default.php:5
  - RETRIEVAL call to get_option("userplus") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
functions/default.php:22
  - RETRIEVAL call to get_option("userplus") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
functions/initial_setup.php:19
  - RETRIEVAL call to get_option("userpro_pages") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
functions/initial_setup.php:57
  - RETRIEVAL call to get_option("userplus_pages") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
functions/initial_setup.php:77
  - RETRIEVAL call to get_post($logout_page, ARRAY_A) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 1: $output (string), 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: wp_post, post, post_meta
functions/initial_setup.php:103
  - RETRIEVAL call to get_post($parent, ARRAY_A) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 1: $output (string), 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: wp_post, post, post_meta
functions/initial_setup.php:125
  - RETRIEVAL call to get_post($edit, ARRAY_A) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 1: $output (string), 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: wp_post, post, post_meta
functions/initial_setup.php:150
  - RETRIEVAL call to get_post($register, ARRAY_A) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 1: $output (string), 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: wp_post, post, post_meta
functions/initial_setup.php:182
  - RETRIEVAL call to get_post($login, ARRAY_A) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 1: $output (string), 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: wp_post, post, post_meta
functions/mail-functions.php:15
  - RETRIEVAL call to get_option("userplus_general_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
functions/mail-functions.php:16
  - RETRIEVAL call to get_option("userplus_email_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
functions/mail-functions.php:18
  - RETRIEVAL call to get_userdata($id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
functions/mail-functions.php:40
  - RETRIEVAL call to get_userdata($from_user) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
functions/shortcode.php:17
  - RETRIEVAL call to get_post_meta($atts["id"], "userplus_form_type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
functions/shortcode.php:24
  - RETRIEVAL call to get_option("userplus_default_profile") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
functions/shortcode.php:36
  - RETRIEVAL call to get_option("userplus_default_profile") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
functions/shortcode.php:63
  - RETRIEVAL call to get_option("userplus_default_login") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
functions/user-functions.php:5
  - RETRIEVAL call to get_userdata($user_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
functions/user-functions.php:10
  - RETRIEVAL call to get_user_meta($user_id, $field, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
functions/user-functions.php:58
  - RETRIEVAL call to get_user_by("login", $username) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
functions/user-functions.php:60
  - RETRIEVAL call to wp_set_current_user($user_id, $username) alters data types {'user_meta'}. Passed arguments: 0: $id (int), 1: $name (string). Returns (WP_User).
  - Data types: user_meta
functions/user-functions.php:65
  - RETRIEVAL call to get_user_by("login", $username) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
functions/user-functions.php:67
  - RETRIEVAL call to wp_set_current_user($user_id, $username) alters data types {'user_meta'}. Passed arguments: 0: $id (int), 1: $name (string). Returns (WP_User).
  - Data types: user_meta
functions/user-functions.php:77
  - RETRIEVAL call to get_user_by("login", get_query_var("up_username")) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
functions/user-functions.php:88
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
functions/user-functions.php:97
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
templates/edit.php:4
  - RETRIEVAL call to get_user_meta($user_id, "profile_background_pic", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
templates/edit.php:8
  - RETRIEVAL call to get_user_meta($user_id, "profile_pic", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
templates/edit.php:42
  - RETRIEVAL call to get_post_meta($atts["id"], "userplus_field_order", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
templates/edit.php:43
  - RETRIEVAL call to get_post_meta($atts["id"], "fields", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
templates/login.php:23
  - RETRIEVAL call to get_post_meta($atts["id"], "userplus_field_order", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
templates/login.php:24
  - RETRIEVAL call to get_post_meta($atts["id"], "fields", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
templates/profile.php:4
  - RETRIEVAL call to get_user_meta($user_id, "profile_background_pic", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
templates/profile.php:8
  - RETRIEVAL call to get_user_meta($user_id, "profile_pic", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
templates/profile.php:39
  - RETRIEVAL call to get_post_meta($atts["id"], "userplus_field_order", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
templates/profile.php:40
  - RETRIEVAL call to get_post_meta($atts["id"], "fields", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
templates/register.php:16
  - RETRIEVAL call to get_post_meta($atts["id"], "userplus_field_order", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
templates/register.php:17
  - RETRIEVAL call to get_post_meta($atts["id"], "fields", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
templates/register.php:27
  - RETRIEVAL call to get_post_meta($atts["id"], "userplus_form_role", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
templates/register.php:30
  - RETRIEVAL call to get_post_meta($atts["id"], "userplus_form_autologin", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta 

admin/admin-ajax.php:114
  - STORAGE call to update_post_meta($arg2, "fields", $fields) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/admin-ajax.php:139
  - STORAGE call to update_post_meta($arg2, "fields", $fields) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/admin-ajax.php:191
  - STORAGE call to update_post_meta($_POST["arg2"], "fields", $fields) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/admin-ajax.php:194
  - STORAGE call to update_option("userplus_custom_fields", $fields) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/admin-ajax.php:221
  - STORAGE call to update_post_meta($_POST["arg2"], "fields", $fields) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/admin-ajax.php:227
  - STORAGE call to delete_user_meta($user_id, "userplus_account_status") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
admin/admin-post-metaboxes.php:54
  - STORAGE call to update_post_meta($post_id, "userplus_form_type", $_POST["userplus_form_type"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/admin-post-metaboxes.php:58
  - STORAGE call to update_post_meta($post_id, "userplus_field_order", $_POST["userplus_field_order"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/admin-post-metaboxes.php:62
  - STORAGE call to update_post_meta($post_id, "userplus_form_role", $_POST["userplus_form_role"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/admin-post-metaboxes.php:66
  - STORAGE call to update_post_meta($post_id, "userplus_form_autologin", $_POST["userplus_form_autologin"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/admin.php:86
  - STORAGE call to update_option("userplus", userplus_default_options()) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/admin.php:120
  - STORAGE call to update_option("userplus", $userplus_options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
functions/ajax.php:142
  - STORAGE call to update_user_meta($user->ID, "userplus_secret_key", $uniquekey) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
functions/ajax.php:162
  - STORAGE call to wp_update_user(["ID" => $user_id, "user_pass" => $_POST["user_pass"]]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
functions/api.php:112
  - STORAGE call to wp_insert_user(["user_login" => $user_login, "user_pass" => $user_password, "display_name" => sanitize_title($user_login), "user_email" => $user_email]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
functions/api.php:194
  - STORAGE call to update_user_meta($user_id, "userplus_account_verify", $new_account_salt) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
functions/api.php:195
  - STORAGE call to update_user_meta($user_id, "userplus_account_status", "pending") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
functions/api.php:196
  - STORAGE call to update_user_meta($user_id, "userplus_pending_pass", $user_pass) alters data types {'user_meta', 'password'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta, password
functions/api.php:197
  - STORAGE call to update_user_meta($user_id, "userplus_pending_form", $form) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
functions/api.php:203
  - STORAGE call to update_user_meta($user_id, "userplus_account_status", "pending_admin") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
functions/api.php:204
  - STORAGE call to update_user_meta($user_id, "userplus_pending_pass", $user_pass) alters data types {'user_meta', 'password'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta, password
functions/api.php:205
  - STORAGE call to update_user_meta($user_id, "userplus_pending_form", $form) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
functions/api.php:235
  - STORAGE call to delete_user_meta($user_id, "_account_verify") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
functions/api.php:236
  - STORAGE call to update_user_meta($user_id, "_account_status", "active") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
functions/default.php:24
  - STORAGE call to update_option("userplus", $settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
functions/initial_setup.php:27
  - STORAGE call to wp_delete_post($page_id, true) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: wp_post, post, post_meta
functions/initial_setup.php:32
  - STORAGE call to delete_option("userpro_pages") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
functions/initial_setup.php:75
  - STORAGE call to wp_insert_post($logout_page). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
functions/initial_setup.php:88
  - STORAGE call to wp_insert_post($parent). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
functions/initial_setup.php:98
  - STORAGE call to wp_insert_post($default_profile_form). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
functions/initial_setup.php:100
  - STORAGE call to update_option("userplus_default_profile", $default_profile_form) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
functions/initial_setup.php:101
  - STORAGE call to wp_update_post(["ID" => $parent, "post_content" => $post_content]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
functions/initial_setup.php:109
  - STORAGE call to update_post_meta($default_profile_form, "fields", $fields) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
functions/initial_setup.php:110
  - STORAGE call to update_post_meta($default_profile_form, "userplus_field_order", $default_fields) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
functions/initial_setup.php:111
  - STORAGE call to update_post_meta($default_profile_form, "userplus_form_type", "profile") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
functions/initial_setup.php:121
  - STORAGE call to wp_insert_post($edit). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
functions/initial_setup.php:123
  - STORAGE call to wp_update_post(["ID" => $edit, "post_content" => $post_content]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
functions/initial_setup.php:137
  - STORAGE call to wp_insert_post($register). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
functions/initial_setup.php:146
  - STORAGE call to wp_insert_post($default_register_form). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
functions/initial_setup.php:148
  - STORAGE call to wp_update_post(["ID" => $register, "post_content" => $post_content]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
functions/initial_setup.php:156
  - STORAGE call to update_post_meta($default_register_form, "fields", $fields) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
functions/initial_setup.php:157
  - STORAGE call to update_post_meta($default_register_form, "userplus_field_order", $default_fields) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
functions/initial_setup.php:158
  - STORAGE call to update_post_meta($default_register_form, "userplus_form_type", "register") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
functions/initial_setup.php:168
  - STORAGE call to wp_insert_post($login). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
functions/initial_setup.php:177
  - STORAGE call to wp_insert_post($default_login_form). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
functions/initial_setup.php:178
  - STORAGE call to update_option("userplus_default_login", $default_login_form) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
functions/initial_setup.php:180
  - STORAGE call to wp_update_post(["ID" => $login, "post_content" => $post_content]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
functions/initial_setup.php:188
  - STORAGE call to update_post_meta($default_login_form, "fields", $fields) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
functions/initial_setup.php:189
  - STORAGE call to update_post_meta($default_login_form, "userplus_field_order", $default_fields) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
functions/initial_setup.php:190
  - STORAGE call to update_post_meta($default_login_form, "userplus_form_type", "login") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
functions/initial_setup.php:191
  - STORAGE call to update_option("userplus_pages", $pages) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
functions/user-functions.php:47
  - STORAGE call to wp_update_user(["ID" => $user_id, $key => $form_value]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
functions/user-functions.php:50
  - STORAGE call to update_user_meta($user_id, $key, $form_value) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta 

admin/admin-ajax.php:227
  - DELETION call to delete_user_meta($user_id, "userplus_account_status") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
functions/api.php:235
  - DELETION call to delete_user_meta($user_id, "_account_verify") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
functions/initial_setup.php:27
  - DELETION call to wp_delete_post($page_id, true) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: wp_post, post, post_meta
functions/initial_setup.php:32
  - DELETION call to delete_option("userpro_pages") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

By data type:
email
	ArrayElementDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'user', 'user_meta', 'email'}
	ArrayElementDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'user', 'user_meta', 'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'user', 'user_meta', 'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'user', 'user_meta', 'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
file
	PHPRetrievalDetector.$finfo->file($_FILES["userplus_uploaded_file"]["tmp_name"], FILEINFO_MIME_TYPE) - {'file'}
none
	WordPressStorageDetector.wp_update_post(["ID" => $parent, "post_content" => $post_content]) - set()
	WordPressStorageDetector.wp_insert_post($edit) - set()
	WordPressStorageDetector.wp_insert_post($register) - set()
	WordPressStorageDetector.wp_update_post(["ID" => $register, "post_content" => $post_content]) - set()
	WordPressStorageDetector.wp_insert_post($parent) - set()
	WordPressStorageDetector.wp_insert_post($login) - set()
	WordPressStorageDetector.wp_insert_post($default_login_form) - set()
	WordPressStorageDetector.wp_insert_post($logout_page) - set()
	WordPressStorageDetector.wp_insert_post($default_profile_form) - set()
	WordPressStorageDetector.wp_update_post(["ID" => $edit, "post_content" => $post_content]) - set()
	WordPressStorageDetector.wp_insert_post($default_register_form) - set()
	WordPressStorageDetector.wp_update_post(["ID" => $login, "post_content" => $post_content]) - set()
option
	WordPressRetrievalDetector.get_option("userplus_general_settings") - {'option'}
	WordPressRetrievalDetector.get_option("userplus_default_profile") - {'option'}
	WordPressRetrievalDetector.get_option("userplus_custom_fields") - {'option'}
	DeletionDetector.delete_option("userpro_pages") - {'option'}
	WordPressRetrievalDetector.get_option("userplus_email_settings") - {'option'}
	WordPressStorageDetector.update_option("userplus_default_login", $default_login_form) - {'option'}
	WordPressStorageDetector.update_option("userplus_custom_fields", $fields) - {'option'}
	WordPressRetrievalDetector.get_option("userplus_pages") - {'option'}
	WordPressRetrievalDetector.get_option("userpro_pages") - {'option'}
	WordPressRetrievalDetector.get_option("userplus") - {'option'}
	WordPressRetrievalDetector.get_option("userplus_default_login") - {'option'}
	WordPressStorageDetector.update_option("userplus_default_profile", $default_profile_form) - {'option'}
	WordPressRetrievalDetector.get_option("userplus_custom_fields") - {'option'}
	WordPressRetrievalDetector.get_option("userplus") - {'option'}
	WordPressRetrievalDetector.get_option("userplus_default_login") - {'option'}
	WordPressRetrievalDetector.get_option("userplus_default_profile") - {'option'}
	WordPressRetrievalDetector.get_option("userplus_pages") - {'option'}
	WordPressStorageDetector.delete_option("userpro_pages") - {'option'}
	WordPressRetrievalDetector.get_option("userplus_default_login") - {'option'}
	WordPressStorageDetector.update_option("userplus", $settings) - {'option'}
	WordPressStorageDetector.update_option("userplus_pages", $pages) - {'option'}
	WordPressRetrievalDetector.get_option("userplus") - {'option'}
	WordPressStorageDetector.update_option("userplus", userplus_default_options()) - {'option'}
	WordPressRetrievalDetector.get_option($option) - {'option'}
	WordPressRetrievalDetector.get_option("userplus_custom_fields") - {'option'}
	WordPressStorageDetector.update_option("userplus", $userplus_options) - {'option'}
password
	VariableDetector.(unknown) - {'password'}
	ArrayElementDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
	WordPressStorageDetector.update_user_meta($user_id, "userplus_pending_pass", $user_pass) - {'user_meta', 'password'}
	ArrayElementDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
	ArrayElementDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
	WordPressStorageDetector.update_user_meta($user_id, "userplus_pending_pass", $user_pass) - {'user_meta', 'password'}
	ArrayElementDetector.(unknown) - {'password'}
	WordPressRetrievalDetector.get_user_meta($user_id, "_pending_pass", true) - {'user_meta', 'password'}
	VariableDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
post
	WordPressRetrievalDetector.get_post($parent, ARRAY_A) - {'wp_post', 'post', 'post_meta'}
	WordPressStorageDetector.wp_delete_post($page_id, true) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post($logout_page, ARRAY_A) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post($login, ARRAY_A) - {'wp_post', 'post', 'post_meta'}
	DeletionDetector.wp_delete_post($page_id, true) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post($edit, ARRAY_A) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post($register, ARRAY_A) - {'wp_post', 'post', 'post_meta'}
post_meta
	WordPressRetrievalDetector.get_post_meta($arg2, "fields", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($arg2, "fields", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($default_profile_form, "fields", $fields) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($default_profile_form, "userplus_field_order", $default_fields) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($atts["id"], "userplus_field_order", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($default_login_form, "userplus_form_type", "login") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "userplus_form_autologin", $_POST["userplus_form_autologin"]) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($atts["id"], "fields", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($atts["id"], "userplus_field_order", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($default_register_form, "userplus_field_order", $default_fields) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($atts["id"], "userplus_form_autologin", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($default_register_form, "fields", $fields) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($atts["id"], "fields", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($object->ID, "userplus_form_autologin", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($_POST["arg2"], "fields", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "userplus_form_type", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($default_profile_form, "userplus_form_type", "profile") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($arg2, "fields", $fields) - {'post_meta'}
	WordPressRetrievalDetector.get_post($parent, ARRAY_A) - {'wp_post', 'post', 'post_meta'}
	WordPressStorageDetector.wp_delete_post($page_id, true) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post_meta($atts["id"], "userplus_field_order", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($atts["id"], "userplus_form_type", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($atts["id"], "userplus_field_order", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($atts["id"], "fields", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($atts["id"], "fields", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($object->ID, "userplus_form_role", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($object->ID, "userplus_form_type", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($arg2, "fields", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($_POST["arg2"], "fields", $fields) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($arg2, "fields", $fields) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($default_register_form, "userplus_form_type", "register") - {'post_meta'}
	WordPressRetrievalDetector.get_post($logout_page, ARRAY_A) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post_meta($object->ID, "fields", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($login, ARRAY_A) - {'wp_post', 'post', 'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "userplus_form_role", $_POST["userplus_form_role"]) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "userplus_form_type", true) - {'post_meta'}
	DeletionDetector.wp_delete_post($page_id, true) - {'wp_post', 'post', 'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "userplus_field_order", $_POST["userplus_field_order"]) - {'post_meta'}
	WordPressRetrievalDetector.get_post($edit, ARRAY_A) - {'wp_post', 'post', 'post_meta'}
	WordPressStorageDetector.update_post_meta($_POST["arg2"], "fields", $fields) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($object->ID, "userplus_field_order", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($atts["id"], "userplus_form_role", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($default_login_form, "fields", $fields) - {'post_meta'}
	WordPressRetrievalDetector.get_post($register, ARRAY_A) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post_meta($_POST["arg2"], "fields", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "userplus_form_type", $_POST["userplus_form_type"]) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($default_login_form, "userplus_field_order", $default_fields) - {'post_meta'}
remote
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
user
	VariableDetector.(unknown) - {'user', 'user_meta', 'email'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.wp_update_user(["ID" => $user_id, $key => $form_value]) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_users($meta_query_args) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", $username) - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_update_user(["ID" => $user_id, "user_pass" => $_POST["user_pass"]]) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta', 'email'}
	WordpressHashingFnDetector.wp_update_user(["ID" => $user_id, $key => $form_value]) - {'user', 'user_meta'}
	WordPressStorageDetector.wp_insert_user(["user_login" => $user_login, "user_pass" => $user_password, "display_name" => sanitize_title($user_login), "user_email" => $user_email]) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $email) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta', 'email'}
	WordPressRetrievalDetector.get_users(["meta_key" => "userplus_secret_key", "meta_value" => $_POST["secretkey"], "meta_compare" => "="]) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($id) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", $username) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($user_id) - {'user', 'user_meta'}
	ArrayElementDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressStorageDetector.wp_update_user(["ID" => $user_id, "user_pass" => $_POST["user_pass"]]) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta', 'email'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($from_user) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", get_query_var("up_username")) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
user_meta
	WordPressRetrievalDetector.get_user_meta($user_id, "profile_background_pic", true) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta', 'email'}
	WordPressRetrievalDetector.get_user_meta($user_id, "profile_pic", true) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id, "profile_background_pic", true) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_set_current_user($user_id, $username) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id, $field, true) - {'user_meta'}
	WordPressStorageDetector.wp_update_user(["ID" => $user_id, $key => $form_value]) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id, "profile_pic", true) - {'user_meta'}
	WordPressRetrievalDetector.get_users($meta_query_args) - {'user', 'user_meta'}
	WordPressStorageDetector.delete_user_meta($user_id, "_account_verify") - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($_GET["user_id"], "_account_verify", true) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "userplus_pending_pass", $user_pass) - {'user_meta', 'password'}
	WordPressRetrievalDetector.get_user_by("login", $username) - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_update_user(["ID" => $user_id, "user_pass" => $_POST["user_pass"]]) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, $key, $form_value) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta', 'email'}
	WordpressHashingFnDetector.wp_update_user(["ID" => $user_id, $key => $form_value]) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id, "profile_pic", true) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "userplus_account_status", "pending_admin") - {'user_meta'}
	WordPressStorageDetector.wp_insert_user(["user_login" => $user_login, "user_pass" => $user_password, "display_name" => sanitize_title($user_login), "user_email" => $user_email]) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $email) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_set_current_user($user_id, $username) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta', 'email'}
	WordPressRetrievalDetector.get_users(["meta_key" => "userplus_secret_key", "meta_value" => $_POST["secretkey"], "meta_compare" => "="]) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($id) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "userplus_account_verify", $new_account_salt) - {'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", $username) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($user_id) - {'user', 'user_meta'}
	DeletionDetector.delete_user_meta($user_id, "_account_verify") - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id, "_pending_form", true) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "userplus_pending_pass", $user_pass) - {'user_meta', 'password'}
	ArrayElementDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user->ID, "userplus_account_status", true) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "userplus_account_status", "pending") - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id, "_pending_pass", true) - {'user_meta', 'password'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id, "_account_verify", true) - {'user_meta'}
	DeletionDetector.delete_user_meta($user_id, "userplus_account_status") - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id, "_account_status", true) - {'user_meta'}
	WordPressStorageDetector.wp_update_user(["ID" => $user_id, "user_pass" => $_POST["user_pass"]]) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user->ID, "userplus_account_status", true) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta', 'email'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressStorageDetector.delete_user_meta($user_id, "userplus_account_status") - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "_account_status", "active") - {'user_meta'}
	WordPressRetrievalDetector.get_userdata($from_user) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", get_query_var("up_username")) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "userplus_pending_form", $form) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user->ID, "userplus_secret_key", $uniquekey) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "userplus_pending_form", $form) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
wp_post
	WordPressRetrievalDetector.get_post($parent, ARRAY_A) - {'wp_post', 'post', 'post_meta'}
	WordPressStorageDetector.wp_delete_post($page_id, true) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post($logout_page, ARRAY_A) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post($login, ARRAY_A) - {'wp_post', 'post', 'post_meta'}
	DeletionDetector.wp_delete_post($page_id, true) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post($edit, ARRAY_A) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post($register, ARRAY_A) - {'wp_post', 'post', 'post_meta'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:26.632995.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 1030 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.867188.

!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 13127
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 13154
1000 STORE_REACHES edges created
1030 STORE_REACHES edges created
1030 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Remove dataflow edges from keys to data storage sinks" (remove_edge_from_key_to_sink) begin.
Removing dataflow edges from keys to data storage sinks
Deleted PHP_REACHES edges from key to sink for 74 sinks
Deleted PHP_REACHES edges from keys to storage sinks.
╚[26] Preprocessing step "Remove dataflow edges from keys to data storage sinks" (remove_edge_from_key_to_sink) finished successfully in 0:00:01.055752.

0 edges imported to Neo4j
Preprocessing step 10 done!
╔[27] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 547 nodes as PERSONAL
In total, tainted 547 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 402 nodes as ENCRYPTED
In total, tainted 402 nodes as ENCRYPTED
╚[27] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:34.094449.

0 edges imported to Neo4j
Preprocessing step 11 done!
### Preprocessing done in 0:02:27.454231!
Request variable '$_POST["user_pass"]' of personal types {'password'} is found.,,None
Request variable '$_POST["user_email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["user_pass"]' of personal types {'password'} is found.,,None
Request variable '$_POST["user_email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["user_email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["user_email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["user_pass"]' of personal types {'password'} is found.,,None
Request variable '$_POST["user_pass"]' of personal types {'password'} is found.,,None
Request variable '$_POST["user_email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["user_email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["user_email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["user_email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["username"]' of personal types {'user', 'user_meta'} is found.,,None
DELETION call to delete_user_meta($user_id, "userplus_account_status") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_user_meta($user_id, "_account_verify") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to wp_delete_post($page_id, true) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
DELETION call to delete_option("userpro_pages") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
RETRIEVAL call to $finfo->file($_FILES["userplus_uploaded_file"]["tmp_name"], FILEINFO_MIME_TYPE).,None,None
object property '$pending_user->user_email' of personal types {'email'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
variable '$username_or_email' of personal types {'user', 'user_meta', 'email'} is found.,,None
variable '$username_or_email' of personal types {'user', 'user_meta', 'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$user_pass' of personal types {'password'} is found.,,None
variable '$user_pass' of personal types {'password'} is found.,,None
variable '$user_pass' of personal types {'password'} is found.,,None
variable '$user_pass' of personal types {'password'} is found.,,None
variable '$user_pass' of personal types {'password'} is found.,,None
variable '$username_or_email' of personal types {'user', 'user_meta', 'email'} is found.,,None
variable '$username_or_email' of personal types {'user', 'user_meta', 'email'} is found.,,None
variable '$user_password' of personal types {'password'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$user_pass' of personal types {'password'} is found.,,None
variable '$user_pass' of personal types {'password'} is found.,,None
variable '$mail_verifyemail' of personal types {'email'} is found.,,None
variable '$mail_verifyemail' of personal types {'email'} is found.,,None
variable '$mail_verifyemail' of personal types {'email'} is found.,,None
variable '$mail_verifyemail' of personal types {'email'} is found.,,None
variable '$mail_verifyemail' of personal types {'email'} is found.,,None
variable '$mail_verifyemail' of personal types {'email'} is found.,,None
variable '$mail_verifyemail' of personal types {'email'} is found.,,None
variable '$email_template' of personal types {'email'} is found.,,None
variable '$email_template' of personal types {'email'} is found.,,None
variable '$email_template' of personal types {'email'} is found.,,None
variable '$email_template' of personal types {'email'} is found.,,None
variable '$email_template' of personal types {'email'} is found.,,None
variable '$email_template' of personal types {'email'} is found.,,None
variable '$email_template' of personal types {'email'} is found.,,None
variable '$email_template' of personal types {'email'} is found.,,None
variable '$email_template' of personal types {'email'} is found.,,None
variable '$email_template' of personal types {'email'} is found.,,None
variable '$email_template' of personal types {'email'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
RETRIEVAL call to get_post_meta($arg2, "fields", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($arg2, "fields", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("userplus_custom_fields") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($arg2, "fields", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($_POST["arg2"], "fields", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("userplus_custom_fields") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($_POST["arg2"], "fields", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("userplus_custom_fields") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "userplus_form_type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "userplus_form_type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("userplus") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_users($meta_query_args) alters data types {'user', 'user_meta'}. Passed arguments: 0: $args (array). Returns (array).,None,None
RETRIEVAL call to get_user_meta($user_id, "profile_pic", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($object->ID, "userplus_form_autologin", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($object->ID, "fields", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($object->ID, "userplus_field_order", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($object->ID, "userplus_form_role", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($object->ID, "userplus_form_type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user->ID, "userplus_account_status", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user->ID, "userplus_account_status", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_by("email", $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_users(["meta_key" => "userplus_secret_key", "meta_value" => $_POST["secretkey"], "meta_compare" => "="]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $args (array). Returns (array).,None,None
RETRIEVAL call to get_option("userplus_default_login") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("userplus_default_login") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($option) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("userplus_pages") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user_id, "_account_verify", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($_GET["user_id"], "_account_verify", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user_id, "_account_status", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user_id, "_pending_pass", true) alters data types {'user_meta', 'password'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user_id, "_pending_form", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("userplus") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("userplus") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($parent, ARRAY_A) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 1: $output (string), 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($edit, ARRAY_A) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 1: $output (string), 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($register, ARRAY_A) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 1: $output (string), 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($login, ARRAY_A) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 1: $output (string), 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("userpro_pages") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("userplus_pages") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($logout_page, ARRAY_A) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 1: $output (string), 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("userplus_general_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("userplus_email_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdata($id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_userdata($from_user) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_post_meta($atts["id"], "userplus_form_type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("userplus_default_profile") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("userplus_default_profile") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("userplus_default_login") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user_id, $field, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdata($user_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_by("login", $username) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to wp_set_current_user($user_id, $username) alters data types {'user_meta'}. Passed arguments: 0: $id (int), 1: $name (string). Returns (WP_User).,None,None
RETRIEVAL call to get_user_by("login", $username) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to wp_set_current_user($user_id, $username) alters data types {'user_meta'}. Passed arguments: 0: $id (int), 1: $name (string). Returns (WP_User).,None,None
RETRIEVAL call to get_user_by("login", get_query_var("up_username")) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_user_meta($user_id, "profile_background_pic", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($atts["id"], "userplus_field_order", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($atts["id"], "fields", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user_id, "profile_pic", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($atts["id"], "userplus_field_order", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($atts["id"], "fields", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($atts["id"], "userplus_field_order", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user_id, "profile_background_pic", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($atts["id"], "fields", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user_id, "profile_pic", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($atts["id"], "userplus_field_order", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($atts["id"], "fields", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($atts["id"], "userplus_form_role", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($atts["id"], "userplus_form_autologin", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
STORAGE call to update_post_meta($arg2, "fields", $fields) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($arg2, "fields", $fields) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($_POST["arg2"], "fields", $fields) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("userplus_custom_fields", $fields) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($_POST["arg2"], "fields", $fields) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_user_meta($user_id, "userplus_account_status") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, "userplus_form_type", $_POST["userplus_form_type"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "userplus_field_order", $_POST["userplus_field_order"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "userplus_form_role", $_POST["userplus_form_role"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "userplus_form_autologin", $_POST["userplus_form_autologin"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("userplus", $userplus_options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("userplus", userplus_default_options()) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_user_meta($user->ID, "userplus_secret_key", $uniquekey) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_update_user(["ID" => $user_id, "user_pass" => $_POST["user_pass"]]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,None,None
STORAGE call to wp_insert_user(["user_login" => $user_login, "user_pass" => $user_password, "display_name" => sanitize_title($user_login), "user_email" => $user_email]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,None,None
STORAGE call to update_user_meta($user_id, "userplus_account_verify", $new_account_salt) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "userplus_account_status", "pending") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "userplus_pending_pass", $user_pass) alters data types {'user_meta', 'password'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "userplus_pending_form", $form) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "userplus_account_status", "pending_admin") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "userplus_pending_pass", $user_pass) alters data types {'user_meta', 'password'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "userplus_pending_form", $form) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_user_meta($user_id, "_account_verify") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_user_meta($user_id, "_account_status", "active") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("userplus", $settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("userplus_default_profile", $default_profile_form) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to wp_update_post(["ID" => $parent, "post_content" => $post_content]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($default_profile_form, "fields", $fields) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($default_profile_form, "userplus_field_order", $default_fields) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($default_profile_form, "userplus_form_type", "profile") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_insert_post($edit). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to wp_update_post(["ID" => $edit, "post_content" => $post_content]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to wp_insert_post($register). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to wp_insert_post($default_register_form). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to wp_update_post(["ID" => $register, "post_content" => $post_content]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($default_register_form, "fields", $fields) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($default_register_form, "userplus_field_order", $default_fields) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($default_register_form, "userplus_form_type", "register") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_insert_post($login). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to wp_insert_post($default_login_form). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to update_option("userplus_default_login", $default_login_form) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to wp_update_post(["ID" => $login, "post_content" => $post_content]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($default_login_form, "fields", $fields) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($default_login_form, "userplus_field_order", $default_fields) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($default_login_form, "userplus_form_type", "login") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("userplus_pages", $pages) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to wp_delete_post($page_id, true) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
STORAGE call to delete_option("userpro_pages") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to wp_insert_post($logout_page). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to wp_insert_post($parent). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to wp_insert_post($default_profile_form). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to wp_update_user(["ID" => $user_id, $key => $form_value]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,None,None
STORAGE call to update_user_meta($user_id, $key, $form_value) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
CRYPTOGRAPHY call to wp_update_user(["ID" => $user_id, "user_pass" => $_POST["user_pass"]]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,hash,None
CRYPTOGRAPHY call to wp_update_user(["ID" => $user_id, $key => $form_value]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,hash,None
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] WP User info of types (['user', 'user_meta', 'email', 'password']) stored through WordPress function "wp_update_user(["ID" => $user_id, $key => $form_value])", found in file functions/user-functions.php at line 47. 

[has_storage] PII of types (['user_meta', 'password']) stored through WordPress function "update_user_meta($user_id, "userplus_pending_pass", $user_pass)", found in file functions/api.php at line 204. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user_id, $key, $form_value)", found in file functions/user-functions.php at line 50. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user_id, "userplus_account_status", "pending_admin")", found in file functions/api.php at line 203. 

[has_storage] WP User info of types (['user', 'user_meta', 'email', 'password']) stored through WordPress function "wp_insert_user(["user_login" => $user_login, "user_pass" => $user_password, "display_name" => sanitize_title($user_login), "user_email" => $user_email])", found in file functions/api.php at line 112. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user_id, "userplus_account_verify", $new_account_salt)", found in file functions/api.php at line 194. 

[has_storage] PII of types (['user_meta', 'password']) stored through WordPress function "update_user_meta($user_id, "userplus_pending_pass", $user_pass)", found in file functions/api.php at line 196. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user_id, "userplus_account_status", "pending")", found in file functions/api.php at line 195. 

[has_storage] WP User info of types (['user', 'user_meta', 'email', 'password']) stored through WordPress function "wp_update_user(["ID" => $user_id, "user_pass" => $_POST["user_pass"]])", found in file functions/ajax.php at line 162. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user_id, "_account_status", "active")", found in file functions/api.php at line 236. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user_id, "userplus_pending_form", $form)", found in file functions/api.php at line 197. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user->ID, "userplus_secret_key", $uniquekey)", found in file functions/ajax.php at line 142. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user_id, "userplus_pending_form", $form)", found in file functions/api.php at line 205. 

[has_storage] Storage check is WP 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "userplus_pending_pass", $user_pass) does not have corresponding deletion method. Storage method found in file functions/api.php at line 204. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, $key, $form_value) does not have corresponding deletion method. Storage method found in file functions/user-functions.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "userplus_account_verify", $new_account_salt) does not have corresponding deletion method. Storage method found in file functions/api.php at line 194. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "userplus_pending_pass", $user_pass) does not have corresponding deletion method. Storage method found in file functions/api.php at line 196. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "_account_status", "active") does not have corresponding deletion method. Storage method found in file functions/api.php at line 236. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "userplus_pending_form", $form) does not have corresponding deletion method. Storage method found in file functions/api.php at line 197. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user->ID, "userplus_secret_key", $uniquekey) does not have corresponding deletion method. Storage method found in file functions/ajax.php at line 142. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "userplus_pending_form", $form) does not have corresponding deletion method. Storage method found in file functions/api.php at line 205. 

[Art.17, Right to erasure] Deletion access is NONE 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 8390. Found in file functions/api.php at line 204 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 12888. Found in file functions/user-functions.php at line 50 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 8382. Found in file functions/api.php at line 203 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 8299. Found in file functions/api.php at line 194 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 8316. Found in file functions/api.php at line 196 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 8308. Found in file functions/api.php at line 195 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 8601. Found in file functions/api.php at line 236 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 8325. Found in file functions/api.php at line 197 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 5524. Found in file functions/ajax.php at line 142 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 8399. Found in file functions/api.php at line 205 

[Art.15, Right to access] Data access is NONE_BUT_NOT_REQUIRED 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['access', 'deletion', 'encryption', 'third_party'] 

[main] Is deletion in violation? True 

[main] Is access in violation? False 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? False 


###########
### Q&A ###
###########

1. Why is my plugin in violation against GDPR?

GDPR (https://gdpr-info.eu/) aims to give citizens in the European Union (EU) control over their personal data. If a website collects or store user data, it is required to provide users functionalities to control their data, such as ones to erase or export their data. While a plugin do not directly interact with users, it may provide functionalities that collect or store personal data, which would make websites that deploy the plugin in violation against GDPR if the plugin does not provide corresponding functionalities to allow users control their personal data. Therefore, plugin developers are responsible to provide functions to manage the personal data they handle in accordance with GDPR. We list requirements by specific GDPR articles relevant to your plugin below.


[Art. 13, Information to be provided where personal data are collected from the data subject] If a plugin collects or handles personal data, it needs to provide privacy policy texts that explain what personal data is being collected and for what purpose. The texts are meant to be added to the privacy policy of the websites that deploy the plugin. 


            
        

2. How do I make my plugin compliant?

Please refer to the fix report below to see how you can make your plugin comply with GDPR.

        

##################
### Fix Report ###
##################

#############################
# Privacy Policy Fix Report #
#############################

This report suggests fixes to comply with the GDPR Art. 13 (https://gdpr-info.eu/art-13-gdpr/) through including a privacy notice. The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/suggesting-text-for-the-site-privacy-policy/ for more details.

1) Implement a function that includes the privacy policy for the plugin and provide it to wordpress through wp_add_privacy_policy_content(). Sample code:


/**
* Adds a privacy policy statement.
*/
function userplus_add_privacy_policy_content() {
    if ( ! function_exists( 'wp_add_privacy_policy_content' ) ) {
        return;
    }
    //TODO: modify the content below to include the privacy policy for the plugin.
    $content = '<p class="privacy-policy-tutorial">' . __( 'Some introductory content for the suggested text.', 'userplus' ) . '</p>'
            . '<strong class="privacy-policy-tutorial">' . __( 'Suggested Text:', 'userplus' ) . '</strong> '
            . sprintf(
                __( 'When you leave a comment on this site, we send your name, email address, IP address and comment text to example.com. Example.com does not retain your personal data. The example.com privacy policy is <a href="%1$s" target="_blank">here</a>.', 'userplus' ),
                'https://example.com/privacy-policy'
            );
    wp_add_privacy_policy_content( 'userplus', wp_kses_post( wpautop( $content, false ) ) );
}
        

2) Hook the privacy policy function to the Wordpress's admin initialization action.


add_action( 'admin_init', 'userplus_add_privacy_policy_content' );
        

        


Disclaimer: The sample code provided above is only for reference and does not guarantee GDPR compliance. The recommended list of data to delete/export may not be comprehensive. 
        
Done.
