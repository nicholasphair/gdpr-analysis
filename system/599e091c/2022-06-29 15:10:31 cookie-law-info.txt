Timeout in resolving values
Timeout in running neo4j query
Running Main.py on cookie-law-info

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:01.234668.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.476159.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 346 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:01.271351.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 8 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.766926.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 3165 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:01.982253.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 171 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:02.173042.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
Added 16 PHP_REACHES edges.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.079231.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 2103 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:53.593293.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 28780
Added 22971 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 38904
Added 10124 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:03.465029.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/cookie-law-info.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/uninstall.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/admin/class-cookie-law-info-admin.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/admin/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/admin/modules/ccpa/ccpa.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/admin/modules/ccpa/views/ccpa_settings.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/admin/modules/cli-policy-generator/cli-policy-generator.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/admin/modules/cli-policy-generator/classes/class-policy-generator-ajax.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/admin/modules/cli-policy-generator/classes/class-preview-page.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/admin/modules/cli-policy-generator/data/data.block1.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/admin/modules/cli-policy-generator/data/data.block2.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/admin/modules/cli-policy-generator/data/data.block3.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/admin/modules/cli-policy-generator/data/data.block4.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/admin/modules/cli-policy-generator/data/data.block5.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/admin/modules/cli-policy-generator/data/data.policy-generator.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/admin/modules/cli-policy-generator/views/policy-generator.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/admin/modules/cookies/cookies.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/admin/modules/cookies/views/necessary-settings.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/admin/modules/cookies/views/non-necessary-settings.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/admin/modules/cookie-scaner/cookie-scaner.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/admin/modules/cookie-scaner/classes/class-cookie-law-info-cookie-scanner-ajax.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/admin/modules/cookie-scaner/classes/class-cookie-law-info-cookie-scanner-api.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/admin/modules/cookie-scaner/views/scan-results.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/admin/modules/cookie-scaner/views/settings.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/admin/modules/uninstall-feedback/uninstall-feedback.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/admin/partials/cookie-law-info-admin_settings.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/admin/partials/cookie-law-info-privacy_overview.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/admin/views/admin-settings-advanced.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/admin/views/admin-settings-buttons.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/admin/views/admin-settings-general.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/admin/views/admin-settings-help.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/admin/views/admin-settings-messagebar.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/admin/views/admin-settings-save-button.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/admin/views/admin-settings-upgrade-pro.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/admin/views/goto-pro-v2.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/includes/class-cookie-law-info-activator.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/includes/class-cookie-law-info-cookieyes.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/includes/class-cookie-law-info-deactivator.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/includes/class-cookie-law-info-i18n.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/includes/class-cookie-law-info-languages.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/includes/class-cookie-law-info-loader.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/includes/class-cookie-law-info.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/includes/class-cookie-law-info-review-request.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/includes/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/public/class-cookie-law-info-public.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/public/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/public/modules/script-blocker/script-blocker.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/public/modules/script-blocker/integrations/facebook-for-wordpress.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/public/modules/script-blocker/integrations/google-analytics-for-wordpress.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/public/modules/script-blocker/integrations/instagram-feed.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/public/modules/script-blocker/integrations/twitter-feed.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/public/modules/script-blocker/views/settings.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/public/modules/shortcode/shortcode.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/public/views/cookie-law-info_bar.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/public/views/cookie-law-info_popup_content.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/third-party/class-cookie-law-info-third-party.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-law-info/third-party/scripts/pixelyoursite/pixelyoursite.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:05.405085.

346 PHP_REACHES edges created
8 REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
3165 PHP_REACHES edges created
41 CALLS edges created
17 PHP_REACHES edges created
4 CALLS edges created
1 PHP_REACHES edges created
8 CALLS edges created
1 PHP_REACHES edges created
1 CALLS edges created
1 PHP_REACHES edges created
3 CALLS edges created
1 PHP_REACHES edges created
93 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
14000 PHP_REACHES edges created
15000 PHP_REACHES edges created
16000 PHP_REACHES edges created
17000 PHP_REACHES edges created
18000 PHP_REACHES edges created
19000 PHP_REACHES edges created
20000 PHP_REACHES edges created
21000 PHP_REACHES edges created
22000 PHP_REACHES edges created
23000 PHP_REACHES edges created
24000 PHP_REACHES edges created
25000 PHP_REACHES edges created
25090 PHP_REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
10124 PHP_REACHES edges created
38904 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 10095 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.791086.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 7 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:07.041325.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 470 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:17.542373.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 560 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.216336.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:02.471577.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:12.275078.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.075972.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.025606.

7 CALLS edges created
1000 PHP_REACHES edges created
1030 PHP_REACHES edges created
1037 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 876 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.197618.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
33 SQL operations to process.
SELECT COUNT(ID) AS ttnum FROM $wpdbposts WHERE post_type IN( 'implode("\',\'", array_map("esc_sql", array_keys($post_types)))' ) AND post_status='publish' ORDER BY post_type='page' DESC LIMIT 100
SELECT COUNT(ID) AS ttnum FROM $wpdbposts WHERE post_type IN( 'implode("\',\'", array_map("esc_sql", array_keys($post_types)))' ) AND post_status='publish' ORDER BY post_type='page' DESC LIMIT 100
SQL command (SELECT COUNT(ID) AS ttnum FROM $wpdbposts WHERE post_type IN( 'implode("\',\'", array_map("esc_sql", array_keys($post_types)))' ) AND post_status='publish' ORDER BY post_type='page' DESC LIMIT 100) cannot be parsed correct.
SELECT post_name,post_title,post_type,ID FROM $wpdbposts WHERE post_type IN( 'implode("\',\'", array_map("esc_sql", array_keys($post_types)))' ) AND post_status='publish' ORDER BY post_type='page' DESC LIMIT 100
SELECT post_name,post_title,post_type,ID FROM $wpdbposts WHERE post_type IN( 'implode("\',\'", array_map("esc_sql", array_keys($post_types)))' ) AND post_status='publish' ORDER BY post_type='page' DESC LIMIT 100
SQL command (SELECT post_name,post_title,post_type,ID FROM $wpdbposts WHERE post_type IN( 'implode("\',\'", array_map("esc_sql", array_keys($post_types)))' ) AND post_status='publish' ORDER BY post_type='page' DESC LIMIT 100) cannot be parsed correct.
SELECT COUNT(ID) AS ttnum FROM $wpdbposts WHERE post_type IN( 'implode("\',\'", array_map("esc_sql", array_keys($post_types)))' ) AND post_status='publish'
SQL command (SELECT COUNT(ID) AS ttnum FROM $wpdbposts WHERE post_type IN( 'implode("\',\'", array_map("esc_sql", array_keys($post_types)))' ) AND post_status='publish') cannot be parsed correct.
SELECT id_cli_cookie_scan_url,url FROM $wpdbcli_cookie_scan_url WHERE id_cli_cookie_scan=$scan_id ORDER BY id_cli_cookie_scan_url ASC
SELECT id_cli_cookie_scan_url,url FROM $wpdbcli_cookie_scan_url WHERE id_cli_cookie_scan=$scan_id ORDER BY id_cli_cookie_scan_url ASC
SQL command (SELECT id_cli_cookie_scan_url,url FROM $wpdbcli_cookie_scan_url WHERE id_cli_cookie_scan=$scan_id ORDER BY id_cli_cookie_scan_url ASC) cannot be parsed correct.
SELECT blog_id FROM $wpdb
SQL command (SELECT blog_id FROM $wpdb) cannot be parsed correct.
CREATE TABLE `$wpdb$this_scan_table`(
			    `id_cli_cookie_scan` INT NOT NULL AUTO_INCREMENT,
			    `status` INT NOT NULL DEFAULT '0',
			    `created_at` INT NOT NULL DEFAULT '0',
			    `total_url` INT NOT NULL DEFAULT '0',
			    `total_cookies` INT NOT NULL DEFAULT '0',
			    `current_action` VARCHAR(50) NOT NULL,
			    `current_offset` INT NOT NULL DEFAULT '0',
			    PRIMARY KEY(`id_cli_cookie_scan`)
            ) $wpdb->get_charset_collate();
SQL command (CREATE TABLE `$wpdb$this_scan_table`( `id_cli_cookie_scan` INT NOT NULL AUTO_INCREMENT, `status` INT NOT NULL DEFAULT '0', `created_at` INT NOT NULL DEFAULT '0', `total_url` INT NOT NULL DEFAULT '0', `total_cookies` INT NOT NULL DEFAULT '0', `current_action` VARCHAR(50) NOT NULL, `current_offset` INT NOT NULL DEFAULT '0', PRIMARY KEY(`id_cli_cookie_scan`) ) $wpdb->get_charset_collate();) cannot be parsed correct.
CREATE TABLE `$wpdb$this_url_table`(
			    `id_cli_cookie_scan_url` INT NOT NULL AUTO_INCREMENT,
			    `id_cli_cookie_scan` INT NOT NULL DEFAULT '0',
			    `url` TEXT NOT NULL,
			    `scanned` INT NOT NULL DEFAULT '0',
			    `total_cookies` INT NOT NULL DEFAULT '0',
			    PRIMARY KEY(`id_cli_cookie_scan_url`)
            ) $wpdb->get_charset_collate();
SQL command (CREATE TABLE `$wpdb$this_url_table`( `id_cli_cookie_scan_url` INT NOT NULL AUTO_INCREMENT, `id_cli_cookie_scan` INT NOT NULL DEFAULT '0', `url` TEXT NOT NULL, `scanned` INT NOT NULL DEFAULT '0', `total_cookies` INT NOT NULL DEFAULT '0', PRIMARY KEY(`id_cli_cookie_scan_url`) ) $wpdb->get_charset_collate();) cannot be parsed correct.
ALTER TABLE $wpdbcli_cookie_scan_cookies ADD CONSTRAINT FOREIGN KEY (`category_id`) REFERENCES $wpdbcli_cookie_scan_categories (`id_cli_cookie_category`)
SQL command (ALTER TABLE $wpdbcli_cookie_scan_cookies ADD CONSTRAINT FOREIGN KEY (`category_id`) REFERENCES $wpdbcli_cookie_scan_categories (`id_cli_cookie_category`)) cannot be parsed correct.
CREATE TABLE `$wpdb$this_category_table`(
                `id_cli_cookie_category` INT NOT NULL AUTO_INCREMENT,
                `cli_cookie_category_name` VARCHAR(100) NOT NULL,
                `cli_cookie_category_description` TEXT  NULL,
                PRIMARY KEY(`id_cli_cookie_category`),
                UNIQUE `cookie` (`cli_cookie_category_name`)
            ) $wpdb->get_charset_collate()
SQL command (CREATE TABLE `$wpdb$this_category_table`( `id_cli_cookie_category` INT NOT NULL AUTO_INCREMENT, `cli_cookie_category_name` VARCHAR(100) NOT NULL, `cli_cookie_category_description` TEXT NULL, PRIMARY KEY(`id_cli_cookie_category`), UNIQUE `cookie` (`cli_cookie_category_name`) ) $wpdb->get_charset_collate()) cannot be parsed correct.
SHOW TABLES LIKE $wpdb->esc_like($table_name)
SHOW TABLES LIKE $wpdb->esc_like($table_name)
SQL command (SHOW TABLES LIKE $wpdb->esc_like($table_name)) cannot be parsed correct.
SELECT * FROM $wpdbcli_cookie_scan ORDER BY id_cli_cookie_scan DESC LIMIT 1
SQL command (SELECT * FROM $wpdbcli_cookie_scan ORDER BY id_cli_cookie_scan DESC LIMIT 1) cannot be parsed correct.
SELECT * FROM $wpdbcli_cookie_scan WHERE `id_cli_cookie_scan` = $this->get_last_scan()
SELECT * FROM $wpdbcli_cookie_scan WHERE `id_cli_cookie_scan` = $this->get_last_scan()
SQL command (SELECT * FROM $wpdbcli_cookie_scan WHERE `id_cli_cookie_scan` = $this->get_last_scan()) cannot be parsed correct.
SELECT COUNT( id_cli_cookie_scan_url ) AS ttnum FROM $wpdbcli_cookie_scan_url WHERE id_cli_cookie_scan = $this->get_last_scan()
SELECT COUNT( id_cli_cookie_scan_url ) AS ttnum FROM $wpdbcli_cookie_scan_url WHERE id_cli_cookie_scan = $this->get_last_scan()
SQL command (SELECT COUNT( id_cli_cookie_scan_url ) AS ttnum FROM $wpdbcli_cookie_scan_url WHERE id_cli_cookie_scan = $this->get_last_scan()) cannot be parsed correct.
SELECT * FROM $wpdbcli_cookie_scan_url WHERE id_cli_cookie_scan = $this->get_last_scan() ORDER BY id_cli_cookie_scan_url ASC LIMIT %d,%d
SELECT * FROM $wpdbcli_cookie_scan_url WHERE id_cli_cookie_scan = $this->get_last_scan() ORDER BY id_cli_cookie_scan_url ASC LIMIT $offset,%d
SELECT * FROM $wpdbcli_cookie_scan_ur$limitWHERE id_cli_cookie_scan = $this->get_last_scan() ORDER BY id_cli_cookie_scan_url ASC LIMIT $offset,%d
SELECT * FROM $wpdbcli_cookie_scan_ur$limitWHERE id_cli_cookie_scan = $this->get_last_scan() ORDER BY id_cli_cookie_scan_url ASC LIMIT $offset,%d
SQL command (SELECT * FROM $wpdbcli_cookie_scan_ur$limitWHERE id_cli_cookie_scan = $this->get_last_scan() ORDER BY id_cli_cookie_scan_url ASC LIMIT $offset,%d) cannot be parsed correct.
SELECT COUNT( id_cli_cookie_scan_cookies ) AS ttnum FROM $wpdbcli_cookie_scan_cookies WHERE id_cli_cookie_scan = $this->get_last_scan()
SELECT COUNT( id_cli_cookie_scan_cookies ) AS ttnum FROM $wpdbcli_cookie_scan_cookies WHERE id_cli_cookie_scan = $this->get_last_scan()
SQL command (SELECT COUNT( id_cli_cookie_scan_cookies ) AS ttnum FROM $wpdbcli_cookie_scan_cookies WHERE id_cli_cookie_scan = $this->get_last_scan()) cannot be parsed correct.
SELECT * FROM $wpdbcli_cookie_scan_cookies AS cookie INNER JOIN $wpdbcli_cookie_scan_categories as category ON category.id_cli_cookie_category = cookie.category_id INNER JOIN $wpdbcli_cookie_scan_url as urls ON cookie.id_cli_cookie_scan_url = urls.id_cli_cookie_scan_url WHERE cookie.id_cli_cookie_scan = $this->get_last_scan() ORDER BY id_cli_cookie_scan_cookies ASC LIMIT %d, %d
SELECT * FROM $wpdbcli_cookie_scan_cookies AS cookie INNER JOIN $wpdbcli_cookie_scan_categories as category ON category.id_cli_cookie_category = cookie.category_id INNER JOIN $wpdbcli_cookie_scan_url as urls ON cookie.id_cli_cookie_scan_url = urls.id_cli_cookie_scan_url WHERE cookie.id_cli_cookie_scan = $this->get_last_scan() ORDER BY id_cli_cookie_scan_cookies ASC LIMIT $offset, %d
SELECT * FROM $wpdbcli_cookie_scan_cookies$limitS cookie INNER JOIN $wpdbcli_cookie_scan_categories as category ON category.id_cli_cookie_category = cookie.category_id INNER JOIN $wpdbcli_cookie_scan_url as urls ON cookie.id_cli_cookie_scan_url = urls.id_cli_cookie_scan_url WHERE cookie.id_cli_cookie_scan = $this->get_last_scan() ORDER BY id_cli_cookie_scan_cookies ASC LIMIT $offset, %d
SELECT * FROM $wpdbcli_cookie_scan_cookies$limitS cookie INNER JOIN $wpdbcli_cookie_scan_categories as category ON category.id_cli_cookie_category = cookie.category_id INNER JOIN $wpdbcli_cookie_scan_url as urls ON cookie.id_cli_cookie_scan_url = urls.id_cli_cookie_scan_url WHERE cookie.id_cli_cookie_scan = $this->get_last_scan() ORDER BY id_cli_cookie_scan_cookies ASC LIMIT $offset, %d
SQL command (SELECT * FROM $wpdbcli_cookie_scan_cookies$limitS cookie INNER JOIN $wpdbcli_cookie_scan_categories as category ON category.id_cli_cookie_category = cookie.category_id INNER JOIN $wpdbcli_cookie_scan_url as urls ON cookie.id_cli_cookie_scan_url = urls.id_cli_cookie_scan_url WHERE cookie.id_cli_cookie_scan = $this->get_last_scan() ORDER BY id_cli_cookie_scan_cookies ASC LIMIT $offset, %d) cannot be parsed correct.
SELECT * FROM $wpdbcli_cookie_scan_cookies AS cookie INNER JOIN $wpdbcli_cookie_scan_categories as category ON category.id_cli_cookie_category = cookie.category_id INNER JOIN $wpdbcli_cookie_scan_url as urls ON cookie.id_cli_cookie_scan_url = urls.id_cli_cookie_scan_url WHERE cookie.id_cli_cookie_scan = $this->get_last_scan() ORDER BY id_cli_cookie_scan_cookies ASC
SELECT * FROM $wpdbcli_cookie_scan_cookies AS cookie INNER JOIN $wpdbcli_cookie_scan_categories as category ON category.id_cli_cookie_category = cookie.category_id INNER JOIN $wpdbcli_cookie_scan_url as urls ON cookie.id_cli_cookie_scan_url = urls.id_cli_cookie_scan_url WHERE cookie.id_cli_cookie_scan = $this->get_last_scan() ORDER BY id_cli_cookie_scan_cookies ASC
SQL command (SELECT * FROM $wpdbcli_cookie_scan_cookies AS cookie INNER JOIN $wpdbcli_cookie_scan_categories as category ON category.id_cli_cookie_category = cookie.category_id INNER JOIN $wpdbcli_cookie_scan_url as urls ON cookie.id_cli_cookie_scan_url = urls.id_cli_cookie_scan_url WHERE cookie.id_cli_cookie_scan = $this->get_last_scan() ORDER BY id_cli_cookie_scan_cookies ASC) cannot be parsed correct.
TRUNCATE TABLE $wpdbcli_cookie_scan;
SQL command (TRUNCATE TABLE $wpdbcli_cookie_scan;) cannot be parsed correct.
TRUNCATE TABLE $wpdbcli_cookie_scan_url;
SQL command (TRUNCATE TABLE $wpdbcli_cookie_scan_url;) cannot be parsed correct.
TRUNCATE TABLE $wpdbcli_cookie_scan_cookies;
SQL command (TRUNCATE TABLE $wpdbcli_cookie_scan_cookies;) cannot be parsed correct.
SELECT id_cli_cookie_scan_url,url FROM $wpdbcli_cookie_scan_url WHERE id_cli_cookie_scan = $this->get_last_scan_id() ORDER BY id_cli_cookie_scan_url ASC
SELECT id_cli_cookie_scan_url,url FROM $wpdbcli_cookie_scan_url WHERE id_cli_cookie_scan = $this->get_last_scan_id() ORDER BY id_cli_cookie_scan_url ASC
SQL command (SELECT id_cli_cookie_scan_url,url FROM $wpdbcli_cookie_scan_url WHERE id_cli_cookie_scan = $this->get_last_scan_id() ORDER BY id_cli_cookie_scan_url ASC) cannot be parsed correct.
SELECT meta_value FROM $wpdb WHERE term_id = Cookie_Law_Info_Languages->get_instance()->get_term_by_language($term_id, $default_language)_term_id AND meta_key = %s
SELECT meta_value FROM $wpdb WHERE term_id = Cookie_Law_Info_Languages->get_instance()->get_term_by_language($term_id, $default_language)_term_id AND meta_key = $meta_key
SELECT meta_value FROM $wpdb WHERE term_id = Cookie_Law_Info_Languages->get_instance()->get_term_by_language($term_id, $default_language)_term_id AND meta_key = $meta_key
SQL command (SELECT meta_value FROM $wpdb WHERE term_id = Cookie_Law_Info_Languages->get_instance()->get_term_by_language($term_id, $default_language)_term_id AND meta_key = $meta_key) cannot be parsed correct.
SELECT * FROM $wpdb WHERE slug = $value
SELECT * FROM $wpdb WHERE slug = $value
SQL command (SELECT * FROM $wpdb WHERE slug = $value) cannot be parsed correct.
SELECT blog_id FROM $wpdb
SQL command (SELECT blog_id FROM $wpdb) cannot be parsed correct.
select * from $wpdbcli_scripts
SQL command (select * from $wpdbcli_scripts) cannot be parsed correct.
SELECT blog_id FROM $wpdb
SQL command (SELECT blog_id FROM $wpdb) cannot be parsed correct.
SHOW TABLES LIKE %$wpdbcli_scripts%
SHOW TABLES LIKE %$wpdbcli_scripts%
SQL command (SHOW TABLES LIKE %$wpdbcli_scripts%) cannot be parsed correct.
CREATE TABLE $wpdbcli_scripts(
                    `id` INT NOT NULL AUTO_INCREMENT,
                    `cliscript_title` TEXT NOT NULL,
                    `cliscript_category` VARCHAR(100) NOT NULL,
                    `cliscript_type` INT DEFAULT 0,
                    `cliscript_status` VARCHAR(100) NOT NULL,
                    `cliscript_description` LONGTEXT NOT NULL,
                    `cliscript_key` VARCHAR(100) NOT NULL,
                    `type` INT NOT NULL DEFAULT '0',
                    PRIMARY KEY(`id`)
                ) $wpdb->get_charset_collate();
SQL command (CREATE TABLE $wpdbcli_scripts( `id` INT NOT NULL AUTO_INCREMENT, `cliscript_title` TEXT NOT NULL, `cliscript_category` VARCHAR(100) NOT NULL, `cliscript_type` INT DEFAULT 0, `cliscript_status` VARCHAR(100) NOT NULL, `cliscript_description` LONGTEXT NOT NULL, `cliscript_key` VARCHAR(100) NOT NULL, `type` INT NOT NULL DEFAULT '0', PRIMARY KEY(`id`) ) $wpdb->get_charset_collate();) cannot be parsed correct.
UPDATE $wpdbcli_scripts SET cliscript_status = wp_validate_boolean(isset($_POST["status"]) && true === wp_validate_boolean(sanitize_text_field(wp_unslash($_POST["status"])))truefalse) WHERE id = %d
UPDATE $wpdbcli_scripts SET cliscript_status = wp_validate_boolean(isset($_POST["status"]) && true === wp_validate_boolean(sanitize_text_field(wp_unslash($_POST["status"])))truefalse) WHERE id = $id
UPDATE $wpdbcli_scripts SET cliscript_status = wp_validate_boolean(isset($_POST["status"]) && true === wp_validate_boolean(sanitize_text_field(wp_unslash($_POST["status"])))truefalse) WHERE id = $id
SQL command (UPDATE $wpdbcli_scripts SET cliscript_status = wp_validate_boolean(isset($_POST["status"]) && true === wp_validate_boolean(sanitize_text_field(wp_unslash($_POST["status"])))truefalse) WHERE id = $id) cannot be parsed correct.
SELECT id FROM $wpdbcli_scripts WHERE cliscript_key= $key
SELECT id FROM $wpdbcli_scripts WHERE cliscript_key= $key
SQL command (SELECT id FROM $wpdbcli_scripts WHERE cliscript_key= $key) cannot be parsed correct.
SHOW COLUMNS FROM $wpdbcli_scripts LIKE 'cliscript_type'
SQL command (SHOW COLUMNS FROM $wpdbcli_scripts LIKE 'cliscript_type') cannot be parsed correct.
ALTER TABLE $wpdbcli_scripts ADD `cliscript_type` INT DEFAULT 0 AFTER `cliscript_category`
SQL command (ALTER TABLE $wpdbcli_scripts ADD `cliscript_type` INT DEFAULT 0 AFTER `cliscript_category`) cannot be parsed correct.
UPDATE $wpdbcli_scripts SET cliscript_category = $cat WHERE id = %s
UPDATE $wpdbcli_scripts SET cliscript_category = $cat WHERE id = $id
UPDATE $wpdbcli_scripts SET cliscript_category = $cat WHERE id = $id
SQL command (UPDATE $wpdbcli_scripts SET cliscript_category = $cat WHERE id = $id) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [6616, 6714, 7405, 7704, 9349, 9491, 9534, 9641, 9680, 9843, 10503, 12125, 12641, 12680, 12800, 12858, 12900, 13421, 13433, 13445, 13602, 20395, 20448, 28538, 41541, 42494, 42576, 42604, 42771, 42900, 42970, 42986, 44001]
Added 0 SQL nodes. 0 out of 33 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:07.675166.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'<div class="updated"><p><strong>Settings Updated.</strong></p></div>'' cannot be parsed correct.
HTML code '$'<h3>ERROR MIGRATING SETTINGS (ERROR: 2)</h3>'' cannot be parsed correct.
HTML code '$'VERSION: get_option(CLI_MIGRATED_VERSION)<br /> V2: CLI_LATEST_VERSION_NUMBER'' cannot be parsed correct.
HTML code '$'<div class="updated"><p><strong>Settings Updated.</strong></p></div>'' cannot be parsed correct.
HTML code '$'<option value=$option_value'' cannot be parsed correct.
HTML code '$'>$option_text</option>'' cannot be parsed correct.
HTML code '$'
            <tr valign="top">
                <th scope="row"><label for="is_on_field">Select the type of law</label></th>
                <td>
                    <div class="wt-cli-ccpa-message-toggler">
                        <div class="wt-cli-form-group">
                            <input type="radio" name="consent_type_field" id="consent_type_field_gdpr" value="gdpr" checked($consent_type, "gdpr", false)><label for="consent_type_field_gdpr"><b>GDPR</b></label>
                            <div class="wt-cli-info-bar"><small>GDPR compliance is essential for your website if it has a target audience from the European union.</small></div>
                        </div>
                        <div class="wt-cli-form-group">
                            <input type="radio" name="consent_type_field" id="consent_type_field_ccpa" value="ccpa" checked($consent_type, "ccpa", false)><label for="consent_type_field_ccpa"><b>CCPA</b></label>
                            <div class="wt-cli-info-bar"><small>CCPA compliance is essential for your website if it has a target audience from California.</small></div>
                        </div>
                        <div class="wt-cli-form-group">
                            <input type="radio" name="consent_type_field" id="consent_type_field_ccpa_gdpr" value="ccpa_gdpr" checked($consent_type, "ccpa_gdpr", false)><label for="consent_type_field_ccpa_gdpr"><b>CCPA & GDPR</b></label>
                            <div class="wt-cli-info-bar"><small>Comply with both the laws on the same website if your target audience are from European union and California.</small></div>
                        </div>
                        <textarea id="wt_ci_gdpr_only" name="gdpr_content_field" style="display:none">stripslashes($gdpr_content)</textarea>
                        <textarea id="wt_ci_ccpa_only" name="ccpa_content_field" style="display:none">stripslashes($ccpa_only_content)</textarea>
                        <textarea id="wt_ci_ccpa_gdpr" name="ccpa_gdpr_field" style="display:none">stripslashes($ccpa_gdpr_content)</textarea>
                    </div>
                </td>
            </tr>
            
        '' cannot be parsed correct.
HTML code '$'CCPA Settings'' cannot be parsed correct.
HTML code '$'The right to opt out in the California Consumer Privacy Act gives consumers the ability to direct a business not to sell their personal information to a third party. If the user considers to not sell their personal information, all the scripts related to the categories which are configured to sell personal information will be blocked. The DO NOT SELL option is facilitated via a shortcode [wt_cli_ccpa_optout].'' cannot be parsed correct.
HTML code '$'Enable CCPA ?'' cannot be parsed correct.
HTML code '$'Show CCPA notice'' cannot be parsed correct.
HTML code '$'Displays CCPA notice on the consent bar of your site and records prior consent from the user.'' cannot be parsed correct.
HTML code '$'$this->$cli_policy_generator_action()_message$this->$cli_policy_generator_action()'' cannot be parsed correct.
HTML code '$'json_encode($out)'' cannot be parsed correct.
HTML code '$'Create Cookie Policy page'' cannot be parsed correct.
HTML code '$'$preview_url'' cannot be parsed correct.
HTML code '$'Live preview'' cannot be parsed correct.
HTML code '$'wp_json_encode($out)'' cannot be parsed correct.
HTML code '$'Policy generator'' cannot be parsed correct.
HTML code '$'Sample heading'' cannot be parsed correct.
HTML code '$'Sample content'' cannot be parsed correct.
HTML code '$'Delete'' cannot be parsed correct.
HTML code '$'$data_head'' cannot be parsed correct.
HTML code '$'$data_body'' cannot be parsed correct.
HTML code '$'Add new'' cannot be parsed correct.
HTML code '$'Heading'' cannot be parsed correct.
HTML code '$'Description'' cannot be parsed correct.
HTML code '$'Enabling this option will help us spread the word by placing a credit to WebToffee at the very end of the Cookie Policy page.'' cannot be parsed correct.
HTML code '$'Update existing Cookie Policy page'' cannot be parsed correct.
HTML code '$'$this->get_cookie_policy_pageid()0'' cannot be parsed correct.
HTML code '$'$notice'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'$cookie_id'' cannot be parsed correct.
HTML code '$'$cookie_expiry'' cannot be parsed correct.
HTML code '$'$cookie_category'' cannot be parsed correct.
HTML code '$'wp_unslash($cookie["description"])'' cannot be parsed correct.
HTML code '$'Cookie scan result for your website'' cannot be parsed correct.
HTML code '$'$this->get_scan_btn(true)'' cannot be parsed correct.
HTML code '$'Total URLs'' cannot be parsed correct.
HTML code '$'$scan_results_total_urls'' cannot be parsed correct.
HTML code '$'Total cookies'' cannot be parsed correct.
HTML code '$'$scan_results_total_cookies'' cannot be parsed correct.
HTML code '$'wp_kses(__("Clicking âAdd to cookie listâ will import the discovered cookies to the <a href="%s" target="_blank">Cookie List</a> and thus display them in the cookie declaration section of your consent banner.", "cookie-law-info"), ["a" => ["href" => [], "target" => []]])'' cannot be parsed correct.
HTML code '$'$scan_results_scan_id'' cannot be parsed correct.
HTML code '$'Add to cookie list'' cannot be parsed correct.
HTML code '$'Sl.No:'' cannot be parsed correct.
HTML code '$'Cookie Name'' cannot be parsed correct.
HTML code '$'Duration'' cannot be parsed correct.
HTML code '$'Category'' cannot be parsed correct.
HTML code '$'Description'' cannot be parsed correct.
HTML code '$'Your cookie list is empty'' cannot be parsed correct.
HTML code '$'Cookie scanner'' cannot be parsed correct.
HTML code '$'Cookie ID'' cannot be parsed correct.
HTML code '$'sanitize_text_field($cookie_slugid)'' cannot be parsed correct.
HTML code '$'Cookie Type: (persistent, session, third party )'' cannot be parsed correct.
HTML code '$'sanitize_text_field($cookie_type)'' cannot be parsed correct.
HTML code '$'Cookie Duration:'' cannot be parsed correct.
HTML code '$'sanitize_text_field($cookie_duration)'' cannot be parsed correct.
HTML code '$'Cookie Sensitivity: ( necessary , non-necessary )'' cannot be parsed correct.
HTML code '$'sanitize_text_field($cookie_sensitivity)'' cannot be parsed correct.
HTML code '$'wp_unslash($content_post->post_content)'' cannot be parsed correct.
HTML code '$'wp_unslash($custom["_cli_cookie_type"][0])'' cannot be parsed correct.
HTML code '$'wp_unslash($term_list[0])'' cannot be parsed correct.
HTML code '$'wp_unslash($custom["_cli_cookie_duration"][0])'' cannot be parsed correct.
HTML code '$'wp_unslash($custom["_cli_cookie_sensitivity"][0])'' cannot be parsed correct.
HTML code '$'wp_unslash($custom["_cli_cookie_slugid"][0])'' cannot be parsed correct.
HTML code '$'Category default state'' cannot be parsed correct.
HTML code '$'Enabled'' cannot be parsed correct.
HTML code '$'Disabled'' cannot be parsed correct.
HTML code '$'If you enable this option, the category toggle button will be in the active state for cookie consent.'' cannot be parsed correct.
HTML code '$'Category default state'' cannot be parsed correct.
HTML code '$'Enabled'' cannot be parsed correct.
HTML code '$'Disabled'' cannot be parsed correct.
HTML code '$'If you enable this option, the category toggle button will be in the active state for cookie consent.'' cannot be parsed correct.
HTML code '$'Head scripts'' cannot be parsed correct.
HTML code '$'Body scripts'' cannot be parsed correct.
HTML code '$'Head scripts'' cannot be parsed correct.
HTML code '$'wp_unslash($head_scripts)'' cannot be parsed correct.
HTML code '$'Body scripts'' cannot be parsed correct.
HTML code '$'wp_unslash($body_scripts)'' cannot be parsed correct.
HTML code '$'WordPress 4.4 or higher is the required version. Please consider upgrading the WordPress before migrating the cookie categories.'' cannot be parsed correct.
HTML code '$'Settings Updated.'' cannot be parsed correct.
HTML code '$'Clicking âMigrate cookie categoriesâ will auto migrate your existing cookie categories (Necessary and Non-necessary) to our new Cookie Category taxonomy. This action is required to enable the cookie scanner.'' cannot be parsed correct.
HTML code '$'What happens after migration?'' cannot be parsed correct.
HTML code '$'You no longer need to manage static cookie categories. After the migration, new cookie categories (Necessary, Functional, Analytics, Performance, Advertisement, and Others) will be created automatically. Also, you can easily add custom cookie categories and edit/delete the existing categories including the custom categories.'' cannot be parsed correct.
HTML code '$'If you have made any changes to the existing "Non-necessary" category we will migrate it to the newly created âCookie Categoryâ section. If not, we will delete the "Non-necessary" category automatically.'' cannot be parsed correct.
HTML code '$'During the migration phase your existing cookie category translations will be lost. Hence we request you to add it manually soon after the migration. You can access the existing translations by navigating to the string translation settings of your translator plugin.'' cannot be parsed correct.
HTML code '$'wp_nonce_url($url, "migrate", "cookie_law_info_nonce")'' cannot be parsed correct.
HTML code '$'Migrate cookie categories'' cannot be parsed correct.
HTML code '$'Settings updated.'' cannot be parsed correct.
HTML code '$'Unable to update Settings.'' cannot be parsed correct.
HTML code '$'Necessary Cookie Settings'' cannot be parsed correct.
HTML code '$'$form_action'' cannot be parsed correct.
HTML code '$'Title'' cannot be parsed correct.
HTML code '$'stripslashes($settings["title"])'' cannot be parsed correct.
HTML code '$'Description'' cannot be parsed correct.
HTML code '$'apply_filters("format_to_edit", stripslashes($settings["description"]))'' cannot be parsed correct.
HTML code '$'Update Settings'' cannot be parsed correct.
HTML code '$'Settings updated.'' cannot be parsed correct.
HTML code '$'Unable to update Settings.'' cannot be parsed correct.
HTML code '$'Non-necessary Cookie Settings'' cannot be parsed correct.
HTML code '$'$form_action'' cannot be parsed correct.
HTML code '$'Enable Non-necessary Cookie'' cannot be parsed correct.
HTML code '$' checked="checked"  '' cannot be parsed correct.
HTML code '$'Yes'' cannot be parsed correct.
HTML code '$' checked="checked" '' cannot be parsed correct.
HTML code '$'No'' cannot be parsed correct.
HTML code '$'Default state'' cannot be parsed correct.
HTML code '$' checked="checked"  '' cannot be parsed correct.
HTML code '$'Enabled'' cannot be parsed correct.
HTML code '$' checked="checked" '' cannot be parsed correct.
HTML code '$'Disabled'' cannot be parsed correct.
HTML code '$'If you enable this option, the category toggle button will be in the active state for cookie consent.'' cannot be parsed correct.
HTML code '$'sanitize_text_field(stripslashes($settings["title"]))'' cannot be parsed correct.
HTML code '$'Description'' cannot be parsed correct.
HTML code '$'apply_filters("format_to_edit", stripslashes($settings["description"]))'' cannot be parsed correct.
HTML code '$'This script will be added to the page HEAD section if the above settings is enabled and user has give consent.'' cannot be parsed correct.
HTML code '$'apply_filters("format_to_edit", stripslashes($settings["head_scripts"]))'' cannot be parsed correct.
HTML code '$'Print scripts in the head tag on the front end if above cookie settings is enabled and user has given consent.'' cannot be parsed correct.
HTML code '$'This script will be added right after the BODY section if the above settings is enabled and user has given consent.'' cannot be parsed correct.
HTML code '$'apply_filters("format_to_edit", stripslashes($settings["body_scripts"]))'' cannot be parsed correct.
HTML code '$'Print scripts before the closing body tag on the front end if above cookie settings is enabled and user has given consent.'' cannot be parsed correct.
HTML code '$'Update Settings'' cannot be parsed correct.
HTML code '$'$this_plugin_id'' cannot be parsed correct.
HTML code '$'$this_plugin_id'' cannot be parsed correct.
HTML code '$'$this_plugin_id'' cannot be parsed correct.
HTML code '$'$this_plugin_id'' cannot be parsed correct.
HTML code '$'If you have a moment, please let us know why you are deactivating:'' cannot be parsed correct.
HTML code '$'$this_plugin_id'' cannot be parsed correct.
HTML code '$'$data_type'' cannot be parsed correct.
HTML code '$'$placeholder'' cannot be parsed correct.
HTML code '$'$reason_id'' cannot be parsed correct.
HTML code '$'$reason_text'' cannot be parsed correct.
HTML code '$'$this_plugin_id-sub-reasons'' cannot be parsed correct.
HTML code '$'$data_type'' cannot be parsed correct.
HTML code '$'$placeholder'' cannot be parsed correct.
HTML code '$'$child_id'' cannot be parsed correct.
HTML code '$'$child_text'' cannot be parsed correct.
HTML code '$'Privacy Policy'' cannot be parsed correct.
HTML code '$'$this_plugin_id'' cannot be parsed correct.
HTML code '$'Go to support'' cannot be parsed correct.
HTML code '$'$this_plugin_id'' cannot be parsed correct.
HTML code '$'Submit & Deactivate'' cannot be parsed correct.
HTML code '$'Advanced'' cannot be parsed correct.
HTML code '$'Sometimes themes apply settings that clash with plugins. If that happens, try adjusting these settings.'' cannot be parsed correct.
HTML code '$'Reset settings'' cannot be parsed correct.
HTML code '$'Delete settings and reset'' cannot be parsed correct.
HTML code '$'Are you sure you want to delete all your settings?'' cannot be parsed correct.
HTML code '$'Warning: Resets all your current settings to default.'' cannot be parsed correct.
HTML code '$'$target_id'' cannot be parsed correct.
HTML code '$'Accept All Button'' cannot be parsed correct.
HTML code '$'Accept Button'' cannot be parsed correct.
HTML code '$'Reject Button'' cannot be parsed correct.
HTML code '$'Settings Button'' cannot be parsed correct.
HTML code '$'Read more'' cannot be parsed correct.
HTML code '$'Do not sell'' cannot be parsed correct.
HTML code '$'Accept Button'' cannot be parsed correct.
HTML code '$'Customize the Accept button to match the theme of your site. Insert the shortcode [cookie_button] in Customise Cookie Bar > Cookie bar > Message to include accept button in cookie consent bar.'' cannot be parsed correct.
HTML code '$'Text'' cannot be parsed correct.
HTML code '$'stripslashes($the_options["button_1_text"])'' cannot be parsed correct.
HTML code '$'Text colour'' cannot be parsed correct.
HTML code '$'<input type="text" name="button_1_link_colour_field" id="cli-colour-link-button-1" value="$the_options_button_1_link_colour" class="my-color-field" />'' cannot be parsed correct.
HTML code '$'Show as'' cannot be parsed correct.
HTML code '$' checked="checked" '' cannot be parsed correct.
HTML code '$'Button'' cannot be parsed correct.
HTML code '$' checked="checked"'' cannot be parsed correct.
HTML code '$'Link'' cannot be parsed correct.
HTML code '$'Background colour'' cannot be parsed correct.
HTML code '$'<input type="text" name="button_1_button_colour_field" id="cli-colour-btn-button-1" value="$the_options_button_1_button_colour" class="my-color-field" />'' cannot be parsed correct.
HTML code '$'Action'' cannot be parsed correct.
HTML code '$'URL'' cannot be parsed correct.
HTML code '$'$the_options_button_1_url'' cannot be parsed correct.
HTML code '$'Specify the URL to redirect users on accept button click. e.g. Entering the cookie policy page URL will redirect users to the cookie policy page after giving consent.'' cannot be parsed correct.
HTML code '$'$this_plugin_id'' cannot be parsed correct.
HTML code '$'Cancel'' cannot be parsed correct.
HTML code '$'I rather wouldn\'t say'' cannot be parsed correct.
HTML code '$'esc_js($this->plugin_id)'' cannot be parsed correct.
HTML code '$'esc_js(wp_create_nonce($this->plugin_id))'' cannot be parsed correct.
HTML code '$'Settings updated.'' cannot be parsed correct.
HTML code '$'Unable to update Settings.'' cannot be parsed correct.
HTML code '$'Settings reset to defaults.'' cannot be parsed correct.
HTML code '$'Unable to reset settings.'' cannot be parsed correct.
HTML code '$'Settings'' cannot be parsed correct.
HTML code '$'display:none;'' cannot be parsed correct.
HTML code '$'CLI_PLUGIN_URLimages/'' cannot be parsed correct.
HTML code '$'Cookie bar is currently active'' cannot be parsed correct.
HTML code '$'display:none;'' cannot be parsed correct.
HTML code '$'CLI_PLUGIN_URLimages/'' cannot be parsed correct.
HTML code '$'Cookie bar is currently inactive'' cannot be parsed correct.
HTML code '$'CLI_PLUGIN_URLimages/'' cannot be parsed correct.
HTML code '$'Cookie Compliance Made Easy'' cannot be parsed correct.
HTML code '$'wp_kses(__("Plugin Developed By <a href="%s" target="_blank">WebToffee</a>", "cookie-law-info"), ["a" => ["href" => [], "target" => []]])'' cannot be parsed correct.
HTML code '$'$form_action'' cannot be parsed correct.
HTML code '$'Privacy Overview'' cannot be parsed correct.
HTML code '$'$form_action'' cannot be parsed correct.
HTML code '$'Title'' cannot be parsed correct.
HTML code '$'sanitize_text_field(stripslashes($privacy_title))'' cannot be parsed correct.
HTML code '$'Privacy overview is displayed when the user clicks on âcookie settingsâ from the cookie consent bar. Edit/ modify the title and content of âprivacy overviewâ from here.'' cannot be parsed correct.
HTML code '$'stripslashes($privacy_content)'' cannot be parsed correct.
HTML code '$'Save Settings'' cannot be parsed correct.
HTML code '$'$target_id'' cannot be parsed correct.
HTML code '$'Click'' cannot be parsed correct.
HTML code '$'admin_url("edit.php?post_type=" . CLI_POST_TYPE . "&page=cookie-law-info-policy-generator")'' cannot be parsed correct.
HTML code '$'here'' cannot be parsed correct.
HTML code '$' to generate content for Cookie Policy page.'' cannot be parsed correct.
HTML code '$'Text'' cannot be parsed correct.
HTML code '$'stripslashes($the_options["button_2_text"])'' cannot be parsed correct.
HTML code '$'Text colour'' cannot be parsed correct.
HTML code '$'Open URL in new window'' cannot be parsed correct.
HTML code '$' checked="checked"'' cannot be parsed correct.
HTML code '$'Yes'' cannot be parsed correct.
HTML code '$' checked="checked"'' cannot be parsed correct.
HTML code '$'No'' cannot be parsed correct.
HTML code '$'Button Size'' cannot be parsed correct.
HTML code '$'Reject Button'' cannot be parsed correct.
HTML code '$'wp_kses(__("Customize the Reject button to match the theme of your site. Insert the shortcode <strong>[cookie_reject]</strong> in <strong>Customise Cookie Bar > Cookie bar > Message</strong> to include reject button in cookie consent bar.", "cookie-law-info"), ["p" => [], "strong" => []])'' cannot be parsed correct.
HTML code '$'Text'' cannot be parsed correct.
HTML code '$'stripslashes($the_options["button_3_text"])'' cannot be parsed correct.
HTML code '$'Text colour'' cannot be parsed correct.
HTML code '$'<input type="text" name="button_3_link_colour_field" id="cli-colour-link-button-3" value="$the_options_button_3_link_colour" class="my-color-field" />'' cannot be parsed correct.
HTML code '$'Show as'' cannot be parsed correct.
HTML code '$' checked="checked" '' cannot be parsed correct.
HTML code '$'Button'' cannot be parsed correct.
HTML code '$' checked="checked"'' cannot be parsed correct.
HTML code '$'Link'' cannot be parsed correct.
HTML code '$'Background colour'' cannot be parsed correct.
HTML code '$'<input type="text" name="button_3_button_colour_field" id="cli-colour-btn-button-3" value="$the_options_button_3_button_colour" class="my-color-field" />'' cannot be parsed correct.
HTML code '$'Action'' cannot be parsed correct.
HTML code '$'URL'' cannot be parsed correct.
HTML code '$'$the_options_button_3_url'' cannot be parsed correct.
HTML code '$'Specify the URL to redirect users on reject button click. e.g. Entering the cookie policy page URL will redirect users to the cookie policy page after rejecting cookies.'' cannot be parsed correct.
HTML code '$'Open URL in new window'' cannot be parsed correct.
HTML code '$' checked="checked"'' cannot be parsed correct.
HTML code '$'Yes'' cannot be parsed correct.
HTML code '$' checked="checked"'' cannot be parsed correct.
HTML code '$'No'' cannot be parsed correct.
HTML code '$'Button Size'' cannot be parsed correct.
HTML code '$'Settings Button'' cannot be parsed correct.
HTML code '$'wp_kses(__("Customize the cookie settings to match the theme of your site. Insert the shortcode <strong>[cookie_settings]</strong> in <strong>Customise Cookie Bar > Cookie bar > Message</strong> to include cookie settings within the cookie consent bar. Clicking âCookie settingsâ opens up a pop up window with provisions to enable/disable cookie categories.", "cookie-law-info"), ["p" => [], "strong" => []])'' cannot be parsed correct.
HTML code '$'Text'' cannot be parsed correct.
HTML code '$'stripslashes($the_options["button_4_text"])'' cannot be parsed correct.
HTML code '$'Text colour'' cannot be parsed correct.
HTML code '$'<input type="text" name="button_4_link_colour_field" id="cli-colour-link-button-4" value="$the_options_button_4_link_colour" class="my-color-field" />'' cannot be parsed correct.
HTML code '$'Show as'' cannot be parsed correct.
HTML code '$' checked="checked" '' cannot be parsed correct.
HTML code '$'Button'' cannot be parsed correct.
HTML code '$' checked="checked"'' cannot be parsed correct.
HTML code '$'<input type="text" name="button_2_link_colour_field" id="cli-colour-link-button-1" value="$the_options_button_2_link_colour" class="my-color-field" />'' cannot be parsed correct.
HTML code '$'Show as'' cannot be parsed correct.
HTML code '$' checked="checked"'' cannot be parsed correct.
HTML code '$'Button'' cannot be parsed correct.
HTML code '$' checked="checked"'' cannot be parsed correct.
HTML code '$'Link'' cannot be parsed correct.
HTML code '$'Background colour'' cannot be parsed correct.
HTML code '$'<input type="text" name="button_2_button_colour_field" id="cli-colour-btn-button-1" value="$the_options_button_2_button_colour" class="my-color-field" />'' cannot be parsed correct.
HTML code '$'URL or Page?'' cannot be parsed correct.
HTML code '$' checked="checked"'' cannot be parsed correct.
HTML code '$'URL'' cannot be parsed correct.
HTML code '$' checked="checked"'' cannot be parsed correct.
HTML code '$'Page'' cannot be parsed correct.
HTML code '$'URL'' cannot be parsed correct.
HTML code '$'$the_options_button_2_url'' cannot be parsed correct.
HTML code '$'Page'' cannot be parsed correct.
HTML code '$'Select One'' cannot be parsed correct.
HTML code '$'$page'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'$page'' cannot be parsed correct.
HTML code '$'The currently selected page does not exist. Please select a new page.'' cannot be parsed correct.
HTML code '$'Hide cookie bar in this page/URL'' cannot be parsed correct.
HTML code '$' checked="checked"'' cannot be parsed correct.
HTML code '$'Yes'' cannot be parsed correct.
HTML code '$' checked="checked"'' cannot be parsed correct.
HTML code '$'No'' cannot be parsed correct.
HTML code '$'Open in a new window'' cannot be parsed correct.
HTML code '$' checked="checked"'' cannot be parsed correct.
HTML code '$'Yes'' cannot be parsed correct.
HTML code '$' checked="checked"'' cannot be parsed correct.
HTML code '$'No'' cannot be parsed correct.
HTML code '$'Do not sell'' cannot be parsed correct.
HTML code '$'Customise the appearance of CCPA notice. Enabling âShow CCPA noticeâ displays the notice on the consent bar and records prior consent from the user. Alternatively, insert CCPA shortcode [wt_cli_ccpa_optout] to render CCPA notice in a specific page of your site, preferably, cookie policy page.'' cannot be parsed correct.
HTML code '$'CCPA Text'' cannot be parsed correct.
HTML code '$'stripslashes($the_options["button_6_text"])'' cannot be parsed correct.
HTML code '$'Show as'' cannot be parsed correct.
HTML code '$' checked="checked"'' cannot be parsed correct.
HTML code '$'Link'' cannot be parsed correct.
HTML code '$' checked="checked" '' cannot be parsed correct.
HTML code '$'Checkbox'' cannot be parsed correct.
HTML code '$'The shortcode will be represented as a link whereever used.'' cannot be parsed correct.
HTML code '$'The shortcode will be represented as a checkbox with select option to record consent.'' cannot be parsed correct.
HTML code '$'Text colour'' cannot be parsed correct.
HTML code '$'<input type="text" name="button_6_link_colour_field" id="cli-colour-link-button-6" value="$the_options_button_6_link_colour" class="my-color-field" />'' cannot be parsed correct.
HTML code '$'Accept All Button'' cannot be parsed correct.
HTML code '$'This button/link can be customised to either simply close the cookie bar, or follow a link. You can also customise the colours and styles, and show it as a link or a button.'' cannot be parsed correct.
HTML code '$'Text'' cannot be parsed correct.
HTML code '$'stripslashes($the_options["button_7_text"])'' cannot be parsed correct.
HTML code '$'Text colour'' cannot be parsed correct.
HTML code '$'<input type="text" name="button_7_link_colour_field" id="cli-colour-link-button-7" value="$the_options_button_7_link_colour" class="my-color-field" />'' cannot be parsed correct.
HTML code '$'Show as'' cannot be parsed correct.
HTML code '$' checked="checked" '' cannot be parsed correct.
HTML code '$'Button'' cannot be parsed correct.
HTML code '$' checked="checked"'' cannot be parsed correct.
HTML code '$'Link'' cannot be parsed correct.
HTML code '$'Background colour'' cannot be parsed correct.
HTML code '$'<input type="text" name="button_7_button_colour_field" id="cli-colour-btn-button-7" value="$the_options_button_7_button_colour" class="my-color-field" />'' cannot be parsed correct.
HTML code '$'Action'' cannot be parsed correct.
HTML code '$'URL'' cannot be parsed correct.
HTML code '$'$the_options_button_7_url'' cannot be parsed correct.
HTML code '$'Button will only link to URL if Action = Open URL'' cannot be parsed correct.
HTML code '$'Open URL in new window?'' cannot be parsed correct.
HTML code '$' checked="checked"'' cannot be parsed correct.
HTML code '$'Yes'' cannot be parsed correct.
HTML code '$' checked="checked"'' cannot be parsed correct.
HTML code '$'No'' cannot be parsed correct.
HTML code '$'Size'' cannot be parsed correct.
HTML code '$'$target_id'' cannot be parsed correct.
HTML code '$'General'' cannot be parsed correct.
HTML code '$'Other'' cannot be parsed correct.
HTML code '$'Enable cookie bar'' cannot be parsed correct.
HTML code '$' checked="checked"'' cannot be parsed correct.
HTML code '$'On'' cannot be parsed correct.
HTML code '$' checked="checked" '' cannot be parsed correct.
HTML code '$'Off'' cannot be parsed correct.
HTML code '$'Auto-hide(Accept) cookie bar after delay?'' cannot be parsed correct.
HTML code '$' checked="checked"'' cannot be parsed correct.
HTML code '$'Yes'' cannot be parsed correct.
HTML code '$' checked="checked"'' cannot be parsed correct.
HTML code '$'No'' cannot be parsed correct.
HTML code '$'Link'' cannot be parsed correct.
HTML code '$'Background colour'' cannot be parsed correct.
HTML code '$'<input type="text" name="button_4_button_colour_field" id="cli-colour-btn-button-4" value="$the_options_button_4_button_colour" class="my-color-field" />'' cannot be parsed correct.
HTML code '$'Read more'' cannot be parsed correct.
HTML code '$'âRead moreâ redirects users to the âPrivacy & Cookie Policyâ page. Create a âPrivacy & Cookie Policyâ page for your site from here.'' cannot be parsed correct.
HTML code '$'wp_kses(__("Insert the shortcode <strong>[cookie_link]</strong> in <strong>Customise Cookie Bar > Cookie bar > Message</strong> to include âRead moreâ within the cookie consent bar.", "cookie-law-info"), ["p" => [], "strong" => []])'' cannot be parsed correct.
HTML code '$'Text Colour'' cannot be parsed correct.
HTML code '$'<input type="text" name="text_field" id="cli-colour-text" value="$the_options_text" class="my-color-field" data-default-color="#000" />'' cannot be parsed correct.
HTML code '$'Font'' cannot be parsed correct.
HTML code '$'Show cookie bar as'' cannot be parsed correct.
HTML code '$'Banner'' cannot be parsed correct.
HTML code '$'Popup'' cannot be parsed correct.
HTML code '$'Widget'' cannot be parsed correct.
HTML code '$'Position'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'Left'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'Right'' cannot be parsed correct.
HTML code '$'Add overlay?'' cannot be parsed correct.
HTML code '$' checked="checked"'' cannot be parsed correct.
HTML code '$'Yes'' cannot be parsed correct.
HTML code '$' checked="checked"'' cannot be parsed correct.
HTML code '$'No'' cannot be parsed correct.
HTML code '$'When the popup is active, an overlay will block the user from browsing the site.'' cannot be parsed correct.
HTML code '$'`Accept on scroll` will not work along with this option.'' cannot be parsed correct.
HTML code '$'Position:'' cannot be parsed correct.
HTML code '$'Header'' cannot be parsed correct.
HTML code '$'Footer'' cannot be parsed correct.
HTML code '$' checked="checked"'' cannot be parsed correct.
HTML code '$'Fix bar on header'' cannot be parsed correct.
HTML code '$' checked="checked"'' cannot be parsed correct.
HTML code '$'Move with the scroll'' cannot be parsed correct.
HTML code '$'On load'' cannot be parsed correct.
HTML code '$'Animate'' cannot be parsed correct.
HTML code '$'Sticky'' cannot be parsed correct.
HTML code '$'Milliseconds until hidden'' cannot be parsed correct.
HTML code '$'$the_options_show_once'' cannot be parsed correct.
HTML code '$'Specify milliseconds (not seconds)'' cannot be parsed correct.
HTML code '$'seconds'' cannot be parsed correct.
HTML code '$'Auto-hide cookie bar if the user scrolls ( Accept on Scroll )?'' cannot be parsed correct.
HTML code '$' checked="checked"'' cannot be parsed correct.
HTML code '$'Yes'' cannot be parsed correct.
HTML code '$' checked="checked"'' cannot be parsed correct.
HTML code '$'No'' cannot be parsed correct.
HTML code '$'As per latest GDPR policies it is required to take an explicit consent for the cookies. Use this option with discretion especially if you serve EU'' cannot be parsed correct.
HTML code '$'This option will not work along with `Popup overlay`.'' cannot be parsed correct.
HTML code '$'Other'' cannot be parsed correct.
HTML code '$'Reload after "scroll accept" event?'' cannot be parsed correct.
HTML code '$' checked="checked"  '' cannot be parsed correct.
HTML code '$'Yes'' cannot be parsed correct.
HTML code '$' checked="checked" '' cannot be parsed correct.
HTML code '$'No'' cannot be parsed correct.
HTML code '$'Reload after Accept button click'' cannot be parsed correct.
HTML code '$' checked="checked" '' cannot be parsed correct.
HTML code '$'Yes'' cannot be parsed correct.
HTML code '$' checked="checked" '' cannot be parsed correct.
HTML code '$'No'' cannot be parsed correct.
HTML code '$'Reload after Reject button click'' cannot be parsed correct.
HTML code '$' checked="checked" '' cannot be parsed correct.
HTML code '$'Yes'' cannot be parsed correct.
HTML code '$' checked="checked" '' cannot be parsed correct.
HTML code '$'No'' cannot be parsed correct.
HTML code '$'$target_id'' cannot be parsed correct.
HTML code '$'Shortcodes'' cannot be parsed correct.
HTML code '$'Help Links'' cannot be parsed correct.
HTML code '$'Cookie bar shortcodes'' cannot be parsed correct.
HTML code '$'You can insert the shortcodes in the Settings > Customise Cookie Bar > Cookie bar > Message to get it rendered on the cookie consent bar of your site.'' cannot be parsed correct.
HTML code '$'This is the "main button" you customise above.'' cannot be parsed correct.
HTML code '$'This is the cookie reject button shortcode.'' cannot be parsed correct.
HTML code '$'This is the cookie settings button rendering shortcode.'' cannot be parsed correct.
HTML code '$'This is the "read more" link you customise above.'' cannot be parsed correct.
HTML code '$'Setup margin for above buttons'' cannot be parsed correct.
HTML code '$'Other shortcodes'' cannot be parsed correct.
HTML code '$'These shortcodes can be used in pages and posts on your website. It is not recommended to use these inside the cookie bar itself.'' cannot be parsed correct.
HTML code '$'This prints out a nice table of cookies, in line with the guidance given by the ICO.'' cannot be parsed correct.
HTML code '$'You need to enter the cookies your website uses via the Cookie Law Info menu in your WordPress dashboard.'' cannot be parsed correct.
HTML code '$'Styles included'' cannot be parsed correct.
HTML code '$'Columns available'' cannot be parsed correct.
HTML code '$'Will print all columns by default.'' cannot be parsed correct.
HTML code '$'This shortcode will display a normal HTML link which when clicked, will delete the cookie set by Cookie Law Info (this cookie is used to remember that the cookie bar is closed).'' cannot be parsed correct.
HTML code '$'Add any text you like- useful if you want e.g. another language to English.'' cannot be parsed correct.
HTML code '$'Add content after accepting the cookie notice.'' cannot be parsed correct.
HTML code '$'Help Links'' cannot be parsed correct.
HTML code '$'plugin_dir_url(CLI_PLUGIN_FILENAME)admin/images/'' cannot be parsed correct.
HTML code '$'Documentation'' cannot be parsed correct.
HTML code '$'Refer to our documentation to set and get started'' cannot be parsed correct.
HTML code '$'Documentation'' cannot be parsed correct.
HTML code '$'plugin_dir_url(CLI_PLUGIN_FILENAME)admin/images/'' cannot be parsed correct.
HTML code '$'Help and Support'' cannot be parsed correct.
HTML code '$'We would love to help you on any queries or issues.'' cannot be parsed correct.
HTML code '$'Contact Us'' cannot be parsed correct.
HTML code '$'$target_id'' cannot be parsed correct.
HTML code '$'Cookie bar'' cannot be parsed correct.
HTML code '$'Revisit consent'' cannot be parsed correct.
HTML code '$'Message Heading'' cannot be parsed correct.
HTML code '$'stripslashes($the_options["bar_heading_text"])'' cannot be parsed correct.
HTML code '$'Input text to have a heading for the cookie consent bar. Leave it blank if you do not need one.'' cannot be parsed correct.
HTML code '$'Message'' cannot be parsed correct.
HTML code '$'apply_filters("format_to_edit", stripslashes($the_options["notify_message"]))</textarea>'' cannot be parsed correct.
HTML code '$'Modify/edit the content of the cookie consent bar.'' cannot be parsed correct.
HTML code '$'Supports shortcodes.(link shortcodes to help link) e.g. [cookie_accept_all] for accept all button, [cookie_button] for accept button, [cookie_reject] for reject button, [cookie_link] for Read more, [cookie_settings] for cookie settings.'' cannot be parsed correct.
HTML code '$'Cookie Bar Colour'' cannot be parsed correct.
HTML code '$'<input type="text" name="background_field" id="cli-colour-background" value="$the_options_background" class="my-color-field" data-default-color="#fff" />'' cannot be parsed correct.
HTML code '$'In regards to CCPA compliance'' cannot be parsed correct.
HTML code '$'Cookie notice customization'' cannot be parsed correct.
HTML code '$'Set up cookie notice for multilingual websites'' cannot be parsed correct.
HTML code '$'Pre-built templates for cookie notice'' cannot be parsed correct.
HTML code '$'Standard template'' cannot be parsed correct.
HTML code '$'26 Template'' cannot be parsed correct.
HTML code '$'Cookie scanner'' cannot be parsed correct.
HTML code '$'Up to 100 URLs'' cannot be parsed correct.
HTML code '$'Up to 2000 URLs'' cannot be parsed correct.
HTML code '$'Auto-blocking of third-party cookies'' cannot be parsed correct.
HTML code '$'From plugins'' cannot be parsed correct.
HTML code '$'From plugins & services'' cannot be parsed correct.
HTML code '$'See list'' cannot be parsed correct.
HTML code '$'Revisit consent widget'' cannot be parsed correct.
HTML code '$'Let users revoke their consent'' cannot be parsed correct.
HTML code '$'Cookie-audit table'' cannot be parsed correct.
HTML code '$'Display your websiteâs cookie list for your site visitors using a shortcode'' cannot be parsed correct.
HTML code '$'Cookie category based consent'' cannot be parsed correct.
HTML code '$'Privacy/cookie policy generator'' cannot be parsed correct.
HTML code '$'Record user consent for cookies'' cannot be parsed correct.
HTML code '$'Anonymized IP, cookie categories, user ID, timestamp, etc.'' cannot be parsed correct.
HTML code '$'On hide'' cannot be parsed correct.
HTML code '$'Animate'' cannot be parsed correct.
HTML code '$'Sticky'' cannot be parsed correct.
HTML code '$'wp_kses(__("Revisit consent will allow the visitors to view/edit/revoke their prior preferences. Enable to display a sticky/fixed widget widget at the footer of your website. You can also manually insert a widget by adding the shortcode <strong>[wt_cli_manage_consent]</strong> to your website.", "cookie-law-info"), ["p" => [], "strong" => []])'' cannot be parsed correct.
HTML code '$'Enable revisit consent widget'' cannot be parsed correct.
HTML code '$'Enable to display a sticky/fixed widget at the footer of your website (remains fixed on page scroll).'' cannot be parsed correct.
HTML code '$'Widget position'' cannot be parsed correct.
HTML code '$'Right'' cannot be parsed correct.
HTML code '$'Left'' cannot be parsed correct.
HTML code '$'Tab Position'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'Bottom Right'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'Bottom Left'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'Top Right'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'Top Left'' cannot be parsed correct.
HTML code '$'From Right Margin'' cannot be parsed correct.
HTML code '$'From Left Margin'' cannot be parsed correct.
HTML code '$'From Left Margin'' cannot be parsed correct.
HTML code '$'$the_options_showagain_x_position'' cannot be parsed correct.
HTML code '$'Specify the widget distance from margin in âpxâ or  â%â . e.g. 100px or 30%'' cannot be parsed correct.
HTML code '$'Text on the widget'' cannot be parsed correct.
HTML code '$'$the_options_showagain_text'' cannot be parsed correct.
HTML code '$'Input a text to appear on the revisit consent widget.'' cannot be parsed correct.
HTML code '$'Update Settings'' cannot be parsed correct.
HTML code '$'$target_id'' cannot be parsed correct.
HTML code '$'Features'' cannot be parsed correct.
HTML code '$'Free'' cannot be parsed correct.
HTML code '$'Premium'' cannot be parsed correct.
HTML code '$'Supported regulations:'' cannot be parsed correct.
HTML code '$'GDPR (RGPD, DSGVO), CCPA, CNIL, LGPD'' cannot be parsed correct.
HTML code '$'Show cookie notice'' cannot be parsed correct.
HTML code '$'Display âDo Not Sell My
		  Personal Informationâ link.'' cannot be parsed correct.
HTML code '$'Option to show cookie notice only to users from the EU'' cannot be parsed correct.
HTML code '$'Option to show âDo Not Sell My Personal Informationâ link only to visitors from California'' cannot be parsed correct.
HTML code '$'Option to show âDo Not Sell My Personal Informationâ link only to visitors from California'' cannot be parsed correct.
HTML code '$'Disable âPowered by CookieYesâ branding'' cannot be parsed correct.
HTML code '$'From cookie notices'' cannot be parsed correct.
HTML code '$'Renew user consent'' cannot be parsed correct.
HTML code '$'Categorize personal data collecting cookies'' cannot be parsed correct.
HTML code '$'In regards to CCPA compliance'' cannot be parsed correct.
HTML code '$'Cookie notice live preview'' cannot be parsed correct.
HTML code '$'During cookie notice customization'' cannot be parsed correct.
HTML code '$'CLI_VERSION'' cannot be parsed correct.
HTML code '$'Upgrade to premium'' cannot be parsed correct.
HTML code '$'CLI_PLUGIN_URLimages/bg.svg'' cannot be parsed correct.
HTML code '$'CLI_PLUGIN_URLimages/white-crown.svg'' cannot be parsed correct.
HTML code '$'CLI_PLUGIN_URLimages/blue-crown.svg'' cannot be parsed correct.
HTML code '$'CLI_PLUGIN_URLimages/list-icon.svg'' cannot be parsed correct.
HTML code '$'CLI_PLUGIN_URLimages/tick.svg'' cannot be parsed correct.
HTML code '$'CLI_PLUGIN_URLimages/cross.svg'' cannot be parsed correct.
HTML code '$'_e("Get access to advanced features for GDPR compliance", "cookie-law-info")'' cannot be parsed correct.
HTML code '$'CLI_VERSION'' cannot be parsed correct.
HTML code '$'_e("Upgrade to premium", "cookie-law-info")'' cannot be parsed correct.
HTML code '$'CLI_PLUGIN_URLimages/money-back.svg'' cannot be parsed correct.
HTML code '$'30 Day Money Back Guarantee'' cannot be parsed correct.
HTML code '$'CLI_PLUGIN_URLimages/support.svg'' cannot be parsed correct.
HTML code '$'Fast and Priority Support'' cannot be parsed correct.
HTML code '$'Enhanced cookie scanning:'' cannot be parsed correct.
HTML code '$'Scan up to 2000 URLs in a go.'' cannot be parsed correct.
HTML code '$'Auto-block cookies from popular third-party services & plugins:'' cannot be parsed correct.
HTML code '$'Supports Google analytics, Facebook pixel, Google tag manager, Hotjar analytics, +20 more.'' cannot be parsed correct.
HTML code '$'Be consent proof ready:'' cannot be parsed correct.
HTML code '$'Keep a record of users who have given consent along with details such as cookie categories, user ID, time stamp, etc.'' cannot be parsed correct.
HTML code '$'Display cookie notice based on user location:'' cannot be parsed correct.
HTML code '$'Option to show cookie notice only to users from the EU.'' cannot be parsed correct.
HTML code '$'Show âDo not sell my personal informationâ link only to users from california.'' cannot be parsed correct.
HTML code '$'Multiple pre-built templates for cookie notice:'' cannot be parsed correct.
HTML code '$'Choose from 26 pre-designed and customizable cookie notice templates.'' cannot be parsed correct.
HTML code '$'Live preview of cookie notice:'' cannot be parsed correct.
HTML code '$'Get live preview of cookie notice as and when you customize them.'' cannot be parsed correct.
HTML code '$'Disable âPowered by CookieYesâ branding:'' cannot be parsed correct.
HTML code '$'<style type="text/css">
        #cookie-law-info-update .update-message p:last-child{ display:none;}     
        #cookie-law-info-update ul{ list-style:disc; margin-left:30px;}
        .wf-update-message{ padding-left:30px;}
        </style>
        <div class="update-message wf-update-message"><div style="color: #f56e28;">Please make sure the cache is cleared after each plugin update especially if you have minified JS and/or CSS files.</div>str_replace(["<p>", "</p>"], ["<div>", "</div>"], $data["upgrade_notice"])</div>'' cannot be parsed correct.
HTML code '$'Remove CookieYes branding from cookie notices.'' cannot be parsed correct.
HTML code '$'Renew user consent:'' cannot be parsed correct.
HTML code '$'Renew user consent when you update your privacy/cookie policy or when needed otherwise.'' cannot be parsed correct.
HTML code '$'Categorize personal data collecting cookies:'' cannot be parsed correct.
HTML code '$'Categorize personal data collecting cookies for âDo not sell my personal informationâ link.'' cannot be parsed correct.
HTML code '$'CLI_VERSION'' cannot be parsed correct.
HTML code '$'Upgrade to premium'' cannot be parsed correct.
HTML code '$'Compare Free and Premium'' cannot be parsed correct.
HTML code '$'Reset Password'' cannot be parsed correct.
HTML code '$'esc_attr__("Email", "cookie-law-info")'' cannot be parsed correct.
HTML code '$'$this->get_user_email()'' cannot be parsed correct.
HTML code '$'Send password reset email'' cannot be parsed correct.
HTML code '$'Welcome to CookieYes'' cannot be parsed correct.
HTML code '$'Enter your email to create an account with CookieYes. By clicking âConnectâ, your CookieYes account will be created automatically and you can start scanning your website for cookies right away!'' cannot be parsed correct.
HTML code '$'esc_attr__("Email", "cookie-law-info")'' cannot be parsed correct.
HTML code '$'$this->get_user_email()'' cannot be parsed correct.
HTML code '$'Connect'' cannot be parsed correct.
HTML code '$'Delete site data from CookieYes'' cannot be parsed correct.
HTML code '$'Do you really want to delete your website from CookieYes'' cannot be parsed correct.
HTML code '$'This action will clear all your website data from CookieYes. If you have multiple websites added to your CookieYes account, then only the data associated with this website get deleted. Otherwise, your entire account will be deleted.'' cannot be parsed correct.
HTML code '$'Delete this website'' cannot be parsed correct.
HTML code '$'$this_banner_css_class'' cannot be parsed correct.
HTML code '$'$this_plugin_title'' cannot be parsed correct.
HTML code '$'$this_banner_message'' cannot be parsed correct.
HTML code '$'$this_later_btn_text'' cannot be parsed correct.
HTML code '$'$this_review_btn_text'' cannot be parsed correct.
HTML code '$'$this_webtoffee_logo_url'' cannot be parsed correct.
HTML code '$'esc_js($nonce)'' cannot be parsed correct.
HTML code '$'esc_js($this->ajax_action_name)'' cannot be parsed correct.
HTML code '$'esc_js($this->banner_css_class)'' cannot be parsed correct.
HTML code '$'esc_js($this->review_url)'' cannot be parsed correct.
HTML code '$'esc_js($this->banner_css_class)'' cannot be parsed correct.
HTML code '$'esc_js($ajax_url)'' cannot be parsed correct.
HTML code '$'esc_js($this->banner_css_class)'' cannot be parsed correct.
HTML code '$'esc_js($ajax_url)'' cannot be parsed correct.
HTML code '$'$k'' cannot be parsed correct.
HTML code '$'$data_head_scripts'' cannot be parsed correct.
HTML code '$'$this->pre_process_scripts($slug, $script, $head)'' cannot be parsed correct.
HTML code '$'<table class="form-table">
                    <tr valign="top">
                        <th scope="row">Advanced script rendering</th>
                        <td>
                            <input type="radio" id="wt_cli_js_blocking_enable_field" name="wt_cli_js_blocking_field" class="styled" value="yes" checked($js_blocking, true, false) /><label for="wt_cli_js_blocking_enable_field" >Enable</label>
                            <input type="radio" id="wt_cli_js_blocking_disable_field" name="wt_cli_js_blocking_field" class="styled" value="no" checked($js_blocking, false, false) /><label for="wt_cli_js_blocking_disable_field" >Disable</label>
                            <span class="cli_form_help" style="margin-top:10px;">Advanced script rendering will render the blocked scripts using javascript thus eliminating the need for a page refresh. It is also optimized for caching since there is no server-side processing after obtaining the consent.</span>
                        </td>
                        </tr>
                 </table>'' cannot be parsed correct.
HTML code '$'$plugins_status_class'' cannot be parsed correct.
HTML code '$'$script_id'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'$title'' cannot be parsed correct.
HTML code '$'$plugins_status_text'' cannot be parsed correct.
HTML code '$'$plugin'' cannot be parsed correct.
HTML code '$'$script_id'' cannot be parsed correct.
HTML code '$'$plugin'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'selected($plugin_data["category"], $key, false)'' cannot be parsed correct.
HTML code '$'$term_title'' cannot be parsed correct.
HTML code '$'$description'' cannot be parsed correct.
HTML code '$'Manage Script Blocking'' cannot be parsed correct.
HTML code '$'wp_kses(__("Advanced script rendering is currently disabled. It should be enabled for the automatic script blocker to function. <a href="%s">Enable.</a>", "cookie-law-info"), ["a" => ["href" => []]])'' cannot be parsed correct.
HTML code '$'$cli_icon'' cannot be parsed correct.
HTML code '$'$script_blocker_text'' cannot be parsed correct.
HTML code '$'<a id="wt-cli-script-blocker-action">%s</a>'' cannot be parsed correct.
HTML code '$'$action_value'' cannot be parsed correct.
HTML code '$'wp_kses(__("Below is the list of plugins currently supported for auto blocking. Plugins marked inactive are either not installed or activated on your website. Enabled plugins will be blocked by default on the front-end of your website prior to obtaining user consent and rendered respectively based on consent. <a href="%s" target="_blank">Read more.</a>", "cookie-law-info"), ["a" => ["href" => [], "target" => []]])'' cannot be parsed correct.
HTML code '$'$script_blocker_class'' cannot be parsed correct.
HTML code '$'No'' cannot be parsed correct.
HTML code '$'Name'' cannot be parsed correct.
HTML code '$'Enabled'' cannot be parsed correct.
HTML code '$'Enabled: Plugins will be blocked by default prior to obtaining user consent.'' cannot be parsed correct.
HTML code '$'Disabled: Plugins will be rendered prior to obtaining consent.'' cannot be parsed correct.
HTML code '$'Category'' cannot be parsed correct.
HTML code '$'Description'' cannot be parsed correct.
HTML code '$'$cookie_title'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'do_shortcode($category_description, "cookielawinfo-category")'' cannot be parsed correct.
HTML code '$'wp_kses(trim(stripslashes($notify_html)), array_merge(["input" => ["type" => "true", "style" => true, "id" => true, "class" => true]], wp_kses_allowed_html("post")))'' cannot be parsed correct.
HTML code '$'Close'' cannot be parsed correct.
HTML code '$'SAVE & ACCEPT'' cannot be parsed correct.
HTML code '$'Powered by'' cannot be parsed correct.
HTML code '$'CLI_PLUGIN_URLpublic/images/logo-cookieyes.svg'' cannot be parsed correct.
HTML code '$'apply_filters("wt_cli_change_privacy_overview_title_tag", esc_html($overview_title), "<h4>", "</h4>")'' cannot be parsed correct.
HTML code '$'<h4>trim($overview_title)</h4>'' cannot be parsed correct.
HTML code '$'do_shortcode(stripslashes($privacy_overview_content))'' cannot be parsed correct.
HTML code '$'<a class="cli-privacy-readmore"  aria-label="Show more" tabindex="0" role="button" data-readmore-text="Show more" data-readless-text="Show less"></a'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'$cookie_title'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'$cookie_title'' cannot be parsed correct.
HTML code '$'Always Enabled'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'checked($checked, true, false)'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'Enabled'' cannot be parsed correct.
HTML code '$'Disabled'' cannot be parsed correct.
HTML code '$' selected="selected"'' cannot be parsed correct.
HTML code '$'---'' cannot be parsed correct.
HTML code '$'<i>---</i>'' cannot be parsed correct.
HTML code '$'<div class="fade error"><p><strong>'' cannot be parsed correct.
HTML code '$'</strong></p></div>'' cannot be parsed correct.
HTML code '$'<div class="updated"><p><strong>'' cannot be parsed correct.
HTML code '$'</strong></p></div>'' cannot be parsed correct.
HTML code '$'<textarea name="notify_message_field" class="vvv_textbox">'' cannot be parsed correct.
HTML code '$'<!--googleoff: all-->'' cannot be parsed correct.
HTML code '$'<!--googleon: all-->'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:01:49.134827.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.042490.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 54 do_action/apply_filters calls and 75 add_action/add_filter calls. Now connecting do-add pairs.
Added 8 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:06.583838.

8 PHP_REACHES edges created
8 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbaseDetector
### Start running FrontBaseDetector
### Finish running DbplusDetector
### Start running HashDetector
### Finish running FileProDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running FrontBaseDetector
### Start running IngresDetector
### Finish running InformixDetector
### Start running jQueryRequestDetector
### Finish running IBMDb2Detector
### Start running maxdbDetector
### Finish running FirebirdInterBaseDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running MongoDbDetector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running ArrayElementDetector
### Start running Oci8Detector
### Finish running MySQLDetector
### Start running OpenSSLDetector
### Finish running Oci8Detector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running HashDetector
### Start running PhpCurlDetector
### Finish running PhpCurlDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PasswordHashingDetector
### Start running PHPRetrievalDetector
### Finish running PHPRetrievalDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPIncludedDetector
### Start running PhpVarDetector
### Finish running maxdbDetector
### Start running PostgreSQLDetector
### Finish running PHPStorageDetector
### Start running PropertyDetector
### Finish running PhpVarDetector
### Start running Sqlite3Detector
### Finish running MySQLiDetector
### Start running SqliteDetector
### Finish running jQueryRequestDetector
### Start running SqlServerDetector
### Finish running OpenSSLDetector
### Start running SybaseDetector
### Finish running PostgreSQLDetector
### Start running TokyoTyrantDetector
### Finish running Sqlite3Detector
### Start running UserInputDetector
### Finish running TokyoTyrantDetector
### Start running VariableDetector
### Finish running SqliteDetector
### Start running WordpressHashingFnDetector
### Finish running SqlServerDetector
### Start running WordPressRemoteDetector
### Finish running SybaseDetector
### Start running WordPressRetrievalDetector
### Finish running PropertyDetector
### Start running WordPressStorageDetector
### Finish running WordpressHashingFnDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running UserInputDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running GenericDatabaseUsageDetector
### Start running UninstallDetector
### Finish running VariableDetector
https://wp-scanner.cookieyes.com/api/v2/
### Finish running WordPressRemoteDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running WordPressRetrievalDetector
### Finish running WordPressStorageDetector
### Finished running detectors
includes/class-cookie-law-info-cookieyes.php:572
  - Request variable '$_POST["email"]' of personal types {'email'} is found.
  - Data types: email
includes/class-cookie-law-info-cookieyes.php:572
  - Request variable '$_POST["email"]' of personal types {'email'} is found.
  - Data types: email
includes/class-cookie-law-info-cookieyes.php:621
  - Request variable '$_POST["email"]' of personal types {'email'} is found.
  - Data types: email
includes/class-cookie-law-info-cookieyes.php:621
  - Request variable '$_POST["email"]' of personal types {'email'} is found.
  - Data types: email
includes/class-cookie-law-info-cookieyes.php:726
  - Request variable '$_POST["email"]' of personal types {'email'} is found.
  - Data types: email
includes/class-cookie-law-info-cookieyes.php:726
  - Request variable '$_POST["email"]' of personal types {'email'} is found.
  - Data types: email
public/class-cookie-law-info-public.php:448
  - Request variable '$_POST["cs_preview_state"]' of personal types {'state'} is found.
  - Data types: state
public/modules/script-blocker/script-blocker.php:183
  - Request variable '$_POST["cli_script_blocker_state"]' of personal types {'state'} is found.
  - Data types: state
public/modules/script-blocker/script-blocker.php:183
  - Request variable '$_POST["cli_script_blocker_state"]' of personal types {'state'} is found.
  - Data types: state 

None:34
  - External request to possible URLs [].
  - Data types: remote
None:35
  - External request to possible URLs [].
  - Data types: remote
None:67
  - External request to possible URLs [].
  - Data types: remote
None:73
  - External request to possible URLs [].
  - Data types: remote
None:78
  - External request to possible URLs [].
  - Data types: remote
None:87
  - External request to possible URLs [].
  - Data types: remote
None:100
  - External request to possible URLs [].
  - Data types: remote
None:102
  - External request to possible URLs [].
  - Data types: remote
None:121
  - External request to possible URLs [].
  - Data types: remote
None:133
  - External request to possible URLs [].
  - Data types: remote
None:149
  - External request to possible URLs [].
  - Data types: remote
None:153
  - External request to possible URLs [].
  - Data types: remote
None:171
  - External request to possible URLs [].
  - Data types: remote
None:194
  - External request to possible URLs [].
  - Data types: remote
None:202
  - External request to possible URLs [].
  - Data types: remote
None:234
  - External request to possible URLs [].
  - Data types: remote
None:245
  - External request to possible URLs [].
  - Data types: remote
None:274
  - External request to possible URLs [].
  - Data types: remote
None:298
  - External request to possible URLs [].
  - Data types: remote
None:336
  - External request to possible URLs [].
  - Data types: remote
None:368
  - External request to possible URLs [].
  - Data types: remote
None:402
  - External request to possible URLs [].
  - Data types: remote
None:438
  - External request to possible URLs [].
  - Data types: remote 

includes/class-cookie-law-info-cookieyes.php:352
  - object property '$this->user_email' of personal types {'email'} is found.
  - Data types: email
includes/class-cookie-law-info-cookieyes.php:354
  - object property '$this->user_email' of personal types {'email'} is found.
  - Data types: email
includes/class-cookie-law-info-cookieyes.php:356
  - object property '$this->user_email' of personal types {'email'} is found.
  - Data types: email
includes/class-cookie-law-info-cookieyes.php:458
  - object property '$this->user_email' of personal types {'email'} is found.
  - Data types: email
includes/class-cookie-law-info-cookieyes.php:573
  - object property '$this->user_email' of personal types {'email'} is found.
  - Data types: email
includes/class-cookie-law-info-review-request.php:68
  - object property '$this->banner_state_option_name' of personal types {'state'} is found.
  - Data types: state
includes/class-cookie-law-info-review-request.php:73
  - object property '$this->banner_state_option_name' of personal types {'state'} is found.
  - Data types: state
includes/class-cookie-law-info-review-request.php:74
  - object property '$this->current_banner_state' of personal types {'state'} is found.
  - Data types: state
includes/class-cookie-law-info-review-request.php:74
  - object property '$this->current_banner_state' of personal types {'state'} is found.
  - Data types: state
includes/class-cookie-law-info-review-request.php:108
  - object property '$this->banner_state_option_name' of personal types {'state'} is found.
  - Data types: state
includes/class-cookie-law-info-review-request.php:219
  - object property '$this->current_banner_state' of personal types {'state'} is found.
  - Data types: state
includes/class-cookie-law-info-review-request.php:223
  - object property '$this->current_banner_state' of personal types {'state'} is found.
  - Data types: state
includes/class-cookie-law-info-review-request.php:223
  - object property '$this->current_banner_state' of personal types {'state'} is found.
  - Data types: state
includes/class-cookie-law-info-review-request.php:231
  - object property '$this->current_banner_state' of personal types {'state'} is found.
  - Data types: state 

admin/modules/cli-policy-generator/cli-policy-generator.php:28
  - variable '$post_states' of personal types {'state'} is found.
  - Data types: state
admin/modules/cli-policy-generator/cli-policy-generator.php:30
  - variable '$post_states' of personal types {'state'} is found.
  - Data types: state
admin/modules/cookie-scaner/cookie-scaner.php:711
  - variable '$ip_address' of personal types {'address', 'ip'} is found.
  - Data types: address, ip
admin/modules/cookie-scaner/cookie-scaner.php:713
  - variable '$ip_address' of personal types {'address', 'ip'} is found.
  - Data types: address, ip
admin/modules/cookie-scaner/cookie-scaner.php:715
  - variable '$ip_address' of personal types {'address', 'ip'} is found.
  - Data types: address, ip
admin/modules/cookie-scaner/cookie-scaner.php:715
  - variable '$ip_address' of personal types {'address', 'ip'} is found.
  - Data types: address, ip
admin/modules/cookie-scaner/cookie-scaner.php:716
  - variable '$ip_address' of personal types {'address', 'ip'} is found.
  - Data types: address, ip
admin/modules/cookies/cookies.php:390
  - variable '$default_state' of personal types {'state'} is found.
  - Data types: state
admin/modules/cookies/cookies.php:392
  - variable '$default_state' of personal types {'state'} is found.
  - Data types: state
admin/modules/cookies/cookies.php:531
  - variable '$cli_default_state' of personal types {'state'} is found.
  - Data types: state
admin/modules/cookies/cookies.php:534
  - variable '$default_state' of personal types {'state'} is found.
  - Data types: state
admin/modules/cookies/cookies.php:534
  - variable '$cli_default_state' of personal types {'state'} is found.
  - Data types: state
admin/modules/cookies/cookies.php:534
  - variable '$cli_default_state' of personal types {'state'} is found.
  - Data types: state
admin/modules/cookies/cookies.php:540
  - variable '$default_state' of personal types {'state'} is found.
  - Data types: state
admin/modules/cookies/cookies.php:620
  - variable '$term_default_state' of personal types {'state'} is found.
  - Data types: state
admin/modules/cookies/cookies.php:627
  - variable '$term_default_state' of personal types {'state'} is found.
  - Data types: state
admin/modules/cookies/cookies.php:628
  - variable '$term_default_state' of personal types {'state'} is found.
  - Data types: state
admin/modules/cookies/cookies.php:641
  - variable '$term_default_state' of personal types {'state'} is found.
  - Data types: state
admin/modules/cookies/cookies.php:643
  - variable '$term_default_state' of personal types {'state'} is found.
  - Data types: state
admin/modules/cookies/cookies.php:644
  - variable '$term_default_state' of personal types {'state'} is found.
  - Data types: state
includes/class-cookie-law-info-cookieyes.php:572
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/class-cookie-law-info-cookieyes.php:573
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/class-cookie-law-info-cookieyes.php:574
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/class-cookie-law-info-cookieyes.php:579
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/class-cookie-law-info-cookieyes.php:619
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/class-cookie-law-info-cookieyes.php:621
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/class-cookie-law-info-cookieyes.php:621
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/class-cookie-law-info-cookieyes.php:624
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/class-cookie-law-info-cookieyes.php:629
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/class-cookie-law-info-cookieyes.php:726
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/class-cookie-law-info-cookieyes.php:728
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/class-cookie-law-info-cookieyes.php:733
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/class-cookie-law-info-review-request.php:73
  - variable '$banner_state' of personal types {'state'} is found.
  - Data types: state
includes/class-cookie-law-info-review-request.php:74
  - variable '$banner_state' of personal types {'state'} is found.
  - Data types: state
includes/class-cookie-law-info-review-request.php:74
  - variable '$banner_state' of personal types {'state'} is found.
  - Data types: state
includes/class-cookie-law-info-review-request.php:150
  - variable '$new_banner_state' of personal types {'state'} is found.
  - Data types: state
includes/class-cookie-law-info-review-request.php:152
  - variable '$new_banner_state' of personal types {'state'} is found.
  - Data types: state
includes/class-cookie-law-info-review-request.php:156
  - variable '$new_banner_state' of personal types {'state'} is found.
  - Data types: state
includes/class-cookie-law-info-review-request.php:158
  - variable '$new_banner_state' of personal types {'state'} is found.
  - Data types: state
public/views/cookie-law-info_popup_content.php:50
  - variable '$category_default_state' of personal types {'state'} is found.
  - Data types: state
public/views/cookie-law-info_popup_content.php:54
  - variable '$category_default_state' of personal types {'state'} is found.
  - Data types: state
public/views/cookie-law-info_popup_content.php:54
  - variable '$category_default_state' of personal types {'state'} is found.
  - Data types: state
public/views/cookie-law-info_popup_content.php:63
  - variable '$category_default_state' of personal types {'state'} is found.
  - Data types: state 

admin/modules/cookie-scaner/classes/class-cookie-law-info-cookie-scanner-api.php:113
  - API call to wp_remote_post($endpoint, ["body" => wp_json_encode($request_body), "headers" => ["Content-Type" => "application/json", "Authorization" => "Bearer " . $token], "timeout" => 60]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
admin/modules/uninstall-feedback/uninstall-feedback.php:331
  - API call to wp_remote_post($this->api_url, ["method" => "POST", "timeout" => 45, "redirection" => 5, "httpversion" => "1.0", "blocking" => false, "body" => $data, "cookies" => []]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
includes/class-cookie-law-info-cookieyes.php:538
  - API call to wp_remote_get($endpoint, $request_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
includes/class-cookie-law-info-cookieyes.php:546
  - API call to wp_remote_post($endpoint, $request_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote 

admin/class-cookie-law-info-admin.php:91
  - RETRIEVAL call to get_option(CLI_SETTINGS_FIELD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-cookie-law-info-admin.php:98
  - RETRIEVAL call to get_option("cookielawinfo_privacy_overview_content_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-cookie-law-info-admin.php:235
  - RETRIEVAL call to get_option("cookielawinfo_privacy_overview_content_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-cookie-law-info-admin.php:351
  - RETRIEVAL call to get_option(CLI_ADMIN_OPTIONS_NAME) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-cookie-law-info-admin.php:394
  - RETRIEVAL call to get_option(CLI_ADMIN_OPTIONS_NAME) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-cookie-law-info-admin.php:399
  - RETRIEVAL call to get_option(CLI_MIGRATED_VERSION) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/class-cookie-law-info-admin.php:545
  - RETRIEVAL call to get_option("wt_cli_first_time_activated_plugin") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/modules/cli-policy-generator/cli-policy-generator.php:44
  - RETRIEVAL call to get_option("cli_pg_content_data") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/modules/cli-policy-generator/cli-policy-generator.php:69
  - RETRIEVAL call to get_option(self"policy_pageid") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/modules/cookie-scaner/classes/class-cookie-law-info-cookie-scanner-ajax.php:427
  - RETRIEVAL call to get_posts(["post_type" => CLI_POST_TYPE, "numberposts" => -1]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
admin/modules/cookie-scaner/classes/class-cookie-law-info-cookie-scanner-ajax.php:442
  - RETRIEVAL call to get_posts(["name" => $cookie["cookie_id"], "post_type" => CLI_POST_TYPE]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
admin/modules/cookie-scaner/cookie-scaner.php:153
  - RETRIEVAL call to dbDelta($create_table_sql). Passed arguments: 0: $queries (string[]|string). Returns (array).
admin/modules/cookie-scaner/cookie-scaner.php:169
  - RETRIEVAL call to dbDelta($create_table_sql). Passed arguments: 0: $queries (string[]|string). Returns (array).
admin/modules/cookie-scaner/cookie-scaner.php:228
  - RETRIEVAL call to dbDelta($sql . " " . $prop). Passed arguments: 0: $queries (string[]|string). Returns (array).
admin/modules/cookie-scaner/cookie-scaner.php:737
  - RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
admin/modules/cookie-scaner/cookie-scaner.php:741
  - RETRIEVAL call to get_post_custom($post->ID). Passed arguments: 0: $post_id (int). Returns (array).
admin/modules/cookies/cookies.php:69
  - RETRIEVAL call to get_option("finished_splitting_shared_terms") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/modules/cookies/cookies.php:77
  - RETRIEVAL call to get_metadata("term", $term_id, $key, $single) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 3: $single (bool), 2: $meta_key (string). Returns (mixed).
  - Data types: meta
admin/modules/cookies/cookies.php:187
  - RETRIEVAL call to get_post_custom($post->ID). Passed arguments: 0: $post_id (int). Returns (array).
admin/modules/cookies/cookies.php:198
  - RETRIEVAL call to get_post_custom($post->ID). Passed arguments: 0: $post_id (int). Returns (array).
admin/modules/cookies/cookies.php:209
  - RETRIEVAL call to get_post_custom($post->ID). Passed arguments: 0: $post_id (int). Returns (array).
admin/modules/cookies/cookies.php:221
  - RETRIEVAL call to get_post_custom($post->ID). Passed arguments: 0: $post_id (int). Returns (array).
admin/modules/cookies/cookies.php:265
  - RETRIEVAL call to get_post($post_id) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, post_meta, wp_post
admin/modules/cookies/cookies.php:273
  - RETRIEVAL call to get_post_custom(). Returns (array).
admin/modules/cookies/cookies.php:288
  - RETRIEVAL call to get_post_custom(). Returns (array).
admin/modules/cookies/cookies.php:294
  - RETRIEVAL call to get_post_custom(). Returns (array).
admin/modules/cookies/cookies.php:300
  - RETRIEVAL call to get_post_custom(). Returns (array).
admin/modules/cookies/cookies.php:448
  - RETRIEVAL call to get_option("cookielawinfo_thirdparty_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/modules/cookies/cookies.php:469
  - RETRIEVAL call to get_option("cookielawinfo_necessary_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/modules/cookies/cookies.php:588
  - RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
admin/modules/cookies/cookies.php:787
  - RETRIEVAL call to get_option("wt_cli_cookie_db_version", "1.0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/modules/cookies/cookies.php:830
  - RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
admin/partials/cookie-law-info-admin_settings.php:9
  - RETRIEVAL call to get_option($plugin_name . "_activation_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/views/admin-settings-buttons.php:306
  - RETRIEVAL call to get_post($the_options["button_2_page"]) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, post_meta, wp_post
cookie-law-info.php:50
  - RETRIEVAL call to get_option("WPLANG", "en_US") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
cookie-law-info.php:130
  - RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
cookie-law-info.php:136
  - RETRIEVAL call to get_post_custom($post->ID). Passed arguments: 0: $post_id (int). Returns (array).
includes/class-cookie-law-info-activator.php:67
  - RETRIEVAL call to get_option("wt_cli_db_version", Cookie_Law_Info"db_initial_version") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-cookie-law-info-activator.php:93
  - RETRIEVAL call to get_option("wt_cli_db_version", Cookie_Law_Info"db_initial_version") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-cookie-law-info-activator.php:120
  - RETRIEVAL call to get_option("wt_cli_version", "1.9.5") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-cookie-law-info-activator.php:135
  - RETRIEVAL call to get_option("wt_cli_cookie_db_version", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-cookie-law-info-cookieyes.php:417
  - RETRIEVAL call to get_option("wt_cli_cookieyes_options", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-cookie-law-info-cookieyes.php:932
  - RETRIEVAL call to get_option("wt_cli_ckyes_branding", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-cookie-law-info-cookieyes.php:1127
  - RETRIEVAL call to get_option("wt_cli_ckyes_scan_options", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-cookie-law-info-review-request.php:72
  - RETRIEVAL call to get_option($this->start_date_option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class-cookie-law-info-review-request.php:73
  - RETRIEVAL call to get_option($this->banner_state_option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class-cookie-law-info.php:283
  - RETRIEVAL call to get_option(CLI_SETTINGS_FIELD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class-cookie-law-info.php:350
  - RETRIEVAL call to get_option("wp_page_for_privacy_policy") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class-cookie-law-info.php:350
  - RETRIEVAL call to get_option("wp_page_for_privacy_policy") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class-cookie-law-info.php:625
  - RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
includes/class-cookie-law-info.php:634
  - RETRIEVAL call to get_post_meta($post->ID, "_cli_cookie_slugid", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-cookie-law-info.php:821
  - RETRIEVAL call to get_option("active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class-cookie-law-info.php:867
  - RETRIEVAL call to get_option("cli_heading_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class-cookie-law-info.php:898
  - RETRIEVAL call to get_option(CLI_SETTINGS_FIELD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class-cookie-law-info.php:901
  - RETRIEVAL call to get_transient("_wt_cli_first_time_activation") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
includes/class-cookie-law-info.php:911
  - RETRIEVAL call to get_transient("_wt_cli_first_time_activation") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
includes/class-cookie-law-info.php:926
  - RETRIEVAL call to get_option("cookielawinfo_js_blocking") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
public/class-cookie-law-info-public.php:73
  - RETRIEVAL call to get_transient("_wt_cli_first_time_activation") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
public/class-cookie-law-info-public.php:308
  - RETRIEVAL call to get_option("CLI_BYPASS") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
public/class-cookie-law-info-public.php:412
  - RETRIEVAL call to get_post_meta($cookie->ID, "_cli_cookie_sensitivity", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
public/class-cookie-law-info-public.php:413
  - RETRIEVAL call to get_post_meta($cookie->ID, "_cli_cookie_slugid", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
public/modules/script-blocker/script-blocker.php:151
  - RETRIEVAL call to get_option("cli_script_blocker_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
public/modules/script-blocker/script-blocker.php:292
  - RETRIEVAL call to get_transient("_wt_cli_first_time_activation") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
public/modules/script-blocker/script-blocker.php:293
  - RETRIEVAL call to get_option(CLI_SETTINGS_FIELD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
public/modules/script-blocker/script-blocker.php:340
  - RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).
public/modules/shortcode/shortcode.php:232
  - RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
public/modules/shortcode/shortcode.php:235
  - RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
public/modules/shortcode/shortcode.php:261
  - RETRIEVAL call to get_post_custom($post->ID). Passed arguments: 0: $post_id (int). Returns (array).
public/modules/shortcode/shortcode.php:476
  - RETRIEVAL call to get_post($arr["button_2_page"]) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, post_meta, wp_post
public/views/cookie-law-info_popup_content.php:2
  - RETRIEVAL call to get_option("cookielawinfo_privacy_overview_content_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option 

admin/class-cookie-law-info-admin.php:86
  - STORAGE call to add_option("wt_cli_first_time_activated_plugin", "true") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-cookie-law-info-admin.php:94
  - STORAGE call to update_option(CLI_SETTINGS_FIELD, $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-cookie-law-info-admin.php:101
  - STORAGE call to update_option("cookielawinfo_privacy_overview_content_settings", $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-cookie-law-info-admin.php:250
  - STORAGE call to update_option("cookielawinfo_privacy_overview_content_settings", $stored_options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-cookie-law-info-admin.php:289
  - STORAGE call to update_option(CLI_SETTINGS_FIELD, $the_options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-cookie-law-info-admin.php:333
  - STORAGE call to update_option(CLI_MIGRATED_VERSION, CLI_LATEST_VERSION_NUMBER) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-cookie-law-info-admin.php:342
  - STORAGE call to delete_option(CLI_ADMIN_OPTIONS_NAME) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
admin/class-cookie-law-info-admin.php:345
  - STORAGE call to delete_option(CLI_SETTINGS_FIELD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
admin/class-cookie-law-info-admin.php:371
  - STORAGE call to update_option(CLI_SETTINGS_FIELD, $new_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-cookie-law-info-admin.php:547
  - STORAGE call to delete_option("wt_cli_first_time_activated_plugin") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
admin/modules/cli-policy-generator/classes/class-policy-generator-ajax.php:83
  - STORAGE call to wp_insert_post(["ID" => $page_id, "post_title" => "Cookie Policy", "post_type" => "page", "post_content" => Cookie_Law_Info_Cli_Policy_Generator->generate_page_content($enable_webtofee_powered_by, $content_data, 0), "post_status" => "draft"]). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
admin/modules/cli-policy-generator/classes/class-policy-generator-ajax.php:128
  - STORAGE call to update_option("cli_pg_content_data", $content_html) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/modules/cli-policy-generator/cli-policy-generator.php:83
  - STORAGE call to update_option(self"policy_pageid", $pageid) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/modules/cookie-scaner/classes/class-cookie-law-info-cookie-scanner-ajax.php:278
  - STORAGE call to update_option("CLI_BYPASS", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/modules/cookie-scaner/classes/class-cookie-law-info-cookie-scanner-ajax.php:388
  - STORAGE call to update_option("CLI_BYPASS", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/modules/cookie-scaner/classes/class-cookie-law-info-cookie-scanner-ajax.php:435
  - STORAGE call to wp_delete_post($cookie->ID, true) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post, post_meta, wp_post
admin/modules/cookie-scaner/classes/class-cookie-law-info-cookie-scanner-ajax.php:455
  - STORAGE call to wp_update_post($post_data). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
admin/modules/cookie-scaner/classes/class-cookie-law-info-cookie-scanner-ajax.php:472
  - STORAGE call to wp_insert_post($cookie_data). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
admin/modules/cookie-scaner/classes/class-cookie-law-info-cookie-scanner-ajax.php:474
  - STORAGE call to update_post_meta($post_id, "_cli_cookie_duration", sanitize_text_field(wp_unslash($cookie["expiry"]))) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/modules/cookie-scaner/classes/class-cookie-law-info-cookie-scanner-ajax.php:475
  - STORAGE call to update_post_meta($post_id, "_cli_cookie_sensitivity", "non-necessary") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/modules/cookie-scaner/classes/class-cookie-law-info-cookie-scanner-ajax.php:476
  - STORAGE call to update_post_meta($post_id, "_cli_cookie_slugid", sanitize_text_field(wp_unslash($cookie["cookie_id"]))) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/modules/cookie-scaner/classes/class-cookie-law-info-cookie-scanner-ajax.php:540
  - STORAGE call to update_option("CLI_BYPASS", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/modules/cookie-scaner/cookie-scaner.php:982
  - STORAGE call to update_option("CLI_BYPASS", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/modules/cookies/cookies.php:64
  - STORAGE call to update_metadata("term", $term_id, $meta_key, $meta_value, $prev_value) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 2: $meta_key (string), 3: $meta_value (mixed), 4: $prev_value (mixed). Returns (int|bool).
  - Data types: meta
admin/modules/cookies/cookies.php:233
  - STORAGE call to update_post_meta($post->ID, "_cli_cookie_type", sanitize_text_field(wp_unslash($_POST["_cli_cookie_type"]))) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/modules/cookies/cookies.php:236
  - STORAGE call to update_post_meta($post->ID, "_cli_cookie_duration", sanitize_text_field(wp_unslash($_POST["_cli_cookie_duration"]))) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/modules/cookies/cookies.php:239
  - STORAGE call to update_post_meta($post->ID, "_cli_cookie_sensitivity", sanitize_text_field(wp_unslash($_POST["_cli_cookie_sensitivity"]))) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/modules/cookies/cookies.php:242
  - STORAGE call to update_post_meta($post->ID, "_cli_cookie_slugid", sanitize_text_field(wp_unslash($_POST["_cli_cookie_slugid"]))) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/modules/cookies/cookies.php:719
  - STORAGE call to update_option("wt_cli_cookie_db_version", "2.0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/modules/cookies/cookies.php:765
  - STORAGE call to update_option("cookielawinfo_thirdparty_settings", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/modules/cookies/cookies.php:773
  - STORAGE call to update_option("cookielawinfo_necessary_settings", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/modules/cookies/cookies.php:965
  - STORAGE call to wp_insert_post($cookie_data). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
cookie-law-info.php:124
  - STORAGE call to delete_option(CLI_ADMIN_OPTIONS_NAME) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-law-info.php:125
  - STORAGE call to delete_option(CLI_MIGRATED_VERSION) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-law-info.php:126
  - STORAGE call to delete_option(CLI_SETTINGS_FIELD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-law-info.php:139
  - STORAGE call to delete_post_meta($post->ID, "cookie_type", $custom["cookie_type"][0]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).
  - Data types: post_meta
cookie-law-info.php:142
  - STORAGE call to delete_post_meta($post->ID, "cookie_duration", $custom["cookie_duration"][0]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).
  - Data types: post_meta
cookie-law-info.php:145
  - STORAGE call to delete_post_meta($post->ID, "_cli_cookie_type", $custom["_cli_cookie_type"][0]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).
  - Data types: post_meta
cookie-law-info.php:148
  - STORAGE call to delete_post_meta($post->ID, "_cli_cookie_duration", $custom["_cli_cookie_duration"][0]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).
  - Data types: post_meta
includes/class-cookie-law-info-activator.php:80
  - STORAGE call to update_option("wt_cli_db_version", is_null($version)CLI_VERSION$version) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-cookie-law-info-activator.php:125
  - STORAGE call to update_option("wt_cli_version", CLI_VERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-cookie-law-info-activator.php:132
  - STORAGE call to update_option("wt_cli_cookie_db_version", is_null($version)"1.0"$version) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-cookie-law-info-cookieyes.php:403
  - STORAGE call to delete_option("wt_cli_cookieyes_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/class-cookie-law-info-cookieyes.php:460
  - STORAGE call to update_option("wt_cli_cookieyes_options", $cky_license) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-cookie-law-info-cookieyes.php:946
  - STORAGE call to update_option("wt_cli_ckyes_branding", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-cookie-law-info-cookieyes.php:948
  - STORAGE call to update_option("wt_cli_ckyes_branding", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-cookie-law-info-cookieyes.php:1183
  - STORAGE call to update_option("wt_cli_ckyes_scan_options", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-cookie-law-info-cookieyes.php:1187
  - STORAGE call to delete_option("wt_cli_ckyes_scan_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/class-cookie-law-info-review-request.php:94
  - STORAGE call to delete_option($this->start_date_option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/class-cookie-law-info-review-request.php:101
  - STORAGE call to update_option($this->start_date_option_name, time()) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-cookie-law-info-review-request.php:108
  - STORAGE call to update_option($this->banner_state_option_name, $val) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-cookie-law-info.php:837
  - STORAGE call to update_option(CLI_SETTINGS_FIELD, $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-cookie-law-info.php:853
  - STORAGE call to update_option(CLI_SETTINGS_FIELD, $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-cookie-law-info.php:860
  - STORAGE call to update_option(CLI_SETTINGS_FIELD, $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-cookie-law-info.php:871
  - STORAGE call to update_option(CLI_SETTINGS_FIELD, $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-cookie-law-info.php:872
  - STORAGE call to update_option("cli_heading_version", $bar_version) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-cookie-law-info.php:903
  - STORAGE call to set_transient("_wt_cli_first_time_activation", true, 30) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
public/class-cookie-law-info-public.php:78
  - STORAGE call to update_option("cookielawinfo_js_blocking", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
public/modules/script-blocker/script-blocker.php:189
  - STORAGE call to update_option("cli_script_blocker_status", $cli_sb_status) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
public/modules/script-blocker/script-blocker.php:281
  - STORAGE call to update_option("cookielawinfo_js_blocking", $js_blocking) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
public/modules/script-blocker/script-blocker.php:296
  - STORAGE call to set_transient("wt_cli_script_blocker_notice", true, DAY_IN_SECONDS) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
public/modules/script-blocker/script-blocker.php:299
  - STORAGE call to update_option("cli_script_blocker_status", "enabled") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option 

public/class-cookie-law-info-public.php:238
  - CRYPTOGRAPHY call to $this->cookielawinfo_remove_hash($the_options["notify_div_id"]).
public/class-cookie-law-info-public.php:243
  - CRYPTOGRAPHY call to $this->cookielawinfo_remove_hash($the_options["showagain_div_id"]). 

admin/class-cookie-law-info-admin.php:342
  - DELETION call to delete_option(CLI_ADMIN_OPTIONS_NAME) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
admin/class-cookie-law-info-admin.php:345
  - DELETION call to delete_option(CLI_SETTINGS_FIELD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
admin/class-cookie-law-info-admin.php:547
  - DELETION call to delete_option("wt_cli_first_time_activated_plugin") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
admin/modules/cookie-scaner/classes/class-cookie-law-info-cookie-scanner-ajax.php:435
  - DELETION call to wp_delete_post($cookie->ID, true) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post, post_meta, wp_post
cookie-law-info.php:124
  - DELETION call to delete_option(CLI_ADMIN_OPTIONS_NAME) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-law-info.php:125
  - DELETION call to delete_option(CLI_MIGRATED_VERSION) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-law-info.php:126
  - DELETION call to delete_option(CLI_SETTINGS_FIELD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-law-info.php:139
  - DELETION call to delete_post_meta($post->ID, "cookie_type", $custom["cookie_type"][0]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).
  - Data types: post_meta
cookie-law-info.php:142
  - DELETION call to delete_post_meta($post->ID, "cookie_duration", $custom["cookie_duration"][0]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).
  - Data types: post_meta
cookie-law-info.php:145
  - DELETION call to delete_post_meta($post->ID, "_cli_cookie_type", $custom["_cli_cookie_type"][0]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).
  - Data types: post_meta
cookie-law-info.php:148
  - DELETION call to delete_post_meta($post->ID, "_cli_cookie_duration", $custom["_cli_cookie_duration"][0]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).
  - Data types: post_meta
includes/class-cookie-law-info-cookieyes.php:403
  - DELETION call to delete_option("wt_cli_cookieyes_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/class-cookie-law-info-cookieyes.php:1187
  - DELETION call to delete_option("wt_cli_ckyes_scan_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/class-cookie-law-info-review-request.php:94
  - DELETION call to delete_option($this->start_date_option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

cookie-law-info.php:124
  - Uninstall deletion call: DELETION call to delete_option(CLI_ADMIN_OPTIONS_NAME) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-law-info.php:125
  - Uninstall deletion call: DELETION call to delete_option(CLI_MIGRATED_VERSION) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-law-info.php:126
  - Uninstall deletion call: DELETION call to delete_option(CLI_SETTINGS_FIELD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-law-info.php:139
  - Uninstall deletion call: DELETION call to delete_post_meta($post->ID, "cookie_type", $custom["cookie_type"][0]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).
  - Data types: post_meta
cookie-law-info.php:142
  - Uninstall deletion call: DELETION call to delete_post_meta($post->ID, "cookie_duration", $custom["cookie_duration"][0]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).
  - Data types: post_meta
cookie-law-info.php:145
  - Uninstall deletion call: DELETION call to delete_post_meta($post->ID, "_cli_cookie_type", $custom["_cli_cookie_type"][0]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).
  - Data types: post_meta
cookie-law-info.php:148
  - Uninstall deletion call: DELETION call to delete_post_meta($post->ID, "_cli_cookie_duration", $custom["_cli_cookie_duration"][0]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).
  - Data types: post_meta 

By data type:
address
	VariableDetector.(unknown) - {'address', 'ip'}
	VariableDetector.(unknown) - {'address', 'ip'}
	VariableDetector.(unknown) - {'address', 'ip'}
	VariableDetector.(unknown) - {'address', 'ip'}
	VariableDetector.(unknown) - {'address', 'ip'}
email
	PropertyDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
ip
	VariableDetector.(unknown) - {'address', 'ip'}
	VariableDetector.(unknown) - {'address', 'ip'}
	VariableDetector.(unknown) - {'address', 'ip'}
	VariableDetector.(unknown) - {'address', 'ip'}
	VariableDetector.(unknown) - {'address', 'ip'}
meta
	WordPressRetrievalDetector.get_metadata("term", $term_id, $key, $single) - {'meta'}
	WordPressStorageDetector.update_metadata("term", $term_id, $meta_key, $meta_value, $prev_value) - {'meta'}
none
	WordPressRetrievalDetector.get_post_custom() - set()
	WordPressRetrievalDetector.get_posts($args) - set()
	WordPressRetrievalDetector.get_posts($args) - set()
	GenericEncryptionDetector.$this->cookielawinfo_remove_hash($the_options["showagain_div_id"]) - set()
	WordPressStorageDetector.wp_insert_post($cookie_data) - set()
	WordPressRetrievalDetector.dbDelta($create_table_sql) - set()
	WordPressStorageDetector.wp_insert_post($cookie_data) - set()
	WordPressRetrievalDetector.get_post_custom($post->ID) - set()
	WordPressRetrievalDetector.get_posts($args) - set()
	WordPressRetrievalDetector.get_post_custom($post->ID) - set()
	WordPressRetrievalDetector.get_post_custom() - set()
	WordPressRetrievalDetector.get_posts(["post_type" => CLI_POST_TYPE, "numberposts" => -1]) - set()
	WordPressRetrievalDetector.dbDelta($create_table_sql) - set()
	WordPressRetrievalDetector.dbDelta($sql . " " . $prop) - set()
	WordPressRetrievalDetector.get_post_custom($post->ID) - set()
	WordPressRetrievalDetector.get_post_custom($post->ID) - set()
	WordPressRetrievalDetector.get_posts($args) - set()
	WordPressStorageDetector.wp_update_post($post_data) - set()
	WordPressRetrievalDetector.get_posts($args) - set()
	WordPressRetrievalDetector.get_posts($args) - set()
	WordPressRetrievalDetector.get_posts($args) - set()
	WordPressRetrievalDetector.get_post_custom($post->ID) - set()
	WordPressStorageDetector.wp_insert_post(["ID" => $page_id, "post_title" => "Cookie Policy", "post_type" => "page", "post_content" => Cookie_Law_Info_Cli_Policy_Generator->generate_page_content($enable_webtofee_powered_by, $content_data, 0), "post_status" => "draft"]) - set()
	WordPressRetrievalDetector.get_post_custom() - set()
	WordPressRetrievalDetector.get_post_custom() - set()
	WordPressRetrievalDetector.get_posts(["name" => $cookie["cookie_id"], "post_type" => CLI_POST_TYPE]) - set()
	GenericEncryptionDetector.$this->cookielawinfo_remove_hash($the_options["notify_div_id"]) - set()
	WordPressRetrievalDetector.dbDelta($sql) - set()
	WordPressRetrievalDetector.get_post_custom($post->ID) - set()
	WordPressRetrievalDetector.get_post_custom($post->ID) - set()
option
	WordPressRetrievalDetector.get_option($plugin_name . "_activation_status") - {'option'}
	WordPressStorageDetector.delete_option(CLI_MIGRATED_VERSION) - {'option'}
	WordPressStorageDetector.update_option("cli_script_blocker_status", $cli_sb_status) - {'option'}
	WordPressStorageDetector.update_option("wt_cli_cookie_db_version", "2.0") - {'option'}
	WordPressStorageDetector.update_option("CLI_BYPASS", 0) - {'option'}
	WordPressRetrievalDetector.get_option(self"policy_pageid") - {'option'}
	WordPressRetrievalDetector.get_option("finished_splitting_shared_terms") - {'option'}
	WordPressRetrievalDetector.get_option("wt_cli_db_version", Cookie_Law_Info"db_initial_version") - {'option'}
	WordPressStorageDetector.update_option("cli_pg_content_data", $content_html) - {'option'}
	WordPressStorageDetector.update_option("wt_cli_ckyes_branding", "no") - {'option'}
	DeletionDetector.delete_option(CLI_ADMIN_OPTIONS_NAME) - {'option'}
	WordPressStorageDetector.delete_option("wt_cli_ckyes_scan_options") - {'option'}
	WordPressRetrievalDetector.get_option("CLI_BYPASS") - {'option'}
	WordPressStorageDetector.update_option("wt_cli_ckyes_branding", "yes") - {'option'}
	WordPressStorageDetector.update_option("wt_cli_ckyes_scan_options", $options) - {'option'}
	WordPressRetrievalDetector.get_option("cookielawinfo_privacy_overview_content_settings") - {'option'}
	WordPressStorageDetector.update_option(CLI_SETTINGS_FIELD, $default) - {'option'}
	WordPressRetrievalDetector.get_option(CLI_SETTINGS_FIELD) - {'option'}
	WordPressRetrievalDetector.get_option("cookielawinfo_thirdparty_settings") - {'option'}
	WordPressRetrievalDetector.get_option("wt_cli_db_version", Cookie_Law_Info"db_initial_version") - {'option'}
	WordPressStorageDetector.update_option("wt_cli_db_version", is_null($version)CLI_VERSION$version) - {'option'}
	WordPressRetrievalDetector.get_option("wt_cli_cookie_db_version", "1.0") - {'option'}
	UninstallDetector.delete_option(CLI_SETTINGS_FIELD) - {'option'}
	WordPressStorageDetector.add_option("wt_cli_first_time_activated_plugin", "true") - {'option'}
	WordPressStorageDetector.update_option($this->start_date_option_name, time()) - {'option'}
	WordPressStorageDetector.update_option(CLI_SETTINGS_FIELD, $options) - {'option'}
	WordPressRetrievalDetector.get_option("WPLANG", "en_US") - {'option'}
	WordPressStorageDetector.update_option("cookielawinfo_thirdparty_settings", $options) - {'option'}
	WordPressStorageDetector.delete_option(CLI_SETTINGS_FIELD) - {'option'}
	WordPressStorageDetector.update_option("CLI_BYPASS", 0) - {'option'}
	WordPressStorageDetector.delete_option($this->start_date_option_name) - {'option'}
	WordPressStorageDetector.update_option(CLI_SETTINGS_FIELD, $options) - {'option'}
	WordPressRetrievalDetector.get_option("cookielawinfo_necessary_settings") - {'option'}
	WordPressStorageDetector.update_option("cookielawinfo_privacy_overview_content_settings", $stored_options) - {'option'}
	WordPressStorageDetector.update_option("wt_cli_cookieyes_options", $cky_license) - {'option'}
	WordPressStorageDetector.update_option("cookielawinfo_js_blocking", $js_blocking) - {'option'}
	WordPressStorageDetector.update_option("cli_heading_version", $bar_version) - {'option'}
	WordPressStorageDetector.update_option(CLI_SETTINGS_FIELD, $options) - {'option'}
	WordPressStorageDetector.delete_option(CLI_SETTINGS_FIELD) - {'option'}
	WordPressRetrievalDetector.get_option("wt_cli_version", "1.9.5") - {'option'}
	WordPressRetrievalDetector.get_option("cookielawinfo_privacy_overview_content_settings") - {'option'}
	WordPressStorageDetector.update_option($this->banner_state_option_name, $val) - {'option'}
	WordPressStorageDetector.delete_option("wt_cli_first_time_activated_plugin") - {'option'}
	WordPressStorageDetector.update_option("cookielawinfo_privacy_overview_content_settings", $default) - {'option'}
	WordPressRetrievalDetector.get_option("cli_pg_content_data") - {'option'}
	WordPressStorageDetector.update_option(CLI_SETTINGS_FIELD, $new_settings) - {'option'}
	WordPressStorageDetector.update_option(self"policy_pageid", $pageid) - {'option'}
	WordPressStorageDetector.delete_option(CLI_ADMIN_OPTIONS_NAME) - {'option'}
	DeletionDetector.delete_option("wt_cli_first_time_activated_plugin") - {'option'}
	WordPressStorageDetector.update_option(CLI_SETTINGS_FIELD, $the_options) - {'option'}
	WordPressRetrievalDetector.get_option("cli_script_blocker_status") - {'option'}
	DeletionDetector.delete_option("wt_cli_ckyes_scan_options") - {'option'}
	DeletionDetector.delete_option(CLI_SETTINGS_FIELD) - {'option'}
	WordPressRetrievalDetector.get_option("wt_cli_first_time_activated_plugin") - {'option'}
	DeletionDetector.delete_option(CLI_ADMIN_OPTIONS_NAME) - {'option'}
	WordPressRetrievalDetector.get_option("wt_cli_ckyes_scan_options", false) - {'option'}
	WordPressStorageDetector.update_option("wt_cli_cookie_db_version", is_null($version)"1.0"$version) - {'option'}
	UninstallDetector.delete_option(CLI_ADMIN_OPTIONS_NAME) - {'option'}
	WordPressRetrievalDetector.get_option("wt_cli_cookieyes_options", false) - {'option'}
	WordPressRetrievalDetector.get_option($this->start_date_option_name) - {'option'}
	WordPressRetrievalDetector.get_option("cookielawinfo_js_blocking") - {'option'}
	WordPressRetrievalDetector.get_option(CLI_MIGRATED_VERSION) - {'option'}
	WordPressRetrievalDetector.get_option(CLI_SETTINGS_FIELD) - {'option'}
	WordPressStorageDetector.delete_option(CLI_ADMIN_OPTIONS_NAME) - {'option'}
	WordPressStorageDetector.update_option("cookielawinfo_necessary_settings", $options) - {'option'}
	WordPressRetrievalDetector.get_option(CLI_SETTINGS_FIELD) - {'option'}
	WordPressStorageDetector.update_option("CLI_BYPASS", 0) - {'option'}
	DeletionDetector.delete_option($this->start_date_option_name) - {'option'}
	WordPressRetrievalDetector.get_option(CLI_ADMIN_OPTIONS_NAME) - {'option'}
	WordPressRetrievalDetector.get_option("wp_page_for_privacy_policy") - {'option'}
	WordPressStorageDetector.delete_option("wt_cli_cookieyes_options") - {'option'}
	WordPressRetrievalDetector.get_option("wp_page_for_privacy_policy") - {'option'}
	UninstallDetector.delete_option(CLI_MIGRATED_VERSION) - {'option'}
	WordPressRetrievalDetector.get_option("active_plugins") - {'option'}
	WordPressStorageDetector.update_option(CLI_SETTINGS_FIELD, $options) - {'option'}
	WordPressRetrievalDetector.get_option(CLI_SETTINGS_FIELD) - {'option'}
	WordPressRetrievalDetector.get_option("cookielawinfo_privacy_overview_content_settings") - {'option'}
	WordPressStorageDetector.update_option("CLI_BYPASS", 1) - {'option'}
	DeletionDetector.delete_option(CLI_MIGRATED_VERSION) - {'option'}
	WordPressStorageDetector.update_option("cookielawinfo_js_blocking", "yes") - {'option'}
	WordPressStorageDetector.update_option(CLI_MIGRATED_VERSION, CLI_LATEST_VERSION_NUMBER) - {'option'}
	WordPressRetrievalDetector.get_option("cli_heading_version") - {'option'}
	DeletionDetector.delete_option(CLI_SETTINGS_FIELD) - {'option'}
	WordPressRetrievalDetector.get_option("wt_cli_cookie_db_version", false) - {'option'}
	WordPressStorageDetector.update_option("cli_script_blocker_status", "enabled") - {'option'}
	WordPressStorageDetector.update_option("wt_cli_version", CLI_VERSION) - {'option'}
	WordPressRetrievalDetector.get_option($this->banner_state_option_name) - {'option'}
	WordPressRetrievalDetector.get_option(CLI_ADMIN_OPTIONS_NAME) - {'option'}
	DeletionDetector.delete_option("wt_cli_cookieyes_options") - {'option'}
	WordPressRetrievalDetector.get_option("wt_cli_ckyes_branding", false) - {'option'}
post
	WordPressRetrievalDetector.get_post($post_id) - {'post', 'post_meta', 'wp_post'}
	WordPressStorageDetector.wp_delete_post($cookie->ID, true) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($the_options["button_2_page"]) - {'post', 'post_meta', 'wp_post'}
	DeletionDetector.wp_delete_post($cookie->ID, true) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($arr["button_2_page"]) - {'post', 'post_meta', 'wp_post'}
post_meta
	WordPressRetrievalDetector.get_post_meta($post->ID, "_cli_cookie_slugid", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'post', 'post_meta', 'wp_post'}
	WordPressStorageDetector.update_post_meta($post_id, "_cli_cookie_slugid", sanitize_text_field(wp_unslash($cookie["cookie_id"]))) - {'post_meta'}
	UninstallDetector.delete_post_meta($post->ID, "cookie_type", $custom["cookie_type"][0]) - {'post_meta'}
	DeletionDetector.delete_post_meta($post->ID, "_cli_cookie_type", $custom["_cli_cookie_type"][0]) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post->ID, "_cli_cookie_sensitivity", sanitize_text_field(wp_unslash($_POST["_cli_cookie_sensitivity"]))) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_cli_cookie_sensitivity", "non-necessary") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($cookie->ID, "_cli_cookie_sensitivity", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post->ID, "_cli_cookie_duration", sanitize_text_field(wp_unslash($_POST["_cli_cookie_duration"]))) - {'post_meta'}
	WordPressStorageDetector.wp_delete_post($cookie->ID, true) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($cookie->ID, "_cli_cookie_slugid", true) - {'post_meta'}
	UninstallDetector.delete_post_meta($post->ID, "_cli_cookie_type", $custom["_cli_cookie_type"][0]) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post->ID, "_cli_cookie_type", $custom["_cli_cookie_type"][0]) - {'post_meta'}
	DeletionDetector.delete_post_meta($post->ID, "cookie_type", $custom["cookie_type"][0]) - {'post_meta'}
	WordPressRetrievalDetector.get_post($the_options["button_2_page"]) - {'post', 'post_meta', 'wp_post'}
	WordPressStorageDetector.update_post_meta($post->ID, "_cli_cookie_slugid", sanitize_text_field(wp_unslash($_POST["_cli_cookie_slugid"]))) - {'post_meta'}
	DeletionDetector.delete_post_meta($post->ID, "_cli_cookie_duration", $custom["_cli_cookie_duration"][0]) - {'post_meta'}
	UninstallDetector.delete_post_meta($post->ID, "cookie_duration", $custom["cookie_duration"][0]) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post->ID, "cookie_duration", $custom["cookie_duration"][0]) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_cli_cookie_duration", sanitize_text_field(wp_unslash($cookie["expiry"]))) - {'post_meta'}
	DeletionDetector.delete_post_meta($post->ID, "cookie_duration", $custom["cookie_duration"][0]) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post->ID, "cookie_type", $custom["cookie_type"][0]) - {'post_meta'}
	UninstallDetector.delete_post_meta($post->ID, "_cli_cookie_duration", $custom["_cli_cookie_duration"][0]) - {'post_meta'}
	DeletionDetector.wp_delete_post($cookie->ID, true) - {'post', 'post_meta', 'wp_post'}
	WordPressStorageDetector.update_post_meta($post->ID, "_cli_cookie_type", sanitize_text_field(wp_unslash($_POST["_cli_cookie_type"]))) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post->ID, "_cli_cookie_duration", $custom["_cli_cookie_duration"][0]) - {'post_meta'}
	WordPressRetrievalDetector.get_post($arr["button_2_page"]) - {'post', 'post_meta', 'wp_post'}
remote
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
site
	WordPressRetrievalDetector.get_transient("_wt_cli_first_time_activation") - {'site'}
	WordPressStorageDetector.set_transient("wt_cli_script_blocker_notice", true, DAY_IN_SECONDS) - {'site'}
	WordPressStorageDetector.set_transient("_wt_cli_first_time_activation", true, 30) - {'site'}
	WordPressRetrievalDetector.get_transient("_wt_cli_first_time_activation") - {'site'}
	WordPressRetrievalDetector.get_transient("_wt_cli_first_time_activation") - {'site'}
	WordPressRetrievalDetector.get_transient("_wt_cli_first_time_activation") - {'site'}
state
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	ArrayElementDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	ArrayElementDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	ArrayElementDetector.(unknown) - {'state'}
	PropertyDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	PropertyDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	PropertyDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	PropertyDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	PropertyDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	PropertyDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	PropertyDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	PropertyDetector.(unknown) - {'state'}
	PropertyDetector.(unknown) - {'state'}
wp_post
	WordPressRetrievalDetector.get_post($post_id) - {'post', 'post_meta', 'wp_post'}
	WordPressStorageDetector.wp_delete_post($cookie->ID, true) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($the_options["button_2_page"]) - {'post', 'post_meta', 'wp_post'}
	DeletionDetector.wp_delete_post($cookie->ID, true) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($arr["button_2_page"]) - {'post', 'post_meta', 'wp_post'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:34.329421.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 1586 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.781658.

1000 STORE_REACHES edges created
1586 STORE_REACHES edges created
1586 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Remove dataflow edges from keys to data storage sinks" (remove_edge_from_key_to_sink) begin.
Removing dataflow edges from keys to data storage sinks
Deleted PHP_REACHES edges from key to sink for 113 sinks
Deleted PHP_REACHES edges from keys to storage sinks.
╚[26] Preprocessing step "Remove dataflow edges from keys to data storage sinks" (remove_edge_from_key_to_sink) finished successfully in 0:00:01.319694.

0 edges imported to Neo4j
Preprocessing step 10 done!
╔[27] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 1000 nodes as PERSONAL
Tainted 1571 nodes as PERSONAL
In total, tainted 1571 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 17 nodes as ENCRYPTED
In total, tainted 17 nodes as ENCRYPTED
╚[27] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:41.146045.

0 edges imported to Neo4j
Preprocessing step 11 done!
### Preprocessing done in 0:06:07.876202!
Request variable '$_POST["email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["cs_preview_state"]' of personal types {'state'} is found.,,None
Request variable '$_POST["cli_script_blocker_state"]' of personal types {'state'} is found.,,None
Request variable '$_POST["cli_script_blocker_state"]' of personal types {'state'} is found.,,None
DELETION call to delete_option(CLI_ADMIN_OPTIONS_NAME) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option(CLI_SETTINGS_FIELD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("wt_cli_first_time_activated_plugin") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to wp_delete_post($cookie->ID, true) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
DELETION call to delete_option(CLI_ADMIN_OPTIONS_NAME) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option(CLI_MIGRATED_VERSION) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option(CLI_SETTINGS_FIELD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_post_meta($post->ID, "cookie_type", $custom["cookie_type"][0]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).,None,None
DELETION call to delete_post_meta($post->ID, "cookie_duration", $custom["cookie_duration"][0]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).,None,None
DELETION call to delete_post_meta($post->ID, "_cli_cookie_type", $custom["_cli_cookie_type"][0]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).,None,None
DELETION call to delete_post_meta($post->ID, "_cli_cookie_duration", $custom["_cli_cookie_duration"][0]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).,None,None
DELETION call to delete_option("wt_cli_ckyes_scan_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("wt_cli_cookieyes_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option($this->start_date_option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
CRYPTOGRAPHY call to $this->cookielawinfo_remove_hash($the_options["notify_div_id"]).,None,None
CRYPTOGRAPHY call to $this->cookielawinfo_remove_hash($the_options["showagain_div_id"]).,None,None
object property '$this->user_email' of personal types {'email'} is found.,,None
object property '$this->user_email' of personal types {'email'} is found.,,None
object property '$this->user_email' of personal types {'email'} is found.,,None
object property '$this->user_email' of personal types {'email'} is found.,,None
object property '$this->user_email' of personal types {'email'} is found.,,None
object property '$this->banner_state_option_name' of personal types {'state'} is found.,,None
object property '$this->current_banner_state' of personal types {'state'} is found.,,None
object property '$this->current_banner_state' of personal types {'state'} is found.,,None
object property '$this->current_banner_state' of personal types {'state'} is found.,,None
object property '$this->current_banner_state' of personal types {'state'} is found.,,None
object property '$this->banner_state_option_name' of personal types {'state'} is found.,,None
object property '$this->banner_state_option_name' of personal types {'state'} is found.,,None
object property '$this->current_banner_state' of personal types {'state'} is found.,,None
object property '$this->current_banner_state' of personal types {'state'} is found.,,None
Uninstall deletion call: DELETION call to delete_option(CLI_ADMIN_OPTIONS_NAME) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option(CLI_MIGRATED_VERSION) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option(CLI_SETTINGS_FIELD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_post_meta($post->ID, "cookie_type", $custom["cookie_type"][0]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_post_meta($post->ID, "cookie_duration", $custom["cookie_duration"][0]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_post_meta($post->ID, "_cli_cookie_type", $custom["_cli_cookie_type"][0]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_post_meta($post->ID, "_cli_cookie_duration", $custom["_cli_cookie_duration"][0]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).,None,None
variable '$post_states' of personal types {'state'} is found.,,None
variable '$post_states' of personal types {'state'} is found.,,None
variable '$ip_address' of personal types {'address', 'ip'} is found.,,None
variable '$ip_address' of personal types {'address', 'ip'} is found.,,None
variable '$ip_address' of personal types {'address', 'ip'} is found.,,None
variable '$ip_address' of personal types {'address', 'ip'} is found.,,None
variable '$ip_address' of personal types {'address', 'ip'} is found.,,None
variable '$default_state' of personal types {'state'} is found.,,None
variable '$default_state' of personal types {'state'} is found.,,None
variable '$cli_default_state' of personal types {'state'} is found.,,None
variable '$cli_default_state' of personal types {'state'} is found.,,None
variable '$cli_default_state' of personal types {'state'} is found.,,None
variable '$default_state' of personal types {'state'} is found.,,None
variable '$default_state' of personal types {'state'} is found.,,None
variable '$term_default_state' of personal types {'state'} is found.,,None
variable '$term_default_state' of personal types {'state'} is found.,,None
variable '$term_default_state' of personal types {'state'} is found.,,None
variable '$term_default_state' of personal types {'state'} is found.,,None
variable '$term_default_state' of personal types {'state'} is found.,,None
variable '$term_default_state' of personal types {'state'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$new_banner_state' of personal types {'state'} is found.,,None
variable '$new_banner_state' of personal types {'state'} is found.,,None
variable '$new_banner_state' of personal types {'state'} is found.,,None
variable '$new_banner_state' of personal types {'state'} is found.,,None
variable '$banner_state' of personal types {'state'} is found.,,None
variable '$banner_state' of personal types {'state'} is found.,,None
variable '$banner_state' of personal types {'state'} is found.,,None
variable '$category_default_state' of personal types {'state'} is found.,,None
variable '$category_default_state' of personal types {'state'} is found.,,None
variable '$category_default_state' of personal types {'state'} is found.,,None
variable '$category_default_state' of personal types {'state'} is found.,,None
API call to wp_remote_post($endpoint, ["body" => wp_json_encode($request_body), "headers" => ["Content-Type" => "application/json", "Authorization" => "Bearer " . $token], "timeout" => 60]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,['https://wp-scanner.cookieyes.com/api/v2/']
API call to wp_remote_post($this->api_url, ["method" => "POST", "timeout" => 45, "redirection" => 5, "httpversion" => "1.0", "blocking" => false, "body" => $data, "cookies" => []]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_get($endpoint, $request_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_post($endpoint, $request_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
RETRIEVAL call to get_option("cookielawinfo_privacy_overview_content_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(CLI_ADMIN_OPTIONS_NAME) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(CLI_ADMIN_OPTIONS_NAME) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(CLI_MIGRATED_VERSION) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wt_cli_first_time_activated_plugin") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(CLI_SETTINGS_FIELD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cookielawinfo_privacy_overview_content_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cli_pg_content_data") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self"policy_pageid") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_posts(["post_type" => CLI_POST_TYPE, "numberposts" => -1]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_posts(["name" => $cookie["cookie_id"], "post_type" => CLI_POST_TYPE]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to dbDelta($create_table_sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to dbDelta($create_table_sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to dbDelta($sql . " " . $prop). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_post_custom($post->ID). Passed arguments: 0: $post_id (int). Returns (array).,None,None
RETRIEVAL call to get_post_custom($post->ID). Passed arguments: 0: $post_id (int). Returns (array).,None,None
RETRIEVAL call to get_post_custom($post->ID). Passed arguments: 0: $post_id (int). Returns (array).,None,None
RETRIEVAL call to get_post_custom($post->ID). Passed arguments: 0: $post_id (int). Returns (array).,None,None
RETRIEVAL call to get_post_custom($post->ID). Passed arguments: 0: $post_id (int). Returns (array).,None,None
RETRIEVAL call to get_post($post_id) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_custom(). Returns (array).,None,None
RETRIEVAL call to get_post_custom(). Returns (array).,None,None
RETRIEVAL call to get_post_custom(). Returns (array).,None,None
RETRIEVAL call to get_post_custom(). Returns (array).,None,None
RETRIEVAL call to get_option("cookielawinfo_thirdparty_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cookielawinfo_necessary_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_option("finished_splitting_shared_terms") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_metadata("term", $term_id, $key, $single) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 3: $single (bool), 2: $meta_key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wt_cli_cookie_db_version", "1.0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_option($plugin_name . "_activation_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($the_options["button_2_page"]) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_post_custom($post->ID). Passed arguments: 0: $post_id (int). Returns (array).,None,None
RETRIEVAL call to get_option("WPLANG", "en_US") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wt_cli_version", "1.9.5") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wt_cli_cookie_db_version", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wt_cli_db_version", Cookie_Law_Info"db_initial_version") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wt_cli_db_version", Cookie_Law_Info"db_initial_version") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wt_cli_ckyes_scan_options", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wt_cli_cookieyes_options", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wt_cli_ckyes_branding", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->start_date_option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->banner_state_option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(CLI_SETTINGS_FIELD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wp_page_for_privacy_policy") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wp_page_for_privacy_policy") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_post_meta($post->ID, "_cli_cookie_slugid", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cli_heading_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(CLI_SETTINGS_FIELD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_transient("_wt_cli_first_time_activation") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_transient("_wt_cli_first_time_activation") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cookielawinfo_js_blocking") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("CLI_BYPASS") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($cookie->ID, "_cli_cookie_sensitivity", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($cookie->ID, "_cli_cookie_slugid", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_transient("_wt_cli_first_time_activation") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cli_script_blocker_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_transient("_wt_cli_first_time_activation") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(CLI_SETTINGS_FIELD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_post_custom($post->ID). Passed arguments: 0: $post_id (int). Returns (array).,None,None
RETRIEVAL call to get_post($arr["button_2_page"]) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("cookielawinfo_privacy_overview_content_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
STORAGE call to update_option("cookielawinfo_privacy_overview_content_settings", $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cookielawinfo_privacy_overview_content_settings", $stored_options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(CLI_SETTINGS_FIELD, $the_options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(CLI_MIGRATED_VERSION, CLI_LATEST_VERSION_NUMBER) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option(CLI_ADMIN_OPTIONS_NAME) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option(CLI_SETTINGS_FIELD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option(CLI_SETTINGS_FIELD, $new_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("wt_cli_first_time_activated_plugin") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to add_option("wt_cli_first_time_activated_plugin", "true") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(CLI_SETTINGS_FIELD, $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cli_pg_content_data", $content_html) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to wp_insert_post(["ID" => $page_id, "post_title" => "Cookie Policy", "post_type" => "page", "post_content" => Cookie_Law_Info_Cli_Policy_Generator->generate_page_content($enable_webtofee_powered_by, $content_data, 0), "post_status" => "draft"]). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to update_option(self"policy_pageid", $pageid) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("CLI_BYPASS", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("CLI_BYPASS", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to wp_delete_post($cookie->ID, true) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
STORAGE call to wp_update_post($post_data). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to wp_insert_post($cookie_data). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($post_id, "_cli_cookie_duration", sanitize_text_field(wp_unslash($cookie["expiry"]))) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_cli_cookie_sensitivity", "non-necessary") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_cli_cookie_slugid", sanitize_text_field(wp_unslash($cookie["cookie_id"]))) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("CLI_BYPASS", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("CLI_BYPASS", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($post->ID, "_cli_cookie_type", sanitize_text_field(wp_unslash($_POST["_cli_cookie_type"]))) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post->ID, "_cli_cookie_duration", sanitize_text_field(wp_unslash($_POST["_cli_cookie_duration"]))) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post->ID, "_cli_cookie_sensitivity", sanitize_text_field(wp_unslash($_POST["_cli_cookie_sensitivity"]))) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post->ID, "_cli_cookie_slugid", sanitize_text_field(wp_unslash($_POST["_cli_cookie_slugid"]))) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_metadata("term", $term_id, $meta_key, $meta_value, $prev_value) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 2: $meta_key (string), 3: $meta_value (mixed), 4: $prev_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("wt_cli_cookie_db_version", "2.0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cookielawinfo_thirdparty_settings", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cookielawinfo_necessary_settings", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to wp_insert_post($cookie_data). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to delete_option(CLI_ADMIN_OPTIONS_NAME) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option(CLI_MIGRATED_VERSION) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option(CLI_SETTINGS_FIELD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_post_meta($post->ID, "cookie_type", $custom["cookie_type"][0]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).,None,None
STORAGE call to delete_post_meta($post->ID, "cookie_duration", $custom["cookie_duration"][0]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).,None,None
STORAGE call to delete_post_meta($post->ID, "_cli_cookie_type", $custom["_cli_cookie_type"][0]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).,None,None
STORAGE call to delete_post_meta($post->ID, "_cli_cookie_duration", $custom["_cli_cookie_duration"][0]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wt_cli_version", CLI_VERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wt_cli_cookie_db_version", is_null($version)"1.0"$version) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wt_cli_db_version", is_null($version)CLI_VERSION$version) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wt_cli_ckyes_scan_options", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("wt_cli_ckyes_scan_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("wt_cli_cookieyes_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("wt_cli_cookieyes_options", $cky_license) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wt_cli_ckyes_branding", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wt_cli_ckyes_branding", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option($this->start_date_option_name, time()) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option($this->banner_state_option_name, $val) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option($this->start_date_option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option(CLI_SETTINGS_FIELD, $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(CLI_SETTINGS_FIELD, $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(CLI_SETTINGS_FIELD, $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(CLI_SETTINGS_FIELD, $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cli_heading_version", $bar_version) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to set_transient("_wt_cli_first_time_activation", true, 30) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to update_option("cookielawinfo_js_blocking", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cli_script_blocker_status", $cli_sb_status) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cookielawinfo_js_blocking", $js_blocking) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to set_transient("wt_cli_script_blocker_notice", true, DAY_IN_SECONDS) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to update_option("cli_script_blocker_status", "enabled") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] PII of types (['state']) stored through WordPress function "update_option("cli_script_blocker_status", $cli_sb_status)", found in file public/modules/script-blocker/script-blocker.php at line 189. 

[has_storage] PII of types (['state']) stored through WordPress function "update_option(CLI_SETTINGS_FIELD, $default)", found in file admin/class-cookie-law-info-admin.php at line 94. 

[has_storage] PII of types (['state']) stored through WordPress function "update_option("cookielawinfo_privacy_overview_content_settings", $stored_options)", found in file admin/class-cookie-law-info-admin.php at line 250. 

[has_storage] PII of types (['state']) stored through WordPress function "update_option($this->banner_state_option_name, $val)", found in file includes/class-cookie-law-info-review-request.php at line 108. 

[has_storage] PII of types (['state']) stored through WordPress function "update_metadata("term", $term_id, $meta_key, $meta_value, $prev_value)", found in file admin/modules/cookies/cookies.php at line 64. 

[has_storage] PII of types (['state']) stored through WordPress function "update_option(CLI_SETTINGS_FIELD, $the_options)", found in file admin/class-cookie-law-info-admin.php at line 289. 

[has_storage] Storage check is WP 

[Art.17, Right to erasure] Wordpress storage of PII through update_metadata("term", $term_id, $meta_key, $meta_value, $prev_value) does not have corresponding deletion method. Storage method found in file admin/modules/cookies/cookies.php at line 64. 

[Art.17, Right to erasure] Deletion access is NONE 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 42040. Found in file public/modules/script-blocker/script-blocker.php at line 189 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 187. Found in file admin/class-cookie-law-info-admin.php at line 94 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 812. Found in file admin/class-cookie-law-info-admin.php at line 250 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 35082. Found in file includes/class-cookie-law-info-review-request.php at line 108 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 15532. Found in file admin/modules/cookies/cookies.php at line 64 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1044. Found in file admin/class-cookie-law-info-admin.php at line 289 

[Art.15, Right to access] Data access is NONE_BUT_NOT_REQUIRED 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['access', 'deletion', 'encryption', 'third_party'] 

[main] Is deletion in violation? True 

[main] Is access in violation? False 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? False 


###########
### Q&A ###
###########

1. Why is my plugin in violation against GDPR?

GDPR (https://gdpr-info.eu/) aims to give citizens in the European Union (EU) control over their personal data. If a website collects or store user data, it is required to provide users functionalities to control their data, such as ones to erase or export their data. While a plugin do not directly interact with users, it may provide functionalities that collect or store personal data, which would make websites that deploy the plugin in violation against GDPR if the plugin does not provide corresponding functionalities to allow users control their personal data. Therefore, plugin developers are responsible to provide functions to manage the personal data they handle in accordance with GDPR. We list requirements by specific GDPR articles relevant to your plugin below.


[Art. 13, Information to be provided where personal data are collected from the data subject] If a plugin collects or handles personal data, it needs to provide privacy policy texts that explain what personal data is being collected and for what purpose. The texts are meant to be added to the privacy policy of the websites that deploy the plugin. 


            
        

2. How do I make my plugin compliant?

Please refer to the fix report below to see how you can make your plugin comply with GDPR.

        

##################
### Fix Report ###
##################

#############################
# Privacy Policy Fix Report #
#############################

This report suggests fixes to comply with the GDPR Art. 13 (https://gdpr-info.eu/art-13-gdpr/) through including a privacy notice. The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/suggesting-text-for-the-site-privacy-policy/ for more details.

1) Implement a function that includes the privacy policy for the plugin and provide it to wordpress through wp_add_privacy_policy_content(). Sample code:


/**
* Adds a privacy policy statement.
*/
function cookie-law-info_add_privacy_policy_content() {
    if ( ! function_exists( 'wp_add_privacy_policy_content' ) ) {
        return;
    }
    //TODO: modify the content below to include the privacy policy for the plugin.
    $content = '<p class="privacy-policy-tutorial">' . __( 'Some introductory content for the suggested text.', 'cookie-law-info' ) . '</p>'
            . '<strong class="privacy-policy-tutorial">' . __( 'Suggested Text:', 'cookie-law-info' ) . '</strong> '
            . sprintf(
                __( 'When you leave a comment on this site, we send your name, email address, IP address and comment text to example.com. Example.com does not retain your personal data. The example.com privacy policy is <a href="%1$s" target="_blank">here</a>.', 'cookie-law-info' ),
                'https://example.com/privacy-policy'
            );
    wp_add_privacy_policy_content( 'cookie-law-info', wp_kses_post( wpautop( $content, false ) ) );
}
        

2) Hook the privacy policy function to the Wordpress's admin initialization action.


add_action( 'admin_init', 'cookie-law-info_add_privacy_policy_content' );
        

        


Disclaimer: The sample code provided above is only for reference and does not guarantee GDPR compliance. The recommended list of data to delete/export may not be comprehensive. 
        
Done.
