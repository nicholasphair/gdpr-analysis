Timeout in resolving values
Timeout in running neo4j query
Running Main.py on instagram-feed

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:03.462180.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:02.325758.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 911 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:01.528953.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 11 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:01.140141.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 9873 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:03.996663.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 469 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:06.759584.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
Added 21 PHP_REACHES edges.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.082803.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 4656 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:04:39.159956.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 70228
Added 54287 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 146984
Added 76756 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:09.294466.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/instagram-feed.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/widget.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/SBI_About_Us.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/SBI_Admin_Notices.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/SBI_Global_Settings.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/SBI_HTTP_Request.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/SBI_oEmbeds.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/SBI_Response.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/SBI_Support.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/SBI_Upgrader.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/SBI_View.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/builder/templates/builder.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/builder/templates/preview/error.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/builder/templates/preview/header.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/builder/templates/preview/theme-styles.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/builder/templates/screens/customizer.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/builder/templates/screens/select-feed.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/builder/templates/screens/welcome.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/builder/templates/sections/empty-state.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/builder/templates/sections/feeds-list.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/builder/templates/sections/feeds-type.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/builder/templates/sections/footer.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/builder/templates/sections/header.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/builder/templates/sections/select-source.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/builder/templates/sections/create-feed/multiple-sources-list.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/builder/templates/sections/create-feed/multiple-sources.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/builder/templates/sections/create-feed/single-public-hashtags.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/builder/templates/sections/create-feed/single-sources.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/builder/templates/sections/customizer/preview.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/builder/templates/sections/customizer/sidebar.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/builder/templates/sections/feeds/feeds.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/builder/templates/sections/feeds/instances.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/builder/templates/sections/feeds/legacy-feeds.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/builder/templates/sections/popup/add-source-popup.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/builder/templates/sections/popup/confirm-dialog-popup.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/builder/templates/sections/popup/embed-popup.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/builder/templates/sections/popup/extensions-popup.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/builder/templates/sections/popup/feedtypes-customizer-popup.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/builder/templates/sections/popup/feedtypes-popup.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/builder/templates/sections/popup/install-plugin-popup.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/builder/templates/sections/popup/onboarding-customizer-popup.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/builder/templates/sections/popup/onboarding-popup.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/builder/templates/sections/popup/source-instances.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/builder/templates/sections/popup/sources-list-popup.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/Traits/SBI_Settings.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/views/about/content.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/views/about/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/views/oembeds/content.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/views/oembeds/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/views/oembeds/modal.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/views/oembeds/oembed_features.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/views/oembeds/plugin_info.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/views/sections/builder_footer_cta.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/views/sections/header.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/views/sections/settings_footer_cta.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/views/sections/sticky_widget.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/views/settings/content.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/views/settings/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/views/settings/tab/advanced.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/views/settings/tab/feeds.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/views/settings/tab/general.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/views/support/content.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/admin/views/support/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/class-sb-instagram-api-connect.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/class-sb-instagram-cache.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/class-sb-instagram-connected-account.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/class-sb-instagram-cron-updater.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/class-sb-instagram-data-encryption.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/class-sb-instagram-data-manager.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/class-sb-instagram-display-elements.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/class-sb-instagram-education.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/class-sb-instagram-feed-locator.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/class-sb-instagram-feed.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/class-sb-instagram-gdpr-integrations.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/class-sb-instagram-oembed.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/class-sb-instagram-parse.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/class-sb-instagram-post.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/class-sb-instagram-post-set.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/class-sb-instagram-posts-manager.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/class-sb-instagram-settings.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/class-sb-instagram-single.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/class-sb-instagram-token-refresher.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/email.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/if-functions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/admin/actions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/admin/addon-functions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/admin/class-install-skin.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/admin/class-sbi-account-connector.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/admin/class-sbi-new-user.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/admin/class-sbi-notifications.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/admin/class-sbi-sitehealth.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/admin/PluginSilentUpgrader.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/admin/PluginSilentUpgraderSkin.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/admin/blocks/class-sbi-blocks.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/Builder/SB_Builder_Customizer.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/Builder/SBI_Db.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/Builder/SBI_Feed_Builder.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/Builder/SBI_Feed_Saver_Manager.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/Builder/SBI_Feed_Saver.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/Builder/SBI_Post_Set.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/Builder/SBI_Source.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/Builder/SBI_Theme_CSS.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/Builder/SBI_Tooltip_Wizard.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/Builder/Controls/SB_Actionbutton_Control.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/Builder/Controls/SB_Checkbox_Control.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/Builder/Controls/SB_Checkboxlist_Control.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/Builder/Controls/SB_Checkboxsection_Control.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/Builder/Controls/SB_Coloroverride_Control.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/Builder/Controls/SB_Colorpicker_Control.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/Builder/Controls/SB_Controls_Base.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/Builder/Controls/SB_Customview_Control.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/Builder/Controls/SB_Datepicker_Control.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/Builder/Controls/SB_Heading_Control.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/Builder/Controls/SB_Hidden_Control.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/Builder/Controls/SB_Imagechooser_Control.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/Builder/Controls/SB_Number_Control.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/Builder/Controls/SB_Select_Control.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/Builder/Controls/SB_Separator_Control.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/Builder/Controls/SB_Switcher_Control.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/Builder/Controls/SB_Textarea_Control.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/Builder/Controls/SB_Text_Control.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/Builder/Controls/SB_Togglebutton_Control.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/Builder/Controls/SB_Toggle_Control.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/Builder/Controls/SB_Toggleset_Control.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/Builder/Tabs/SBI_Builder_Customizer_Tab.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/Builder/Tabs/SBI_Customize_Tab.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/Builder/Tabs/SBI_Settings_Tab.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/Helpers/SB_Instagram_Tracking.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/Services/ServiceContainer.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/inc/Services/ShortcodeService.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/templates/feed.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/templates/footer.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/templates/header.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/templates/item.php' cannot be parsed correct.
Added new directory node for: vendor
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/vendor/autoload.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/vendor/autoload.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: composer
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/vendor/composer/autoload_classmap.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/vendor/composer/autoload_classmap.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: composer
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/vendor/composer/autoload_namespaces.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/vendor/composer/autoload_namespaces.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: composer
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/vendor/composer/autoload_psr4.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/vendor/composer/autoload_psr4.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: composer
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/vendor/composer/autoload_real.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/vendor/composer/autoload_real.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: composer
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/vendor/composer/autoload_static.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/vendor/composer/autoload_static.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: composer
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/vendor/composer/ClassLoader.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/vendor/composer/ClassLoader.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: composer
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/vendor/composer/installed.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/vendor/composer/installed.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: composer
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/vendor/composer/InstalledVersions.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/vendor/composer/InstalledVersions.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: smashballoon
Added new directory node for: stubs
Added new directory node for: src
Added new directory node for: Services
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/vendor/smashballoon/stubs/src/Services/ServiceProviderInterface.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/vendor/smashballoon/stubs/src/Services/ServiceProviderInterface.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: smashballoon
Added new directory node for: stubs
Added new directory node for: src
Added new directory node for: Services
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/vendor/smashballoon/stubs/src/Services/ServiceProvider.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/vendor/smashballoon/stubs/src/Services/ServiceProvider.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: smashballoon
Added new directory node for: stubs
Added new directory node for: src
Added new directory node for: Traits
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/vendor/smashballoon/stubs/src/Traits/Singleton.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/instagram-feed/vendor/smashballoon/stubs/src/Traits/Singleton.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:11.330347.

56 Nodes Created
911 PHP_REACHES edges created
11 REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
9873 PHP_REACHES edges created
160 CALLS edges created
31 PHP_REACHES edges created
278 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
14000 PHP_REACHES edges created
15000 PHP_REACHES edges created
16000 PHP_REACHES edges created
17000 PHP_REACHES edges created
18000 PHP_REACHES edges created
19000 PHP_REACHES edges created
20000 PHP_REACHES edges created
21000 PHP_REACHES edges created
22000 PHP_REACHES edges created
23000 PHP_REACHES edges created
24000 PHP_REACHES edges created
25000 PHP_REACHES edges created
26000 PHP_REACHES edges created
27000 PHP_REACHES edges created
28000 PHP_REACHES edges created
29000 PHP_REACHES edges created
30000 PHP_REACHES edges created
31000 PHP_REACHES edges created
32000 PHP_REACHES edges created
33000 PHP_REACHES edges created
34000 PHP_REACHES edges created
35000 PHP_REACHES edges created
36000 PHP_REACHES edges created
37000 PHP_REACHES edges created
38000 PHP_REACHES edges created
39000 PHP_REACHES edges created
40000 PHP_REACHES edges created
41000 PHP_REACHES edges created
42000 PHP_REACHES edges created
43000 PHP_REACHES edges created
44000 PHP_REACHES edges created
45000 PHP_REACHES edges created
46000 PHP_REACHES edges created
47000 PHP_REACHES edges created
48000 PHP_REACHES edges created
49000 PHP_REACHES edges created
50000 PHP_REACHES edges created
51000 PHP_REACHES edges created
52000 PHP_REACHES edges created
53000 PHP_REACHES edges created
54000 PHP_REACHES edges created
55000 PHP_REACHES edges created
56000 PHP_REACHES edges created
57000 PHP_REACHES edges created
58000 PHP_REACHES edges created
58964 PHP_REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
14000 PHP_REACHES edges created
15000 PHP_REACHES edges created
16000 PHP_REACHES edges created
17000 PHP_REACHES edges created
18000 PHP_REACHES edges created
19000 PHP_REACHES edges created
20000 PHP_REACHES edges created
21000 PHP_REACHES edges created
22000 PHP_REACHES edges created
23000 PHP_REACHES edges created
24000 PHP_REACHES edges created
25000 PHP_REACHES edges created
26000 PHP_REACHES edges created
27000 PHP_REACHES edges created
28000 PHP_REACHES edges created
29000 PHP_REACHES edges created
30000 PHP_REACHES edges created
31000 PHP_REACHES edges created
32000 PHP_REACHES edges created
33000 PHP_REACHES edges created
34000 PHP_REACHES edges created
35000 PHP_REACHES edges created
36000 PHP_REACHES edges created
37000 PHP_REACHES edges created
38000 PHP_REACHES edges created
39000 PHP_REACHES edges created
40000 PHP_REACHES edges created
41000 PHP_REACHES edges created
42000 PHP_REACHES edges created
43000 PHP_REACHES edges created
44000 PHP_REACHES edges created
45000 PHP_REACHES edges created
46000 PHP_REACHES edges created
47000 PHP_REACHES edges created
48000 PHP_REACHES edges created
49000 PHP_REACHES edges created
50000 PHP_REACHES edges created
51000 PHP_REACHES edges created
52000 PHP_REACHES edges created
53000 PHP_REACHES edges created
54000 PHP_REACHES edges created
55000 PHP_REACHES edges created
56000 PHP_REACHES edges created
57000 PHP_REACHES edges created
58000 PHP_REACHES edges created
59000 PHP_REACHES edges created
60000 PHP_REACHES edges created
61000 PHP_REACHES edges created
62000 PHP_REACHES edges created
63000 PHP_REACHES edges created
64000 PHP_REACHES edges created
65000 PHP_REACHES edges created
66000 PHP_REACHES edges created
67000 PHP_REACHES edges created
68000 PHP_REACHES edges created
69000 PHP_REACHES edges created
70000 PHP_REACHES edges created
71000 PHP_REACHES edges created
72000 PHP_REACHES edges created
73000 PHP_REACHES edges created
74000 PHP_REACHES edges created
75000 PHP_REACHES edges created
76000 PHP_REACHES edges created
76756 PHP_REACHES edges created
2 DIRECTORY_OF edges created
1 FILE_OF edges created
3 DIRECTORY_OF edges created
1 FILE_OF edges created
3 DIRECTORY_OF edges created
1 FILE_OF edges created
3 DIRECTORY_OF edges created
1 FILE_OF edges created
3 DIRECTORY_OF edges created
1 FILE_OF edges created
3 DIRECTORY_OF edges created
1 FILE_OF edges created
3 DIRECTORY_OF edges created
1 FILE_OF edges created
3 DIRECTORY_OF edges created
1 FILE_OF edges created
3 DIRECTORY_OF edges created
1 FILE_OF edges created
6 DIRECTORY_OF edges created
1 FILE_OF edges created
6 DIRECTORY_OF edges created
1 FILE_OF edges created
6 DIRECTORY_OF edges created
1 FILE_OF edges created
147040 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 23714 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:03.460030.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 62 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:46.549855.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 30217
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 30217
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 30217
Added 1350 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:53.020945.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 2162 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.350800.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:12.129654.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 30217
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 30217
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 30217
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:20.488376.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.183717.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.029318.

62 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
3512 PHP_REACHES edges created
3574 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 2143 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.265321.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
152 SQL operations to process.

		UPDATE $wpdbsbi_feed_caches
		SET cache_value = ''
		WHERE cache_key NOT IN ( 'posts_backup', 'header_backup' );
SQL command ( UPDATE $wpdbsbi_feed_caches SET cache_value = '' WHERE cache_key NOT IN ( 'posts_backup', 'header_backup' );) cannot be parsed correct.

                    DELETE
                    FROM $wpdboptions
                    WHERE `option_name` LIKE ('%\_transient\_sbi\_%')
                    
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%\_transient\_sbi\_%') ) cannot be parsed correct.

                    DELETE
                    FROM $wpdboptions
                    WHERE `option_name` LIKE ('%\_transient\_timeout\_sbi\_%')
                    
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%\_transient\_timeout\_sbi\_%') ) cannot be parsed correct.

			        DELETE
			        FROM $wpdboptions
			        WHERE `option_name` LIKE ('%\_transient\_&sbi\_%')
			        
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%\_transient\_&sbi\_%') ) cannot be parsed correct.

			        DELETE
			        FROM $wpdboptions
			        WHERE `option_name` LIKE ('%\_transient\_timeout\_&sbi\_%')
			        
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%\_transient\_timeout\_&sbi\_%') ) cannot be parsed correct.

                    DELETE
                    FROM $wpdboptions
                    WHERE `option_name` LIKE ('%\_transient\_$sbi\_%')
                    
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%\_transient\_$sbi\_%') ) cannot be parsed correct.

                    DELETE
                    FROM $wpdboptions
                    WHERE `option_name` LIKE ('%\_transient\_timeout\_$sbi\_%')
                    
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%\_transient\_timeout\_$sbi\_%') ) cannot be parsed correct.
SELECT * FROM $wpdbSBI_INSTAGRAM_FEEDS_POSTS ORDER BY id DESC LIMIT 1;
SQL command (SELECT * FROM $wpdbSBI_INSTAGRAM_FEEDS_POSTS ORDER BY id DESC LIMIT 1;) cannot be parsed correct.
SELECT * FROM $wpdbSBI_INSTAGRAM_POSTS_TYPE ORDER BY id DESC LIMIT 1;
SQL command (SELECT * FROM $wpdbSBI_INSTAGRAM_POSTS_TYPE ORDER BY id DESC LIMIT 1;) cannot be parsed correct.
SELECT s.id, s.account_id, s.account_type, s.privilege, s.access_token, s.username, s.info, s.error, s.expires, count(f.id) as used_in
				FROM $wpdbsbi_sources s
				LEFT JOIN $wpdbsbi_feeds f ON f.settings LIKE CONCAT('%', s.account_id, '%')
				GROUP BY s.id, s.account_id
				LIMIT $limit
				OFFSET max(0, $page * self::"RESULTS_PER_PAGE");
				
SQL command (SELECT s.id, s.account_id, s.account_type, s.privilege, s.access_token, s.username, s.info, s.error, s.expires, count(f.id) as used_in FROM $wpdbsbi_sources s LEFT JOIN $wpdbsbi_feeds f ON f.settings LIKE CONCAT('%', s.account_id, '%') GROUP BY s.id, s.account_id LIMIT $limit OFFSET max(0, $page * self::"RESULTS_PER_PAGE"); ) cannot be parsed correct.
SELECT *
						FROM $wpdbsbi_feeds
						WHERE settings LIKE CONCAT('%', sanitize_key($result["account_id"]), '%')
						GROUP BY id
						LIMIT 100;
						
SQL command (SELECT * FROM $wpdbsbi_feeds WHERE settings LIKE CONCAT('%', sanitize_key($result["account_id"]), '%') GROUP BY id LIMIT 100; ) cannot be parsed correct.

			SELECT * FROM $wpdbsbi_sources
			WHERE account_type = 'personal'
			AND expires < gmdate("Y-m-d H:i:s", time() + SBI_REFRESH_THRESHOLD_OFFSET)
			AND last_updated < %s
			ORDER BY expires ASC
			LIMIT 5;
		 

			SELECT * FROM $wpdbsbi_sources
			WHERE account_type = 'personal'
			AND expires < gmdate("Y-m-d H:i:s", time() + SBI_REFRESH_THRESHOLD_OFFSET)
			AND last_updated < gmdate("Y-m-d H:i:s", time() - SBI_MINIMUM_INTERVAL)
			ORDER BY expires ASC
			LIMIT 5;
		 

			SELECT * FROM $wpdbsbi_sources
			WHERE account_type = 'personal'
			AND expires < gmdate("Y-m-d H:i:s", time() + SBI_REFRESH_THRESHOLD_OFFSET)
			AND last_updated < gmdate("Y-m-d H:i:s", time() - SBI_MINIMUM_INTERVAL)
			ORDER BY expires ASC
			LIMIT 5;
		 
SQL command ( SELECT * FROM $wpdbsbi_sources WHERE account_type = 'personal' AND expires < gmdate("Y-m-d H:i:s", time() + SBI_REFRESH_THRESHOLD_OFFSET) AND last_updated < gmdate("Y-m-d H:i:s", time() - SBI_MINIMUM_INTERVAL) ORDER BY expires ASC LIMIT 5; ) cannot be parsed correct.

			SELECT * FROM $wpdbsbi_sources
			WHERE username = {"id": "wp_parse_args($return, SBI_Feed_Saver->settings_defaults())_id"}_username;
		 

			SELECT * FROM $wpdbsbi_sources
			WHERE username = {"id": "wp_parse_args($return, SBI_Feed_Saver->settings_defaults())_id"}_username;
		 
SQL command ( SELECT * FROM $wpdbsbi_sources WHERE username = {"id": "wp_parse_args($return, SBI_Feed_Saver->settings_defaults())_id"}_username; ) cannot be parsed correct.

			SELECT * FROM $wpdbsbi_sources
			WHERE access_token = {"id": "wp_parse_args($return, SBI_Feed_Saver->settings_defaults())_id"}_access_token;
		 

			SELECT * FROM $wpdbsbi_sources
			WHERE access_token = {"id": "wp_parse_args($return, SBI_Feed_Saver->settings_defaults())_id"}_access_token;
		 
SQL command ( SELECT * FROM $wpdbsbi_sources WHERE access_token = {"id": "wp_parse_args($return, SBI_Feed_Saver->settings_defaults())_id"}_access_token; ) cannot be parsed correct.

			SELECT * FROM $wpdbsbi_sources
			WHERE account_id IN ('implode("\' , \'", array_map("esc_sql", $id_array))')
			OR account_type = 'business'
		 
SQL command ( SELECT * FROM $wpdbsbi_sources WHERE account_id IN ('implode("\' , \'", array_map("esc_sql", $id_array))') OR account_type = 'business' ) cannot be parsed correct.

			SELECT id, feed_name FROM $wpdbsbi_feeds;
			
SQL command ( SELECT id, feed_name FROM $wpdbsbi_feeds; ) cannot be parsed correct.

			SELECT * FROM $wpdbsbi_sources
			WHERE account_id = {"id": "wp_parse_args($return, SBI_Feed_Saver->settings_defaults())_id"}_id
			AND privilege = %s;
		 

			SELECT * FROM $wpdbsbi_sources
			WHERE account_id = {"id": "wp_parse_args($return, SBI_Feed_Saver->settings_defaults())_id"}_id
			AND privilege = ;
		 

			SELECT * FROM $wpdbsbi_sources
			WHERE account_id = {"id": "wp_parse_args($return, SBI_Feed_Saver->settings_defaults())_id"}_id
			AND privilege = ;
		 
SQL command ( SELECT * FROM $wpdbsbi_sources WHERE account_id = {"id": "wp_parse_args($return, SBI_Feed_Saver->settings_defaults())_id"}_id AND privilege = ; ) cannot be parsed correct.

					SELECT * FROM $wpdbsbi_feed_caches
					WHERE cron_update = 'yes'
					AND last_updated < gmdate("Y-m-d H:i:s", time() - HOUR_IN_SECONDS)
					ORDER BY last_updated ASC
					LIMIT %d;

					SELECT * FROM $wpdbsbi_feed_caches
					WHERE cron_update = 'yes'
					AND last_updated < gmdate("Y-m-d H:i:s", time() - HOUR_IN_SECONDS)
					ORDER BY last_updated ASC
					LIMIT "placeholder_1";

					SELECT * FROM $wpdbsbi_feed_caches
					WHERE cron_update = 'yes'
					AND last_updated < gmdate("Y-m-d H:i:s", time() - HOUR_IN_SECONDS)
					ORDER BY last_updated ASC
					LIMIT "placeholder_1";
SQL command ( SELECT * FROM $wpdbsbi_feed_caches WHERE cron_update = 'yes' AND last_updated < gmdate("Y-m-d H:i:s", time() - HOUR_IN_SECONDS) ORDER BY last_updated ASC LIMIT "placeholder_1";) cannot be parsed correct.
dbDelta
SQL command (dbDelta) cannot be parsed correct.

			CREATE TABLE $wpdbsbi_feeds (
			 id bigint(20) unsigned NOT NULL auto_increment,
			 feed_name text NOT NULL default '',
			 feed_title text NOT NULL default '',
			 settings longtext NOT NULL default '',
			 author bigint(20) unsigned NOT NULL default '1',
			 status varchar(255) NOT NULL default '',
			 last_modified datetime NOT NULL,
			 PRIMARY KEY  (id),
			 KEY author (author)
			) $wpdb->get_charset_collate();
			
SQL command ( CREATE TABLE $wpdbsbi_feeds ( id bigint(20) unsigned NOT NULL auto_increment, feed_name text NOT NULL default '', feed_title text NOT NULL default '', settings longtext NOT NULL default '', author bigint(20) unsigned NOT NULL default '1', status varchar(255) NOT NULL default '', last_modified datetime NOT NULL, PRIMARY KEY (id), KEY author (author) ) $wpdb->get_charset_collate(); ) cannot be parsed correct.

				CREATE TABLE $wpdbsbi_feed_caches (
				id bigint(20) unsigned NOT NULL auto_increment,
				feed_id varchar(255) NOT NULL default '',
                cache_key varchar(255) NOT NULL default '',
                cache_value longtext NOT NULL default '',
                cron_update varchar(20) NOT NULL default 'yes',
                last_updated datetime NOT NULL,
                PRIMARY KEY  (id),
                KEY feed_id (feed_id(191))
            ) $wpdb->get_charset_collate();
SQL command ( CREATE TABLE $wpdbsbi_feed_caches ( id bigint(20) unsigned NOT NULL auto_increment, feed_id varchar(255) NOT NULL default '', cache_key varchar(255) NOT NULL default '', cache_value longtext NOT NULL default '', cron_update varchar(20) NOT NULL default 'yes', last_updated datetime NOT NULL, PRIMARY KEY (id), KEY feed_id (feed_id(191)) ) $wpdb->get_charset_collate();) cannot be parsed correct.

			CREATE TABLE $wpdbsbi_sources (
				id bigint(20) unsigned NOT NULL auto_increment,
				account_id varchar(255) NOT NULL default '',
                account_type varchar(255) NOT NULL default '',
                privilege varchar(255) NOT NULL default '',
                access_token varchar(1000) NOT NULL default '',
                username varchar(255) NOT NULL default '',
                info text NOT NULL default '',
                error text NOT NULL default '',
                expires datetime NOT NULL,
                last_updated datetime NOT NULL,
                author bigint(20) unsigned NOT NULL default '1',
                PRIMARY KEY  (id),
                KEY account_type (account_type(191)),
                KEY author (author)
            ) $wpdb->get_charset_collate();
SQL command ( CREATE TABLE $wpdbsbi_sources ( id bigint(20) unsigned NOT NULL auto_increment, account_id varchar(255) NOT NULL default '', account_type varchar(255) NOT NULL default '', privilege varchar(255) NOT NULL default '', access_token varchar(1000) NOT NULL default '', username varchar(255) NOT NULL default '', info text NOT NULL default '', error text NOT NULL default '', expires datetime NOT NULL, last_updated datetime NOT NULL, author bigint(20) unsigned NOT NULL default '1', PRIMARY KEY (id), KEY account_type (account_type(191)), KEY author (author) ) $wpdb->get_charset_collate();) cannot be parsed correct.
SELECT COUNT(*) AS num_entries FROM $wpdbsbi_feeds
SQL command (SELECT COUNT(*) AS num_entries FROM $wpdbsbi_feeds) cannot be parsed correct.

			SELECT * FROM $wpdbsbi_feeds
			LIMIT "placeholder_0"
			OFFSET %d;

			SELECT * FROM $wpdbsbi_feeds
			LIMIT "placeholder_0"
			OFFSET max(0, $page * self::"RESULTS_PER_PAGE");

			SELECT * FROM $wpdbsbi_feeds
			LIMIT "placeholder_0"
			OFFSET max(0, $page * self::"RESULTS_PER_PAGE");
SQL command ( SELECT * FROM $wpdbsbi_feeds LIMIT "placeholder_0" OFFSET max(0, $page * self::"RESULTS_PER_PAGE");) cannot be parsed correct.
SELECT * FROM $wpdbsbi_feeds
			WHERE feed_name LIKE $wpdb->esc_like($sourcename)%;
SELECT * FROM $wpdbsbi_feeds
			WHERE feed_name LIKE $wpdb->esc_like($sourcename)%;
SQL command (SELECT * FROM $wpdbsbi_feeds WHERE feed_name LIKE $wpdb->esc_like($sourcename)%;) cannot be parsed correct.
DELETE FROM $wpdbsbi_feed_caches
SQL command (DELETE FROM $wpdbsbi_feed_caches) cannot be parsed correct.
DELETE FROM $wpdbsbi_sources
SQL command (DELETE FROM $wpdbsbi_sources) cannot be parsed correct.
DROP TABLE IF EXISTS $wpdbsbi_feeds
SQL command (DROP TABLE IF EXISTS $wpdbsbi_feeds) cannot be parsed correct.
DROP TABLE IF EXISTS $wpdbsbi_feed_caches
SQL command (DROP TABLE IF EXISTS $wpdbsbi_feed_caches) cannot be parsed correct.
DROP TABLE IF EXISTS $wpdbsbi_sources
SQL command (DROP TABLE IF EXISTS $wpdbsbi_sources) cannot be parsed correct.

        DELETE
        FROM $wpdbusermeta
        WHERE `meta_key` LIKE ('sbi\_%')
       
SQL command ( DELETE FROM $wpdbusermeta WHERE `meta_key` LIKE ('sbi\_%') ) cannot be parsed correct.

			DELETE
			FROM esc_sql($wpdb->prefix . SBI_INSTAGRAM_FEED_LOCATOR)
			WHERE feed_id LIKE '*%';
SQL command ( DELETE FROM esc_sql($wpdb->prefix . SBI_INSTAGRAM_FEED_LOCATOR) WHERE feed_id LIKE '*%';) cannot be parsed correct.

        DELETE
        FROM $wpdboptions
        WHERE `option_name` LIKE ('%!sbi\_%')
       
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%!sbi\_%') ) cannot be parsed correct.

        DELETE
        FROM $wpdboptions
        WHERE `option_name` LIKE ('%\_transient\_&sbi\_%')
        
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%\_transient\_&sbi\_%') ) cannot be parsed correct.

        DELETE
        FROM $wpdboptions
        WHERE `option_name` LIKE ('%\_transient\_timeout\_&sbi\_%')
        
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%\_transient\_timeout\_&sbi\_%') ) cannot be parsed correct.

    DELETE
    FROM $wpdboptions
    WHERE `option_name` LIKE ('%sb_wlupdated_%')
    
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%sb_wlupdated_%') ) cannot be parsed correct.
DROP TABLE IF EXISTS $wpdbsbi_instagram_posts
SQL command (DROP TABLE IF EXISTS $wpdbsbi_instagram_posts) cannot be parsed correct.
DROP TABLE IF EXISTS esc_sql($wpdb->prefix . "sbi_instagram_feeds_posts")
SQL command (DROP TABLE IF EXISTS esc_sql($wpdb->prefix . "sbi_instagram_feeds_posts")) cannot be parsed correct.
DROP TABLE IF EXISTS $wpdbSBI_INSTAGRAM_FEED_LOCATOR
SQL command (DROP TABLE IF EXISTS $wpdbSBI_INSTAGRAM_FEED_LOCATOR) cannot be parsed correct.

			        DELETE
			        FROM $wpdboptions
			        WHERE `option_name` LIKE ('%\_transient\_$sbi\_%')
			        
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%\_transient\_$sbi\_%') ) cannot be parsed correct.

			        DELETE
			        FROM $wpdboptions
			        WHERE `option_name` LIKE ('%\_transient\_timeout\_$sbi\_%')
			        
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%\_transient\_timeout\_$sbi\_%') ) cannot be parsed correct.
DELETE FROM $wpdbsbi_feeds WHERE id IN (implode(",", array_map("absint", $feed_ids_array)))
SQL command (DELETE FROM $wpdbsbi_feeds WHERE id IN (implode(",", array_map("absint", $feed_ids_array)))) cannot be parsed correct.
DELETE FROM $wpdbsbi_feed_caches WHERE feed_id IN (implode(",", array_map("absint", $feed_ids_array)))
SQL command (DELETE FROM $wpdbsbi_feed_caches WHERE feed_id IN (implode(",", array_map("absint", $feed_ids_array)))) cannot be parsed correct.
DELETE FROM $wpdbsbi_sources WHERE id = $source_id; 
DELETE FROM $wpdbsbi_sources WHERE id = $source_id; 
SQL command (DELETE FROM $wpdbsbi_sources WHERE id = $source_id; ) cannot be parsed correct.
DELETE FROM $wpdbsbi_sources WHERE account_id = $connected_account_term; 
DELETE FROM $wpdbsbi_sources WHERE account_id = $connected_account_term; 
SQL command (DELETE FROM $wpdbsbi_sources WHERE account_id = $connected_account_term; ) cannot be parsed correct.
INSERT INTO $wpdbsbi_feeds (feed_name, settings, author, status)
				SELECT CONCAT(feed_name, ' (copy)'), settings, author, status
				FROM $wpdbsbi_feeds
				WHERE id = $feed_id; 
INSERT INTO $wpdbsbi_feeds (feed_name, settings, author, status)
				SELECT CONCAT(feed_name, ' (copy)'), settings, author, status
				FROM $wpdbsbi_feeds
				WHERE id = $feed_id; 
SQL command (INSERT INTO $wpdbsbi_feeds (feed_name, settings, author, status) SELECT CONCAT(feed_name, ' (copy)'), settings, author, status FROM $wpdbsbi_feeds WHERE id = $feed_id; ) cannot be parsed correct.
UPDATE $wpdbsbi_feed_caches
				SET cache_value = ''
				WHERE feed_id like esc_sql($feed_id)_CUSTOMIZER_MODMODE%
UPDATE $wpdbsbi_feed_caches
				SET cache_value = ''
				WHERE feed_id like esc_sql($feed_id)_CUSTOMIZER_MODMODE%
SQL command (UPDATE $wpdbsbi_feed_caches SET cache_value = '' WHERE feed_id like esc_sql($feed_id)_CUSTOMIZER_MODMODE%) cannot be parsed correct.

			SELECT * FROM $wpdbsbi_feed_caches
			WHERE feed_id = $this_feed_id
			AND cache_key = 'posts'

			SELECT * FROM $wpdbsbi_feed_caches
			WHERE feed_id = $this_feed_id
			AND cache_key = 'posts'
SQL command ( SELECT * FROM $wpdbsbi_feed_caches WHERE feed_id = $this_feed_id AND cache_key = 'posts') cannot be parsed correct.
DELETE FROM $wpdbsbi_feed_caches
				WHERE feed_id LIKE ('sbi\_%')
				AND cache_key NOT IN ( 'posts_backup', 'header_backup' )
SQL command (DELETE FROM $wpdbsbi_feed_caches WHERE feed_id LIKE ('sbi\_%') AND cache_key NOT IN ( 'posts_backup', 'header_backup' )) cannot be parsed correct.
UPDATE $wpdbsbi_feed_caches
				SET cache_value = ''
				WHERE feed_id LIKE ('sbi\_%')
				AND cache_key NOT IN ( 'posts_backup', 'header_backup' )
SQL command (UPDATE $wpdbsbi_feed_caches SET cache_value = '' WHERE feed_id LIKE ('sbi\_%') AND cache_key NOT IN ( 'posts_backup', 'header_backup' )) cannot be parsed correct.

				SELECT * FROM $wpdbsbi_feed_caches
				WHERE feed_id = $this_feed_id

				SELECT * FROM $wpdbsbi_feed_caches
				WHERE feed_id = $this_feed_id
SQL command ( SELECT * FROM $wpdbsbi_feed_caches WHERE feed_id = $this_feed_id) cannot be parsed correct.
None

			SELECT * FROM $wpdbsbi_feed_caches
			WHERE feed_id = $this_feed_id
			AND cache_key = %s

			SELECT * FROM $wpdbsbi_feed_caches
			WHERE feed_id = $this_feed_id
			AND cache_key = $cache_type$this_suffix

			SELECT * FROM $wpdbsbi_feed_caches
			WHERE feed_id = $this_feed_id
			AND cache_key = $cache_type$this_suffix
SQL command ( SELECT * FROM $wpdbsbi_feed_caches WHERE feed_id = $this_feed_id AND cache_key = $cache_type$this_suffix) cannot be parsed correct.
UPDATE $wpdbsbi_feed_caches
				SET cache_value = ''
				WHERE feed_id = str_replace(["_CUSTOMIZER", "_CUSTOMIZER_MODMODE"], "", $this->feed_id)
				AND cache_key NOT IN ( 'posts', 'posts_backup', 'header_backup' );
UPDATE $wpdbsbi_feed_caches
				SET cache_value = ''
				WHERE feed_id = str_replace(["_CUSTOMIZER", "_CUSTOMIZER_MODMODE"], "", $this->feed_id)
				AND cache_key NOT IN ( 'posts', 'posts_backup', 'header_backup' );
SQL command (UPDATE $wpdbsbi_feed_caches SET cache_value = '' WHERE feed_id = str_replace(["_CUSTOMIZER", "_CUSTOMIZER_MODMODE"], "", $this->feed_id) AND cache_key NOT IN ( 'posts', 'posts_backup', 'header_backup' );) cannot be parsed correct.
UPDATE $wpdbsbi_feed_caches
				SET cache_value = ''
				WHERE feed_id = str_replace(["_CUSTOMIZER", "_CUSTOMIZER_MODMODE"], "", $this->feed_id)_CUSTOMIZER
UPDATE $wpdbsbi_feed_caches
				SET cache_value = ''
				WHERE feed_id = str_replace(["_CUSTOMIZER", "_CUSTOMIZER_MODMODE"], "", $this->feed_id)_CUSTOMIZER
SQL command (UPDATE $wpdbsbi_feed_caches SET cache_value = '' WHERE feed_id = str_replace(["_CUSTOMIZER", "_CUSTOMIZER_MODMODE"], "", $this->feed_id)_CUSTOMIZER) cannot be parsed correct.

		SELECT option_name
        FROM $wpdb
        WHERE `option_name` LIKE ('%\_transient\_sbi\_%')
        AND `option_name` NOT LIKE ('%\_transient\_sbi\_header%');
SQL command ( SELECT option_name FROM $wpdb WHERE `option_name` LIKE ('%\_transient\_sbi\_%') AND `option_name` NOT LIKE ('%\_transient\_sbi\_header%');) cannot be parsed correct.
SELECT p.id, p.media_id FROM $wpdbSBI_INSTAGRAM_POSTS_TYPE as p
					INNER JOIN esc_sql($wpdb->prefix . SBI_INSTAGRAM_FEEDS_POSTS) AS f ON p.id = f.id
					WHERE f.hashtag = '';
SQL command (SELECT p.id, p.media_id FROM $wpdbSBI_INSTAGRAM_POSTS_TYPE as p INNER JOIN esc_sql($wpdb->prefix . SBI_INSTAGRAM_FEEDS_POSTS) AS f ON p.id = f.id WHERE f.hashtag = '';) cannot be parsed correct.
DELETE p, f FROM $wpdbSBI_INSTAGRAM_POSTS_TYPE as p
					INNER JOIN esc_sql($wpdb->prefix . SBI_INSTAGRAM_FEEDS_POSTS) AS f ON p.id = f.id
					WHERE f.hashtag = '';
SQL command (DELETE p, f FROM $wpdbSBI_INSTAGRAM_POSTS_TYPE as p INNER JOIN esc_sql($wpdb->prefix . SBI_INSTAGRAM_FEEDS_POSTS) AS f ON p.id = f.id WHERE f.hashtag = '';) cannot be parsed correct.
UPDATE $wpdbSBI_INSTAGRAM_POSTS_TYPE as p
				INNER JOIN esc_sql($wpdb->prefix . SBI_INSTAGRAM_FEEDS_POSTS) AS f ON p.id = f.id
				SET p.json_data = ''
				WHERE f.hashtag = '';
SQL command (UPDATE $wpdbSBI_INSTAGRAM_POSTS_TYPE as p INNER JOIN esc_sql($wpdb->prefix . SBI_INSTAGRAM_FEEDS_POSTS) AS f ON p.id = f.id SET p.json_data = '' WHERE f.hashtag = '';) cannot be parsed correct.
SELECT * FROM $wpdbSBI_INSTAGRAM_POSTS_TYPE as p
					INNER JOIN esc_sql($wpdb->prefix . SBI_INSTAGRAM_FEEDS_POSTS) AS f ON p.id = f.id
					WHERE p.json_data LIKE '%{%'
					ORDER BY p.time_stamp DESC
					LIMIT 50;
SQL command (SELECT * FROM $wpdbSBI_INSTAGRAM_POSTS_TYPE as p INNER JOIN esc_sql($wpdb->prefix . SBI_INSTAGRAM_FEEDS_POSTS) AS f ON p.id = f.id WHERE p.json_data LIKE '%{%' ORDER BY p.time_stamp DESC LIMIT 50;) cannot be parsed correct.
UPDATE $wpdbSBI_INSTAGRAM_POSTS_TYPE as p
					INNER JOIN esc_sql($wpdb->prefix . SBI_INSTAGRAM_FEEDS_POSTS) AS f ON p.id = f.id
					SET p.json_data = $encryption->encrypt($post["json_data"])
					WHERE p.id = %d;
UPDATE $wpdbSBI_INSTAGRAM_POSTS_TYPE as p
					INNER JOIN esc_sql($wpdb->prefix . SBI_INSTAGRAM_FEEDS_POSTS) AS f ON p.id = f.id
					SET p.json_data = $encryption->encrypt($post["json_data"])
					WHERE p.id = $post_id;
UPDATE $wpdbSBI_INSTAGRAM_POSTS_TYPE as p
					INNER JOIN esc_sql($wpdb->prefix . SBI_INSTAGRAM_FEEDS_POSTS) AS f ON p.id = f.id
					SET p.json_data = $encryption->encrypt($post["json_data"])
					WHERE p.id = $post_id;
SQL command (UPDATE $wpdbSBI_INSTAGRAM_POSTS_TYPE as p INNER JOIN esc_sql($wpdb->prefix . SBI_INSTAGRAM_FEEDS_POSTS) AS f ON p.id = f.id SET p.json_data = $encryption->encrypt($post["json_data"]) WHERE p.id = $post_id;) cannot be parsed correct.

		    DELETE
		    FROM $wpdboptions
		    WHERE `option_name` LIKE ('%!sbi\_%')
		   
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%!sbi\_%') ) cannot be parsed correct.

		    DELETE
		    FROM $wpdboptions
		    WHERE `option_name` LIKE ('%\_transient\_&sbi\_%')
		    
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%\_transient\_&sbi\_%') ) cannot be parsed correct.

		    DELETE
		    FROM $wpdboptions
		    WHERE `option_name` LIKE ('%\_transient\_timeout\_&sbi\_%')
        
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%\_transient\_timeout\_&sbi\_%') ) cannot be parsed correct.

		        DELETE
		        FROM $wpdboptions
		        WHERE `option_name` LIKE ('%\_transient\_sbi\_%')
		        
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%\_transient\_sbi\_%') ) cannot be parsed correct.

		        DELETE
		        FROM $wpdboptions
		        WHERE `option_name` LIKE ('%\_transient\_timeout\_sbi\_%')
		        
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%\_transient\_timeout\_sbi\_%') ) cannot be parsed correct.

		        DELETE
		        FROM $wpdboptions
		        WHERE `option_name` LIKE ('%\_transient\_&sbi\_%')
		        
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%\_transient\_&sbi\_%') ) cannot be parsed correct.

		        DELETE
		        FROM $wpdboptions
		        WHERE `option_name` LIKE ('%\_transient\_timeout\_&sbi\_%')
		        
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%\_transient\_timeout\_&sbi\_%') ) cannot be parsed correct.

		        DELETE
		        FROM $wpdboptions
		        WHERE `option_name` LIKE ('%\_transient\_$sbi\_%')
		        
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%\_transient\_$sbi\_%') ) cannot be parsed correct.

		        DELETE
		        FROM $wpdboptions
		        WHERE `option_name` LIKE ('%\_transient\_timeout\_$sbi\_%')
            
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%\_transient\_timeout\_$sbi\_%') ) cannot be parsed correct.

		    SELECT *
		    FROM $wpdboptions
		    WHERE option_name LIKE ('%!sbi\_%')
		   
SQL command ( SELECT * FROM $wpdboptions WHERE option_name LIKE ('%!sbi\_%') ) cannot be parsed correct.

			SELECT *
			FROM $wpdbSBI_INSTAGRAM_FEED_LOCATOR
			WHERE post_id = $this_feed_details_location_post_id
		  	AND feed_id = %s

			SELECT *
			FROM $wpdbSBI_INSTAGRAM_FEED_LOCATOR
			WHERE post_id = $this_feed_details_location_post_id
		  	AND feed_id = $this_feed_details_feed_id

			SELECT *
			FROM $wpdbSBI_INSTAGRAM_FEED_LOCATOR
			WHERE post_id = $this_feed_details_location_post_id
		  	AND feed_id = $this_feed_details_feed_id
SQL command ( SELECT * FROM $wpdbSBI_INSTAGRAM_FEED_LOCATOR WHERE post_id = $this_feed_details_location_post_id AND feed_id = $this_feed_details_feed_id) cannot be parsed correct.

			SELECT COUNT(*) AS num_entries
            FROM $wpdbSBI_INSTAGRAM_FEED_LOCATOR
            WHERE last_update > date("Y-m-d H:i:s", time() - 120);
            

			SELECT COUNT(*) AS num_entries
            FROM $wpdbSBI_INSTAGRAM_FEED_LOCATOR
            WHERE last_update > date("Y-m-d H:i:s", time() - 120);
            
SQL command ( SELECT COUNT(*) AS num_entries FROM $wpdbSBI_INSTAGRAM_FEED_LOCATOR WHERE last_update > date("Y-m-d H:i:s", time() - 120); ) cannot be parsed correct.

			SELECT COUNT(*) AS num_entries
            FROM $wpdbSBI_INSTAGRAM_FEED_LOCATOR
SQL command ( SELECT COUNT(*) AS num_entries FROM $wpdbSBI_INSTAGRAM_FEED_LOCATOR) cannot be parsed correct.
INSERT INTO $wpdbSBI_INSTAGRAM_FEED_LOCATOR
      	(feed_id,
      	post_id,
      	html_location,
      	shortcode_atts,
      	last_update)
      	VALUES (
            $this_feed_details_feed_id,
	        %d,
	        %s,
	        %s,
	        %s);
INSERT INTO $wpdbSBI_INSTAGRAM_FEED_LOCATOR
      	(feed_id,
      	post_id,
      	html_location,
      	shortcode_atts,
      	last_update)
      	VALUES (
            $this_feed_details_feed_id,
	        $this_feed_details_location_post_id,
	        %s,
	        %s,
	        %s);
INSERT INTO $wpdbSBI_INSTAGRAM_FEED_LOCATOR
      	(feed_id,
      	post_id,
      	html_loc$this_feed_details_location_htmlion,
      	shortcode_atts,
      	last_update)
      	VALUES (
            $this_feed_details_feed_id,
	        $this_feed_details_location_post_id,
	        %s,
	        %s,
	        %s);
INSERT INTO $wpdbSBI_INSTAGRAM_FEED_LOCATOR
      	(feed_id,
      	post_id,
      	html_loc$tsbi_json_encode($this->feed_details["atts"])s_feed_details_location_htmlion,
      	shortcode_atts,
      	last_update)
      	VALUES (
            $this_feed_details_feed_id,
	        $this_feed_details_location_post_id,
	        %s,
	        %s,
	        %s);
INSERT INTO $wpdbSBI_INSTAGRAM_FEED_LOCATOR
      	(feedate("Y-m-d H:i:s")id,
      	post_id,
      	html_loc$tsbi_json_encode($this->feed_details["atts"])s_feed_details_location_htmlion,
      	shortcode_atts,
      	last_update)
      	VALUES (
            $this_feed_details_feed_id,
	        $this_feed_details_location_post_id,
	        %s,
	        %s,
	        %s);
INSERT INTO $wpdbSBI_INSTAGRAM_FEED_LOCATOR
      	(feedate("Y-m-d H:i:s")id,
      	post_id,
      	html_loc$tsbi_json_encode($this->feed_details["atts"])s_feed_details_location_htmlion,
      	shortcode_atts,
      	last_update)
      	VALUES (
            $this_feed_details_feed_id,
	        $this_feed_details_location_post_id,
	        %s,
	        %s,
	        %s);
SQL command (INSERT INTO $wpdbSBI_INSTAGRAM_FEED_LOCATOR (feedate("Y-m-d H:i:s")id, post_id, html_loc$tsbi_json_encode($this->feed_details["atts"])s_feed_details_location_htmlion, shortcode_atts, last_update) VALUES ( $this_feed_details_feed_id, $this_feed_details_location_post_id, %s, %s, %s);) cannot be parsed correct.

			UPDATE $wpdbSBI_INSTAGRAM_FEED_LOCATOR
			SET last_update = date("Y-m-d H:i:s"), html_location = %s
			WHERE id = %d;

			UPDATE $wpdbSBI_INSTAGRAM_FEED_LOCATOR
			SET last_update = date("Y-m-d H:i:s"), html_location = false
			WHERE id = %d;

			UPDATE $wpdbSBI_INSTAGRAM_FEED_LOCATOR
			SET last_update = date("Y-m-d H:i:s"), html_location = fal$index
			WHERE id = %d;

			UPDATE $wpdbSBI_INSTAGRAM_FEED_LOCATOR
			SET last_update = date("Y-m-d H:i:s"), html_location = fal$index
			WHERE id = %d;
SQL command ( UPDATE $wpdbSBI_INSTAGRAM_FEED_LOCATOR SET last_update = date("Y-m-d H:i:s"), html_location = fal$index WHERE id = %d;) cannot be parsed correct.
DELETE FROM $wpdbSBI_INSTAGRAM_FEED_LOCATOR
					ORDER BY last_update ASC
					LIMIT 1;
SQL command (DELETE FROM $wpdbSBI_INSTAGRAM_FEED_LOCATOR ORDER BY last_update ASC LIMIT 1;) cannot be parsed correct.
DELETE FROM $wpdbSBI_INSTAGRAM_FEED_LOCATOR WHERE last_update < date("Y-m-d H:i:s", time() - 2 * WEEK_IN_SECONDS);
DELETE FROM $wpdbSBI_INSTAGRAM_FEED_LOCATOR WHERE last_update < date("Y-m-d H:i:s", time() - 2 * WEEK_IN_SECONDS);
SQL command (DELETE FROM $wpdbSBI_INSTAGRAM_FEED_LOCATOR WHERE last_update < date("Y-m-d H:i:s", time() - 2 * WEEK_IN_SECONDS);) cannot be parsed correct.

			SELECT id
			FROM $wpdbSBI_INSTAGRAM_FEED_LOCATOR
			WHERE html_location = 'unknown'
			AND last_update < date("Y-m-d H:i:s", time() - DAY_IN_SECONDS)
			AND feed_id = %s
			AND post_id = %d
			LIMIT 1;

			SELECT id
			FROM $wpdbSBI_INSTAGRAM_FEED_LOCATOR
			WHERE html_location = 'unknown'
			AND last_update < date("Y-m-d H:i:s", time() - DAY_IN_SECONDS)
			AND feed_id = $transient_name
			AND post_id = %d
			LIMIT 1;

			SELECT id
			FROM $wpdbSBI_INSTAGRAM_FEED_LOCATOR
			WHERE html_location = 'unknown'
			AND last_update < date("Y-m-d H:i:s", time() - DAY_IN_SECONDS)
			AND f$post_idd_id = $transient_name
			AND post_id = %d
			LIMIT 1;

			SELECT id
			FROM $wpdbSBI_INSTAGRAM_FEED_LOCATOR
			WHERE html_location = 'unknown'
			AND last_update < date("Y-m-d H:i:s", time() - DAY_IN_SECONDS)
			AND f$post_idd_id = $transient_name
			AND post_id = %d
			LIMIT 1;
SQL command ( SELECT id FROM $wpdbSBI_INSTAGRAM_FEED_LOCATOR WHERE html_location = 'unknown' AND last_update < date("Y-m-d H:i:s", time() - DAY_IN_SECONDS) AND f$post_idd_id = $transient_name AND post_id = %d LIMIT 1;) cannot be parsed correct.
CREATE TABLE $wpdbSBI_INSTAGRAM_FEED_LOCATOR (
				id BIGINT(20) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
                feed_id VARCHAR(50) DEFAULT '' NOT NULL,
                post_id BIGINT(20) UNSIGNED NOT NULL,
                html_location VARCHAR(50) DEFAULT 'unknown' NOT NULL,
                shortcode_atts LONGTEXT NOT NULL,
                last_update DATETIME
            );
SQL command (CREATE TABLE $wpdbSBI_INSTAGRAM_FEED_LOCATOR ( id BIGINT(20) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY, feed_id VARCHAR(50) DEFAULT '' NOT NULL, post_id BIGINT(20) UNSIGNED NOT NULL, html_location VARCHAR(50) DEFAULT 'unknown' NOT NULL, shortcode_atts LONGTEXT NOT NULL, last_update DATETIME );) cannot be parsed correct.

			SELECT *
			FROM $wpdbSBI_INSTAGRAM_FEED_LOCATOR
			WHERE shortcode_atts = {"feed_id": "*", "html_location": "{\"1\": [\"header\"], \"2\": [\"footer\"], \"3\": [\"sidebar\"]}", "group_by": "html_location"}_shortcode_atts
		  	AND html_location IN ( 'content' )
		  	GROUP BY esc_sql($args["group_by"])
		  	LIMIT %d
			OFFSET %d;

			SELECT *
			FROM $wpdbSBI_INSTAGRAM_FEED_LOCATOR
			WHERE shortcode_atts = {"feed_id": "*", "html_location": "{\"1\": [\"header\"], \"2\": [\"footer\"], \"3\": [\"sidebar\"]}", "group_by": "html_location"}_shortcode_atts
		  	AND html_location IN ( 'content' )
		  	GROUP BY esc_sql($args["group_by"])
		  	LIMIT "placeholder_1"
			OFFSET %d;

			SELECT *
			FROM $wpdbSBI_INSTAGRAM_FEED_LOCATOR
			WHERE shortcode_atts = {"feed_id": "*", "html_lmax(0, $page * InstagramFeed\\Builder\\SBI_Db::"RESULTS_PER_PAGE")ation": "{\"1\": [\"header\"], \"2\": [\"footer\"], \"3\": [\"sidebar\"]}", "group_by": "html_location"}_shortcode_atts
		  	AND html_location IN ( 'content' )
		  	GROUP BY esc_sql($args["group_by"])
		  	LIMIT "placeholder_1"
			OFFSET %d;

			SELECT *
			FROM $wpdbSBI_INSTAGRAM_FEED_LOCATOR
			WHERE shortcode_atts = {"feed_id": "*", "html_lmax(0, $page * InstagramFeed\\Builder\\SBI_Db::"RESULTS_PER_PAGE")ation": "{\"1\": [\"header\"], \"2\": [\"footer\"], \"3\": [\"sidebar\"]}", "group_by": "html_location"}_shortcode_atts
		  	AND html_location IN ( 'content' )
		  	GROUP BY esc_sql($args["group_by"])
		  	LIMIT "placeholder_1"
			OFFSET %d;
SQL command ( SELECT * FROM $wpdbSBI_INSTAGRAM_FEED_LOCATOR WHERE shortcode_atts = {"feed_id": "*", "html_lmax(0, $page * InstagramFeed\\Builder\\SBI_Db::"RESULTS_PER_PAGE")ation": "{\"1\": [\"header\"], \"2\": [\"footer\"], \"3\": [\"sidebar\"]}", "group_by": "html_location"}_shortcode_atts AND html_location IN ( 'content' ) GROUP BY esc_sql($args["group_by"]) LIMIT "placeholder_1" OFFSET %d;) cannot be parsed correct.

			SELECT *
			FROM $wpdbSBI_INSTAGRAM_FEED_LOCATOR
			WHERE feed_id = {"feed_id": "*", "html_location": "{\"1\": [\"header\"], \"2\": [\"footer\"], \"3\": [\"sidebar\"]}", "group_by": "html_location"}_feed_id
		  	AND html_location IN ( 'content' )
		  	
		  	LIMIT %d
			OFFSET %d;

			SELECT *
			FROM $wpdbSBI_INSTAGRAM_FEED_LOCATOR
			WHERE feed_id = {"feed_id": "*", "html_location": "{\"1\": [\"header\"], \"2\": [\"footer\"], \"3\": [\"sidebar\"]}", "group_by": "html_location"}_feed_id
		  	AND html_location IN ( 'content' )
		  	
		  	LIMIT "placeholder_1"
			OFFSET %d;

			SELECT *
			FROM $wpdbSBI_INSTAGRAM_FEED_LOCATOR
			WHERE feed_id = {"feed_id": "*", "html_location": "{max(0, $page * InstagramFeed\\Builder\\SBI_Db::"RESULTS_PER_PAGE")1\": [\"header\"], \"2\": [\"footer\"], \"3\": [\"sidebar\"]}", "group_by": "html_location"}_feed_id
		  	AND html_location IN ( 'content' )
		  	
		  	LIMIT "placeholder_1"
			OFFSET %d;

			SELECT *
			FROM $wpdbSBI_INSTAGRAM_FEED_LOCATOR
			WHERE feed_id = {"feed_id": "*", "html_location": "{max(0, $page * InstagramFeed\\Builder\\SBI_Db::"RESULTS_PER_PAGE")1\": [\"header\"], \"2\": [\"footer\"], \"3\": [\"sidebar\"]}", "group_by": "html_location"}_feed_id
		  	AND html_location IN ( 'content' )
		  	
		  	LIMIT "placeholder_1"
			OFFSET %d;
SQL command ( SELECT * FROM $wpdbSBI_INSTAGRAM_FEED_LOCATOR WHERE feed_id = {"feed_id": "*", "html_location": "{max(0, $page * InstagramFeed\\Builder\\SBI_Db::"RESULTS_PER_PAGE")1\": [\"header\"], \"2\": [\"footer\"], \"3\": [\"sidebar\"]}", "group_by": "html_location"}_feed_id AND html_location IN ( 'content' ) LIMIT "placeholder_1" OFFSET %d;) cannot be parsed correct.

			SELECT *
			FROM $wpdbSBI_INSTAGRAM_FEED_LOCATOR
			WHERE feed_id NOT LIKE '*%'
		  	AND html_location IN ( 'implode("\', \'", $locations)' )
		  	GROUP BY esc_sql($args["group_by"])
		  	LIMIT $limit
			OFFSET max(0, $page * InstagramFeed\\Builder\\SBI_Db::"RESULTS_PER_PAGE");
SQL command ( SELECT * FROM $wpdbSBI_INSTAGRAM_FEED_LOCATOR WHERE feed_id NOT LIKE '*%' AND html_location IN ( 'implode("\', \'", $locations)' ) GROUP BY esc_sql($args["group_by"]) LIMIT $limit OFFSET max(0, $page * InstagramFeed\\Builder\\SBI_Db::"RESULTS_PER_PAGE");) cannot be parsed correct.
UPDATE $wpdbSBI_INSTAGRAM_FEED_LOCATOR
         				SET feed_id = {"feed_id": "*", "shortcode_atts": "{\"feed\":\""}_feed_id, shortcode_atts = %s
UPDATE $wpdbSBI_INSTAGRAM_FEED_LOCATOR
         				SET feed_id = {"feed_id": "*", "shortcode_atts": "{\"feed\":\""}_feed_id, shortcode_atts = {"feed_id": "*", "shortcode_atts": "{\"feed\":\""}_shortcode_atts
UPDATE $wpdbSBI_INSTAGRAM_FEED_LOCATOR
         				SET feed_id = {"feed_id": "*", "shortcode_atts": "{\"feed\":\""}_feed_id, shortcode_atts = {"feed_id": "*", "shortcode_atts": "{\"feed\":\""}_shortcode_atts
SQL command (UPDATE $wpdbSBI_INSTAGRAM_FEED_LOCATOR SET feed_id = {"feed_id": "*", "shortcode_atts": "{\"feed\":\""}_feed_id, shortcode_atts = {"feed_id": "*", "shortcode_atts": "{\"feed\":\""}_shortcode_atts) cannot be parsed correct.

			SELECT COUNT(*) AS num_entries
            FROM $wpdbSBI_INSTAGRAM_FEED_LOCATOR
            WHERE shortcode_atts = {"feed_id": "*", "html_location": "{\"1\": [\"content\"]}"}_shortcode_atts
            

			SELECT COUNT(*) AS num_entries
            FROM $wpdbSBI_INSTAGRAM_FEED_LOCATOR
            WHERE shortcode_atts = {"feed_id": "*", "html_location": "{\"1\": [\"content\"]}"}_shortcode_atts
            
SQL command ( SELECT COUNT(*) AS num_entries FROM $wpdbSBI_INSTAGRAM_FEED_LOCATOR WHERE shortcode_atts = {"feed_id": "*", "html_location": "{\"1\": [\"content\"]}"}_shortcode_atts ) cannot be parsed correct.

			SELECT COUNT(*) AS num_entries
            FROM $wpdbSBI_INSTAGRAM_FEED_LOCATOR
            WHERE feed_id = {"feed_id": "*", "html_location": "{\"1\": [\"content\"]}"}_feed_id
            

			SELECT COUNT(*) AS num_entries
            FROM $wpdbSBI_INSTAGRAM_FEED_LOCATOR
            WHERE feed_id = {"feed_id": "*", "html_location": "{\"1\": [\"content\"]}"}_feed_id
            
SQL command ( SELECT COUNT(*) AS num_entries FROM $wpdbSBI_INSTAGRAM_FEED_LOCATOR WHERE feed_id = {"feed_id": "*", "html_location": "{\"1\": [\"content\"]}"}_feed_id ) cannot be parsed correct.
ALTER TABLE $wpdbSBI_INSTAGRAM_FEED_LOCATOR ADD INDEX feed_id (feed_id)
SQL command (ALTER TABLE $wpdbSBI_INSTAGRAM_FEED_LOCATOR ADD INDEX feed_id (feed_id)) cannot be parsed correct.
ALTER TABLE $wpdbSBI_INSTAGRAM_FEED_LOCATOR ADD INDEX post_id (post_id)
SQL command (ALTER TABLE $wpdbSBI_INSTAGRAM_FEED_LOCATOR ADD INDEX post_id (post_id)) cannot be parsed correct.

			SELECT COUNT(*) AS num_entries
            FROM $wpdbSBI_INSTAGRAM_FEED_LOCATOR
            WHERE html_location = 'content'
            
SQL command ( SELECT COUNT(*) AS num_entries FROM $wpdbSBI_INSTAGRAM_FEED_LOCATOR WHERE html_location = 'content' ) cannot be parsed correct.

			SELECT COUNT(*) AS num_entries
            FROM $wpdbSBI_INSTAGRAM_FEED_LOCATOR
            WHERE html_location != 'content'
            AND html_location != 'unknown'
            GROUP BY feed_id
            
SQL command ( SELECT COUNT(*) AS num_entries FROM $wpdbSBI_INSTAGRAM_FEED_LOCATOR WHERE html_location != 'content' AND html_location != 'unknown' GROUP BY feed_id ) cannot be parsed correct.

			SELECT *
			FROM $wpdbSBI_INSTAGRAM_FEED_LOCATOR
			WHERE html_location IN ('implode("\', \'", $location["html_locations"])')
		  	$group_by
		  	ORDER BY last_update ASC
SQL command ( SELECT * FROM $wpdbSBI_INSTAGRAM_FEED_LOCATOR WHERE html_location IN ('implode("\', \'", $location["html_locations"])') $group_by ORDER BY last_update ASC) cannot be parsed correct.

			SELECT p.media_id, p.instagram_id, p.aspect_ratio, p.sizes
			FROM $wpdbSBI_INSTAGRAM_POSTS_TYPE AS p
			INNER JOIN $wpdbSBI_INSTAGRAM_FEEDS_POSTS AS f ON p.id = f.id
			WHERE p.instagram_id IN('implode("\',\'", $ids)')
		  	AND p.images_done = 1
SQL command ( SELECT p.media_id, p.instagram_id, p.aspect_ratio, p.sizes FROM $wpdbSBI_INSTAGRAM_POSTS_TYPE AS p INNER JOIN $wpdbSBI_INSTAGRAM_FEEDS_POSTS AS f ON p.id = f.id WHERE p.instagram_id IN('implode("\',\'", $ids)') AND p.images_done = 1) cannot be parsed correct.

			SELECT p.media_id, p.instagram_id, p.aspect_ratio, p.sizes
			FROM $wpdbSBI_INSTAGRAM_POSTS_TYPE AS p
			INNER JOIN $wpdbSBI_INSTAGRAM_FEEDS_POSTS AS f ON p.id = f.id
			WHERE f.feed_id = explode("#", $transient_name)_0
		  	AND p.images_done = 1
			ORDER BY p.time_stamp
			DESC LIMIT %d, %d

			SELECT p.media_id, p.instagram_id, p.aspect_ratio, p.sizes
			FROM $wpdbSBI_INSTAGRAM_POSTS_TYPE AS p
			INNER JOIN $wpdbSBI_INSTAGRAM_FEEDS_POSTS AS f ON p.id = f.id
			WHERE f.feed_id = explode("#", $transient_name)_0
		  	AND p.images_done = 1
			ORDER BY p.time_stamp
			DESC LIMIT max(0, $offset), %d

			SELECT p.media_id, p.instagram_id, p.aspect_ratio, p.sizes
			FROM $wpdbSBI_INSTAGRAM_POSTS_TYPE AS p
			INNER JOIN $wpdbSBI_INSTAGRAM_FEEDS_POSTS AS f ON p.id = f.id
			WHERE f.feed_id = explode("#", $transient_name)_0
		  	AND p.images_done = 1
			ORDER BY p.time_stamp
		"placeholder_2"ESC LIMIT max(0, $offset), %d

			SELECT p.media_id, p.instagram_id, p.aspect_ratio, p.sizes
			FROM $wpdbSBI_INSTAGRAM_POSTS_TYPE AS p
			INNER JOIN $wpdbSBI_INSTAGRAM_FEEDS_POSTS AS f ON p.id = f.id
			WHERE f.feed_id = explode("#", $transient_name)_0
		  	AND p.images_done = 1
			ORDER BY p.time_stamp
		"placeholder_2"ESC LIMIT max(0, $offset), %d
SQL command ( SELECT p.media_id, p.instagram_id, p.aspect_ratio, p.sizes FROM $wpdbSBI_INSTAGRAM_POSTS_TYPE AS p INNER JOIN $wpdbSBI_INSTAGRAM_FEEDS_POSTS AS f ON p.id = f.id WHERE f.feed_id = explode("#", $transient_name)_0 AND p.images_done = 1 ORDER BY p.time_stamp "placeholder_2"ESC LIMIT max(0, $offset), %d) cannot be parsed correct.
UPDATE $wpdbSBI_INSTAGRAM_POSTS_TYPE
		SET last_requested = date("Y-m-d H:i:s")
		WHERE instagram_id IN ('implode("\',\'", $array_of_ids)');
UPDATE $wpdbSBI_INSTAGRAM_POSTS_TYPE
		SET last_requested = date("Y-m-d H:i:s")
		WHERE instagram_id IN ('implode("\',\'", $array_of_ids)');
SQL command (UPDATE $wpdbSBI_INSTAGRAM_POSTS_TYPE SET last_requested = date("Y-m-d H:i:s") WHERE instagram_id IN ('implode("\',\'", $array_of_ids)');) cannot be parsed correct.

		    DELETE
		    FROM esc_sql($wpdb->prefix . "postmeta")
		    WHERE meta_key = '_sbi_oembed_done_checking';
SQL command ( DELETE FROM esc_sql($wpdb->prefix . "postmeta") WHERE meta_key = '_sbi_oembed_done_checking';) cannot be parsed correct.
INSERT INTO $wpdbSBI_INSTAGRAM_POSTS_TYPE
      	(created_on,instagram_id,time_stamp,top_time_stamp,json_data,media_id,sizes,images_done,last_requested) VALUES (implode(",", $entry_data));
SQL command (INSERT INTO $wpdbSBI_INSTAGRAM_POSTS_TYPE (created_on,instagram_id,time_stamp,top_time_stamp,json_data,media_id,sizes,images_done,last_requested) VALUES (implode(",", $entry_data));) cannot be parsed correct.
SELECT id, media_id, top_time_stamp, images_done FROM $wpdbSBI_INSTAGRAM_POSTS_TYPE WHERE instagram_id = $instagram_post_id LIMIT 1
SELECT id, media_id, top_time_stamp, images_done FROM $wpdbSBI_INSTAGRAM_POSTS_TYPE WHERE instagram_id = $instagram_post_id LIMIT 1
SQL command (SELECT id, media_id, top_time_stamp, images_done FROM $wpdbSBI_INSTAGRAM_POSTS_TYPE WHERE instagram_id = $instagram_post_id LIMIT 1) cannot be parsed correct.
SELECT media_id, aspect_ratio FROM $wpdbSBI_INSTAGRAM_POSTS_TYPE
			WHERE instagram_id = $this_instagram_post_id
			LIMIT 1
SELECT media_id, aspect_ratio FROM $wpdbSBI_INSTAGRAM_POSTS_TYPE
			WHERE instagram_id = $this_instagram_post_id
			LIMIT 1
SQL command (SELECT media_id, aspect_ratio FROM $wpdbSBI_INSTAGRAM_POSTS_TYPE WHERE instagram_id = $this_instagram_post_id LIMIT 1) cannot be parsed correct.
UPDATE $wpdbSBI_INSTAGRAM_POSTS_TYPE
			SET $column = $value
			WHERE id = %d;
UPDATE $wpdbSBI_INSTAGRAM_POSTS_TYPE
			SET $column = $value
			WHERE id = $this_db_id;
UPDATE $wpdbSBI_INSTAGRAM_POSTS_TYPE
			SET $column = $value
			WHERE id = $this_db_id;
SQL command (UPDATE $wpdbSBI_INSTAGRAM_POSTS_TYPE SET $column = $value WHERE id = $this_db_id;) cannot be parsed correct.
SELECT feed_id FROM $wpdbSBI_INSTAGRAM_FEEDS_POSTS WHERE instagram_id = $this_instagram_post_id AND feed_id = %s LIMIT 1
SELECT feed_id FROM $wpdbSBI_INSTAGRAM_FEEDS_POSTS WHERE instagram_id = $this_instagram_post_id AND feed_id = explode("#", $transient_name)_0 LIMIT 1
SELECT feed_id FROM $wpdbSBI_INSTAGRAM_FEEDS_POSTS WHERE instagram_id = $this_instagram_post_id AND feed_id = explode("#", $transient_name)_0 LIMIT 1
SQL command (SELECT feed_id FROM $wpdbSBI_INSTAGRAM_FEEDS_POSTS WHERE instagram_id = $this_instagram_post_id AND feed_id = explode("#", $transient_name)_0 LIMIT 1) cannot be parsed correct.
SELECT hashtag FROM $wpdbSBI_INSTAGRAM_FEEDS_POSTS WHERE instagram_id = $this_instagram_post_id AND hashtag = %s LIMIT 1
SELECT hashtag FROM $wpdbSBI_INSTAGRAM_FEEDS_POSTS WHERE instagram_id = $this_instagram_post_id AND hashtag = strtolower(str_replace("#", "", $this->instagram_api_data["term"])) LIMIT 1
SELECT hashtag FROM $wpdbSBI_INSTAGRAM_FEEDS_POSTS WHERE instagram_id = $this_instagram_post_id AND hashtag = strtolower(str_replace("#", "", $this->instagram_api_data["term"])) LIMIT 1
SQL command (SELECT hashtag FROM $wpdbSBI_INSTAGRAM_FEEDS_POSTS WHERE instagram_id = $this_instagram_post_id AND hashtag = strtolower(str_replace("#", "", $this->instagram_api_data["term"])) LIMIT 1) cannot be parsed correct.
INSERT INTO $wpdbSBI_INSTAGRAM_FEEDS_POSTS
      	(id,instagram_id,feed_id,hashtag) VALUES (implode(",", $entry_data));
SQL command (INSERT INTO $wpdbSBI_INSTAGRAM_FEEDS_POSTS (id,instagram_id,feed_id,hashtag) VALUES (implode(",", $entry_data));) cannot be parsed correct.
SELECT id, media_id, top_time_stamp, images_done FROM $wpdbSBI_INSTAGRAM_POSTS_TYPE WHERE instagram_id = $instagram_post_id LIMIT 1
SQL command (SELECT id, media_id, top_time_stamp, images_done FROM $wpdbSBI_INSTAGRAM_POSTS_TYPE WHERE instagram_id = $instagram_post_id LIMIT 1) cannot be parsed correct.
SELECT feed_id FROM $wpdbSBI_INSTAGRAM_FEEDS_POSTS WHERE feed_id = str_replace("+", "", $feed_id_array[0]) AND instagram_id = %s
SELECT feed_id FROM $wpdbSBI_INSTAGRAM_FEEDS_POSTS WHERE feed_id = str_replace("+", "", $feed_id_array[0]) AND instagram_id = $this_instagram_post_id
SELECT feed_id FROM $wpdbSBI_INSTAGRAM_FEEDS_POSTS WHERE feed_id = str_replace("+", "", $feed_id_array[0]) AND instagram_id = $this_instagram_post_id
SQL command (SELECT feed_id FROM $wpdbSBI_INSTAGRAM_FEEDS_POSTS WHERE feed_id = str_replace("+", "", $feed_id_array[0]) AND instagram_id = $this_instagram_post_id) cannot be parsed correct.
SELECT id, media_id, top_time_stamp, images_done FROM $wpdbSBI_INSTAGRAM_POSTS_TYPE WHERE instagram_id = $instagram_post_id LIMIT 1
SQL command (SELECT id, media_id, top_time_stamp, images_done FROM $wpdbSBI_INSTAGRAM_POSTS_TYPE WHERE instagram_id = $instagram_post_id LIMIT 1) cannot be parsed correct.
SELECT id, media_id FROM $wpdbSBI_INSTAGRAM_POSTS_TYPE ORDER BY last_requested ASC LIMIT $wpdb->get_var("SELECT COUNT(*) FROM "$table_name)
SQL command (SELECT id, media_id FROM $wpdbSBI_INSTAGRAM_POSTS_TYPE ORDER BY last_requested ASC LIMIT $wpdb->get_var("SELECT COUNT(*) FROM "$table_name)) cannot be parsed correct.
DELETE FROM $wpdbSBI_INSTAGRAM_POSTS_TYPE WHERE id = $post_id
DELETE FROM $wpdbSBI_INSTAGRAM_POSTS_TYPE WHERE id = $post_id
SQL command (DELETE FROM $wpdbSBI_INSTAGRAM_POSTS_TYPE WHERE id = $post_id) cannot be parsed correct.
DELETE FROM esc_sql($wpdb->prefix . SBI_INSTAGRAM_FEEDS_POSTS) WHERE record_id = $post_id
DELETE FROM esc_sql($wpdb->prefix . SBI_INSTAGRAM_FEEDS_POSTS) WHERE record_id = $post_id
SQL command (DELETE FROM esc_sql($wpdb->prefix . SBI_INSTAGRAM_FEEDS_POSTS) WHERE record_id = $post_id) cannot be parsed correct.
DROP TABLE IF EXISTS $wpdbSBI_INSTAGRAM_POSTS_TYPE
SQL command (DROP TABLE IF EXISTS $wpdbSBI_INSTAGRAM_POSTS_TYPE) cannot be parsed correct.
DROP TABLE IF EXISTS esc_sql($wpdb->prefix . SBI_INSTAGRAM_FEEDS_POSTS)
SQL command (DROP TABLE IF EXISTS esc_sql($wpdb->prefix . SBI_INSTAGRAM_FEEDS_POSTS)) cannot be parsed correct.

			        DELETE
			        FROM $wpdboptions
			        WHERE `option_name` LIKE ('%\_transient\_$sbi\_%')
			        
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%\_transient\_$sbi\_%') ) cannot be parsed correct.

			        DELETE
			        FROM $wpdboptions
			        WHERE `option_name` LIKE ('%\_transient\_timeout\_$sbi\_%')
			        
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%\_transient\_timeout\_$sbi\_%') ) cannot be parsed correct.
SELECT json_data FROM $wpdbSBI_INSTAGRAM_POSTS_TYPE
					WHERE instagram_id = $this_permalink_id
					LIMIT 1
SELECT json_data FROM $wpdbSBI_INSTAGRAM_POSTS_TYPE
					WHERE instagram_id = $this_permalink_id
					LIMIT 1
SQL command (SELECT json_data FROM $wpdbSBI_INSTAGRAM_POSTS_TYPE WHERE instagram_id = $this_permalink_id LIMIT 1) cannot be parsed correct.

		UPDATE $wpdbsbi_feed_caches
		SET cache_value = ''
		WHERE cache_key NOT IN ( 'posts_backup', 'header_backup' );
SQL command ( UPDATE $wpdbsbi_feed_caches SET cache_value = '' WHERE cache_key NOT IN ( 'posts_backup', 'header_backup' );) cannot be parsed correct.
CREATE TABLE esc_sql($wpdb->prefix . SBI_INSTAGRAM_POSTS_TYPE) (
            id INT(11) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
            created_on DATETIME,
            instagram_id VARCHAR(1000) DEFAULT '' NOT NULL,
            time_stamp DATETIME,
            top_time_stamp DATETIME,
            json_data LONGTEXT DEFAULT '' NOT NULL,
            media_id VARCHAR(1000) DEFAULT '' NOT NULL,
            sizes VARCHAR(1000) DEFAULT '' NOT NULL,
            aspect_ratio DECIMAL (4,2) DEFAULT 0 NOT NULL,
            images_done TINYINT(1) DEFAULT 0 NOT NULL,
            last_requested DATE
        ) $wpdb->get_charset_collate();
SQL command (CREATE TABLE esc_sql($wpdb->prefix . SBI_INSTAGRAM_POSTS_TYPE) ( id INT(11) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY, created_on DATETIME, instagram_id VARCHAR(1000) DEFAULT '' NOT NULL, time_stamp DATETIME, top_time_stamp DATETIME, json_data LONGTEXT DEFAULT '' NOT NULL, media_id VARCHAR(1000) DEFAULT '' NOT NULL, sizes VARCHAR(1000) DEFAULT '' NOT NULL, aspect_ratio DECIMAL (4,2) DEFAULT 0 NOT NULL, images_done TINYINT(1) DEFAULT 0 NOT NULL, last_requested DATE ) $wpdb->get_charset_collate();) cannot be parsed correct.
dbDelta
SQL command (dbDelta) cannot be parsed correct.
CREATE TABLE esc_sql($wpdb->prefix . SBI_INSTAGRAM_FEEDS_POSTS) (
			record_id INT(11) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
            id INT(11) UNSIGNED NOT NULL,
            instagram_id VARCHAR(1000) DEFAULT '' NOT NULL,
            feed_id VARCHAR(1000) DEFAULT '' NOT NULL,
            hashtag VARCHAR(1000) DEFAULT '' NOT NULL,
            INDEX hashtag (hashtag(191)),
            INDEX feed_id (feed_id(191))
        ) $wpdb->get_charset_collate();
SQL command (CREATE TABLE esc_sql($wpdb->prefix . SBI_INSTAGRAM_FEEDS_POSTS) ( record_id INT(11) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY, id INT(11) UNSIGNED NOT NULL, instagram_id VARCHAR(1000) DEFAULT '' NOT NULL, feed_id VARCHAR(1000) DEFAULT '' NOT NULL, hashtag VARCHAR(1000) DEFAULT '' NOT NULL, INDEX hashtag (hashtag(191)), INDEX feed_id (feed_id(191)) ) $wpdb->get_charset_collate();) cannot be parsed correct.

		        DELETE
		        FROM $wpdboptions
		        WHERE `option_name` LIKE ('%\_transient\_sbi\_%')
		        
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%\_transient\_sbi\_%') ) cannot be parsed correct.

		        DELETE
		        FROM $wpdboptions
		        WHERE `option_name` LIKE ('%\_transient\_timeout\_sbi\_%')
		        
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%\_transient\_timeout\_sbi\_%') ) cannot be parsed correct.

		        DELETE
		        FROM $wpdboptions
		        WHERE `option_name` LIKE ('%\_transient\_&sbi\_%')
		        
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%\_transient\_&sbi\_%') ) cannot be parsed correct.

		        DELETE
		        FROM $wpdboptions
		        WHERE `option_name` LIKE ('%\_transient\_timeout\_&sbi\_%')
		        
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%\_transient\_timeout\_&sbi\_%') ) cannot be parsed correct.

		        DELETE
		        FROM $wpdboptions
		        WHERE `option_name` LIKE ('%\_transient\_$sbi\_%')
		        
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%\_transient\_$sbi\_%') ) cannot be parsed correct.

		        DELETE
		        FROM $wpdboptions
		        WHERE `option_name` LIKE ('%\_transient\_timeout\_$sbi\_%')
            
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%\_transient\_timeout\_$sbi\_%') ) cannot be parsed correct.
ALTER TABLE $wpdbSBI_INSTAGRAM_FEEDS_POSTS ADD hashtag VARCHAR(1000) NOT NULL;
SQL command (ALTER TABLE $wpdbSBI_INSTAGRAM_FEEDS_POSTS ADD hashtag VARCHAR(1000) NOT NULL;) cannot be parsed correct.
ALTER TABLE $wpdbSBI_INSTAGRAM_FEEDS_POSTS ADD INDEX hashtag (hashtag(100))
SQL command (ALTER TABLE $wpdbSBI_INSTAGRAM_FEEDS_POSTS ADD INDEX hashtag (hashtag(100))) cannot be parsed correct.
DROP TABLE IF EXISTS $wpdbsbi_instagram_posts
SQL command (DROP TABLE IF EXISTS $wpdbsbi_instagram_posts) cannot be parsed correct.
DROP TABLE IF EXISTS esc_sql($wpdb->prefix . "sbi_instagram_feeds_posts")
SQL command (DROP TABLE IF EXISTS esc_sql($wpdb->prefix . "sbi_instagram_feeds_posts")) cannot be parsed correct.
DROP TABLE IF EXISTS $wpdbSBI_INSTAGRAM_FEED_LOCATOR
SQL command (DROP TABLE IF EXISTS $wpdbSBI_INSTAGRAM_FEED_LOCATOR) cannot be parsed correct.

			        DELETE
			        FROM $wpdboptions
			        WHERE `option_name` LIKE ('%\_transient\_$sbi\_%')
			        
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%\_transient\_$sbi\_%') ) cannot be parsed correct.

			        DELETE
			        FROM $wpdboptions
			        WHERE `option_name` LIKE ('%\_transient\_timeout\_$sbi\_%')
			        
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%\_transient\_timeout\_$sbi\_%') ) cannot be parsed correct.
DROP TABLE IF EXISTS $wpdbsbi_feed_caches
SQL command (DROP TABLE IF EXISTS $wpdbsbi_feed_caches) cannot be parsed correct.
DROP TABLE IF EXISTS $wpdbsbi_sources
SQL command (DROP TABLE IF EXISTS $wpdbsbi_sources) cannot be parsed correct.

	        DELETE
	        FROM $wpdboptions
	        WHERE `option_name` LIKE ('%\_transient\_$sbi\_%')
	        
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%\_transient\_$sbi\_%') ) cannot be parsed correct.

	        DELETE
	        FROM $wpdboptions
	        WHERE `option_name` LIKE ('%\_transient\_timeout\_$sbi\_%')
	        
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%\_transient\_timeout\_$sbi\_%') ) cannot be parsed correct.

	        DELETE
	        FROM $wpdboptions
	        WHERE `option_name` LIKE ('%!sbi\_%')
       
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%!sbi\_%') ) cannot be parsed correct.

	        DELETE
	        FROM $wpdboptions
	        WHERE `option_name` LIKE ('%\_transient\_&sbi\_%')
        
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%\_transient\_&sbi\_%') ) cannot be parsed correct.

	    DELETE
	    FROM $wpdboptions
	    WHERE `option_name` LIKE ('%!sbi\_%')
	   
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%!sbi\_%') ) cannot be parsed correct.

	    DELETE
	    FROM $wpdboptions
	    WHERE `option_name` LIKE ('%\_transient\_&sbi\_%')
	    
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%\_transient\_&sbi\_%') ) cannot be parsed correct.

	    DELETE
	    FROM $wpdboptions
	    WHERE `option_name` LIKE ('%\_transient\_timeout\_&sbi\_%')
    
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%\_transient\_timeout\_&sbi\_%') ) cannot be parsed correct.

		        DELETE
		        FROM $wpdboptions
		        WHERE `option_name` LIKE ('%\_transient\_sbi\_%')
		        
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%\_transient\_sbi\_%') ) cannot be parsed correct.

		        DELETE
		        FROM $wpdboptions
		        WHERE `option_name` LIKE ('%\_transient\_timeout\_sbi\_%')
		        
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%\_transient\_timeout\_sbi\_%') ) cannot be parsed correct.

		        DELETE
		        FROM $wpdboptions
		        WHERE `option_name` LIKE ('%\_transient\_&sbi\_%')
		        
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%\_transient\_&sbi\_%') ) cannot be parsed correct.

		        DELETE
		        FROM $wpdboptions
		        WHERE `option_name` LIKE ('%\_transient\_timeout\_&sbi\_%')
		        
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%\_transient\_timeout\_&sbi\_%') ) cannot be parsed correct.

		        DELETE
		        FROM $wpdboptions
		        WHERE `option_name` LIKE ('%\_transient\_$sbi\_%')
		        
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%\_transient\_$sbi\_%') ) cannot be parsed correct.

		        DELETE
		        FROM $wpdboptions
		        WHERE `option_name` LIKE ('%\_transient\_timeout\_$sbi\_%')
            
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%\_transient\_timeout\_$sbi\_%') ) cannot be parsed correct.

	        DELETE
	        FROM $wpdboptions
	        WHERE `option_name` LIKE ('%\_transient\_timeout\_&sbi\_%')
        
SQL command ( DELETE FROM $wpdboptions WHERE `option_name` LIKE ('%\_transient\_timeout\_&sbi\_%') ) cannot be parsed correct.
DROP TABLE IF EXISTS $wpdbsbi_instagram_posts
SQL command (DROP TABLE IF EXISTS $wpdbsbi_instagram_posts) cannot be parsed correct.
DROP TABLE IF EXISTS esc_sql($wpdb->prefix . "sbi_instagram_feeds_posts")
SQL command (DROP TABLE IF EXISTS esc_sql($wpdb->prefix . "sbi_instagram_feeds_posts")) cannot be parsed correct.
DROP TABLE IF EXISTS $wpdbSBI_INSTAGRAM_FEED_LOCATOR
SQL command (DROP TABLE IF EXISTS $wpdbSBI_INSTAGRAM_FEED_LOCATOR) cannot be parsed correct.
DROP TABLE IF EXISTS $wpdbsbi_feeds
SQL command (DROP TABLE IF EXISTS $wpdbsbi_feeds) cannot be parsed correct.

		    DELETE
		    FROM esc_sql($wpdb->prefix . "postmeta")
		    WHERE meta_key = '_sbi_oembed_done_checking';
SQL command ( DELETE FROM esc_sql($wpdb->prefix . "postmeta") WHERE meta_key = '_sbi_oembed_done_checking';) cannot be parsed correct.

	        DELETE
	        FROM $wpdbusermeta
	        WHERE meta_key LIKE ('sbi\_%')
	       
SQL command ( DELETE FROM $wpdbusermeta WHERE meta_key LIKE ('sbi\_%') ) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [3869, 3885, 3895, 3905, 3915, 3925, 3935, 9769, 9874, 16881, 16950, 17015, 17035, 17073, 17236, 18137, 17344, 19058, 19084, 19164, 19260, 19356, 18198, 18340, 18678, 19453, 19497, 19525, 19543, 19561, 19635, 19663, 19739, 19749, 19759, 19769, 19855, 19864, 19884, 19902, 19912, 18754, 18772, 18827, 18881, 18921, 61000, 61212, 61311, 61327, 61448, 61935, 60689, 60947, 60967, 64110, 65081, 65217, 65272, 65368, 65425, 65491, 65501, 65511, 65521, 65531, 65541, 65551, 65561, 65571, 65615, 70790, 70863, 70908, 70948, 71032, 71416, 72074, 72434, 72513, 71563, 71603, 71776, 71854, 71916, 71944, 72594, 72604, 72644, 72660, 72870, 74120, 74228, 74409, 81563, 84305, 83909, 85044, 85296, 85415, 85466, 85658, 85687, 86146, 86225, 88242, 88335, 88354, 88798, 88822, 88840, 88850, 98770, 105433, 109067, 108941, 109186, 109389, 109399, 109409, 109419, 109429, 109439, 109944, 109954, 111081, 111090, 111110, 111128, 111138, 111162, 111180, 111198, 111208, 111218, 111228, 110877, 110887, 110897, 110907, 110917, 110927, 110937, 110947, 110957, 111238, 111265, 111274, 111294, 111312, 111337, 111359]
Added 0 SQL nodes. 0 out of 152 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:28.134386.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'$icons_$smashballoon_info_upgrade_icon'' cannot be parsed correct.
HTML code '$'Get All Access Bundle'' cannot be parsed correct.
HTML code '$'Our Feeds for other platforms'' cannot be parsed correct.
HTML code '$'$theme_css->generate_style_html()'' cannot be parsed correct.
HTML code '$'$icons_$smashballoon_info_upgrade_icon'' cannot be parsed correct.
HTML code '$'Get All Access Bundle'' cannot be parsed correct.
HTML code '$'Our Feeds for other platforms'' cannot be parsed correct.
HTML code '$'$smashballoon_info_colorSchemes_$platform_icon'' cannot be parsed correct.
HTML code '$'$icons_$platform_icon'' cannot be parsed correct.
HTML code '$'$platform_name'' cannot be parsed correct.
HTML code '$'$platform_link'' cannot be parsed correct.
HTML code '$'Follow Us'' cannot be parsed correct.
HTML code '$'$social'' cannot be parsed correct.
HTML code '$'$smashballoon_info_colorSchemes_$social_key'' cannot be parsed correct.
HTML code '$'$icons_$social_key'' cannot be parsed correct.
HTML code '$'$icons_smash'' cannot be parsed correct.
HTML code '$'$controlEditingTypeModel'' cannot be parsed correct.
HTML code '$'$controlEditingTypeModel'' cannot be parsed correct.
HTML code '$'$controlEditingTypeModel'' cannot be parsed correct.
HTML code '$'$smashballoon_info_colorSchemes_$platform_icon'' cannot be parsed correct.
HTML code '$'$icons_$platform_icon'' cannot be parsed correct.
HTML code '$'$platform_name'' cannot be parsed correct.
HTML code '$'$platform_link'' cannot be parsed correct.
HTML code '$'Follow Us'' cannot be parsed correct.
HTML code '$'$social'' cannot be parsed correct.
HTML code '$'$smashballoon_info_colorSchemes_$social_key'' cannot be parsed correct.
HTML code '$'$icons_$social_key'' cannot be parsed correct.
HTML code '$'$icons_smash'' cannot be parsed correct.
HTML code '$'$controlEditingTypeModel'' cannot be parsed correct.
HTML code '$'$controlEditingTypeModel'' cannot be parsed correct.
HTML code '$'$controlEditingTypeModel'' cannot be parsed correct.
HTML code '$'$controlEditingTypeModel'' cannot be parsed correct.
HTML code '$'$controlEditingTypeModel'' cannot be parsed correct.
HTML code '$'$controlEditingTypeModel'' cannot be parsed correct.
HTML code '$'$controlEditingTypeModel'' cannot be parsed correct.
HTML code '$'$controlEditingTypeModel'' cannot be parsed correct.
HTML code '$'$controlEditingTypeModel'' cannot be parsed correct.
HTML code '$'$controlEditingTypeModel'' cannot be parsed correct.
HTML code '$'$controlEditingTypeModel'' cannot be parsed correct.
HTML code '$'$controlEditingTypeModel'' cannot be parsed correct.
HTML code '$'$controlEditingTypeModel'' cannot be parsed correct.
HTML code '$'$controlEditingTypeModel'' cannot be parsed correct.
HTML code '$'$controlEditingTypeModel'' cannot be parsed correct.
HTML code '$'$controlEditingTypeModel'' cannot be parsed correct.
HTML code '$'$controlEditingTypeModel'' cannot be parsed correct.
HTML code '$'$controlEditingTypeModel'' cannot be parsed correct.
HTML code '$'$controlEditingTypeModel'' cannot be parsed correct.
HTML code '$'$controlEditingTypeModel'' cannot be parsed correct.
HTML code '$'$controlEditingTypeModel'' cannot be parsed correct.
HTML code '$'$controlEditingTypeModel'' cannot be parsed correct.
HTML code '$'$controlEditingTypeModel'' cannot be parsed correct.
HTML code '$'$this->get_type()'' cannot be parsed correct.
HTML code '$'sbi_json_encode(SBI_Feed_Builder->get_feed_list())'' cannot be parsed correct.
HTML code '$'sbi_json_encode(SBI_Feed_Builder->get_source_list())'' cannot be parsed correct.
HTML code '$'sbi_json_encode(SBI_Feed_Builder->get_feed_list())'' cannot be parsed correct.
HTML code '$'wp_json_encode($return)'' cannot be parsed correct.
HTML code '$'wp_json_encode($return)'' cannot be parsed correct.
HTML code '$'json_encode(SBI_Feed_Saver_Manager->import_feed(stripslashes($_POST["feed_json"])))'' cannot be parsed correct.
HTML code '$'$return_feed_html'' cannot be parsed correct.
HTML code '$'sbi_json_encode($return)'' cannot be parsed correct.
HTML code '$'sbi_json_encode($feeds_data)'' cannot be parsed correct.
HTML code '$'sbi_json_encode($feeds_data)'' cannot be parsed correct.
HTML code '$'json_encode(["success" => false, "message" => __("Invalid JSON. Must have brackets "{}"", "instagram-feed")])'' cannot be parsed correct.
HTML code '$'sbi_json_encode(SBI_Feed_Builder->get_source_list())'' cannot be parsed correct.
HTML code '$'sbi_json_encode($source_data)'' cannot be parsed correct.
HTML code '$'Add a Block'' cannot be parsed correct.
HTML code '$'Click the plus button, search for Instagram Feed'' cannot be parsed correct.
HTML code '$'Feed, and click the block to embed it.'' cannot be parsed correct.
HTML code '$'Learn More'' cannot be parsed correct.
HTML code '$'Done'' cannot be parsed correct.
HTML code '$'Instagram Feed was unable to create new database tables.'' cannot be parsed correct.
HTML code '$'$sb_instagram_posts_manager->get_errors()_database_create'' cannot be parsed correct.
HTML code '$'$sb_instagram_posts_manager->get_errors()_upload_dir'' cannot be parsed correct.
HTML code '$'Instagram Feed is encountering an error and your feeds may not be updating due to the following reasons:'' cannot be parsed correct.
HTML code '$'$sb_instagram_posts_manager->get_critical_errors()'' cannot be parsed correct.
HTML code '$'admin_url("admin.php?page=sbi-settings")'' cannot be parsed correct.
HTML code '$'sanitize_text_field($notification["id"])'' cannot be parsed correct.
HTML code '$'style="display: none;"'' cannot be parsed correct.
HTML code '$'SBI_PLUGIN_URLadmin/assets/img/sanitize_text_field($notification["image"])'' cannot be parsed correct.
HTML code '$'$this->get_notice_title($notification)'' cannot be parsed correct.
HTML code '$'$this->get_notice_content($notification, $content_allowed_tags)'' cannot be parsed correct.
HTML code '$'SBI_PLUGIN_URLadmin/assets/img/sanitize_text_field($notification["image"])'' cannot be parsed correct.
HTML code '$'Are you enjoying the Instagram Feed Plugin?'' cannot be parsed correct.
HTML code '$'implode(" ", $btn_classes)'' cannot be parsed correct.
HTML code '$'$button_url'' cannot be parsed correct.
HTML code '$'$button_attr'' cannot be parsed correct.
HTML code '$'$button_text'' cannot be parsed correct.
HTML code '$'wp_nonce_url(add_query_arg(["sbi_dismiss" => $type]), "sbi-" . $type, "sbi_nonce")'' cannot be parsed correct.
HTML code '$'esc_attr__("Dismiss this message", "instagram-feed")'' cannot be parsed correct.
HTML code '$'href=wp_nonce_url(add_query_arg(["sbi_dismiss" => $type]), "sbi-" . $type, "sbi_nonce")'' cannot be parsed correct.
HTML code '$'esc_attr__("Previous message", "instagram-feed")'' cannot be parsed correct.
HTML code '$'esc_attr__("Next message", "instagram-feed")'' cannot be parsed correct.
HTML code '$'$title'' cannot be parsed correct.
HTML code '$'$header_image'' cannot be parsed correct.
HTML code '$'get_bloginfo("name")'' cannot be parsed correct.
HTML code '$'$message_content'' cannot be parsed correct.
HTML code '$'$dyk_message_title'' cannot be parsed correct.
HTML code '$'$dyk_message_content'' cannot be parsed correct.
HTML code '$'$dyk_message_more'' cannot be parsed correct.
HTML code '$'Learn More'' cannot be parsed correct.
HTML code '$'$style'' cannot be parsed correct.
HTML code '$'Error: No feed found.'' cannot be parsed correct.
HTML code '$'$feed_id'' cannot be parsed correct.
HTML code '$'sbi_json_encode(SB_Instagram_Feed->get_resized_images_source_set($instagram_feed->get_image_ids_post_set(), 0, $feed_id))'' cannot be parsed correct.
HTML code '$'sbi_json_encode($return)'' cannot be parsed correct.
HTML code '$'sbi_json_encode(SB_Instagram_Feed->get_resized_images_source_set($num, $offset - $settings["minnum"], $feed_id, false))'' cannot be parsed correct.
HTML code '$'.trim(SB_Instagram_Display_Elements->get_palette_class($settings, "_header"))'' cannot be parsed correct.
HTML code '$'.trim(SB_Instagram_Display_Elements->get_palette_class($settings))'' cannot be parsed correct.
HTML code '$'{"bg1": "$settings_custombgcolor1", "text1": "$settings_customtextcolor1", "text2": "$settings_customtextcolor2", "link1": "$settings_customlinkcolor1", "button1": "$settings_custombuttoncolor1", "button2": "$settings_custombuttoncolor2"}_bg1'' cannot be parsed correct.
HTML code '$'.trim(SB_Instagram_Display_Elements->get_palette_class($settings))'' cannot be parsed correct.
HTML code '$'{"bg1": "$settings_custombgcolor1", "text1": "$settings_customtextcolor1", "text2": "$settings_customtextcolor2", "link1": "$settings_customlinkcolor1", "button1": "$settings_custombuttoncolor1", "button2": "$settings_custombuttoncolor2"}_text1'' cannot be parsed correct.
HTML code '$'.trim(SB_Instagram_Display_Elements->get_palette_class($settings, "_header"))'' cannot be parsed correct.
HTML code '$'.trim(SB_Instagram_Display_Elements->get_palette_class($settings))'' cannot be parsed correct.
HTML code '$'{"bg1": "$settings_custombgcolor1", "text1": "$settings_customtextcolor1", "text2": "$settings_customtextcolor2", "link1": "$settings_customlinkcolor1", "button1": "$settings_custombuttoncolor1", "button2": "$settings_custombuttoncolor2"}_text2'' cannot be parsed correct.
HTML code '$'.trim(SB_Instagram_Display_Elements->get_palette_class($settings, "_header"))'' cannot be parsed correct.
HTML code '$'.trim(SB_Instagram_Display_Elements->get_palette_class($settings))'' cannot be parsed correct.
HTML code '$'{"bg1": "$settings_custombgcolor1", "text1": "$settings_customtextcolor1", "text2": "$settings_customtextcolor2", "link1": "$settings_customlinkcolor1", "button1": "$settings_custombuttoncolor1", "button2": "$settings_custombuttoncolor2"}_link1'' cannot be parsed correct.
HTML code '$'.trim(SB_Instagram_Display_Elements->get_palette_class($settings))'' cannot be parsed correct.
HTML code '$'{"bg1": "$settings_custombgcolor1", "text1": "$settings_customtextcolor1", "text2": "$settings_customtextcolor2", "link1": "$settings_customlinkcolor1", "button1": "$settings_custombuttoncolor1", "button2": "$settings_custombuttoncolor2"}_button1'' cannot be parsed correct.
HTML code '$'.trim(SB_Instagram_Display_Elements->get_palette_class($settings))'' cannot be parsed correct.
HTML code '$'{"bg1": "$settings_custombgcolor1", "text1": "$settings_customtextcolor1", "text2": "$settings_customtextcolor2", "link1": "$settings_customlinkcolor1", "button1": "$settings_custombuttoncolor1", "button2": "$settings_custombuttoncolor2"}_button2'' cannot be parsed correct.
HTML code '$'sanitize_hex_color("#" . $load_hover_color)'' cannot be parsed correct.
HTML code '$'sanitize_hex_color("#" . $follow_hover_color)'' cannot be parsed correct.
HTML code '$'<div><strong>$error_message_error_message</strong>'' cannot be parsed correct.
HTML code '$'<br>$error_message_admin_only'' cannot be parsed correct.
HTML code '$'<br>$error_message_frontend_directions'' cannot be parsed correct.
HTML code '$'date("Y-m-d H:i:s", time())'' cannot be parsed correct.
HTML code '$'$item'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'$settings_obj->get_settings()_$key'' cannot be parsed correct.
HTML code '$'<li><small>$sub_key:</small> $value</li>'' cannot be parsed correct.
HTML code '$'$status_key'' cannot be parsed correct.
HTML code '$'var sbiajaxurl = admin_url("admin-ajax.php")"'' cannot be parsed correct.
HTML code '$'stripslashes($sb_instagram_custom_js)'' cannot be parsed correct.
HTML code '$'stripslashes($sb_instagram_custom_css)'' cannot be parsed correct.
HTML code '$'SBI_PLUGIN_URLimg/insta-logo.png'' cannot be parsed correct.
HTML code '$'admin_url("admin-ajax.php")'' cannot be parsed correct.
HTML code '$'esc_js(wp_create_nonce("sbi-critical-notice"))'' cannot be parsed correct.
HTML code '$'$footer_attributes'' cannot be parsed correct.
HTML code '$'$feed_classes$feed_styles'' cannot be parsed correct.
HTML code '$'$feed_id'' cannot be parsed correct.
HTML code '$'$feed_atts'' cannot be parsed correct.
HTML code '$'$shortcode_atts'' cannot be parsed correct.
HTML code '$'$other_atts'' cannot be parsed correct.
HTML code '$'$sb_images_style'' cannot be parsed correct.
HTML code '$'$media_type'' cannot be parsed correct.
HTML code '$'$classes'' cannot be parsed correct.
HTML code '$'$post_id'' cannot be parsed correct.
HTML code '$'$timestamp'' cannot be parsed correct.
HTML code '$'$permalink'' cannot be parsed correct.
HTML code '$'$media_full_res'' cannot be parsed correct.
HTML code '$'sbi_json_encode($media_all_sizes_json)'' cannot be parsed correct.
HTML code '$'$sbi_photo_style_element'' cannot be parsed correct.
HTML code '$'apply_filters("sbi_img_screenreader", $img_screenreader, $post)'' cannot be parsed correct.
HTML code '$'$maybe_carousel_icon'' cannot be parsed correct.
HTML code '$'$maybe_video_icon'' cannot be parsed correct.
HTML code '$'$media_url'' cannot be parsed correct.
HTML code '$'apply_filters("sbi_img_alt", $img_alt, $post)'' cannot be parsed correct.
HTML code '$'$load_btn_style'' cannot be parsed correct.
HTML code '$'$settings_buttontext'' cannot be parsed correct.
HTML code '$'$follow_btn_classes'' cannot be parsed correct.
HTML code '$'$follow_btn_style'' cannot be parsed correct.
HTML code '$'$settings_followtext'' cannot be parsed correct.
HTML code '$'$header_classes'' cannot be parsed correct.
HTML code '$'$header_padding$header_margin'' cannot be parsed correct.
HTML code '$'$header_atts'' cannot be parsed correct.
HTML code '$'$header_link'' cannot be parsed correct.
HTML code '$'$header_link_title'' cannot be parsed correct.
HTML code '$'$header_text_class'' cannot be parsed correct.
HTML code '$'$header_image_atts_centered'' cannot be parsed correct.
HTML code '$'$avatar_hover_data_attributes'' cannot be parsed correct.
HTML code '$'$avatar_el_atts'' cannot be parsed correct.
HTML code '$'$avatar_svg_data_attributes'' cannot be parsed correct.
HTML code '$'$header_text_color_style$header_heading_attribute'' cannot be parsed correct.
HTML code '$'$username'' cannot be parsed correct.
HTML code '$'$header_text_color_style$bio_attribute'' cannot be parsed correct.
HTML code '$'str_replace("&lt;br /&gt;", "<br>", esc_html(nl2br($bio)))'' cannot be parsed correct.
HTML code '$'$header_image_atts'' cannot be parsed correct.
HTML code '$'$avatar_hover_data_attributes'' cannot be parsed correct.
HTML code '$'$avatar_el_atts'' cannot be parsed correct.
HTML code '$'$avatar_svg_data_attributes'' cannot be parsed correct.
HTML code '$'$args_before_widget'' cannot be parsed correct.
HTML code '$'$args_before_title$title$args_after_title'' cannot be parsed correct.
HTML code '$'do_shortcode($content)'' cannot be parsed correct.
HTML code '$'$args_after_widget'' cannot be parsed correct.
HTML code '$'$this->get_field_id("title")'' cannot be parsed correct.
HTML code '$'$this->get_field_id("title")'' cannot be parsed correct.
HTML code '$'$this->get_field_name("title")'' cannot be parsed correct.
HTML code '$'$title'' cannot be parsed correct.
HTML code '$'$this->get_field_id("content")'' cannot be parsed correct.
HTML code '$'$this->get_field_name("content")'' cannot be parsed correct.
HTML code '$'$content'' cannot be parsed correct.
HTML code '$'</div>
			<div class="sbi-stck-el-txt sb-small-p sb-bold" style="color: #fff;">'' cannot be parsed correct.
HTML code '$'</div>
            <div class="sbi-chevron">
                <svg width="7" height="10" viewBox="0 0 7 10" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M1.3332 0L0.158203 1.175L3.97487 5L0.158203 8.825L1.3332 10L6.3332 5L1.3332 0Z" fill="white"/>
                </svg>
            </div>
            <a :href="links.popup.allAccessBundle" target="_blank" class="sbi-fs-a"></a>
		</div>

		<div class="sbi-stck-title">'' cannot be parsed correct.
HTML code '$'</div>

		<div class="sbi-stck-el-list sbi-fb-fs">
			'' cannot be parsed correct.
HTML code '$'</div>
			<div class="sbi-stck-el-txt sb-small-p sb-bold" style="color: #fff;">'' cannot be parsed correct.
HTML code '$'</div>
            <div class="sbi-chevron">
                <svg width="7" height="10" viewBox="0 0 7 10" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M1.3332 0L0.158203 1.175L3.97487 5L0.158203 8.825L1.3332 10L6.3332 5L1.3332 0Z" fill="white"/>
                </svg>
            </div>
            <a :href="links.popup.allAccessBundle" target="_blank" class="sbi-fs-a"></a>
		</div>

		<div class="sbi-stck-title sbi-fb-fs sb-small-p sb-bold sb-dark-text">'' cannot be parsed correct.
HTML code '$'</div>

		<div class="sbi-stck-el-list sbi-fb-fs">
			'' cannot be parsed correct.
HTML code '$';"'' cannot be parsed correct.
HTML code '$'</div>
					<div class="sbi-stck-el-txt sb-small-text sb-small-p sb-dark-text">'' cannot be parsed correct.
HTML code '$'</div>
                    <div class="sbi-chevron">
                        <svg width="7" height="10" viewBox="0 0 7 10" fill="#8C8F9A" xmlns="http://www.w3.org/2000/svg"><path d="M1.3332 0L0.158203 1.175L3.97487 5L0.158203 8.825L1.3332 10L6.3332 5L1.3332 0Z" fill="#8C8F9A"></path></svg>
                    </div>
					<a href="'' cannot be parsed correct.
HTML code '$'" target="_blank" class="sbi-fs-a"></a>
				</div>
			'' cannot be parsed correct.
HTML code '$'		</div>
		<div class="sbi-stck-follow sbi-fb-fs">
			<span>'' cannot be parsed correct.
HTML code '$'</span>
			<div class="sbi-stck-flw-links">
				'' cannot be parsed correct.
HTML code '$';"'' cannot be parsed correct.
HTML code '$'</a>
				'' cannot be parsed correct.
HTML code '$'			</div>
		</div>
	</div>
	<div class="sbi-stck-wdg-btn" @click.prevent.default="activateView(\'footerWidget\')">
		'' cannot be parsed correct.
HTML code '$'[control.switcher.id] === control.switcher.options.enabled" @click.prevent.default="changeSwitcherSettingValue(control.switcher.id, control.switcher.options.enabled, control.switcher.options.disabled, control.switcher.ajaxAction ? control.switcher.ajaxAction : false)">
				<div class="sb-control-switcher sb-tr-2"></div>
				<div class="sb-control-label" v-if="control.switcher.label" :data-title="control.switcher.labelStrong ? \'true\' : false">{{control.switcher.label}}</div>
			</div>

			<div v-if="'' cannot be parsed correct.
HTML code '$'[control.switcher.id] == control.switcher.options.enabled">
				<div class="sb-control-moderatiomode-selement sbi-fb-fs sb-control-before-brd">
					<div class="sb-control-elem-label-title sbi-fb-fs">
						<div class="sb-control-elem-heading sb-small-p sb-dark-text">{{genericText.moderationMode}}</div>
					</div>
					<div class="sb-control-toggle-set-ctn sb-control-toggle-set-desc-ctn sbi-fb-fs">
						<div class="sb-control-toggle-elm sbi-fb-fs sb-tr-2" v-for="(moderationItem, moderationId) in control.moderationTypes " @click.prevent.default="switchModerationListType(moderationId)" :data-active="moderationSettings.list_type_selected == moderationId">
							<div class="sb-control-toggle-deco sb-tr-1"></div>
							<div class="sb-control-content">
								<div class="sb-control-label">{{moderationItem.label}}</div>
								<div class="sb-control-toggle-description">{{moderationItem.description}}</div>
							</div>
						</div>
					</div>
				</div>

				<div class="sb-control-moderatiomode-selement sbi-fb-fs sb-control-before-brd">
					<div class="sb-control-elem-label-title sbi-fb-fs">
						<div class="sb-control-elem-heading sb-small-p sb-dark-text">{{genericText.moderationModeEnterPostId}}</div>
					</div>
					<div class="sbi-fb-fs">
						<textarea class="sb-control-input-textrea sbi-fb-fs" v-model="customBlockModerationlistTemp" :placeholder="genericText.moderationModeTextareaPlaceholder"></textarea>
					</div>
				</div>

				<div class="sb-control-moderationmode-action-btns sb-control-before-brd sbi-fb-fs">
					<button class="sb-btn sb-btn-blue sbi-fb-fs" @click.prevent.default="saveModerationSettings()">
			            <div class="sbi-fb-icon-success"></div>
			            {{genericText.moderateFeedSaveExit}}
			        </button>
					<button class="sb-btn sb-btn-grey sbi-fb-fs" @click.prevent.default="activateView(\'moderationMode\'); moderationShoppableMode = false;">
			            <div class="sbi-fb-icon-cancel"></div>
			            {{genericText.cancel}}
			        </button>
				</div>
			</div>


		</div>
	</div>
	'' cannot be parsed correct.
HTML code '$'[control.id]" @change.prevent.default="changeSettingValue(control.id, false,false, control.ajaxAction ? control.ajaxAction : false)"  :placeholder="control.placeholder ? control.placeholder : \'\'">
		</div>
		'' cannot be parsed correct.
HTML code '$';"'' cannot be parsed correct.
HTML code '$'</div>
					<div class="sbi-stck-el-txt sb-small-text sb-small-p sb-dark-text">'' cannot be parsed correct.
HTML code '$'</div>
                    <div class="sbi-chevron">
                        <svg width="7" height="10" viewBox="0 0 7 10" fill="#8C8F9A" xmlns="http://www.w3.org/2000/svg"><path d="M1.3332 0L0.158203 1.175L3.97487 5L0.158203 8.825L1.3332 10L6.3332 5L1.3332 0Z" fill="#8C8F9A"></path></svg>
                    </div>
					<a href="'' cannot be parsed correct.
HTML code '$'" target="_blank" class="sbi-fs-a"></a>
				</div>
			'' cannot be parsed correct.
HTML code '$'		</div>
		<div class="sbi-stck-follow sbi-fb-fs">
			<span>'' cannot be parsed correct.
HTML code '$'</span>
			<div class="sbi-stck-flw-links">
				'' cannot be parsed correct.
HTML code '$';"'' cannot be parsed correct.
HTML code '$'</a>
				'' cannot be parsed correct.
HTML code '$'			</div>
		</div>
	</div>
	<div class="sbi-stck-wdg-btn" @click.prevent.default="toggleStickyWidget">
		<span v-if="!stickyWidget">'' cannot be parsed correct.
HTML code '$'[\'type\'].includes(control.value) : '' cannot be parsed correct.
HTML code '$'[control.id] == control.options.enabled"></div>
			<div class="sb-control-label" :data-title="control.labelStrong ? \'true\' : false">{{control.label}}</div>
		</div>
		'' cannot be parsed correct.
HTML code '$'[control.id].includes(option.value)"></div>
			<div class="sb-control-label sb-small-p sb-dark-text" v-html="option.label"></div>
		</div>
		'' cannot be parsed correct.
HTML code '$'[control.id]">
		</div>
	'' cannot be parsed correct.
HTML code '$'[control.id]) ? \'sb-control-imagechooser-padding\' : \'\'" v-model="'' cannot be parsed correct.
HTML code '$'[control.id]" :placeholder="control.placeholder ? control.placeholder : '' cannot be parsed correct.
HTML code '$'[control.id]" disabled>
				<div class="sb-control-imagechooser-clear sbi-fb-tltp-parent" v-if="checkNotEmpty('' cannot be parsed correct.
HTML code '$'[control.id])">
					<div class="sb-control-imagechooser-clear-icon" @click.prevent.default="changeSettingValue(control.id, \'\')"></div>
					<div class="sbi-fb-tltp-elem"><span>{{genericText.clear.replace(/ /g,"&nbsp;")}}</span></div>
				</div>
			</div>
			<div class="sb-control-imagechooser-btn" @click.prevent.default="imageChooser( control.id )">
				<div v-html="svgIcons[\'imageChooser\']"></div>
				<span v-html="checkNotEmpty('' cannot be parsed correct.
HTML code '$'[control.id]) ? genericText.change : genericText.addImage.replace(/ /g,\'&nbsp;\')"></span>
			</div>
		</div>
	'' cannot be parsed correct.
HTML code '$'[control.id]"  @change.prevent.default="changeSettingValue(control.id,false,false, control.ajaxAction ? control.ajaxAction : false)">
			<div class="sb-control-input-info" :class="control.fieldSuffixAction != undefined ? \'sb-cursor-pointer\' : \'\'" v-if="control.fieldSuffix" @click.prevent.default="control.fieldSuffixAction != undefined ? fieldCustomClickAction(control.fieldSuffixAction) : false">{{control.fieldSuffix.replace(/ /g,"&nbsp;")}}</div>
		</div>
		'' cannot be parsed correct.
HTML code '$'[control.id]" @change.prevent.default="changeSettingValue(control.id,false,false, control.ajaxAction ? control.ajaxAction : false)">
				<option v-for="(opName, opValue) in control.options" :value="opValue">{{opName}}</option>
			</select>
		</div>
		'' cannot be parsed correct.
HTML code '$'[control.id] == control.options.enabled" @click.prevent.default="changeSwitcherSettingValue(control.id, control.options.enabled, control.options.disabled, control.ajaxAction ? control.ajaxAction : false)">
			<div class="sb-control-switcher sb-tr-2"></div>
			<div class="sb-control-label" v-if="control.label" :data-title="control.labelStrong ? \'true\' : false">{{control.label}}</div>
		</div>
		'' cannot be parsed correct.
HTML code '$'[control.id]" @change.prevent.default="changeSettingValue(control.id, false,false, control.ajaxAction ? control.ajaxAction : false)"  :placeholder="control.placeholder ? control.placeholder : \'\'">
			<div class="sb-control-input-info" v-if="control.fieldSuffix">{{control.fieldSuffix.replace(/ /g,"&nbsp;")}}</div>
		</div>
		'' cannot be parsed correct.
HTML code '$'[control.id]" :placeholder="control.placeholder ? control.placeholder : \'\'" @focusout.prevent.default="changeSettingValue(false,false,false, control.ajaxAction ? control.ajaxAction : false)"></textarea>
		</div>
		'' cannot be parsed correct.
HTML code '$'[control.id] == toggle.value" v-show="toggle.condition != undefined ? checkControlCondition(toggle.condition) : true"  @click.prevent.default="changeSettingValue(control.id,toggle.value, true)" >
				{{toggle.label}}
			</div>
		</div>

		'' cannot be parsed correct.
HTML code '$'[control.id] == toggle.value" @click.prevent.default="changeSettingValue(control.id,toggle.value, toggle.checkExtension != undefined ? checkExtensionActive(toggle.checkExtension) : true, control.ajaxAction != undefined ? control.ajaxAction : false)"  v-show="toggle.condition != undefined ? checkControlCondition(toggle.condition) : true" :data-disabled="toggle.checkExtension != undefined ? !checkExtensionActive(toggle.checkExtension) : false">
				<div class="sb-control-toggle-extension-cover" v-show="toggle.checkExtension != undefined && !checkExtensionActive(toggle.checkExtension)"></div>
				<div class="sb-control-toggle-deco sb-tr-1"></div>
				<div class="sb-control-toggle-icon" v-if="toggle.icon" v-html="svgIcons[toggle.icon]"></div>
				<div class="sb-control-label">
					{{toggle.label}}
					<span class="sb-control-label-pro-toggle" v-if="toggle.proLabel">Pro</span>
				</div>
			</div>
		</div>
		'' cannot be parsed correct.
HTML code '$'[control.id]"></div>
				<div class="sb-control-coloroverride-swatch" :style="\'background:\'+'' cannot be parsed correct.
HTML code '$'[control.id]"></div>
			</div>
			<div class="sb-control-colorpicker-btn" @click.prevent.default="resetColorOverride(control.id)">{{genericText.reset}}</div>
		</div>
		'' cannot be parsed correct.
HTML code '$'[control.id]" v-on:change="changeSettingValue(control.id,...arguments)" :control-id="control.id"></sbi-colorpicker>-->
			<input class="sb-control-input" placeholder="Select" type="text"  v-model="'' cannot be parsed correct.
HTML code '$'[control.id]">
			<div class="sb-control-colorpicker-swatch" :style="\'background:\'+'' cannot be parsed correct.
HTML code '$'[control.id]+\';\'"></div>
			<div class="sb-control-colorpicker-popup" v-show="customizerScreens.activeColorPicker == control.id">
				<sketch-picker
				  @input="updateColorValue(control.id)"
				  v-model="'' cannot be parsed correct.
HTML code '$'[control.id]"
				  :value="'' cannot be parsed correct.
HTML code '$'[control.id]"
				  :preset-colors="[\'#fff\',\'#000\',\'#e92b2b\',\'#ffc104\',\'#31e92b\',\'#2b4ee9\',\'#a72be9\',\'#e92b82\']"
				></sketch-picker>
				<button class="sb-control-action-button sb-colorpicker-reset-btn sb-btn sbi-fb-fs sb-btn-grey" @click.prevent.default="resetColor(control.id)">
					<div v-html="svgIcons[\'update\']"></div>
					<span>{{genericText.reset}}</span>
				</button>
			</div>

			<div class="sb-control-colorpicker-btn" v-if="control.pickerType == \'reset\'">{{genericText.reset}}</div>
		</div>
		'' cannot be parsed correct.
HTML code '$'\'"
		v-show="isControlShown(control)"
		:data-child="control.child ? \'true\' : false"
		:data-separator="control.separator != undefined ? control.separator : \'none\'"
		:data-type="control.type" :data-layout="control.layout == undefined ? \'block\' : \'half\'"
		:data-reverse="control.reverse != undefined ? \'true\' : \'false\'" :data-stacked="control.stacked ? \'true\' : \'false\'"
		:data-heading="control.strongHeading != undefined && control.strongHeading != \'true\' ? \'\' : \'strong\'"
		:data-disabled="control.disabledInput != undefined ? isControlShown(control) : false"
		:data-switcher-top="control.switcherTop != undefined ? \'true\' : false"
		>

		<div class="sb-control-elem-overlay"
			v-show="control.condition != undefined || control.checkExtension != undefined || control.checkExtensionDimmed != undefined  ? !checkControlCondition(control.condition, control.checkExtension, control.checkExtensionDimmed) : false"
			@click.prevent.default="control.checkExtensionPopup != undefined && !checkExtensionActive(control.checkExtensionPopup) ? (control.utmLink != undefined ? window.open(control.utmLink, \'_blank\') : viewsActive.extensionsPopupElement = control.checkExtensionPopup) : false"
			:class="control.checkExtensionPopup != undefined && !checkExtensionActive(control.checkExtensionPopup) ? \'sb-cursor-pointer\' : \'\'"
		>
		</div>

		<div class="sb-control-elem-label" v-if="(control.heading == undefined && control.description == undefined) ? false : true &&  control.type != \'customview\'">
			<div class="sb-control-elem-label-title sbi-fb-fs">
				<div v-if="control.icon != undefined" class="sb-control-elem-icon" v-html="svgIcons[control.icon]"></div>
				<div class="sb-control-elem-heading sb-small-p sb-dark-text" :data-underline="control.underline" :class="control.enableViewAction != undefined && control.enableViewAction != false ? \'sb-cursor-pointer\' : \'\'" @click.prevent.default="control.enableViewAction != undefined && control.enableViewAction != false ? switchNestedSection(control.enableViewAction, null ) : false">
					<span v-html="control.heading"></span>
					<span v-if="control.proLabel != undefined && control.proLabel" class="sb-breadcrumb-pro-label">PRO</span>
				</div>
				<div class="sb-control-elem-tltp" v-if="control.tooltip != undefined" @mouseover.prevent.default="toggleElementTooltip(control.tooltip, \'show\', control.tooltipAlign ? control.tooltipAlign : \'center\' )" @mouseleave.prevent.default="toggleElementTooltip(\'\', \'hide\')">
					<div class="sb-control-elem-tltp-icon" v-html="svgIcons[\'info\']"></div>
				</div>
			</div>
			<div class="sb-control-elem-description" v-if="control.descriptionPosition != \'bottom\'">
				<span v-html="control.description"></span>
				<a v-if="control.checkExtensionPopupLearnMore != undefined" @click.prevent.default="control.utmLink != undefined ? window.open(control.utmLink, \'_blank\') : viewsActive.extensionsPopupElement = control.checkExtensionPopupLearnMore">{{genericText.learnMore}}</a>
			</div>
		</div>
		<div class="sb-control-elem-output">
			'' cannot be parsed correct.
HTML code '$'success'' cannot be parsed correct.
HTML code '$'</strong>
				<p class="sbi-tooltip-wizard-txt">'' cannot be parsed correct.
HTML code '$' <a href="https://smashballoon.com/doc/wordpress-5-block-page-editor-gutenberg/?instagram&utm_campaign=instagram-free&utm_source=add-block-tooltip" rel="noopener" target="_blank">'' cannot be parsed correct.
HTML code '$'</a></p>
				<div class="sbi-tooltip-wizard-actions">
					<button class="sbi-tlp-wizard-close">'' cannot be parsed correct.
HTML code '$'</button>
				</div>
			</div>
		</div>
		'' cannot be parsed correct.
HTML code '$'			>
				<svg width="10" height="10" viewBox="0 0 10 10" fill="none" xmlns="http://www.w3.org/2000/svg">
					<path d="M9.66683 1.27325L8.72683 0.333252L5.00016 4.05992L1.2735 0.333252L0.333496 1.27325L4.06016 4.99992L0.333496 8.72659L1.2735 9.66659L5.00016 5.93992L8.72683 9.66659L9.66683 8.72659L5.94016 4.99992L9.66683 1.27325Z" fill="white"/>
				</svg>
			</a>

			'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'success'' cannot be parsed correct.
HTML code '$'failed'' cannot be parsed correct.
HTML code '$'<!-- Instagram Feed JS -->'' cannot be parsed correct.
HTML code '$'
'' cannot be parsed correct.
HTML code '$'<script type="text/javascript">'' cannot be parsed correct.
HTML code '$'
'' cannot be parsed correct.
HTML code '$'
'' cannot be parsed correct.
HTML code '$'jQuery( document ).ready(function($) {'' cannot be parsed correct.
HTML code '$'
'' cannot be parsed correct.
HTML code '$'window.sbi_custom_js = function(){'' cannot be parsed correct.
HTML code '$'
'' cannot be parsed correct.
HTML code '$'
'' cannot be parsed correct.
HTML code '$'}'' cannot be parsed correct.
HTML code '$'
'' cannot be parsed correct.
HTML code '$'});'' cannot be parsed correct.
HTML code '$'
'' cannot be parsed correct.
HTML code '$'</script>'' cannot be parsed correct.
HTML code '$'
'' cannot be parsed correct.
HTML code '$'<!-- Instagram Feed CSS -->'' cannot be parsed correct.
HTML code '$'
'' cannot be parsed correct.
HTML code '$'<style type="text/css">'' cannot be parsed correct.
HTML code '$'
'' cannot be parsed correct.
HTML code '$'
'' cannot be parsed correct.
HTML code '$'#sbi_mod_link, #sbi_mod_error{ display: block !important; width: 100%; float: left; box-sizing: border-box; }'' cannot be parsed correct.
HTML code '$'
'' cannot be parsed correct.
HTML code '$'</style>'' cannot be parsed correct.
HTML code '$'
'' cannot be parsed correct.
HTML code '$' target="_blank" rel="nofollow noopener" '' cannot be parsed correct.
HTML code '$' class="sbi_header_link">
		<div'' cannot be parsed correct.
HTML code '$'>'' cannot be parsed correct.
HTML code '$'>'' cannot be parsed correct.
HTML code '$'>'' cannot be parsed correct.
HTML code '$'>'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:27.195578.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.048920.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 57 do_action/apply_filters calls and 115 add_action/add_filter calls. Now connecting do-add pairs.
Added 12 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:08.041170.

12 PHP_REACHES edges created
12 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FileProDetector
### Start running FrontBaseDetector
### Finish running DbaseDetector
### Start running HashDetector
### Finish running DbplusDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running FirebirdInterBaseDetector
### Start running IngresDetector
### Finish running IBMDb2Detector
### Start running jQueryRequestDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running HashDetector
### Start running MongoDbDetector
### Finish running InformixDetector
### Start running MongoDetector
### Finish running IngresDetector
### Start running MsqlDetector
### Finish running MongoDetector
### Start running MySQLDetector
### Finish running MongoDbDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running MsqlDetector
### Start running OpenSSLDetector
### Finish running ArrayElementDetector
### Start running ParadoxDetector
### Finish running Oci8Detector
### Start running PasswordHashingDetector
### Finish running OpenSSLDetector
### Start running PhpCurlDetector
### Finish running ParadoxDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PhpCurlDetector
### Start running PHPRetrievalDetector
### Finish running jQueryRequestDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPRetrievalDetector
### Start running PhpVarDetector
### Finish running PasswordHashingDetector
### Start running PostgreSQLDetector
### Finish running PostgreSQLDetector
### Start running PropertyDetector
### Finish running PhpVarDetector
### Start running Sqlite3Detector
### Finish running PHPStorageDetector
### Start running SqliteDetector
### Finish running PropertyDetector
### Start running SqlServerDetector
### Finish running Sqlite3Detector
### Start running SybaseDetector
### Finish running PHPIncludedDetector
### Start running TokyoTyrantDetector
### Finish running SqlServerDetector
### Start running UserInputDetector
### Finish running SqliteDetector
### Start running VariableDetector
### Finish running TokyoTyrantDetector
### Start running WordpressHashingFnDetector
### Finish running SybaseDetector
### Start running WordPressRemoteDetector
### Finish running UserInputDetector
### Start running WordPressRetrievalDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressStorageDetector
### Finish running VariableDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
https://graph.instagram.com/me/accounts?limit=500&access_token=
### Finish running GenericDatabaseUsageDetector
### Start running GenericEncryptionDetector
### Finish running maxdbDetector
### Start running DeletionDetector
### Finish running MySQLiDetector
### Start running UninstallDetector
### Finish running GenericEncryptionDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running WordPressStorageDetector
### Finish running WordPressRetrievalDetector
Error in WordPressRemoteDetector:
### Finished running detectors
inc/Builder/SBI_Feed_Builder.php:1634
  - Request variable '$_GET["sbi_username"]' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/Builder/SBI_Feed_Builder.php:1634
  - Request variable '$_GET["sbi_username"]' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/Builder/SBI_Source.php:79
  - Request variable '$_POST["username"]' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/Builder/SBI_Source.php:79
  - Request variable '$_POST["username"]' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/Builder/SBI_Source.php:291
  - Request variable '$_GET["sbi_username"]' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user 

admin/SBI_Upgrader.php:161
  - hash called with approved hash algorithm sha512.
inc/admin/addon-functions.php:197
  - hash called with approved hash algorithm sha256.
inc/admin/addon-functions.php:200
  - hash called with approved hash algorithm sha256. 

None:24
  - External request to possible URLs [].
  - Data types: remote
None:56
  - External request to possible URLs [].
  - Data types: remote
None:79
  - External request to possible URLs [].
  - Data types: remote
None:101
  - External request to possible URLs [].
  - Data types: remote
None:124
  - External request to possible URLs [].
  - Data types: remote
None:129
  - External request to possible URLs [].
  - Data types: remote
None:129
  - External request to possible URLs [].
  - Data types: remote
None:142
  - External request to possible URLs [].
  - Data types: remote
None:166
  - External request to possible URLs [].
  - Data types: remote
None:336
  - External request to possible URLs [].
  - Data types: remote
None:437
  - External request to possible URLs [].
  - Data types: remote
None:1083
  - External request to possible URLs [].
  - Data types: remote
None:1083
  - External request to possible URLs [].
  - Data types: remote 

inc/admin/addon-functions.php:203
  - openssl_encrypt called with unknown encryption algorithm.
inc/admin/addon-functions.php:206
  - openssl_decrypt called with unknown encryption algorithm.
inc/class-sb-instagram-data-encryption.php:69
  - openssl_encrypt called with unknown encryption algorithm.
inc/class-sb-instagram-data-encryption.php:100
  - openssl_decrypt called with unknown encryption algorithm. 

admin/SBI_Global_Settings.php:382
  - RETRIEVAL call to file_get_contents($_FILES["file"]["tmp_name"]).
  - Data types: file 

admin/SBI_Global_Settings.php:433
  - STORAGE call to fwrite($file, $feed).
  - Data types: file 

admin/SBI_Global_Settings.php:830
  - variable '$feed_issue_email_url' of personal types {'email'} is found.
  - Data types: email
admin/SBI_Global_Settings.php:1005
  - variable '$feed_issue_email_url' of personal types {'email'} is found.
  - Data types: email
admin/SBI_oEmbeds.php:265
  - variable '$admin_url_state' of personal types {'state'} is found.
  - Data types: state
admin/SBI_oEmbeds.php:267
  - variable '$admin_url_state' of personal types {'state'} is found.
  - Data types: state
admin/SBI_oEmbeds.php:268
  - variable '$admin_url_state' of personal types {'state'} is found.
  - Data types: state
admin/SBI_oEmbeds.php:275
  - variable '$admin_url_state' of personal types {'state'} is found.
  - Data types: state
admin/SBI_oEmbeds.php:279
  - variable '$admin_url_state' of personal types {'state'} is found.
  - Data types: state
inc/Builder/SBI_Source.php:230
  - variable '$admin_url_state' of personal types {'state'} is found.
  - Data types: state
inc/Builder/SBI_Source.php:232
  - variable '$admin_url_state' of personal types {'state'} is found.
  - Data types: state
inc/Builder/SBI_Source.php:233
  - variable '$admin_url_state' of personal types {'state'} is found.
  - Data types: state
inc/Builder/SBI_Source.php:234
  - variable '$admin_url_state' of personal types {'state'} is found.
  - Data types: state
inc/Builder/SBI_Source.php:236
  - variable '$sb_admin_email' of personal types {'email'} is found.
  - Data types: email
inc/Builder/SBI_Source.php:237
  - variable '$sb_admin_email' of personal types {'email'} is found.
  - Data types: email
inc/Builder/SBI_Source.php:238
  - variable '$sb_admin_email' of personal types {'email'} is found.
  - Data types: email
inc/Builder/SBI_Source.php:241
  - variable '$admin_url_state' of personal types {'state'} is found.
  - Data types: state
inc/Builder/SBI_Source.php:291
  - variable '$user_name' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/Builder/SBI_Source.php:300
  - variable '$user_name' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/admin/class-sbi-account-connector.php:193
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/admin/class-sbi-account-connector.php:206
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/admin/class-sbi-account-connector.php:218
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-sb-instagram-connected-account.php:135
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-sb-instagram-connected-account.php:220
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-sb-instagram-connected-account.php:220
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-sb-instagram-connected-account.php:235
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-sb-instagram-connected-account.php:242
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-sb-instagram-connected-account.php:257
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-sb-instagram-connected-account.php:270
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-sb-instagram-connected-account.php:286
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-sb-instagram-connected-account.php:287
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-sb-instagram-connected-account.php:290
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-sb-instagram-connected-account.php:308
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-sb-instagram-connected-account.php:309
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-sb-instagram-connected-account.php:312
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-sb-instagram-connected-account.php:313
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-sb-instagram-connected-account.php:314
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-sb-instagram-connected-account.php:317
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-sb-instagram-data-manager.php:149
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-sb-instagram-display-elements.php:654
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-sb-instagram-display-elements.php:674
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-sb-instagram-feed.php:1169
  - variable '$first_username' of personal types {'first_name', 'user_meta', 'user'} is found.
  - Data types: first_name, user_meta, user
inc/class-sb-instagram-feed.php:1169
  - variable '$first_username' of personal types {'first_name', 'user_meta', 'user'} is found.
  - Data types: first_name, user_meta, user
inc/class-sb-instagram-feed.php:1171
  - variable '$first_username' of personal types {'first_name', 'user_meta', 'user'} is found.
  - Data types: first_name, user_meta, user
inc/class-sb-instagram-feed.php:1171
  - variable '$first_username' of personal types {'first_name', 'user_meta', 'user'} is found.
  - Data types: first_name, user_meta, user
inc/class-sb-instagram-feed.php:1173
  - variable '$first_username' of personal types {'first_name', 'user_meta', 'user'} is found.
  - Data types: first_name, user_meta, user
inc/class-sb-instagram-feed.php:1173
  - variable '$first_username' of personal types {'first_name', 'user_meta', 'user'} is found.
  - Data types: first_name, user_meta, user
inc/class-sb-instagram-feed.php:1175
  - variable '$first_username' of personal types {'first_name', 'user_meta', 'user'} is found.
  - Data types: first_name, user_meta, user
inc/class-sb-instagram-feed.php:1175
  - variable '$first_username' of personal types {'first_name', 'user_meta', 'user'} is found.
  - Data types: first_name, user_meta, user
inc/class-sb-instagram-post.php:573
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-sb-instagram-post.php:582
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-sb-instagram-settings.php:697
  - variable '$usernames_included' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-sb-instagram-settings.php:698
  - variable '$usernames_not_connected' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-sb-instagram-settings.php:700
  - variable '$user_id_or_name' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-sb-instagram-settings.php:701
  - variable '$user_id_or_name' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-sb-instagram-settings.php:701
  - variable '$user_id_or_name' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-sb-instagram-settings.php:701
  - variable '$user_id_or_name' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-sb-instagram-settings.php:704
  - variable '$usernames_included' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-sb-instagram-settings.php:718
  - variable '$usernames_included' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-sb-instagram-settings.php:722
  - variable '$user_id_or_name' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-sb-instagram-settings.php:726
  - variable '$usernames_not_connected' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-sb-instagram-settings.php:726
  - variable '$user_id_or_name' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-sb-instagram-settings.php:731
  - variable '$usernames_not_connected' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-sb-instagram-settings.php:733
  - variable '$usernames_not_connected' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-sb-instagram-settings.php:734
  - variable '$usernames_not_connected' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-sb-instagram-settings.php:736
  - variable '$usernames_not_connected' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/if-functions.php:809
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/if-functions.php:1599
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
inc/if-functions.php:1600
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
inc/if-functions.php:1601
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
inc/if-functions.php:1609
  - variable '$email_from' of personal types {'email'} is found.
  - Data types: email
inc/if-functions.php:1610
  - variable '$email_from' of personal types {'email'} is found.
  - Data types: email
inc/if-functions.php:1649
  - variable '$email_body' of personal types {'email'} is found.
  - Data types: email
inc/if-functions.php:1652
  - variable '$email_body' of personal types {'email'} is found.
  - Data types: email
instagram-feed.php:941
  - variable '$usermeta_table_name' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
instagram-feed.php:944
  - variable '$usermeta_table_name' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
templates/footer.php:36
  - variable '$first_username' of personal types {'first_name', 'user_meta', 'user'} is found.
  - Data types: first_name, user_meta, user
templates/footer.php:36
  - variable '$first_username' of personal types {'first_name', 'user_meta', 'user'} is found.
  - Data types: first_name, user_meta, user
templates/footer.php:38
  - variable '$first_username' of personal types {'first_name', 'user_meta', 'user'} is found.
  - Data types: first_name, user_meta, user
templates/footer.php:38
  - variable '$first_username' of personal types {'first_name', 'user_meta', 'user'} is found.
  - Data types: first_name, user_meta, user
templates/header.php:18
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
templates/header.php:46
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
templates/header.php:47
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
templates/header.php:65
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user 

admin/SBI_Admin_Notices.php:164
  - API call to wp_remote_get(add_query_arg($sbi_api_params, SBI_STORE_URL), ["timeout" => 60]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
admin/SBI_HTTP_Request.php:39
  - API call to wp_remote_get($url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
admin/SBI_HTTP_Request.php:42
  - API call to wp_remote_request($url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
admin/SBI_HTTP_Request.php:45
  - API call to wp_remote_request($url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
admin/SBI_HTTP_Request.php:48
  - API call to wp_remote_request($url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
admin/SBI_HTTP_Request.php:51
  - API call to wp_remote_post($url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
admin/SBI_Upgrader.php:70
  - API call to wp_remote_post($api_url, ["timeout" => 15, "sslverify" => true, "body" => $api_params]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
admin/SBI_Upgrader.php:123
  - API call to wp_remote_get($url, $remote_request_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
admin/SBI_oEmbeds.php:318
  - API call to wp_remote_get($url). Passed arguments: 0: $url (string). Returns (array|WP_Error).
  - Data types: remote 

admin/SBI_About_Us.php:129
  - RETRIEVAL call to get_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/SBI_About_Us.php:130
  - RETRIEVAL call to get_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/SBI_Admin_Notices.php:47
  - RETRIEVAL call to get_transient("instagram_feed_dismiss_lite") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
admin/SBI_Admin_Notices.php:128
  - RETRIEVAL call to get_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/SBI_Admin_Notices.php:128
  - RETRIEVAL call to get_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/SBI_Admin_Notices.php:156
  - RETRIEVAL call to get_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/SBI_Global_Settings.php:87
  - RETRIEVAL call to get_option("sbi_license_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/SBI_Global_Settings.php:96
  - RETRIEVAL call to get_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/SBI_Global_Settings.php:114
  - RETRIEVAL call to get_option("sb_instagram_settings", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/SBI_Global_Settings.php:146
  - RETRIEVAL call to get_option("sbi_usage_tracking", ["last_send" => 0, "enabled" => sbi_is_pro_version()]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/SBI_Global_Settings.php:229
  - RETRIEVAL call to get_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/SBI_Global_Settings.php:261
  - RETRIEVAL call to get_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/SBI_Global_Settings.php:341
  - RETRIEVAL call to get_option("sbi_license_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/SBI_Global_Settings.php:351
  - RETRIEVAL call to get_option("sbi_license_status_" . $option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/SBI_Global_Settings.php:462
  - RETRIEVAL call to get_option("sb_instagram_settings", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/SBI_Global_Settings.php:668
  - RETRIEVAL call to get_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/SBI_Global_Settings.php:669
  - RETRIEVAL call to get_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/SBI_Global_Settings.php:778
  - RETRIEVAL call to get_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/SBI_Global_Settings.php:780
  - RETRIEVAL call to get_option("sbi_license_last_check_timestamp") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/SBI_Global_Settings.php:788
  - RETRIEVAL call to get_option("sbi_license_data") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/SBI_Global_Settings.php:815
  - RETRIEVAL call to get_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/SBI_Global_Settings.php:816
  - RETRIEVAL call to get_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/SBI_Global_Settings.php:1106
  - RETRIEVAL call to get_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/SBI_Global_Settings.php:1107
  - RETRIEVAL call to get_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/SBI_Global_Settings.php:1129
  - RETRIEVAL call to get_option("sb_instagram_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/SBI_Global_Settings.php:1133
  - RETRIEVAL call to get_option("sbi_usage_tracking", ["last_send" => 0, "enabled" => sbi_is_pro_version()]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/SBI_Global_Settings.php:1210
  - RETRIEVAL call to get_option("time_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/SBI_Support.php:316
  - RETRIEVAL call to get_option("active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/SBI_Support.php:339
  - RETRIEVAL call to get_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/SBI_Support.php:340
  - RETRIEVAL call to get_option("sbi_license_data") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/SBI_Support.php:341
  - RETRIEVAL call to get_option("sbi_license_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/SBI_Support.php:342
  - RETRIEVAL call to get_option("sb_instagram_settings", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/SBI_Support.php:344
  - RETRIEVAL call to get_option("sbi_usage_tracking", ["last_send" => 0, "enabled" => sbi_is_pro_version()]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/SBI_Support.php:376
  - RETRIEVAL call to get_option("time_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/SBI_Support.php:536
  - RETRIEVAL call to get_option("sbi_cron_report", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/SBI_Support.php:741
  - RETRIEVAL call to get_option("sbi_oembed_token", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/SBI_Support.php:767
  - RETRIEVAL call to get_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/SBI_Upgrader.php:207
  - RETRIEVAL call to get_option("sbi_one_click_upgrade") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/SBI_Upgrader.php:248
  - RETRIEVAL call to get_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/SBI_Upgrader.php:263
  - RETRIEVAL call to get_option("sbi_license_data") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/SBI_oEmbeds.php:84
  - RETRIEVAL call to get_option("sbi_oembed_token", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/SBI_oEmbeds.php:107
  - RETRIEVAL call to get_option("cff_oembed_token", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/SBI_oEmbeds.php:223
  - RETRIEVAL call to get_option("sbi_oembed_token", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/SBI_oEmbeds.php:303
  - RETRIEVAL call to get_option("cff_oembed_token", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/SBI_oEmbeds.php:354
  - RETRIEVAL call to get_option("sbi_oembed_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/SBI_oEmbeds.php:369
  - RETRIEVAL call to get_option("cff_oembed_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/SBI_oEmbeds.php:391
  - RETRIEVAL call to get_option("active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/Builder/SBI_Db.php:804
  - RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/Builder/SBI_Feed_Builder.php:94
  - RETRIEVAL call to get_option("sbi_license_key", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/Builder/SBI_Feed_Builder.php:491
  - RETRIEVAL call to get_transient("instagram_feed_dismiss_lite") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
inc/Builder/SBI_Feed_Builder.php:1320
  - RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/Builder/SBI_Feed_Builder.php:1655
  - RETRIEVAL call to get_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/Builder/SBI_Feed_Builder.php:1656
  - RETRIEVAL call to get_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/Builder/SBI_Feed_Builder.php:1785
  - RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/Builder/SBI_Feed_Builder.php:1975
  - RETRIEVAL call to get_user_meta(get_current_user_id(), "sbi_onboarding", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/Builder/SBI_Feed_Builder.php:1993
  - RETRIEVAL call to get_user_meta(get_current_user_id(), "sbi_onboarding", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/Builder/SBI_Source.php:236
  - RETRIEVAL call to get_option("admin_email", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/Builder/SBI_Source.php:609
  - RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/Builder/SBI_Source.php:610
  - RETRIEVAL call to get_option("sb_instagram_settings", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/Builder/SBI_Source.php:630
  - RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/Builder/SBI_Source.php:647
  - RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/Builder/SBI_Source.php:654
  - RETRIEVAL call to get_option("sb_instagram_settings", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/Builder/SBI_Source.php:778
  - RETRIEVAL call to get_option("sbi_connected_accounts") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/Builder/SBI_Theme_CSS.php:45
  - RETRIEVAL call to get_option("sbi_theme_styles", ["file" => "", "last_checked" => 0, "styles" => []]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/Builder/SBI_Theme_CSS.php:70
  - RETRIEVAL call to get_option("sbi_theme_styles", ["file" => "", "last_checked" => 0, "styles" => []]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/Helpers/SB_Instagram_Tracking.php:162
  - RETRIEVAL call to get_option("sbi_usage_tracking_config", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/Helpers/SB_Instagram_Tracking.php:168
  - RETRIEVAL call to get_option("sb_instagram_settings", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/Helpers/SB_Instagram_Tracking.php:226
  - RETRIEVAL call to get_option("sb_instagram_white_list_names", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/Helpers/SB_Instagram_Tracking.php:241
  - RETRIEVAL call to get_option("active_plugins", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/Helpers/SB_Instagram_Tracking.php:270
  - RETRIEVAL call to get_option("sbi_usage_tracking", ["last_send" => 0, "enabled" => sbi_is_pro_version()]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/Helpers/SB_Instagram_Tracking.php:301
  - RETRIEVAL call to get_option("sbi_usage_tracking", ["last_send" => 0, "enabled" => sbi_is_pro_version()]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/admin/class-sbi-new-user.php:65
  - RETRIEVAL call to $this->get_option() alters data types {'option'}. Returns (mixed).
  - Data types: option
inc/admin/class-sbi-new-user.php:99
  - RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/admin/class-sbi-new-user.php:103
  - RETRIEVAL call to get_option("sbi_rating_notice", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/admin/class-sbi-new-user.php:104
  - RETRIEVAL call to get_transient("instagram_feed_rating_notice_waiting") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
inc/admin/class-sbi-new-user.php:115
  - RETRIEVAL call to get_user_meta($user_id, "sbi_ignore_new_user_sale_notice") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/admin/class-sbi-new-user.php:123
  - RETRIEVAL call to get_user_meta($user_id, "sbi_ignore_new_user_sale_notice") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/admin/class-sbi-new-user.php:158
  - RETRIEVAL call to $this->get_option() alters data types {'option'}. Returns (mixed).
  - Data types: option
inc/admin/class-sbi-new-user.php:183
  - RETRIEVAL call to $this->get_option() alters data types {'option'}. Returns (mixed).
  - Data types: option
inc/admin/class-sbi-new-user.php:215
  - RETRIEVAL call to $this->get_option() alters data types {'option'}. Returns (mixed).
  - Data types: option
inc/admin/class-sbi-new-user.php:252
  - RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/admin/class-sbi-new-user.php:300
  - RETRIEVAL call to get_option("sbi_review_consent") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/admin/class-sbi-new-user.php:363
  - RETRIEVAL call to get_option("sbi_review_consent") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/admin/class-sbi-new-user.php:472
  - RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/admin/class-sbi-notifications.php:121
  - RETRIEVAL call to get_option($this->option_name(), []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/admin/class-sbi-notifications.php:172
  - RETRIEVAL call to $this->get_option() alters data types {'option'}. Returns (mixed).
  - Data types: option
inc/admin/class-sbi-notifications.php:193
  - RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/admin/class-sbi-notifications.php:276
  - RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/admin/class-sbi-notifications.php:299
  - RETRIEVAL call to $this->get_option() alters data types {'option'}. Returns (mixed).
  - Data types: option
inc/admin/class-sbi-notifications.php:343
  - RETRIEVAL call to $this->get_option() alters data types {'option'}. Returns (mixed).
  - Data types: option
inc/admin/class-sbi-notifications.php:375
  - RETRIEVAL call to $this->get_option() alters data types {'option'}. Returns (mixed).
  - Data types: option
inc/admin/class-sbi-notifications.php:561
  - RETRIEVAL call to get_option("sbi_review_consent") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/admin/class-sbi-notifications.php:586
  - RETRIEVAL call to get_option("sbi_review_consent") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/admin/class-sbi-notifications.php:697
  - RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/admin/class-sbi-notifications.php:713
  - RETRIEVAL call to $this->get_option() alters data types {'option'}. Returns (mixed).
  - Data types: option
inc/class-sb-instagram-connected-account.php:218
  - RETRIEVAL call to get_option("sbi_local_avatars", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/class-sb-instagram-connected-account.php:255
  - RETRIEVAL call to get_option("sbi_local_avatars", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/class-sb-instagram-connected-account.php:284
  - RETRIEVAL call to get_option("sbi_local_avatars", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/class-sb-instagram-data-manager.php:334
  - RETRIEVAL call to get_option("sbi_single_cache", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/class-sb-instagram-data-manager.php:341
  - RETRIEVAL call to get_transient("sbinst_comment_cache") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
inc/class-sb-instagram-data-manager.php:351
  - RETRIEVAL call to get_option("sbi_hashtag_ids", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/class-sb-instagram-data-manager.php:369
  - RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/class-sb-instagram-data-manager.php:383
  - RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/class-sb-instagram-data-manager.php:433
  - RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/class-sb-instagram-display-elements.php:185
  - RETRIEVAL call to $single->get_post() alters data types {'post_meta', 'wp_post', 'post'}. Returns (WP_Post|array|null).
  - Data types: post_meta, wp_post, post
inc/class-sb-instagram-feed-locator.php:421
  - RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/class-sb-instagram-feed-locator.php:445
  - RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/class-sb-instagram-feed-locator.php:469
  - RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/class-sb-instagram-feed-locator.php:497
  - RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/class-sb-instagram-gdpr-integrations.php:95
  - RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/class-sb-instagram-gdpr-integrations.php:111
  - RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/class-sb-instagram-gdpr-integrations.php:187
  - RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/class-sb-instagram-gdpr-integrations.php:209
  - RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/class-sb-instagram-oembed.php:48
  - RETRIEVAL call to get_option("sbi_oembed_token", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/class-sb-instagram-oembed.php:72
  - RETRIEVAL call to get_option("sbi_oembed_token", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/class-sb-instagram-oembed.php:217
  - RETRIEVAL call to get_option("sbi_oembed_token", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/class-sb-instagram-oembed.php:244
  - RETRIEVAL call to get_option("cff_oembed_token", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/class-sb-instagram-oembed.php:261
  - RETRIEVAL call to get_option("sbi_oembed_token", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/class-sb-instagram-oembed.php:281
  - RETRIEVAL call to get_post_meta($post_ID, "_sbi_oembed_done_checking", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class-sb-instagram-oembed.php:303
  - RETRIEVAL call to get_post_meta($post_ID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int). Returns (mixed).
  - Data types: post_meta
inc/class-sb-instagram-parse.php:134
  - RETRIEVAL call to $single->get_post() alters data types {'post_meta', 'wp_post', 'post'}. Returns (WP_Post|array|null).
  - Data types: post_meta, wp_post, post
inc/class-sb-instagram-parse.php:156
  - RETRIEVAL call to $single->get_post() alters data types {'post_meta', 'wp_post', 'post'}. Returns (WP_Post|array|null).
  - Data types: post_meta, wp_post, post
inc/class-sb-instagram-post.php:211
  - RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/class-sb-instagram-posts-manager.php:46
  - RETRIEVAL call to get_option("sb_instagram_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/class-sb-instagram-posts-manager.php:47
  - RETRIEVAL call to get_option("sb_instagram_errors", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/class-sb-instagram-posts-manager.php:628
  - RETRIEVAL call to get_option("sbi_top_api_calls", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/class-sb-instagram-posts-manager.php:637
  - RETRIEVAL call to get_option("sbi_top_api_calls", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/class-sb-instagram-settings.php:64
  - RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/class-sb-instagram-settings.php:105
  - RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/class-sb-instagram-settings.php:368
  - RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/class-sb-instagram-settings.php:436
  - RETRIEVAL call to get_option("sbi_legacy_feed_settings", "{}") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/class-sb-instagram-settings.php:983
  - RETRIEVAL call to get_option("admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/class-sb-instagram-single.php:181
  - RETRIEVAL call to get_transient("sbi_delay_oembeds_" . $this->permalink_id) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
inc/class-sb-instagram-single.php:210
  - RETRIEVAL call to get_option("sbi_single_cache", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/class-sb-instagram-single.php:258
  - RETRIEVAL call to get_option("sbi_single_cache", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/class-sb-instagram-single.php:266
  - RETRIEVAL call to get_option("sb_instagram_settings", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/if-functions.php:866
  - RETRIEVAL call to get_option("sb_instagram_settings", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/if-functions.php:1136
  - RETRIEVAL call to get_option("gmt_offset", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/if-functions.php:1278
  - RETRIEVAL call to get_option("sb_instagram_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/if-functions.php:1318
  - RETRIEVAL call to get_option("sb_instagram_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/if-functions.php:1349
  - RETRIEVAL call to get_option("sb_instagram_settings", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/if-functions.php:1417
  - RETRIEVAL call to get_option("sbi_dismiss_critical_notice", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/if-functions.php:1580
  - RETRIEVAL call to get_option("sb_instagram_settings", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/if-functions.php:1592
  - RETRIEVAL call to get_option("sb_instagram_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/if-functions.php:1594
  - RETRIEVAL call to get_option("admin_email", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/if-functions.php:1609
  - RETRIEVAL call to get_option("admin_email", $to_array[0]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/if-functions.php:1662
  - RETRIEVAL call to get_option("sb_instagram_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/if-functions.php:1677
  - RETRIEVAL call to get_option($option_name, $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/if-functions.php:1741
  - RETRIEVAL call to get_option("admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
instagram-feed.php:259
  - RETRIEVAL call to get_option("sb_instagram_settings", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
instagram-feed.php:424
  - RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
instagram-feed.php:451
  - RETRIEVAL call to get_option("sbi_db_version", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
instagram-feed.php:501
  - RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
instagram-feed.php:505
  - RETRIEVAL call to get_option("sb_instagram_settings", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
instagram-feed.php:513
  - RETRIEVAL call to get_option("sbi_rating_notice", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
instagram-feed.php:519
  - RETRIEVAL call to get_transient("instagram_feed_rating_notice_waiting") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
instagram-feed.php:578
  - RETRIEVAL call to get_option("sb_instagram_settings", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
instagram-feed.php:581
  - RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
instagram-feed.php:595
  - RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
instagram-feed.php:633
  - RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
instagram-feed.php:634
  - RETRIEVAL call to get_option("sb_instagram_settings", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
instagram-feed.php:791
  - RETRIEVAL call to get_option("sb_instagram_settings", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
instagram-feed.php:1012
  - RETRIEVAL call to get_option("sb_instagram_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option 

admin/SBI_Admin_Notices.php:91
  - STORAGE call to set_transient("instagram_feed_dismiss_lite", "dismiss", 1 * WEEK_IN_SECONDS) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
admin/SBI_Admin_Notices.php:167
  - STORAGE call to update_option("sbi_license_data", $sbi_license_data) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/SBI_Admin_Notices.php:173
  - STORAGE call to update_user_meta(get_current_user_id(), "sbi_ignore_dashboard_license_notice", false) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
admin/SBI_Global_Settings.php:89
  - STORAGE call to delete_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
admin/SBI_Global_Settings.php:90
  - STORAGE call to delete_option("sbi_license_data") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
admin/SBI_Global_Settings.php:91
  - STORAGE call to delete_option("sbi_license_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
admin/SBI_Global_Settings.php:93
  - STORAGE call to update_option("sbi_license_key", $sbi_license_key) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/SBI_Global_Settings.php:101
  - STORAGE call to delete_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
admin/SBI_Global_Settings.php:102
  - STORAGE call to delete_option("sbi_license_data") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
admin/SBI_Global_Settings.php:103
  - STORAGE call to delete_option("sbi_license_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
admin/SBI_Global_Settings.php:159
  - STORAGE call to update_option("sbi_usage_tracking", $usage_tracking, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
admin/SBI_Global_Settings.php:163
  - STORAGE call to update_option("sb_instagram_settings", $sbi_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/SBI_Global_Settings.php:198
  - STORAGE call to update_option("sbi_license_data", $sbi_license_data) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/SBI_Global_Settings.php:201
  - STORAGE call to update_option("sbi_license_key", $license_key) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/SBI_Global_Settings.php:203
  - STORAGE call to update_option("sbi_license_status", $sbi_license_data["license"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/SBI_Global_Settings.php:233
  - STORAGE call to update_option("sbi_license_data", $sbi_license_data) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/SBI_Global_Settings.php:240
  - STORAGE call to update_option("sbi_license_status", "inactive") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/SBI_Global_Settings.php:344
  - STORAGE call to update_option("sbi_license_data", $license_data) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/SBI_Global_Settings.php:345
  - STORAGE call to update_option("sbi_license_status", $license_data["license"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/SBI_Global_Settings.php:354
  - STORAGE call to update_option("sbi_license_status_" . $option_name, $license_data["license"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/SBI_Global_Settings.php:359
  - STORAGE call to delete_option("sbi_license_status_" . $option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
admin/SBI_Global_Settings.php:471
  - STORAGE call to delete_option("sbi_cron_report") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
admin/SBI_Global_Settings.php:552
  - STORAGE call to delete_option("sbi_top_api_calls") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
admin/SBI_Global_Settings.php:785
  - STORAGE call to update_option("sbi_license_data", $sbi_license_data) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/SBI_Global_Settings.php:786
  - STORAGE call to update_option("sbi_license_last_check_timestamp", time()) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/SBI_Upgrader.php:156
  - STORAGE call to update_option("sbi_license_key", $license) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/SBI_Upgrader.php:157
  - STORAGE call to update_option("sbi_license_data", $license_data) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/SBI_Upgrader.php:158
  - STORAGE call to update_option("sbi_license_status", $license_data["license"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/SBI_Upgrader.php:162
  - STORAGE call to update_option("sbi_one_click_upgrade", $oth) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/SBI_Upgrader.php:218
  - STORAGE call to delete_option("sbi_one_click_upgrade") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
admin/SBI_oEmbeds.php:87
  - STORAGE call to update_option("sbi_oembed_token", $oembed_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/SBI_oEmbeds.php:110
  - STORAGE call to update_option("cff_oembed_token", $oembed_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/SBI_oEmbeds.php:230
  - STORAGE call to update_option("cff_oembed_token", $newly_retrieved_oembed_connection_data) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/SBI_oEmbeds.php:231
  - STORAGE call to update_option("sbi_oembed_token", $newly_retrieved_oembed_connection_data) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/Builder/SBI_Db.php:800
  - STORAGE call to update_option("sbi_db_version", ) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/Builder/SBI_Db.php:801
  - STORAGE call to delete_option("sbi_legacy_feed_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/Builder/SBI_Db.php:833
  - STORAGE call to update_option("sbi_statuses", $sbi_statuses_option) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/Builder/SBI_Db.php:839
  - STORAGE call to delete_option("sbi_statuses") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/Builder/SBI_Db.php:840
  - STORAGE call to delete_option("sb_instagram_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/Builder/SBI_Db.php:841
  - STORAGE call to delete_option("sbi_ver") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/Builder/SBI_Db.php:842
  - STORAGE call to delete_option("sb_expired_tokens") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/Builder/SBI_Db.php:843
  - STORAGE call to delete_option("sbi_cron_report") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/Builder/SBI_Db.php:844
  - STORAGE call to delete_option("sb_instagram_errors") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/Builder/SBI_Db.php:845
  - STORAGE call to delete_option("sb_instagram_ajax_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/Builder/SBI_Db.php:846
  - STORAGE call to delete_option("sbi_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/Builder/SBI_Db.php:913
  - STORAGE call to delete_option("sbi_hashtag_ids") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/Builder/SBI_Db.php:914
  - STORAGE call to delete_option("sb_instagram_errors") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/Builder/SBI_Db.php:915
  - STORAGE call to delete_option("sbi_usage_tracking_config") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/Builder/SBI_Db.php:916
  - STORAGE call to delete_option("sbi_usage_tracking") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/Builder/SBI_Db.php:917
  - STORAGE call to delete_option("sbi_oembed_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/Builder/SBI_Db.php:918
  - STORAGE call to delete_option("sbi_top_api_calls") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/Builder/SBI_Db.php:919
  - STORAGE call to delete_option("sbi_rating_notice") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/Builder/SBI_Db.php:920
  - STORAGE call to delete_option("sbi_refresh_report") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/Builder/SBI_Db.php:921
  - STORAGE call to delete_option("sbi_welcome_seen") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/Builder/SBI_Db.php:922
  - STORAGE call to delete_option("sbi_notifications") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/Builder/SBI_Db.php:923
  - STORAGE call to delete_option("sbi_newuser_notifications") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/Builder/SBI_Feed_Builder.php:2005
  - STORAGE call to update_user_meta(get_current_user_id(), "sbi_onboarding", $statuses) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/Builder/SBI_Feed_Saver.php:232
  - STORAGE call to update_option("sbi_legacy_feed_settings", $to_save_json, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/Builder/SBI_Feed_Saver.php:672
  - STORAGE call to update_option("sbi_legacy_feed_settings", $to_save_json, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/Builder/SBI_Source.php:616
  - STORAGE call to update_option("sbi_statuses", $sbi_statuses_option) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/Builder/SBI_Source.php:649
  - STORAGE call to update_option("sbi_statuses", $sbi_statuses_option) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/Builder/SBI_Theme_CSS.php:76
  - STORAGE call to update_option("sbi_theme_styles", $stored_styles, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/Helpers/SB_Instagram_Tracking.php:296
  - STORAGE call to update_option("sbi_usage_tracking", $usage_tracking, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/Helpers/SB_Instagram_Tracking.php:332
  - STORAGE call to update_option("sbi_usage_tracking_config", $tracking) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/admin/class-sbi-new-user.php:197
  - STORAGE call to update_option($this->option_name(), ["update" => $option["update"], "feed" => $option["feed"], "events" => array_merge($notification, $option["events"]), "dismissed" => $option["dismissed"]]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/admin/class-sbi-new-user.php:217
  - STORAGE call to update_option($this->option_name(), ["update" => time(), "feed" => $feed, "events" => $option["events"], "dismissed" => $option["dismissed"]]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/admin/class-sbi-new-user.php:249
  - STORAGE call to update_option("sbi_review_consent", $consent) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/admin/class-sbi-new-user.php:253
  - STORAGE call to update_option("sbi_rating_notice", "dismissed", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/admin/class-sbi-new-user.php:255
  - STORAGE call to update_option("sbi_statuses", $sbi_statuses_option, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/admin/class-sbi-new-user.php:480
  - STORAGE call to update_option("sbi_rating_notice", "dismissed", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/admin/class-sbi-new-user.php:482
  - STORAGE call to update_option("sbi_statuses", $sbi_statuses_option, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/admin/class-sbi-new-user.php:485
  - STORAGE call to set_transient("instagram_feed_rating_notice_waiting", "waiting", 2 * WEEK_IN_SECONDS) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
inc/admin/class-sbi-new-user.php:486
  - STORAGE call to delete_option("sbi_review_consent") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/admin/class-sbi-new-user.php:487
  - STORAGE call to update_option("sbi_rating_notice", "pending", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/admin/class-sbi-new-user.php:497
  - STORAGE call to update_user_meta($user_id, "sbi_ignore_new_user_sale_notice", "always") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/admin/class-sbi-new-user.php:503
  - STORAGE call to update_user_meta($user_id, "sbi_ignore_bfcm_sale_notice", date("Y", sbi_get_current_time())) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/admin/class-sbi-new-user.php:514
  - STORAGE call to update_user_meta($user_id, "sbi_ignore_bfcm_sale_notice", "always") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/admin/class-sbi-new-user.php:516
  - STORAGE call to update_user_meta($user_id, "sbi_ignore_bfcm_sale_notice", date("Y", sbi_get_current_time())) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/admin/class-sbi-new-user.php:518
  - STORAGE call to update_user_meta($user_id, "sbi_ignore_new_user_sale_notice", "always") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/admin/class-sbi-new-user.php:527
  - STORAGE call to update_option("sbi_rating_notice", "dismissed", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/admin/class-sbi-new-user.php:529
  - STORAGE call to update_option("sbi_statuses", $sbi_statuses_option, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/admin/class-sbi-new-user.php:531
  - STORAGE call to update_user_meta($user_id, "sbi_ignore_new_user_sale_notice", "always") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/admin/class-sbi-new-user.php:533
  - STORAGE call to update_user_meta($user_id, "sbi_ignore_new_user_sale_notice", "always") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/admin/class-sbi-new-user.php:539
  - STORAGE call to update_user_meta($user_id, "sbi_ignore_bfcm_sale_notice", date("Y", sbi_get_current_time())) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/admin/class-sbi-new-user.php:542
  - STORAGE call to update_user_meta($user_id, "sbi_ignore_new_user_sale_notice", "always") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/admin/class-sbi-notifications.php:357
  - STORAGE call to update_option("sbi_notifications", ["update" => $option["update"], "feed" => $option["feed"], "events" => array_merge($notification, $option["events"]), "dismissed" => $option["dismissed"]]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/admin/class-sbi-notifications.php:377
  - STORAGE call to update_option("sbi_notifications", ["update" => sbi_get_current_time(), "feed" => $feed, "events" => $option["events"], "dismissed" => $option["dismissed"]]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/admin/class-sbi-notifications.php:699
  - STORAGE call to update_option("sbi_rating_notice", "dismissed", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/admin/class-sbi-notifications.php:701
  - STORAGE call to update_option("sbi_statuses", $sbi_statuses_option, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/admin/class-sbi-notifications.php:703
  - STORAGE call to update_user_meta(get_current_user_id(), "sbi_ignore_new_user_sale_notice", "always") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/admin/class-sbi-notifications.php:709
  - STORAGE call to update_user_meta(get_current_user_id(), "sbi_ignore_bfcm_sale_notice", date("Y", sbi_get_current_time())) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/admin/class-sbi-notifications.php:729
  - STORAGE call to update_option("sbi_notifications", $option) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/class-sb-instagram-api-connect.php:224
  - STORAGE call to delete_option("sbi_dismiss_critical_notice") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/class-sb-instagram-api-connect.php:244
  - STORAGE call to delete_option("sbi_dismiss_critical_notice") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/class-sb-instagram-connected-account.php:293
  - STORAGE call to update_option("sbi_local_avatars", $avatars) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/class-sb-instagram-connected-account.php:416
  - STORAGE call to update_option("sb_instagram_settings", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/class-sb-instagram-connected-account.php:459
  - STORAGE call to update_option("sb_instagram_settings", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/class-sb-instagram-cron-updater.php:89
  - STORAGE call to update_option("sbi_cron_report", $report, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/class-sb-instagram-data-manager.php:117
  - STORAGE call to delete_option("sbi_top_api_calls") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/class-sb-instagram-data-manager.php:229
  - STORAGE call to delete_transient("sbinst_comment_cache") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).
  - Data types: site
inc/class-sb-instagram-data-manager.php:295
  - STORAGE call to delete_option("sbi_single_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/class-sb-instagram-data-manager.php:321
  - STORAGE call to update_option($permanent_cache["option_name"], $value, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/class-sb-instagram-data-manager.php:338
  - STORAGE call to update_option("sbi_single_cache", $encryption->encrypt(sbi_json_encode($stored_option)), false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/class-sb-instagram-data-manager.php:350
  - STORAGE call to set_transient("sbinst_comment_cache", $encryption->encrypt(sbi_json_encode($comment_cache)), 0) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
inc/class-sb-instagram-data-manager.php:357
  - STORAGE call to update_option("sbi_hashtag_ids", $encryption->encrypt(sbi_json_encode($ids)), false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/class-sb-instagram-data-manager.php:386
  - STORAGE call to update_option("sbi_statuses", $sbi_statuses_option) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/class-sb-instagram-data-manager.php:436
  - STORAGE call to update_option("sbi_statuses", $sbi_statuses_option) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/class-sb-instagram-data-manager.php:437
  - STORAGE call to update_option("sbi_db_version", ) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/class-sb-instagram-feed-locator.php:451
  - STORAGE call to update_option("sbi_statuses", $sbi_statuses_option, true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/class-sb-instagram-gdpr-integrations.php:169
  - STORAGE call to update_option("sbi_statuses", $sbi_statuses_option) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/class-sb-instagram-oembed.php:287
  - STORAGE call to update_post_meta($post_ID, "_sbi_oembed_done_checking", 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/class-sb-instagram-oembed.php:314
  - STORAGE call to delete_post_meta($post_ID, $post_meta_key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/class-sb-instagram-oembed.php:316
  - STORAGE call to delete_post_meta($post_ID, str_replace("_oembed_", "_oembed_time_", $post_meta_key)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/class-sb-instagram-posts-manager.php:218
  - STORAGE call to update_option("sb_instagram_errors", $this->errors, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/class-sb-instagram-posts-manager.php:239
  - STORAGE call to update_option("sb_instagram_errors", $this->errors, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/class-sb-instagram-posts-manager.php:574
  - STORAGE call to update_option("sb_instagram_settings", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/class-sb-instagram-posts-manager.php:598
  - STORAGE call to delete_option("sbi_hashtag_ids") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/class-sb-instagram-posts-manager.php:599
  - STORAGE call to delete_option("sbi_local_avatars") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/class-sb-instagram-posts-manager.php:641
  - STORAGE call to update_option("sbi_top_api_calls", $list_of_top_hashtags) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/class-sb-instagram-posts-manager.php:691
  - STORAGE call to update_option("sb_instagram_errors", $this->errors, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/class-sb-instagram-posts-manager.php:750
  - STORAGE call to update_option("sb_instagram_errors", $this->errors, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/class-sb-instagram-posts-manager.php:762
  - STORAGE call to delete_option("sb_instagram_errors") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/class-sb-instagram-posts-manager.php:776
  - STORAGE call to update_option("sb_instagram_errors", $this->errors, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/class-sb-instagram-posts-manager.php:785
  - STORAGE call to update_option("sb_instagram_error_page", $id, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/class-sb-instagram-posts-manager.php:956
  - STORAGE call to update_option("sb_instagram_errors", $this->errors, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/class-sb-instagram-posts-manager.php:1087
  - STORAGE call to update_option("sb_instagram_errors", $this->errors, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/class-sb-instagram-single.php:191
  - STORAGE call to set_transient("sbi_delay_oembeds_" . $this->permalink_id, true, 300) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
inc/class-sb-instagram-single.php:219
  - STORAGE call to update_option("sbi_single_cache", $this->encryption->encrypt(sbi_json_encode($stored_option)), false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/if-functions.php:1571
  - STORAGE call to update_option("sbi_dismiss_critical_notice", 1, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/if-functions.php:1673
  - STORAGE call to update_option($option_name, $option_value, $autoloadtrue) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
instagram-feed.php:428
  - STORAGE call to update_option("sbi_statuses", $sbi_statuses_option) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
instagram-feed.php:524
  - STORAGE call to set_transient("instagram_feed_rating_notice_waiting", "waiting", $time) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
instagram-feed.php:525
  - STORAGE call to update_option("sbi_rating_notice", "pending", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
instagram-feed.php:528
  - STORAGE call to update_option("sbi_statuses", $sbi_statuses_option, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
instagram-feed.php:532
  - STORAGE call to update_option("sbi_db_version", SBI_DBVERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
instagram-feed.php:538
  - STORAGE call to update_option("sbi_db_version", SBI_DBVERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
instagram-feed.php:546
  - STORAGE call to update_option("sbi_db_version", SBI_DBVERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
instagram-feed.php:558
  - STORAGE call to delete_option("sb_instagram_errors") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:561
  - STORAGE call to update_option("sbi_db_version", SBI_DBVERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
instagram-feed.php:573
  - STORAGE call to update_option("sbi_db_version", SBI_DBVERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
instagram-feed.php:589
  - STORAGE call to update_option("sbi_statuses", $sbi_statuses_option) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
instagram-feed.php:591
  - STORAGE call to update_option("sbi_db_version", SBI_DBVERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
instagram-feed.php:606
  - STORAGE call to update_option("sbi_statuses", $sbi_statuses_option) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
instagram-feed.php:610
  - STORAGE call to update_option("sbi_db_version", SBI_DBVERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
instagram-feed.php:619
  - STORAGE call to update_option("sbi_db_version", SBI_DBVERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
instagram-feed.php:626
  - STORAGE call to update_option("sbi_db_version", SBI_DBVERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
instagram-feed.php:640
  - STORAGE call to update_option("sbi_db_version", SBI_DBVERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
instagram-feed.php:658
  - STORAGE call to update_option("sb_instagram_settings", $db) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
instagram-feed.php:671
  - STORAGE call to update_option("sbi_legacy_feed_settings", sbi_json_encode($base_settings), false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
instagram-feed.php:767
  - STORAGE call to update_option("sbi_statuses", $sbi_statuses_option, true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
instagram-feed.php:772
  - STORAGE call to update_option("sbi_db_version", SBI_DBVERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
instagram-feed.php:848
  - STORAGE call to delete_option("sbi_single_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:849
  - STORAGE call to delete_transient("sbinst_comment_cache") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).
  - Data types: site
instagram-feed.php:850
  - STORAGE call to delete_option("sbi_oembed_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:883
  - STORAGE call to delete_option("sbi_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:918
  - STORAGE call to delete_option("sbi_hashtag_ids") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:919
  - STORAGE call to delete_option("sbi_local_avatars") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:949
  - STORAGE call to delete_option("sb_instagram_errors") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:950
  - STORAGE call to delete_option("sbi_usage_tracking_config") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:951
  - STORAGE call to delete_option("sbi_usage_tracking") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:952
  - STORAGE call to delete_option("sbi_oembed_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:953
  - STORAGE call to delete_option("sbi_top_api_calls") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:954
  - STORAGE call to delete_option("sbi_rating_notice") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:955
  - STORAGE call to delete_option("sbi_refresh_report") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:956
  - STORAGE call to delete_option("sbi_welcome_seen") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:957
  - STORAGE call to delete_option("sbi_notifications") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:958
  - STORAGE call to delete_option("sbi_newuser_notifications") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:959
  - STORAGE call to delete_option("sbi_statuses") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:960
  - STORAGE call to delete_option("sb_instagram_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:961
  - STORAGE call to delete_option("sbi_ver") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:962
  - STORAGE call to delete_option("sb_expired_tokens") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:963
  - STORAGE call to delete_option("sbi_cron_report") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:964
  - STORAGE call to delete_option("sb_instagram_ajax_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:965
  - STORAGE call to delete_option("sbi_legacy_feed_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:966
  - STORAGE call to delete_option("sbi_check_license_api_when_expires") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:967
  - STORAGE call to delete_option("sbi_license_last_check_timestamp") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:968
  - STORAGE call to delete_option("sbi_license_data") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:969
  - STORAGE call to delete_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:970
  - STORAGE call to delete_option("sbi_license_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:1055
  - STORAGE call to update_option("sbi_refresh_report", $report, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option 

admin/SBI_Support.php:471
  - CRYPTOGRAPHY call to $manager->remote_encrypt($source["access_token"]).
admin/SBI_Support.php:517
  - CRYPTOGRAPHY call to $manager->remote_encrypt($source["access_token"]).
admin/SBI_Support.php:746
  - CRYPTOGRAPHY call to $manager->remote_encrypt($value).
admin/SBI_Support.php:769
  - CRYPTOGRAPHY call to sbi_encrypt_decrypt("encrypt", $license_key).
admin/SBI_Upgrader.php:161
  - CRYPTOGRAPHY call to hash("sha512", wp_rand()).
admin/SBI_Upgrader.php:213
  - CRYPTOGRAPHY call to hash_equals($oth, $post_oth). Passed arguments: 0: $a (string), 1: $b (string). Returns (bool).
inc/Builder/SBI_Db.php:221
  - CRYPTOGRAPHY call to $encryption->maybe_encrypt($to_update["access_token"]).
inc/Builder/SBI_Db.php:229
  - CRYPTOGRAPHY call to $encryption->maybe_encrypt($to_update["info"]).
inc/Builder/SBI_Db.php:307
  - CRYPTOGRAPHY call to $encryption->maybe_encrypt($to_insert["access_token"]).
inc/Builder/SBI_Db.php:315
  - CRYPTOGRAPHY call to $encryption->maybe_encrypt($to_insert["info"]).
inc/Builder/SBI_Feed_Builder.php:1619
  - CRYPTOGRAPHY call to $encryption->decrypt($source["info"]).
inc/Builder/SBI_Feed_Builder.php:1637
  - CRYPTOGRAPHY call to $encryption->decrypt($source["access_token"]).
inc/Builder/SBI_Feed_Saver.php:404
  - CRYPTOGRAPHY call to $encryption->decrypt($source["info"]).
inc/Builder/SBI_Feed_Saver.php:413
  - CRYPTOGRAPHY call to $encryption->decrypt($source["access_token"]).
inc/Builder/SBI_Feed_Saver.php:416
  - CRYPTOGRAPHY call to $encryption->decrypt($source["info"]).
inc/Builder/SBI_Source.php:357
  - CRYPTOGRAPHY call to $encryption->decrypt($results[0]["info"]).
inc/Builder/SBI_Source.php:841
  - CRYPTOGRAPHY call to $encryption->decrypt($source_datum["info"]).
inc/admin/addon-functions.php:197
  - CRYPTOGRAPHY call to hash("sha256", $secret_key).
inc/admin/addon-functions.php:200
  - CRYPTOGRAPHY call to hash("sha256", $secret_iv).
inc/admin/addon-functions.php:203
  - CRYPTOGRAPHY call to openssl_encrypt($string, $encrypt_method, $key, 0, $iv).
inc/admin/addon-functions.php:206
  - CRYPTOGRAPHY call to openssl_decrypt(base64_decode($string), $encrypt_method, $key, 0, $iv).
inc/class-sb-instagram-cache.php:226
  - CRYPTOGRAPHY call to $this->maybe_decrypt($return).
inc/class-sb-instagram-cache.php:310
  - CRYPTOGRAPHY call to $this->maybe_encrypt($cache_value).
inc/class-sb-instagram-cache.php:442
  - CRYPTOGRAPHY call to $this->maybe_decrypt($results[0]["cache_value"]).
inc/class-sb-instagram-cache.php:560
  - CRYPTOGRAPHY call to $this->encryption->encrypt($value).
inc/class-sb-instagram-cache.php:580
  - CRYPTOGRAPHY call to $this->encryption->decrypt($value).
inc/class-sb-instagram-connected-account.php:337
  - CRYPTOGRAPHY call to $encryption->encrypt($access_token).
inc/class-sb-instagram-connected-account.php:353
  - CRYPTOGRAPHY call to $encryption->decrypt($access_token).
inc/class-sb-instagram-data-encryption.php:69
  - CRYPTOGRAPHY call to openssl_encrypt($value . $this->salt, $method, $this->key, 0, $iv).
inc/class-sb-instagram-data-encryption.php:100
  - CRYPTOGRAPHY call to openssl_decrypt($raw_value, $method, $this->key, 0, $iv).
inc/class-sb-instagram-data-encryption.php:119
  - CRYPTOGRAPHY call to $this->decrypt($raw_value).
inc/class-sb-instagram-data-encryption.php:122
  - CRYPTOGRAPHY call to $this->encrypt($maybe_decrypted).
inc/class-sb-instagram-data-encryption.php:125
  - CRYPTOGRAPHY call to $this->encrypt($raw_value).
inc/class-sb-instagram-data-manager.php:68
  - CRYPTOGRAPHY call to $this->encrypt_json_in_sbi_instagram_posts().
inc/class-sb-instagram-data-manager.php:88
  - CRYPTOGRAPHY call to $this->delete_hashtag_data().
inc/class-sb-instagram-data-manager.php:213
  - CRYPTOGRAPHY call to $encryption->encrypt($post["json_data"]).
inc/class-sb-instagram-data-manager.php:320
  - CRYPTOGRAPHY call to $encryption->encrypt($value).
inc/class-sb-instagram-data-manager.php:332
  - CRYPTOGRAPHY call to $this->encrypt_json_in_sbi_instagram_posts().
inc/class-sb-instagram-data-manager.php:336
  - CRYPTOGRAPHY call to $encryption->decrypt($stored_option).
inc/class-sb-instagram-data-manager.php:338
  - CRYPTOGRAPHY call to $encryption->encrypt(sbi_json_encode($stored_option)).
inc/class-sb-instagram-data-manager.php:343
  - CRYPTOGRAPHY call to $encryption->decrypt($comment_cache_transient).
inc/class-sb-instagram-data-manager.php:350
  - CRYPTOGRAPHY call to $encryption->encrypt(sbi_json_encode($comment_cache)).
inc/class-sb-instagram-data-manager.php:354
  - CRYPTOGRAPHY call to $encryption->decrypt($ids).
inc/class-sb-instagram-data-manager.php:357
  - CRYPTOGRAPHY call to $encryption->encrypt(sbi_json_encode($ids)).
inc/class-sb-instagram-data-manager.php:400
  - CRYPTOGRAPHY call to $local_encrypt->decrypt($encrypted_value).
inc/class-sb-instagram-data-manager.php:424
  - CRYPTOGRAPHY call to $remote_encrypt->encrypt($raw_value).
inc/class-sb-instagram-feed.php:710
  - CRYPTOGRAPHY call to $connection->has_encryption_error().
inc/class-sb-instagram-feed.php:859
  - CRYPTOGRAPHY call to $connection->has_encryption_error().
inc/class-sb-instagram-feed.php:945
  - CRYPTOGRAPHY call to $connection->has_encryption_error().
inc/class-sb-instagram-post.php:163
  - CRYPTOGRAPHY call to $this->encryption->encrypt(sbi_json_encode($this->instagram_api_data)).
inc/class-sb-instagram-post.php:400
  - CRYPTOGRAPHY call to $this->encryption->encrypt(sbi_json_encode($this->instagram_api_data)).
inc/class-sb-instagram-posts-manager.php:1194
  - CRYPTOGRAPHY call to $manager->delete_hashtag_data().
inc/class-sb-instagram-posts-manager.php:1196
  - CRYPTOGRAPHY call to $manager->delete_non_hashtag_sbi_instagram_posts($to_delete_connected_account["username"]).
inc/class-sb-instagram-single.php:212
  - CRYPTOGRAPHY call to $this->encryption->decrypt($stored_option).
inc/class-sb-instagram-single.php:219
  - CRYPTOGRAPHY call to $this->encryption->encrypt(sbi_json_encode($stored_option)).
inc/class-sb-instagram-single.php:260
  - CRYPTOGRAPHY call to $this->encryption->decrypt($stored_option).
inc/class-sb-instagram-single.php:284
  - CRYPTOGRAPHY call to $this->encryption->decrypt($results[0]).
inc/if-functions.php:944
  - CRYPTOGRAPHY call to $encryption->decrypt($maybe_dirty).
inc/if-functions.php:1149
  - CRYPTOGRAPHY call to $manager->delete_hashtag_data(). 

admin/SBI_Global_Settings.php:89
  - DELETION call to delete_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
admin/SBI_Global_Settings.php:90
  - DELETION call to delete_option("sbi_license_data") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
admin/SBI_Global_Settings.php:91
  - DELETION call to delete_option("sbi_license_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
admin/SBI_Global_Settings.php:101
  - DELETION call to delete_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
admin/SBI_Global_Settings.php:102
  - DELETION call to delete_option("sbi_license_data") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
admin/SBI_Global_Settings.php:103
  - DELETION call to delete_option("sbi_license_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
admin/SBI_Global_Settings.php:359
  - DELETION call to delete_option("sbi_license_status_" . $option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
admin/SBI_Global_Settings.php:471
  - DELETION call to delete_option("sbi_cron_report") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
admin/SBI_Global_Settings.php:552
  - DELETION call to delete_option("sbi_top_api_calls") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
admin/SBI_Upgrader.php:218
  - DELETION call to delete_option("sbi_one_click_upgrade") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/Builder/SBI_Db.php:801
  - DELETION call to delete_option("sbi_legacy_feed_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/Builder/SBI_Db.php:839
  - DELETION call to delete_option("sbi_statuses") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/Builder/SBI_Db.php:840
  - DELETION call to delete_option("sb_instagram_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/Builder/SBI_Db.php:841
  - DELETION call to delete_option("sbi_ver") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/Builder/SBI_Db.php:842
  - DELETION call to delete_option("sb_expired_tokens") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/Builder/SBI_Db.php:843
  - DELETION call to delete_option("sbi_cron_report") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/Builder/SBI_Db.php:844
  - DELETION call to delete_option("sb_instagram_errors") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/Builder/SBI_Db.php:845
  - DELETION call to delete_option("sb_instagram_ajax_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/Builder/SBI_Db.php:846
  - DELETION call to delete_option("sbi_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/Builder/SBI_Db.php:913
  - DELETION call to delete_option("sbi_hashtag_ids") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/Builder/SBI_Db.php:914
  - DELETION call to delete_option("sb_instagram_errors") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/Builder/SBI_Db.php:915
  - DELETION call to delete_option("sbi_usage_tracking_config") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/Builder/SBI_Db.php:916
  - DELETION call to delete_option("sbi_usage_tracking") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/Builder/SBI_Db.php:917
  - DELETION call to delete_option("sbi_oembed_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/Builder/SBI_Db.php:918
  - DELETION call to delete_option("sbi_top_api_calls") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/Builder/SBI_Db.php:919
  - DELETION call to delete_option("sbi_rating_notice") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/Builder/SBI_Db.php:920
  - DELETION call to delete_option("sbi_refresh_report") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/Builder/SBI_Db.php:921
  - DELETION call to delete_option("sbi_welcome_seen") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/Builder/SBI_Db.php:922
  - DELETION call to delete_option("sbi_notifications") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/Builder/SBI_Db.php:923
  - DELETION call to delete_option("sbi_newuser_notifications") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/admin/class-sbi-new-user.php:486
  - DELETION call to delete_option("sbi_review_consent") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/class-sb-instagram-api-connect.php:224
  - DELETION call to delete_option("sbi_dismiss_critical_notice") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/class-sb-instagram-api-connect.php:244
  - DELETION call to delete_option("sbi_dismiss_critical_notice") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/class-sb-instagram-data-manager.php:117
  - DELETION call to delete_option("sbi_top_api_calls") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/class-sb-instagram-data-manager.php:295
  - DELETION call to delete_option("sbi_single_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/class-sb-instagram-oembed.php:314
  - DELETION call to delete_post_meta($post_ID, $post_meta_key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/class-sb-instagram-oembed.php:316
  - DELETION call to delete_post_meta($post_ID, str_replace("_oembed_", "_oembed_time_", $post_meta_key)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/class-sb-instagram-posts-manager.php:598
  - DELETION call to delete_option("sbi_hashtag_ids") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/class-sb-instagram-posts-manager.php:599
  - DELETION call to delete_option("sbi_local_avatars") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/class-sb-instagram-posts-manager.php:762
  - DELETION call to delete_option("sb_instagram_errors") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:558
  - DELETION call to delete_option("sb_instagram_errors") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:848
  - DELETION call to delete_option("sbi_single_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:850
  - DELETION call to delete_option("sbi_oembed_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:883
  - DELETION call to delete_option("sbi_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:918
  - DELETION call to delete_option("sbi_hashtag_ids") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:919
  - DELETION call to delete_option("sbi_local_avatars") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:949
  - DELETION call to delete_option("sb_instagram_errors") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:950
  - DELETION call to delete_option("sbi_usage_tracking_config") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:951
  - DELETION call to delete_option("sbi_usage_tracking") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:952
  - DELETION call to delete_option("sbi_oembed_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:953
  - DELETION call to delete_option("sbi_top_api_calls") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:954
  - DELETION call to delete_option("sbi_rating_notice") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:955
  - DELETION call to delete_option("sbi_refresh_report") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:956
  - DELETION call to delete_option("sbi_welcome_seen") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:957
  - DELETION call to delete_option("sbi_notifications") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:958
  - DELETION call to delete_option("sbi_newuser_notifications") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:959
  - DELETION call to delete_option("sbi_statuses") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:960
  - DELETION call to delete_option("sb_instagram_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:961
  - DELETION call to delete_option("sbi_ver") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:962
  - DELETION call to delete_option("sb_expired_tokens") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:963
  - DELETION call to delete_option("sbi_cron_report") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:964
  - DELETION call to delete_option("sb_instagram_ajax_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:965
  - DELETION call to delete_option("sbi_legacy_feed_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:966
  - DELETION call to delete_option("sbi_check_license_api_when_expires") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:967
  - DELETION call to delete_option("sbi_license_last_check_timestamp") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:968
  - DELETION call to delete_option("sbi_license_data") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:969
  - DELETION call to delete_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:970
  - DELETION call to delete_option("sbi_license_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

instagram-feed.php:848
  - Uninstall deletion call: DELETION call to delete_option("sbi_single_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:849
  - Uninstall deletion call: DELETION call to delete_transient("sbinst_comment_cache") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).
  - Data types: site
instagram-feed.php:850
  - Uninstall deletion call: DELETION call to delete_option("sbi_oembed_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:883
  - Uninstall deletion call: DELETION call to delete_option("sbi_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:918
  - Uninstall deletion call: DELETION call to delete_option("sbi_hashtag_ids") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:919
  - Uninstall deletion call: DELETION call to delete_option("sbi_local_avatars") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:949
  - Uninstall deletion call: DELETION call to delete_option("sb_instagram_errors") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:950
  - Uninstall deletion call: DELETION call to delete_option("sbi_usage_tracking_config") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:951
  - Uninstall deletion call: DELETION call to delete_option("sbi_usage_tracking") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:952
  - Uninstall deletion call: DELETION call to delete_option("sbi_oembed_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:953
  - Uninstall deletion call: DELETION call to delete_option("sbi_top_api_calls") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:954
  - Uninstall deletion call: DELETION call to delete_option("sbi_rating_notice") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:955
  - Uninstall deletion call: DELETION call to delete_option("sbi_refresh_report") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:956
  - Uninstall deletion call: DELETION call to delete_option("sbi_welcome_seen") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:957
  - Uninstall deletion call: DELETION call to delete_option("sbi_notifications") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:958
  - Uninstall deletion call: DELETION call to delete_option("sbi_newuser_notifications") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:959
  - Uninstall deletion call: DELETION call to delete_option("sbi_statuses") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:960
  - Uninstall deletion call: DELETION call to delete_option("sb_instagram_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:961
  - Uninstall deletion call: DELETION call to delete_option("sbi_ver") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:962
  - Uninstall deletion call: DELETION call to delete_option("sb_expired_tokens") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:963
  - Uninstall deletion call: DELETION call to delete_option("sbi_cron_report") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:964
  - Uninstall deletion call: DELETION call to delete_option("sb_instagram_ajax_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:965
  - Uninstall deletion call: DELETION call to delete_option("sbi_legacy_feed_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:966
  - Uninstall deletion call: DELETION call to delete_option("sbi_check_license_api_when_expires") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:967
  - Uninstall deletion call: DELETION call to delete_option("sbi_license_last_check_timestamp") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:968
  - Uninstall deletion call: DELETION call to delete_option("sbi_license_data") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:969
  - Uninstall deletion call: DELETION call to delete_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
instagram-feed.php:970
  - Uninstall deletion call: DELETION call to delete_option("sbi_license_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

By data type:
email
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
file
	PHPRetrievalDetector.file_get_contents($_FILES["file"]["tmp_name"]) - {'file'}
	PHPStorageDetector.fwrite($file, $feed) - {'file'}
first_name
	VariableDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	VariableDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	VariableDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	VariableDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	VariableDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	VariableDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	VariableDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	VariableDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	VariableDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	VariableDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	VariableDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	VariableDetector.(unknown) - {'first_name', 'user_meta', 'user'}
none
	GenericEncryptionDetector.$encryption->decrypt($stored_option) - set()
	GenericEncryptionDetector.$connection->has_encryption_error() - set()
	HashDetector.(unknown) - set()
	GenericEncryptionDetector.$this->maybe_decrypt($return) - set()
	GenericEncryptionDetector.$encryption->encrypt($access_token) - set()
	GenericEncryptionDetector.$this->maybe_encrypt($cache_value) - set()
	GenericEncryptionDetector.$encryption->decrypt($ids) - set()
	GenericEncryptionDetector.$encryption->encrypt(sbi_json_encode($ids)) - set()
	GenericEncryptionDetector.$this->encrypt($raw_value) - set()
	GenericEncryptionDetector.$this->encrypt_json_in_sbi_instagram_posts() - set()
	GenericEncryptionDetector.$this->encrypt($maybe_decrypted) - set()
	OpenSSLDetector.(unknown) - set()
	GenericEncryptionDetector.$this->decrypt($raw_value) - set()
	GenericEncryptionDetector.$manager->remote_encrypt($source["access_token"]) - set()
	GenericEncryptionDetector.$encryption->encrypt(sbi_json_encode($comment_cache)) - set()
	GenericEncryptionDetector.$encryption->decrypt($results[0]["info"]) - set()
	OpenSSLDetector.(unknown) - set()
	GenericEncryptionDetector.$this->encryption->decrypt($value) - set()
	GenericEncryptionDetector.$manager->remote_encrypt($source["access_token"]) - set()
	GenericEncryptionDetector.$encryption->maybe_encrypt($to_update["info"]) - set()
	OpenSSLDetector.(unknown) - set()
	GenericEncryptionDetector.$manager->remote_encrypt($value) - set()
	GenericEncryptionDetector.$encryption->maybe_encrypt($to_update["access_token"]) - set()
	GenericEncryptionDetector.$encryption->maybe_encrypt($to_insert["access_token"]) - set()
	HashDetector.(unknown) - set()
	GenericEncryptionDetector.$encryption->encrypt($value) - set()
	GenericEncryptionDetector.$local_encrypt->decrypt($encrypted_value) - set()
	GenericEncryptionDetector.hash_equals($oth, $post_oth) - set()
	GenericEncryptionDetector.$this->encrypt_json_in_sbi_instagram_posts() - set()
	HashDetector.(unknown) - set()
	GenericEncryptionDetector.$connection->has_encryption_error() - set()
	GenericEncryptionDetector.sbi_encrypt_decrypt("encrypt", $license_key) - set()
	GenericEncryptionDetector.$encryption->encrypt($post["json_data"]) - set()
	OpenSSLDetector.(unknown) - set()
	GenericEncryptionDetector.openssl_encrypt($string, $encrypt_method, $key, 0, $iv) - set()
	GenericEncryptionDetector.hash("sha256", $secret_key) - set()
	GenericEncryptionDetector.$encryption->decrypt($source["access_token"]) - set()
	GenericEncryptionDetector.hash("sha256", $secret_iv) - set()
	GenericEncryptionDetector.$encryption->encrypt(sbi_json_encode($stored_option)) - set()
	GenericEncryptionDetector.$manager->delete_non_hashtag_sbi_instagram_posts($to_delete_connected_account["username"]) - set()
	GenericEncryptionDetector.$encryption->decrypt($source["access_token"]) - set()
	GenericEncryptionDetector.$this->encryption->decrypt($stored_option) - set()
	GenericEncryptionDetector.$this->encryption->decrypt($stored_option) - set()
	GenericEncryptionDetector.$manager->delete_hashtag_data() - set()
	GenericEncryptionDetector.$encryption->decrypt($source["info"]) - set()
	GenericEncryptionDetector.$this->maybe_decrypt($results[0]["cache_value"]) - set()
	GenericEncryptionDetector.openssl_encrypt($value . $this->salt, $method, $this->key, 0, $iv) - set()
	GenericEncryptionDetector.$this->encryption->encrypt(sbi_json_encode($stored_option)) - set()
	GenericEncryptionDetector.hash("sha512", wp_rand()) - set()
	GenericEncryptionDetector.$encryption->decrypt($maybe_dirty) - set()
	GenericEncryptionDetector.$encryption->decrypt($source["info"]) - set()
	GenericEncryptionDetector.$encryption->decrypt($source_datum["info"]) - set()
	GenericEncryptionDetector.$this->encryption->encrypt($value) - set()
	GenericEncryptionDetector.$encryption->decrypt($comment_cache_transient) - set()
	GenericEncryptionDetector.$remote_encrypt->encrypt($raw_value) - set()
	GenericEncryptionDetector.$encryption->maybe_encrypt($to_insert["info"]) - set()
	GenericEncryptionDetector.$encryption->decrypt($source["info"]) - set()
	GenericEncryptionDetector.$this->encryption->decrypt($results[0]) - set()
	GenericEncryptionDetector.openssl_decrypt($raw_value, $method, $this->key, 0, $iv) - set()
	GenericEncryptionDetector.$this->encryption->encrypt(sbi_json_encode($this->instagram_api_data)) - set()
	GenericEncryptionDetector.$this->delete_hashtag_data() - set()
	GenericEncryptionDetector.$manager->delete_hashtag_data() - set()
	GenericEncryptionDetector.$connection->has_encryption_error() - set()
	GenericEncryptionDetector.$encryption->decrypt($access_token) - set()
	GenericEncryptionDetector.openssl_decrypt(base64_decode($string), $encrypt_method, $key, 0, $iv) - set()
	GenericEncryptionDetector.$this->encryption->encrypt(sbi_json_encode($this->instagram_api_data)) - set()
option
	WordPressStorageDetector.delete_option("sbi_dismiss_critical_notice") - {'option'}
	WordPressStorageDetector.delete_option("sbi_legacy_feed_settings") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_usage_tracking", ["last_send" => 0, "enabled" => sbi_is_pro_version()]) - {'option'}
	WordPressStorageDetector.update_option("sbi_statuses", $sbi_statuses_option, false) - {'option'}
	DeletionDetector.delete_option("sbi_notifications") - {'option'}
	WordPressStorageDetector.update_option("sbi_one_click_upgrade", $oth) - {'option'}
	DeletionDetector.delete_option("sbi_usage_tracking_config") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_license_key") - {'option'}
	DeletionDetector.delete_option("sb_expired_tokens") - {'option'}
	UninstallDetector.delete_option("sbi_usage_tracking_config") - {'option'}
	WordPressStorageDetector.update_option("sbi_cron_report", $report, false) - {'option'}
	WordPressRetrievalDetector.get_option("sbi_statuses", []) - {'option'}
	UninstallDetector.delete_option("sbi_top_api_calls") - {'option'}
	WordPressStorageDetector.delete_option("sbi_ver") - {'option'}
	DeletionDetector.delete_option("sbi_ver") - {'option'}
	WordPressStorageDetector.update_option("cff_oembed_token", $newly_retrieved_oembed_connection_data) - {'option'}
	WordPressRetrievalDetector.$this->get_option() - {'option'}
	WordPressStorageDetector.update_option("sbi_db_version", SBI_DBVERSION) - {'option'}
	WordPressRetrievalDetector.get_option("time_format") - {'option'}
	WordPressStorageDetector.update_option("sbi_license_status", $license_data["license"]) - {'option'}
	WordPressStorageDetector.delete_option("sb_instagram_settings") - {'option'}
	WordPressStorageDetector.delete_option("sb_instagram_errors") - {'option'}
	WordPressStorageDetector.update_option("sbi_rating_notice", "pending", false) - {'option'}
	WordPressStorageDetector.update_option("sbi_oembed_token", $oembed_settings) - {'option'}
	WordPressRetrievalDetector.get_option("sbi_statuses", []) - {'option'}
	WordPressRetrievalDetector.get_option("sbi_statuses", []) - {'option'}
	WordPressRetrievalDetector.$this->get_option() - {'option'}
	WordPressRetrievalDetector.get_option("sbi_usage_tracking_config", false) - {'option'}
	WordPressStorageDetector.update_option("sbi_license_data", $license_data) - {'option'}
	WordPressRetrievalDetector.get_option("sbi_license_key") - {'option'}
	WordPressStorageDetector.update_option("sbi_oembed_token", $newly_retrieved_oembed_connection_data) - {'option'}
	DeletionDetector.delete_option("sbi_legacy_feed_settings") - {'option'}
	DeletionDetector.delete_option("sb_instagram_settings") - {'option'}
	WordPressStorageDetector.delete_option("sbi_cron_report") - {'option'}
	WordPressStorageDetector.update_option("sbi_license_key", $license) - {'option'}
	WordPressRetrievalDetector.get_option("sbi_license_key") - {'option'}
	WordPressStorageDetector.update_option("cff_oembed_token", $oembed_settings) - {'option'}
	WordPressStorageDetector.delete_option("sbi_oembed_token") - {'option'}
	WordPressRetrievalDetector.get_option("sb_instagram_settings") - {'option'}
	WordPressStorageDetector.delete_option("sbi_statuses") - {'option'}
	WordPressStorageDetector.update_option("sbi_db_version", ) - {'option'}
	UninstallDetector.delete_option("sbi_oembed_token") - {'option'}
	WordPressStorageDetector.update_option("sbi_license_status", $license_data["license"]) - {'option'}
	WordPressStorageDetector.update_option("sbi_db_version", SBI_DBVERSION) - {'option'}
	WordPressStorageDetector.delete_option("sbi_newuser_notifications") - {'option'}
	WordPressStorageDetector.update_option("sbi_statuses", $sbi_statuses_option) - {'option'}
	WordPressRetrievalDetector.get_option("sbi_license_key") - {'option'}
	WordPressStorageDetector.delete_option("sb_instagram_ajax_status") - {'option'}
	WordPressStorageDetector.delete_option("sbi_one_click_upgrade") - {'option'}
	WordPressRetrievalDetector.get_option("gmt_offset", 0) - {'option'}
	DeletionDetector.delete_option("sbi_single_cache") - {'option'}
	DeletionDetector.delete_option("sbi_usage_tracking_config") - {'option'}
	UninstallDetector.delete_option("sbi_notifications") - {'option'}
	WordPressStorageDetector.update_option("sbi_statuses", $sbi_statuses_option, false) - {'option'}
	WordPressStorageDetector.delete_option("sbi_hashtag_ids") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_statuses", []) - {'option'}
	WordPressStorageDetector.update_option("sb_instagram_settings", $options) - {'option'}
	DeletionDetector.delete_option("sbi_top_api_calls") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_license_status") - {'option'}
	WordPressRetrievalDetector.get_option("sb_instagram_settings") - {'option'}
	WordPressStorageDetector.delete_option("sbi_dismiss_critical_notice") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_statuses", []) - {'option'}
	WordPressRetrievalDetector.get_option("sb_instagram_settings") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_license_key") - {'option'}
	WordPressStorageDetector.update_option("sb_instagram_errors", $this->errors, false) - {'option'}
	WordPressStorageDetector.delete_option("sbi_usage_tracking") - {'option'}
	DeletionDetector.delete_option("sbi_license_status") - {'option'}
	WordPressStorageDetector.update_option("sb_instagram_errors", $this->errors, false) - {'option'}
	WordPressStorageDetector.update_option($this->option_name(), ["update" => time(), "feed" => $feed, "events" => $option["events"], "dismissed" => $option["dismissed"]]) - {'option'}
	WordPressRetrievalDetector.get_option("sbi_db_version", 0) - {'option'}
	WordPressRetrievalDetector.get_option("admin_email", $to_array[0]) - {'option'}
	WordPressStorageDetector.delete_option("sbi_top_api_calls") - {'option'}
	WordPressStorageDetector.update_option($this->option_name(), ["update" => $option["update"], "feed" => $option["feed"], "events" => array_merge($notification, $option["events"]), "dismissed" => $option["dismissed"]]) - {'option'}
	WordPressStorageDetector.update_option("sbi_statuses", $sbi_statuses_option) - {'option'}
	WordPressStorageDetector.update_option("sb_instagram_errors", $this->errors, false) - {'option'}
	WordPressStorageDetector.delete_option("sbi_usage_tracking_config") - {'option'}
	DeletionDetector.delete_option("sbi_local_avatars") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_license_key") - {'option'}
	DeletionDetector.delete_option("sbi_ver") - {'option'}
	WordPressStorageDetector.delete_option("sb_instagram_errors") - {'option'}
	UninstallDetector.delete_option("sb_instagram_settings") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_oembed_token", []) - {'option'}
	WordPressStorageDetector.delete_option("sbi_newuser_notifications") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_cron_report", []) - {'option'}
	WordPressRetrievalDetector.get_option($option_name, $default) - {'option'}
	UninstallDetector.delete_option("sbi_oembed_token") - {'option'}
	WordPressStorageDetector.delete_option("sb_instagram_settings") - {'option'}
	WordPressStorageDetector.update_option("sbi_db_version", SBI_DBVERSION) - {'option'}
	DeletionDetector.delete_option("sbi_hashtag_ids") - {'option'}
	DeletionDetector.delete_option("sbi_single_cache") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_license_status") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_single_cache", []) - {'option'}
	DeletionDetector.delete_option("sbi_usage_tracking") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_statuses", []) - {'option'}
	WordPressRetrievalDetector.get_option("sbi_statuses", []) - {'option'}
	WordPressRetrievalDetector.get_option("sbi_single_cache", []) - {'option'}
	DeletionDetector.delete_option("sbi_license_data") - {'option'}
	WordPressStorageDetector.delete_option("sb_instagram_errors") - {'option'}
	WordPressStorageDetector.update_option("sb_instagram_errors", $this->errors, false) - {'option'}
	WordPressRetrievalDetector.get_option("sbi_oembed_token", []) - {'option'}
	WordPressStorageDetector.update_option("sbi_notifications", ["update" => $option["update"], "feed" => $option["feed"], "events" => array_merge($notification, $option["events"]), "dismissed" => $option["dismissed"]]) - {'option'}
	DeletionDetector.delete_option("sbi_review_consent") - {'option'}
	DeletionDetector.delete_option("sbi_oembed_token") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_license_key") - {'option'}
	DeletionDetector.delete_option("sb_instagram_errors") - {'option'}
	WordPressStorageDetector.delete_option("sbi_local_avatars") - {'option'}
	WordPressRetrievalDetector.get_option("sb_instagram_settings", []) - {'option'}
	WordPressRetrievalDetector.get_option("sbi_single_cache", []) - {'option'}
	WordPressRetrievalDetector.get_option("admin_email") - {'option'}
	WordPressStorageDetector.update_option("sb_instagram_errors", $this->errors, false) - {'option'}
	DeletionDetector.delete_option("sbi_license_key") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_hashtag_ids", []) - {'option'}
	WordPressRetrievalDetector.get_option("sb_instagram_settings") - {'option'}
	DeletionDetector.delete_option("sbi_top_api_calls") - {'option'}
	DeletionDetector.delete_option("sbi_license_data") - {'option'}
	UninstallDetector.delete_option("sbi_license_key") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_statuses", []) - {'option'}
	WordPressStorageDetector.update_option("sbi_dismiss_critical_notice", 1, false) - {'option'}
	DeletionDetector.delete_option("sbi_license_last_check_timestamp") - {'option'}
	WordPressStorageDetector.update_option("sbi_license_last_check_timestamp", time()) - {'option'}
	WordPressStorageDetector.delete_option("sbi_notifications") - {'option'}
	WordPressStorageDetector.update_option("sbi_statuses", $sbi_statuses_option) - {'option'}
	WordPressStorageDetector.delete_option("sbi_local_avatars") - {'option'}
	WordPressStorageDetector.update_option($option_name, $option_value, $autoloadtrue) - {'option'}
	DeletionDetector.delete_option("sbi_rating_notice") - {'option'}
	DeletionDetector.delete_option("sbi_oembed_token") - {'option'}
	WordPressStorageDetector.update_option("sbi_rating_notice", "dismissed", false) - {'option'}
	WordPressRetrievalDetector.get_option("sb_instagram_settings", []) - {'option'}
	WordPressStorageDetector.delete_option("sbi_statuses") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_statuses", []) - {'option'}
	WordPressRetrievalDetector.get_option("sbi_statuses", []) - {'option'}
	WordPressStorageDetector.update_option("sbi_statuses", $sbi_statuses_option, true) - {'option'}
	WordPressStorageDetector.update_option("sbi_db_version", SBI_DBVERSION) - {'option'}
	WordPressRetrievalDetector.get_option("admin_email") - {'option'}
	WordPressStorageDetector.update_option("sbi_top_api_calls", $list_of_top_hashtags) - {'option'}
	WordPressRetrievalDetector.get_option("sbi_statuses", []) - {'option'}
	WordPressStorageDetector.update_option("sbi_license_status", $sbi_license_data["license"]) - {'option'}
	DeletionDetector.delete_option("sbi_top_api_calls") - {'option'}
	WordPressStorageDetector.update_option("sb_instagram_errors", $this->errors, false) - {'option'}
	WordPressRetrievalDetector.$this->get_option() - {'option'}
	WordPressRetrievalDetector.get_option("sb_instagram_settings", []) - {'option'}
	WordPressStorageDetector.update_option("sbi_db_version", SBI_DBVERSION) - {'option'}
	WordPressRetrievalDetector.get_option("cff_oembed_token", []) - {'option'}
	WordPressRetrievalDetector.get_option("sbi_statuses", []) - {'option'}
	WordPressStorageDetector.delete_option("sbi_db_version") - {'option'}
	WordPressStorageDetector.update_option("sb_instagram_error_page", $id, false) - {'option'}
	WordPressStorageDetector.update_option("sbi_statuses", $sbi_statuses_option) - {'option'}
	UninstallDetector.delete_option("sbi_rating_notice") - {'option'}
	DeletionDetector.delete_option("sbi_cron_report") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_license_key") - {'option'}
	DeletionDetector.delete_option("sbi_check_license_api_when_expires") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_review_consent") - {'option'}
	WordPressRetrievalDetector.$this->get_option() - {'option'}
	WordPressRetrievalDetector.get_option("sbi_local_avatars", []) - {'option'}
	WordPressStorageDetector.update_option("sbi_db_version", SBI_DBVERSION) - {'option'}
	WordPressStorageDetector.update_option("sbi_hashtag_ids", $encryption->encrypt(sbi_json_encode($ids)), false) - {'option'}
	WordPressStorageDetector.update_option("sbi_notifications", $option) - {'option'}
	WordPressRetrievalDetector.get_option("sbi_oembed_token", []) - {'option'}
	DeletionDetector.delete_option("sbi_dismiss_critical_notice") - {'option'}
	WordPressStorageDetector.update_option("sbi_statuses", $sbi_statuses_option) - {'option'}
	WordPressStorageDetector.update_option("sbi_db_version", SBI_DBVERSION) - {'option'}
	WordPressRetrievalDetector.get_option("sbi_license_key") - {'option'}
	WordPressRetrievalDetector.$this->get_option() - {'option'}
	WordPressRetrievalDetector.get_option("sb_instagram_settings") - {'option'}
	WordPressRetrievalDetector.get_option("sb_instagram_errors", []) - {'option'}
	WordPressRetrievalDetector.get_option("sb_instagram_settings", []) - {'option'}
	DeletionDetector.delete_option("sbi_usage_tracking") - {'option'}
	WordPressRetrievalDetector.get_option("sb_instagram_settings", []) - {'option'}
	WordPressStorageDetector.update_option("sbi_db_version", SBI_DBVERSION) - {'option'}
	WordPressStorageDetector.delete_option("sb_instagram_errors") - {'option'}
	WordPressStorageDetector.delete_option("sbi_top_api_calls") - {'option'}
	WordPressStorageDetector.update_option("sbi_statuses", $sbi_statuses_option) - {'option'}
	WordPressRetrievalDetector.get_option("sb_instagram_settings", []) - {'option'}
	UninstallDetector.delete_option("sbi_hashtag_ids") - {'option'}
	DeletionDetector.delete_option("sbi_oembed_token") - {'option'}
	WordPressStorageDetector.update_option("sbi_license_status", "inactive") - {'option'}
	WordPressStorageDetector.delete_option("sbi_license_data") - {'option'}
	UninstallDetector.delete_option("sb_instagram_ajax_status") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_license_key") - {'option'}
	WordPressRetrievalDetector.get_option("sb_instagram_white_list_names", []) - {'option'}
	DeletionDetector.delete_option("sbi_db_version") - {'option'}
	WordPressStorageDetector.delete_option("sbi_rating_notice") - {'option'}
	WordPressStorageDetector.delete_option("sbi_license_key") - {'option'}
	WordPressStorageDetector.delete_option("sbi_license_status") - {'option'}
	WordPressStorageDetector.update_option("sbi_db_version", ) - {'option'}
	DeletionDetector.delete_option("sb_instagram_errors") - {'option'}
	UninstallDetector.delete_option("sb_instagram_errors") - {'option'}
	UninstallDetector.delete_option("sbi_db_version") - {'option'}
	DeletionDetector.delete_option("sbi_rating_notice") - {'option'}
	UninstallDetector.delete_option("sbi_check_license_api_when_expires") - {'option'}
	DeletionDetector.delete_option("sbi_statuses") - {'option'}
	UninstallDetector.delete_option("sbi_statuses") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_statuses", []) - {'option'}
	WordPressStorageDetector.delete_option("sbi_oembed_token") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_statuses", []) - {'option'}
	DeletionDetector.delete_option("sb_instagram_errors") - {'option'}
	WordPressStorageDetector.update_option("sbi_usage_tracking", $usage_tracking, false) - {'option'}
	WordPressStorageDetector.update_option("sbi_license_data", $license_data) - {'option'}
	WordPressStorageDetector.delete_option("sbi_license_data") - {'option'}
	WordPressStorageDetector.delete_option("sbi_single_cache") - {'option'}
	WordPressStorageDetector.update_option("sbi_legacy_feed_settings", $to_save_json, false) - {'option'}
	WordPressRetrievalDetector.get_option("sbi_statuses", []) - {'option'}
	WordPressStorageDetector.delete_option("sbi_license_status") - {'option'}
	DeletionDetector.delete_option("sbi_refresh_report") - {'option'}
	WordPressStorageDetector.update_option($permanent_cache["option_name"], $value, false) - {'option'}
	WordPressStorageDetector.delete_option("sbi_usage_tracking") - {'option'}
	WordPressStorageDetector.update_option("sbi_license_key", $sbi_license_key) - {'option'}
	WordPressStorageDetector.delete_option("sbi_usage_tracking_config") - {'option'}
	UninstallDetector.delete_option("sbi_license_last_check_timestamp") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_review_consent") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_statuses", []) - {'option'}
	WordPressStorageDetector.delete_option("sb_instagram_errors") - {'option'}
	DeletionDetector.delete_option("sb_instagram_settings") - {'option'}
	WordPressRetrievalDetector.get_option("sb_instagram_settings", []) - {'option'}
	WordPressStorageDetector.delete_option("sbi_license_status_" . $option_name) - {'option'}
	WordPressStorageDetector.update_option("sbi_single_cache", $encryption->encrypt(sbi_json_encode($stored_option)), false) - {'option'}
	WordPressStorageDetector.update_option("sbi_statuses", $sbi_statuses_option, false) - {'option'}
	WordPressStorageDetector.update_option("sbi_license_data", $sbi_license_data) - {'option'}
	WordPressStorageDetector.update_option("sbi_rating_notice", "pending", false) - {'option'}
	WordPressRetrievalDetector.get_option("sbi_review_consent") - {'option'}
	UninstallDetector.delete_option("sbi_welcome_seen") - {'option'}
	WordPressStorageDetector.update_option("sbi_license_data", $sbi_license_data) - {'option'}
	DeletionDetector.delete_option("sbi_notifications") - {'option'}
	DeletionDetector.delete_option("sbi_cron_report") - {'option'}
	DeletionDetector.delete_option("sbi_top_api_calls") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_statuses", []) - {'option'}
	WordPressStorageDetector.update_option("sbi_local_avatars", $avatars) - {'option'}
	WordPressRetrievalDetector.get_option("sbi_license_data") - {'option'}
	DeletionDetector.delete_option("sbi_license_status") - {'option'}
	WordPressStorageDetector.update_option("sbi_license_key", $license_key) - {'option'}
	WordPressRetrievalDetector.get_option("sbi_statuses", []) - {'option'}
	UninstallDetector.delete_option("sbi_single_cache") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_top_api_calls", []) - {'option'}
	DeletionDetector.delete_option("sbi_one_click_upgrade") - {'option'}
	DeletionDetector.delete_option("sbi_license_data") - {'option'}
	DeletionDetector.delete_option("sbi_license_status_" . $option_name) - {'option'}
	WordPressStorageDetector.update_option("sbi_single_cache", $this->encryption->encrypt(sbi_json_encode($stored_option)), false) - {'option'}
	DeletionDetector.delete_option("sbi_welcome_seen") - {'option'}
	DeletionDetector.delete_option("sbi_refresh_report") - {'option'}
	WordPressRetrievalDetector.get_option("sb_instagram_settings", false) - {'option'}
	WordPressRetrievalDetector.get_option("sbi_statuses", []) - {'option'}
	WordPressStorageDetector.update_option("sbi_rating_notice", "dismissed", false) - {'option'}
	DeletionDetector.delete_option("sbi_newuser_notifications") - {'option'}
	UninstallDetector.delete_option("sbi_ver") - {'option'}
	DeletionDetector.delete_option("sbi_license_status") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_review_consent") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_license_key") - {'option'}
	WordPressStorageDetector.delete_option("sbi_review_consent") - {'option'}
	DeletionDetector.delete_option("sb_instagram_errors") - {'option'}
	WordPressStorageDetector.delete_option("sbi_cron_report") - {'option'}
	UninstallDetector.delete_option("sbi_newuser_notifications") - {'option'}
	DeletionDetector.delete_option("sbi_license_key") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_statuses", []) - {'option'}
	WordPressStorageDetector.update_option("sbi_license_data", $sbi_license_data) - {'option'}
	WordPressStorageDetector.delete_option("sbi_top_api_calls") - {'option'}
	WordPressStorageDetector.update_option("sbi_license_status_" . $option_name, $license_data["license"]) - {'option'}
	WordPressStorageDetector.delete_option("sb_instagram_ajax_status") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_theme_styles", ["file" => "", "last_checked" => 0, "styles" => []]) - {'option'}
	WordPressStorageDetector.delete_option("sbi_license_status") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_statuses", []) - {'option'}
	WordPressStorageDetector.delete_option("sbi_legacy_feed_settings") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_license_last_check_timestamp") - {'option'}
	WordPressStorageDetector.delete_option("sbi_hashtag_ids") - {'option'}
	WordPressStorageDetector.update_option("sbi_refresh_report", $report, false) - {'option'}
	WordPressStorageDetector.delete_option("sbi_license_key") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_oembed_token", []) - {'option'}
	WordPressStorageDetector.update_option("sbi_statuses", $sbi_statuses_option, true) - {'option'}
	WordPressStorageDetector.delete_option("sbi_ver") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_license_key") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_statuses", []) - {'option'}
	WordPressRetrievalDetector.get_option("sb_instagram_settings") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_license_key") - {'option'}
	WordPressStorageDetector.delete_option("sbi_license_data") - {'option'}
	WordPressStorageDetector.delete_option("sb_expired_tokens") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_license_key") - {'option'}
	WordPressStorageDetector.update_option("sbi_db_version", SBI_DBVERSION) - {'option'}
	WordPressRetrievalDetector.get_option("sbi_top_api_calls", []) - {'option'}
	WordPressRetrievalDetector.$this->get_option() - {'option'}
	DeletionDetector.delete_option("sbi_license_key") - {'option'}
	WordPressRetrievalDetector.$this->get_option() - {'option'}
	WordPressRetrievalDetector.get_option("sbi_rating_notice", false) - {'option'}
	WordPressStorageDetector.delete_option("sbi_cron_report") - {'option'}
	WordPressStorageDetector.delete_option("sbi_license_last_check_timestamp") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_oembed_token", []) - {'option'}
	WordPressStorageDetector.delete_option("sbi_check_license_api_when_expires") - {'option'}
	WordPressStorageDetector.delete_option("sbi_oembed_token") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_rating_notice", false) - {'option'}
	UninstallDetector.delete_option("sb_expired_tokens") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_local_avatars", []) - {'option'}
	WordPressRetrievalDetector.$this->get_option() - {'option'}
	WordPressStorageDetector.update_option("sbi_db_version", SBI_DBVERSION) - {'option'}
	WordPressRetrievalDetector.get_option("sbi_usage_tracking", ["last_send" => 0, "enabled" => sbi_is_pro_version()]) - {'option'}
	WordPressStorageDetector.delete_option("sbi_single_cache") - {'option'}
	WordPressRetrievalDetector.$this->get_option() - {'option'}
	WordPressRetrievalDetector.get_option("sbi_statuses", []) - {'option'}
	WordPressStorageDetector.update_option("sb_instagram_settings", $options) - {'option'}
	DeletionDetector.delete_option("sb_instagram_ajax_status") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_usage_tracking", ["last_send" => 0, "enabled" => sbi_is_pro_version()]) - {'option'}
	DeletionDetector.delete_option("sb_instagram_errors") - {'option'}
	WordPressStorageDetector.update_option("sbi_rating_notice", "dismissed", false) - {'option'}
	WordPressStorageDetector.delete_option("sbi_refresh_report") - {'option'}
	UninstallDetector.delete_option("sbi_license_data") - {'option'}
	WordPressRetrievalDetector.get_option("admin_email", "") - {'option'}
	WordPressStorageDetector.delete_option("sb_expired_tokens") - {'option'}
	WordPressStorageDetector.update_option("sb_instagram_errors", $this->errors, false) - {'option'}
	DeletionDetector.delete_option("sbi_legacy_feed_settings") - {'option'}
	WordPressStorageDetector.update_option("sbi_notifications", ["update" => sbi_get_current_time(), "feed" => $feed, "events" => $option["events"], "dismissed" => $option["dismissed"]]) - {'option'}
	WordPressStorageDetector.delete_option("sbi_refresh_report") - {'option'}
	WordPressStorageDetector.delete_option("sbi_rating_notice") - {'option'}
	WordPressRetrievalDetector.get_option("sb_instagram_settings") - {'option'}
	WordPressStorageDetector.update_option("sb_instagram_settings", $db) - {'option'}
	WordPressStorageDetector.delete_option("sbi_welcome_seen") - {'option'}
	DeletionDetector.delete_option("sbi_cron_report") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_local_avatars", []) - {'option'}
	DeletionDetector.delete_option("sb_expired_tokens") - {'option'}
	WordPressStorageDetector.update_option("sbi_legacy_feed_settings", sbi_json_encode($base_settings), false) - {'option'}
	DeletionDetector.delete_option("sbi_hashtag_ids") - {'option'}
	WordPressStorageDetector.update_option("sbi_statuses", $sbi_statuses_option, false) - {'option'}
	DeletionDetector.delete_option("sbi_local_avatars") - {'option'}
	DeletionDetector.delete_option("sbi_statuses") - {'option'}
	WordPressStorageDetector.delete_option("sbi_notifications") - {'option'}
	DeletionDetector.delete_option("sbi_newuser_notifications") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_dismiss_critical_notice", false) - {'option'}
	WordPressRetrievalDetector.get_option("sb_instagram_settings", []) - {'option'}
	WordPressStorageDetector.delete_option("sbi_welcome_seen") - {'option'}
	WordPressStorageDetector.delete_option("sbi_top_api_calls") - {'option'}
	WordPressRetrievalDetector.get_option("cff_oembed_token") - {'option'}
	WordPressStorageDetector.update_option("sbi_usage_tracking_config", $tracking) - {'option'}
	WordPressRetrievalDetector.get_option("sbi_statuses", []) - {'option'}
	UninstallDetector.delete_option("sbi_license_status") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_license_key") - {'option'}
	WordPressRetrievalDetector.get_option("time_format") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_oembed_token") - {'option'}
	WordPressRetrievalDetector.get_option($this->option_name(), []) - {'option'}
	WordPressStorageDetector.update_option("sbi_rating_notice", "dismissed", false) - {'option'}
	WordPressRetrievalDetector.get_option("sbi_statuses", []) - {'option'}
	WordPressStorageDetector.delete_option("sbi_db_version") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_statuses", []) - {'option'}
	UninstallDetector.delete_option("sbi_refresh_report") - {'option'}
	WordPressRetrievalDetector.get_option("active_plugins", []) - {'option'}
	WordPressRetrievalDetector.get_option("sbi_license_key") - {'option'}
	DeletionDetector.delete_option("sbi_hashtag_ids") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_license_key") - {'option'}
	WordPressRetrievalDetector.get_option("active_plugins") - {'option'}
	UninstallDetector.delete_option("sbi_cron_report") - {'option'}
	WordPressStorageDetector.update_option("sbi_legacy_feed_settings", $to_save_json, false) - {'option'}
	WordPressRetrievalDetector.get_option("sb_instagram_settings", []) - {'option'}
	WordPressRetrievalDetector.get_option("sbi_usage_tracking", ["last_send" => 0, "enabled" => sbi_is_pro_version()]) - {'option'}
	WordPressRetrievalDetector.get_option("sb_instagram_settings", []) - {'option'}
	DeletionDetector.delete_option("sbi_dismiss_critical_notice") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_license_key") - {'option'}
	WordPressStorageDetector.delete_option("sbi_hashtag_ids") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_theme_styles", ["file" => "", "last_checked" => 0, "styles" => []]) - {'option'}
	WordPressStorageDetector.update_option("sb_instagram_settings", $sbi_settings) - {'option'}
	WordPressStorageDetector.update_option("sbi_statuses", $sbi_statuses_option, false) - {'option'}
	WordPressRetrievalDetector.get_option("sbi_license_key") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_license_key") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_connected_accounts") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_one_click_upgrade") - {'option'}
	WordPressStorageDetector.update_option("sbi_statuses", $sbi_statuses_option) - {'option'}
	UninstallDetector.delete_option("sbi_local_avatars") - {'option'}
	WordPressRetrievalDetector.get_option("sb_instagram_settings", []) - {'option'}
	WordPressStorageDetector.update_option("sbi_usage_tracking", $usage_tracking, false) - {'option'}
	WordPressRetrievalDetector.get_option("admin_email", "") - {'option'}
	DeletionDetector.delete_option("sbi_welcome_seen") - {'option'}
	UninstallDetector.delete_option("sbi_legacy_feed_settings") - {'option'}
	WordPressStorageDetector.update_option("sbi_db_version", SBI_DBVERSION) - {'option'}
	WordPressRetrievalDetector.get_option("cff_oembed_token", []) - {'option'}
	WordPressStorageDetector.update_option("sbi_statuses", $sbi_statuses_option) - {'option'}
	WordPressRetrievalDetector.get_option("sbi_oembed_token", []) - {'option'}
	WordPressRetrievalDetector.get_option("sbi_statuses", []) - {'option'}
	WordPressRetrievalDetector.get_option("sbi_oembed_token", []) - {'option'}
	WordPressRetrievalDetector.get_option("sbi_statuses", []) - {'option'}
	WordPressRetrievalDetector.get_option("sbi_license_status") - {'option'}
	UninstallDetector.delete_option("sbi_usage_tracking") - {'option'}
	WordPressRetrievalDetector.get_option("sb_instagram_settings", []) - {'option'}
	WordPressStorageDetector.update_option("sbi_license_data", $sbi_license_data) - {'option'}
	WordPressRetrievalDetector.get_option("sb_instagram_settings", []) - {'option'}
	WordPressRetrievalDetector.get_option("sbi_statuses", []) - {'option'}
	WordPressRetrievalDetector.get_option("sbi_legacy_feed_settings", "{}") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_usage_tracking", ["last_send" => 0, "enabled" => sbi_is_pro_version()]) - {'option'}
	WordPressRetrievalDetector.get_option("cff_oembed_token", []) - {'option'}
	WordPressRetrievalDetector.get_option("sbi_statuses", []) - {'option'}
	WordPressRetrievalDetector.get_option("sbi_statuses", []) - {'option'}
	WordPressStorageDetector.update_option("sbi_review_consent", $consent) - {'option'}
	WordPressRetrievalDetector.get_option("sbi_license_data") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_statuses", []) - {'option'}
	WordPressStorageDetector.delete_option("sbi_license_key") - {'option'}
	WordPressStorageDetector.update_option("sbi_statuses", $sbi_statuses_option) - {'option'}
	DeletionDetector.delete_option("sbi_db_version") - {'option'}
	WordPressStorageDetector.update_option("sbi_theme_styles", $stored_styles, false) - {'option'}
	WordPressStorageDetector.update_option("sb_instagram_settings", $options) - {'option'}
	DeletionDetector.delete_option("sb_instagram_ajax_status") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_license_key", "") - {'option'}
	WordPressRetrievalDetector.get_option("sbi_license_data") - {'option'}
	WordPressRetrievalDetector.get_option("sb_instagram_settings", []) - {'option'}
	WordPressRetrievalDetector.get_option("sbi_license_status_" . $option_name) - {'option'}
	WordPressRetrievalDetector.get_option("active_plugins") - {'option'}
post
	WordPressRetrievalDetector.$single->get_post() - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.$single->get_post() - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.$single->get_post() - {'post_meta', 'wp_post', 'post'}
post_meta
	DeletionDetector.delete_post_meta($post_ID, str_replace("_oembed_", "_oembed_time_", $post_meta_key)) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post_ID, str_replace("_oembed_", "_oembed_time_", $post_meta_key)) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_ID) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_ID, "_sbi_oembed_done_checking", true) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post_ID, $post_meta_key) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_ID, "_sbi_oembed_done_checking", 1) - {'post_meta'}
	WordPressRetrievalDetector.$single->get_post() - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.$single->get_post() - {'post_meta', 'wp_post', 'post'}
	DeletionDetector.delete_post_meta($post_ID, $post_meta_key) - {'post_meta'}
	WordPressRetrievalDetector.$single->get_post() - {'post_meta', 'wp_post', 'post'}
remote
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
site
	WordPressRetrievalDetector.get_transient("instagram_feed_dismiss_lite") - {'site'}
	WordPressRetrievalDetector.get_transient("sbi_delay_oembeds_" . $this->permalink_id) - {'site'}
	UninstallDetector.delete_transient("sbinst_comment_cache") - {'site'}
	WordPressStorageDetector.set_transient("sbi_delay_oembeds_" . $this->permalink_id, true, 300) - {'site'}
	WordPressRetrievalDetector.get_transient("sbinst_comment_cache") - {'site'}
	WordPressStorageDetector.delete_transient("sbinst_comment_cache") - {'site'}
	WordPressStorageDetector.set_transient("instagram_feed_rating_notice_waiting", "waiting", $time) - {'site'}
	WordPressStorageDetector.set_transient("instagram_feed_rating_notice_waiting", "waiting", 2 * WEEK_IN_SECONDS) - {'site'}
	WordPressStorageDetector.set_transient("sbinst_comment_cache", $encryption->encrypt(sbi_json_encode($comment_cache)), 0) - {'site'}
	WordPressStorageDetector.delete_transient("sbinst_comment_cache") - {'site'}
	WordPressRetrievalDetector.get_transient("instagram_feed_rating_notice_waiting") - {'site'}
	WordPressRetrievalDetector.get_transient("instagram_feed_dismiss_lite") - {'site'}
	WordPressRetrievalDetector.get_transient("instagram_feed_rating_notice_waiting") - {'site'}
	WordPressStorageDetector.set_transient("instagram_feed_dismiss_lite", "dismiss", 1 * WEEK_IN_SECONDS) - {'site'}
state
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
user
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	ArrayElementDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	ArrayElementDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	ArrayElementDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	VariableDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	VariableDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	ArrayElementDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	ArrayElementDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	VariableDetector.(unknown) - {'first_name', 'user_meta', 'user'}
user_meta
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	ArrayElementDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	WordPressStorageDetector.update_user_meta(get_current_user_id(), "sbi_ignore_bfcm_sale_notice", date("Y", sbi_get_current_time())) - {'user_meta'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressStorageDetector.update_user_meta($user_id, "sbi_ignore_bfcm_sale_notice", "always") - {'user_meta'}
	WordPressStorageDetector.update_user_meta(get_current_user_id(), "sbi_ignore_new_user_sale_notice", "always") - {'user_meta'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	ArrayElementDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	ArrayElementDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressStorageDetector.update_user_meta(get_current_user_id(), "sbi_onboarding", $statuses) - {'user_meta'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	WordPressRetrievalDetector.get_user_meta(get_current_user_id(), "sbi_onboarding", true) - {'user_meta'}
	VariableDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	VariableDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressStorageDetector.update_user_meta($user_id, "sbi_ignore_new_user_sale_notice", "always") - {'user_meta'}
	VariableDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressStorageDetector.update_user_meta($user_id, "sbi_ignore_new_user_sale_notice", "always") - {'user_meta'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	WordPressStorageDetector.update_user_meta($user_id, "sbi_ignore_bfcm_sale_notice", date("Y", sbi_get_current_time())) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "sbi_ignore_bfcm_sale_notice", date("Y", sbi_get_current_time())) - {'user_meta'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressStorageDetector.update_user_meta($user_id, "sbi_ignore_bfcm_sale_notice", date("Y", sbi_get_current_time())) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id, "sbi_ignore_new_user_sale_notice") - {'user_meta'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_user_meta($user_id, "sbi_ignore_new_user_sale_notice") - {'user_meta'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	ArrayElementDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressStorageDetector.update_user_meta($user_id, "sbi_ignore_new_user_sale_notice", "always") - {'user_meta'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressStorageDetector.update_user_meta($user_id, "sbi_ignore_new_user_sale_notice", "always") - {'user_meta'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressStorageDetector.update_user_meta($user_id, "sbi_ignore_new_user_sale_notice", "always") - {'user_meta'}
	ArrayElementDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	VariableDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	WordPressStorageDetector.update_user_meta(get_current_user_id(), "sbi_ignore_dashboard_license_notice", false) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta(get_current_user_id(), "sbi_onboarding", true) - {'user_meta'}
wp_post
	WordPressRetrievalDetector.$single->get_post() - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.$single->get_post() - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.$single->get_post() - {'post_meta', 'wp_post', 'post'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:21:26.223839.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 23346 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:01.689959.

1000 STORE_REACHES edges created
2000 STORE_REACHES edges created
3000 STORE_REACHES edges created
4000 STORE_REACHES edges created
5000 STORE_REACHES edges created
6000 STORE_REACHES edges created
7000 STORE_REACHES edges created
8000 STORE_REACHES edges created
9000 STORE_REACHES edges created
10000 STORE_REACHES edges created
11000 STORE_REACHES edges created
12000 STORE_REACHES edges created
13000 STORE_REACHES edges created
14000 STORE_REACHES edges created
15000 STORE_REACHES edges created
16000 STORE_REACHES edges created
17000 STORE_REACHES edges created
18000 STORE_REACHES edges created
19000 STORE_REACHES edges created
20000 STORE_REACHES edges created
21000 STORE_REACHES edges created
22000 STORE_REACHES edges created
23000 STORE_REACHES edges created
23346 STORE_REACHES edges created
23346 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Remove dataflow edges from keys to data storage sinks" (remove_edge_from_key_to_sink) begin.
Removing dataflow edges from keys to data storage sinks
Deleted PHP_REACHES edges from key to sink for 425 sinks
Deleted PHP_REACHES edges from keys to storage sinks.
╚[26] Preprocessing step "Remove dataflow edges from keys to data storage sinks" (remove_edge_from_key_to_sink) finished successfully in 0:00:04.113207.

0 edges imported to Neo4j
Preprocessing step 10 done!
╔[27] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 1000 nodes as PERSONAL
Tainted 2000 nodes as PERSONAL
Tainted 3000 nodes as PERSONAL
Tainted 4000 nodes as PERSONAL
Tainted 5000 nodes as PERSONAL
Tainted 6000 nodes as PERSONAL
Tainted 6577 nodes as PERSONAL
In total, tainted 6577 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 1000 nodes as ENCRYPTED
Tainted 2000 nodes as ENCRYPTED
Tainted 3000 nodes as ENCRYPTED
Tainted 4000 nodes as ENCRYPTED
Tainted 5000 nodes as ENCRYPTED
Tainted 6000 nodes as ENCRYPTED
Tainted 6300 nodes as ENCRYPTED
In total, tainted 6300 nodes as ENCRYPTED
╚[27] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:15:40.385753.

0 edges imported to Neo4j
Preprocessing step 11 done!
### Preprocessing done in 0:48:07.279337!
Request variable '$_GET["sbi_username"]' of personal types {'user_meta', 'user'} is found.,,None
Request variable '$_GET["sbi_username"]' of personal types {'user_meta', 'user'} is found.,,None
Request variable '$_GET["sbi_username"]' of personal types {'user_meta', 'user'} is found.,,None
Request variable '$_POST["username"]' of personal types {'user_meta', 'user'} is found.,,None
Request variable '$_POST["username"]' of personal types {'user_meta', 'user'} is found.,,None
DELETION call to delete_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_license_data") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_license_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_license_status_" . $option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_cron_report") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_top_api_calls") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_license_data") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_license_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_one_click_upgrade") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_legacy_feed_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_statuses") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sb_instagram_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_ver") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sb_expired_tokens") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_cron_report") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sb_instagram_errors") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sb_instagram_ajax_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_hashtag_ids") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sb_instagram_errors") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_usage_tracking_config") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_usage_tracking") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_oembed_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_top_api_calls") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_rating_notice") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_refresh_report") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_welcome_seen") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_notifications") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_newuser_notifications") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_review_consent") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_dismiss_critical_notice") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_dismiss_critical_notice") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_top_api_calls") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_single_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_post_meta($post_ID, $post_meta_key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($post_ID, str_replace("_oembed_", "_oembed_time_", $post_meta_key)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_hashtag_ids") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_local_avatars") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sb_instagram_errors") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sb_instagram_errors") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_single_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_oembed_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_hashtag_ids") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_local_avatars") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sb_instagram_errors") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_usage_tracking_config") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_usage_tracking") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_oembed_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_top_api_calls") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_rating_notice") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_refresh_report") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_welcome_seen") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_notifications") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_newuser_notifications") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_statuses") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sb_instagram_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_ver") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sb_expired_tokens") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_cron_report") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sb_instagram_ajax_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_legacy_feed_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_check_license_api_when_expires") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_license_last_check_timestamp") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_license_data") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("sbi_license_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
CRYPTOGRAPHY call to $manager->remote_encrypt($source["access_token"]).,None,None
CRYPTOGRAPHY call to $manager->remote_encrypt($source["access_token"]).,None,None
CRYPTOGRAPHY call to $manager->remote_encrypt($value).,None,None
CRYPTOGRAPHY call to sbi_encrypt_decrypt("encrypt", $license_key).,None,None
CRYPTOGRAPHY call to hash("sha512", wp_rand()).,None,None
CRYPTOGRAPHY call to hash_equals($oth, $post_oth). Passed arguments: 0: $a (string), 1: $b (string). Returns (bool).,None,None
CRYPTOGRAPHY call to $encryption->maybe_encrypt($to_update["access_token"]).,None,None
CRYPTOGRAPHY call to $encryption->maybe_encrypt($to_update["info"]).,None,None
CRYPTOGRAPHY call to $encryption->maybe_encrypt($to_insert["access_token"]).,None,None
CRYPTOGRAPHY call to $encryption->maybe_encrypt($to_insert["info"]).,None,None
CRYPTOGRAPHY call to $encryption->decrypt($source["info"]).,None,None
CRYPTOGRAPHY call to $encryption->decrypt($source["access_token"]).,None,None
CRYPTOGRAPHY call to $encryption->decrypt($source["info"]).,None,None
CRYPTOGRAPHY call to $encryption->decrypt($source["access_token"]).,None,None
CRYPTOGRAPHY call to $encryption->decrypt($source["info"]).,None,None
CRYPTOGRAPHY call to $encryption->decrypt($results[0]["info"]).,None,None
CRYPTOGRAPHY call to $encryption->decrypt($source_datum["info"]).,None,None
CRYPTOGRAPHY call to hash("sha256", $secret_key).,None,None
CRYPTOGRAPHY call to hash("sha256", $secret_iv).,None,None
CRYPTOGRAPHY call to openssl_encrypt($string, $encrypt_method, $key, 0, $iv).,None,None
CRYPTOGRAPHY call to openssl_decrypt(base64_decode($string), $encrypt_method, $key, 0, $iv).,None,None
CRYPTOGRAPHY call to $this->maybe_decrypt($return).,None,None
CRYPTOGRAPHY call to $this->maybe_encrypt($cache_value).,None,None
CRYPTOGRAPHY call to $this->maybe_decrypt($results[0]["cache_value"]).,None,None
CRYPTOGRAPHY call to $this->encryption->encrypt($value).,None,None
CRYPTOGRAPHY call to $this->encryption->decrypt($value).,None,None
CRYPTOGRAPHY call to $encryption->encrypt($access_token).,None,None
CRYPTOGRAPHY call to $encryption->decrypt($access_token).,None,None
CRYPTOGRAPHY call to openssl_decrypt($raw_value, $method, $this->key, 0, $iv).,None,None
CRYPTOGRAPHY call to $this->decrypt($raw_value).,None,None
CRYPTOGRAPHY call to $this->encrypt($maybe_decrypted).,None,None
CRYPTOGRAPHY call to $this->encrypt($raw_value).,None,None
CRYPTOGRAPHY call to openssl_encrypt($value . $this->salt, $method, $this->key, 0, $iv).,None,None
CRYPTOGRAPHY call to $encryption->encrypt($post["json_data"]).,None,None
CRYPTOGRAPHY call to $encryption->encrypt($value).,None,None
CRYPTOGRAPHY call to $this->encrypt_json_in_sbi_instagram_posts().,None,None
CRYPTOGRAPHY call to $encryption->decrypt($stored_option).,None,None
CRYPTOGRAPHY call to $encryption->encrypt(sbi_json_encode($stored_option)).,None,None
CRYPTOGRAPHY call to $encryption->decrypt($comment_cache_transient).,None,None
CRYPTOGRAPHY call to $encryption->encrypt(sbi_json_encode($comment_cache)).,None,None
CRYPTOGRAPHY call to $encryption->decrypt($ids).,None,None
CRYPTOGRAPHY call to $encryption->encrypt(sbi_json_encode($ids)).,None,None
CRYPTOGRAPHY call to $local_encrypt->decrypt($encrypted_value).,None,None
CRYPTOGRAPHY call to $remote_encrypt->encrypt($raw_value).,None,None
CRYPTOGRAPHY call to $this->encrypt_json_in_sbi_instagram_posts().,None,None
CRYPTOGRAPHY call to $this->delete_hashtag_data().,None,None
CRYPTOGRAPHY call to $connection->has_encryption_error().,None,None
CRYPTOGRAPHY call to $connection->has_encryption_error().,None,None
CRYPTOGRAPHY call to $connection->has_encryption_error().,None,None
CRYPTOGRAPHY call to $this->encryption->encrypt(sbi_json_encode($this->instagram_api_data)).,None,None
CRYPTOGRAPHY call to $this->encryption->encrypt(sbi_json_encode($this->instagram_api_data)).,None,None
CRYPTOGRAPHY call to $manager->delete_hashtag_data().,None,None
CRYPTOGRAPHY call to $manager->delete_non_hashtag_sbi_instagram_posts($to_delete_connected_account["username"]).,None,None
CRYPTOGRAPHY call to $this->encryption->decrypt($stored_option).,None,None
CRYPTOGRAPHY call to $this->encryption->encrypt(sbi_json_encode($stored_option)).,None,None
CRYPTOGRAPHY call to $this->encryption->decrypt($stored_option).,None,None
CRYPTOGRAPHY call to $this->encryption->decrypt($results[0]).,None,None
CRYPTOGRAPHY call to $manager->delete_hashtag_data().,None,None
CRYPTOGRAPHY call to $encryption->decrypt($maybe_dirty).,None,None
hash called with approved hash algorithm sha512.,sha512,None
hash called with approved hash algorithm sha256.,sha256,None
hash called with approved hash algorithm sha256.,sha256,None
openssl_encrypt called with unknown encryption algorithm.,None,None
openssl_decrypt called with unknown encryption algorithm.,None,None
openssl_decrypt called with unknown encryption algorithm.,None,None
openssl_encrypt called with unknown encryption algorithm.,None,None
RETRIEVAL call to file_get_contents($_FILES["file"]["tmp_name"]).,None,None
STORAGE call to fwrite($file, $feed).,None,None
Uninstall deletion call: DELETION call to delete_option("sbi_single_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_transient("sbinst_comment_cache") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("sbi_oembed_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("sbi_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("sbi_hashtag_ids") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("sbi_local_avatars") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("sb_instagram_errors") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("sbi_usage_tracking_config") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("sbi_usage_tracking") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("sbi_oembed_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("sbi_top_api_calls") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("sbi_rating_notice") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("sbi_refresh_report") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("sbi_welcome_seen") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("sbi_notifications") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("sbi_newuser_notifications") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("sbi_statuses") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("sb_instagram_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("sbi_ver") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("sb_expired_tokens") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("sbi_cron_report") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("sb_instagram_ajax_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("sbi_legacy_feed_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("sbi_check_license_api_when_expires") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("sbi_license_last_check_timestamp") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("sbi_license_data") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("sbi_license_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
variable '$feed_issue_email_url' of personal types {'email'} is found.,,None
variable '$feed_issue_email_url' of personal types {'email'} is found.,,None
variable '$admin_url_state' of personal types {'state'} is found.,,None
variable '$admin_url_state' of personal types {'state'} is found.,,None
variable '$admin_url_state' of personal types {'state'} is found.,,None
variable '$admin_url_state' of personal types {'state'} is found.,,None
variable '$admin_url_state' of personal types {'state'} is found.,,None
variable '$admin_url_state' of personal types {'state'} is found.,,None
variable '$admin_url_state' of personal types {'state'} is found.,,None
variable '$admin_url_state' of personal types {'state'} is found.,,None
variable '$admin_url_state' of personal types {'state'} is found.,,None
variable '$sb_admin_email' of personal types {'email'} is found.,,None
variable '$sb_admin_email' of personal types {'email'} is found.,,None
variable '$sb_admin_email' of personal types {'email'} is found.,,None
variable '$admin_url_state' of personal types {'state'} is found.,,None
variable '$user_name' of personal types {'user_meta', 'user'} is found.,,None
variable '$user_name' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$first_username' of personal types {'first_name', 'user_meta', 'user'} is found.,,None
variable '$first_username' of personal types {'first_name', 'user_meta', 'user'} is found.,,None
variable '$first_username' of personal types {'first_name', 'user_meta', 'user'} is found.,,None
variable '$first_username' of personal types {'first_name', 'user_meta', 'user'} is found.,,None
variable '$first_username' of personal types {'first_name', 'user_meta', 'user'} is found.,,None
variable '$first_username' of personal types {'first_name', 'user_meta', 'user'} is found.,,None
variable '$first_username' of personal types {'first_name', 'user_meta', 'user'} is found.,,None
variable '$first_username' of personal types {'first_name', 'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$usernames_included' of personal types {'user_meta', 'user'} is found.,,None
variable '$usernames_not_connected' of personal types {'user_meta', 'user'} is found.,,None
variable '$user_id_or_name' of personal types {'user_meta', 'user'} is found.,,None
variable '$user_id_or_name' of personal types {'user_meta', 'user'} is found.,,None
variable '$user_id_or_name' of personal types {'user_meta', 'user'} is found.,,None
variable '$user_id_or_name' of personal types {'user_meta', 'user'} is found.,,None
variable '$usernames_included' of personal types {'user_meta', 'user'} is found.,,None
variable '$usernames_included' of personal types {'user_meta', 'user'} is found.,,None
variable '$user_id_or_name' of personal types {'user_meta', 'user'} is found.,,None
variable '$usernames_not_connected' of personal types {'user_meta', 'user'} is found.,,None
variable '$user_id_or_name' of personal types {'user_meta', 'user'} is found.,,None
variable '$usernames_not_connected' of personal types {'user_meta', 'user'} is found.,,None
variable '$usernames_not_connected' of personal types {'user_meta', 'user'} is found.,,None
variable '$usernames_not_connected' of personal types {'user_meta', 'user'} is found.,,None
variable '$usernames_not_connected' of personal types {'user_meta', 'user'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email_from' of personal types {'email'} is found.,,None
variable '$email_from' of personal types {'email'} is found.,,None
variable '$email_body' of personal types {'email'} is found.,,None
variable '$email_body' of personal types {'email'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$usermeta_table_name' of personal types {'user_meta', 'user'} is found.,,None
variable '$usermeta_table_name' of personal types {'user_meta', 'user'} is found.,,None
variable '$first_username' of personal types {'first_name', 'user_meta', 'user'} is found.,,None
variable '$first_username' of personal types {'first_name', 'user_meta', 'user'} is found.,,None
variable '$first_username' of personal types {'first_name', 'user_meta', 'user'} is found.,,None
variable '$first_username' of personal types {'first_name', 'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
API call to wp_remote_get(add_query_arg($sbi_api_params, SBI_STORE_URL), ["timeout" => 60]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_get($url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_request($url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_request($url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_request($url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_post($url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_get($url, $remote_request_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_post($api_url, ["timeout" => 15, "sslverify" => true, "body" => $api_params]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_get($url). Passed arguments: 0: $url (string). Returns (array|WP_Error).,https,['https://graph.instagram.com/me/accounts?limit=500&access_token=']
RETRIEVAL call to get_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_transient("instagram_feed_dismiss_lite") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sb_instagram_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_usage_tracking", ["last_send" => 0, "enabled" => sbi_is_pro_version()]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sb_instagram_settings", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("time_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_usage_tracking", ["last_send" => 0, "enabled" => sbi_is_pro_version()]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_license_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_license_status_" . $option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sb_instagram_settings", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_license_last_check_timestamp") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_license_data") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_license_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_license_data") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_license_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sb_instagram_settings", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_usage_tracking", ["last_send" => 0, "enabled" => sbi_is_pro_version()]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("time_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_cron_report", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_oembed_token", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_one_click_upgrade") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_license_data") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cff_oembed_token", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_oembed_token", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("cff_oembed_token", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_oembed_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cff_oembed_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_oembed_token", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta(get_current_user_id(), "sbi_onboarding", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta(get_current_user_id(), "sbi_onboarding", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_transient("instagram_feed_dismiss_lite") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_license_key", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("admin_email", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sb_instagram_settings", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sb_instagram_settings", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_connected_accounts") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_theme_styles", ["file" => "", "last_checked" => 0, "styles" => []]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_theme_styles", ["file" => "", "last_checked" => 0, "styles" => []]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_usage_tracking_config", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sb_instagram_settings", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sb_instagram_white_list_names", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("active_plugins", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_usage_tracking", ["last_send" => 0, "enabled" => sbi_is_pro_version()]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_usage_tracking", ["last_send" => 0, "enabled" => sbi_is_pro_version()]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_rating_notice", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_transient("instagram_feed_rating_notice_waiting") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user_id, "sbi_ignore_new_user_sale_notice") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user_id, "sbi_ignore_new_user_sale_notice") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to $this->get_option() alters data types {'option'}. Returns (mixed).,None,None
RETRIEVAL call to $this->get_option() alters data types {'option'}. Returns (mixed).,None,None
RETRIEVAL call to $this->get_option() alters data types {'option'}. Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_review_consent") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_review_consent") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $this->get_option() alters data types {'option'}. Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->option_name(), []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $this->get_option() alters data types {'option'}. Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $this->get_option() alters data types {'option'}. Returns (mixed).,None,None
RETRIEVAL call to $this->get_option() alters data types {'option'}. Returns (mixed).,None,None
RETRIEVAL call to $this->get_option() alters data types {'option'}. Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_review_consent") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_review_consent") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $this->get_option() alters data types {'option'}. Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_local_avatars", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_local_avatars", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_local_avatars", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_single_cache", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_transient("sbinst_comment_cache") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_hashtag_ids", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $single->get_post() alters data types {'post_meta', 'wp_post', 'post'}. Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_oembed_token", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("cff_oembed_token", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_oembed_token", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_ID, "_sbi_oembed_done_checking", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_ID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_oembed_token", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_oembed_token", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $single->get_post() alters data types {'post_meta', 'wp_post', 'post'}. Returns (WP_Post|array|null).,None,None
RETRIEVAL call to $single->get_post() alters data types {'post_meta', 'wp_post', 'post'}. Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sb_instagram_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sb_instagram_errors", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_top_api_calls", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_top_api_calls", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_legacy_feed_settings", "{}") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_transient("sbi_delay_oembeds_" . $this->permalink_id) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_single_cache", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_single_cache", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sb_instagram_settings", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gmt_offset", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sb_instagram_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sb_instagram_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sb_instagram_settings", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_dismiss_critical_notice", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sb_instagram_settings", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sb_instagram_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("admin_email", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("admin_email", $to_array[0]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sb_instagram_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($option_name, $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sb_instagram_settings", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sb_instagram_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sb_instagram_settings", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_db_version", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sb_instagram_settings", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_rating_notice", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_transient("instagram_feed_rating_notice_waiting") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sb_instagram_settings", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sbi_statuses", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sb_instagram_settings", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sb_instagram_settings", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
STORAGE call to update_option("sbi_license_data", $sbi_license_data) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_user_meta(get_current_user_id(), "sbi_ignore_dashboard_license_notice", false) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to set_transient("instagram_feed_dismiss_lite", "dismiss", 1 * WEEK_IN_SECONDS) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to delete_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_license_data") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_license_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("sbi_usage_tracking", $usage_tracking, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("sb_instagram_settings", $sbi_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sbi_license_data", $sbi_license_data) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sbi_license_key", $license_key) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sbi_license_status", $sbi_license_data["license"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sbi_license_data", $sbi_license_data) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sbi_license_status", "inactive") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sbi_license_data", $license_data) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sbi_license_status", $license_data["license"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sbi_license_status_" . $option_name, $license_data["license"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("sbi_license_status_" . $option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_cron_report") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_top_api_calls") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("sbi_license_data", $sbi_license_data) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sbi_license_last_check_timestamp", time()) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_license_data") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_license_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("sbi_license_key", $sbi_license_key) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sbi_license_key", $license) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sbi_license_data", $license_data) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sbi_license_status", $license_data["license"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sbi_one_click_upgrade", $oth) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("sbi_one_click_upgrade") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("cff_oembed_token", $oembed_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cff_oembed_token", $newly_retrieved_oembed_connection_data) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sbi_oembed_token", $newly_retrieved_oembed_connection_data) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sbi_oembed_token", $oembed_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sbi_db_version", ) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("sbi_legacy_feed_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("sbi_statuses", $sbi_statuses_option) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("sbi_statuses") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sb_instagram_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_ver") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sb_expired_tokens") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_cron_report") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sb_instagram_errors") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sb_instagram_ajax_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_hashtag_ids") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sb_instagram_errors") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_usage_tracking_config") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_usage_tracking") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_oembed_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_top_api_calls") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_rating_notice") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_refresh_report") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_welcome_seen") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_notifications") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_newuser_notifications") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_user_meta(get_current_user_id(), "sbi_onboarding", $statuses) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("sbi_legacy_feed_settings", $to_save_json, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("sbi_legacy_feed_settings", $to_save_json, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("sbi_statuses", $sbi_statuses_option) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sbi_statuses", $sbi_statuses_option) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sbi_theme_styles", $stored_styles, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("sbi_usage_tracking", $usage_tracking, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("sbi_usage_tracking_config", $tracking) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option($this->option_name(), ["update" => $option["update"], "feed" => $option["feed"], "events" => array_merge($notification, $option["events"]), "dismissed" => $option["dismissed"]]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option($this->option_name(), ["update" => time(), "feed" => $feed, "events" => $option["events"], "dismissed" => $option["dismissed"]]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sbi_review_consent", $consent) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sbi_rating_notice", "dismissed", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("sbi_statuses", $sbi_statuses_option, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("sbi_rating_notice", "dismissed", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("sbi_statuses", $sbi_statuses_option, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to set_transient("instagram_feed_rating_notice_waiting", "waiting", 2 * WEEK_IN_SECONDS) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to delete_option("sbi_review_consent") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("sbi_rating_notice", "pending", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_user_meta($user_id, "sbi_ignore_new_user_sale_notice", "always") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "sbi_ignore_bfcm_sale_notice", date("Y", sbi_get_current_time())) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "sbi_ignore_bfcm_sale_notice", "always") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "sbi_ignore_bfcm_sale_notice", date("Y", sbi_get_current_time())) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "sbi_ignore_new_user_sale_notice", "always") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("sbi_rating_notice", "dismissed", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("sbi_statuses", $sbi_statuses_option, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_user_meta($user_id, "sbi_ignore_new_user_sale_notice", "always") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "sbi_ignore_new_user_sale_notice", "always") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "sbi_ignore_bfcm_sale_notice", date("Y", sbi_get_current_time())) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "sbi_ignore_new_user_sale_notice", "always") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("sbi_notifications", ["update" => $option["update"], "feed" => $option["feed"], "events" => array_merge($notification, $option["events"]), "dismissed" => $option["dismissed"]]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sbi_notifications", ["update" => sbi_get_current_time(), "feed" => $feed, "events" => $option["events"], "dismissed" => $option["dismissed"]]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sbi_rating_notice", "dismissed", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("sbi_statuses", $sbi_statuses_option, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_user_meta(get_current_user_id(), "sbi_ignore_new_user_sale_notice", "always") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta(get_current_user_id(), "sbi_ignore_bfcm_sale_notice", date("Y", sbi_get_current_time())) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("sbi_notifications", $option) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("sbi_dismiss_critical_notice") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_dismiss_critical_notice") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("sbi_local_avatars", $avatars) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sb_instagram_settings", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sb_instagram_settings", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sbi_cron_report", $report, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to delete_option("sbi_top_api_calls") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_transient("sbinst_comment_cache") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_single_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option($permanent_cache["option_name"], $value, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("sbi_single_cache", $encryption->encrypt(sbi_json_encode($stored_option)), false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to set_transient("sbinst_comment_cache", $encryption->encrypt(sbi_json_encode($comment_cache)), 0) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to update_option("sbi_hashtag_ids", $encryption->encrypt(sbi_json_encode($ids)), false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("sbi_statuses", $sbi_statuses_option) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sbi_statuses", $sbi_statuses_option) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sbi_db_version", ) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sbi_statuses", $sbi_statuses_option, true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("sbi_statuses", $sbi_statuses_option) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($post_ID, "_sbi_oembed_done_checking", 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($post_ID, $post_meta_key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_post_meta($post_ID, str_replace("_oembed_", "_oembed_time_", $post_meta_key)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_option("sb_instagram_errors", $this->errors, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("sb_instagram_errors", $this->errors, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("sb_instagram_errors", $this->errors, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("sb_instagram_settings", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("sbi_hashtag_ids") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_local_avatars") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("sbi_top_api_calls", $list_of_top_hashtags) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sb_instagram_errors", $this->errors, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("sb_instagram_errors", $this->errors, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to delete_option("sb_instagram_errors") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("sb_instagram_errors", $this->errors, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("sb_instagram_error_page", $id, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("sb_instagram_errors", $this->errors, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to set_transient("sbi_delay_oembeds_" . $this->permalink_id, true, 300) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to update_option("sbi_single_cache", $this->encryption->encrypt(sbi_json_encode($stored_option)), false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("sbi_dismiss_critical_notice", 1, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option($option_name, $option_value, $autoloadtrue) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("sbi_refresh_report", $report, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("sbi_statuses", $sbi_statuses_option) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to set_transient("instagram_feed_rating_notice_waiting", "waiting", $time) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to update_option("sbi_rating_notice", "pending", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("sbi_statuses", $sbi_statuses_option, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("sbi_db_version", SBI_DBVERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sbi_db_version", SBI_DBVERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sbi_db_version", SBI_DBVERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("sb_instagram_errors") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("sbi_db_version", SBI_DBVERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sbi_db_version", SBI_DBVERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sbi_statuses", $sbi_statuses_option) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sbi_db_version", SBI_DBVERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sbi_statuses", $sbi_statuses_option) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sbi_db_version", SBI_DBVERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sbi_db_version", SBI_DBVERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sbi_db_version", SBI_DBVERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sbi_db_version", SBI_DBVERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sb_instagram_settings", $db) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sbi_legacy_feed_settings", sbi_json_encode($base_settings), false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("sbi_statuses", $sbi_statuses_option, true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("sbi_db_version", SBI_DBVERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("sbi_single_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_transient("sbinst_comment_cache") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_oembed_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_hashtag_ids") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_local_avatars") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sb_instagram_errors") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_usage_tracking_config") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_usage_tracking") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_oembed_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_top_api_calls") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_rating_notice") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_refresh_report") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_welcome_seen") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_notifications") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_newuser_notifications") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_statuses") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sb_instagram_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_ver") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sb_expired_tokens") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_cron_report") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sb_instagram_ajax_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_legacy_feed_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_check_license_api_when_expires") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_license_last_check_timestamp") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_license_data") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_license_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("sbi_license_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] PII of types (['user', 'email', 'first_name', 'user_meta']) stored through WordPress function "update_option("sbi_license_status", $license_data["license"])", found in file admin/SBI_Global_Settings.php at line 345. 

[has_storage] PII of types (['user', 'email', 'first_name', 'user_meta']) stored through WordPress function "update_option("sbi_statuses", $sbi_statuses_option)", found in file inc/Builder/SBI_Db.php at line 833. 

[has_storage] PII of types (['user', 'email', 'first_name', 'user_meta']) stored through WordPress function "update_option("sb_instagram_errors", $this->errors, false)", found in file inc/class-sb-instagram-posts-manager.php at line 239. 

[has_storage] PII of types (['user', 'email', 'first_name', 'user_meta']) stored through WordPress function "update_option("sb_instagram_errors", $this->errors, false)", found in file inc/class-sb-instagram-posts-manager.php at line 776. 

[has_storage] PII of types (['user', 'email', 'first_name', 'user_meta']) stored through WordPress function "update_option($this->option_name(), ["update" => time(), "feed" => $feed, "events" => $option["events"], "dismissed" => $option["dismissed"]])", found in file inc/admin/class-sbi-new-user.php at line 217. 

[has_storage] PII of types (['user', 'email', 'first_name', 'user_meta']) stored through WordPress function "update_option($this->option_name(), ["update" => $option["update"], "feed" => $option["feed"], "events" => array_merge($notification, $option["events"]), "dismissed" => $option["dismissed"]])", found in file inc/admin/class-sbi-new-user.php at line 197. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta(get_current_user_id(), "sbi_ignore_bfcm_sale_notice", date("Y", sbi_get_current_time()))", found in file inc/admin/class-sbi-notifications.php at line 709. 

[has_storage] PII of types (['user', 'email', 'first_name', 'user_meta']) stored through WordPress function "update_option("sb_instagram_errors", $this->errors, false)", found in file inc/class-sb-instagram-posts-manager.php at line 1087. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user_id, "sbi_ignore_bfcm_sale_notice", "always")", found in file inc/admin/class-sbi-new-user.php at line 514. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta(get_current_user_id(), "sbi_ignore_new_user_sale_notice", "always")", found in file inc/admin/class-sbi-notifications.php at line 703. 

[has_storage] PII of types (['user', 'email', 'first_name', 'user_meta']) stored through WordPress function "update_option("sb_instagram_errors", $this->errors, false)", found in file inc/class-sb-instagram-posts-manager.php at line 218. 

[has_storage] PII of types (['user', 'email', 'first_name', 'user_meta']) stored through WordPress function "update_option("sbi_notifications", ["update" => $option["update"], "feed" => $option["feed"], "events" => array_merge($notification, $option["events"]), "dismissed" => $option["dismissed"]])", found in file inc/admin/class-sbi-notifications.php at line 357. 

[has_storage] PII of types (['user', 'email', 'first_name', 'user_meta']) stored through WordPress function "update_option("sb_instagram_errors", $this->errors, false)", found in file inc/class-sb-instagram-posts-manager.php at line 750. 

[has_storage] PII of types (['user', 'email', 'first_name', 'user_meta']) stored through WordPress function "update_option("sbi_license_status", $sbi_license_data["license"])", found in file admin/SBI_Global_Settings.php at line 203. 

[has_storage] PII of types (['user', 'email', 'first_name', 'user_meta']) stored through WordPress function "update_option("sb_instagram_errors", $this->errors, false)", found in file inc/class-sb-instagram-posts-manager.php at line 956. 

[has_storage] PII of types (['user', 'email', 'first_name', 'user_meta']) stored through WordPress function "update_option("sbi_hashtag_ids", $encryption->encrypt(sbi_json_encode($ids)), false)", found in file inc/class-sb-instagram-data-manager.php at line 357. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta(get_current_user_id(), "sbi_onboarding", $statuses)", found in file inc/Builder/SBI_Feed_Builder.php at line 2005. 

[has_storage] PII of types (['user', 'email', 'first_name', 'user_meta']) stored through WordPress function "update_option("sbi_license_data", $license_data)", found in file admin/SBI_Global_Settings.php at line 344. 

[has_storage] PII of types (['user', 'email', 'first_name', 'user_meta']) stored through WordPress function "update_option("sbi_legacy_feed_settings", $to_save_json, false)", found in file inc/Builder/SBI_Feed_Saver.php at line 232. 

[has_storage] Unstructured data storage of PII types (['user', 'email', 'first_name', 'user_meta']) to files through function "fwrite", found in file admin/SBI_Global_Settings.php at line 433. 

[has_storage] PII of types (['user', 'email', 'first_name', 'user_meta']) stored through WordPress function "update_option($permanent_cache["option_name"], $value, false)", found in file inc/class-sb-instagram-data-manager.php at line 321. 

[has_storage] PII of types (['user', 'email', 'first_name', 'user_meta']) stored through WordPress function "update_option("sbi_single_cache", $encryption->encrypt(sbi_json_encode($stored_option)), false)", found in file inc/class-sb-instagram-data-manager.php at line 338. 

[has_storage] PII of types (['user', 'email', 'first_name', 'user_meta']) stored through WordPress function "update_option("sbi_license_data", $sbi_license_data)", found in file admin/SBI_Global_Settings.php at line 233. 

[has_storage] PII of types (['user', 'email', 'first_name', 'user_meta']) stored through WordPress function "update_option("sbi_license_data", $sbi_license_data)", found in file admin/SBI_Global_Settings.php at line 785. 

[has_storage] PII of types (['user', 'email', 'first_name', 'user_meta']) stored through WordPress function "update_option("sbi_local_avatars", $avatars)", found in file inc/class-sb-instagram-connected-account.php at line 293. 

[has_storage] PII of types (['user', 'email', 'first_name', 'user_meta']) stored through WordPress function "update_option("sbi_single_cache", $this->encryption->encrypt(sbi_json_encode($stored_option)), false)", found in file inc/class-sb-instagram-single.php at line 219. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user_id, "sbi_ignore_new_user_sale_notice", "always")", found in file inc/admin/class-sbi-new-user.php at line 497. 

[has_storage] PII of types (['user', 'email', 'first_name', 'user_meta']) stored through WordPress function "set_transient("sbinst_comment_cache", $encryption->encrypt(sbi_json_encode($comment_cache)), 0)", found in file inc/class-sb-instagram-data-manager.php at line 350. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user_id, "sbi_ignore_new_user_sale_notice", "always")", found in file inc/admin/class-sbi-new-user.php at line 542. 

[has_storage] PII of types (['user', 'email', 'first_name', 'user_meta']) stored through WordPress function "update_option("sbi_license_data", $sbi_license_data)", found in file admin/SBI_Global_Settings.php at line 198. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user_id, "sbi_ignore_bfcm_sale_notice", date("Y", sbi_get_current_time()))", found in file inc/admin/class-sbi-new-user.php at line 539. 

[has_storage] PII of types (['user', 'email', 'first_name', 'user_meta']) stored through WordPress function "update_option("sbi_license_status_" . $option_name, $license_data["license"])", found in file admin/SBI_Global_Settings.php at line 354. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user_id, "sbi_ignore_bfcm_sale_notice", date("Y", sbi_get_current_time()))", found in file inc/admin/class-sbi-new-user.php at line 503. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user_id, "sbi_ignore_bfcm_sale_notice", date("Y", sbi_get_current_time()))", found in file inc/admin/class-sbi-new-user.php at line 516. 

[has_storage] PII of types (['user', 'email', 'first_name', 'user_meta']) stored through WordPress function "update_option("sb_instagram_errors", $this->errors, false)", found in file inc/class-sb-instagram-posts-manager.php at line 691. 

[has_storage] PII of types (['user', 'email', 'first_name', 'user_meta']) stored through WordPress function "update_option("sbi_notifications", ["update" => sbi_get_current_time(), "feed" => $feed, "events" => $option["events"], "dismissed" => $option["dismissed"]])", found in file inc/admin/class-sbi-notifications.php at line 377. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user_id, "sbi_ignore_new_user_sale_notice", "always")", found in file inc/admin/class-sbi-new-user.php at line 533. 

[has_storage] PII of types (['user', 'email', 'first_name', 'user_meta']) stored through WordPress function "update_option("sbi_legacy_feed_settings", sbi_json_encode($base_settings), false)", found in file instagram-feed.php at line 671. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user_id, "sbi_ignore_new_user_sale_notice", "always")", found in file inc/admin/class-sbi-new-user.php at line 531. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user_id, "sbi_ignore_new_user_sale_notice", "always")", found in file inc/admin/class-sbi-new-user.php at line 518. 

[has_storage] PII of types (['user', 'email', 'first_name', 'user_meta']) stored through WordPress function "update_option("sbi_legacy_feed_settings", $to_save_json, false)", found in file inc/Builder/SBI_Feed_Saver.php at line 672. 

[has_storage] PII of types (['user', 'email', 'first_name', 'user_meta']) stored through WordPress function "update_option("sbi_statuses", $sbi_statuses_option)", found in file inc/Builder/SBI_Source.php at line 649. 

[has_storage] PII of types (['user', 'email', 'first_name', 'user_meta']) stored through WordPress function "update_option("sbi_license_data", $sbi_license_data)", found in file admin/SBI_Admin_Notices.php at line 167. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta(get_current_user_id(), "sbi_ignore_dashboard_license_notice", false)", found in file admin/SBI_Admin_Notices.php at line 173. 

[has_storage] Storage check is CUSTOM_UNSTRUCTURED 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta(get_current_user_id(), "sbi_ignore_bfcm_sale_notice", date("Y", sbi_get_current_time())) does not have corresponding deletion method. Storage method found in file inc/admin/class-sbi-notifications.php at line 709. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "sbi_ignore_bfcm_sale_notice", "always") does not have corresponding deletion method. Storage method found in file inc/admin/class-sbi-new-user.php at line 514. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta(get_current_user_id(), "sbi_ignore_new_user_sale_notice", "always") does not have corresponding deletion method. Storage method found in file inc/admin/class-sbi-notifications.php at line 703. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta(get_current_user_id(), "sbi_onboarding", $statuses) does not have corresponding deletion method. Storage method found in file inc/Builder/SBI_Feed_Builder.php at line 2005. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "sbi_ignore_new_user_sale_notice", "always") does not have corresponding deletion method. Storage method found in file inc/admin/class-sbi-new-user.php at line 497. 

[Art.17, Right to erasure] Wordpress storage of PII through set_transient("sbinst_comment_cache", $encryption->encrypt(sbi_json_encode($comment_cache)), 0) does not have corresponding deletion method. Storage method found in file inc/class-sb-instagram-data-manager.php at line 350. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "sbi_ignore_new_user_sale_notice", "always") does not have corresponding deletion method. Storage method found in file inc/admin/class-sbi-new-user.php at line 542. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "sbi_ignore_bfcm_sale_notice", date("Y", sbi_get_current_time())) does not have corresponding deletion method. Storage method found in file inc/admin/class-sbi-new-user.php at line 539. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "sbi_ignore_bfcm_sale_notice", date("Y", sbi_get_current_time())) does not have corresponding deletion method. Storage method found in file inc/admin/class-sbi-new-user.php at line 503. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "sbi_ignore_bfcm_sale_notice", date("Y", sbi_get_current_time())) does not have corresponding deletion method. Storage method found in file inc/admin/class-sbi-new-user.php at line 516. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "sbi_ignore_new_user_sale_notice", "always") does not have corresponding deletion method. Storage method found in file inc/admin/class-sbi-new-user.php at line 533. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "sbi_ignore_new_user_sale_notice", "always") does not have corresponding deletion method. Storage method found in file inc/admin/class-sbi-new-user.php at line 531. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "sbi_ignore_new_user_sale_notice", "always") does not have corresponding deletion method. Storage method found in file inc/admin/class-sbi-new-user.php at line 518. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta(get_current_user_id(), "sbi_ignore_dashboard_license_notice", false) does not have corresponding deletion method. Storage method found in file admin/SBI_Admin_Notices.php at line 173. 

[Art.17, Right to erasure] Deletion access is NONE 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3276. Found in file admin/SBI_Global_Settings.php at line 345 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 19673. Found in file inc/Builder/SBI_Db.php at line 833 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 87265. Found in file inc/class-sb-instagram-posts-manager.php at line 239 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 89593. Found in file inc/class-sb-instagram-posts-manager.php at line 776 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 54577. Found in file inc/admin/class-sbi-new-user.php at line 217 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 54514. Found in file inc/admin/class-sbi-new-user.php at line 197 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 58601. Found in file inc/admin/class-sbi-notifications.php at line 709 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 91082. Found in file inc/class-sb-instagram-posts-manager.php at line 1087 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 55854. Found in file inc/admin/class-sbi-new-user.php at line 514 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 58566. Found in file inc/admin/class-sbi-notifications.php at line 703 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 87175. Found in file inc/class-sb-instagram-posts-manager.php at line 218 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 57145. Found in file inc/admin/class-sbi-notifications.php at line 357 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 89539. Found in file inc/class-sb-instagram-posts-manager.php at line 750 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 2753. Found in file admin/SBI_Global_Settings.php at line 203 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 90383. Found in file inc/class-sb-instagram-posts-manager.php at line 956 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 65885. Found in file inc/class-sb-instagram-data-manager.php at line 357 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 29664. Found in file inc/Builder/SBI_Feed_Builder.php at line 2005 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3269. Found in file admin/SBI_Global_Settings.php at line 344 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 30431. Found in file inc/Builder/SBI_Feed_Saver.php at line 232 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 65675. Found in file inc/class-sb-instagram-data-manager.php at line 321 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 65753. Found in file inc/class-sb-instagram-data-manager.php at line 338 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 2854. Found in file admin/SBI_Global_Settings.php at line 233 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 4799. Found in file admin/SBI_Global_Settings.php at line 785 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 62968. Found in file inc/class-sb-instagram-connected-account.php at line 293 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 98575. Found in file inc/class-sb-instagram-single.php at line 219 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 55746. Found in file inc/admin/class-sbi-new-user.php at line 497 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 65825. Found in file inc/class-sb-instagram-data-manager.php at line 350 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 56041. Found in file inc/admin/class-sbi-new-user.php at line 542 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 2739. Found in file admin/SBI_Global_Settings.php at line 198 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 56025. Found in file inc/admin/class-sbi-new-user.php at line 539 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3316. Found in file admin/SBI_Global_Settings.php at line 354 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 55779. Found in file inc/admin/class-sbi-new-user.php at line 503 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 55876. Found in file inc/admin/class-sbi-new-user.php at line 516 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 89239. Found in file inc/class-sb-instagram-posts-manager.php at line 691 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 57204. Found in file inc/admin/class-sbi-notifications.php at line 377 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 55992. Found in file inc/admin/class-sbi-new-user.php at line 533 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 110288. Found in file instagram-feed.php at line 671 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 55978. Found in file inc/admin/class-sbi-new-user.php at line 531 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 55892. Found in file inc/admin/class-sbi-new-user.php at line 518 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 31980. Found in file inc/Builder/SBI_Feed_Saver.php at line 672 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 38222. Found in file inc/Builder/SBI_Source.php at line 649 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1767. Found in file admin/SBI_Admin_Notices.php at line 167 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1807. Found in file admin/SBI_Admin_Notices.php at line 173 

[Art.15, Right to access] Data access is NONE_BUT_NOT_REQUIRED 

[third_party] Third party usage is NONE for data types [] 

[encryption] API call that sends PII to unknown url. PII is securely encrypted with ['generic']. Found in file admin/SBI_HTTP_Request.php at line 51 

[encryption] API call that sends PII to unknown url. PII is securely encrypted with ['generic']. Found in file admin/SBI_Upgrader.php at line 70 

[encryption] API call that sends PII to unknown url. PII is securely encrypted with ['generic']. Found in file admin/SBI_Admin_Notices.php at line 164 

[encryption] API call that sends PII to unknown url. PII is securely encrypted with ['generic']. Found in file admin/SBI_HTTP_Request.php at line 39 

[encryption] API call that sends PII to unknown url. PII is securely encrypted with ['generic']. Found in file admin/SBI_HTTP_Request.php at line 42 

[encryption] API call that sends PII to unknown url. PII is securely encrypted with ['generic']. Found in file admin/SBI_HTTP_Request.php at line 45 

[encryption] API call that sends PII to unknown url. PII is securely encrypted with ['generic']. Found in file admin/SBI_HTTP_Request.php at line 48 

[main] Applicable GDPR requirements: ['access', 'deletion', 'encryption', 'third_party'] 

[main] Is deletion in violation? True 

[main] Is access in violation? False 

[main] Is third_party in violation? False 

[main] Is encryption in violation? True 

[main] Complaint? False 


###########
### Q&A ###
###########

1. Why is my plugin in violation against GDPR?

GDPR (https://gdpr-info.eu/) aims to give citizens in the European Union (EU) control over their personal data. If a website collects or store user data, it is required to provide users functionalities to control their data, such as ones to erase or export their data. While a plugin do not directly interact with users, it may provide functionalities that collect or store personal data, which would make websites that deploy the plugin in violation against GDPR if the plugin does not provide corresponding functionalities to allow users control their personal data. Therefore, plugin developers are responsible to provide functions to manage the personal data they handle in accordance with GDPR. We list requirements by specific GDPR articles relevant to your plugin below.


[Art. 13, Information to be provided where personal data are collected from the data subject] If a plugin collects or handles personal data, it needs to provide privacy policy texts that explain what personal data is being collected and for what purpose. The texts are meant to be added to the privacy policy of the websites that deploy the plugin. 


            
        

2. How do I make my plugin compliant?

Please refer to the fix report below to see how you can make your plugin comply with GDPR.

        

##################
### Fix Report ###
##################

#############################
# Privacy Policy Fix Report #
#############################

This report suggests fixes to comply with the GDPR Art. 13 (https://gdpr-info.eu/art-13-gdpr/) through including a privacy notice. The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/suggesting-text-for-the-site-privacy-policy/ for more details.

1) Implement a function that includes the privacy policy for the plugin and provide it to wordpress through wp_add_privacy_policy_content(). Sample code:


/**
* Adds a privacy policy statement.
*/
function instagram-feed_add_privacy_policy_content() {
    if ( ! function_exists( 'wp_add_privacy_policy_content' ) ) {
        return;
    }
    //TODO: modify the content below to include the privacy policy for the plugin.
    $content = '<p class="privacy-policy-tutorial">' . __( 'Some introductory content for the suggested text.', 'instagram-feed' ) . '</p>'
            . '<strong class="privacy-policy-tutorial">' . __( 'Suggested Text:', 'instagram-feed' ) . '</strong> '
            . sprintf(
                __( 'When you leave a comment on this site, we send your name, email address, IP address and comment text to example.com. Example.com does not retain your personal data. The example.com privacy policy is <a href="%1$s" target="_blank">here</a>.', 'instagram-feed' ),
                'https://example.com/privacy-policy'
            );
    wp_add_privacy_policy_content( 'instagram-feed', wp_kses_post( wpautop( $content, false ) ) );
}
        

2) Hook the privacy policy function to the Wordpress's admin initialization action.


add_action( 'admin_init', 'instagram-feed_add_privacy_policy_content' );
        

        


Disclaimer: The sample code provided above is only for reference and does not guarantee GDPR compliance. The recommended list of data to delete/export may not be comprehensive. 
        
Done.
