Timeout in resolving values
Timeout in running neo4j query
Running Main.py on friends

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.680632.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.638802.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 264 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:01.262862.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 10 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.844840.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 5954 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:02.520355.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 314 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:03.776206.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
Added 15 PHP_REACHES edges.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.074607.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 1991 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:01:09.864670.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 43922
Added 35374 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 47761
Added 3839 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:04.881085.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/friends.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/blocks/block-visibility/build/index.asset.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/blocks/follow-me/build/index.asset.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/blocks/friend-posts/build/index.asset.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/blocks/friends-list/build/index.asset.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/blocks/message/build/index.asset.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/feed-parsers/class-friends-feed-item.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/feed-parsers/class-friends-feed-parser-json-feed.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/feed-parsers/class-friends-feed-parser-microformats.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/feed-parsers/class-friends-feed-parser.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/feed-parsers/class-friends-feed-parser-simplepie.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/feed-parsers/SimplePie/class-friends-simplepie-file-accept-only-rss.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/feed-parsers/SimplePie/class-friends-simplepie-misc.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/includes/class-friends-3rd-parties.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/includes/class-friends-access-control.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/includes/class-friends-admin.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/includes/class-friends-automatic-status-list-table.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/includes/class-friends-automatic-status.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/includes/class-friends-blocks.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/includes/class-friends-feed.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/includes/class-friends-frontend.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/includes/class-friends-logging.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/includes/class-friends-messages.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/includes/class-friends-notifications.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/includes/class-friends.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/includes/class-friends-plugin-installer.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/includes/class-friends-reactions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/includes/class-friends-rest.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/includes/class-friends-shortcodes.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/includes/class-friends-template-loader.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/includes/class-friend-user-feed.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/includes/class-friend-user.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/includes/class-friend-user-query.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/includes/class-gamajo-template-loader-1-4-0.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/includes/class-gutenberg-everywhere-friends-message.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/libs/gutenberg-everywhere/build/index.asset.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/libs/gutenberg-everywhere/classes/gutenberg-handler.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/libs/gutenberg-everywhere/classes/iso-gutenberg.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/libs/Mf2/Parser.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/plugin-strings/friends-autoresolve-links.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/plugin-strings/friends-debugger.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/plugin-strings/friends-parser-fraidyscrape.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/plugin-strings/friends-parser-rss-bridge.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/plugin-strings/friends-post-collection.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/plugin-strings/friends-send-to-e-reader.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/admin/add-friend.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/admin/add-reaction-li.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/admin/automatic-status-list-table.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/admin/edit-friend.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/admin/edit-raw-rules.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/admin/edit-rules.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/admin/latest-friends.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/admin/notification-manager.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/admin/opml.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/admin/plugin-info.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/admin/plugin-installer-footer.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/admin/plugin-installer-header.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/admin/preview-rules.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/admin/reactions-picker.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/admin/select-feeds.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/admin/settings.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/email/accepted-friend-request.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/email/accepted-friend-request.text.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/email/footer.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/email/footer.text.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/email/friend-message-received.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/email/friend-message-received.text.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/email/header.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/email/keyword-match-post.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/email/keyword-match-post.text.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/email/new-friend-post.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/email/new-friend-post.text.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/email/new-friend-request.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/email/new-friend-request.text.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/frontend/author-header.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/frontend/editor.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/frontend/footer.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/frontend/header.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/frontend/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/frontend/main-feed-header.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/frontend/no-friends.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/frontend/no-posts.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/frontend/reactions-picker.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/frontend/messages/author-header.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/frontend/messages/friend.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/frontend/messages/message-form.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/frontend/parts/comments.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/frontend/parts/content-image.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/frontend/parts/content.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/frontend/parts/content-status.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/frontend/parts/entry-content.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/frontend/parts/footer.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/frontend/parts/header.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/frontend/parts/reactions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/templates/frontend/parts/title.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/widgets/class-friends-widget-friend-list.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/widgets/class-friends-widget-friend-request.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/widgets/class-friends-widget-header.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/widgets/class-friends-widget-new-private-post.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/widgets/class-friends-widget-post-formats.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/friends/widgets/class-friends-widget-refresh.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:08.765058.

264 PHP_REACHES edges created
10 REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
5954 PHP_REACHES edges created
54 CALLS edges created
95 PHP_REACHES edges created
165 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
14000 PHP_REACHES edges created
15000 PHP_REACHES edges created
16000 PHP_REACHES edges created
17000 PHP_REACHES edges created
18000 PHP_REACHES edges created
19000 PHP_REACHES edges created
20000 PHP_REACHES edges created
21000 PHP_REACHES edges created
22000 PHP_REACHES edges created
23000 PHP_REACHES edges created
24000 PHP_REACHES edges created
25000 PHP_REACHES edges created
26000 PHP_REACHES edges created
27000 PHP_REACHES edges created
28000 PHP_REACHES edges created
29000 PHP_REACHES edges created
30000 PHP_REACHES edges created
31000 PHP_REACHES edges created
32000 PHP_REACHES edges created
33000 PHP_REACHES edges created
34000 PHP_REACHES edges created
35000 PHP_REACHES edges created
36000 PHP_REACHES edges created
37000 PHP_REACHES edges created
37380 PHP_REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
3839 PHP_REACHES edges created
47761 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 15852 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:02.407135.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 7 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:45.125945.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 6544
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 6544
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 6544
Added 827 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:24.758913.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 1126 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.235725.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:19.335140.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 6544
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 6544
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 6544
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:11.763371.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.092964.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.025427.

7 CALLS edges created
1000 PHP_REACHES edges created
1953 PHP_REACHES edges created
1960 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 1392 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.280279.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
78 SQL operations to process.
SELECT posts.post_status, COUNT(posts.ID) AS count
				FROM $wpdb AS posts
				JOIN $wpdb AS relationships
				JOIN $wpdb AS taxonomy
				JOIN $wpdb AS terms

				WHERE posts.post_author = get_current_user_id()
				AND posts.post_type = %s
				AND relationships.object_id = posts.ID
				AND relationships.term_taxonomy_id = taxonomy.term_taxonomy_id
				AND taxonomy.taxonomy = 'post_format'

				AND terms.slug = 'post-format-status'

				GROUP BY posts.post_status
SELECT posts.post_status, COUNT(posts.ID) AS count
				FROM $wpdb AS posts
				JOIN $wpdb AS relationships
				JOIN $wpdb AS taxonomy
				JOIN $wpdb AS terms

				WHERE posts.post_author = get_current_user_id()
				AND posts.post_type = $this
				AND relationships.object_id = posts.ID
				AND relationships.term_taxonomy_id = taxonomy.term_taxonomy_id
				AND taxonomy.taxonomy = 'post_format'

				AND terms.slug = 'post-format-status'

				GROUP BY posts.post_status
SELECT posts.post_status, COUNT(posts.ID) AS count
				FROM $wpdb AS posts
				JOIN $wpdb AS relationships
				JOIN $wpdb AS taxonomy
				JOIN $wpdb AS terms

				WHERE posts.post_author = get_current_user_id()
				AND posts.post_type = $this
				AND relationships.object_id = posts.ID
				AND relationships.term_taxonomy_id = taxonomy.term_taxonomy_id
				AND taxonomy.taxonomy = 'post_format'

				AND terms.slug = 'post-format-status'

				GROUP BY posts.post_status
SQL command (SELECT posts.post_status, COUNT(posts.ID) AS count FROM $wpdb AS posts JOIN $wpdb AS relationships JOIN $wpdb AS taxonomy JOIN $wpdb AS terms WHERE posts.post_author = get_current_user_id() AND posts.post_type = $this AND relationships.object_id = posts.ID AND relationships.term_taxonomy_id = taxonomy.term_taxonomy_id AND taxonomy.taxonomy = 'post_format' AND terms.slug = 'post-format-status' GROUP BY posts.post_status) cannot be parsed correct.
0
SQL command (0) cannot be parsed correct.
//title
SQL command (//title) cannot be parsed correct.
post_status
SQL command (post_status) cannot be parsed correct.
post_type
SQL command (post_type) cannot be parsed correct.
post_status
SQL command (post_status) cannot be parsed correct.
pagename
SQL command (pagename) cannot be parsed correct.
tax_query
SQL command (tax_query) cannot be parsed correct.
page_id
SQL command (page_id) cannot be parsed correct.
author
SQL command (author) cannot be parsed correct.
author__not_in
SQL command (author__not_in) cannot be parsed correct.
//link[@rel and @href]
SQL command (//link[@rel and @href]) cannot be parsed correct.
sprintf("SELECT terms.slug AS post_format, COUNT(terms.slug) AS count
							FROM array_merge([$author_id], $post_types) AS posts
							JOIN %s AS relationships
							JOIN %s AS taxonomy
							JOIN %s AS terms

							WHERE posts.post_author = %s
							AND posts.post_status IN ( \'publish\', \'private\' )
							AND posts.post_type IN ( %s )
							AND relationships.object_id = posts.ID
							AND relationships.term_taxonomy_id = taxonomy.term_taxonomy_id
							AND taxonomy.taxonomy = \'post_format\'

							AND terms.term_id = taxonomy.term_id
							GROUP BY terms.slug", $wpdb->posts, $wpdb->term_relationships, $wpdb->term_taxonomy, $wpdb->terms, "%d", implode(",", array_fill(0, count($post_types), "%s")))
None
SELECT terms.slug AS post_format, COUNT(terms.slug) AS count
						FROM $wpdb AS posts
						JOIN $wpdb AS relationships
						JOIN $wpdb AS taxonomy
						JOIN $wpdb AS terms

						WHERE posts.post_status IN ( 'publish', 'private' )
						AND posts.post_type IN ( implode(",", array_fill(0, count($post_types), "$post_types")) )
						AND relationships.object_id = posts.ID
						AND relationships.term_taxonomy_id = taxonomy.term_taxonomy_id
						AND taxonomy.taxonomy = 'post_format'

						AND terms.term_id = taxonomy.term_id
						GROUP BY terms.slug
SELECT terms.slug AS post_format, COUNT(terms.slug) AS count
						FROM $wpdb AS posts
						JOIN $wpdb AS relationships
						JOIN $wpdb AS taxonomy
						JOIN $wpdb AS terms

						WHERE posts.post_status IN ( 'publish', 'private' )
						AND posts.post_type IN ( implode(",", array_fill(0, count($post_types), "$post_types")) )
						AND relationships.object_id = posts.ID
						AND relationships.term_taxonomy_id = taxonomy.term_taxonomy_id
						AND taxonomy.taxonomy = 'post_format'

						AND terms.term_id = taxonomy.term_id
						GROUP BY terms.slug
SQL command (SELECT terms.slug AS post_format, COUNT(terms.slug) AS count FROM $wpdb AS posts JOIN $wpdb AS relationships JOIN $wpdb AS taxonomy JOIN $wpdb AS terms WHERE posts.post_status IN ( 'publish', 'private' ) AND posts.post_type IN ( implode(",", array_fill(0, count($post_types), "$post_types")) ) AND relationships.object_id = posts.ID AND relationships.term_taxonomy_id = taxonomy.term_taxonomy_id AND taxonomy.taxonomy = 'post_format' AND terms.term_id = taxonomy.term_id GROUP BY terms.slug) cannot be parsed correct.
tax_query
SQL command (tax_query) cannot be parsed correct.
//base[@href]
SQL command (//base[@href]) cannot be parsed correct.
//template
SQL command (//template) cannot be parsed correct.
.//*[@src or @href or @data]
SQL command (.//*[@src or @href or @data]) cannot be parsed correct.
.//meta[@http-equiv]
SQL command (.//meta[@http-equiv]) cannot be parsed correct.
./*[contains(concat(" ", @class, " "), " value ")]
SQL command (./*[contains(concat(" ", @class, " "), " value ")]) cannot be parsed correct.
./*[contains(concat(" ", @class, " "), " value-title ")]
SQL command (./*[contains(concat(" ", @class, " "), " value-title ")]) cannot be parsed correct.
./*[contains(concat(" ", @class, " "), " value ") or contains(concat(" ", @class, " "), " value-title ")]
SQL command (./*[contains(concat(" ", @class, " "), " value ") or contains(concat(" ", @class, " "), " value-title ")]) cannot be parsed correct.
.//*[contains(concat(" ", @class) ," p-")]
SQL command (.//*[contains(concat(" ", @class) ," p-")]) cannot be parsed correct.
.//*[contains(concat(" ",  @class)," u-")]
SQL command (.//*[contains(concat(" ", @class)," u-")]) cannot be parsed correct.
.//*[contains(concat(" ", @class), " dt-")]
SQL command (.//*[contains(concat(" ", @class), " dt-")]) cannot be parsed correct.
.//*[contains(concat(" ", @class)," e-")]
SQL command (.//*[contains(concat(" ", @class)," e-")]) cannot be parsed correct.
$xpath
SQL command ($xpath) cannot be parsed correct.
$xpath
SQL command ($xpath) cannot be parsed correct.
$path
SQL command ($path) cannot be parsed correct.
//a[@rel and @href] | //link[@rel and @href] | //area[@rel and @href]
SQL command (//a[@rel and @href] | //link[@rel and @href] | //area[@rel and @href]) cannot be parsed correct.
.//a[contains(concat(" ",normalize-space(@rel)," ")," tag ") and not(contains(concat(" ", normalize-space(@class), " "), " category ")) and @href]
SQL command (.//a[contains(concat(" ",normalize-space(@rel)," ")," tag ") and not(contains(concat(" ", normalize-space(@class), " "), " category ")) and @href]) cannot be parsed correct.
//*[@id='$id']
SQL command (//*[@id='$id']) cannot be parsed correct.
//*[implode(" or ", $xpaths)]
SQL command (//*[implode(" or ", $xpaths)]) cannot be parsed correct.
.//*[implode(" or ", $xpaths)]
SQL command (.//*[implode(" or ", $xpaths)]) cannot be parsed correct.
.//a[contains(concat(" ",normalize-space(@rel)," ")," bookmark ") and @href]
SQL command (.//a[contains(concat(" ",normalize-space(@rel)," ")," bookmark ") and @href]) cannot be parsed correct.
.//*[contains(concat(" ", normalize-space(@class), " "), " item ") and contains(concat(" ", normalize-space(@class), " "), " vcard ")]
SQL command (.//*[contains(concat(" ", normalize-space(@class), " "), " item ") and contains(concat(" ", normalize-space(@class), " "), " vcard ")]) cannot be parsed correct.
.//*[contains(concat(" ", normalize-space(@class), " "), " item ") and contains(concat(" ", normalize-space(@class), " "), " vevent ")]
SQL command (.//*[contains(concat(" ", normalize-space(@class), " "), " item ") and contains(concat(" ", normalize-space(@class), " "), " vevent ")]) cannot be parsed correct.
.//*[contains(concat(" ", normalize-space(@class), " "), " item ") and contains(concat(" ", normalize-space(@class), " "), " hproduct ")]
SQL command (.//*[contains(concat(" ", normalize-space(@class), " "), " item ") and contains(concat(" ", normalize-space(@class), " "), " hproduct ")]) cannot be parsed correct.
.//*[contains(concat(" ", normalize-space(@class), " "), " location ")]
SQL command (.//*[contains(concat(" ", normalize-space(@class), " "), " location ")]) cannot be parsed correct.
.//*[contains(concat(" ", normalize-space(@class), " "), " $property ")
SQL command (.//*[contains(concat(" ", normalize-space(@class), " "), " $property ")) cannot be parsed correct.
//*[contains(concat(" ", @class, " "), " $old ") and not(contains(concat(" ", @class, " "), " $new "))
SQL command (//*[contains(concat(" ", @class, " "), " $old ") and not(contains(concat(" ", @class, " "), " $new "))) cannot be parsed correct.
//*[contains(concat(" ", @class, " "), " $oldRoot ")]//*[contains(concat(" ", @class, " "), " $old ") and not(contains(concat(" ", @class, " "), " $data_replace "))
SQL command (//*[contains(concat(" ", @class, " "), " $oldRoot ")]//*[contains(concat(" ", @class, " "), " $old ") and not(contains(concat(" ", @class, " "), " $data_replace "))) cannot be parsed correct.
$expression
SQL command ($expression) cannot be parsed correct.
query
SQL command (query) cannot be parsed correct.
$handle
SQL command ($handle) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [6513, 6519, 7976, 7985, 8062, 8071, 19076, 19414, 20063, 20094, 21603, 23856, 26428, 29585, 29586, 29668, 31526, 32459, 32785, 32790, 32871, 32960, 33066, 33112, 33136, 33383, 33396, 33506, 33559, 35947, 36220, 36492, 36710, 36924, 41858, 42239, 42802, 43905, 44248, 44655, 45099, 45178, 45468, 45473, 45515, 48582, 48641, 48896, 49326, 49496, 49546, 50044, 51288, 51395, 51499, 51655, 51893, 52144, 52407, 52511, 52945, 53560, 53668, 53677, 53817, 53868, 53936, 54004, 54084, 54164, 54579, 54645, 54712, 55588, 57530, 65638, 72393, 72469]
Added 0 SQL nodes. 0 out of 78 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:07.242762.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'get_the_ID()'' cannot be parsed correct.
HTML code '$'get_the_ID()'' cannot be parsed correct.
HTML code '$'wp_kses_post(sprintf(__("In order to be able to view the Friends page, you need to enable a custom permalink structure. Please go to <a href="%1$s">%2$s</a> and enable an option other than Plain.", "friends"), admin_url("options-permalink.php"), __("Permalink Settings")))'' cannot be parsed correct.
HTML code '$'admin_url("?friends-welcome=0")'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(__("First, you\\'ll want to go to <a href=%1$s>%2$s</a> and add a new friend or enter the URL of a website or blog you\\'d like to subscribe to.", "friends"), "" . admin_url("admin.php?page=add-friend") . "", __("Send Friend Request", "friends")), ["a" => ["href" => []]])'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(__("As soon as you have done this, you\\'ll be able see all the compiled posts of your friends (and subscriptions) on your <a href=%s>Friends page</a>.", "friends"), home_url("/friends/")), ["a" => ["href" => []]])'' cannot be parsed correct.
HTML code '$'sprintf(_n("Found %d new post.", "Found %d new posts.", count($new_posts), "friends") . "<br/>", count($new_posts))'' cannot be parsed correct.
HTML code '$'sprintf(_n("Found %d item in the feed.", "Found %d items in the feed.", count($items), "friends") . " ", count($items))'' cannot be parsed correct.
HTML code '$'$error->get_error_message()'' cannot be parsed correct.
HTML code '$'$_GET'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(__("Friendship requested for site %s.", "friends"), $friend_link), ["a" => ["href" => []]])'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(__("Until they respond, we have already subscribed you to their updates.", "friends"), $friend_link), ["a" => ["href" => []]])'' cannot be parsed correct.
HTML code '$'$errors->get_error_message()'' cannot be parsed correct.
HTML code '$'unserialize($error_data->error)_body'' cannot be parsed correct.
HTML code '$'wp_kses($errors->get_error_message(), ["strong" => []])'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(__("Go to your <a href=%s>friends page</a> to view their posts.", "friends"), "" . esc_url($friend_user->get_local_friends_page_url()) . ""), ["a" => ["href" => []]])'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(__("You\\'re now a friend of site %s.", "friends"), $friend_link), ["a" => ["href" => []]])'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(__("Go to your <a href=%s>friends page</a> to view their posts.", "friends"), "" . home_url("/friends/" . $friend_user->user_login . "/") . ""), ["a" => ["href" => []]])'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(__("No friends plugin installed at %s.", "friends"), $friend_link), ["a" => ["href" => []]])'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(__("You\\'re now subscribed to %s.", "friends"), $friend_link), ["a" => ["href" => []]])'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(__("Go to your <a href=%s>friends page</a> to view their posts.", "friends"), "" . home_url("/friends/" . $friend_user->user_login . "/") . ""), ["a" => ["href" => []]])'' cannot be parsed correct.
HTML code '$'sprintf(__("User %s could not be assigned the appropriate role.", "friends"), $friend_user->display_name)'' cannot be parsed correct.
HTML code '$'sprintf(__("Preview for %s", "friends"), $url)'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(__("Parser: %s", "friends"), $parser_name), ["a" => ["href" => [], "rel" => [], "target" => []]])'' cannot be parsed correct.
HTML code '$'$items->get_error_message()'' cannot be parsed correct.
HTML code '$'$item'' cannot be parsed correct.
HTML code '$'$item'' cannot be parsed correct.
HTML code '$'$item'' cannot be parsed correct.
HTML code '$'$item'' cannot be parsed correct.
HTML code '$'$item'' cannot be parsed correct.
HTML code '$'$item'' cannot be parsed correct.
HTML code '$'wp_kses(wp_trim_excerpt($item->content), ["a" => ["href" => []], "img" => ["src" => []]])'' cannot be parsed correct.
HTML code '$'wp_kses($response->get_error_message(), ["strong" => [], "a" => ["href" => [], "rel" => [], "target" => []]])'' cannot be parsed correct.
HTML code '$'self_admin_url("admin.php?page=add-friend&url=")'' cannot be parsed correct.
HTML code '$'Add friend'' cannot be parsed correct.
HTML code '$'self_admin_url("admin.php?page=add-friend&url=")'' cannot be parsed correct.
HTML code '$'Subscribe'' cannot be parsed correct.
HTML code '$'Firefox Extension'' cannot be parsed correct.
HTML code '$'wp_kses(get_the_content(), ["img" => ["src" => []], "a" => ["href" => []]])'' cannot be parsed correct.
HTML code '$' xmlns:friends="'' cannot be parsed correct.
HTML code '$'<friends:post-format>standard</friends:post-format>PHP_EOL'' cannot be parsed correct.
HTML code '$'<friends:gravatar>get_avatar_url($post->post_author)</friends:gravatar>PHP_EOL'' cannot be parsed correct.
HTML code '$'<friends:post-status>$post</friends:post-status>PHP_EOL'' cannot be parsed correct.
HTML code '$'<friends:post-id>$post</friends:post-id>PHP_EOL'' cannot be parsed correct.
HTML code '$'wp_insert_post(["post_type" => "post", "post_title" => $_POST["title"], "post_content" => $_POST["content"], "post_status" => $_POST["status"]])'' cannot be parsed correct.
HTML code '$'wp_kses($this->get_link($url, $text, $html_attributes, $friend_user), ["a" => ["href" => [], "title" => [], "target" => [], "rel" => [], "class" => [], "style" => [], "data-nonce" => [], "data-token" => [], "data-friend" => []], "span" => ["class" => []]])'' cannot be parsed correct.
HTML code '$'wp_kses(implode(PHP_EOL, self->get_html_rel_links()), ["link" => ["rel" => [], "type" => [], "href" => [], "title" => []]])'' cannot be parsed correct.
HTML code '$'PHP_EOL'' cannot be parsed correct.
HTML code '$'strip_tags($parser_name)'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(__("For quick adding or following you can also <a href=%s>use a bookmarklet</a>.", "friends"), esc_url(self_admin_url("tools.php"))), ["a" => ["href" => []]])'' cannot be parsed correct.
HTML code '$'$args_friend_url'' cannot be parsed correct.
HTML code '$'esc_attr_x("Next Â»", "button", "friends")'' cannot be parsed correct.
HTML code '$'_x("Quick Subscribe", "button", "friends")'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(__("<em>%s</em> will skip the next step and just subscribe you.", "friends"), $quick_subscribe), ["em" => []])'' cannot be parsed correct.
HTML code '$'$args_id'' cannot be parsed correct.
HTML code '$'%1$s'' cannot be parsed correct.
HTML code '$'$args_emoji'' cannot be parsed correct.
HTML code '$'$feed->get_parser()'' cannot be parsed correct.
HTML code '$'$feed->get_parser()'' cannot be parsed correct.
HTML code '$'$feed->get_parser()'' cannot be parsed correct.
HTML code '$'sprintf(__("%s (deleted)", "friends"), $feed->get_parser())'' cannot be parsed correct.
HTML code '$'wp_nonce_url(add_query_arg("wp_http_referer", urlencode(wp_unslash($_SERVER["REQUEST_URI"])), self_admin_url("admin.php?page=add-friend&parser=" . urlencode($feed->get_parser()) . "&feed=" . urlencode($term_id) . "&preview=" . urlencode($feed->get_url()))), "preview-feed")'' cannot be parsed correct.
HTML code '$'$term_id'' cannot be parsed correct.
HTML code '$'$format'' cannot be parsed correct.
HTML code '$'$title'' cannot be parsed correct.
HTML code '$'$term_id'' cannot be parsed correct.
HTML code '$'$feed->get_title()'' cannot be parsed correct.
HTML code '$'$term_id'' cannot be parsed correct.
HTML code '$'$feed->get_mime_type()'' cannot be parsed correct.
HTML code '$'activeinactive hidden'' cannot be parsed correct.
HTML code '$'$feed->get_last_log()'' cannot be parsed correct.
HTML code '$'$slug'' cannot be parsed correct.
HTML code '$'strip_tags($parser_name)'' cannot be parsed correct.
HTML code '$'wp_nonce_url(add_query_arg("wp_http_referer", urlencode(wp_unslash($_SERVER["REQUEST_URI"])), self_admin_url("admin.php?page=add-friend&parser=&preview=")), "preview-feed")'' cannot be parsed correct.
HTML code '$'$format'' cannot be parsed correct.
HTML code '$'$title'' cannot be parsed correct.
HTML code '$'$args_post_type'' cannot be parsed correct.
HTML code '$'get_avatar($args["friend"]->ID)'' cannot be parsed correct.
HTML code '$'$args'' cannot be parsed correct.
HTML code '$'$args'' cannot be parsed correct.
HTML code '$'$args'' cannot be parsed correct.
HTML code '$' hidden'' cannot be parsed correct.
HTML code '$'activeinactive hidden'' cannot be parsed correct.
HTML code '$'$term_id'' cannot be parsed correct.
HTML code '$'$term_id'' cannot be parsed correct.
HTML code '$'$feed->get_url()'' cannot be parsed correct.
HTML code '$'$term_id'' cannot be parsed correct.
HTML code '$'$slug'' cannot be parsed correct.
HTML code '$'If the content contains'' cannot be parsed correct.
HTML code '$'If the author contains'' cannot be parsed correct.
HTML code '$'$args["friend"]->get_local_friends_page_url()'' cannot be parsed correct.
HTML code '$'sprintf(_n("View %d post", "View %d posts", $args["friend_posts"]->found_posts, "friends"), $args["friend_posts"]->found_posts)'' cannot be parsed correct.
HTML code '$'disabled'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(__("Only keep posts for %s days", "friends"), "<input type="number" min="1" id="friends_retention_days" name="friends_retention_days" value="" . esc_attr($args["friend"]->get_retention_days()) . "" . $args["friend"]->is_retention_days_enabled()""" disabled="disabled"" . " size="3">"), ["input" => ["type" => [], "min" => [], "id" => [], "name" => [], "value" => [], "size" => [], "disabled" => []]])'' cannot be parsed correct.
HTML code '$'disabled'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(__("Only keep the last %s posts", "friends"), "<input type="number" min="1" id="friends_retention_number" name="friends_retention_number" value="" . esc_attr($args["friend"]->get_retention_number()) . "" . $args["friend"]->is_retention_number_enabled()""" disabled="disabled"" . " size="3">"), ["input" => ["type" => [], "min" => [], "id" => [], "name" => [], "value" => [], "size" => [], "disabled" => []]])'' cannot be parsed correct.
HTML code '$'sprintf(__("Currently the posts use %s of disk space. If you need to limit the amount of space, choose one of the options above (they can be combined). The next auto-delete will kick in when refreshing the feeds of this friend.", "friends"), size_format($args["total_size"], 1))'' cannot be parsed correct.
HTML code '$'date_i18n(__("F j, Y g:i a"), strtotime($args["friend"]->user_registered))'' cannot be parsed correct.
HTML code '$'$args["friend"]->get_role_name()'' cannot be parsed correct.
HTML code '$'wp_nonce_url(add_query_arg("wp_http_referer", urlencode(wp_unslash($_SERVER["REQUEST_URI"])), self_admin_url("admin.php?page=edit-friend&user=" . $args["friend"]->ID)), "accept-friend-request-" . $args["friend"]->ID, "accept-friend-request")'' cannot be parsed correct.
HTML code '$'If the URL contains'' cannot be parsed correct.
HTML code '$'$rule_regex'' cannot be parsed correct.
HTML code '$'accept the item'' cannot be parsed correct.
HTML code '$'trash the item'' cannot be parsed correct.
HTML code '$'delete the item'' cannot be parsed correct.
HTML code '$'replace the match with this:'' cannot be parsed correct.
HTML code '$'display: none'' cannot be parsed correct.
HTML code '$'$rule_replace'' cannot be parsed correct.
HTML code '$'accept the item'' cannot be parsed correct.
HTML code '$'trash the item'' cannot be parsed correct.
HTML code '$'delete the item'' cannot be parsed correct.
HTML code '$'self_admin_url("admin.php?page=edit-friend&user=" . $args["friend"]->ID)'' cannot be parsed correct.
HTML code '$'$args'' cannot be parsed correct.
HTML code '$'$args'' cannot be parsed correct.
HTML code '$'wp_create_nonce("preview-rules-" . $args["friend"]->ID)'' cannot be parsed correct.
HTML code '$'apply_filters("get_edit_user_link", $friend_user->user_url, $friend_user->ID)'' cannot be parsed correct.
HTML code '$'$friend_user'' cannot be parsed correct.
HTML code '$'date_i18n(__("F j, Y g:i a"), strtotime($friend_user->user_registered))'' cannot be parsed correct.
HTML code '$'$friend_user->get_role_name()'' cannot be parsed correct.
HTML code '$'wp_nonce_url(add_query_arg("wp_http_referer", urlencode(wp_unslash($_SERVER["REQUEST_URI"])), self_admin_url("admin.php?page=edit-friend&user=" . $args["friend"]->ID)), "add-friend-" . $args["friend"]->ID, "add-friend")'' cannot be parsed correct.
HTML code '$'wp_nonce_url(add_query_arg("wp_http_referer", urlencode(wp_unslash($_SERVER["REQUEST_URI"])), self_admin_url("admin.php?page=edit-friend&user=" . $args["friend"]->ID)), "add-friend-" . $args["friend"]->ID, "add-friend")'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(__("Change to %s.", "friends"), "<a href=" . esc_url(wp_nonce_url(add_query_arg("wp_http_referer", urlencode(wp_unslash($_SERVER["REQUEST_URI"])), self_admin_url("admin.php?page=edit-friend&user=" . $args["friend"]->ID)), "change-to-friend-" . $args["friend"]->ID, "change-to-friend")) . """ . __("Friend", "friends") . "</a>"), ["a" => ["href" => []]])'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(__("Change to %s.", "friends"), "<a href=" . esc_url(wp_nonce_url(add_query_arg("wp_http_referer", urlencode(wp_unslash($_SERVER["REQUEST_URI"])), self_admin_url("admin.php?page=edit-friend&user=" . $args["friend"]->ID)), "change-to-restricted-friend-" . $args["friend"]->ID, "change-to-restricted-friend")) . """ . __("Acquaintance", "friends") . "</a>"), ["a" => ["href" => []]])'' cannot be parsed correct.
HTML code '$'add_query_arg("wp_http_referer", urlencode(wp_unslash($_SERVER["REQUEST_URI"])), self_admin_url("admin.php?page=friends-settings"))'' cannot be parsed correct.
HTML code '$'wp_kses_post(sprintf(__("Send me an e-mail for posts of this friend if matches one of <a href="%s">my keywords</a>", "friends"), esc_url(add_query_arg("wp_http_referer", urlencode(wp_unslash($_SERVER["REQUEST_URI"])), self_admin_url("admin.php?page=friends-settings")))))'' cannot be parsed correct.
HTML code '$'$args_friends_settings_url'' cannot be parsed correct.
HTML code '$'sprintf(_n("There is %1$s active keyword: %2$s", "There are %1$s active keywords: %2$s", count($args["active_keywords"]), "friends"), count($args["active_keywords"]), esc_html(implode(", ", $args["active_keywords"])))'' cannot be parsed correct.
HTML code '$'$args_friends_settings_url'' cannot be parsed correct.
HTML code '$'apply_filters("get_edit_user_link", $friend_user->user_url, $friend_user->ID)'' cannot be parsed correct.
HTML code '$'$friend_user'' cannot be parsed correct.
HTML code '$'$friend_user'' cannot be parsed correct.
HTML code '$'$friend_user'' cannot be parsed correct.
HTML code '$'$friend_user'' cannot be parsed correct.
HTML code '$'disabled="disabled"'' cannot be parsed correct.
HTML code '$'$friend_user'' cannot be parsed correct.
HTML code '$'disabled="disabled"'' cannot be parsed correct.
HTML code '$'<?xml version="1.0" encoding="utf-8"?>'' cannot be parsed correct.
HTML code '$'self_admin_url("admin.php?page=edit-friend-rules&user=" . $args["friend"]->ID)'' cannot be parsed correct.
HTML code '$'sprintf(_n("%d rule", "%d rules", count($args["rules"]), "friends"), count($args["rules"]))'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(__("To unfriend this user, just <a href=%s>delete them on the users page</a>.", "friends"), "" . self_admin_url("users.php?s=" . urlencode($args["friend"]->user_login)) . ""), ["a" => ["href" => []]])'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(__("To allow copying rules between friends, <a href=%s>view the raw rules data</a>.", "friends"), ""#" id="toggle-raw-rules-data""), ["a" => ["href" => [], "id" => []]])'' cannot be parsed correct.
HTML code '$'json_encode($args["rules"], JSON_PRETTY_PRINT)'' cannot be parsed correct.
HTML code '$'$args'' cannot be parsed correct.
HTML code '$'If the title contains'' cannot be parsed correct.
HTML code '$'gmdate("r")'' cannot be parsed correct.
HTML code '$'wp_get_current_user()'' cannot be parsed correct.
HTML code '$'$role'' cannot be parsed correct.
HTML code '$'$user'' cannot be parsed correct.
HTML code '$'$feed_html_url'' cannot be parsed correct.
HTML code '$'$feed_title'' cannot be parsed correct.
HTML code '$'$feed_type'' cannot be parsed correct.
HTML code '$'$feed_xml_url'' cannot be parsed correct.
HTML code '$'$args'' cannot be parsed correct.
HTML code '$'$args'' cannot be parsed correct.
HTML code '$'$args'' cannot be parsed correct.
HTML code '$'$args'' cannot be parsed correct.
HTML code '$'$args'' cannot be parsed correct.
HTML code '$'$args_friend_url'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(__("You\\'re looking to add the URL %1$s (<a href=%2$s>edit</a>). The site has been analyzed and you now have the following options:", "friends"), "<strong>" . esc_html($args["friend_url"]) . "</strong>", "" . admin_url("admin.php?page=add-friend&url=" . $args["friend_url"]) . ""), ["strong" => [], "a" => ["href" => []]])'' cannot be parsed correct.
HTML code '$'$args_friend_display_name'' cannot be parsed correct.
HTML code '$'$args_friend_user_login'' cannot be parsed correct.
HTML code '$'$args_friends_plugin'' cannot be parsed correct.
HTML code '$'$args_friends_plugin'' cannot be parsed correct.
HTML code '$'$role'' cannot be parsed correct.
HTML code '$'$title'' cannot be parsed correct.
HTML code '$'sprintf(__("API URL: %s", "friends"), $args["friends_plugin"])'' cannot be parsed correct.
HTML code '$'$args_message'' cannot be parsed correct.
HTML code '$'$args_codeword'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(__("No friends plugin could be found on %s, therefore only subscription options are available.", "friends"), "<strong>" . esc_html($args["friend_url"]) . "</strong>"), ["strong" => []])'' cannot be parsed correct.
HTML code '$'$c'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'$value'' cannot be parsed correct.
HTML code '$'$feed_url'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(__("By %s"), $api->author), ["a" => ["href" => []]])'' cannot be parsed correct.
HTML code '$'$args_button_classes'' cannot be parsed correct.
HTML code '$'$args'' cannot be parsed correct.
HTML code '$'$args'' cannot be parsed correct.
HTML code '$'$args_install_url'' cannot be parsed correct.
HTML code '$'sprintf(__("Install %1$s %2$s now", "framework"), $api->name, $api->version)'' cannot be parsed correct.
HTML code '$'$args_button_text'' cannot be parsed correct.
HTML code '$'$args'' cannot be parsed correct.
HTML code '$'sprintf(__("More information about %s"), $api->name)'' cannot be parsed correct.
HTML code '$'$args'' cannot be parsed correct.
HTML code '$'$args_deactivate_button_class'' cannot be parsed correct.
HTML code '$'$args'' cannot be parsed correct.
HTML code '$'$args'' cannot be parsed correct.
HTML code '$'$args_install_url'' cannot be parsed correct.
HTML code '$'$args["feed"]->apply_feed_rules($post, null, $args["friend"])_post_title$post_post_title'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "author", true)'' cannot be parsed correct.
HTML code '$'date_i18n(__("F j, Y g:i a"), strtotime($post->post_date))'' cannot be parsed correct.
HTML code '$'_x("Delete", "verb", "friends")'' cannot be parsed correct.
HTML code '$'_x("Trash", "verb")'' cannot be parsed correct.
HTML code '$'_x("Accept", "verb", "friends")'' cannot be parsed correct.
HTML code '$'$args["friend"]->get_local_friends_page_url($post->ID)'' cannot be parsed correct.
HTML code '$' checked'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(__("Subscribe %1$s (<a href=%2$s>preview</a>) as %3$s", "friends"), "<a href=" . esc_attr($feed_url) . "" target="_blank" rel="noopener noreferrer">" . esc_html($details["title"]) . "</a>", "" . esc_url(wp_nonce_url(add_query_arg("wp_http_referer", urlencode(wp_unslash($_SERVER["REQUEST_URI"])), self_admin_url("admin.php?page=add-friend&parser=" . urlencode($details["parser"]) . "&preview=" . urlencode($feed_url))), "preview-feed")) . "" target="_blank"", "</label>" . $select), ["select" => ["name" => []], "label" => [], "option" => ["value" => [], "selected" => []], "a" => ["href" => [], "rel" => [], "target" => []]])'' cannot be parsed correct.
HTML code '$'sprintf(__("Type: %s", "friends"), $details["type"])'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(__("Parser: %s", "friends"), $select), ["select" => ["name" => []], "label" => [], "option" => ["value" => [], "selected" => []]])'' cannot be parsed correct.
HTML code '$'sprintf(__("rel: %s", "friends"), $details["rel"])'' cannot be parsed correct.
HTML code '$'sprintf(_n("%d more feed is available", "%d more feeds are available", $hidden_feed_count, "friends"), $hidden_feed_count)'' cannot be parsed correct.
HTML code '$'sprintf(_n("Show %d unsupported feed", "Show %d unsupported feeds", count($unsupported_feeds), "friends"), count($unsupported_feeds))'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(_n("<a href=%s>There might be a plugin available</a> to add support for it.", "<a href=%s>There might be a plugin available</a> to add support for them.", count($unsupported_feeds), "friends"), "" . self_admin_url("admin.php?page=friends-plugins") . ""), ["a" => ["href" => []]])'' cannot be parsed correct.
HTML code '$'get_the_excerpt($args["post"])'' cannot be parsed correct.
HTML code '$'$id'' cannot be parsed correct.
HTML code '$'$data'' cannot be parsed correct.
HTML code '$'$data'' cannot be parsed correct.
HTML code '$'$role'' cannot be parsed correct.
HTML code '$'$title'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(__("On your homepage, show %s posts.", "friends"), $select), ["select" => ["name" => []], "label" => [], "option" => ["value" => [], "selected" => []], "a" => ["href" => [], "rel" => [], "target" => []]])'' cannot be parsed correct.
HTML code '$'wp_kses(__("With <a href="https://wordpress.org/support/article/post-formats/#supported-formats">Post Formats</a> you can categorize your content in a more detailed way. Examples for post formats are "photo" or "link."", "friends"), ["a" => ["href" => [], "rel" => [], "target" => []]])'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(__("Expose Post Formats as alternate feeds on your homepage (as %s).", "friends"), "<code>&lt;link rel="alternate"/ &gt;</code>"), ["code" => []])'' cannot be parsed correct.
HTML code '$'$c'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'$value'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(__("Unsupported: %s", "friends"), "<a href=" . esc_attr($feed_url) . "" target="_blank" rel="noopener noreferrer">" . esc_html($details["title"]) . "</a> <small>" . esc_html($feed_url) . "</small>"), ["a" => ["href" => [], "rel" => [], "target" => []], "small" => []])'' cannot be parsed correct.
HTML code '$'sprintf(__("Type: %s", "friends"), $details["type"])'' cannot be parsed correct.
HTML code '$'sprintf(__("rel: %s", "friends"), $details["rel"])'' cannot be parsed correct.
HTML code '$'esc_attr_x("Check & add feed", "button", "friends")'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(__("The following parsers are available: %s", "friends"), implode(", ", $args["registered_parsers"])), ["a" => ["href" => [], "rel" => [], "target" => []]])'' cannot be parsed correct.
HTML code '$'esc_attr_x("Add Friend Â»", "button", "friends")'' cannot be parsed correct.
HTML code '$'$args_comment_registration_default'' cannot be parsed correct.
HTML code '$'$args_comment_registration_message'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(__("We\\'ll link "%1$s" to <a href=%2$s>your public profile page</a>.", "friends"), $args["my_network"], $args["public_profile_link"]), ["a" => ["href" => []]])'' cannot be parsed correct.
HTML code '$'$potential_main_user'' cannot be parsed correct.
HTML code '$'$potential_main_user'' cannot be parsed correct.
HTML code '$'$args_codeword'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(__("Download <a href=%s>this OPML file</a> and import it to your feed reader.", "friends"), esc_url(home_url("/friends/opml/?auth=" . $args["private_rss_key"]))), ["a" => ["href" => []]])'' cannot be parsed correct.
HTML code '$'If your feed reader supports it, you can also subscribe to this URL as the OPML file gets updated as you add or remove friends.'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(__("You can also subscribe to a <a href=%s>compiled RSS feed of friend posts</a>.", "friends"), esc_url(home_url("/friends/feed/?auth=" . $args["private_rss_key"]))), ["a" => ["href" => []]])'' cannot be parsed correct.
HTML code '$'Please be careful what you do with these feeds as they might contain private posts of your friends.'' cannot be parsed correct.
HTML code '$'PHP_EOL'' cannot be parsed correct.
HTML code '$'PHP_EOLPHP_EOL'' cannot be parsed correct.
HTML code '$'PHP_EOLPHP_EOL'' cannot be parsed correct.
HTML code '$'$args["friend_user"]->get_local_friends_page_url()'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(__("This notification was sent by the Friends plugin on %s.", "friends"), "<a href=" . esc_attr(home_url()) . """ . is_multisite()get_site_option("site_name")get_option("blogname") . "</a>"), ["a" => ["href" => []]])'' cannot be parsed correct.
HTML code '$'PHP_EOLPHP_EOL'' cannot be parsed correct.
HTML code '$'wp_kses_post(apply_filters("friends_rewrite_mail_html", $args["message"]))'' cannot be parsed correct.
HTML code '$'Return this message to the friend requestor if a wrong code word was provided.'' cannot be parsed correct.
HTML code '$'$args_wrong_codeword_message'' cannot be parsed correct.
HTML code '$'$entry_keyword'' cannot be parsed correct.
HTML code '$'PHP_EOLPHP_EOL'' cannot be parsed correct.
HTML code '$'> str_replace(PHP_EOL, PHP_EOL . "> ", trim($normalized_whitespace))'' cannot be parsed correct.
HTML code '$'PHP_EOLPHP_EOL'' cannot be parsed correct.
HTML code '$'$args["friend_user"]->get_local_friends_page_url()'' cannot be parsed correct.
HTML code '$'$args_email_title'' cannot be parsed correct.
HTML code '$'sprintf(__("Keyword matched: %s", "friends"), $args["keyword"])'' cannot be parsed correct.
HTML code '$'$args["author"]->get_local_friends_page_url()'' cannot be parsed correct.
HTML code '$'$args'' cannot be parsed correct.
HTML code '$'apply_filters("friends_override_author_name", "", $args["author"]->display_name, $args["post"]->ID)'' cannot be parsed correct.
HTML code '$'$args'' cannot be parsed correct.
HTML code '$'wp_kses_post(apply_filters("friends_rewrite_mail_html", $args["post"]->post_content))'' cannot be parsed correct.
HTML code '$'$args["author"]->get_local_friends_page_url($args["post"]->ID)'' cannot be parsed correct.
HTML code '$'$args["author"]->get_local_friends_page_url($args["post"]->ID)'' cannot be parsed correct.
HTML code '$'PHP_EOL'' cannot be parsed correct.
HTML code '$'> str_replace(PHP_EOL, PHP_EOL . "> ", trim($normalized_whitespace))'' cannot be parsed correct.
HTML code '$'PHP_EOL'' cannot be parsed correct.
HTML code '$'PHP_EOL'' cannot be parsed correct.
HTML code '$'PHP_EOL'' cannot be parsed correct.
HTML code '$'PHP_EOL'' cannot be parsed correct.
HTML code '$'PHP_EOL'' cannot be parsed correct.
HTML code '$'PHP_EOL'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(__("This notification was sent by the Friends plugin on %s.", "friends"), "<a href=" . esc_attr(home_url()) . """ . is_multisite()get_site_option("site_name")get_option("blogname") . "</a>"), ["a" => ["href" => []]])'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(__("Published at %s", "friends"), "<a href=" . esc_url(get_permalink($args["post"])) . """ . esc_html(get_permalink($args["post"])) . "</a></strong>"), ["a" => ["href" => []]])'' cannot be parsed correct.
HTML code '$'PHP_EOL'' cannot be parsed correct.
HTML code '$'PHP_EOL'' cannot be parsed correct.
HTML code '$'> str_replace(PHP_EOL, PHP_EOL . "> ", trim($normalized_whitespace))'' cannot be parsed correct.
HTML code '$'PHP_EOL'' cannot be parsed correct.
HTML code '$'PHP_EOL'' cannot be parsed correct.
HTML code '$'PHP_EOL'' cannot be parsed correct.
HTML code '$'PHP_EOL'' cannot be parsed correct.
HTML code '$'PHP_EOL'' cannot be parsed correct.
HTML code '$'PHP_EOL'' cannot be parsed correct.
HTML code '$'$args["author"]->get_local_friends_page_url()'' cannot be parsed correct.
HTML code '$'$args'' cannot be parsed correct.
HTML code '$'apply_filters("friends_override_author_name", "", $args["author"]->display_name, $args["post"]->ID)'' cannot be parsed correct.
HTML code '$'$args'' cannot be parsed correct.
HTML code '$'wp_kses_post(apply_filters("friends_rewrite_mail_html", $args["post"]->post_content))'' cannot be parsed correct.
HTML code '$'PHP_EOL'' cannot be parsed correct.
HTML code '$'PHP_EOLPHP_EOL'' cannot be parsed correct.
HTML code '$'PHP_EOLPHP_EOL'' cannot be parsed correct.
HTML code '$'self_admin_url("users.php?role=friend_request")'' cannot be parsed correct.
HTML code '$'PHP_EOLPHP_EOL'' cannot be parsed correct.
HTML code '$'$args["friend_user"]->get_local_friends_page_url()'' cannot be parsed correct.
HTML code '$'sprintf(__("My %1$s reactions on %2$s", "friends"), $args["friends"]->frontend->reaction, get_the_author_meta("display_name"))'' cannot be parsed correct.
HTML code '$'get_the_author_meta("display_name")'' cannot be parsed correct.
HTML code '$'wp_kses($args["friend_user"]->description, ["a" => ["href" => []]])'' cannot be parsed correct.
HTML code '$'$args["friend_user"]->get_role_name()'' cannot be parsed correct.
HTML code '$'sprintf(__("Since %s", "friends"), date_i18n(__("F j, Y"), strtotime($args["friend_user"]->user_registered)))'' cannot be parsed correct.
HTML code '$'$args["friend_user"]->get_local_friends_page_post_format_url($post_format)'' cannot be parsed correct.
HTML code '$'$args["friends"]->get_post_format_plural_string($post_format, $count)'' cannot be parsed correct.
HTML code '$'$args["friends"]->admin->admin_edit_user_link(false, get_the_author_meta("ID"))'' cannot be parsed correct.
HTML code '$'sprintf(_n("%s feed", "%s feeds", $active_feeds, "friends"), $active_feeds)'' cannot be parsed correct.
HTML code '$'sprintf(_n("(+%s more)", "(+%s more)", $feeds - $active_feeds, "friends"), $feeds - $active_feeds)'' cannot be parsed correct.
HTML code '$'self_admin_url("admin.php?page=edit-friend-rules&user=" . $args["friend_user"]->ID)'' cannot be parsed correct.
HTML code '$'sprintf(_n("%d rule", "%d rules", $rules, "friends"), $rules)'' cannot be parsed correct.
HTML code '$'$args["author"]->get_local_friends_page_url($args["post"]->ID)'' cannot be parsed correct.
HTML code '$'$args["author"]->get_local_friends_page_url($args["post"]->ID)'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(__("Published at %s", "friends"), "<a href=" . esc_url(get_permalink($args["post"])) . """ . esc_html(get_permalink($args["post"])) . "</a></strong>"), ["a" => ["href" => []]])'' cannot be parsed correct.
HTML code '$'self_admin_url("admin.php?page=friends-refresh&user=" . $args["friend_user"]->ID)'' cannot be parsed correct.
HTML code '$'admin_url("admin-ajax.php")'' cannot be parsed correct.
HTML code '$'Title'' cannot be parsed correct.
HTML code '$'sprintf(__("What are you up to, %s?", "friends"), wp_get_current_user()->display_name)'' cannot be parsed correct.
HTML code '$'home_url("/friends/")'' cannot be parsed correct.
HTML code '$'home_url("/friends/")'' cannot be parsed correct.
HTML code '$'$_GET_s'' cannot be parsed correct.
HTML code '$'sprintf(__("%1$s hasn\\'t posted anything with the post format %2$s yet!", "friends"), get_the_author(), $post_formats[$friends->frontend->post_format])'' cannot be parsed correct.
HTML code '$'$args["friends"]->admin->admin_edit_user_link(false, get_the_author_meta("ID"))'' cannot be parsed correct.
HTML code '$'get_the_ID()'' cannot be parsed correct.
HTML code '$'get_the_ID()'' cannot be parsed correct.
HTML code '$'wp_create_nonce("friends-mark-read")'' cannot be parsed correct.
HTML code '$'get_post_modified_time("r")'' cannot be parsed correct.
HTML code '$'sprintf(__("%s ago"), human_time_diff(get_post_modified_time("U", true)))'' cannot be parsed correct.
HTML code '$'apply_filters("the_content", $content)'' cannot be parsed correct.
HTML code '$'$args'' cannot be parsed correct.
HTML code '$'$args_subject'' cannot be parsed correct.
HTML code '$'$args_subject'' cannot be parsed correct.
HTML code '$'self_admin_url("admin.php?page=add-friend")'' cannot be parsed correct.
HTML code '$'$friend_user->get_local_friends_page_url()'' cannot be parsed correct.
HTML code '$'sprintf(__("Your friends haven\\'t posted anything with the post format %s yet!", "friends"), $post_formats[$friends->frontend->post_format])'' cannot be parsed correct.
HTML code '$'home_url("/friends/")'' cannot be parsed correct.
HTML code '$'home_url("/friends/")'' cannot be parsed correct.
HTML code '$'sprintf(__("My %1$s reactions on %2$s", "friends"), $args["friends"]->frontend->reaction, $title)'' cannot be parsed correct.
HTML code '$'_x("Link feed", "Post format", "friends")'' cannot be parsed correct.
HTML code '$'wp_kses($data["description"], ["a" => ["href" => []]])'' cannot be parsed correct.
HTML code '$'home_url("/friends/type/" . $post_format . "/")'' cannot be parsed correct.
HTML code '$'$args["friends"]->get_post_format_plural_string($post_format, $count)'' cannot be parsed correct.
HTML code '$'self_admin_url("admin.php?page=add-friend")'' cannot be parsed correct.
HTML code '$'sprintf(__("%s hasn\\'t posted anything yet!", "friends"), get_the_author())'' cannot be parsed correct.
HTML code '$'self_admin_url("admin.php?page=friends-settings")'' cannot be parsed correct.
HTML code '$'$friend_user->get_local_friends_page_url()'' cannot be parsed correct.
HTML code '$'get_avatar_url(get_the_author_meta("ID"))'' cannot be parsed correct.
HTML code '$'get_the_author_meta("url")'' cannot be parsed correct.
HTML code '$'$args_avatarget_avatar_url(get_the_author_meta("ID"))'' cannot be parsed correct.
HTML code '$'$friend_user->get_local_friends_page_url()'' cannot be parsed correct.
HTML code '$'apply_filters("friends_override_author_name", "", $author_name, get_the_id())'' cannot be parsed correct.
HTML code '$'get_author_posts_url(get_the_author_meta("ID"))'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(__("%1$s on %2$s", "friends"), "<a href=" . esc_attr($friend_user->get_local_friends_page_url() . get_the_ID() . "/") . "" title="" . get_the_time("r") . """ . sprintf(__("%s ago"), human_time_diff(get_post_time("U", true))) . "</a>", "<a href=" . esc_url(get_the_permalink()) . "" rel="noopener noreferrer" target="_blank">" . esc_html(parse_url(get_the_permalink(), PHP_URL_HOST)) . "</a>"), ["a" => ["href" => [], "rel" => [], "target" => [], "title" => []]])'' cannot be parsed correct.
HTML code '$'Estimated reading time'' cannot be parsed correct.
HTML code '$'sprintf(__("%s read", "friends"), $args["read_time"])'' cannot be parsed correct.
HTML code '$'intval(_x("250", "dropdown-menu-width", "friends"))'' cannot be parsed correct.
HTML code '$'$args["friends"]->admin->admin_edit_user_link(false, get_the_author_meta("ID"))'' cannot be parsed correct.
HTML code '$'wp_create_nonce("friends-change-post-format_" . get_the_ID())'' cannot be parsed correct.
HTML code '$'get_the_ID()'' cannot be parsed correct.
HTML code '$'$format'' cannot be parsed correct.
HTML code '$'wp_create_nonce("friends-reaction")'' cannot be parsed correct.
HTML code '$'get_the_ID()'' cannot be parsed correct.
HTML code '$'$id'' cannot be parsed correct.
HTML code '$'$data'' cannot be parsed correct.
HTML code '$'$data'' cannot be parsed correct.
HTML code '$'$args_before_widget'' cannot be parsed correct.
HTML code '$'$args_before_title'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(_n("%1$s <a href=%2$s>(%3$s request)</a>", "%1$s <a href=%2$s>(%3$s requests)</a>", $friend_requests->get_total(), "friends"), $friends_title, "" . esc_attr(self_admin_url("users.php?role=friend_request")) . "" class="open-requests"", "<span class="friend-count">" . $friend_requests->get_total() . "</span>"), ["span" => ["class" => []], "a" => ["class" => [], "href" => []]])'' cannot be parsed correct.
HTML code '$'wp_kses($friends_title, ["span" => ["class" => []]])'' cannot be parsed correct.
HTML code '$'$args_after_title'' cannot be parsed correct.
HTML code '$'$args_before_title'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(_n("%s Subscription", "%s Subscriptions", $subscriptions->get_total(), "friends"), "<span class="subscription-count">" . $subscriptions->get_total() . "</span>"), ["span" => ["class" => []]])'' cannot be parsed correct.
HTML code '$'$args_after_title'' cannot be parsed correct.
HTML code '$'$args_after_widget'' cannot be parsed correct.
HTML code '$'$friend_user->get_local_friends_page_url()'' cannot be parsed correct.
HTML code '$'$title'' cannot be parsed correct.
HTML code '$'self_admin_url("admin.php?page=edit-friend-rules&user=" . get_the_author_meta("ID") . "&post=" . get_the_ID())'' cannot be parsed correct.
HTML code '$'wp_create_nonce("trash-post_" . get_the_ID())'' cannot be parsed correct.
HTML code '$'wp_create_nonce("untrash-post_" . get_the_ID())'' cannot be parsed correct.
HTML code '$'get_the_ID()'' cannot be parsed correct.
HTML code '$'wp_create_nonce("trash-post_" . get_the_ID())'' cannot be parsed correct.
HTML code '$'wp_create_nonce("untrash-post_" . get_the_ID())'' cannot be parsed correct.
HTML code '$'get_the_ID()'' cannot be parsed correct.
HTML code '$'<button class="btn ml-1 friends-action friends-reactionimplode(" ", $classes)" data-id="get_the_ID()" data-emoji="$slug" data-nonce="wp_create_nonce("friends-reaction")" title="$reaction"><span'' cannot be parsed correct.
HTML code '$'$reaction'' cannot be parsed correct.
HTML code '$'</span> $reaction'' cannot be parsed correct.
HTML code '$'</button>PHP_EOL'' cannot be parsed correct.
HTML code '$'_x("Reaction", "+ Reaction", "friends")'' cannot be parsed correct.
HTML code '$'$args_before_widget'' cannot be parsed correct.
HTML code '$'$args_before_titleapply_filters("convert_chars", $title)$args_after_title'' cannot be parsed correct.
HTML code '$'$friend_user_display_name'' cannot be parsed correct.
HTML code '$'$args_before_widget'' cannot be parsed correct.
HTML code '$'$args_before_titleapply_filters("widget_title", $instance["title"])$args_after_title'' cannot be parsed correct.
HTML code '$'self_admin_url("admin.php?page=add-friend")'' cannot be parsed correct.
HTML code '$'Enter the Friend\'s URL'' cannot be parsed correct.
HTML code '$'Friend\'s URL'' cannot be parsed correct.
HTML code '$'Send Request'' cannot be parsed correct.
HTML code '$'$args_after_widget'' cannot be parsed correct.
HTML code '$'$title'' cannot be parsed correct.
HTML code '$'$this->get_field_id("post_format_title_" . $slug)'' cannot be parsed correct.
HTML code '$'$this->get_field_name("post_format_title_" . $slug)'' cannot be parsed correct.
HTML code '$'array_merge($this->defaults(), $instance)_post_format_title_$slug'' cannot be parsed correct.
HTML code '$'$title'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(__("Visit %1$s. Back to <a href=%2$s>your friends page</a>.", "friends"), "<a href=" . esc_url($friends->frontend->author->user_url) . "" class="auth-link" data-token="" . esc_attr(get_user_option("friends_out_token", $friends->frontend->author->ID)) . """ . esc_html(sprintf(__("%1$s\\'s external site at %2$s", "friends"), $friends->frontend->author->display_name, preg_replace("#https?://#", "", trim($friends->frontend->author->user_url, "/")))) . "</a>", "" . esc_attr(home_url("/friends/")) . ""), ["a" => ["href" => [], "class" => [], "data-token" => []]])'' cannot be parsed correct.
HTML code '$'$args_after_widget'' cannot be parsed correct.
HTML code '$'$this->get_field_id("title")'' cannot be parsed correct.
HTML code '$'$this->get_field_name("title")'' cannot be parsed correct.
HTML code '$'array_merge($this->defaults(), $instance)_title'' cannot be parsed correct.
HTML code '$'$args_before_widget'' cannot be parsed correct.
HTML code '$'$args_before_titleapply_filters("widget_title", $instance["title"])$args_after_title'' cannot be parsed correct.
HTML code '$'admin_url("admin-ajax.php")'' cannot be parsed correct.
HTML code '$'Title'' cannot be parsed correct.
HTML code '$'sprintf(__("What do you want to post just to your friends, %s?", "friends"), wp_get_current_user()->display_name)'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(__("(You can also use the <a href=%1$s>WordPress editor</a> and set %2$s to %3$s.)", "friends"), "" . self_admin_url("post-new.php") . "", __("Visibility"), __("Private")), ["a" => ["href" => []]])'' cannot be parsed correct.
HTML code '$'$args_after_widget'' cannot be parsed correct.
HTML code '$'$args_before_widget'' cannot be parsed correct.
HTML code '$'$args_before_titleapply_filters("widget_title", $instance["title"])$args_after_title'' cannot be parsed correct.
HTML code '$'<a href="/friends/?refresh">Refresh</a>'' cannot be parsed correct.
HTML code '$'$args_after_widget'' cannot be parsed correct.
HTML code '$'wp_kses($args["before_widget"], "post")'' cannot be parsed correct.
HTML code '$'wp_kses($args["before_title"] . $instance["title"] . $args["after_title"], "post")'' cannot be parsed correct.
HTML code '$'home_url("/friends/")'' cannot be parsed correct.
HTML code '$'home_url("/friends/type/" . $slug . "/")'' cannot be parsed correct.
HTML code '$'wp_parse_args($instance, $this->defaults())_post_format_title_$slug'' cannot be parsed correct.
HTML code '$'wp_kses($args["after_widget"], "post")'' cannot be parsed correct.
HTML code '$'$this->get_field_name("title")'' cannot be parsed correct.
HTML code '$'array_merge($this->defaults(), $instance)_title'' cannot be parsed correct.
HTML code '$'$this->get_field_id("show_post_format_" . $slug)'' cannot be parsed correct.
HTML code '$'$this->get_field_name("show_post_format_" . $slug)'' cannot be parsed correct.
HTML code '$'Deleting '' cannot be parsed correct.
HTML code '$'<br/>'' cannot be parsed correct.
HTML code '$'Deleting '' cannot be parsed correct.
HTML code '$'<br/>'' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$'<br/>'' cannot be parsed correct.
HTML code '$'<div id="preview-rules">'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$'
'' cannot be parsed correct.
HTML code '$'<div id="available-emojis-template">'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$' | '' cannot be parsed correct.
HTML code '$' | '' cannot be parsed correct.
HTML code '$' | '' cannot be parsed correct.
HTML code '$': '' cannot be parsed correct.
HTML code '$' | <span title='' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</span>'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:35.633933.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.044436.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 101 do_action/apply_filters calls and 157 add_action/add_filter calls. Now connecting do-add pairs.
Added 52 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:09.370965.

52 PHP_REACHES edges created
52 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FileProDetector
### Start running FrontBaseDetector
### Finish running DbplusDetector
### Start running HashDetector
### Finish running DbaseDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running FirebirdInterBaseDetector
### Start running IngresDetector
### Finish running ArrayElementDetector
### Start running maxdbDetector
### Finish running FrontBaseDetector
### Start running MongoDbDetector
### Finish running IBMDb2Detector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running InformixDetector
### Start running MySQLDetector
### Finish running IngresDetector
### Start running MySQLiDetector
### Finish running MsqlDetector
### Start running Oci8Detector
### Finish running MongoDbDetector
### Start running OpenSSLDetector
### Finish running MySQLDetector
### Start running ParadoxDetector
### Finish running Oci8Detector
### Start running PasswordHashingDetector
### Finish running ParadoxDetector
### Start running PhpCurlDetector
### Finish running PhpCurlDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running HashDetector
### Start running PHPRetrievalDetector
### Finish running PasswordHashingDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPStorageDetector
### Start running PhpVarDetector
### Finish running PHPRetrievalDetector
### Start running PostgreSQLDetector
### Finish running PostgreSQLDetector
### Start running PropertyDetector
### Finish running MySQLiDetector
### Start running Sqlite3Detector
### Finish running maxdbDetector
### Start running SqliteDetector
### Finish running OpenSSLDetector
### Start running SqlServerDetector
### Finish running PHPIncludedDetector
### Start running SybaseDetector
### Finish running Sqlite3Detector
### Start running TokyoTyrantDetector
### Finish running SqliteDetector
### Start running UserInputDetector
### Finish running TokyoTyrantDetector
### Start running VariableDetector
### Finish running SybaseDetector
### Start running WordpressHashingFnDetector
### Finish running PhpVarDetector
### Start running WordPressRemoteDetector
### Finish running SqlServerDetector
### Start running WordPressRetrievalDetector
### Finish running PropertyDetector
### Start running WordPressStorageDetector
### Finish running UserInputDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running WordpressHashingFnDetector
### Start running GenericEncryptionDetector
### Finish running WordPressRemoteDetector
### Start running DeletionDetector
### Finish running GenericEncryptionDetector
### Start running UninstallDetector
### Finish running GenericDatabaseUsageDetector
### Finish running VariableDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running WordPressStorageDetector
### Finish running WordPressRetrievalDetector
### Finished running detectors
includes/class-friends-access-control.php:120
  - password_verify called with hash algorithm .
includes/class-friends-access-control.php:208
  - password_hash called with hash algorithm PASSWORD_DEFAULT (which uses PASSWORD_BCRYPT). 

includes/class-friends-admin.php:388
  - SHA1 called with parameters [json, request]. Ignore if [json, request] does not contain personal information.
includes/class-friends-admin.php:389
  - SHA1 called with parameters [json, request]. Ignore if [json, request] does not contain personal information.
includes/class-friends-frontend.php:190
  - SHA1 called with parameters [nonce, wp_salt, query_vars]. Ignore if [nonce, wp_salt, query_vars] does not contain personal information.
includes/class-friends-frontend.php:360
  - SHA1 called with parameters [nonce, wp_salt, query_vars]. Ignore if [nonce, wp_salt, query_vars] does not contain personal information.
includes/class-friends-rest.php:88
  - SHA1 called with parameters [request_id]. Ignore if [request_id] does not contain personal information.
includes/class-friends-rest.php:104
  - SHA1 called with parameters [request_id]. Ignore if [request_id] does not contain personal information.
includes/class-friends-rest.php:106
  - SHA1 called with parameters [request_id, future_in_token]. Ignore if [request_id, future_in_token] does not contain personal information.
includes/class-friends-rest.php:151
  - SHA1 called with parameters [request_id]. Ignore if [request_id] does not contain personal information.
includes/class-friends-rest.php:155
  - SHA1 called with parameters [future_in_token, future_out_token]. Ignore if [future_in_token, future_out_token] does not contain personal information.
includes/class-friends-rest.php:391
  - SHA1 called with parameters [request_id, future_out_token]. Ignore if [request_id, future_out_token] does not contain personal information.
includes/class-friends-rest.php:407
  - SHA1 called with parameters [future_in_token, future_out_token]. Ignore if [future_in_token, future_out_token] does not contain personal information. 

includes/class-friends-reactions.php:255
  - RETRIEVAL call to file_get_contents( . "/../emojis.json").
  - Data types: file
libs/gutenberg-everywhere/classes/iso-gutenberg.php:207
  - RETRIEVAL call to file_get_contents($file).
  - Data types: file 

includes/class-friends-admin.php:918
  - object property '$friend->first_name' of personal types {'first_name'} is found.
  - Data types: first_name
includes/class-friends-notifications.php:72
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-notifications.php:104
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-notifications.php:124
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-notifications.php:159
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-notifications.php:179
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-notifications.php:210
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-notifications.php:225
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-notifications.php:255
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-notifications.php:277
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-notifications.php:309
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-reactions.php:159
  - object property '$remote_reactions[$emoji]->usernames' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
includes/class-friends-reactions.php:394
  - object property '$reaction->usernames' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
templates/frontend/parts/reactions.php:14
  - object property '$reaction->usernames' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta 

includes/class-friend-user.php:151
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
includes/class-friend-user.php:151
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
includes/class-friend-user.php:152
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
includes/class-friend-user.php:152
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
includes/class-friend-user.php:153
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
includes/class-friends-notifications.php:83
  - variable '$email_title' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-notifications.php:90
  - variable '$email_message' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-notifications.php:92
  - variable '$email_title' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-notifications.php:95
  - variable '$email_message' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-notifications.php:101
  - variable '$email_message' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-notifications.php:104
  - variable '$email_title' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-notifications.php:104
  - variable '$email_message' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-notifications.php:137
  - variable '$email_title' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-notifications.php:145
  - variable '$email_message' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-notifications.php:147
  - variable '$email_title' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-notifications.php:150
  - variable '$email_message' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-notifications.php:156
  - variable '$email_message' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-notifications.php:159
  - variable '$email_title' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-notifications.php:159
  - variable '$email_message' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-notifications.php:189
  - variable '$email_title' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-notifications.php:196
  - variable '$email_message' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-notifications.php:198
  - variable '$email_title' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-notifications.php:201
  - variable '$email_message' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-notifications.php:207
  - variable '$email_message' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-notifications.php:210
  - variable '$email_title' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-notifications.php:210
  - variable '$email_message' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-notifications.php:234
  - variable '$email_title' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-notifications.php:241
  - variable '$email_message' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-notifications.php:243
  - variable '$email_title' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-notifications.php:246
  - variable '$email_message' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-notifications.php:252
  - variable '$email_message' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-notifications.php:255
  - variable '$email_title' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-notifications.php:255
  - variable '$email_message' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-notifications.php:286
  - variable '$email_title' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-notifications.php:295
  - variable '$email_message' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-notifications.php:297
  - variable '$email_title' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-notifications.php:300
  - variable '$email_message' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-notifications.php:306
  - variable '$email_message' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-notifications.php:309
  - variable '$email_title' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-notifications.php:309
  - variable '$email_message' of personal types {'email'} is found.
  - Data types: email
includes/class-friends-reactions.php:144
  - variable '$reacting_usernames' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
includes/class-friends-reactions.php:147
  - variable '$reacting_usernames' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
includes/class-friends-reactions.php:152
  - variable '$usernames' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
includes/class-friends-reactions.php:152
  - variable '$reacting_usernames' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
includes/class-friends-reactions.php:154
  - variable '$usernames' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
includes/class-friends-reactions.php:159
  - variable '$usernames' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
includes/class-friends-reactions.php:163
  - variable '$usernames' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
includes/class-friends-reactions.php:163
  - variable '$usernames' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
includes/class-friends-reactions.php:164
  - variable '$usernames' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
includes/class-friends-reactions.php:172
  - variable '$usernames' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
includes/class-friends.php:461
  - variable '$id_or_email' of personal types {'email'} is found.
  - Data types: email
includes/class-friends.php:462
  - variable '$id_or_email' of personal types {'email'} is found.
  - Data types: email
includes/class-friends.php:463
  - variable '$id_or_email' of personal types {'email'} is found.
  - Data types: email
includes/class-friends.php:463
  - variable '$id_or_email' of personal types {'email'} is found.
  - Data types: email
includes/class-friends.php:464
  - variable '$id_or_email' of personal types {'email'} is found.
  - Data types: email
includes/class-friends.php:465
  - variable '$id_or_email' of personal types {'email'} is found.
  - Data types: email
includes/class-friends.php:465
  - variable '$id_or_email' of personal types {'email'} is found.
  - Data types: email
includes/class-friends.php:466
  - variable '$id_or_email' of personal types {'email'} is found.
  - Data types: email
includes/class-friends.php:467
  - variable '$id_or_email' of personal types {'email'} is found.
  - Data types: email
includes/class-friends.php:467
  - variable '$id_or_email' of personal types {'email'} is found.
  - Data types: email
includes/class-friends.php:471
  - variable '$id_or_email' of personal types {'email'} is found.
  - Data types: email
includes/class-friends.php:471
  - variable '$id_or_email' of personal types {'email'} is found.
  - Data types: email
includes/class-friends.php:472
  - variable '$id_or_email' of personal types {'email'} is found.
  - Data types: email 

includes/class-friends-admin.php:926
  - CRYPTOGRAPHY call to wp_update_user($friend) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
includes/class-friends-rest.php:141
  - CRYPTOGRAPHY call to wp_update_user(["ID" => $friend_user->ID, "nickname" => $request->get_param("name"), "first_name" => $request->get_param("name"), "display_name" => $request->get_param("name")]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta 

includes/class-friends-plugin-installer.php:104
  - API call to wp_remote_get("https://raw.githubusercontent.com/akirk/friends/main/plugins.json", ["timeout" => 10, "headers" => ["Accept" => "application/json"]]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
libs/gutenberg-everywhere/classes/iso-gutenberg.php:197
  - API call to wp_remote_get($style). Passed arguments: 0: $url (string). Returns (array|WP_Error).
  - Data types: remote 

feed-parsers/class-friends-feed-parser-simplepie.php:162
  - RETRIEVAL call to get_option("blog_charset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
feed-parsers/class-friends-feed-parser-simplepie.php:225
  - RETRIEVAL call to get_option("blog_charset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class-friend-user-feed.php:128
  - RETRIEVAL call to get_metadata("term", $this->term->term_id, "active", true) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 3: $single (bool), 2: $meta_key (string). Returns (mixed).
  - Data types: meta
includes/class-friend-user-feed.php:137
  - RETRIEVAL call to get_metadata("term", $this->term->term_id, "post-format", true) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 3: $single (bool), 2: $meta_key (string). Returns (mixed).
  - Data types: meta
includes/class-friend-user-feed.php:146
  - RETRIEVAL call to get_metadata("term", $this->term->term_id, "parser", true) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 3: $single (bool), 2: $meta_key (string). Returns (mixed).
  - Data types: meta
includes/class-friend-user-feed.php:155
  - RETRIEVAL call to get_metadata("term", $this->term->term_id, "mime-type", true) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 3: $single (bool), 2: $meta_key (string). Returns (mixed).
  - Data types: meta
includes/class-friend-user-feed.php:164
  - RETRIEVAL call to get_metadata("term", $this->term->term_id, "title", true) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 3: $single (bool), 2: $meta_key (string). Returns (mixed).
  - Data types: meta
includes/class-friend-user-feed.php:173
  - RETRIEVAL call to get_metadata("term", $this->term->term_id, "last-log", true) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 3: $single (bool), 2: $meta_key (string). Returns (mixed).
  - Data types: meta
includes/class-friend-user-feed.php:182
  - RETRIEVAL call to get_metadata("term", $this->term->term_id, "active", true) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 3: $single (bool), 2: $meta_key (string). Returns (mixed).
  - Data types: meta
includes/class-friend-user-feed.php:361
  - RETRIEVAL call to $friend_user->get_user_option("friends_feed_url") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: user_meta
includes/class-friend-user.php:60
  - RETRIEVAL call to get_user_by("login", $user_login) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
includes/class-friend-user.php:174
  - RETRIEVAL call to get_user_by("login", $user_login) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
includes/class-friend-user.php:192
  - RETRIEVAL call to get_user_by("ID", $user_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
includes/class-friend-user.php:386
  - RETRIEVAL call to $this->get_user_option("friends_enable_retention_number") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: user_meta
includes/class-friend-user.php:406
  - RETRIEVAL call to $this->get_user_option("friends_retention_number") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: user_meta
includes/class-friend-user.php:431
  - RETRIEVAL call to $this->get_user_option("friends_enable_retention_days") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: user_meta
includes/class-friend-user.php:451
  - RETRIEVAL call to $this->get_user_option("friends_retention_days") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: user_meta
includes/class-friend-user.php:522
  - RETRIEVAL call to get_option("friends_feed_rules_" . $this->ID) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class-friend-user.php:536
  - RETRIEVAL call to get_option("friends_feed_catch_all_" . $this->ID) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class-friend-user.php:561
  - RETRIEVAL call to get_post_meta($post->ID, "remote_post_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-friend-user.php:628
  - RETRIEVAL call to get_option("friends_default_friend_role", "friend") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-friend-user.php:645
  - RETRIEVAL call to $this->get_user_option("friends_in_token") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: user_meta
includes/class-friend-user.php:649
  - RETRIEVAL call to $this->get_user_option("friends_out_token") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: user_meta
includes/class-friend-user.php:766
  - RETRIEVAL call to $this->get_user_option("friends_rest_url") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: user_meta
includes/class-friend-user.php:784
  - RETRIEVAL call to get_user_option($option_name, $this->ID) alters data types {'user_meta'}. Passed arguments: 0: $option (string), 1: $user (int). Returns (mixed).
  - Data types: user_meta
includes/class-friends-access-control.php:86
  - RETRIEVAL call to get_option("friends_private_rss_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class-friends-access-control.php:103
  - RETRIEVAL call to get_option("friends_in_token_" . $token) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class-friends-access-control.php:113
  - RETRIEVAL call to get_user_option("friends_in_token", $user_id) alters data types {'user_meta'}. Passed arguments: 0: $option (string), 1: $user (int). Returns (mixed).
  - Data types: user_meta
includes/class-friends-access-control.php:120
  - RETRIEVAL call to get_user_option("friends_out_token", $user_id) alters data types {'user_meta'}. Passed arguments: 0: $option (string), 1: $user (int). Returns (mixed).
  - Data types: user_meta
includes/class-friends-access-control.php:203
  - RETRIEVAL call to $friend_user->get_user_option("friends_out_token") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: user_meta
includes/class-friends-access-control.php:204
  - RETRIEVAL call to $friend_user->get_user_option("friends_in_token") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: user_meta
includes/class-friends-access-control.php:253
  - RETRIEVAL call to get_user_option("friends_in_token", $user_id) alters data types {'user_meta'}. Passed arguments: 0: $option (string), 1: $user (int). Returns (mixed).
  - Data types: user_meta
includes/class-friends-admin.php:64
  - RETRIEVAL call to get_option("permalink_structure") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class-friends-admin.php:108
  - RETRIEVAL call to get_user_meta(get_current_user_id(), "friends_hide_welcome_panel", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
includes/class-friends-admin.php:348
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
includes/class-friends-admin.php:557
  - RETRIEVAL call to get_option("WPLANG") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class-friends-admin.php:567
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
includes/class-friends-admin.php:601
  - RETRIEVAL call to get_option("friends_notification_keywords", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-friends-admin.php:610
  - RETRIEVAL call to get_option("friends_default_friend_role", "friend") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-friends-admin.php:611
  - RETRIEVAL call to get_option("friends_force_enable_post_formats") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class-friends-admin.php:613
  - RETRIEVAL call to get_option("friends_limit_homepage_post_format", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-friends-admin.php:614
  - RETRIEVAL call to get_option("friends_expose_post_format_feeds") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class-friends-admin.php:615
  - RETRIEVAL call to get_option("friends_private_rss_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class-friends-admin.php:616
  - RETRIEVAL call to get_option("comment_registration") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class-friends-admin.php:617
  - RETRIEVAL call to get_option("friends_comment_registration_message", $comment_registration_message) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-friends-admin.php:621
  - RETRIEVAL call to get_option("friends_codeword", "friends") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-friends-admin.php:622
  - RETRIEVAL call to get_option("friends_require_codeword") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class-friends-admin.php:623
  - RETRIEVAL call to get_option("friends_wrong_codeword_message", $wrong_codeword_message) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-friends-admin.php:624
  - RETRIEVAL call to get_user_option("friends_no_friend_request_notification") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: user_meta
includes/class-friends-admin.php:625
  - RETRIEVAL call to get_user_option("friends_no_new_post_notification") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: user_meta
includes/class-friends-admin.php:724
  - RETRIEVAL call to get_post(intval($_GET["post"])) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, wp_post, post
includes/class-friends-admin.php:754
  - RETRIEVAL call to get_post(intval($_GET["post"])) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, wp_post, post
includes/class-friends-admin.php:880
  - RETRIEVAL call to get_option("friends_default_friend_role", "friend") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-friends-admin.php:935
  - RETRIEVAL call to get_user_option("friends_hide_from_friends_page") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: user_meta
includes/class-friends-admin.php:951
  - RETRIEVAL call to get_user_option("friends_no_new_post_notification") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: user_meta
includes/class-friends-admin.php:959
  - RETRIEVAL call to get_user_option("friends_no_keyword_notification") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: user_meta
includes/class-friends-admin.php:1082
  - RETRIEVAL call to get_user_option("friends_hide_from_friends_page") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: user_meta
includes/class-friends-admin.php:1404
  - RETRIEVAL call to get_option("friends_default_friend_role", "friend") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-friends-admin.php:1622
  - RETRIEVAL call to get_user_option("friends_no_new_post_notification_" . $friend_id) alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: user_meta
includes/class-friends-admin.php:1627
  - RETRIEVAL call to get_user_option("friends_no_keyword_notification_" . $friend_id) alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: user_meta
includes/class-friends-admin.php:1665
  - RETRIEVAL call to get_user_option("friends_hide_from_friends_page") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: user_meta
includes/class-friends-admin.php:1677
  - RETRIEVAL call to get_user_option("friends_no_new_post_notification") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: user_meta
includes/class-friends-admin.php:1730
  - RETRIEVAL call to get_user_option("friends_request_message", $user->ID) alters data types {'user_meta'}. Passed arguments: 0: $option (string), 1: $user (int). Returns (mixed).
  - Data types: user_meta
includes/class-friends-admin.php:1778
  - RETRIEVAL call to get_option("friends_default_friend_role", "friend") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-friends-admin.php:1919
  - RETRIEVAL call to get_user_option("friends_unobtrusive_badge") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: user_meta
includes/class-friends-admin.php:1939
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
includes/class-friends-automatic-status.php:210
  - RETRIEVAL call to get_post($post_id) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, wp_post, post
includes/class-friends-blocks.php:337
  - RETRIEVAL call to get_transient($access_transient_key) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
includes/class-friends-feed.php:210
  - RETRIEVAL call to get_post(intval($post_id)) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, wp_post, post
includes/class-friends-feed.php:234
  - RETRIEVAL call to get_post(intval($post_id)) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, wp_post, post
includes/class-friends-feed.php:316
  - RETRIEVAL call to get_post_meta($item->ID, "author", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-friends-feed.php:465
  - RETRIEVAL call to get_option("friends_notification_keywords", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-friends-frontend.php:134
  - RETRIEVAL call to get_the_author() alters data types {'user_meta'}. Returns (string|null).
  - Data types: user_meta
includes/class-friends-frontend.php:137
  - RETRIEVAL call to get_the_author() alters data types {'user_meta'}. Returns (string|null).
  - Data types: user_meta
includes/class-friends-frontend.php:301
  - RETRIEVAL call to get_option("blog_charset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class-friends-frontend.php:333
  - RETRIEVAL call to get_the_author_meta("ID") alters data types {'user_meta'}. Passed arguments: 0: $field (string). Returns (string).
  - Data types: user_meta
includes/class-friends-frontend.php:334
  - RETRIEVAL call to get_post_meta(get_the_ID(), "gravatar", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-friends-frontend.php:499
  - RETRIEVAL call to get_the_author_meta("ID") alters data types {'user_meta'}. Passed arguments: 0: $field (string). Returns (string).
  - Data types: user_meta
includes/class-friends-frontend.php:584
  - RETRIEVAL call to get_post_meta($post_id, "author", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-friends-frontend.php:766
  - RETRIEVAL call to get_user_by("login", $pagename_parts[1]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
includes/class-friends-frontend.php:785
  - RETRIEVAL call to get_post($page_id) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, wp_post, post
includes/class-friends-frontend.php:786
  - RETRIEVAL call to get_user_by("ID", $post->post_author) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
includes/class-friends-frontend.php:798
  - RETRIEVAL call to get_userdata($this->author->ID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
includes/class-friends-frontend.php:807
  - RETRIEVAL call to get_user_option("friends_hide_from_friends_page") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: user_meta
includes/class-friends-messages.php:447
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
includes/class-friends-notifications.php:54
  - RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class-friends-notifications.php:75
  - RETRIEVAL call to get_user_option("friends_no_new_post_notification", $user->ID) alters data types {'user_meta'}. Passed arguments: 0: $option (string), 1: $user (int). Returns (mixed).
  - Data types: user_meta
includes/class-friends-notifications.php:76
  - RETRIEVAL call to get_user_option("friends_no_new_post_notification_" . $post->post_author, $user->ID) alters data types {'user_meta'}. Passed arguments: 0: $option (string), 1: $user (int). Returns (mixed).
  - Data types: user_meta
includes/class-friends-notifications.php:127
  - RETRIEVAL call to get_user_option("friends_no_keyword_notification_" . $post->post_author, $user->ID) alters data types {'user_meta'}. Passed arguments: 0: $option (string), 1: $user (int). Returns (mixed).
  - Data types: user_meta
includes/class-friends-notifications.php:183
  - RETRIEVAL call to get_user_option("friends_no_friend_request_notification", $user->ID) alters data types {'user_meta'}. Passed arguments: 0: $option (string), 1: $user (int). Returns (mixed).
  - Data types: user_meta
includes/class-friends-notifications.php:344
  - RETRIEVAL call to get_option("blogname") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class-friends-notifications.php:345
  - RETRIEVAL call to get_option("blog_charset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class-friends-plugin-installer.php:102
  - RETRIEVAL call to get_transient($cache_key) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
includes/class-friends-reactions.php:99
  - RETRIEVAL call to get_post($post) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, wp_post, post
includes/class-friends-reactions.php:115
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
includes/class-friends-reactions.php:143
  - RETRIEVAL call to get_post_meta($post, "remote_reactions", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-friends-reactions.php:285
  - RETRIEVAL call to get_option("friends_selected_emojis") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class-friends-rest.php:88
  - RETRIEVAL call to get_option("friends_request_" . sha1($request_id)) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class-friends-rest.php:104
  - RETRIEVAL call to get_user_option("friends_future_in_token_" . sha1($request_id), $friend_user_id) alters data types {'user_meta'}. Passed arguments: 0: $option (string), 1: $user (int). Returns (mixed).
  - Data types: user_meta
includes/class-friends-rest.php:178
  - RETRIEVAL call to get_option("friends_require_codeword") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class-friends-rest.php:178
  - RETRIEVAL call to get_option("friends_codeword", "friends") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-friends-rest.php:181
  - RETRIEVAL call to get_option("friends_wrong_codeword_message", "An invalid codeword was provided.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-friends-rest.php:212
  - RETRIEVAL call to get_user_option("friends_out_token", $friend_user->ID) alters data types {'user_meta'}. Passed arguments: 0: $option (string), 1: $user (int). Returns (mixed).
  - Data types: user_meta
includes/class-friends-rest.php:212
  - RETRIEVAL call to get_user_option("friends_out_token", $friend_user->ID) alters data types {'user_meta'}. Passed arguments: 0: $option (string), 1: $user (int). Returns (mixed).
  - Data types: user_meta
includes/class-friends-rest.php:372
  - RETRIEVAL call to get_user_option("friends_request_id", $user_id) alters data types {'user_meta'}. Passed arguments: 0: $option (string), 1: $user (int). Returns (mixed).
  - Data types: user_meta
includes/class-friends-rest.php:381
  - RETRIEVAL call to $friend_user->get_user_option("friends_request_id") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: user_meta
includes/class-friends-rest.php:382
  - RETRIEVAL call to $friend_user->get_user_option("friends_future_out_token") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: user_meta
includes/class-friends-rest.php:385
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
includes/class-friends.php:337
  - RETRIEVAL call to get_user_option("friends_gravatar", $user->ID) alters data types {'user_meta'}. Passed arguments: 0: $option (string), 1: $user (int). Returns (mixed).
  - Data types: user_meta
includes/class-friends.php:338
  - RETRIEVAL call to get_user_option("friends_user_icon_url", $user->ID) alters data types {'user_meta'}. Passed arguments: 0: $option (string), 1: $user (int). Returns (mixed).
  - Data types: user_meta
includes/class-friends.php:358
  - RETRIEVAL call to get_option("friends_plugin_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class-friends.php:363
  - RETRIEVAL call to get_option("friends_main_user_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class-friends.php:367
  - RETRIEVAL call to get_option("friends_private_rss_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class-friends.php:371
  - RETRIEVAL call to get_option("friends_default_friend_role") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class-friends.php:387
  - RETRIEVAL call to get_option("sidebars_widgets") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class-friends.php:435
  - RETRIEVAL call to get_option("friends_main_user_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class-friends.php:472
  - RETRIEVAL call to get_user_option("friends_user_icon_url", $id_or_email) alters data types {'user_meta'}. Passed arguments: 0: $option (string), 1: $user (int). Returns (mixed).
  - Data types: user_meta
includes/class-friends.php:485
  - RETRIEVAL call to get_option("friends_force_enable_post_formats") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class-friends.php:547
  - RETRIEVAL call to get_transient($cache_key) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
includes/class-friends.php:676
  - RETRIEVAL call to get_option("friends_limit_homepage_post_format", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-friends.php:797
  - RETRIEVAL call to get_option("friends_comment_registration_message", __("Only people in my network can comment.", "friends")) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-friends.php:816
  - RETRIEVAL call to get_option("friends_expose_post_format_feeds") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class-friends.php:932
  - RETRIEVAL call to get_user_option("friends_in_token", $user->ID) alters data types {'user_meta'}. Passed arguments: 0: $option (string), 1: $user (int). Returns (mixed).
  - Data types: user_meta
templates/admin/edit-friend.php:261
  - RETRIEVAL call to get_user_option("friends_no_new_post_notification") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: user_meta
templates/admin/edit-friend.php:266
  - RETRIEVAL call to get_user_option("friends_no_new_post_notification_" . $args["friend"]->ID) alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: user_meta
templates/admin/edit-friend.php:278
  - RETRIEVAL call to get_user_option("friends_no_keyword_notification_" . $args["friend"]->ID) alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: user_meta
templates/admin/notification-manager.php:54
  - RETRIEVAL call to get_user_option("friends_no_new_post_notification_" . $friend_user->ID) alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: user_meta
templates/admin/notification-manager.php:58
  - RETRIEVAL call to get_user_option("friends_no_keyword_notification_" . $friend_user->ID) alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: user_meta
templates/admin/opml.php:9
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
templates/admin/opml.php:19
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
templates/admin/preview-rules.php:19
  - RETRIEVAL call to get_post_meta($post->ID, "author", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
templates/email/footer.php:14
  - RETRIEVAL call to get_option("blogname") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
templates/email/footer.text.php:12
  - RETRIEVAL call to get_option("blogname") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
templates/email/new-friend-request.php:34
  - RETRIEVAL call to get_option("blogname") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
templates/email/new-friend-request.text.php:26
  - RETRIEVAL call to get_option("blogname") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
templates/frontend/author-header.php:8
  - RETRIEVAL call to get_the_author_meta("ID") alters data types {'user_meta'}. Passed arguments: 0: $field (string). Returns (string).
  - Data types: user_meta
templates/frontend/author-header.php:22
  - RETRIEVAL call to get_the_author_meta("display_name") alters data types {'user_meta'}. Passed arguments: 0: $field (string). Returns (string).
  - Data types: user_meta
templates/frontend/author-header.php:26
  - RETRIEVAL call to get_the_author_meta("display_name") alters data types {'user_meta'}. Passed arguments: 0: $field (string). Returns (string).
  - Data types: user_meta
templates/frontend/editor.php:13
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
templates/frontend/header.php:40
  - RETRIEVAL call to get_the_author() alters data types {'user_meta'}. Returns (string|null).
  - Data types: user_meta
templates/frontend/header.php:41
  - RETRIEVAL call to get_the_author_meta("ID") alters data types {'user_meta'}. Passed arguments: 0: $field (string). Returns (string).
  - Data types: user_meta
templates/frontend/index.php:29
  - RETRIEVAL call to get_the_author() alters data types {'user_meta'}. Returns (string|null).
  - Data types: user_meta
templates/frontend/index.php:34
  - RETRIEVAL call to get_the_author() alters data types {'user_meta'}. Returns (string|null).
  - Data types: user_meta
templates/frontend/index.php:39
  - RETRIEVAL call to get_the_author_meta("ID") alters data types {'user_meta'}. Passed arguments: 0: $field (string). Returns (string).
  - Data types: user_meta
templates/frontend/no-posts.php:11
  - RETRIEVAL call to get_the_author() alters data types {'user_meta'}. Returns (string|null).
  - Data types: user_meta
templates/frontend/no-posts.php:16
  - RETRIEVAL call to get_the_author() alters data types {'user_meta'}. Returns (string|null).
  - Data types: user_meta
templates/frontend/parts/header.php:11
  - RETRIEVAL call to get_the_author_meta("display_name") alters data types {'user_meta'}. Passed arguments: 0: $field (string). Returns (string).
  - Data types: user_meta
templates/frontend/parts/header.php:17
  - RETRIEVAL call to get_the_author_meta("ID") alters data types {'user_meta'}. Passed arguments: 0: $field (string). Returns (string).
  - Data types: user_meta
templates/frontend/parts/header.php:20
  - RETRIEVAL call to get_the_author_meta("url") alters data types {'user_meta'}. Passed arguments: 0: $field (string). Returns (string).
  - Data types: user_meta
templates/frontend/parts/header.php:21
  - RETRIEVAL call to get_the_author_meta("ID") alters data types {'user_meta'}. Passed arguments: 0: $field (string). Returns (string).
  - Data types: user_meta
templates/frontend/parts/header.php:29
  - RETRIEVAL call to the_author() alters data types {'user', 'user_meta'}. Returns (string|null).
  - Data types: user, user_meta
templates/frontend/parts/header.php:35
  - RETRIEVAL call to get_the_author_meta("ID") alters data types {'user_meta'}. Passed arguments: 0: $field (string). Returns (string).
  - Data types: user_meta
templates/frontend/parts/header.php:36
  - RETRIEVAL call to the_author() alters data types {'user', 'user_meta'}. Returns (string|null).
  - Data types: user, user_meta
templates/frontend/parts/header.php:82
  - RETRIEVAL call to get_the_author_meta("ID") alters data types {'user_meta'}. Passed arguments: 0: $field (string). Returns (string).
  - Data types: user_meta
templates/frontend/parts/header.php:99
  - RETRIEVAL call to get_the_author_meta("ID") alters data types {'user_meta'}. Passed arguments: 0: $field (string). Returns (string).
  - Data types: user_meta
templates/frontend/parts/reactions.php:20
  - RETRIEVAL call to get_the_author_meta("ID") alters data types {'user_meta'}. Passed arguments: 0: $field (string). Returns (string).
  - Data types: user_meta
widgets/class-friends-widget-header.php:59
  - RETRIEVAL call to get_user_option("friends_out_token", $friends->frontend->author->ID) alters data types {'user_meta'}. Passed arguments: 0: $option (string), 1: $user (int). Returns (mixed).
  - Data types: user_meta
widgets/class-friends-widget-new-private-post.php:51
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta 

includes/class-friend-user-feed.php:420
  - STORAGE call to update_metadata("term", $term_id, $key, $value) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 2: $meta_key (string), 3: $meta_value (mixed). Returns (int|bool).
  - Data types: meta
includes/class-friend-user-feed.php:422
  - STORAGE call to add_metadata("term", $term_id, $key, $value, true) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 2: $meta_key (string), 3: $meta_value (mixed), 4: $unique (bool). Returns (int|false).
  - Data types: meta
includes/class-friend-user-feed.php:464
  - STORAGE call to update_metadata("term", $term_id, $key, $value) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 2: $meta_key (string), 3: $meta_value (mixed). Returns (int|bool).
  - Data types: meta
includes/class-friend-user-feed.php:466
  - STORAGE call to add_metadata("term", $term_id, $key, $value, true) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 2: $meta_key (string), 3: $meta_value (mixed), 4: $unique (bool). Returns (int|false).
  - Data types: meta
includes/class-friend-user-feed.php:482
  - STORAGE call to update_metadata("term", $this->term->term_id, $key, $value) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 2: $meta_key (string), 3: $meta_value (mixed). Returns (int|bool).
  - Data types: meta
includes/class-friend-user-feed.php:484
  - STORAGE call to add_metadata("term", $this->term->term_id, $key, $value, true) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 2: $meta_key (string), 3: $meta_value (mixed), 4: $unique (bool). Returns (int|false).
  - Data types: meta
includes/class-friend-user-feed.php:495
  - STORAGE call to $this->update_metadata("last-log", gmdate("Y-m-d H:i:s") . ": " . $value) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 2: $meta_key (string), 3: $meta_value (mixed). Returns (int|bool).
  - Data types: meta
includes/class-friend-user.php:94
  - STORAGE call to wp_insert_user($userdata) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
includes/class-friend-user.php:95
  - STORAGE call to update_user_option($friend_id, "friends_new_friend", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).
  - Data types: user_meta
includes/class-friend-user.php:356
  - STORAGE call to wp_delete_post(get_the_ID(), true) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post_meta, wp_post, post
includes/class-friend-user.php:375
  - STORAGE call to wp_delete_post(get_the_ID(), true) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post_meta, wp_post, post
includes/class-friend-user.php:396
  - STORAGE call to $this->update_user_option("friends_enable_retention_number", boolval($enabled)) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).
  - Data types: user_meta
includes/class-friend-user.php:422
  - STORAGE call to $this->update_user_option("friends_retention_number", $number) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).
  - Data types: user_meta
includes/class-friend-user.php:441
  - STORAGE call to $this->update_user_option("friends_enable_retention_days", boolval($enabled)) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).
  - Data types: user_meta
includes/class-friend-user.php:467
  - STORAGE call to $this->update_user_option("friends_retention_days", $days) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).
  - Data types: user_meta
includes/class-friend-user.php:496
  - STORAGE call to update_user_option($this->ID, "friends_user_icon_url", $user_icon_url) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).
  - Data types: user_meta
includes/class-friend-user.php:502
  - STORAGE call to update_user_option($this->ID, "friends_user_icon_url", $user_icon_url) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).
  - Data types: user_meta
includes/class-friend-user.php:506
  - STORAGE call to update_user_option($this->ID, "friends_user_icon_url", $user_icon_url) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).
  - Data types: user_meta
includes/class-friend-user.php:624
  - STORAGE call to $this->update_user_option("friends_out_token", $out_token) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).
  - Data types: user_meta
includes/class-friend-user.php:625
  - STORAGE call to $this->update_user_option("friends_in_token", $in_token) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).
  - Data types: user_meta
includes/class-friend-user.php:626
  - STORAGE call to update_option("friends_in_token_" . $in_token, $this->ID) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-friend-user.php:770
  - STORAGE call to $this->update_user_option("friends_rest_url", $rest_url) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).
  - Data types: user_meta
includes/class-friend-user.php:798
  - STORAGE call to update_user_option($this->ID, $option_name, $newvalue, $global) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed), 3: $global (bool). Returns (int|bool).
  - Data types: user_meta
includes/class-friend-user.php:810
  - STORAGE call to delete_user_option($this->ID, $option_name, $global) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $global (bool). Returns (bool).
  - Data types: user_meta
includes/class-friends-access-control.php:256
  - STORAGE call to delete_option("friends_in_token_" . $current_secret) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/class-friends-admin.php:105
  - STORAGE call to update_user_meta(get_current_user_id(), "friends_hide_welcome_panel", !$_GET["friends-welcome"]) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
includes/class-friends-admin.php:385
  - STORAGE call to $friend_user->update_user_option("friends_rest_url", $rest_url) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).
  - Data types: user_meta
includes/class-friends-admin.php:388
  - STORAGE call to update_option("friends_request_" . sha1($json->request), $friend_user->ID) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-friends-admin.php:389
  - STORAGE call to $friend_user->update_user_option("friends_future_in_token_" . sha1($json->request), $future_in_token) alters data types {'password', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).
  - Data types: password, user_meta
includes/class-friends-admin.php:453
  - STORAGE call to update_option("friends_" . $checkbox, true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-friends-admin.php:455
  - STORAGE call to delete_option("friends_" . $checkbox) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/class-friends-admin.php:460
  - STORAGE call to update_option("friends_limit_homepage_post_format", $_POST["limit_homepage_post_format"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-friends-admin.php:462
  - STORAGE call to delete_option("friends_limit_homepage_post_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/class-friends-admin.php:467
  - STORAGE call to delete_user_option(get_current_user_id(), "friends_no_" . $negative_user_checkbox) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string). Returns (bool).
  - Data types: user_meta
includes/class-friends-admin.php:469
  - STORAGE call to update_user_option(get_current_user_id(), "friends_no_" . $negative_user_checkbox, 1) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).
  - Data types: user_meta
includes/class-friends-admin.php:474
  - STORAGE call to update_option("friends_main_user_id", intval($_POST["main_user_id"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-friends-admin.php:478
  - STORAGE call to update_option("comment_registration", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-friends-admin.php:480
  - STORAGE call to delete_option("comment_registration") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/class-friends-admin.php:484
  - STORAGE call to update_option("friends_comment_registration_message", $_POST["comment_registration_message"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-friends-admin.php:486
  - STORAGE call to delete_option("friends_comment_registration_message") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/class-friends-admin.php:490
  - STORAGE call to update_option("friends_require_codeword", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-friends-admin.php:492
  - STORAGE call to delete_option("friends_require_codeword") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/class-friends-admin.php:496
  - STORAGE call to update_option("friends_codeword", $_POST["codeword"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-friends-admin.php:498
  - STORAGE call to delete_option("friends_codeword") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/class-friends-admin.php:502
  - STORAGE call to update_option("friends_wrong_codeword_message", $_POST["wrong_codeword_message"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-friends-admin.php:504
  - STORAGE call to delete_option("friends_wrong_codeword_message") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/class-friends-admin.php:515
  - STORAGE call to update_option("friends_selected_emojis", $available_emojis) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-friends-admin.php:517
  - STORAGE call to delete_option("friends_selected_emojis") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/class-friends-admin.php:530
  - STORAGE call to update_option("friends_notification_keywords", $keywords) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-friends-admin.php:534
  - STORAGE call to update_option("friends_default_friend_role", $_POST["default_role"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-friends-admin.php:538
  - STORAGE call to delete_user_option(get_current_user_id(), "friends_no_new_post_notification") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string). Returns (bool).
  - Data types: user_meta
includes/class-friends-admin.php:540
  - STORAGE call to update_user_option(get_current_user_id(), "friends_no_new_post_notification", 1) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).
  - Data types: user_meta
includes/class-friends-admin.php:672
  - STORAGE call to update_option("friends_feed_rules_" . $friend->ID, $rules) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-friends-admin.php:675
  - STORAGE call to update_option("friends_feed_catch_all_" . $friend->ID, $this->friends->feed->validate_feed_catch_all($_POST["catch_all"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-friends-admin.php:676
  - STORAGE call to update_option("friends_feed_rules_" . $friend->ID, $this->friends->feed->validate_feed_rules($_POST["rules"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-friends-admin.php:773
  - STORAGE call to update_user_meta(get_current_user_id(), "friends_hide_welcome_panel", empty($_POST["hide"])01) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
includes/class-friends-admin.php:926
  - STORAGE call to wp_update_user($friend) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
includes/class-friends-admin.php:942
  - STORAGE call to update_user_option(get_current_user_id(), "friends_hide_from_friends_page", $hide_from_friends_page) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).
  - Data types: user_meta
includes/class-friends-admin.php:947
  - STORAGE call to update_user_option(get_current_user_id(), "friends_hide_from_friends_page", $hide_from_friends_page) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).
  - Data types: user_meta
includes/class-friends-admin.php:953
  - STORAGE call to delete_user_option(get_current_user_id(), "friends_no_new_post_notification_" . $friend->ID) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string). Returns (bool).
  - Data types: user_meta
includes/class-friends-admin.php:955
  - STORAGE call to update_user_option(get_current_user_id(), "friends_no_new_post_notification_" . $friend->ID, 1) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).
  - Data types: user_meta
includes/class-friends-admin.php:961
  - STORAGE call to delete_user_option(get_current_user_id(), "friends_no_keyword_notification_" . $friend->ID) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string). Returns (bool).
  - Data types: user_meta
includes/class-friends-admin.php:963
  - STORAGE call to update_user_option(get_current_user_id(), "friends_no_keyword_notification_" . $friend->ID, 1) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).
  - Data types: user_meta
includes/class-friends-admin.php:1019
  - STORAGE call to $user_feed->update_metadata("active", isset($feed["active"]) && $feed["active"]) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 2: $meta_key (string), 3: $meta_value (mixed). Returns (int|bool).
  - Data types: meta
includes/class-friends-admin.php:1022
  - STORAGE call to $user_feed->update_metadata("title", $feed["title"]) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 2: $meta_key (string), 3: $meta_value (mixed). Returns (int|bool).
  - Data types: meta
includes/class-friends-admin.php:1026
  - STORAGE call to $user_feed->update_metadata("parser", $feed["parser"]) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 2: $meta_key (string), 3: $meta_value (mixed). Returns (int|bool).
  - Data types: meta
includes/class-friends-admin.php:1030
  - STORAGE call to $user_feed->update_metadata("post-format", $feed["post-format"]) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 2: $meta_key (string), 3: $meta_value (mixed). Returns (int|bool).
  - Data types: meta
includes/class-friends-admin.php:1034
  - STORAGE call to $user_feed->update_metadata("mime-type", $feed["mime-type"]) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 2: $meta_key (string), 3: $meta_value (mixed). Returns (int|bool).
  - Data types: meta
includes/class-friends-admin.php:1623
  - STORAGE call to update_user_option($current_user_id, "friends_no_new_post_notification_" . $friend_id, $no_new_post_notification) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).
  - Data types: user_meta
includes/class-friends-admin.php:1628
  - STORAGE call to update_user_option($current_user_id, "friends_no_keyword_notification_" . $friend_id, $no_keyword_notification) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).
  - Data types: user_meta
includes/class-friends-admin.php:1632
  - STORAGE call to update_user_option($current_user_id, "friends_hide_from_friends_page", $hide_from_friends_page) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).
  - Data types: user_meta
includes/class-friends-automatic-status.php:188
  - STORAGE call to wp_insert_post(["post_type" => "post", "post_status" => "draft", "post_author" => $user_id, "tax_input" => ["post_format" => "post-format-status"], "post_content" => "<!-- wp:paragraph -->" . PHP_EOL . "<p>" . $text . "</p>" . PHP_EOL . "<!-- /wp:paragraph -->"]). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
includes/class-friends-blocks.php:342
  - STORAGE call to set_transient($access_transient_key, $access_count + 1, 3600) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
includes/class-friends-feed.php:562
  - STORAGE call to wp_update_post($post_data). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
includes/class-friends-feed.php:568
  - STORAGE call to wp_insert_post($post_data, true). Passed arguments: 0: $postarr (array), 1: $wp_error (bool). Returns (int|WP_Error).
includes/class-friends-feed.php:591
  - STORAGE call to update_post_meta($post_id, "author", $item->author) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-friends-feed.php:595
  - STORAGE call to update_post_meta($post_id, "remote_post_id", $item->post-id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-friends-feed.php:695
  - STORAGE call to delete_transient($cache_key) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).
  - Data types: site
includes/class-friends-feed.php:698
  - STORAGE call to delete_transient($cache_key . "_author_" . $author_id) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).
  - Data types: site
includes/class-friends-feed.php:986
  - STORAGE call to update_user_option($user_id, "friends_new_friend", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).
  - Data types: user_meta
includes/class-friends-frontend.php:242
  - STORAGE call to wp_insert_post(["post_type" => "post", "post_title" => $_POST["title"], "post_content" => $_POST["content"], "post_status" => $_POST["status"]]). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
includes/class-friends-messages.php:219
  - STORAGE call to wp_update_post(["ID" => $post->ID, "post_content" => $post->post_content . PHP_EOL . $content, "post_status" => $mark_unread"friends_unread""friends_read"]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
includes/class-friends-messages.php:227
  - STORAGE call to wp_insert_post(["post_type" => self::"CPT", "post_author" => $friend_user->ID, "post_title" => $subject, "post_content" => $content, "post_status" => $mark_unread"friends_unread""friends_read"]). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
includes/class-friends-messages.php:315
  - STORAGE call to wp_update_post(["ID" => $post_id, "post_status" => "friends_read"]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
includes/class-friends-plugin-installer.php:120
  - STORAGE call to set_transient($cache_key, $data, 12 * HOUR_IN_SECONDS) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
includes/class-friends-reactions.php:432
  - STORAGE call to update_post_meta($post_id, "remote_reactions", $reactions) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-friends-rest.php:141
  - STORAGE call to wp_update_user(["ID" => $friend_user->ID, "nickname" => $request->get_param("name"), "first_name" => $request->get_param("name"), "display_name" => $request->get_param("name")]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
includes/class-friends-rest.php:151
  - STORAGE call to delete_user_option($friend_user_id, "friends_future_in_token_" . sha1($request_id)) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string). Returns (bool).
  - Data types: user_meta
includes/class-friends-rest.php:218
  - STORAGE call to $friend_user->update_user_option("friends_future_out_token", $request->get_param("key")) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).
  - Data types: user_meta
includes/class-friends-rest.php:219
  - STORAGE call to $friend_user->update_user_option("friends_request_message", mb_substr($request->get_param("message"), 0, 2000)) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).
  - Data types: user_meta
includes/class-friends-rest.php:222
  - STORAGE call to $friend_user->update_user_option("friends_request_id", $request_id) alters data types {'password', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).
  - Data types: password, user_meta
includes/class-friends-rest.php:291
  - STORAGE call to wp_delete_post($post_id) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post_meta, wp_post, post
includes/class-friends-rest.php:414
  - STORAGE call to $friend_user->delete_user_option("friends_request_id") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string). Returns (bool).
  - Data types: user_meta
includes/class-friends-rest.php:415
  - STORAGE call to $friend_user->delete_user_option("friends_future_out_token") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string). Returns (bool).
  - Data types: user_meta
includes/class-friends.php:294
  - STORAGE call to wp_insert_post($post_data). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
includes/class-friends.php:341
  - STORAGE call to update_user_option($user->ID, "friends_user_icon_url", $gravatar) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).
  - Data types: user_meta
includes/class-friends.php:343
  - STORAGE call to delete_user_option($user->ID, "friends_gravatar") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string). Returns (bool).
  - Data types: user_meta
includes/class-friends.php:348
  - STORAGE call to update_option("friends_plugin_version", self::"VERSION") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-friends.php:364
  - STORAGE call to update_option("friends_main_user_id", get_current_user_id()) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-friends.php:368
  - STORAGE call to update_option("friends_private_rss_key", wp_generate_password(128, false)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-friends.php:372
  - STORAGE call to update_option("friends_default_friend_role", "friend") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-friends.php:414
  - STORAGE call to update_option("widget_" . $widget_id, [$id => $options]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-friends.php:418
  - STORAGE call to update_option("sidebars_widgets", $sidebars_widgets) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-friends.php:448
  - STORAGE call to update_option("friends_main_user_id", $main_user_id) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-friends.php:629
  - STORAGE call to set_transient($cache_key, $counts, HOUR_IN_SECONDS) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
includes/class-friends.php:933
  - STORAGE call to delete_option("friends_in_token_" . $in_token) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/class-friends.php:934
  - STORAGE call to delete_user_option($user->ID, "friends_out_token") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string). Returns (bool).
  - Data types: user_meta
includes/class-friends.php:935
  - STORAGE call to delete_user_option($user->ID, "friends_in_token") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string). Returns (bool).
  - Data types: user_meta
includes/class-friends.php:936
  - STORAGE call to delete_user_option($user->ID, "friends_new_friend") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string). Returns (bool).
  - Data types: user_meta
includes/class-friends.php:939
  - STORAGE call to delete_option("friends_main_user_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/class-friends.php:956
  - STORAGE call to wp_delete_post($post->ID, true) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post_meta, wp_post, post 

includes/class-friends-admin.php:404
  - WP_User object is created.
  - Data types: user, user_meta
includes/class-friends-admin.php:2085
  - WP_User object is created.
  - Data types: user, user_meta
includes/class-friends-reactions.php:113
  - WP_User object is created.
  - Data types: user, user_meta
includes/class-friends-reactions.php:132
  - WP_User object is created.
  - Data types: user, user_meta 

includes/class-friends-access-control.php:208
  - CRYPTOGRAPHY call to password_hash($until . $in_token, PASSWORD_DEFAULT). 

includes/class-friend-user.php:356
  - DELETION call to wp_delete_post(get_the_ID(), true) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post_meta, wp_post, post
includes/class-friend-user.php:375
  - DELETION call to wp_delete_post(get_the_ID(), true) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post_meta, wp_post, post
includes/class-friends-access-control.php:256
  - DELETION call to delete_option("friends_in_token_" . $current_secret) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/class-friends-admin.php:455
  - DELETION call to delete_option("friends_" . $checkbox) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/class-friends-admin.php:462
  - DELETION call to delete_option("friends_limit_homepage_post_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/class-friends-admin.php:480
  - DELETION call to delete_option("comment_registration") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/class-friends-admin.php:486
  - DELETION call to delete_option("friends_comment_registration_message") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/class-friends-admin.php:492
  - DELETION call to delete_option("friends_require_codeword") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/class-friends-admin.php:498
  - DELETION call to delete_option("friends_codeword") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/class-friends-admin.php:504
  - DELETION call to delete_option("friends_wrong_codeword_message") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/class-friends-admin.php:517
  - DELETION call to delete_option("friends_selected_emojis") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/class-friends-rest.php:291
  - DELETION call to wp_delete_post($post_id) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post_meta, wp_post, post
includes/class-friends.php:933
  - DELETION call to delete_option("friends_in_token_" . $in_token) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/class-friends.php:939
  - DELETION call to delete_option("friends_main_user_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/class-friends.php:956
  - DELETION call to wp_delete_post($post->ID, true) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post_meta, wp_post, post 

By data type:
email
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
file
	PHPRetrievalDetector.file_get_contents( . "/../emojis.json") - {'file'}
	PHPRetrievalDetector.file_get_contents($file) - {'file'}
first_name
	PropertyDetector.(unknown) - {'first_name'}
meta
	WordPressRetrievalDetector.get_metadata("term", $this->term->term_id, "active", true) - {'meta'}
	WordPressRetrievalDetector.get_metadata("term", $this->term->term_id, "title", true) - {'meta'}
	WordPressStorageDetector.update_metadata("term", $this->term->term_id, $key, $value) - {'meta'}
	WordPressRetrievalDetector.get_metadata("term", $this->term->term_id, "parser", true) - {'meta'}
	WordPressRetrievalDetector.get_metadata("term", $this->term->term_id, "mime-type", true) - {'meta'}
	WordPressRetrievalDetector.get_metadata("term", $this->term->term_id, "post-format", true) - {'meta'}
	WordPressStorageDetector.add_metadata("term", $term_id, $key, $value, true) - {'meta'}
	WordPressRetrievalDetector.get_metadata("term", $this->term->term_id, "last-log", true) - {'meta'}
	WordPressStorageDetector.add_metadata("term", $this->term->term_id, $key, $value, true) - {'meta'}
	WordPressStorageDetector.$user_feed->update_metadata("title", $feed["title"]) - {'meta'}
	WordPressStorageDetector.$user_feed->update_metadata("post-format", $feed["post-format"]) - {'meta'}
	WordPressStorageDetector.$user_feed->update_metadata("mime-type", $feed["mime-type"]) - {'meta'}
	WordPressStorageDetector.$user_feed->update_metadata("active", isset($feed["active"]) && $feed["active"]) - {'meta'}
	WordPressStorageDetector.$this->update_metadata("last-log", gmdate("Y-m-d H:i:s") . ": " . $value) - {'meta'}
	WordPressStorageDetector.update_metadata("term", $term_id, $key, $value) - {'meta'}
	WordPressRetrievalDetector.get_metadata("term", $this->term->term_id, "active", true) - {'meta'}
	WordPressStorageDetector.update_metadata("term", $term_id, $key, $value) - {'meta'}
	WordPressStorageDetector.add_metadata("term", $term_id, $key, $value, true) - {'meta'}
	WordPressStorageDetector.$user_feed->update_metadata("parser", $feed["parser"]) - {'meta'}
none
	WordPressStorageDetector.wp_insert_post(["post_type" => "post", "post_status" => "draft", "post_author" => $user_id, "tax_input" => ["post_format" => "post-format-status"], "post_content" => "<!-- wp:paragraph -->" . PHP_EOL . "<p>" . $text . "</p>" . PHP_EOL . "<!-- /wp:paragraph -->"]) - set()
	PHPIncludedDetector.(unknown) - set()
	WordPressStorageDetector.wp_insert_post($post_data) - set()
	PHPIncludedDetector.(unknown) - set()
	WordPressStorageDetector.wp_insert_post($post_data, true) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	WordPressStorageDetector.wp_update_post($post_data) - set()
	PasswordHashingDetector.(unknown) - set()
	WordPressStorageDetector.wp_insert_post(["post_type" => self::"CPT", "post_author" => $friend_user->ID, "post_title" => $subject, "post_content" => $content, "post_status" => $mark_unread"friends_unread""friends_read"]) - set()
	GenericEncryptionDetector.password_hash($until . $in_token, PASSWORD_DEFAULT) - set()
	WordPressStorageDetector.wp_update_post(["ID" => $post->ID, "post_content" => $post->post_content . PHP_EOL . $content, "post_status" => $mark_unread"friends_unread""friends_read"]) - set()
	PHPIncludedDetector.(unknown) - set()
	WordPressStorageDetector.wp_update_post(["ID" => $post_id, "post_status" => "friends_read"]) - set()
	PHPIncludedDetector.(unknown) - set()
	PasswordHashingDetector.(unknown) - set()
	WordPressStorageDetector.wp_insert_post(["post_type" => "post", "post_title" => $_POST["title"], "post_content" => $_POST["content"], "post_status" => $_POST["status"]]) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
option
	DeletionDetector.delete_option("friends_require_codeword") - {'option'}
	WordPressRetrievalDetector.get_option("friends_default_friend_role", "friend") - {'option'}
	DeletionDetector.delete_option("friends_codeword") - {'option'}
	WordPressStorageDetector.delete_option("comment_registration") - {'option'}
	WordPressRetrievalDetector.get_option("friends_feed_rules_" . $this->ID) - {'option'}
	WordPressRetrievalDetector.get_option("friends_feed_catch_all_" . $this->ID) - {'option'}
	WordPressStorageDetector.update_option("friends_require_codeword", true) - {'option'}
	WordPressStorageDetector.update_option("friends_comment_registration_message", $_POST["comment_registration_message"]) - {'option'}
	WordPressStorageDetector.update_option("friends_main_user_id", intval($_POST["main_user_id"])) - {'option'}
	WordPressStorageDetector.update_option("friends_plugin_version", self::"VERSION") - {'option'}
	WordPressRetrievalDetector.get_option("friends_plugin_version") - {'option'}
	WordPressRetrievalDetector.get_option("sidebars_widgets") - {'option'}
	WordPressRetrievalDetector.get_option("blog_charset") - {'option'}
	WordPressStorageDetector.delete_option("friends_in_token_" . $current_secret) - {'option'}
	WordPressRetrievalDetector.get_option("friends_comment_registration_message", __("Only people in my network can comment.", "friends")) - {'option'}
	WordPressRetrievalDetector.get_option("friends_force_enable_post_formats") - {'option'}
	WordPressStorageDetector.update_option("widget_" . $widget_id, [$id => $options]) - {'option'}
	WordPressStorageDetector.delete_option("friends_main_user_id") - {'option'}
	WordPressStorageDetector.delete_option("friends_codeword") - {'option'}
	WordPressStorageDetector.update_option("friends_main_user_id", $main_user_id) - {'option'}
	WordPressStorageDetector.update_option("sidebars_widgets", $sidebars_widgets) - {'option'}
	WordPressStorageDetector.update_option("friends_codeword", $_POST["codeword"]) - {'option'}
	WordPressRetrievalDetector.get_option("friends_main_user_id") - {'option'}
	WordPressStorageDetector.update_option("friends_" . $checkbox, true) - {'option'}
	WordPressStorageDetector.delete_option("friends_limit_homepage_post_format") - {'option'}
	WordPressStorageDetector.update_option("friends_limit_homepage_post_format", $_POST["limit_homepage_post_format"]) - {'option'}
	WordPressRetrievalDetector.get_option("friends_private_rss_key") - {'option'}
	WordPressRetrievalDetector.get_option("friends_in_token_" . $token) - {'option'}
	WordPressRetrievalDetector.get_option("friends_notification_keywords", false) - {'option'}
	WordPressRetrievalDetector.get_option("friends_private_rss_key") - {'option'}
	WordPressRetrievalDetector.get_option("blog_charset") - {'option'}
	WordPressRetrievalDetector.get_option("blogname") - {'option'}
	WordPressStorageDetector.update_option("friends_request_" . sha1($json->request), $friend_user->ID) - {'option'}
	WordPressStorageDetector.update_option("comment_registration", true) - {'option'}
	WordPressRetrievalDetector.get_option("blog_charset") - {'option'}
	WordPressRetrievalDetector.get_option("home") - {'option'}
	WordPressStorageDetector.delete_option("friends_require_codeword") - {'option'}
	WordPressRetrievalDetector.get_option("friends_codeword", "friends") - {'option'}
	WordPressRetrievalDetector.get_option("blog_charset") - {'option'}
	WordPressRetrievalDetector.get_option("friends_default_friend_role", "friend") - {'option'}
	DeletionDetector.delete_option("friends_" . $checkbox) - {'option'}
	WordPressStorageDetector.delete_option("friends_" . $checkbox) - {'option'}
	WordPressRetrievalDetector.get_option("friends_limit_homepage_post_format", false) - {'option'}
	DeletionDetector.delete_option("friends_limit_homepage_post_format") - {'option'}
	DeletionDetector.delete_option("comment_registration") - {'option'}
	DeletionDetector.delete_option("friends_comment_registration_message") - {'option'}
	WordPressRetrievalDetector.get_option("friends_force_enable_post_formats") - {'option'}
	WordPressRetrievalDetector.get_option("friends_expose_post_format_feeds") - {'option'}
	WordPressRetrievalDetector.get_option("friends_default_friend_role", "friend") - {'option'}
	WordPressRetrievalDetector.get_option("friends_wrong_codeword_message", "An invalid codeword was provided.") - {'option'}
	DeletionDetector.delete_option("friends_selected_emojis") - {'option'}
	DeletionDetector.delete_option("friends_in_token_" . $in_token) - {'option'}
	DeletionDetector.delete_option("friends_main_user_id") - {'option'}
	DeletionDetector.delete_option("friends_in_token_" . $current_secret) - {'option'}
	WordPressStorageDetector.delete_option("friends_in_token_" . $in_token) - {'option'}
	WordPressRetrievalDetector.get_option("blogname") - {'option'}
	WordPressRetrievalDetector.get_option("friends_default_friend_role") - {'option'}
	WordPressStorageDetector.update_option("friends_private_rss_key", wp_generate_password(128, false)) - {'option'}
	WordPressRetrievalDetector.get_option("blogname") - {'option'}
	WordPressRetrievalDetector.get_option("friends_private_rss_key") - {'option'}
	WordPressRetrievalDetector.get_option("blogname") - {'option'}
	WordPressRetrievalDetector.get_option("blogname") - {'option'}
	WordPressRetrievalDetector.get_option("friends_comment_registration_message", $comment_registration_message) - {'option'}
	WordPressRetrievalDetector.get_option("friends_codeword", "friends") - {'option'}
	WordPressRetrievalDetector.get_option("permalink_structure") - {'option'}
	WordPressStorageDetector.update_option("friends_wrong_codeword_message", $_POST["wrong_codeword_message"]) - {'option'}
	WordPressRetrievalDetector.get_option("friends_default_friend_role", "friend") - {'option'}
	WordPressRetrievalDetector.get_option("comment_registration") - {'option'}
	WordPressStorageDetector.update_option("friends_main_user_id", get_current_user_id()) - {'option'}
	WordPressRetrievalDetector.get_option("friends_expose_post_format_feeds") - {'option'}
	WordPressStorageDetector.update_option("friends_feed_rules_" . $friend->ID, $rules) - {'option'}
	WordPressStorageDetector.update_option("friends_default_friend_role", "friend") - {'option'}
	WordPressRetrievalDetector.get_option("friends_main_user_id") - {'option'}
	WordPressStorageDetector.update_option("friends_feed_catch_all_" . $friend->ID, $this->friends->feed->validate_feed_catch_all($_POST["catch_all"])) - {'option'}
	WordPressStorageDetector.delete_option("friends_comment_registration_message") - {'option'}
	WordPressRetrievalDetector.get_option("friends_require_codeword") - {'option'}
	WordPressRetrievalDetector.get_option("friends_request_" . sha1($request_id)) - {'option'}
	WordPressStorageDetector.update_option("friends_in_token_" . $in_token, $this->ID) - {'option'}
	WordPressRetrievalDetector.get_option("friends_selected_emojis") - {'option'}
	WordPressStorageDetector.update_option("friends_selected_emojis", $available_emojis) - {'option'}
	WordPressStorageDetector.delete_option("friends_selected_emojis") - {'option'}
	WordPressStorageDetector.update_option("friends_default_friend_role", $_POST["default_role"]) - {'option'}
	WordPressRetrievalDetector.get_option("friends_default_friend_role", "friend") - {'option'}
	WordPressRetrievalDetector.get_option("friends_limit_homepage_post_format", false) - {'option'}
	DeletionDetector.delete_option("friends_wrong_codeword_message") - {'option'}
	WordPressStorageDetector.update_option("friends_feed_rules_" . $friend->ID, $this->friends->feed->validate_feed_rules($_POST["rules"])) - {'option'}
	WordPressRetrievalDetector.get_option("friends_notification_keywords", false) - {'option'}
	WordPressRetrievalDetector.get_option("friends_wrong_codeword_message", $wrong_codeword_message) - {'option'}
	WordPressStorageDetector.delete_option("friends_wrong_codeword_message") - {'option'}
	WordPressStorageDetector.update_option("friends_notification_keywords", $keywords) - {'option'}
	WordPressRetrievalDetector.get_option("WPLANG") - {'option'}
	WordPressRetrievalDetector.get_option("friends_require_codeword") - {'option'}
password
	WordPressStorageDetector.$friend_user->update_user_option("friends_future_in_token_" . sha1($json->request), $future_in_token) - {'password', 'user_meta'}
	WordPressStorageDetector.$friend_user->update_user_option("friends_request_id", $request_id) - {'password', 'user_meta'}
post
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'wp_post', 'post'}
	WordPressStorageDetector.wp_delete_post($post_id) - {'post_meta', 'wp_post', 'post'}
	WordPressStorageDetector.wp_delete_post($post->ID, true) - {'post_meta', 'wp_post', 'post'}
	DeletionDetector.wp_delete_post($post->ID, true) - {'post_meta', 'wp_post', 'post'}
	DeletionDetector.wp_delete_post(get_the_ID(), true) - {'post_meta', 'wp_post', 'post'}
	DeletionDetector.wp_delete_post($post_id) - {'post_meta', 'wp_post', 'post'}
	DeletionDetector.wp_delete_post(get_the_ID(), true) - {'post_meta', 'wp_post', 'post'}
	WordPressStorageDetector.wp_delete_post(get_the_ID(), true) - {'post_meta', 'wp_post', 'post'}
	WordPressStorageDetector.wp_delete_post(get_the_ID(), true) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($post) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($page_id) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post(intval($post_id)) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post(intval($_GET["post"])) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post(intval($post_id)) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post(intval($_GET["post"])) - {'post_meta', 'wp_post', 'post'}
post_meta
	WordPressStorageDetector.update_post_meta($post_id, "author", $item->author) - {'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "remote_post_id", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "remote_post_id", $item->post-id) - {'post_meta'}
	WordPressStorageDetector.wp_delete_post($post_id) - {'post_meta', 'wp_post', 'post'}
	WordPressStorageDetector.wp_delete_post($post->ID, true) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post_meta($post_id, "author", true) - {'post_meta'}
	DeletionDetector.wp_delete_post($post->ID, true) - {'post_meta', 'wp_post', 'post'}
	DeletionDetector.wp_delete_post(get_the_ID(), true) - {'post_meta', 'wp_post', 'post'}
	DeletionDetector.wp_delete_post($post_id) - {'post_meta', 'wp_post', 'post'}
	WordPressStorageDetector.update_post_meta($post_id, "remote_reactions", $reactions) - {'post_meta'}
	DeletionDetector.wp_delete_post(get_the_ID(), true) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "author", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "gravatar", true) - {'post_meta'}
	WordPressStorageDetector.wp_delete_post(get_the_ID(), true) - {'post_meta', 'wp_post', 'post'}
	WordPressStorageDetector.wp_delete_post(get_the_ID(), true) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($post) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post_meta($post, "remote_reactions", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($page_id) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post_meta($item->ID, "author", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post(intval($post_id)) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post(intval($_GET["post"])) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post(intval($post_id)) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post(intval($_GET["post"])) - {'post_meta', 'wp_post', 'post'}
remote
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
site
	WordPressStorageDetector.set_transient($cache_key, $counts, HOUR_IN_SECONDS) - {'site'}
	WordPressStorageDetector.delete_transient($cache_key . "_author_" . $author_id) - {'site'}
	WordPressStorageDetector.delete_transient($cache_key) - {'site'}
	WordPressStorageDetector.set_transient($access_transient_key, $access_count + 1, 3600) - {'site'}
	WordPressRetrievalDetector.get_transient($cache_key) - {'site'}
	WordPressRetrievalDetector.get_transient($access_transient_key) - {'site'}
	WordPressRetrievalDetector.get_transient($cache_key) - {'site'}
	WordPressStorageDetector.set_transient($cache_key, $data, 12 * HOUR_IN_SECONDS) - {'site'}
user
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressStorageDetector.wp_update_user(["ID" => $friend_user->ID, "nickname" => $request->get_param("name"), "first_name" => $request->get_param("name"), "display_name" => $request->get_param("name")]) - {'user', 'user_meta'}
	WordPressRetrievalDetector.the_author() - {'user', 'user_meta'}
	WordPressRetrievalDetector.the_author() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", $pagename_parts[1]) - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_update_user(["ID" => $friend_user->ID, "nickname" => $request->get_param("name"), "first_name" => $request->get_param("name"), "display_name" => $request->get_param("name")]) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("ID", $post->post_author) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($this->author->ID) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WP_UserDetector.WP_User($user_id) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", $user_login) - {'user', 'user_meta'}
	WordPressStorageDetector.wp_update_user($friend) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WP_UserDetector.WP_User($user_id) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_update_user($friend) - {'user', 'user_meta'}
	WP_UserDetector.WP_User($user_id) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("ID", $user_id) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", $user_login) - {'user', 'user_meta'}
	WordPressStorageDetector.wp_insert_user($userdata) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WP_UserDetector.WP_User($exclude_user_id) - {'user', 'user_meta'}
user_meta
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_the_author_meta("ID") - {'user_meta'}
	WordPressRetrievalDetector.get_user_option($option_name, $this->ID) - {'user_meta'}
	WordPressRetrievalDetector.get_the_author() - {'user_meta'}
	WordPressRetrievalDetector.get_the_author_meta("ID") - {'user_meta'}
	WordPressRetrievalDetector.get_the_author_meta("url") - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressStorageDetector.wp_update_user(["ID" => $friend_user->ID, "nickname" => $request->get_param("name"), "first_name" => $request->get_param("name"), "display_name" => $request->get_param("name")]) - {'user', 'user_meta'}
	WordPressStorageDetector.delete_user_option(get_current_user_id(), "friends_no_keyword_notification_" . $friend->ID) - {'user_meta'}
	WordPressStorageDetector.delete_user_option($friend_user_id, "friends_future_in_token_" . sha1($request_id)) - {'user_meta'}
	WordPressRetrievalDetector.get_the_author_meta("ID") - {'user_meta'}
	WordPressRetrievalDetector.get_user_option("friends_no_keyword_notification_" . $post->post_author, $user->ID) - {'user_meta'}
	WordPressRetrievalDetector.the_author() - {'user', 'user_meta'}
	WordPressRetrievalDetector.the_author() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_the_author_meta("ID") - {'user_meta'}
	WordPressRetrievalDetector.get_the_author_meta("ID") - {'user_meta'}
	WordPressRetrievalDetector.get_the_author_meta("display_name") - {'user_meta'}
	WordPressRetrievalDetector.get_the_author_meta("ID") - {'user_meta'}
	WordPressStorageDetector.$this->update_user_option("friends_out_token", $out_token) - {'user_meta'}
	WordPressRetrievalDetector.$this->get_user_option("friends_in_token") - {'user_meta'}
	WordPressRetrievalDetector.get_user_option("friends_no_new_post_notification") - {'user_meta'}
	WordPressStorageDetector.$friend_user->update_user_option("friends_rest_url", $rest_url) - {'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", $pagename_parts[1]) - {'user', 'user_meta'}
	WordPressStorageDetector.$friend_user->update_user_option("friends_future_in_token_" . sha1($json->request), $future_in_token) - {'password', 'user_meta'}
	WordPressRetrievalDetector.get_the_author() - {'user_meta'}
	WordPressRetrievalDetector.get_user_option("friends_no_keyword_notification_" . $args["friend"]->ID) - {'user_meta'}
	WordpressHashingFnDetector.wp_update_user(["ID" => $friend_user->ID, "nickname" => $request->get_param("name"), "first_name" => $request->get_param("name"), "display_name" => $request->get_param("name")]) - {'user', 'user_meta'}
	WordPressStorageDetector.$friend_user->update_user_option("friends_request_id", $request_id) - {'password', 'user_meta'}
	WordPressRetrievalDetector.get_user_option("friends_no_new_post_notification_" . $args["friend"]->ID) - {'user_meta'}
	WordPressRetrievalDetector.$this->get_user_option("friends_out_token") - {'user_meta'}
	WordPressRetrievalDetector.get_the_author_meta("ID") - {'user_meta'}
	WordPressStorageDetector.$this->update_user_option("friends_in_token", $in_token) - {'user_meta'}
	WordPressRetrievalDetector.get_user_by("ID", $post->post_author) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_the_author() - {'user_meta'}
	WordPressStorageDetector.$this->update_user_option("friends_retention_days", $days) - {'user_meta'}
	WordPressStorageDetector.delete_user_option($user->ID, "friends_in_token") - {'user_meta'}
	WordPressRetrievalDetector.get_userdata($this->author->ID) - {'user', 'user_meta'}
	WordPressRetrievalDetector.$friend_user->get_user_option("friends_request_id") - {'user_meta'}
	WordPressRetrievalDetector.get_the_author() - {'user_meta'}
	WordPressRetrievalDetector.get_the_author_meta("ID") - {'user_meta'}
	WordPressStorageDetector.update_user_option($current_user_id, "friends_hide_from_friends_page", $hide_from_friends_page) - {'user_meta'}
	WordPressStorageDetector.$friend_user->delete_user_option("friends_request_id") - {'user_meta'}
	WordPressStorageDetector.$this->update_user_option("friends_enable_retention_number", boolval($enabled)) - {'user_meta'}
	WordPressStorageDetector.delete_user_option($user->ID, "friends_new_friend") - {'user_meta'}
	WordPressRetrievalDetector.get_the_author() - {'user_meta'}
	WordPressRetrievalDetector.get_user_option("friends_no_friend_request_notification", $user->ID) - {'user_meta'}
	WordPressStorageDetector.delete_user_option(get_current_user_id(), "friends_no_" . $negative_user_checkbox) - {'user_meta'}
	WordPressStorageDetector.$this->update_user_option("friends_enable_retention_days", boolval($enabled)) - {'user_meta'}
	WordPressStorageDetector.$this->update_user_option("friends_rest_url", $rest_url) - {'user_meta'}
	WordPressRetrievalDetector.get_user_option("friends_user_icon_url", $user->ID) - {'user_meta'}
	WordPressStorageDetector.update_user_meta(get_current_user_id(), "friends_hide_welcome_panel", !$_GET["friends-welcome"]) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_option("friends_gravatar", $user->ID) - {'user_meta'}
	WordPressRetrievalDetector.get_the_author_meta("ID") - {'user_meta'}
	WordPressRetrievalDetector.get_user_option("friends_in_token", $user_id) - {'user_meta'}
	WordPressRetrievalDetector.$friend_user->get_user_option("friends_feed_url") - {'user_meta'}
	WordPressRetrievalDetector.get_user_option("friends_out_token", $friends->frontend->author->ID) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_option(get_current_user_id(), "friends_no_" . $negative_user_checkbox, 1) - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressStorageDetector.$this->update_user_option("friends_retention_number", $number) - {'user_meta'}
	WordPressRetrievalDetector.$friend_user->get_user_option("friends_in_token") - {'user_meta'}
	WP_UserDetector.WP_User($user_id) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_option("friends_no_new_post_notification_" . $friend_id) - {'user_meta'}
	WordPressRetrievalDetector.get_user_option("friends_no_keyword_notification_" . $friend_id) - {'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_option("friends_user_icon_url", $id_or_email) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_option("friends_hide_from_friends_page") - {'user_meta'}
	WordPressRetrievalDetector.$this->get_user_option("friends_retention_days") - {'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", $user_login) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_option(get_current_user_id(), "friends_hide_from_friends_page", $hide_from_friends_page) - {'user_meta'}
	WordPressRetrievalDetector.get_user_option("friends_unobtrusive_badge") - {'user_meta'}
	WordPressRetrievalDetector.get_user_option("friends_hide_from_friends_page") - {'user_meta'}
	WordPressStorageDetector.update_user_option(get_current_user_id(), "friends_no_new_post_notification_" . $friend->ID, 1) - {'user_meta'}
	WordPressStorageDetector.wp_update_user($friend) - {'user', 'user_meta'}
	WordPressStorageDetector.delete_user_option(get_current_user_id(), "friends_no_new_post_notification_" . $friend->ID) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.$friend_user->delete_user_option("friends_future_out_token") - {'user_meta'}
	WordPressRetrievalDetector.get_the_author() - {'user_meta'}
	WordPressRetrievalDetector.get_user_option("friends_request_message", $user->ID) - {'user_meta'}
	WordPressRetrievalDetector.get_user_option("friends_hide_from_friends_page") - {'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.$friend_user->update_user_option("friends_future_out_token", $request->get_param("key")) - {'user_meta'}
	WordPressRetrievalDetector.$friend_user->get_user_option("friends_out_token") - {'user_meta'}
	WordPressStorageDetector.update_user_option(get_current_user_id(), "friends_hide_from_friends_page", $hide_from_friends_page) - {'user_meta'}
	WordPressRetrievalDetector.get_user_option("friends_no_keyword_notification") - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_option("friends_no_new_post_notification") - {'user_meta'}
	WordPressRetrievalDetector.get_user_option("friends_no_new_post_notification") - {'user_meta'}
	WordPressRetrievalDetector.get_user_option("friends_no_new_post_notification") - {'user_meta'}
	WordPressRetrievalDetector.get_the_author_meta("display_name") - {'user_meta'}
	WP_UserDetector.WP_User($user_id) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_option("friends_future_in_token_" . sha1($request_id), $friend_user_id) - {'user_meta'}
	WordPressRetrievalDetector.get_the_author_meta("ID") - {'user_meta'}
	WordPressRetrievalDetector.get_user_option("friends_no_friend_request_notification") - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressStorageDetector.delete_user_option($user->ID, "friends_out_token") - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta(get_current_user_id(), "friends_hide_welcome_panel", true) - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.$this->get_user_option("friends_retention_number") - {'user_meta'}
	WordPressRetrievalDetector.get_the_author_meta("ID") - {'user_meta'}
	WordPressRetrievalDetector.get_user_option("friends_no_new_post_notification_" . $friend_user->ID) - {'user_meta'}
	WordPressRetrievalDetector.get_user_option("friends_no_new_post_notification_" . $post->post_author, $user->ID) - {'user_meta'}
	WordPressRetrievalDetector.get_the_author_meta("display_name") - {'user_meta'}
	WordPressStorageDetector.delete_user_option($user->ID, "friends_gravatar") - {'user_meta'}
	WordPressRetrievalDetector.get_user_option("friends_request_id", $user_id) - {'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_option("friends_no_new_post_notification", $user->ID) - {'user_meta'}
	WordPressStorageDetector.update_user_option($user_id, "friends_new_friend", true) - {'user_meta'}
	WordPressRetrievalDetector.$this->get_user_option("friends_enable_retention_days") - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_option("friends_no_keyword_notification_" . $friend_user->ID) - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_update_user($friend) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_option("friends_in_token", $user_id) - {'user_meta'}
	WordPressRetrievalDetector.get_user_option("friends_out_token", $friend_user->ID) - {'user_meta'}
	WordPressRetrievalDetector.$this->get_user_option("friends_enable_retention_number") - {'user_meta'}
	WP_UserDetector.WP_User($user_id) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_option("friends_out_token", $friend_user->ID) - {'user_meta'}
	WordPressStorageDetector.update_user_option($user->ID, "friends_user_icon_url", $gravatar) - {'user_meta'}
	WordPressRetrievalDetector.get_user_option("friends_out_token", $user_id) - {'user_meta'}
	WordPressRetrievalDetector.get_the_author() - {'user_meta'}
	WordPressRetrievalDetector.get_user_by("ID", $user_id) - {'user', 'user_meta'}
	WordPressStorageDetector.$friend_user->update_user_option("friends_request_message", mb_substr($request->get_param("message"), 0, 2000)) - {'user_meta'}
	WordPressStorageDetector.update_user_option($current_user_id, "friends_no_new_post_notification_" . $friend_id, $no_new_post_notification) - {'user_meta'}
	WordPressRetrievalDetector.$this->get_user_option("friends_rest_url") - {'user_meta'}
	WordPressStorageDetector.update_user_option($this->ID, "friends_user_icon_url", $user_icon_url) - {'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", $user_login) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_option("friends_hide_from_friends_page") - {'user_meta'}
	WordPressStorageDetector.wp_insert_user($userdata) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_option($friend_id, "friends_new_friend", true) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_option($this->ID, "friends_user_icon_url", $user_icon_url) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_option($this->ID, "friends_user_icon_url", $user_icon_url) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.delete_user_option($this->ID, $option_name, $global) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_option($this->ID, $option_name, $newvalue, $global) - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_option(get_current_user_id(), "friends_no_keyword_notification_" . $friend->ID, 1) - {'user_meta'}
	WordPressStorageDetector.delete_user_option(get_current_user_id(), "friends_no_new_post_notification") - {'user_meta'}
	WordPressRetrievalDetector.$friend_user->get_user_option("friends_future_out_token") - {'user_meta'}
	WordPressRetrievalDetector.get_user_option("friends_in_token", $user->ID) - {'user_meta'}
	WordPressStorageDetector.update_user_meta(get_current_user_id(), "friends_hide_welcome_panel", empty($_POST["hide"])01) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_option(get_current_user_id(), "friends_no_new_post_notification", 1) - {'user_meta'}
	WordPressStorageDetector.update_user_option($current_user_id, "friends_no_keyword_notification_" . $friend_id, $no_keyword_notification) - {'user_meta'}
	WP_UserDetector.WP_User($exclude_user_id) - {'user', 'user_meta'}
wp_post
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'wp_post', 'post'}
	WordPressStorageDetector.wp_delete_post($post_id) - {'post_meta', 'wp_post', 'post'}
	WordPressStorageDetector.wp_delete_post($post->ID, true) - {'post_meta', 'wp_post', 'post'}
	DeletionDetector.wp_delete_post($post->ID, true) - {'post_meta', 'wp_post', 'post'}
	DeletionDetector.wp_delete_post(get_the_ID(), true) - {'post_meta', 'wp_post', 'post'}
	DeletionDetector.wp_delete_post($post_id) - {'post_meta', 'wp_post', 'post'}
	DeletionDetector.wp_delete_post(get_the_ID(), true) - {'post_meta', 'wp_post', 'post'}
	WordPressStorageDetector.wp_delete_post(get_the_ID(), true) - {'post_meta', 'wp_post', 'post'}
	WordPressStorageDetector.wp_delete_post(get_the_ID(), true) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($post) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($page_id) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post(intval($post_id)) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post(intval($_GET["post"])) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post(intval($post_id)) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post(intval($_GET["post"])) - {'post_meta', 'wp_post', 'post'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:41.262897.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 5748 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:01.126986.

!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 12780
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 13847
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 20543
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 35309
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 39545
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 42390
1000 STORE_REACHES edges created
2000 STORE_REACHES edges created
3000 STORE_REACHES edges created
4000 STORE_REACHES edges created
5000 STORE_REACHES edges created
5748 STORE_REACHES edges created
5748 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 1000 nodes as PERSONAL
Tainted 2000 nodes as PERSONAL
Tainted 2066 nodes as PERSONAL
In total, tainted 2066 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 1000 nodes as ENCRYPTED
Tainted 1906 nodes as ENCRYPTED
In total, tainted 1906 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:02:34.745021.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:08:31.077334!
DELETION call to wp_delete_post(get_the_ID(), true) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
DELETION call to wp_delete_post(get_the_ID(), true) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
DELETION call to delete_option("friends_in_token_" . $current_secret) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("friends_" . $checkbox) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("friends_limit_homepage_post_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("comment_registration") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("friends_comment_registration_message") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("friends_require_codeword") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("friends_codeword") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("friends_wrong_codeword_message") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("friends_selected_emojis") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to wp_delete_post($post_id) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).,None,None
DELETION call to delete_option("friends_in_token_" . $in_token) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("friends_main_user_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to wp_delete_post($post->ID, true) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
CRYPTOGRAPHY call to password_hash($until . $in_token, PASSWORD_DEFAULT).,None,None
SHA1 called with parameters [json, request]. Ignore if [json, request] does not contain personal information.,sha1,None
SHA1 called with parameters [json, request]. Ignore if [json, request] does not contain personal information.,sha1,None
SHA1 called with parameters [nonce, wp_salt, query_vars]. Ignore if [nonce, wp_salt, query_vars] does not contain personal information.,sha1,None
SHA1 called with parameters [nonce, wp_salt, query_vars]. Ignore if [nonce, wp_salt, query_vars] does not contain personal information.,sha1,None
SHA1 called with parameters [request_id]. Ignore if [request_id] does not contain personal information.,sha1,None
SHA1 called with parameters [request_id, future_in_token]. Ignore if [request_id, future_in_token] does not contain personal information.,sha1,None
SHA1 called with parameters [request_id]. Ignore if [request_id] does not contain personal information.,sha1,None
SHA1 called with parameters [future_in_token, future_out_token]. Ignore if [future_in_token, future_out_token] does not contain personal information.,sha1,None
SHA1 called with parameters [request_id, future_out_token]. Ignore if [request_id, future_out_token] does not contain personal information.,sha1,None
SHA1 called with parameters [future_in_token, future_out_token]. Ignore if [future_in_token, future_out_token] does not contain personal information.,sha1,None
SHA1 called with parameters [request_id]. Ignore if [request_id] does not contain personal information.,sha1,None
RETRIEVAL call to file_get_contents( . "/../emojis.json").,None,None
RETRIEVAL call to file_get_contents($file).,None,None
password_verify called with hash algorithm .,,None
password_hash called with hash algorithm PASSWORD_DEFAULT (which uses PASSWORD_BCRYPT).,PASSWORD_DEFAULT (which uses PASSWORD_BCRYPT),None
object property '$friend->first_name' of personal types {'first_name'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$remote_reactions[$emoji]->usernames' of personal types {'user', 'user_meta'} is found.,,None
object property '$reaction->usernames' of personal types {'user', 'user_meta'} is found.,,None
object property '$reaction->usernames' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$email_message' of personal types {'email'} is found.,,None
variable '$email_message' of personal types {'email'} is found.,,None
variable '$email_title' of personal types {'email'} is found.,,None
variable '$email_title' of personal types {'email'} is found.,,None
variable '$email_message' of personal types {'email'} is found.,,None
variable '$email_title' of personal types {'email'} is found.,,None
variable '$email_message' of personal types {'email'} is found.,,None
variable '$email_message' of personal types {'email'} is found.,,None
variable '$email_message' of personal types {'email'} is found.,,None
variable '$email_title' of personal types {'email'} is found.,,None
variable '$email_title' of personal types {'email'} is found.,,None
variable '$email_message' of personal types {'email'} is found.,,None
variable '$email_title' of personal types {'email'} is found.,,None
variable '$email_message' of personal types {'email'} is found.,,None
variable '$email_message' of personal types {'email'} is found.,,None
variable '$email_title' of personal types {'email'} is found.,,None
variable '$email_message' of personal types {'email'} is found.,,None
variable '$email_title' of personal types {'email'} is found.,,None
variable '$email_message' of personal types {'email'} is found.,,None
variable '$email_title' of personal types {'email'} is found.,,None
variable '$email_message' of personal types {'email'} is found.,,None
variable '$email_message' of personal types {'email'} is found.,,None
variable '$email_message' of personal types {'email'} is found.,,None
variable '$email_title' of personal types {'email'} is found.,,None
variable '$email_title' of personal types {'email'} is found.,,None
variable '$email_message' of personal types {'email'} is found.,,None
variable '$email_title' of personal types {'email'} is found.,,None
variable '$email_message' of personal types {'email'} is found.,,None
variable '$email_message' of personal types {'email'} is found.,,None
variable '$email_message' of personal types {'email'} is found.,,None
variable '$email_title' of personal types {'email'} is found.,,None
variable '$email_title' of personal types {'email'} is found.,,None
variable '$email_message' of personal types {'email'} is found.,,None
variable '$email_title' of personal types {'email'} is found.,,None
variable '$email_message' of personal types {'email'} is found.,,None
variable '$reacting_usernames' of personal types {'user', 'user_meta'} is found.,,None
variable '$reacting_usernames' of personal types {'user', 'user_meta'} is found.,,None
variable '$usernames' of personal types {'user', 'user_meta'} is found.,,None
variable '$reacting_usernames' of personal types {'user', 'user_meta'} is found.,,None
variable '$usernames' of personal types {'user', 'user_meta'} is found.,,None
variable '$usernames' of personal types {'user', 'user_meta'} is found.,,None
variable '$usernames' of personal types {'user', 'user_meta'} is found.,,None
variable '$usernames' of personal types {'user', 'user_meta'} is found.,,None
variable '$usernames' of personal types {'user', 'user_meta'} is found.,,None
variable '$usernames' of personal types {'user', 'user_meta'} is found.,,None
variable '$id_or_email' of personal types {'email'} is found.,,None
variable '$id_or_email' of personal types {'email'} is found.,,None
variable '$id_or_email' of personal types {'email'} is found.,,None
variable '$id_or_email' of personal types {'email'} is found.,,None
variable '$id_or_email' of personal types {'email'} is found.,,None
variable '$id_or_email' of personal types {'email'} is found.,,None
variable '$id_or_email' of personal types {'email'} is found.,,None
variable '$id_or_email' of personal types {'email'} is found.,,None
variable '$id_or_email' of personal types {'email'} is found.,,None
variable '$id_or_email' of personal types {'email'} is found.,,None
variable '$id_or_email' of personal types {'email'} is found.,,None
variable '$id_or_email' of personal types {'email'} is found.,,None
variable '$id_or_email' of personal types {'email'} is found.,,None
WP_User object is created.,,None
WP_User object is created.,,None
WP_User object is created.,,None
WP_User object is created.,,None
API call to wp_remote_get("https://raw.githubusercontent.com/akirk/friends/main/plugins.json", ["timeout" => 10, "headers" => ["Accept" => "application/json"]]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,['https://raw.githubusercontent.com/akirk/friends/main/plugins.json']
API call to wp_remote_get($style). Passed arguments: 0: $url (string). Returns (array|WP_Error).,https,[]
RETRIEVAL call to get_option("blog_charset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("blog_charset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_metadata("term", $this->term->term_id, "active", true) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 3: $single (bool), 2: $meta_key (string). Returns (mixed).,None,None
RETRIEVAL call to get_metadata("term", $this->term->term_id, "post-format", true) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 3: $single (bool), 2: $meta_key (string). Returns (mixed).,None,None
RETRIEVAL call to get_metadata("term", $this->term->term_id, "parser", true) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 3: $single (bool), 2: $meta_key (string). Returns (mixed).,None,None
RETRIEVAL call to get_metadata("term", $this->term->term_id, "mime-type", true) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 3: $single (bool), 2: $meta_key (string). Returns (mixed).,None,None
RETRIEVAL call to get_metadata("term", $this->term->term_id, "title", true) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 3: $single (bool), 2: $meta_key (string). Returns (mixed).,None,None
RETRIEVAL call to get_metadata("term", $this->term->term_id, "last-log", true) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 3: $single (bool), 2: $meta_key (string). Returns (mixed).,None,None
RETRIEVAL call to get_metadata("term", $this->term->term_id, "active", true) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 3: $single (bool), 2: $meta_key (string). Returns (mixed).,None,None
RETRIEVAL call to $friend_user->get_user_option("friends_feed_url") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_by("login", $user_login) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_by("ID", $user_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to $this->get_user_option("friends_enable_retention_number") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to $this->get_user_option("friends_retention_number") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to $this->get_user_option("friends_enable_retention_days") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to $this->get_user_option("friends_retention_days") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("friends_feed_rules_" . $this->ID) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("friends_feed_catch_all_" . $this->ID) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "remote_post_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_by("login", $user_login) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_option("friends_default_friend_role", "friend") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $this->get_user_option("friends_in_token") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to $this->get_user_option("friends_out_token") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to $this->get_user_option("friends_rest_url") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_option($option_name, $this->ID) alters data types {'user_meta'}. Passed arguments: 0: $option (string), 1: $user (int). Returns (mixed).,None,None
RETRIEVAL call to get_option("friends_in_token_" . $token) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_option("friends_in_token", $user_id) alters data types {'user_meta'}. Passed arguments: 0: $option (string), 1: $user (int). Returns (mixed).,None,None
RETRIEVAL call to get_user_option("friends_out_token", $user_id) alters data types {'user_meta'}. Passed arguments: 0: $option (string), 1: $user (int). Returns (mixed).,None,None
RETRIEVAL call to $friend_user->get_user_option("friends_out_token") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to $friend_user->get_user_option("friends_in_token") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_option("friends_in_token", $user_id) alters data types {'user_meta'}. Passed arguments: 0: $option (string), 1: $user (int). Returns (mixed).,None,None
RETRIEVAL call to get_option("friends_private_rss_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta(get_current_user_id(), "friends_hide_welcome_panel", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_option("friends_hide_from_friends_page") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("friends_default_friend_role", "friend") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_user_option("friends_no_new_post_notification_" . $friend_id) alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_option("friends_no_keyword_notification_" . $friend_id) alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_option("friends_hide_from_friends_page") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_option("friends_no_new_post_notification") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_option("friends_request_message", $user->ID) alters data types {'user_meta'}. Passed arguments: 0: $option (string), 1: $user (int). Returns (mixed).,None,None
RETRIEVAL call to get_option("friends_default_friend_role", "friend") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_user_option("friends_unobtrusive_badge") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_option("WPLANG") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_option("friends_notification_keywords", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("friends_default_friend_role", "friend") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("friends_force_enable_post_formats") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("friends_limit_homepage_post_format", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("friends_expose_post_format_feeds") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("friends_private_rss_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("comment_registration") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("friends_comment_registration_message", $comment_registration_message) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("friends_codeword", "friends") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("friends_require_codeword") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("friends_wrong_codeword_message", $wrong_codeword_message) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_user_option("friends_no_friend_request_notification") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_option("friends_no_new_post_notification") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("permalink_structure") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post(intval($_GET["post"])) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post(intval($_GET["post"])) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("friends_default_friend_role", "friend") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_user_option("friends_hide_from_friends_page") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_option("friends_no_new_post_notification") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_option("friends_no_keyword_notification") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($post_id) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_transient($access_transient_key) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_post(intval($post_id)) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post(intval($post_id)) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($item->ID, "author", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("friends_notification_keywords", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_the_author() alters data types {'user_meta'}. Returns (string|null).,None,None
RETRIEVAL call to get_the_author() alters data types {'user_meta'}. Returns (string|null).,None,None
RETRIEVAL call to get_option("blog_charset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_the_author_meta("ID") alters data types {'user_meta'}. Passed arguments: 0: $field (string). Returns (string).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "gravatar", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_the_author_meta("ID") alters data types {'user_meta'}. Passed arguments: 0: $field (string). Returns (string).,None,None
RETRIEVAL call to get_post_meta($post_id, "author", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_by("login", $pagename_parts[1]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_post($page_id) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_user_by("ID", $post->post_author) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_userdata($this->author->ID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_option("friends_hide_from_friends_page") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_user_option("friends_no_keyword_notification_" . $post->post_author, $user->ID) alters data types {'user_meta'}. Passed arguments: 0: $option (string), 1: $user (int). Returns (mixed).,None,None
RETRIEVAL call to get_user_option("friends_no_friend_request_notification", $user->ID) alters data types {'user_meta'}. Passed arguments: 0: $option (string), 1: $user (int). Returns (mixed).,None,None
RETRIEVAL call to get_option("blogname") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("blog_charset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_option("friends_no_new_post_notification", $user->ID) alters data types {'user_meta'}. Passed arguments: 0: $option (string), 1: $user (int). Returns (mixed).,None,None
RETRIEVAL call to get_user_option("friends_no_new_post_notification_" . $post->post_author, $user->ID) alters data types {'user_meta'}. Passed arguments: 0: $option (string), 1: $user (int). Returns (mixed).,None,None
RETRIEVAL call to get_transient($cache_key) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_post_meta($post, "remote_reactions", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("friends_selected_emojis") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($post) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_user_option("friends_future_in_token_" . sha1($request_id), $friend_user_id) alters data types {'user_meta'}. Passed arguments: 0: $option (string), 1: $user (int). Returns (mixed).,None,None
RETRIEVAL call to get_option("friends_codeword", "friends") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("friends_require_codeword") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("friends_wrong_codeword_message", "An invalid codeword was provided.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_user_option("friends_out_token", $friend_user->ID) alters data types {'user_meta'}. Passed arguments: 0: $option (string), 1: $user (int). Returns (mixed).,None,None
RETRIEVAL call to get_user_option("friends_out_token", $friend_user->ID) alters data types {'user_meta'}. Passed arguments: 0: $option (string), 1: $user (int). Returns (mixed).,None,None
RETRIEVAL call to get_user_option("friends_request_id", $user_id) alters data types {'user_meta'}. Passed arguments: 0: $option (string), 1: $user (int). Returns (mixed).,None,None
RETRIEVAL call to $friend_user->get_user_option("friends_request_id") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to $friend_user->get_user_option("friends_future_out_token") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_option("friends_request_" . sha1($request_id)) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_option("friends_gravatar", $user->ID) alters data types {'user_meta'}. Passed arguments: 0: $option (string), 1: $user (int). Returns (mixed).,None,None
RETRIEVAL call to get_user_option("friends_user_icon_url", $user->ID) alters data types {'user_meta'}. Passed arguments: 0: $option (string), 1: $user (int). Returns (mixed).,None,None
RETRIEVAL call to get_option("friends_plugin_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("friends_main_user_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("friends_private_rss_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("friends_default_friend_role") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sidebars_widgets") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("friends_main_user_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_option("friends_user_icon_url", $id_or_email) alters data types {'user_meta'}. Passed arguments: 0: $option (string), 1: $user (int). Returns (mixed).,None,None
RETRIEVAL call to get_option("friends_force_enable_post_formats") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_transient($cache_key) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("friends_limit_homepage_post_format", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("friends_comment_registration_message", __("Only people in my network can comment.", "friends")) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("friends_expose_post_format_feeds") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_option("friends_in_token", $user->ID) alters data types {'user_meta'}. Passed arguments: 0: $option (string), 1: $user (int). Returns (mixed).,None,None
RETRIEVAL call to get_user_option("friends_no_new_post_notification") alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_option("friends_no_new_post_notification_" . $args["friend"]->ID) alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_option("friends_no_keyword_notification_" . $args["friend"]->ID) alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_option("friends_no_new_post_notification_" . $friend_user->ID) alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_option("friends_no_keyword_notification_" . $friend_user->ID) alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_post_meta($post->ID, "author", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("blogname") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("blogname") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("blogname") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("blogname") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_the_author_meta("display_name") alters data types {'user_meta'}. Passed arguments: 0: $field (string). Returns (string).,None,None
RETRIEVAL call to get_the_author_meta("display_name") alters data types {'user_meta'}. Passed arguments: 0: $field (string). Returns (string).,None,None
RETRIEVAL call to get_the_author_meta("ID") alters data types {'user_meta'}. Passed arguments: 0: $field (string). Returns (string).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_the_author() alters data types {'user_meta'}. Returns (string|null).,None,None
RETRIEVAL call to get_the_author_meta("ID") alters data types {'user_meta'}. Passed arguments: 0: $field (string). Returns (string).,None,None
RETRIEVAL call to get_the_author() alters data types {'user_meta'}. Returns (string|null).,None,None
RETRIEVAL call to get_the_author() alters data types {'user_meta'}. Returns (string|null).,None,None
RETRIEVAL call to get_the_author_meta("ID") alters data types {'user_meta'}. Passed arguments: 0: $field (string). Returns (string).,None,None
RETRIEVAL call to get_the_author() alters data types {'user_meta'}. Returns (string|null).,None,None
RETRIEVAL call to get_the_author() alters data types {'user_meta'}. Returns (string|null).,None,None
RETRIEVAL call to get_the_author_meta("display_name") alters data types {'user_meta'}. Passed arguments: 0: $field (string). Returns (string).,None,None
RETRIEVAL call to get_the_author_meta("ID") alters data types {'user_meta'}. Passed arguments: 0: $field (string). Returns (string).,None,None
RETRIEVAL call to get_the_author_meta("url") alters data types {'user_meta'}. Passed arguments: 0: $field (string). Returns (string).,None,None
RETRIEVAL call to get_the_author_meta("ID") alters data types {'user_meta'}. Passed arguments: 0: $field (string). Returns (string).,None,None
RETRIEVAL call to the_author() alters data types {'user', 'user_meta'}. Returns (string|null).,None,None
RETRIEVAL call to get_the_author_meta("ID") alters data types {'user_meta'}. Passed arguments: 0: $field (string). Returns (string).,None,None
RETRIEVAL call to the_author() alters data types {'user', 'user_meta'}. Returns (string|null).,None,None
RETRIEVAL call to get_the_author_meta("ID") alters data types {'user_meta'}. Passed arguments: 0: $field (string). Returns (string).,None,None
RETRIEVAL call to get_the_author_meta("ID") alters data types {'user_meta'}. Passed arguments: 0: $field (string). Returns (string).,None,None
RETRIEVAL call to get_the_author_meta("ID") alters data types {'user_meta'}. Passed arguments: 0: $field (string). Returns (string).,None,None
RETRIEVAL call to get_user_option("friends_out_token", $friends->frontend->author->ID) alters data types {'user_meta'}. Passed arguments: 0: $option (string), 1: $user (int). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
STORAGE call to update_metadata("term", $term_id, $key, $value) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 2: $meta_key (string), 3: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to add_metadata("term", $term_id, $key, $value, true) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 2: $meta_key (string), 3: $meta_value (mixed), 4: $unique (bool). Returns (int|false).,None,None
STORAGE call to update_metadata("term", $term_id, $key, $value) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 2: $meta_key (string), 3: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to add_metadata("term", $term_id, $key, $value, true) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 2: $meta_key (string), 3: $meta_value (mixed), 4: $unique (bool). Returns (int|false).,None,None
STORAGE call to update_metadata("term", $this->term->term_id, $key, $value) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 2: $meta_key (string), 3: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to add_metadata("term", $this->term->term_id, $key, $value, true) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 2: $meta_key (string), 3: $meta_value (mixed), 4: $unique (bool). Returns (int|false).,None,None
STORAGE call to $this->update_metadata("last-log", gmdate("Y-m-d H:i:s") . ": " . $value) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 2: $meta_key (string), 3: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_delete_post(get_the_ID(), true) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
STORAGE call to wp_delete_post(get_the_ID(), true) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
STORAGE call to $this->update_user_option("friends_enable_retention_number", boolval($enabled)) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).,None,None
STORAGE call to $this->update_user_option("friends_retention_number", $number) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).,None,None
STORAGE call to $this->update_user_option("friends_enable_retention_days", boolval($enabled)) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).,None,None
STORAGE call to $this->update_user_option("friends_retention_days", $days) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_option($this->ID, "friends_user_icon_url", $user_icon_url) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_option($this->ID, "friends_user_icon_url", $user_icon_url) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_option($this->ID, "friends_user_icon_url", $user_icon_url) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).,None,None
STORAGE call to $this->update_user_option("friends_out_token", $out_token) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).,None,None
STORAGE call to $this->update_user_option("friends_in_token", $in_token) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("friends_in_token_" . $in_token, $this->ID) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to $this->update_user_option("friends_rest_url", $rest_url) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_option($this->ID, $option_name, $newvalue, $global) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed), 3: $global (bool). Returns (int|bool).,None,None
STORAGE call to delete_user_option($this->ID, $option_name, $global) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $global (bool). Returns (bool).,None,None
STORAGE call to wp_insert_user($userdata) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,None,None
STORAGE call to update_user_option($friend_id, "friends_new_friend", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).,None,None
STORAGE call to delete_option("friends_in_token_" . $current_secret) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to $user_feed->update_metadata("active", isset($feed["active"]) && $feed["active"]) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 2: $meta_key (string), 3: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to $user_feed->update_metadata("title", $feed["title"]) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 2: $meta_key (string), 3: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to $user_feed->update_metadata("parser", $feed["parser"]) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 2: $meta_key (string), 3: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to $user_feed->update_metadata("post-format", $feed["post-format"]) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 2: $meta_key (string), 3: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to $user_feed->update_metadata("mime-type", $feed["mime-type"]) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 2: $meta_key (string), 3: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta(get_current_user_id(), "friends_hide_welcome_panel", !$_GET["friends-welcome"]) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_option($current_user_id, "friends_no_new_post_notification_" . $friend_id, $no_new_post_notification) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_option($current_user_id, "friends_no_keyword_notification_" . $friend_id, $no_keyword_notification) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_option($current_user_id, "friends_hide_from_friends_page", $hide_from_friends_page) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).,None,None
STORAGE call to $friend_user->update_user_option("friends_rest_url", $rest_url) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("friends_request_" . sha1($json->request), $friend_user->ID) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to $friend_user->update_user_option("friends_future_in_token_" . sha1($json->request), $future_in_token) alters data types {'password', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("friends_" . $checkbox, true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("friends_" . $checkbox) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("friends_limit_homepage_post_format", $_POST["limit_homepage_post_format"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("friends_limit_homepage_post_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_user_option(get_current_user_id(), "friends_no_" . $negative_user_checkbox) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string). Returns (bool).,None,None
STORAGE call to update_user_option(get_current_user_id(), "friends_no_" . $negative_user_checkbox, 1) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("friends_main_user_id", intval($_POST["main_user_id"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("comment_registration", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("comment_registration") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("friends_comment_registration_message", $_POST["comment_registration_message"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("friends_comment_registration_message") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("friends_require_codeword", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("friends_require_codeword") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("friends_codeword", $_POST["codeword"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("friends_codeword") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("friends_wrong_codeword_message", $_POST["wrong_codeword_message"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("friends_wrong_codeword_message") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("friends_selected_emojis", $available_emojis) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("friends_selected_emojis") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("friends_notification_keywords", $keywords) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("friends_default_friend_role", $_POST["default_role"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_user_option(get_current_user_id(), "friends_no_new_post_notification") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string). Returns (bool).,None,None
STORAGE call to update_user_option(get_current_user_id(), "friends_no_new_post_notification", 1) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("friends_feed_rules_" . $friend->ID, $rules) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("friends_feed_catch_all_" . $friend->ID, $this->friends->feed->validate_feed_catch_all($_POST["catch_all"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("friends_feed_rules_" . $friend->ID, $this->friends->feed->validate_feed_rules($_POST["rules"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_user_meta(get_current_user_id(), "friends_hide_welcome_panel", empty($_POST["hide"])01) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_update_user($friend) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,None,None
STORAGE call to update_user_option(get_current_user_id(), "friends_hide_from_friends_page", $hide_from_friends_page) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_option(get_current_user_id(), "friends_hide_from_friends_page", $hide_from_friends_page) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).,None,None
STORAGE call to delete_user_option(get_current_user_id(), "friends_no_new_post_notification_" . $friend->ID) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string). Returns (bool).,None,None
STORAGE call to update_user_option(get_current_user_id(), "friends_no_new_post_notification_" . $friend->ID, 1) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).,None,None
STORAGE call to delete_user_option(get_current_user_id(), "friends_no_keyword_notification_" . $friend->ID) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string). Returns (bool).,None,None
STORAGE call to update_user_option(get_current_user_id(), "friends_no_keyword_notification_" . $friend->ID, 1) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).,None,None
STORAGE call to wp_insert_post(["post_type" => "post", "post_status" => "draft", "post_author" => $user_id, "tax_input" => ["post_format" => "post-format-status"], "post_content" => "<!-- wp:paragraph -->" . PHP_EOL . "<p>" . $text . "</p>" . PHP_EOL . "<!-- /wp:paragraph -->"]). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to set_transient($access_transient_key, $access_count + 1, 3600) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to wp_update_post($post_data). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to wp_insert_post($post_data, true). Passed arguments: 0: $postarr (array), 1: $wp_error (bool). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($post_id, "author", $item->author) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "remote_post_id", $item->post-id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_transient($cache_key) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).,None,None
STORAGE call to delete_transient($cache_key . "_author_" . $author_id) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).,None,None
STORAGE call to update_user_option($user_id, "friends_new_friend", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).,None,None
STORAGE call to wp_insert_post(["post_type" => "post", "post_title" => $_POST["title"], "post_content" => $_POST["content"], "post_status" => $_POST["status"]]). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to wp_update_post(["ID" => $post->ID, "post_content" => $post->post_content . PHP_EOL . $content, "post_status" => $mark_unread"friends_unread""friends_read"]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to wp_insert_post(["post_type" => self::"CPT", "post_author" => $friend_user->ID, "post_title" => $subject, "post_content" => $content, "post_status" => $mark_unread"friends_unread""friends_read"]). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to wp_update_post(["ID" => $post_id, "post_status" => "friends_read"]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to set_transient($cache_key, $data, 12 * HOUR_IN_SECONDS) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, "remote_reactions", $reactions) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_update_user(["ID" => $friend_user->ID, "nickname" => $request->get_param("name"), "first_name" => $request->get_param("name"), "display_name" => $request->get_param("name")]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,None,None
STORAGE call to delete_user_option($friend_user_id, "friends_future_in_token_" . sha1($request_id)) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string). Returns (bool).,None,None
STORAGE call to $friend_user->update_user_option("friends_future_out_token", $request->get_param("key")) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).,None,None
STORAGE call to $friend_user->update_user_option("friends_request_message", mb_substr($request->get_param("message"), 0, 2000)) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).,None,None
STORAGE call to $friend_user->update_user_option("friends_request_id", $request_id) alters data types {'password', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).,None,None
STORAGE call to wp_delete_post($post_id) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).,None,None
STORAGE call to $friend_user->delete_user_option("friends_request_id") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string). Returns (bool).,None,None
STORAGE call to $friend_user->delete_user_option("friends_future_out_token") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string). Returns (bool).,None,None
STORAGE call to wp_insert_post($post_data). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to update_user_option($user->ID, "friends_user_icon_url", $gravatar) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string), 2: $newvalue (mixed). Returns (int|bool).,None,None
STORAGE call to delete_user_option($user->ID, "friends_gravatar") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string). Returns (bool).,None,None
STORAGE call to update_option("friends_plugin_version", self::"VERSION") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("friends_main_user_id", get_current_user_id()) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("friends_private_rss_key", wp_generate_password(128, false)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("friends_default_friend_role", "friend") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("widget_" . $widget_id, [$id => $options]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sidebars_widgets", $sidebars_widgets) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("friends_main_user_id", $main_user_id) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to set_transient($cache_key, $counts, HOUR_IN_SECONDS) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to delete_option("friends_in_token_" . $in_token) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_user_option($user->ID, "friends_out_token") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string). Returns (bool).,None,None
STORAGE call to delete_user_option($user->ID, "friends_in_token") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string). Returns (bool).,None,None
STORAGE call to delete_user_option($user->ID, "friends_new_friend") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $option_name (string). Returns (bool).,None,None
STORAGE call to delete_option("friends_main_user_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to wp_delete_post($post->ID, true) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
CRYPTOGRAPHY call to wp_update_user($friend) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,hash,None
CRYPTOGRAPHY call to wp_update_user(["ID" => $friend_user->ID, "nickname" => $request->get_param("name"), "first_name" => $request->get_param("name"), "display_name" => $request->get_param("name")]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,hash,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] PII of types (['email', 'user', 'user_meta', 'password']) stored through WordPress function "wp_insert_post(["post_type" => "post", "post_status" => "draft", "post_author" => $user_id, "tax_input" => ["post_format" => "post-format-status"], "post_content" => "<!-- wp:paragraph -->" . PHP_EOL . "<p>" . $text . "</p>" . PHP_EOL . "<!-- /wp:paragraph -->"])", found in file includes/class-friends-automatic-status.php at line 188. 

[has_storage] PII of types (['email', 'user', 'user_meta', 'password']) stored through WordPress function "update_metadata("term", $this->term->term_id, $key, $value)", found in file includes/class-friend-user-feed.php at line 482. 

[has_storage] WP User info of types (['email', 'user', 'user_meta', 'password']) stored through WordPress function "wp_update_user(["ID" => $friend_user->ID, "nickname" => $request->get_param("name"), "first_name" => $request->get_param("name"), "display_name" => $request->get_param("name")])", found in file includes/class-friends-rest.php at line 141. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "delete_user_option(get_current_user_id(), "friends_no_keyword_notification_" . $friend->ID)", found in file includes/class-friends-admin.php at line 961. 

[has_storage] PII of types (['email', 'user', 'user_meta', 'password']) stored through WordPress function "delete_user_option($friend_user_id, "friends_future_in_token_" . sha1($request_id))", found in file includes/class-friends-rest.php at line 151. 

[has_storage] PII of types (['email', 'user', 'user_meta', 'password']) stored through WordPress function "add_metadata("term", $term_id, $key, $value, true)", found in file includes/class-friend-user-feed.php at line 466. 

[has_storage] PII of types (['email', 'user', 'user_meta', 'password']) stored through WordPress function "$this->update_user_option("friends_out_token", $out_token)", found in file includes/class-friend-user.php at line 624. 

[has_storage] PII of types (['email', 'user', 'user_meta', 'password']) stored through WordPress function "add_metadata("term", $this->term->term_id, $key, $value, true)", found in file includes/class-friend-user-feed.php at line 484. 

[has_storage] PII of types (['email', 'user', 'user_meta', 'password']) stored through WordPress function "$friend_user->update_user_option("friends_rest_url", $rest_url)", found in file includes/class-friends-admin.php at line 385. 

[has_storage] PII of types (['email', 'user', 'user_meta', 'password']) stored through WordPress function "$friend_user->update_user_option("friends_future_in_token_" . sha1($json->request), $future_in_token)", found in file includes/class-friends-admin.php at line 389. 

[has_storage] PII of types (['email', 'user', 'user_meta', 'password']) stored through WordPress function "$friend_user->update_user_option("friends_request_id", $request_id)", found in file includes/class-friends-rest.php at line 222. 

[has_storage] PII of types (['email', 'user', 'user_meta', 'password']) stored through WordPress function "$this->update_user_option("friends_in_token", $in_token)", found in file includes/class-friend-user.php at line 625. 

[has_storage] PII of types (['email', 'user', 'user_meta', 'password']) stored through WordPress function "update_option("widget_" . $widget_id, [$id => $options])", found in file includes/class-friends.php at line 414. 

[has_storage] PII of types (['email', 'user', 'user_meta', 'password']) stored through WordPress function "$this->update_user_option("friends_retention_days", $days)", found in file includes/class-friend-user.php at line 467. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "delete_user_option($user->ID, "friends_in_token")", found in file includes/class-friends.php at line 935. 

[has_storage] PII of types (['email', 'user', 'user_meta', 'password']) stored through WordPress function "update_option("friends_main_user_id", $main_user_id)", found in file includes/class-friends.php at line 448. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_option($current_user_id, "friends_hide_from_friends_page", $hide_from_friends_page)", found in file includes/class-friends-admin.php at line 1632. 

[has_storage] PII of types (['email', 'user', 'user_meta', 'password']) stored through WordPress function "update_option("sidebars_widgets", $sidebars_widgets)", found in file includes/class-friends.php at line 418. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "$friend_user->delete_user_option("friends_request_id")", found in file includes/class-friends-rest.php at line 414. 

[has_storage] PII of types (['email', 'user', 'user_meta', 'password']) stored through WordPress function "$this->update_user_option("friends_enable_retention_number", boolval($enabled))", found in file includes/class-friend-user.php at line 396. 

[has_storage] PII of types (['email', 'user', 'user_meta', 'password']) stored through WordPress function "$user_feed->update_metadata("title", $feed["title"])", found in file includes/class-friends-admin.php at line 1022. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "delete_user_option($user->ID, "friends_new_friend")", found in file includes/class-friends.php at line 936. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "delete_user_option(get_current_user_id(), "friends_no_" . $negative_user_checkbox)", found in file includes/class-friends-admin.php at line 467. 

[has_storage] PII of types (['email', 'user', 'user_meta', 'password']) stored through WordPress function "$user_feed->update_metadata("post-format", $feed["post-format"])", found in file includes/class-friends-admin.php at line 1030. 

[has_storage] PII of types (['email', 'user', 'user_meta', 'password']) stored through WordPress function "$this->update_user_option("friends_enable_retention_days", boolval($enabled))", found in file includes/class-friend-user.php at line 441. 

[has_storage] PII of types (['email', 'user', 'user_meta', 'password']) stored through WordPress function "wp_insert_post(["post_type" => self::"CPT", "post_author" => $friend_user->ID, "post_title" => $subject, "post_content" => $content, "post_status" => $mark_unread"friends_unread""friends_read"])", found in file includes/class-friends-messages.php at line 227. 

[has_storage] PII of types (['email', 'user', 'user_meta', 'password']) stored through WordPress function "$this->update_user_option("friends_rest_url", $rest_url)", found in file includes/class-friend-user.php at line 770. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta(get_current_user_id(), "friends_hide_welcome_panel", !$_GET["friends-welcome"])", found in file includes/class-friends-admin.php at line 105. 

[has_storage] PII of types (['email', 'user', 'user_meta', 'password']) stored through WordPress function "$user_feed->update_metadata("mime-type", $feed["mime-type"])", found in file includes/class-friends-admin.php at line 1034. 

[has_storage] PII of types (['email', 'user', 'user_meta', 'password']) stored through WordPress function "wp_update_post(["ID" => $post->ID, "post_content" => $post->post_content . PHP_EOL . $content, "post_status" => $mark_unread"friends_unread""friends_read"])", found in file includes/class-friends-messages.php at line 219. 

[has_storage] PII of types (['email', 'user', 'user_meta', 'password']) stored through WordPress function "$user_feed->update_metadata("active", isset($feed["active"]) && $feed["active"])", found in file includes/class-friends-admin.php at line 1019. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_option(get_current_user_id(), "friends_no_" . $negative_user_checkbox, 1)", found in file includes/class-friends-admin.php at line 469. 

[has_storage] PII of types (['email', 'user', 'user_meta', 'password']) stored through WordPress function "$this->update_user_option("friends_retention_number", $number)", found in file includes/class-friend-user.php at line 422. 

[has_storage] PII of types (['email', 'user', 'user_meta', 'password']) stored through WordPress function "update_option("friends_request_" . sha1($json->request), $friend_user->ID)", found in file includes/class-friends-admin.php at line 388. 

[has_storage] PII of types (['email', 'user', 'user_meta', 'password']) stored through WordPress function "$this->update_metadata("last-log", gmdate("Y-m-d H:i:s") . ": " . $value)", found in file includes/class-friend-user-feed.php at line 495. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_option(get_current_user_id(), "friends_hide_from_friends_page", $hide_from_friends_page)", found in file includes/class-friends-admin.php at line 942. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_option(get_current_user_id(), "friends_no_new_post_notification_" . $friend->ID, 1)", found in file includes/class-friends-admin.php at line 955. 

[has_storage] WP User info of types (['user', 'user_meta']) stored through WordPress function "wp_update_user($friend)", found in file includes/class-friends-admin.php at line 926. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "delete_user_option(get_current_user_id(), "friends_no_new_post_notification_" . $friend->ID)", found in file includes/class-friends-admin.php at line 953. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "$friend_user->delete_user_option("friends_future_out_token")", found in file includes/class-friends-rest.php at line 415. 

[has_storage] PII of types (['email', 'user', 'user_meta', 'password']) stored through WordPress function "$friend_user->update_user_option("friends_future_out_token", $request->get_param("key"))", found in file includes/class-friends-rest.php at line 218. 

[has_storage] PII of types (['email', 'user', 'user_meta', 'password']) stored through WordPress function "update_user_option(get_current_user_id(), "friends_hide_from_friends_page", $hide_from_friends_page)", found in file includes/class-friends-admin.php at line 947. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "delete_user_option($user->ID, "friends_out_token")", found in file includes/class-friends.php at line 934. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "delete_user_option($user->ID, "friends_gravatar")", found in file includes/class-friends.php at line 343. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_option($user_id, "friends_new_friend", true)", found in file includes/class-friends-feed.php at line 986. 

[has_storage] PII of types (['email', 'user', 'user_meta', 'password']) stored through WordPress function "update_user_option($user->ID, "friends_user_icon_url", $gravatar)", found in file includes/class-friends.php at line 341. 

[has_storage] PII of types (['email', 'user', 'user_meta', 'password']) stored through WordPress function "update_option("friends_feed_rules_" . $friend->ID, $rules)", found in file includes/class-friends-admin.php at line 672. 

[has_storage] PII of types (['email', 'user', 'user_meta', 'password']) stored through WordPress function "$friend_user->update_user_option("friends_request_message", mb_substr($request->get_param("message"), 0, 2000))", found in file includes/class-friends-rest.php at line 219. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_option($current_user_id, "friends_no_new_post_notification_" . $friend_id, $no_new_post_notification)", found in file includes/class-friends-admin.php at line 1623. 

[has_storage] PII of types (['email', 'user', 'user_meta', 'password']) stored through WordPress function "update_option("friends_feed_catch_all_" . $friend->ID, $this->friends->feed->validate_feed_catch_all($_POST["catch_all"]))", found in file includes/class-friends-admin.php at line 675. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_option($this->ID, "friends_user_icon_url", $user_icon_url)", found in file includes/class-friend-user.php at line 496. 

[has_storage] WP User info of types (['email', 'user', 'user_meta', 'password']) stored through WordPress function "wp_insert_user($userdata)", found in file includes/class-friend-user.php at line 94. 

[has_storage] PII of types (['email', 'user', 'user_meta', 'password']) stored through WordPress function "update_user_option($friend_id, "friends_new_friend", true)", found in file includes/class-friend-user.php at line 95. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_option($this->ID, "friends_user_icon_url", $user_icon_url)", found in file includes/class-friend-user.php at line 506. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_option($this->ID, "friends_user_icon_url", $user_icon_url)", found in file includes/class-friend-user.php at line 502. 

[has_storage] PII of types (['email', 'user', 'user_meta', 'password']) stored through WordPress function "update_metadata("term", $term_id, $key, $value)", found in file includes/class-friend-user-feed.php at line 464. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "delete_user_option($this->ID, $option_name, $global)", found in file includes/class-friend-user.php at line 810. 

[has_storage] PII of types (['email', 'user', 'user_meta', 'password']) stored through WordPress function "update_option("friends_in_token_" . $in_token, $this->ID)", found in file includes/class-friend-user.php at line 626. 

[has_storage] PII of types (['email', 'user', 'user_meta', 'password']) stored through WordPress function "update_user_option($this->ID, $option_name, $newvalue, $global)", found in file includes/class-friend-user.php at line 798. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_option(get_current_user_id(), "friends_no_keyword_notification_" . $friend->ID, 1)", found in file includes/class-friends-admin.php at line 963. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "delete_user_option(get_current_user_id(), "friends_no_new_post_notification")", found in file includes/class-friends-admin.php at line 538. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta(get_current_user_id(), "friends_hide_welcome_panel", empty($_POST["hide"])01)", found in file includes/class-friends-admin.php at line 773. 

[has_storage] PII of types (['email', 'user', 'user_meta', 'password']) stored through WordPress function "update_option("friends_feed_rules_" . $friend->ID, $this->friends->feed->validate_feed_rules($_POST["rules"]))", found in file includes/class-friends-admin.php at line 676. 

[has_storage] PII of types (['email', 'user', 'user_meta', 'password']) stored through WordPress function "$user_feed->update_metadata("parser", $feed["parser"])", found in file includes/class-friends-admin.php at line 1026. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_option(get_current_user_id(), "friends_no_new_post_notification", 1)", found in file includes/class-friends-admin.php at line 540. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_option($current_user_id, "friends_no_keyword_notification_" . $friend_id, $no_keyword_notification)", found in file includes/class-friends-admin.php at line 1628. 

[has_storage] Storage check is WP 

[Art.17, Right to erasure] Wordpress storage of PII through wp_insert_post(["post_type" => "post", "post_status" => "draft", "post_author" => $user_id, "tax_input" => ["post_format" => "post-format-status"], "post_content" => "<!-- wp:paragraph -->" . PHP_EOL . "<p>" . $text . "</p>" . PHP_EOL . "<!-- /wp:paragraph -->"]) does not have corresponding deletion method. Storage method found in file includes/class-friends-automatic-status.php at line 188. 

[Art.17, Right to erasure] Wordpress storage of PII through update_metadata("term", $this->term->term_id, $key, $value) does not have corresponding deletion method. Storage method found in file includes/class-friend-user-feed.php at line 482. 

[Art.17, Right to erasure] Wordpress storage of PII through delete_user_option(get_current_user_id(), "friends_no_keyword_notification_" . $friend->ID) does not have corresponding deletion method. Storage method found in file includes/class-friends-admin.php at line 961. 

[Art.17, Right to erasure] Wordpress storage of PII through delete_user_option($friend_user_id, "friends_future_in_token_" . sha1($request_id)) does not have corresponding deletion method. Storage method found in file includes/class-friends-rest.php at line 151. 

[Art.17, Right to erasure] Wordpress storage of PII through add_metadata("term", $term_id, $key, $value, true) does not have corresponding deletion method. Storage method found in file includes/class-friend-user-feed.php at line 466. 

[Art.17, Right to erasure] Wordpress storage of PII through $this->update_user_option("friends_out_token", $out_token) does not have corresponding deletion method. Storage method found in file includes/class-friend-user.php at line 624. 

[Art.17, Right to erasure] Wordpress storage of PII through add_metadata("term", $this->term->term_id, $key, $value, true) does not have corresponding deletion method. Storage method found in file includes/class-friend-user-feed.php at line 484. 

[Art.17, Right to erasure] Wordpress storage of PII through $friend_user->update_user_option("friends_rest_url", $rest_url) does not have corresponding deletion method. Storage method found in file includes/class-friends-admin.php at line 385. 

[Art.17, Right to erasure] Wordpress storage of PII through $friend_user->update_user_option("friends_future_in_token_" . sha1($json->request), $future_in_token) does not have corresponding deletion method. Storage method found in file includes/class-friends-admin.php at line 389. 

[Art.17, Right to erasure] Wordpress storage of PII through $friend_user->update_user_option("friends_request_id", $request_id) does not have corresponding deletion method. Storage method found in file includes/class-friends-rest.php at line 222. 

[Art.17, Right to erasure] Wordpress storage of PII through $this->update_user_option("friends_in_token", $in_token) does not have corresponding deletion method. Storage method found in file includes/class-friend-user.php at line 625. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("widget_" . $widget_id, [$id => $options]) has deletion method delete_option("friends_in_token_" . $current_secret). Storage method found in file includes/class-friends.php at line 414. Deletion method found in file includes/class-friends-access-control.php at line 256. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("widget_" . $widget_id, [$id => $options]) has deletion method delete_option("friends_" . $checkbox). Storage method found in file includes/class-friends.php at line 414. Deletion method found in file includes/class-friends-admin.php at line 455. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("widget_" . $widget_id, [$id => $options]) has deletion method delete_option("friends_limit_homepage_post_format"). Storage method found in file includes/class-friends.php at line 414. Deletion method found in file includes/class-friends-admin.php at line 462. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("widget_" . $widget_id, [$id => $options]) has deletion method delete_option("comment_registration"). Storage method found in file includes/class-friends.php at line 414. Deletion method found in file includes/class-friends-admin.php at line 480. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("widget_" . $widget_id, [$id => $options]) has deletion method delete_option("friends_comment_registration_message"). Storage method found in file includes/class-friends.php at line 414. Deletion method found in file includes/class-friends-admin.php at line 486. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("widget_" . $widget_id, [$id => $options]) has deletion method delete_option("friends_require_codeword"). Storage method found in file includes/class-friends.php at line 414. Deletion method found in file includes/class-friends-admin.php at line 492. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("widget_" . $widget_id, [$id => $options]) has deletion method delete_option("friends_codeword"). Storage method found in file includes/class-friends.php at line 414. Deletion method found in file includes/class-friends-admin.php at line 498. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("widget_" . $widget_id, [$id => $options]) has deletion method delete_option("friends_wrong_codeword_message"). Storage method found in file includes/class-friends.php at line 414. Deletion method found in file includes/class-friends-admin.php at line 504. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("widget_" . $widget_id, [$id => $options]) has deletion method delete_option("friends_selected_emojis"). Storage method found in file includes/class-friends.php at line 414. Deletion method found in file includes/class-friends-admin.php at line 517. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("widget_" . $widget_id, [$id => $options]) has deletion method delete_option("friends_in_token_" . $in_token). Storage method found in file includes/class-friends.php at line 414. Deletion method found in file includes/class-friends.php at line 933. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("widget_" . $widget_id, [$id => $options]) has deletion method delete_option("friends_main_user_id"). Storage method found in file includes/class-friends.php at line 414. Deletion method found in file includes/class-friends.php at line 939. 

[Art.17, Right to erasure] Wordpress storage of PII through $this->update_user_option("friends_retention_days", $days) does not have corresponding deletion method. Storage method found in file includes/class-friend-user.php at line 467. 

[Art.17, Right to erasure] Wordpress storage of PII through delete_user_option($user->ID, "friends_in_token") does not have corresponding deletion method. Storage method found in file includes/class-friends.php at line 935. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_main_user_id", $main_user_id) has deletion method delete_option("friends_in_token_" . $current_secret). Storage method found in file includes/class-friends.php at line 448. Deletion method found in file includes/class-friends-access-control.php at line 256. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_main_user_id", $main_user_id) has deletion method delete_option("friends_" . $checkbox). Storage method found in file includes/class-friends.php at line 448. Deletion method found in file includes/class-friends-admin.php at line 455. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_main_user_id", $main_user_id) has deletion method delete_option("friends_limit_homepage_post_format"). Storage method found in file includes/class-friends.php at line 448. Deletion method found in file includes/class-friends-admin.php at line 462. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_main_user_id", $main_user_id) has deletion method delete_option("comment_registration"). Storage method found in file includes/class-friends.php at line 448. Deletion method found in file includes/class-friends-admin.php at line 480. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_main_user_id", $main_user_id) has deletion method delete_option("friends_comment_registration_message"). Storage method found in file includes/class-friends.php at line 448. Deletion method found in file includes/class-friends-admin.php at line 486. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_main_user_id", $main_user_id) has deletion method delete_option("friends_require_codeword"). Storage method found in file includes/class-friends.php at line 448. Deletion method found in file includes/class-friends-admin.php at line 492. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_main_user_id", $main_user_id) has deletion method delete_option("friends_codeword"). Storage method found in file includes/class-friends.php at line 448. Deletion method found in file includes/class-friends-admin.php at line 498. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_main_user_id", $main_user_id) has deletion method delete_option("friends_wrong_codeword_message"). Storage method found in file includes/class-friends.php at line 448. Deletion method found in file includes/class-friends-admin.php at line 504. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_main_user_id", $main_user_id) has deletion method delete_option("friends_selected_emojis"). Storage method found in file includes/class-friends.php at line 448. Deletion method found in file includes/class-friends-admin.php at line 517. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_main_user_id", $main_user_id) has deletion method delete_option("friends_in_token_" . $in_token). Storage method found in file includes/class-friends.php at line 448. Deletion method found in file includes/class-friends.php at line 933. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_main_user_id", $main_user_id) has deletion method delete_option("friends_main_user_id"). Storage method found in file includes/class-friends.php at line 448. Deletion method found in file includes/class-friends.php at line 939. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_option($current_user_id, "friends_hide_from_friends_page", $hide_from_friends_page) does not have corresponding deletion method. Storage method found in file includes/class-friends-admin.php at line 1632. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("sidebars_widgets", $sidebars_widgets) has deletion method delete_option("friends_in_token_" . $current_secret). Storage method found in file includes/class-friends.php at line 418. Deletion method found in file includes/class-friends-access-control.php at line 256. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("sidebars_widgets", $sidebars_widgets) has deletion method delete_option("friends_" . $checkbox). Storage method found in file includes/class-friends.php at line 418. Deletion method found in file includes/class-friends-admin.php at line 455. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("sidebars_widgets", $sidebars_widgets) has deletion method delete_option("friends_limit_homepage_post_format"). Storage method found in file includes/class-friends.php at line 418. Deletion method found in file includes/class-friends-admin.php at line 462. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("sidebars_widgets", $sidebars_widgets) has deletion method delete_option("comment_registration"). Storage method found in file includes/class-friends.php at line 418. Deletion method found in file includes/class-friends-admin.php at line 480. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("sidebars_widgets", $sidebars_widgets) has deletion method delete_option("friends_comment_registration_message"). Storage method found in file includes/class-friends.php at line 418. Deletion method found in file includes/class-friends-admin.php at line 486. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("sidebars_widgets", $sidebars_widgets) has deletion method delete_option("friends_require_codeword"). Storage method found in file includes/class-friends.php at line 418. Deletion method found in file includes/class-friends-admin.php at line 492. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("sidebars_widgets", $sidebars_widgets) has deletion method delete_option("friends_codeword"). Storage method found in file includes/class-friends.php at line 418. Deletion method found in file includes/class-friends-admin.php at line 498. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("sidebars_widgets", $sidebars_widgets) has deletion method delete_option("friends_wrong_codeword_message"). Storage method found in file includes/class-friends.php at line 418. Deletion method found in file includes/class-friends-admin.php at line 504. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("sidebars_widgets", $sidebars_widgets) has deletion method delete_option("friends_selected_emojis"). Storage method found in file includes/class-friends.php at line 418. Deletion method found in file includes/class-friends-admin.php at line 517. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("sidebars_widgets", $sidebars_widgets) has deletion method delete_option("friends_in_token_" . $in_token). Storage method found in file includes/class-friends.php at line 418. Deletion method found in file includes/class-friends.php at line 933. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("sidebars_widgets", $sidebars_widgets) has deletion method delete_option("friends_main_user_id"). Storage method found in file includes/class-friends.php at line 418. Deletion method found in file includes/class-friends.php at line 939. 

[Art.17, Right to erasure] Wordpress storage of PII through $friend_user->delete_user_option("friends_request_id") does not have corresponding deletion method. Storage method found in file includes/class-friends-rest.php at line 414. 

[Art.17, Right to erasure] Wordpress storage of PII through $this->update_user_option("friends_enable_retention_number", boolval($enabled)) does not have corresponding deletion method. Storage method found in file includes/class-friend-user.php at line 396. 

[Art.17, Right to erasure] Wordpress storage of PII through $user_feed->update_metadata("title", $feed["title"]) does not have corresponding deletion method. Storage method found in file includes/class-friends-admin.php at line 1022. 

[Art.17, Right to erasure] Wordpress storage of PII through delete_user_option($user->ID, "friends_new_friend") does not have corresponding deletion method. Storage method found in file includes/class-friends.php at line 936. 

[Art.17, Right to erasure] Wordpress storage of PII through delete_user_option(get_current_user_id(), "friends_no_" . $negative_user_checkbox) does not have corresponding deletion method. Storage method found in file includes/class-friends-admin.php at line 467. 

[Art.17, Right to erasure] Wordpress storage of PII through $user_feed->update_metadata("post-format", $feed["post-format"]) does not have corresponding deletion method. Storage method found in file includes/class-friends-admin.php at line 1030. 

[Art.17, Right to erasure] Wordpress storage of PII through $this->update_user_option("friends_enable_retention_days", boolval($enabled)) does not have corresponding deletion method. Storage method found in file includes/class-friend-user.php at line 441. 

[Art.17, Right to erasure] Wordpress storage of PII through wp_insert_post(["post_type" => self::"CPT", "post_author" => $friend_user->ID, "post_title" => $subject, "post_content" => $content, "post_status" => $mark_unread"friends_unread""friends_read"]) does not have corresponding deletion method. Storage method found in file includes/class-friends-messages.php at line 227. 

[Art.17, Right to erasure] Wordpress storage of PII through $this->update_user_option("friends_rest_url", $rest_url) does not have corresponding deletion method. Storage method found in file includes/class-friend-user.php at line 770. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta(get_current_user_id(), "friends_hide_welcome_panel", !$_GET["friends-welcome"]) does not have corresponding deletion method. Storage method found in file includes/class-friends-admin.php at line 105. 

[Art.17, Right to erasure] Wordpress storage of PII through $user_feed->update_metadata("mime-type", $feed["mime-type"]) does not have corresponding deletion method. Storage method found in file includes/class-friends-admin.php at line 1034. 

[Art.17, Right to erasure] Wordpress storage of PII through wp_update_post(["ID" => $post->ID, "post_content" => $post->post_content . PHP_EOL . $content, "post_status" => $mark_unread"friends_unread""friends_read"]) does not have corresponding deletion method. Storage method found in file includes/class-friends-messages.php at line 219. 

[Art.17, Right to erasure] Wordpress storage of PII through $user_feed->update_metadata("active", isset($feed["active"]) && $feed["active"]) does not have corresponding deletion method. Storage method found in file includes/class-friends-admin.php at line 1019. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_option(get_current_user_id(), "friends_no_" . $negative_user_checkbox, 1) does not have corresponding deletion method. Storage method found in file includes/class-friends-admin.php at line 469. 

[Art.17, Right to erasure] Wordpress storage of PII through $this->update_user_option("friends_retention_number", $number) does not have corresponding deletion method. Storage method found in file includes/class-friend-user.php at line 422. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_request_" . sha1($json->request), $friend_user->ID) has deletion method delete_option("friends_in_token_" . $current_secret). Storage method found in file includes/class-friends-admin.php at line 388. Deletion method found in file includes/class-friends-access-control.php at line 256. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_request_" . sha1($json->request), $friend_user->ID) has deletion method delete_option("friends_" . $checkbox). Storage method found in file includes/class-friends-admin.php at line 388. Deletion method found in file includes/class-friends-admin.php at line 455. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_request_" . sha1($json->request), $friend_user->ID) has deletion method delete_option("friends_limit_homepage_post_format"). Storage method found in file includes/class-friends-admin.php at line 388. Deletion method found in file includes/class-friends-admin.php at line 462. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_request_" . sha1($json->request), $friend_user->ID) has deletion method delete_option("comment_registration"). Storage method found in file includes/class-friends-admin.php at line 388. Deletion method found in file includes/class-friends-admin.php at line 480. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_request_" . sha1($json->request), $friend_user->ID) has deletion method delete_option("friends_comment_registration_message"). Storage method found in file includes/class-friends-admin.php at line 388. Deletion method found in file includes/class-friends-admin.php at line 486. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_request_" . sha1($json->request), $friend_user->ID) has deletion method delete_option("friends_require_codeword"). Storage method found in file includes/class-friends-admin.php at line 388. Deletion method found in file includes/class-friends-admin.php at line 492. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_request_" . sha1($json->request), $friend_user->ID) has deletion method delete_option("friends_codeword"). Storage method found in file includes/class-friends-admin.php at line 388. Deletion method found in file includes/class-friends-admin.php at line 498. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_request_" . sha1($json->request), $friend_user->ID) has deletion method delete_option("friends_wrong_codeword_message"). Storage method found in file includes/class-friends-admin.php at line 388. Deletion method found in file includes/class-friends-admin.php at line 504. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_request_" . sha1($json->request), $friend_user->ID) has deletion method delete_option("friends_selected_emojis"). Storage method found in file includes/class-friends-admin.php at line 388. Deletion method found in file includes/class-friends-admin.php at line 517. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_request_" . sha1($json->request), $friend_user->ID) has deletion method delete_option("friends_in_token_" . $in_token). Storage method found in file includes/class-friends-admin.php at line 388. Deletion method found in file includes/class-friends.php at line 933. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_request_" . sha1($json->request), $friend_user->ID) has deletion method delete_option("friends_main_user_id"). Storage method found in file includes/class-friends-admin.php at line 388. Deletion method found in file includes/class-friends.php at line 939. 

[Art.17, Right to erasure] Wordpress storage of PII through $this->update_metadata("last-log", gmdate("Y-m-d H:i:s") . ": " . $value) does not have corresponding deletion method. Storage method found in file includes/class-friend-user-feed.php at line 495. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_option(get_current_user_id(), "friends_hide_from_friends_page", $hide_from_friends_page) does not have corresponding deletion method. Storage method found in file includes/class-friends-admin.php at line 942. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_option(get_current_user_id(), "friends_no_new_post_notification_" . $friend->ID, 1) does not have corresponding deletion method. Storage method found in file includes/class-friends-admin.php at line 955. 

[Art.17, Right to erasure] Wordpress storage of PII through delete_user_option(get_current_user_id(), "friends_no_new_post_notification_" . $friend->ID) does not have corresponding deletion method. Storage method found in file includes/class-friends-admin.php at line 953. 

[Art.17, Right to erasure] Wordpress storage of PII through $friend_user->delete_user_option("friends_future_out_token") does not have corresponding deletion method. Storage method found in file includes/class-friends-rest.php at line 415. 

[Art.17, Right to erasure] Wordpress storage of PII through $friend_user->update_user_option("friends_future_out_token", $request->get_param("key")) does not have corresponding deletion method. Storage method found in file includes/class-friends-rest.php at line 218. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_option(get_current_user_id(), "friends_hide_from_friends_page", $hide_from_friends_page) does not have corresponding deletion method. Storage method found in file includes/class-friends-admin.php at line 947. 

[Art.17, Right to erasure] Wordpress storage of PII through delete_user_option($user->ID, "friends_out_token") does not have corresponding deletion method. Storage method found in file includes/class-friends.php at line 934. 

[Art.17, Right to erasure] Wordpress storage of PII through delete_user_option($user->ID, "friends_gravatar") does not have corresponding deletion method. Storage method found in file includes/class-friends.php at line 343. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_option($user_id, "friends_new_friend", true) does not have corresponding deletion method. Storage method found in file includes/class-friends-feed.php at line 986. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_option($user->ID, "friends_user_icon_url", $gravatar) does not have corresponding deletion method. Storage method found in file includes/class-friends.php at line 341. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_feed_rules_" . $friend->ID, $rules) has deletion method delete_option("friends_in_token_" . $current_secret). Storage method found in file includes/class-friends-admin.php at line 672. Deletion method found in file includes/class-friends-access-control.php at line 256. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_feed_rules_" . $friend->ID, $rules) has deletion method delete_option("friends_" . $checkbox). Storage method found in file includes/class-friends-admin.php at line 672. Deletion method found in file includes/class-friends-admin.php at line 455. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_feed_rules_" . $friend->ID, $rules) has deletion method delete_option("friends_limit_homepage_post_format"). Storage method found in file includes/class-friends-admin.php at line 672. Deletion method found in file includes/class-friends-admin.php at line 462. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_feed_rules_" . $friend->ID, $rules) has deletion method delete_option("comment_registration"). Storage method found in file includes/class-friends-admin.php at line 672. Deletion method found in file includes/class-friends-admin.php at line 480. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_feed_rules_" . $friend->ID, $rules) has deletion method delete_option("friends_comment_registration_message"). Storage method found in file includes/class-friends-admin.php at line 672. Deletion method found in file includes/class-friends-admin.php at line 486. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_feed_rules_" . $friend->ID, $rules) has deletion method delete_option("friends_require_codeword"). Storage method found in file includes/class-friends-admin.php at line 672. Deletion method found in file includes/class-friends-admin.php at line 492. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_feed_rules_" . $friend->ID, $rules) has deletion method delete_option("friends_codeword"). Storage method found in file includes/class-friends-admin.php at line 672. Deletion method found in file includes/class-friends-admin.php at line 498. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_feed_rules_" . $friend->ID, $rules) has deletion method delete_option("friends_wrong_codeword_message"). Storage method found in file includes/class-friends-admin.php at line 672. Deletion method found in file includes/class-friends-admin.php at line 504. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_feed_rules_" . $friend->ID, $rules) has deletion method delete_option("friends_selected_emojis"). Storage method found in file includes/class-friends-admin.php at line 672. Deletion method found in file includes/class-friends-admin.php at line 517. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_feed_rules_" . $friend->ID, $rules) has deletion method delete_option("friends_in_token_" . $in_token). Storage method found in file includes/class-friends-admin.php at line 672. Deletion method found in file includes/class-friends.php at line 933. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_feed_rules_" . $friend->ID, $rules) has deletion method delete_option("friends_main_user_id"). Storage method found in file includes/class-friends-admin.php at line 672. Deletion method found in file includes/class-friends.php at line 939. 

[Art.17, Right to erasure] Wordpress storage of PII through $friend_user->update_user_option("friends_request_message", mb_substr($request->get_param("message"), 0, 2000)) does not have corresponding deletion method. Storage method found in file includes/class-friends-rest.php at line 219. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_option($current_user_id, "friends_no_new_post_notification_" . $friend_id, $no_new_post_notification) does not have corresponding deletion method. Storage method found in file includes/class-friends-admin.php at line 1623. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_feed_catch_all_" . $friend->ID, $this->friends->feed->validate_feed_catch_all($_POST["catch_all"])) has deletion method delete_option("friends_in_token_" . $current_secret). Storage method found in file includes/class-friends-admin.php at line 675. Deletion method found in file includes/class-friends-access-control.php at line 256. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_feed_catch_all_" . $friend->ID, $this->friends->feed->validate_feed_catch_all($_POST["catch_all"])) has deletion method delete_option("friends_" . $checkbox). Storage method found in file includes/class-friends-admin.php at line 675. Deletion method found in file includes/class-friends-admin.php at line 455. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_feed_catch_all_" . $friend->ID, $this->friends->feed->validate_feed_catch_all($_POST["catch_all"])) has deletion method delete_option("friends_limit_homepage_post_format"). Storage method found in file includes/class-friends-admin.php at line 675. Deletion method found in file includes/class-friends-admin.php at line 462. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_feed_catch_all_" . $friend->ID, $this->friends->feed->validate_feed_catch_all($_POST["catch_all"])) has deletion method delete_option("comment_registration"). Storage method found in file includes/class-friends-admin.php at line 675. Deletion method found in file includes/class-friends-admin.php at line 480. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_feed_catch_all_" . $friend->ID, $this->friends->feed->validate_feed_catch_all($_POST["catch_all"])) has deletion method delete_option("friends_comment_registration_message"). Storage method found in file includes/class-friends-admin.php at line 675. Deletion method found in file includes/class-friends-admin.php at line 486. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_feed_catch_all_" . $friend->ID, $this->friends->feed->validate_feed_catch_all($_POST["catch_all"])) has deletion method delete_option("friends_require_codeword"). Storage method found in file includes/class-friends-admin.php at line 675. Deletion method found in file includes/class-friends-admin.php at line 492. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_feed_catch_all_" . $friend->ID, $this->friends->feed->validate_feed_catch_all($_POST["catch_all"])) has deletion method delete_option("friends_codeword"). Storage method found in file includes/class-friends-admin.php at line 675. Deletion method found in file includes/class-friends-admin.php at line 498. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_feed_catch_all_" . $friend->ID, $this->friends->feed->validate_feed_catch_all($_POST["catch_all"])) has deletion method delete_option("friends_wrong_codeword_message"). Storage method found in file includes/class-friends-admin.php at line 675. Deletion method found in file includes/class-friends-admin.php at line 504. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_feed_catch_all_" . $friend->ID, $this->friends->feed->validate_feed_catch_all($_POST["catch_all"])) has deletion method delete_option("friends_selected_emojis"). Storage method found in file includes/class-friends-admin.php at line 675. Deletion method found in file includes/class-friends-admin.php at line 517. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_feed_catch_all_" . $friend->ID, $this->friends->feed->validate_feed_catch_all($_POST["catch_all"])) has deletion method delete_option("friends_in_token_" . $in_token). Storage method found in file includes/class-friends-admin.php at line 675. Deletion method found in file includes/class-friends.php at line 933. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_feed_catch_all_" . $friend->ID, $this->friends->feed->validate_feed_catch_all($_POST["catch_all"])) has deletion method delete_option("friends_main_user_id"). Storage method found in file includes/class-friends-admin.php at line 675. Deletion method found in file includes/class-friends.php at line 939. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_option($this->ID, "friends_user_icon_url", $user_icon_url) does not have corresponding deletion method. Storage method found in file includes/class-friend-user.php at line 496. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_option($friend_id, "friends_new_friend", true) does not have corresponding deletion method. Storage method found in file includes/class-friend-user.php at line 95. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_option($this->ID, "friends_user_icon_url", $user_icon_url) does not have corresponding deletion method. Storage method found in file includes/class-friend-user.php at line 506. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_option($this->ID, "friends_user_icon_url", $user_icon_url) does not have corresponding deletion method. Storage method found in file includes/class-friend-user.php at line 502. 

[Art.17, Right to erasure] Wordpress storage of PII through update_metadata("term", $term_id, $key, $value) does not have corresponding deletion method. Storage method found in file includes/class-friend-user-feed.php at line 464. 

[Art.17, Right to erasure] Wordpress storage of PII through delete_user_option($this->ID, $option_name, $global) does not have corresponding deletion method. Storage method found in file includes/class-friend-user.php at line 810. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_in_token_" . $in_token, $this->ID) has deletion method delete_option("friends_in_token_" . $current_secret). Storage method found in file includes/class-friend-user.php at line 626. Deletion method found in file includes/class-friends-access-control.php at line 256. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_in_token_" . $in_token, $this->ID) has deletion method delete_option("friends_" . $checkbox). Storage method found in file includes/class-friend-user.php at line 626. Deletion method found in file includes/class-friends-admin.php at line 455. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_in_token_" . $in_token, $this->ID) has deletion method delete_option("friends_limit_homepage_post_format"). Storage method found in file includes/class-friend-user.php at line 626. Deletion method found in file includes/class-friends-admin.php at line 462. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_in_token_" . $in_token, $this->ID) has deletion method delete_option("comment_registration"). Storage method found in file includes/class-friend-user.php at line 626. Deletion method found in file includes/class-friends-admin.php at line 480. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_in_token_" . $in_token, $this->ID) has deletion method delete_option("friends_comment_registration_message"). Storage method found in file includes/class-friend-user.php at line 626. Deletion method found in file includes/class-friends-admin.php at line 486. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_in_token_" . $in_token, $this->ID) has deletion method delete_option("friends_require_codeword"). Storage method found in file includes/class-friend-user.php at line 626. Deletion method found in file includes/class-friends-admin.php at line 492. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_in_token_" . $in_token, $this->ID) has deletion method delete_option("friends_codeword"). Storage method found in file includes/class-friend-user.php at line 626. Deletion method found in file includes/class-friends-admin.php at line 498. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_in_token_" . $in_token, $this->ID) has deletion method delete_option("friends_wrong_codeword_message"). Storage method found in file includes/class-friend-user.php at line 626. Deletion method found in file includes/class-friends-admin.php at line 504. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_in_token_" . $in_token, $this->ID) has deletion method delete_option("friends_selected_emojis"). Storage method found in file includes/class-friend-user.php at line 626. Deletion method found in file includes/class-friends-admin.php at line 517. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_in_token_" . $in_token, $this->ID) has deletion method delete_option("friends_in_token_" . $in_token). Storage method found in file includes/class-friend-user.php at line 626. Deletion method found in file includes/class-friends.php at line 933. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_in_token_" . $in_token, $this->ID) has deletion method delete_option("friends_main_user_id"). Storage method found in file includes/class-friend-user.php at line 626. Deletion method found in file includes/class-friends.php at line 939. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_option($this->ID, $option_name, $newvalue, $global) does not have corresponding deletion method. Storage method found in file includes/class-friend-user.php at line 798. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_option(get_current_user_id(), "friends_no_keyword_notification_" . $friend->ID, 1) does not have corresponding deletion method. Storage method found in file includes/class-friends-admin.php at line 963. 

[Art.17, Right to erasure] Wordpress storage of PII through delete_user_option(get_current_user_id(), "friends_no_new_post_notification") does not have corresponding deletion method. Storage method found in file includes/class-friends-admin.php at line 538. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta(get_current_user_id(), "friends_hide_welcome_panel", empty($_POST["hide"])01) does not have corresponding deletion method. Storage method found in file includes/class-friends-admin.php at line 773. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_feed_rules_" . $friend->ID, $this->friends->feed->validate_feed_rules($_POST["rules"])) has deletion method delete_option("friends_in_token_" . $current_secret). Storage method found in file includes/class-friends-admin.php at line 676. Deletion method found in file includes/class-friends-access-control.php at line 256. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_feed_rules_" . $friend->ID, $this->friends->feed->validate_feed_rules($_POST["rules"])) has deletion method delete_option("friends_" . $checkbox). Storage method found in file includes/class-friends-admin.php at line 676. Deletion method found in file includes/class-friends-admin.php at line 455. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_feed_rules_" . $friend->ID, $this->friends->feed->validate_feed_rules($_POST["rules"])) has deletion method delete_option("friends_limit_homepage_post_format"). Storage method found in file includes/class-friends-admin.php at line 676. Deletion method found in file includes/class-friends-admin.php at line 462. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_feed_rules_" . $friend->ID, $this->friends->feed->validate_feed_rules($_POST["rules"])) has deletion method delete_option("comment_registration"). Storage method found in file includes/class-friends-admin.php at line 676. Deletion method found in file includes/class-friends-admin.php at line 480. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_feed_rules_" . $friend->ID, $this->friends->feed->validate_feed_rules($_POST["rules"])) has deletion method delete_option("friends_comment_registration_message"). Storage method found in file includes/class-friends-admin.php at line 676. Deletion method found in file includes/class-friends-admin.php at line 486. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_feed_rules_" . $friend->ID, $this->friends->feed->validate_feed_rules($_POST["rules"])) has deletion method delete_option("friends_require_codeword"). Storage method found in file includes/class-friends-admin.php at line 676. Deletion method found in file includes/class-friends-admin.php at line 492. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_feed_rules_" . $friend->ID, $this->friends->feed->validate_feed_rules($_POST["rules"])) has deletion method delete_option("friends_codeword"). Storage method found in file includes/class-friends-admin.php at line 676. Deletion method found in file includes/class-friends-admin.php at line 498. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_feed_rules_" . $friend->ID, $this->friends->feed->validate_feed_rules($_POST["rules"])) has deletion method delete_option("friends_wrong_codeword_message"). Storage method found in file includes/class-friends-admin.php at line 676. Deletion method found in file includes/class-friends-admin.php at line 504. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_feed_rules_" . $friend->ID, $this->friends->feed->validate_feed_rules($_POST["rules"])) has deletion method delete_option("friends_selected_emojis"). Storage method found in file includes/class-friends-admin.php at line 676. Deletion method found in file includes/class-friends-admin.php at line 517. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_feed_rules_" . $friend->ID, $this->friends->feed->validate_feed_rules($_POST["rules"])) has deletion method delete_option("friends_in_token_" . $in_token). Storage method found in file includes/class-friends-admin.php at line 676. Deletion method found in file includes/class-friends.php at line 933. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("friends_feed_rules_" . $friend->ID, $this->friends->feed->validate_feed_rules($_POST["rules"])) has deletion method delete_option("friends_main_user_id"). Storage method found in file includes/class-friends-admin.php at line 676. Deletion method found in file includes/class-friends.php at line 939. 

[Art.17, Right to erasure] Wordpress storage of PII through $user_feed->update_metadata("parser", $feed["parser"]) does not have corresponding deletion method. Storage method found in file includes/class-friends-admin.php at line 1026. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_option(get_current_user_id(), "friends_no_new_post_notification", 1) does not have corresponding deletion method. Storage method found in file includes/class-friends-admin.php at line 540. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_option($current_user_id, "friends_no_keyword_notification_" . $friend_id, $no_keyword_notification) does not have corresponding deletion method. Storage method found in file includes/class-friends-admin.php at line 1628. 

[Art.17, Right to erasure] Deletion access is NONE 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 23167. Found in file includes/class-friends-automatic-status.php at line 188 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 6290. Found in file includes/class-friend-user-feed.php at line 482 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 15986. Found in file includes/class-friends-admin.php at line 961 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 41466. Found in file includes/class-friends-rest.php at line 151 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 6237. Found in file includes/class-friend-user-feed.php at line 466 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 8991. Found in file includes/class-friend-user.php at line 624 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 6306. Found in file includes/class-friend-user-feed.php at line 484 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 12998. Found in file includes/class-friends-admin.php at line 385 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 13032. Found in file includes/class-friends-admin.php at line 389 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 41801. Found in file includes/class-friends-rest.php at line 222 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9001. Found in file includes/class-friend-user.php at line 625 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 44562. Found in file includes/class-friends.php at line 414 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 8309. Found in file includes/class-friend-user.php at line 467 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 46549. Found in file includes/class-friends.php at line 935 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 44673. Found in file includes/class-friends.php at line 448 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 19243. Found in file includes/class-friends-admin.php at line 1632 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 44576. Found in file includes/class-friends.php at line 418 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 42520. Found in file includes/class-friends-rest.php at line 414 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 8132. Found in file includes/class-friend-user.php at line 396 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 16310. Found in file includes/class-friends-admin.php at line 1022 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 46558. Found in file includes/class-friends.php at line 936 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 13350. Found in file includes/class-friends-admin.php at line 467 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 16356. Found in file includes/class-friends-admin.php at line 1030 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 8236. Found in file includes/class-friend-user.php at line 441 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 34693. Found in file includes/class-friends-messages.php at line 227 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9571. Found in file includes/class-friend-user.php at line 770 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 11371. Found in file includes/class-friends-admin.php at line 105 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 16385. Found in file includes/class-friends-admin.php at line 1034 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 34656. Found in file includes/class-friends-messages.php at line 219 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 16281. Found in file includes/class-friends-admin.php at line 1019 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 13365. Found in file includes/class-friends-admin.php at line 469 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 8200. Found in file includes/class-friend-user.php at line 422 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 13014. Found in file includes/class-friends-admin.php at line 388 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 6336. Found in file includes/class-friend-user-feed.php at line 495 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 15852. Found in file includes/class-friends-admin.php at line 942 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 15949. Found in file includes/class-friends-admin.php at line 955 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 15932. Found in file includes/class-friends-admin.php at line 953 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 42526. Found in file includes/class-friends-rest.php at line 415 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 41760. Found in file includes/class-friends-rest.php at line 218 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 15899. Found in file includes/class-friends-admin.php at line 947 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 46540. Found in file includes/class-friends.php at line 934 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 44303. Found in file includes/class-friends.php at line 343 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 29724. Found in file includes/class-friends-feed.php at line 986 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 44292. Found in file includes/class-friends.php at line 341 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 14358. Found in file includes/class-friends-admin.php at line 672 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 41772. Found in file includes/class-friends-rest.php at line 219 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 19193. Found in file includes/class-friends-admin.php at line 1623 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 14392. Found in file includes/class-friends-admin.php at line 675 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 8458. Found in file includes/class-friend-user.php at line 496 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 7110. Found in file includes/class-friend-user.php at line 95 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 8547. Found in file includes/class-friend-user.php at line 506 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 8525. Found in file includes/class-friend-user.php at line 502 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 6223. Found in file includes/class-friend-user-feed.php at line 464 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9658. Found in file includes/class-friend-user.php at line 810 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9010. Found in file includes/class-friend-user.php at line 626 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9626. Found in file includes/class-friend-user.php at line 798 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 16003. Found in file includes/class-friends-admin.php at line 963 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 13740. Found in file includes/class-friends-admin.php at line 538 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 14863. Found in file includes/class-friends-admin.php at line 773 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 14415. Found in file includes/class-friends-admin.php at line 676 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 16333. Found in file includes/class-friends-admin.php at line 1026 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 13752. Found in file includes/class-friends-admin.php at line 540 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 19231. Found in file includes/class-friends-admin.php at line 1628 

[Art.15, Right to access] Data access is NONE_BUT_NOT_REQUIRED 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['access', 'deletion', 'encryption', 'third_party'] 

[main] Is deletion in violation? True 

[main] Is access in violation? False 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? False 


###########
### Q&A ###
###########

1. Why is my plugin in violation against GDPR?

GDPR (https://gdpr-info.eu/) aims to give citizens in the European Union (EU) control over their personal data. If a website collects or store user data, it is required to provide users functionalities to control their data, such as ones to erase or export their data. While a plugin do not directly interact with users, it may provide functionalities that collect or store personal data, which would make websites that deploy the plugin in violation against GDPR if the plugin does not provide corresponding functionalities to allow users control their personal data. Therefore, plugin developers are responsible to provide functions to manage the personal data they handle in accordance with GDPR. We list requirements by specific GDPR articles relevant to your plugin below.


[Art. 13, Information to be provided where personal data are collected from the data subject] If a plugin collects or handles personal data, it needs to provide privacy policy texts that explain what personal data is being collected and for what purpose. The texts are meant to be added to the privacy policy of the websites that deploy the plugin. 


            
[Art.17, Right to erasure] If a plugin stores personal data in a custom database they create or manage, or through Wordpress's native storage functions (e.g., update_user_meta), it needs to provide methods for users to erase the data upon request. Note that deleting data for all users upon uninstallation does not satisfy the requirement. 


            
        

2. How do I make my plugin compliant?

Please refer to the fix report below to see how you can make your plugin comply with GDPR.

        
