Timeout in resolving values
Timeout in running neo4j query
Running Main.py on ppv-live-webcams

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:10.151896.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:04.275721.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 4 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.482207.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 9 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:01.768436.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 21304 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:04.219834.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 389 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:02.564317.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.068180.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 5620 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:09:00.966769.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 96511
Added 69185 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 588917
Added 492406 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:18.708112.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
Added 62 AST_HTML nodes and 62 PARENT_OF edges.
Added 57 AST_HTML nodes and 57 PARENT_OF edges.
Added 279 AST_HTML nodes and 279 PARENT_OF edges.
Added 59 AST_HTML nodes and 59 PARENT_OF edges.
Added 9752 AST_HTML nodes and 9752 PARENT_OF edges.
Added 24 AST_HTML nodes and 24 PARENT_OF edges.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:02.851240.

1000 HTML Nodes Created
2000 HTML Nodes Created
3000 HTML Nodes Created
4000 HTML Nodes Created
5000 HTML Nodes Created
6000 HTML Nodes Created
7000 HTML Nodes Created
8000 HTML Nodes Created
9000 HTML Nodes Created
10000 HTML Nodes Created
10233 HTML Nodes Created
4 PHP_REACHES edges created
9 REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
14000 PHP_REACHES edges created
15000 PHP_REACHES edges created
16000 PHP_REACHES edges created
17000 PHP_REACHES edges created
18000 PHP_REACHES edges created
19000 PHP_REACHES edges created
20000 PHP_REACHES edges created
21000 PHP_REACHES edges created
21304 PHP_REACHES edges created
389 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
14000 PHP_REACHES edges created
15000 PHP_REACHES edges created
16000 PHP_REACHES edges created
17000 PHP_REACHES edges created
18000 PHP_REACHES edges created
19000 PHP_REACHES edges created
20000 PHP_REACHES edges created
21000 PHP_REACHES edges created
22000 PHP_REACHES edges created
23000 PHP_REACHES edges created
24000 PHP_REACHES edges created
25000 PHP_REACHES edges created
26000 PHP_REACHES edges created
27000 PHP_REACHES edges created
28000 PHP_REACHES edges created
29000 PHP_REACHES edges created
30000 PHP_REACHES edges created
31000 PHP_REACHES edges created
32000 PHP_REACHES edges created
33000 PHP_REACHES edges created
34000 PHP_REACHES edges created
35000 PHP_REACHES edges created
36000 PHP_REACHES edges created
37000 PHP_REACHES edges created
38000 PHP_REACHES edges created
39000 PHP_REACHES edges created
40000 PHP_REACHES edges created
41000 PHP_REACHES edges created
42000 PHP_REACHES edges created
43000 PHP_REACHES edges created
44000 PHP_REACHES edges created
45000 PHP_REACHES edges created
46000 PHP_REACHES edges created
47000 PHP_REACHES edges created
48000 PHP_REACHES edges created
49000 PHP_REACHES edges created
50000 PHP_REACHES edges created
51000 PHP_REACHES edges created
52000 PHP_REACHES edges created
53000 PHP_REACHES edges created
54000 PHP_REACHES edges created
55000 PHP_REACHES edges created
56000 PHP_REACHES edges created
57000 PHP_REACHES edges created
58000 PHP_REACHES edges created
59000 PHP_REACHES edges created
60000 PHP_REACHES edges created
61000 PHP_REACHES edges created
62000 PHP_REACHES edges created
63000 PHP_REACHES edges created
64000 PHP_REACHES edges created
65000 PHP_REACHES edges created
66000 PHP_REACHES edges created
67000 PHP_REACHES edges created
68000 PHP_REACHES edges created
69000 PHP_REACHES edges created
70000 PHP_REACHES edges created
71000 PHP_REACHES edges created
72000 PHP_REACHES edges created
73000 PHP_REACHES edges created
74000 PHP_REACHES edges created
74805 PHP_REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
14000 PHP_REACHES edges created
15000 PHP_REACHES edges created
16000 PHP_REACHES edges created
17000 PHP_REACHES edges created
18000 PHP_REACHES edges created
19000 PHP_REACHES edges created
20000 PHP_REACHES edges created
21000 PHP_REACHES edges created
22000 PHP_REACHES edges created
23000 PHP_REACHES edges created
24000 PHP_REACHES edges created
25000 PHP_REACHES edges created
26000 PHP_REACHES edges created
27000 PHP_REACHES edges created
28000 PHP_REACHES edges created
29000 PHP_REACHES edges created
30000 PHP_REACHES edges created
31000 PHP_REACHES edges created
32000 PHP_REACHES edges created
33000 PHP_REACHES edges created
34000 PHP_REACHES edges created
35000 PHP_REACHES edges created
36000 PHP_REACHES edges created
37000 PHP_REACHES edges created
38000 PHP_REACHES edges created
39000 PHP_REACHES edges created
40000 PHP_REACHES edges created
41000 PHP_REACHES edges created
42000 PHP_REACHES edges created
43000 PHP_REACHES edges created
44000 PHP_REACHES edges created
45000 PHP_REACHES edges created
46000 PHP_REACHES edges created
47000 PHP_REACHES edges created
48000 PHP_REACHES edges created
49000 PHP_REACHES edges created
50000 PHP_REACHES edges created
51000 PHP_REACHES edges created
52000 PHP_REACHES edges created
53000 PHP_REACHES edges created
54000 PHP_REACHES edges created
55000 PHP_REACHES edges created
56000 PHP_REACHES edges created
57000 PHP_REACHES edges created
58000 PHP_REACHES edges created
59000 PHP_REACHES edges created
60000 PHP_REACHES edges created
61000 PHP_REACHES edges created
62000 PHP_REACHES edges created
63000 PHP_REACHES edges created
64000 PHP_REACHES edges created
65000 PHP_REACHES edges created
66000 PHP_REACHES edges created
67000 PHP_REACHES edges created
68000 PHP_REACHES edges created
69000 PHP_REACHES edges created
70000 PHP_REACHES edges created
71000 PHP_REACHES edges created
72000 PHP_REACHES edges created
73000 PHP_REACHES edges created
74000 PHP_REACHES edges created
75000 PHP_REACHES edges created
76000 PHP_REACHES edges created
77000 PHP_REACHES edges created
78000 PHP_REACHES edges created
79000 PHP_REACHES edges created
80000 PHP_REACHES edges created
81000 PHP_REACHES edges created
82000 PHP_REACHES edges created
83000 PHP_REACHES edges created
84000 PHP_REACHES edges created
85000 PHP_REACHES edges created
86000 PHP_REACHES edges created
87000 PHP_REACHES edges created
88000 PHP_REACHES edges created
89000 PHP_REACHES edges created
90000 PHP_REACHES edges created
91000 PHP_REACHES edges created
92000 PHP_REACHES edges created
93000 PHP_REACHES edges created
94000 PHP_REACHES edges created
95000 PHP_REACHES edges created
96000 PHP_REACHES edges created
97000 PHP_REACHES edges created
98000 PHP_REACHES edges created
99000 PHP_REACHES edges created
100000 PHP_REACHES edges created
101000 PHP_REACHES edges created
102000 PHP_REACHES edges created
103000 PHP_REACHES edges created
104000 PHP_REACHES edges created
105000 PHP_REACHES edges created
106000 PHP_REACHES edges created
107000 PHP_REACHES edges created
108000 PHP_REACHES edges created
109000 PHP_REACHES edges created
110000 PHP_REACHES edges created
111000 PHP_REACHES edges created
112000 PHP_REACHES edges created
113000 PHP_REACHES edges created
114000 PHP_REACHES edges created
115000 PHP_REACHES edges created
116000 PHP_REACHES edges created
117000 PHP_REACHES edges created
118000 PHP_REACHES edges created
119000 PHP_REACHES edges created
120000 PHP_REACHES edges created
121000 PHP_REACHES edges created
122000 PHP_REACHES edges created
123000 PHP_REACHES edges created
124000 PHP_REACHES edges created
125000 PHP_REACHES edges created
126000 PHP_REACHES edges created
127000 PHP_REACHES edges created
128000 PHP_REACHES edges created
129000 PHP_REACHES edges created
130000 PHP_REACHES edges created
131000 PHP_REACHES edges created
132000 PHP_REACHES edges created
133000 PHP_REACHES edges created
134000 PHP_REACHES edges created
135000 PHP_REACHES edges created
136000 PHP_REACHES edges created
137000 PHP_REACHES edges created
138000 PHP_REACHES edges created
139000 PHP_REACHES edges created
140000 PHP_REACHES edges created
141000 PHP_REACHES edges created
142000 PHP_REACHES edges created
143000 PHP_REACHES edges created
144000 PHP_REACHES edges created
145000 PHP_REACHES edges created
146000 PHP_REACHES edges created
147000 PHP_REACHES edges created
148000 PHP_REACHES edges created
149000 PHP_REACHES edges created
150000 PHP_REACHES edges created
151000 PHP_REACHES edges created
152000 PHP_REACHES edges created
153000 PHP_REACHES edges created
154000 PHP_REACHES edges created
155000 PHP_REACHES edges created
156000 PHP_REACHES edges created
157000 PHP_REACHES edges created
158000 PHP_REACHES edges created
159000 PHP_REACHES edges created
160000 PHP_REACHES edges created
161000 PHP_REACHES edges created
162000 PHP_REACHES edges created
163000 PHP_REACHES edges created
164000 PHP_REACHES edges created
165000 PHP_REACHES edges created
166000 PHP_REACHES edges created
167000 PHP_REACHES edges created
168000 PHP_REACHES edges created
169000 PHP_REACHES edges created
170000 PHP_REACHES edges created
171000 PHP_REACHES edges created
172000 PHP_REACHES edges created
173000 PHP_REACHES edges created
174000 PHP_REACHES edges created
175000 PHP_REACHES edges created
176000 PHP_REACHES edges created
177000 PHP_REACHES edges created
178000 PHP_REACHES edges created
179000 PHP_REACHES edges created
180000 PHP_REACHES edges created
181000 PHP_REACHES edges created
182000 PHP_REACHES edges created
183000 PHP_REACHES edges created
184000 PHP_REACHES edges created
185000 PHP_REACHES edges created
186000 PHP_REACHES edges created
187000 PHP_REACHES edges created
188000 PHP_REACHES edges created
189000 PHP_REACHES edges created
190000 PHP_REACHES edges created
191000 PHP_REACHES edges created
192000 PHP_REACHES edges created
193000 PHP_REACHES edges created
194000 PHP_REACHES edges created
195000 PHP_REACHES edges created
196000 PHP_REACHES edges created
197000 PHP_REACHES edges created
198000 PHP_REACHES edges created
199000 PHP_REACHES edges created
200000 PHP_REACHES edges created
201000 PHP_REACHES edges created
202000 PHP_REACHES edges created
203000 PHP_REACHES edges created
204000 PHP_REACHES edges created
205000 PHP_REACHES edges created
206000 PHP_REACHES edges created
207000 PHP_REACHES edges created
208000 PHP_REACHES edges created
209000 PHP_REACHES edges created
210000 PHP_REACHES edges created
211000 PHP_REACHES edges created
212000 PHP_REACHES edges created
213000 PHP_REACHES edges created
214000 PHP_REACHES edges created
215000 PHP_REACHES edges created
216000 PHP_REACHES edges created
217000 PHP_REACHES edges created
218000 PHP_REACHES edges created
219000 PHP_REACHES edges created
220000 PHP_REACHES edges created
221000 PHP_REACHES edges created
222000 PHP_REACHES edges created
223000 PHP_REACHES edges created
224000 PHP_REACHES edges created
225000 PHP_REACHES edges created
226000 PHP_REACHES edges created
227000 PHP_REACHES edges created
228000 PHP_REACHES edges created
229000 PHP_REACHES edges created
230000 PHP_REACHES edges created
231000 PHP_REACHES edges created
232000 PHP_REACHES edges created
233000 PHP_REACHES edges created
234000 PHP_REACHES edges created
235000 PHP_REACHES edges created
236000 PHP_REACHES edges created
237000 PHP_REACHES edges created
238000 PHP_REACHES edges created
239000 PHP_REACHES edges created
240000 PHP_REACHES edges created
241000 PHP_REACHES edges created
242000 PHP_REACHES edges created
243000 PHP_REACHES edges created
244000 PHP_REACHES edges created
245000 PHP_REACHES edges created
246000 PHP_REACHES edges created
247000 PHP_REACHES edges created
248000 PHP_REACHES edges created
249000 PHP_REACHES edges created
250000 PHP_REACHES edges created
251000 PHP_REACHES edges created
252000 PHP_REACHES edges created
253000 PHP_REACHES edges created
254000 PHP_REACHES edges created
255000 PHP_REACHES edges created
256000 PHP_REACHES edges created
257000 PHP_REACHES edges created
258000 PHP_REACHES edges created
259000 PHP_REACHES edges created
260000 PHP_REACHES edges created
261000 PHP_REACHES edges created
262000 PHP_REACHES edges created
263000 PHP_REACHES edges created
264000 PHP_REACHES edges created
265000 PHP_REACHES edges created
266000 PHP_REACHES edges created
267000 PHP_REACHES edges created
268000 PHP_REACHES edges created
269000 PHP_REACHES edges created
270000 PHP_REACHES edges created
271000 PHP_REACHES edges created
272000 PHP_REACHES edges created
273000 PHP_REACHES edges created
274000 PHP_REACHES edges created
275000 PHP_REACHES edges created
276000 PHP_REACHES edges created
277000 PHP_REACHES edges created
278000 PHP_REACHES edges created
279000 PHP_REACHES edges created
280000 PHP_REACHES edges created
281000 PHP_REACHES edges created
282000 PHP_REACHES edges created
283000 PHP_REACHES edges created
284000 PHP_REACHES edges created
285000 PHP_REACHES edges created
286000 PHP_REACHES edges created
287000 PHP_REACHES edges created
288000 PHP_REACHES edges created
289000 PHP_REACHES edges created
290000 PHP_REACHES edges created
291000 PHP_REACHES edges created
292000 PHP_REACHES edges created
293000 PHP_REACHES edges created
294000 PHP_REACHES edges created
295000 PHP_REACHES edges created
296000 PHP_REACHES edges created
297000 PHP_REACHES edges created
298000 PHP_REACHES edges created
299000 PHP_REACHES edges created
300000 PHP_REACHES edges created
301000 PHP_REACHES edges created
302000 PHP_REACHES edges created
303000 PHP_REACHES edges created
304000 PHP_REACHES edges created
305000 PHP_REACHES edges created
306000 PHP_REACHES edges created
307000 PHP_REACHES edges created
308000 PHP_REACHES edges created
309000 PHP_REACHES edges created
310000 PHP_REACHES edges created
311000 PHP_REACHES edges created
312000 PHP_REACHES edges created
313000 PHP_REACHES edges created
314000 PHP_REACHES edges created
315000 PHP_REACHES edges created
316000 PHP_REACHES edges created
317000 PHP_REACHES edges created
318000 PHP_REACHES edges created
319000 PHP_REACHES edges created
320000 PHP_REACHES edges created
321000 PHP_REACHES edges created
322000 PHP_REACHES edges created
323000 PHP_REACHES edges created
324000 PHP_REACHES edges created
325000 PHP_REACHES edges created
326000 PHP_REACHES edges created
327000 PHP_REACHES edges created
328000 PHP_REACHES edges created
329000 PHP_REACHES edges created
330000 PHP_REACHES edges created
331000 PHP_REACHES edges created
332000 PHP_REACHES edges created
333000 PHP_REACHES edges created
334000 PHP_REACHES edges created
335000 PHP_REACHES edges created
336000 PHP_REACHES edges created
337000 PHP_REACHES edges created
338000 PHP_REACHES edges created
339000 PHP_REACHES edges created
340000 PHP_REACHES edges created
341000 PHP_REACHES edges created
342000 PHP_REACHES edges created
343000 PHP_REACHES edges created
344000 PHP_REACHES edges created
345000 PHP_REACHES edges created
346000 PHP_REACHES edges created
347000 PHP_REACHES edges created
348000 PHP_REACHES edges created
349000 PHP_REACHES edges created
350000 PHP_REACHES edges created
351000 PHP_REACHES edges created
352000 PHP_REACHES edges created
353000 PHP_REACHES edges created
354000 PHP_REACHES edges created
355000 PHP_REACHES edges created
356000 PHP_REACHES edges created
357000 PHP_REACHES edges created
358000 PHP_REACHES edges created
359000 PHP_REACHES edges created
360000 PHP_REACHES edges created
361000 PHP_REACHES edges created
362000 PHP_REACHES edges created
363000 PHP_REACHES edges created
364000 PHP_REACHES edges created
365000 PHP_REACHES edges created
366000 PHP_REACHES edges created
367000 PHP_REACHES edges created
368000 PHP_REACHES edges created
369000 PHP_REACHES edges created
370000 PHP_REACHES edges created
371000 PHP_REACHES edges created
372000 PHP_REACHES edges created
373000 PHP_REACHES edges created
374000 PHP_REACHES edges created
375000 PHP_REACHES edges created
376000 PHP_REACHES edges created
377000 PHP_REACHES edges created
378000 PHP_REACHES edges created
379000 PHP_REACHES edges created
380000 PHP_REACHES edges created
381000 PHP_REACHES edges created
382000 PHP_REACHES edges created
383000 PHP_REACHES edges created
384000 PHP_REACHES edges created
385000 PHP_REACHES edges created
386000 PHP_REACHES edges created
387000 PHP_REACHES edges created
388000 PHP_REACHES edges created
389000 PHP_REACHES edges created
390000 PHP_REACHES edges created
391000 PHP_REACHES edges created
392000 PHP_REACHES edges created
393000 PHP_REACHES edges created
394000 PHP_REACHES edges created
395000 PHP_REACHES edges created
396000 PHP_REACHES edges created
397000 PHP_REACHES edges created
398000 PHP_REACHES edges created
399000 PHP_REACHES edges created
400000 PHP_REACHES edges created
401000 PHP_REACHES edges created
402000 PHP_REACHES edges created
403000 PHP_REACHES edges created
404000 PHP_REACHES edges created
405000 PHP_REACHES edges created
406000 PHP_REACHES edges created
407000 PHP_REACHES edges created
408000 PHP_REACHES edges created
409000 PHP_REACHES edges created
410000 PHP_REACHES edges created
411000 PHP_REACHES edges created
412000 PHP_REACHES edges created
413000 PHP_REACHES edges created
414000 PHP_REACHES edges created
415000 PHP_REACHES edges created
416000 PHP_REACHES edges created
417000 PHP_REACHES edges created
418000 PHP_REACHES edges created
419000 PHP_REACHES edges created
420000 PHP_REACHES edges created
421000 PHP_REACHES edges created
422000 PHP_REACHES edges created
423000 PHP_REACHES edges created
424000 PHP_REACHES edges created
425000 PHP_REACHES edges created
426000 PHP_REACHES edges created
427000 PHP_REACHES edges created
428000 PHP_REACHES edges created
429000 PHP_REACHES edges created
430000 PHP_REACHES edges created
431000 PHP_REACHES edges created
432000 PHP_REACHES edges created
433000 PHP_REACHES edges created
434000 PHP_REACHES edges created
435000 PHP_REACHES edges created
436000 PHP_REACHES edges created
437000 PHP_REACHES edges created
438000 PHP_REACHES edges created
439000 PHP_REACHES edges created
440000 PHP_REACHES edges created
441000 PHP_REACHES edges created
442000 PHP_REACHES edges created
443000 PHP_REACHES edges created
444000 PHP_REACHES edges created
445000 PHP_REACHES edges created
446000 PHP_REACHES edges created
447000 PHP_REACHES edges created
448000 PHP_REACHES edges created
449000 PHP_REACHES edges created
450000 PHP_REACHES edges created
451000 PHP_REACHES edges created
452000 PHP_REACHES edges created
453000 PHP_REACHES edges created
454000 PHP_REACHES edges created
455000 PHP_REACHES edges created
456000 PHP_REACHES edges created
457000 PHP_REACHES edges created
458000 PHP_REACHES edges created
459000 PHP_REACHES edges created
460000 PHP_REACHES edges created
461000 PHP_REACHES edges created
462000 PHP_REACHES edges created
463000 PHP_REACHES edges created
464000 PHP_REACHES edges created
465000 PHP_REACHES edges created
466000 PHP_REACHES edges created
467000 PHP_REACHES edges created
468000 PHP_REACHES edges created
469000 PHP_REACHES edges created
470000 PHP_REACHES edges created
471000 PHP_REACHES edges created
472000 PHP_REACHES edges created
473000 PHP_REACHES edges created
474000 PHP_REACHES edges created
475000 PHP_REACHES edges created
476000 PHP_REACHES edges created
477000 PHP_REACHES edges created
478000 PHP_REACHES edges created
479000 PHP_REACHES edges created
480000 PHP_REACHES edges created
481000 PHP_REACHES edges created
482000 PHP_REACHES edges created
483000 PHP_REACHES edges created
484000 PHP_REACHES edges created
485000 PHP_REACHES edges created
486000 PHP_REACHES edges created
487000 PHP_REACHES edges created
488000 PHP_REACHES edges created
489000 PHP_REACHES edges created
490000 PHP_REACHES edges created
491000 PHP_REACHES edges created
492000 PHP_REACHES edges created
492406 PHP_REACHES edges created
1 PARENT_OF edges created
61 PARENT_OF edges created
1 PARENT_OF edges created
56 PARENT_OF edges created
1 PARENT_OF edges created
278 PARENT_OF edges created
1 PARENT_OF edges created
58 PARENT_OF edges created
1 PARENT_OF edges created
1000 PARENT_OF edges created
2000 PARENT_OF edges created
3000 PARENT_OF edges created
4000 PARENT_OF edges created
5000 PARENT_OF edges created
6000 PARENT_OF edges created
7000 PARENT_OF edges created
8000 PARENT_OF edges created
9000 PARENT_OF edges created
9751 PARENT_OF edges created
1 PARENT_OF edges created
23 PARENT_OF edges created
599150 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 31109 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:02.236191.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:01:27.624352.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 784 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:53.509668.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 618 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.172429.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:30.499964.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:15.019734.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.063032.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 93 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:02.703912.

1000 PHP_REACHES edges created
1402 PHP_REACHES edges created
1402 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 784 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.137823.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
135 SQL operations to process.
DROP TABLE IF EXISTS `$wpdbvw_vmls_sessions`;
		CREATE TABLE `$wpdbvw_vmls_sessions` (
		  `id` int(11) NOT NULL auto_increment,
		  `session` varchar(64) NOT NULL,
		  `username` varchar(64) NOT NULL,
		  `uid` int(11) NOT NULL,
		  `broadcaster` tinyint(4) NOT NULL,
		  `room` varchar(64) NOT NULL,
		  `rid` int(11) NOT NULL,
		  `rsdate` int(11) NOT NULL,
		  `redate` int(11) NOT NULL,
		  `roptions` text NOT NULL,
		  `meta` text NOT NULL,
		  `rmode` tinyint(4) NOT NULL,
		  `message` text NOT NULL,
		  `ip` text NOT NULL,
		  `sdate` int(11) NOT NULL,
		  `edate` int(11) NOT NULL,
		  `status` tinyint(4) NOT NULL,
		  `type` tinyint(4) NOT NULL,
		  PRIMARY KEY  (`id`),
		  KEY `status` (`status`),
		  KEY `broadcaster` (`broadcaster`),
		  KEY `type` (`type`),
		  KEY `rid` (`rid`),
		  KEY `uid` (`uid`),
		  KEY `rmode` (`rmode`),
		  KEY `rsdate` (`rsdate`),
		  KEY `redate` (`redate`),
		  KEY `sdate` (`sdate`),
		  KEY `edate` (`edate`),
		  KEY `room` (`room`)
		) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE utf8mb4_unicode_ci COMMENT='VideoWhisper: Sessions 2015-2019@videowhisper.com' AUTO_INCREMENT=1 ;

		DROP TABLE IF EXISTS `$wpdbvw_vmls_private`;
		CREATE TABLE `$wpdbvw_vmls_private` (
		  `id` int(11) NOT NULL auto_increment,
  		  `room` varchar(64) NOT NULL,
		  `performer` varchar(64) NOT NULL,
		  `client` varchar(64) NOT NULL,
		  `pid` int(11) NOT NULL,
		  `cid` int(11) NOT NULL,
		  `rid` int(11) NOT NULL,
		  `psdate` int(11) NOT NULL,
		  `pedate` int(11) NOT NULL,
		  `csdate` int(11) NOT NULL,
		  `cedate` int(11) NOT NULL,
		  `status` tinyint(4) NOT NULL,
		  `call` tinyint(4) NOT NULL,
		  `meta` text NOT NULL,
		  PRIMARY KEY  (`id`),
		  KEY `room` (`room`),
		  KEY `performer` (`performer`),
		  KEY `client` (`client`),
		  KEY `rid` (`rid`),
		  KEY `pid` (`pid`),
		  KEY `psdate` (`psdate`),
		  KEY `pedate` (`pedate`),
		  KEY `csdate` (`csdate`),
		  KEY `cedate` (`cedate`),
		  KEY `call` (`call`),
		  KEY `status` (`status`)
		) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE utf8mb4_unicode_ci COMMENT='VideosWhisper: Private Sessions 2015-2019@videowhisper.com' AUTO_INCREMENT=1 ;

		DROP TABLE IF EXISTS `$wpdbvw_vmls_chatlog`;
		CREATE TABLE `$wpdbvw_vmls_chatlog` (
		  `id` int(11) unsigned NOT NULL auto_increment,
		  `username` varchar(64) NOT NULL,
		  `user_id` int(11) unsigned NOT NULL,
		  `room` varchar(64) NOT NULL,
		  `room_id` int(11) unsigned NOT NULL,
		  `message` text NOT NULL,
		  `mdate` int(11) NOT NULL,
		  `type` tinyint(4) NOT NULL,
		  `private_uid` int(11) unsigned NOT NULL,
		  `meta` TEXT,
		  PRIMARY KEY  (`id`),
		  KEY `room` (`room`),
		  KEY `mdate` (`mdate`),
		  KEY `type` (`type`),
		  KEY `private_uid` (`private_uid`),
		  KEY `user_id` (`user_id`),
		  KEY `room_id` (`room_id`)
		) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE utf8mb4_unicode_ci COMMENT='VideoWhisper: Chat Logs 2018-2019@videowhisper.com' AUTO_INCREMENT=1;

		DROP TABLE IF EXISTS `$wpdbvw_vmls_actions`;
		CREATE TABLE `$wpdbvw_vmls_actions` (
		  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
		  `user_id` int(11) unsigned NOT NULL,
		  `room_id` int(11) unsigned NOT NULL,
		  `target_id` int(11) unsigned NOT NULL,
		  `action` varchar(64) NOT NULL,
		  `mdate` int(11) NOT NULL,
		  `meta` TEXT,
		  `status` tinyint(4) NOT NULL,
		  `answer` tinyint(4) NOT NULL,
		  PRIMARY KEY  (`id`),
		  KEY `mdate` (`mdate`),
		  KEY `user_id` (`user_id`),
		  KEY `room_id` (`room_id`),
		  KEY `target_id` (`target_id`),
		  KEY `action` (`action`),
		  KEY `status` (`status`),
		  KEY `answer` (`status`)
		) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE utf8mb4_unicode_ci COMMENT='VideoWhisper: Actions 2019@videowhisper.com' AUTO_INCREMENT=1;

		DROP TABLE IF EXISTS `$wpdbvw_vmls_messages`;
		CREATE TABLE `$wpdbvw_vmls_messages` (
  `id` int(20) NOT NULL AUTO_INCREMENT,
  `sender_id` int(20) NOT NULL,
  `webcam_id` int(20) NOT NULL,
  `reply_id` int(20) NOT NULL,
  `sdate` int(11) NOT NULL,
  `ldate` int(11) NOT NULL,
  `meta` TEXT,
  `message` text COLLATE utf8mb4_unicode_ci NOT NULL,
  PRIMARY KEY (`id`),
  KEY `sender_id` (`sender_id`),
  KEY `webcam_id` (`webcam_id`),
  KEY `reply_id` (`reply_id`),
  KEY `cdate` (`sdate`),
  KEY `ldate` (`ldate`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='VideoWhisper:  Webcam Messages 2019@videowhisper.com';

SQL command (DROP TABLE IF EXISTS `$wpdbvw_vmls_sessions`; CREATE TABLE `$wpdbvw_vmls_sessions` ( `id` int(11) NOT NULL auto_increment, `session` varchar(64) NOT NULL, `username` varchar(64) NOT NULL, `uid` int(11) NOT NULL, `broadcaster` tinyint(4) NOT NULL, `room` varchar(64) NOT NULL, `rid` int(11) NOT NULL, `rsdate` int(11) NOT NULL, `redate` int(11) NOT NULL, `roptions` text NOT NULL, `meta` text NOT NULL, `rmode` tinyint(4) NOT NULL, `message` text NOT NULL, `ip` text NOT NULL, `sdate` int(11) NOT NULL, `edate` int(11) NOT NULL, `status` tinyint(4) NOT NULL, `type` tinyint(4) NOT NULL, PRIMARY KEY (`id`), KEY `status` (`status`), KEY `broadcaster` (`broadcaster`), KEY `type` (`type`), KEY `rid` (`rid`), KEY `uid` (`uid`), KEY `rmode` (`rmode`), KEY `rsdate` (`rsdate`), KEY `redate` (`redate`), KEY `sdate` (`sdate`), KEY `edate` (`edate`), KEY `room` (`room`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE utf8mb4_unicode_ci COMMENT='VideoWhisper: Sessions 2015-2019@videowhisper.com' AUTO_INCREMENT=1 ; DROP TABLE IF EXISTS `$wpdbvw_vmls_private`; CREATE TABLE `$wpdbvw_vmls_private` ( `id` int(11) NOT NULL auto_increment, `room` varchar(64) NOT NULL, `performer` varchar(64) NOT NULL, `client` varchar(64) NOT NULL, `pid` int(11) NOT NULL, `cid` int(11) NOT NULL, `rid` int(11) NOT NULL, `psdate` int(11) NOT NULL, `pedate` int(11) NOT NULL, `csdate` int(11) NOT NULL, `cedate` int(11) NOT NULL, `status` tinyint(4) NOT NULL, `call` tinyint(4) NOT NULL, `meta` text NOT NULL, PRIMARY KEY (`id`), KEY `room` (`room`), KEY `performer` (`performer`), KEY `client` (`client`), KEY `rid` (`rid`), KEY `pid` (`pid`), KEY `psdate` (`psdate`), KEY `pedate` (`pedate`), KEY `csdate` (`csdate`), KEY `cedate` (`cedate`), KEY `call` (`call`), KEY `status` (`status`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE utf8mb4_unicode_ci COMMENT='VideosWhisper: Private Sessions 2015-2019@videowhisper.com' AUTO_INCREMENT=1 ; DROP TABLE IF EXISTS `$wpdbvw_vmls_chatlog`; CREATE TABLE `$wpdbvw_vmls_chatlog` ( `id` int(11) unsigned NOT NULL auto_increment, `username` varchar(64) NOT NULL, `user_id` int(11) unsigned NOT NULL, `room` varchar(64) NOT NULL, `room_id` int(11) unsigned NOT NULL, `message` text NOT NULL, `mdate` int(11) NOT NULL, `type` tinyint(4) NOT NULL, `private_uid` int(11) unsigned NOT NULL, `meta` TEXT, PRIMARY KEY (`id`), KEY `room` (`room`), KEY `mdate` (`mdate`), KEY `type` (`type`), KEY `private_uid` (`private_uid`), KEY `user_id` (`user_id`), KEY `room_id` (`room_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE utf8mb4_unicode_ci COMMENT='VideoWhisper: Chat Logs 2018-2019@videowhisper.com' AUTO_INCREMENT=1; DROP TABLE IF EXISTS `$wpdbvw_vmls_actions`; CREATE TABLE `$wpdbvw_vmls_actions` ( `id` int(11) unsigned NOT NULL AUTO_INCREMENT, `user_id` int(11) unsigned NOT NULL, `room_id` int(11) unsigned NOT NULL, `target_id` int(11) unsigned NOT NULL, `action` varchar(64) NOT NULL, `mdate` int(11) NOT NULL, `meta` TEXT, `status` tinyint(4) NOT NULL, `answer` tinyint(4) NOT NULL, PRIMARY KEY (`id`), KEY `mdate` (`mdate`), KEY `user_id` (`user_id`), KEY `room_id` (`room_id`), KEY `target_id` (`target_id`), KEY `action` (`action`), KEY `status` (`status`), KEY `answer` (`status`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE utf8mb4_unicode_ci COMMENT='VideoWhisper: Actions 2019@videowhisper.com' AUTO_INCREMENT=1; DROP TABLE IF EXISTS `$wpdbvw_vmls_messages`; CREATE TABLE `$wpdbvw_vmls_messages` ( `id` int(20) NOT NULL AUTO_INCREMENT, `sender_id` int(20) NOT NULL, `webcam_id` int(20) NOT NULL, `reply_id` int(20) NOT NULL, `sdate` int(11) NOT NULL, `ldate` int(11) NOT NULL, `meta` TEXT, `message` text COLLATE utf8mb4_unicode_ci NOT NULL, PRIMARY KEY (`id`), KEY `sender_id` (`sender_id`), KEY `webcam_id` (`webcam_id`), KEY `reply_id` (`reply_id`), KEY `cdate` (`sdate`), KEY `ldate` (`ldate`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='VideoWhisper: Webcam Messages 2019@videowhisper.com'; ) cannot be parsed correct.
escapeshellcmd($cmd)
SQL command (escapeshellcmd($cmd)) cannot be parsed correct.
escapeshellcmd($cmd)
SQL command (escapeshellcmd($cmd)) cannot be parsed correct.
escapeshellcmd($cmd)
SQL command (escapeshellcmd($cmd)) cannot be parsed correct.
exec
SQL command (exec) cannot be parsed correct.
echo EXEC
SQL command (echo EXEC) cannot be parsed correct.
escapeshellcmd($cmd)
SQL command (escapeshellcmd($cmd)) cannot be parsed correct.
escapeshellcmd($cmd)
SQL command (escapeshellcmd($cmd)) cannot be parsed correct.
exec
SQL command (exec) cannot be parsed correct.
echo EXEC
SQL command (echo EXEC) cannot be parsed correct.
escapeshellcmd($cmd)
SQL command (escapeshellcmd($cmd)) cannot be parsed correct.
escapeshellcmd($cmd)
SQL command (escapeshellcmd($cmd)) cannot be parsed correct.
kill -KILL escapeshellarg(sanitize_text_field($columns[1]))
SQL command (kill -KILL escapeshellarg(sanitize_text_field($columns[1]))) cannot be parsed correct.
escapeshellcmd($cmd)
SQL command (escapeshellcmd($cmd)) cannot be parsed correct.
escapeshellcmd($cmd)
SQL command (escapeshellcmd($cmd)) cannot be parsed correct.
escapeshellcmd($cmd)
SQL command (escapeshellcmd($cmd)) cannot be parsed correct.
escapeshellcmd($cmd)
SQL command (escapeshellcmd($cmd)) cannot be parsed correct.
escapeshellcmd($kcmd)
SQL command (escapeshellcmd($kcmd)) cannot be parsed correct.
escapeshellcmd($cmd)
SQL command (escapeshellcmd($cmd)) cannot be parsed correct.
escapeshellcmd($cmd)
SQL command (escapeshellcmd($cmd)) cannot be parsed correct.
escapeshellcmd($cmd)
SQL command (escapeshellcmd($cmd)) cannot be parsed correct.
escapeshellcmd($cmd)
SQL command (escapeshellcmd($cmd)) cannot be parsed correct.
escapeshellcmd($kcmd)
SQL command (escapeshellcmd($kcmd)) cannot be parsed correct.
escapeshellcmd($cmd)
SQL command (escapeshellcmd($cmd)) cannot be parsed correct.
escapeshellcmd($cmd)
SQL command (escapeshellcmd($cmd)) cannot be parsed correct.
escapeshellcmd($cmd)
SQL command (escapeshellcmd($cmd)) cannot be parsed correct.
escapeshellcmd($cmd)
SQL command (escapeshellcmd($cmd)) cannot be parsed correct.
escapeshellcmd($cmd)
SQL command (escapeshellcmd($cmd)) cannot be parsed correct.
escapeshellcmd($cmd)
SQL command (escapeshellcmd($cmd)) cannot be parsed correct.
timeout -s KILL 10 get_option("VWliveWebcamsOptions")_ffmpegPath -f image2 -vframes 1 get_option("VWliveWebcamsOptions")_uploadsPath/sanitize_file_name($wpdb->get_var("SELECT post_title  FROM "$wpdb->posts" WHERE ID = \'" . $postID . "\'")).jpg" -y -i "get_option("VWliveWebcamsOptions")_rtsp_server/$streamQuery" >get_option("VWliveWebcamsOptions")_uploadsPath/sanitize_file_name($wpdb->get_var("SELECT post_title  FROM "$wpdb->posts" WHERE ID = \'" . $postID . "\'")).jpg.txt &  echo $!;
SQL command (timeout -s KILL 10 get_option("VWliveWebcamsOptions")_ffmpegPath -f image2 -vframes 1 get_option("VWliveWebcamsOptions")_uploadsPath/sanitize_file_name($wpdb->get_var("SELECT post_title FROM "$wpdb->posts" WHERE ID = \'" . $postID . "\'")).jpg" -y -i "get_option("VWliveWebcamsOptions")_rtsp_server/$streamQuery" >get_option("VWliveWebcamsOptions")_uploadsPath/sanitize_file_name($wpdb->get_var("SELECT post_title FROM "$wpdb->posts" WHERE ID = \'" . $postID . "\'")).jpg.txt & echo $!;) cannot be parsed correct.
escapeshellcmd($cmd)
SQL command (escapeshellcmd($cmd)) cannot be parsed correct.
escapeshellcmd($kcmd)
SQL command (escapeshellcmd($kcmd)) cannot be parsed correct.
SELECT * FROM `$wpdbvw_vmls_sessions` where room='sanitize_file_name($_GET["room"])' and status='0' AND type < 5
SQL command (SELECT * FROM `$wpdbvw_vmls_sessions` where room='sanitize_file_name($_GET["room"])' and status='0' AND type < 5) cannot be parsed correct.
SELECT * FROM (SELECT * FROM `$wpdbvw_vmls_chatlog` WHERE room='sanitize_file_name($_GET["room"])' AND (type < 3 OR (type=3 AND user_id='$session' AND username='$session')) AND private_uid = '0' AND id > $lastID AND mdate > $session ORDER BY mdate DESC LIMIT 0,20) items ORDER BY mdate ASC
SQL command (SELECT * FROM (SELECT * FROM `$wpdbvw_vmls_chatlog` WHERE room='sanitize_file_name($_GET["room"])' AND (type < 3 OR (type=3 AND user_id='$session' AND username='$session')) AND private_uid = '0' AND id > $lastID AND mdate > $session ORDER BY mdate DESC LIMIT 0,20) items ORDER BY mdate ASC) cannot be parsed correct.
SELECT * FROM $wpdbvw_vmls_private WHERE (status=0 OR status=1) AND pedate < get_option("VWliveWebcamsOptions") AND cedate < get_option("VWliveWebcamsOptions") 
SQL command (SELECT * FROM $wpdbvw_vmls_private WHERE (status=0 OR status=1) AND pedate < get_option("VWliveWebcamsOptions") AND cedate < get_option("VWliveWebcamsOptions") ) cannot be parsed correct.
SELECT * FROM $wpdbvw_vmls_sessions WHERE (status=0 OR status=1) AND edate < get_option("VWliveWebcamsOptions") 
SQL command (SELECT * FROM $wpdbvw_vmls_sessions WHERE (status=0 OR status=1) AND edate < get_option("VWliveWebcamsOptions") ) cannot be parsed correct.
SELECT * FROM $wpdbvw_vmls_sessions WHERE rmode<>0 ORDER by edate DESC
SQL command (SELECT * FROM $wpdbvw_vmls_sessions WHERE rmode<>0 ORDER by edate DESC) cannot be parsed correct.
SELECT * FROM $wpdbvw_vmls_private  ORDER by cedate DESC
SQL command (SELECT * FROM $wpdbvw_vmls_private ORDER by cedate DESC) cannot be parsed correct.
SELECT DISTINCT(rid), edate FROM $wpdbvw_vmls_sessions WHERE uid = intval($VideoWhisper["userID"]) AND rid IN (implode(", ", array_keys($roomAccessed))) ORDER BY edate DESC
SQL command (SELECT DISTINCT(rid), edate FROM $wpdbvw_vmls_sessions WHERE uid = intval($VideoWhisper["userID"]) AND rid IN (implode(", ", array_keys($roomAccessed))) ORDER BY edate DESC) cannot be parsed correct.
SELECT * FROM $wpdbvw_vmls_messages WHERE webcam_id = $nextPost AND reply_id = $topicID  ORDER BY sdate DESC, id DESC LIMIT 0, 100
SQL command (SELECT * FROM $wpdbvw_vmls_messages WHERE webcam_id = $nextPost AND reply_id = $topicID ORDER BY sdate DESC, id DESC LIMIT 0, 100) cannot be parsed correct.
SELECT * FROM (SELECT * FROM `$wpdbvw_vmls_chatlog` WHERE room='get_post($roomID)_post_title' AND (type < 3 OR (type=3 AND user_id='intval($VideoWhisper["userID"])' AND username='sanitize_file_name($_COOKIE["htmlchat_username"])')) AND ( (private_uid = '$wpdb->get_row($sql)_user_id' AND user_id = 'intval($VideoWhisper["userID"])') OR (private_uid ='intval($VideoWhisper["userID"])' AND user_id = '$wpdb->get_row($sql)_target_id') ) AND mdate >= max($sdate, $lastMessage) AND mdate <= time() AND id > intval($_POST["lastMessageID"]) ORDER BY mdate DESC LIMIT 0,100) items ORDER BY mdate ASC
SQL command (SELECT * FROM (SELECT * FROM `$wpdbvw_vmls_chatlog` WHERE room='get_post($roomID)_post_title' AND (type < 3 OR (type=3 AND user_id='intval($VideoWhisper["userID"])' AND username='sanitize_file_name($_COOKIE["htmlchat_username"])')) AND ( (private_uid = '$wpdb->get_row($sql)_user_id' AND user_id = 'intval($VideoWhisper["userID"])') OR (private_uid ='intval($VideoWhisper["userID"])' AND user_id = '$wpdb->get_row($sql)_target_id') ) AND mdate >= max($sdate, $lastMessage) AND mdate <= time() AND id > intval($_POST["lastMessageID"]) ORDER BY mdate DESC LIMIT 0,100) items ORDER BY mdate ASC) cannot be parsed correct.
SELECT * FROM `$wpdbvw_vmls_sessions` WHERE rid='$nextPost_ID' AND status = 0 ORDER BY broadcaster DESC, username ASC
SQL command (SELECT * FROM `$wpdbvw_vmls_sessions` WHERE rid='$nextPost_ID' AND status = 0 ORDER BY broadcaster DESC, username ASC) cannot be parsed correct.
SELECT * FROM $wpdbvw_vmls_sessions WHERE rid='intval($atts["roomid"])' AND sdate > strtotime(date("Y-m-d", $t1) . " +1 " . $deltaDate) AND sdate < min(strtotime(date("Y-m-d", $t2) . " +1 " . $deltaDate), $endTime)
SQL command (SELECT * FROM $wpdbvw_vmls_sessions WHERE rid='intval($atts["roomid"])' AND sdate > strtotime(date("Y-m-d", $t1) . " +1 " . $deltaDate) AND sdate < min(strtotime(date("Y-m-d", $t2) . " +1 " . $deltaDate), $endTime)) cannot be parsed correct.
SELECT * FROM `$wpdbvw_vmls_actions` WHERE room_id='13' AND (target_id = 'intval($VideoWhisper["userID"])' OR target_id='0' AND status < 3) OR (user_id = 'intval($VideoWhisper["userID"])' AND status < 5) AND mdate <= time() ORDER BY mdate DESC LIMIT 0,100
SQL command (SELECT * FROM `$wpdbvw_vmls_actions` WHERE room_id='13' AND (target_id = 'intval($VideoWhisper["userID"])' OR target_id='0' AND status < 3) OR (user_id = 'intval($VideoWhisper["userID"])' AND status < 5) AND mdate <= time() ORDER BY mdate DESC LIMIT 0,100) cannot be parsed correct.
SELECT * FROM $wpdbvw_vmls_sessions WHERE rid='intval($atts["roomid"])' AND broadcaster=1 AND sdate > 2592000
SQL command (SELECT * FROM $wpdbvw_vmls_sessions WHERE rid='intval($atts["roomid"])' AND broadcaster=1 AND sdate > 2592000) cannot be parsed correct.
SELECT * FROM $wpdbvw_vmls_private WHERE rid='intval($atts["roomid"])' AND csdate > 2592000
SQL command (SELECT * FROM $wpdbvw_vmls_private WHERE rid='intval($atts["roomid"])' AND csdate > 2592000) cannot be parsed correct.
SELECT * FROM $wpdbvw_vmls_private WHERE rid='intval($atts["roomid"])' AND csdate > strtotime(date("Y-m-d", $t1) . " +1 " . $deltaDate) AND csdate < strtotime($startDate . " +1 " . $deltaDate)
SQL command (SELECT * FROM $wpdbvw_vmls_private WHERE rid='intval($atts["roomid"])' AND csdate > strtotime(date("Y-m-d", $t1) . " +1 " . $deltaDate) AND csdate < strtotime($startDate . " +1 " . $deltaDate)) cannot be parsed correct.
SELECT * FROM $wpdbvw_vmls_messages WHERE id=$id OR reply_id=$id ORDER BY sdate ASC, id DESC LIMIT 0, 100
SQL command (SELECT * FROM $wpdbvw_vmls_messages WHERE id=$id OR reply_id=$id ORDER BY sdate ASC, id DESC LIMIT 0, 100) cannot be parsed correct.
SELECT * FROM $wpdbvw_vmls_messages WHERE webcam_id = 0 AND reply_id = 0 ORDER BY sdate DESC, id DESC LIMIT 0, 100
SQL command (SELECT * FROM $wpdbvw_vmls_messages WHERE webcam_id = 0 AND reply_id = 0 ORDER BY sdate DESC, id DESC LIMIT 0, 100) cannot be parsed correct.
SELECT * FROM $wpdbvw_vmls_private WHERE rid = 0 AND `call` > 0 ORDER BY status ASC, id DESC LIMIT 0, 100
SQL command (SELECT * FROM $wpdbvw_vmls_private WHERE rid = 0 AND `call` > 0 ORDER BY status ASC, id DESC LIMIT 0, 100) cannot be parsed correct.
SELECT * FROM $wpdbvw_vmls_messages WHERE sender_id = get_current_user_id() AND webcam_id='intval($_GET["webcam_id"])' AND reply_id = 0 ORDER BY sdate DESC, id DESC LIMIT 0, 100
SQL command (SELECT * FROM $wpdbvw_vmls_messages WHERE sender_id = get_current_user_id() AND webcam_id='intval($_GET["webcam_id"])' AND reply_id = 0 ORDER BY sdate DESC, id DESC LIMIT 0, 100) cannot be parsed correct.
SELECT * FROM $wpdbvw_vmls_private where rid='' AND pid='$session_uid' AND cid='intval($streamQuery["privateUID"])' AND (status='0' ) ORDER BY status ASC, id DESC
SQL command (SELECT * FROM $wpdbvw_vmls_private where rid='' AND pid='$session_uid' AND cid='intval($streamQuery["privateUID"])' AND (status='0' ) ORDER BY status ASC, id DESC) cannot be parsed correct.
SELECT * FROM $wpdbvw_vmls_private where rid='' AND pid='$session_uid' AND cid='intval($streamQuery["privateUID"])' AND (status='0' ) ORDER BY status ASC, id DESC
SQL command (SELECT * FROM $wpdbvw_vmls_private where rid='' AND pid='$session_uid' AND cid='intval($streamQuery["privateUID"])' AND (status='0' ) ORDER BY status ASC, id DESC) cannot be parsed correct.
SELECT * FROM $wpdbvw_vmls_private where rid='' AND cid='$session_uid' AND pid='intval($streamQuery["privateUID"])' AND (status='0' OR status='1') ORDER BY status ASC, id DESC
SQL command (SELECT * FROM $wpdbvw_vmls_private where rid='' AND cid='$session_uid' AND pid='intval($streamQuery["privateUID"])' AND (status='0' OR status='1') ORDER BY status ASC, id DESC) cannot be parsed correct.
SELECT * FROM $wpdbvw_vmls_sessions WHERE id='$sessionID' AND uid='$userID' AND status=0 LIMIT 0,1
SQL command (SELECT * FROM $wpdbvw_vmls_sessions WHERE id='$sessionID' AND uid='$userID' AND status=0 LIMIT 0,1) cannot be parsed correct.
SELECT * FROM $wpdbvw_vmls_sessions WHERE id='$sessionID' AND broadcaster='1' AND status='0' LIMIT 0,1
SQL command (SELECT * FROM $wpdbvw_vmls_sessions WHERE id='$sessionID' AND broadcaster='1' AND status='0' LIMIT 0,1) cannot be parsed correct.
SELECT * FROM $wpdbvw_vmls_private where rid='' AND cid='$session_uid' AND pid='intval($streamQuery["privateUID"])' AND (status='0' OR status='1') ORDER BY status ASC, id DESC
SQL command (SELECT * FROM $wpdbvw_vmls_private where rid='' AND cid='$session_uid' AND pid='intval($streamQuery["privateUID"])' AND (status='0' OR status='1') ORDER BY status ASC, id DESC) cannot be parsed correct.
SELECT * FROM $wpdbvw_vmls_sessions WHERE session='urlencode(sanitize_file_name($user->user_nicename))' AND status='0' AND rid='$wpdb->get_var("SELECT ID FROM "$wpdb->posts" WHERE post_title = \'" . $room . "\' and post_type=\'" . $options["custom_post"] . "\' LIMIT 0,1")'  AND broadcaster='1' ORDER BY edate DESC LIMIT 0,1
SQL command (SELECT * FROM $wpdbvw_vmls_sessions WHERE session='urlencode(sanitize_file_name($user->user_nicename))' AND status='0' AND rid='$wpdb->get_var("SELECT ID FROM "$wpdb->posts" WHERE post_title = \'" . $room . "\' and post_type=\'" . $options["custom_post"] . "\' LIMIT 0,1")' AND broadcaster='1' ORDER BY edate DESC LIMIT 0,1) cannot be parsed correct.
SELECT * FROM `$wpdbvw_vmls_sessions` WHERE uid = '$userID' AND status='0' AND room='sanitize_file_name($_GET["room"])'  AND `type`='$type' AND rmode='0' LIMIT 1
SQL command (SELECT * FROM `$wpdbvw_vmls_sessions` WHERE uid = '$userID' AND status='0' AND room='sanitize_file_name($_GET["room"])' AND `type`='$type' AND rmode='0' LIMIT 1) cannot be parsed correct.
SELECT * FROM `$wpdbvw_vmls_sessions` WHERE id = '$wpdb->get_row($sqlS)_id'
SQL command (SELECT * FROM `$wpdbvw_vmls_sessions` WHERE id = '$wpdb->get_row($sqlS)_id') cannot be parsed correct.
SELECT * FROM `$wpdbvw_vmls_sessions` WHERE uid = '$userID' AND status='0' AND room='sanitize_file_name($_GET["room"])'  AND `type`='$type' AND rmode='0' LIMIT 1
SQL command (SELECT * FROM `$wpdbvw_vmls_sessions` WHERE uid = '$userID' AND status='0' AND room='sanitize_file_name($_GET["room"])' AND `type`='$type' AND rmode='0' LIMIT 1) cannot be parsed correct.
SELECT COUNT(id) as no FROM $wpdbvw_vmls_private WHERE status = 2 AND pid=$uid
SQL command (SELECT COUNT(id) as no FROM $wpdbvw_vmls_private WHERE status = 2 AND pid=$uid) cannot be parsed correct.
SELECT COUNT(id) as no FROM $wpdbvw_vmls_sessions WHERE status = 2 AND uid=$uid
SQL command (SELECT COUNT(id) as no FROM $wpdbvw_vmls_sessions WHERE status = 2 AND uid=$uid) cannot be parsed correct.
SELECT COUNT(id) as no FROM $wpdbvw_vmls_private WHERE status = 2 AND rid=$rid
SQL command (SELECT COUNT(id) as no FROM $wpdbvw_vmls_private WHERE status = 2 AND rid=$rid) cannot be parsed correct.
SELECT COUNT(id) as no FROM $wpdbvw_vmls_sessions WHERE status = 2 AND rid=$rid
SQL command (SELECT COUNT(id) as no FROM $wpdbvw_vmls_sessions WHERE status = 2 AND rid=$rid) cannot be parsed correct.
SELECT * FROM $wpdbvw_vmls_sessions WHERE session='urlencode(sanitize_file_name($user->user_nicename))' AND status='0' AND rid='$wpdb->get_var("SELECT ID FROM "$wpdb->posts" WHERE post_title = \'" . $room . "\' and post_type=\'" . $options["custom_post"] . "\' LIMIT 0,1")'  AND broadcaster='1' ORDER BY edate DESC LIMIT 0,1
SQL command (SELECT * FROM $wpdbvw_vmls_sessions WHERE session='urlencode(sanitize_file_name($user->user_nicename))' AND status='0' AND rid='$wpdb->get_var("SELECT ID FROM "$wpdb->posts" WHERE post_title = \'" . $room . "\' and post_type=\'" . $options["custom_post"] . "\' LIMIT 0,1")' AND broadcaster='1' ORDER BY edate DESC LIMIT 0,1) cannot be parsed correct.
SELECT * FROM `$wpdbvw_vmls_sessions` WHERE (session='wp_get_current_user()_$$options["userName"]' OR session='wp_get_current_user()_$$options["webcamName"]') AND room='$room' AND status='1' LIMIT 1
SQL command (SELECT * FROM `$wpdbvw_vmls_sessions` WHERE (session='wp_get_current_user()_$$options["userName"]' OR session='wp_get_current_user()_$$options["webcamName"]') AND room='$room' AND status='1' LIMIT 1) cannot be parsed correct.
SELECT * FROM $wpdbvw_vmls_private WHERE rid='get_post($roomID)_ID' AND pid='$session_uid' AND cid='$session_uid' AND status='0' ORDER BY status ASC, id DESC
SQL command (SELECT * FROM $wpdbvw_vmls_private WHERE rid='get_post($roomID)_ID' AND pid='$session_uid' AND cid='$session_uid' AND status='0' ORDER BY status ASC, id DESC) cannot be parsed correct.
SELECT * FROM `$wpdbvw_vmls_private` WHERE id = $privateID
SQL command (SELECT * FROM `$wpdbvw_vmls_private` WHERE id = $privateID) cannot be parsed correct.
SELECT * FROM `$wpdbvw_vmls_sessions` WHERE uid='intval($_POST["userID"])' AND session='sanitize_file_name($_POST["userName"])' AND status='0' AND rid='$roomID' LIMIT 1
SQL command (SELECT * FROM `$wpdbvw_vmls_sessions` WHERE uid='intval($_POST["userID"])' AND session='sanitize_file_name($_POST["userName"])' AND status='0' AND rid='$roomID' LIMIT 1) cannot be parsed correct.
SELECT * FROM `$wpdbvw_vmls_actions` WHERE room_id='5540' AND action = 'privateRequest' AND status > 4 AND status < 7 AND (user_id='$session_uid' OR target_id='$session_uid') ORDER BY mdate DESC LIMIT 0, 1
SQL command (SELECT * FROM `$wpdbvw_vmls_actions` WHERE room_id='5540' AND action = 'privateRequest' AND status > 4 AND status < 7 AND (user_id='$session_uid' OR target_id='$session_uid') ORDER BY mdate DESC LIMIT 0, 1) cannot be parsed correct.
SELECT * FROM `$wpdbvw_vmls_sessions` WHERE uid='intval($_POST["userID"])' AND session='sanitize_file_name($_POST["userName"])' AND status='0' AND rid='$roomID' LIMIT 1
SQL command (SELECT * FROM `$wpdbvw_vmls_sessions` WHERE uid='intval($_POST["userID"])' AND session='sanitize_file_name($_POST["userName"])' AND status='0' AND rid='$roomID' LIMIT 1) cannot be parsed correct.
SELECT * from `$wpdbvw_vmls_actions` WHERE `id` = 'intval($action["ID"])'
SQL command (SELECT * from `$wpdbvw_vmls_actions` WHERE `id` = 'intval($action["ID"])') cannot be parsed correct.
SELECT * from `$wpdbvw_vmls_actions` WHERE `id` = 'intval($VideoWhisper["roomActionID"])' AND status < 7
SQL command (SELECT * from `$wpdbvw_vmls_actions` WHERE `id` = 'intval($VideoWhisper["roomActionID"])' AND status < 7) cannot be parsed correct.
SELECT * FROM $wpdbvw_vmls_messages WHERE id=$id ORDER BY sdate ASC, id DESC LIMIT 0, 100
SQL command (SELECT * FROM $wpdbvw_vmls_messages WHERE id=$id ORDER BY sdate ASC, id DESC LIMIT 0, 100) cannot be parsed correct.
SELECT * FROM $wpdbvw_vmls_messages WHERE id='$id'
SQL command (SELECT * FROM $wpdbvw_vmls_messages WHERE id='$id') cannot be parsed correct.
INSERT INTO `$table_private` ( `performer`, `pid`, `rid`, `client`, `cid`, `room`, `psdate`, `pedate`, `status`, `meta` ) VALUES ( '$session', '$session', '', '$clientUsername', 'intval($streamQuery["privateUID"])', '', time(), time(), 0, 'esc_sql(serialize($sessionMeta))' )
SQL command (INSERT INTO `$table_private` ( `performer`, `pid`, `rid`, `client`, `cid`, `room`, `psdate`, `pedate`, `status`, `meta` ) VALUES ( '$session', '$session', '', '$clientUsername', 'intval($streamQuery["privateUID"])', '', time(), time(), 0, 'esc_sql(serialize($sessionMeta))' )) cannot be parsed correct.
UPDATE `$wpdbvw_vmls_private` SET pid = $session_uid, psdate=$ztime, pedate = time() , status=1 WHERE id = $wpdb->get_row($sqlS)_id
SQL command (UPDATE `$wpdbvw_vmls_private` SET pid = $session_uid, psdate=$ztime, pedate = time() , status=1 WHERE id = $wpdb->get_row($sqlS)_id) cannot be parsed correct.
post_type
SQL command (post_type) cannot be parsed correct.
UPDATE `$wpdbvw_vmls_sessions` set edate=time() WHERE id ='$sessionID'
SQL command (UPDATE `$wpdbvw_vmls_sessions` set edate=time() WHERE id ='$sessionID') cannot be parsed correct.
INSERT INTO `$wpdbvw_vmls_private` ( `rid`, `client`, `cid`, `performer`, `pid`,  `room`, `csdate`, `cedate`, `status`, `meta` ) VALUES ( '', '$session_username', '$session_uid', '$performerUsername', 'intval($streamQuery["privateUID"])', '', time() , time(), 0, 'esc_sql(serialize($sessionMeta))' )
SQL command (INSERT INTO `$wpdbvw_vmls_private` ( `rid`, `client`, `cid`, `performer`, `pid`, `room`, `csdate`, `cedate`, `status`, `meta` ) VALUES ( '', '$session_username', '$session_uid', '$performerUsername', 'intval($streamQuery["privateUID"])', '', time() , time(), 0, 'esc_sql(serialize($sessionMeta))' )) cannot be parsed correct.
UPDATE `$wpdbvw_vmls_private` SET cid = $session_uid, csdate = $ztime, cedate = time() , status=1 WHERE id = $wpdb->get_row($sqlS)_id
SQL command (UPDATE `$wpdbvw_vmls_private` SET cid = $session_uid, csdate = $ztime, cedate = time() , status=1 WHERE id = $wpdb->get_row($sqlS)_id) cannot be parsed correct.
UPDATE `$wpdbvw_vmls_sessions` set meta='esc_sql(serialize($userMeta))' WHERE id ='$session_id'
SQL command (UPDATE `$wpdbvw_vmls_sessions` set meta='esc_sql(serialize($userMeta))' WHERE id ='$session_id') cannot be parsed correct.
UPDATE `$wpdbvw_vmls_sessions` set edate=time(), room='get_userdata($userID)_rooms', username='urlencode(sanitize_file_name($user->user_nicename))' where id ='$wpdb->get_row($sqlS)_id'
SQL command (UPDATE `$wpdbvw_vmls_sessions` set edate=time(), room='get_userdata($userID)_rooms', username='urlencode(sanitize_file_name($user->user_nicename))' where id ='$wpdb->get_row($sqlS)_id') cannot be parsed correct.
UPDATE `$wpdbvw_vmls_sessions` SET status='1' WHERE session='$username' AND status='0' AND room='sanitize_file_name($_GET["room"])'  LIMIT 1
SQL command (UPDATE `$wpdbvw_vmls_sessions` SET status='1' WHERE session='$username' AND status='0' AND room='sanitize_file_name($_GET["room"])' LIMIT 1) cannot be parsed correct.
INSERT INTO `$wpdbvw_vmls_chatlog` ( `username`, `room`, `message`, `mdate`, `type`, `user_id`, `private_uid`) VALUES ('urlencode(sanitize_file_name($current_user->$userName))', 'sanitize_file_name($_GET["room"])', 'preg_replace("/([^\\s]{12})(?=[^\\s])/", "$1" . "<wbr>", $message)', time(), '2', '0', '0')
SQL command (INSERT INTO `$wpdbvw_vmls_chatlog` ( `username`, `room`, `message`, `mdate`, `type`, `user_id`, `private_uid`) VALUES ('urlencode(sanitize_file_name($current_user->$userName))', 'sanitize_file_name($_GET["room"])', 'preg_replace("/([^\\s]{12})(?=[^\\s])/", "$1" . "<wbr>", $message)', time(), '2', '0', '0')) cannot be parsed correct.
UPDATE `$wpdbvw_vmls_sessions` set meta='esc_sql(serialize($userMeta))' WHERE id='$wpdb->get_row($sqlS)_id' LIMIT 1
SQL command (UPDATE `$wpdbvw_vmls_sessions` set meta='esc_sql(serialize($userMeta))' WHERE id='$wpdb->get_row($sqlS)_id' LIMIT 1) cannot be parsed correct.
INSERT INTO `$wpdbvw_vmls_sessions` ( `session`, `username`, `uid`, `room`, `rid`, `roptions`, `rsdate`, `redate`, `rmode`, `message`, `sdate`, `edate`, `status`, `type`, `ip`, `broadcaster`, `meta`) VALUES ('$username', '$username', '0', '$room', '$wpdb->get_var($sql"SELECT ID FROM " . $wpdb->posts . " WHERE post_title = \'" . $room . "\' and post_type=\'" . $options["custom_post"] . "\' LIMIT 0,1")', 'esc_sql(serialize($roomOptions))', '0', 'intval(get_post_meta($postID, "edate", true))', '0', '$m', 'time()', 'time()', 0, $type, '$clientIP', 0, 'esc_sql(serialize($userMeta))')
SQL command (INSERT INTO `$wpdbvw_vmls_sessions` ( `session`, `username`, `uid`, `room`, `rid`, `roptions`, `rsdate`, `redate`, `rmode`, `message`, `sdate`, `edate`, `status`, `type`, `ip`, `broadcaster`, `meta`) VALUES ('$username', '$username', '0', '$room', '$wpdb->get_var($sql"SELECT ID FROM " . $wpdb->posts . " WHERE post_title = \'" . $room . "\' and post_type=\'" . $options["custom_post"] . "\' LIMIT 0,1")', 'esc_sql(serialize($roomOptions))', '0', 'intval(get_post_meta($postID, "edate", true))', '0', '$m', 'time()', 'time()', 0, $type, '$clientIP', 0, 'esc_sql(serialize($userMeta))')) cannot be parsed correct.
UPDATE `$wpdbvw_vmls_sessions` set edate='time()', rsdate='$wpdb->get_row($sqlS)_rsdate', redate='intval(get_post_meta($postID, "edate", true))', roptions = 'esc_sql(serialize($roomOptions))' WHERE id='$wpdb->get_row($sqlS)_id' LIMIT 1
SQL command (UPDATE `$wpdbvw_vmls_sessions` set edate='time()', rsdate='$wpdb->get_row($sqlS)_rsdate', redate='intval(get_post_meta($postID, "edate", true))', roptions = 'esc_sql(serialize($roomOptions))' WHERE id='$wpdb->get_row($sqlS)_id' LIMIT 1) cannot be parsed correct.
UPDATE `$wpdbvw_vmls_sessions` SET status = 1 WHERE status = 0 AND edate < get_option("VWliveWebcamsOptions")
SQL command (UPDATE `$wpdbvw_vmls_sessions` SET status = 1 WHERE status = 0 AND edate < get_option("VWliveWebcamsOptions")) cannot be parsed correct.
DELETE FROM `$wpdbvw_vmls_chatlog` WHERE mdate < $closeTime
SQL command (DELETE FROM `$wpdbvw_vmls_chatlog` WHERE mdate < $closeTime) cannot be parsed correct.
INSERT INTO `$wpdbvw_vmls_chatlog` ( `username`, `room`, `message`, `mdate`, `type`, `meta`, `user_id`, `private_uid`) VALUES ('sanitize_text_field($_COOKIE["htmlchat_username"])', 'sanitize_file_name($_GET["room"])', '<I>preg_replace("/([^\\s]{12})(?=[^\\s])/", "$1" . "<wbr>", $message)</I>', time(), '2', 'serialize($meta)', 'wp_get_current_user()', '0')
SQL command (INSERT INTO `$wpdbvw_vmls_chatlog` ( `username`, `room`, `message`, `mdate`, `type`, `meta`, `user_id`, `private_uid`) VALUES ('sanitize_text_field($_COOKIE["htmlchat_username"])', 'sanitize_file_name($_GET["room"])', '<I>preg_replace("/([^\\s]{12})(?=[^\\s])/", "$1" . "<wbr>", $message)</I>', time(), '2', 'serialize($meta)', 'wp_get_current_user()', '0')) cannot be parsed correct.
UPDATE `$wpdbvw_vmls_private` SET `status`='2', `meta`='esc_sql(serialize($sessionMeta))' WHERE `id`=$session
SQL command (UPDATE `$wpdbvw_vmls_private` SET `status`='2', `meta`='esc_sql(serialize($sessionMeta))' WHERE `id`=$session) cannot be parsed correct.
DELETE FROM `$wpdbvw_vmls_private` WHERE `call` = '0' AND (status=0 OR status=1) AND ((cedate=0 AND pedate < get_option("VWliveWebcamsOptions")) OR (pedate=0 AND cedate < get_option("VWliveWebcamsOptions")) OR (psdate > 0 AND pedate=psdate AND pedate < get_option("VWliveWebcamsOptions")) OR (csdate>0 AND cedate=csdate AND cedate < get_option("VWliveWebcamsOptions")))
SQL command (DELETE FROM `$wpdbvw_vmls_private` WHERE `call` = '0' AND (status=0 OR status=1) AND ((cedate=0 AND pedate < get_option("VWliveWebcamsOptions")) OR (pedate=0 AND cedate < get_option("VWliveWebcamsOptions")) OR (psdate > 0 AND pedate=psdate AND pedate < get_option("VWliveWebcamsOptions")) OR (csdate>0 AND cedate=csdate AND cedate < get_option("VWliveWebcamsOptions")))) cannot be parsed correct.
UPDATE `$wpdbvw_vmls_private` SET status='1' WHERE psdate > 0 AND csdate > 0 AND status='0' AND pedate < get_option("VWliveWebcamsOptions") AND cedate < get_option("VWliveWebcamsOptions")
SQL command (UPDATE `$wpdbvw_vmls_private` SET status='1' WHERE psdate > 0 AND csdate > 0 AND status='0' AND pedate < get_option("VWliveWebcamsOptions") AND cedate < get_option("VWliveWebcamsOptions")) cannot be parsed correct.
UPDATE `$wpdbvw_vmls_sessions` SET `status`='2', `meta`='esc_sql(serialize($sessionMeta))' WHERE id=$session
SQL command (UPDATE `$wpdbvw_vmls_sessions` SET `status`='2', `meta`='esc_sql(serialize($sessionMeta))' WHERE id=$session) cannot be parsed correct.
DELETE FROM `$wpdbvw_vmls_private` WHERE `call` = '0' AND pedate < get_option("VWliveWebcamsOptions") AND cedate < get_option("VWliveWebcamsOptions") AND status ='2' AND (pid=wp_get_current_user()_ID OR cid=wp_get_current_user()_ID)
SQL command (DELETE FROM `$wpdbvw_vmls_private` WHERE `call` = '0' AND pedate < get_option("VWliveWebcamsOptions") AND cedate < get_option("VWliveWebcamsOptions") AND status ='2' AND (pid=wp_get_current_user()_ID OR cid=wp_get_current_user()_ID)) cannot be parsed correct.
DELETE FROM `$wpdbvw_vmls_sessions` WHERE (status=0 OR status=1) AND (rsdate = 0 AND edate < get_option("VWliveWebcamsOptions")) AND broadcaster = 0
SQL command (DELETE FROM `$wpdbvw_vmls_sessions` WHERE (status=0 OR status=1) AND (rsdate = 0 AND edate < get_option("VWliveWebcamsOptions")) AND broadcaster = 0) cannot be parsed correct.
UPDATE `$wpdbvw_vmls_sessions` SET status='1' WHERE status='0' AND edate < get_option("VWliveWebcamsOptions")
SQL command (UPDATE `$wpdbvw_vmls_sessions` SET status='1' WHERE status='0' AND edate < get_option("VWliveWebcamsOptions")) cannot be parsed correct.
DELETE FROM `$wpdbvw_vmls_sessions` WHERE edate < get_option("VWliveWebcamsOptions") AND status ='2' AND uid=wp_get_current_user()_ID
SQL command (DELETE FROM `$wpdbvw_vmls_sessions` WHERE edate < get_option("VWliveWebcamsOptions") AND status ='2' AND uid=wp_get_current_user()_ID) cannot be parsed correct.
UPDATE `$wpdbvw_vmls_sessions` SET status = 1 WHERE status = 0 AND edate < get_option("VWliveWebcamsOptions")
SQL command (UPDATE `$wpdbvw_vmls_sessions` SET status = 1 WHERE status = 0 AND edate < get_option("VWliveWebcamsOptions")) cannot be parsed correct.
UPDATE `$wpdbvw_vmls_sessions` set meta='esc_sql(serialize($userMeta))' WHERE id ='$session_id'
SQL command (UPDATE `$wpdbvw_vmls_sessions` set meta='esc_sql(serialize($userMeta))' WHERE id ='$session_id') cannot be parsed correct.
INSERT INTO `$wpdbvw_vmls_private` ( `call`, `performer`, `pid`, `client`, `cid`, `rid`, `room`, `status`, `meta`, `psdate`, `pedate`, `csdate`,`cedate` ) VALUES ( '0', 'get_post_meta($postID, "performer", true)', 'intval(get_post_meta($postID, "performerUserID", true))', 'sanitize_file_name($_COOKIE["htmlchat_username"])', 'get_current_user_id()', '$postID', 'sanitize_file_name($room)', '0', 'serialize($meta)', '0', '0', 'time()', 'time()')
SQL command (INSERT INTO `$wpdbvw_vmls_private` ( `call`, `performer`, `pid`, `client`, `cid`, `rid`, `room`, `status`, `meta`, `psdate`, `pedate`, `csdate`,`cedate` ) VALUES ( '0', 'get_post_meta($postID, "performer", true)', 'intval(get_post_meta($postID, "performerUserID", true))', 'sanitize_file_name($_COOKIE["htmlchat_username"])', 'get_current_user_id()', '$postID', 'sanitize_file_name($room)', '0', 'serialize($meta)', '0', '0', 'time()', 'time()')) cannot be parsed correct.
meta_query
SQL command (meta_query) cannot be parsed correct.
INSERT INTO `$wpdbvw_vmls_chatlog` ( `username`, `room`, `room_id`, `message`, `mdate`, `type`, `user_id`, `meta`, `private_uid`) VALUES ('$nextSession_username', '$nextSession_room', '$nextSession_rid', 'get_option("VWliveWebcamsOptions")_balanceWarn1Message', time(), '3', '$nextSession_uid', 'esc_sql(serialize($meta))', '0')
SQL command (INSERT INTO `$wpdbvw_vmls_chatlog` ( `username`, `room`, `room_id`, `message`, `mdate`, `type`, `user_id`, `meta`, `private_uid`) VALUES ('$nextSession_username', '$nextSession_room', '$nextSession_rid', 'get_option("VWliveWebcamsOptions")_balanceWarn1Message', time(), '3', '$nextSession_uid', 'esc_sql(serialize($meta))', '0')) cannot be parsed correct.
INSERT INTO `$wpdbvw_vmls_chatlog` ( `username`, `room`, `room_id`, `message`, `mdate`, `type`, `user_id`, `meta`, `private_uid`) VALUES ('$session_username', '$session_room', '$session_rid', 'esc_sql($message)', time(), '2', '$session_uid', 'esc_sql(serialize($meta))', '$wpdb->get_row($sql)_user_id')
SQL command (INSERT INTO `$wpdbvw_vmls_chatlog` ( `username`, `room`, `room_id`, `message`, `mdate`, `type`, `user_id`, `meta`, `private_uid`) VALUES ('$session_username', '$session_room', '$session_rid', 'esc_sql($message)', time(), '2', '$session_uid', 'esc_sql(serialize($meta))', '$wpdb->get_row($sql)_user_id')) cannot be parsed correct.
UPDATE `$wpdbvw_vmls_sessions` set meta='esc_sql(serialize($userMeta))' WHERE id ='$nextSession_id'
SQL command (UPDATE `$wpdbvw_vmls_sessions` set meta='esc_sql(serialize($userMeta))' WHERE id ='$nextSession_id') cannot be parsed correct.
INSERT INTO `$wpdbvw_vmls_chatlog` ( `username`, `room`, `room_id`, `message`, `mdate`, `type`, `user_id`, `meta`, `private_uid`) VALUES ('$userName', 'get_post($roomID)_post_title', 'intval($VideoWhisper["roomID"])', '', time(), '2', '2136', 'esc_sql(serialize($meta))', 'intval($VideoWhisper["privateUID"])')
SQL command (INSERT INTO `$wpdbvw_vmls_chatlog` ( `username`, `room`, `room_id`, `message`, `mdate`, `type`, `user_id`, `meta`, `private_uid`) VALUES ('$userName', 'get_post($roomID)_post_title', 'intval($VideoWhisper["roomID"])', '', time(), '2', '2136', 'esc_sql(serialize($meta))', 'intval($VideoWhisper["privateUID"])')) cannot be parsed correct.
UPDATE `$wpdbvw_vmls_actions` SET status = '11' WHERE room_id='5540' AND action = 'privateRequest' AND status < 7 AND id <> $wpdb->get_row($sql)_id
SQL command (UPDATE `$wpdbvw_vmls_actions` SET status = '11' WHERE room_id='5540' AND action = 'privateRequest' AND status < 7 AND id <> $wpdb->get_row($sql)_id) cannot be parsed correct.
INSERT INTO `$wpdbvw_vmls_messages` ( `sender_id`, `webcam_id`, `reply_id`, `sdate`, `message`, `meta`) VALUES ( '2136', '$roomID', '0', 'time()', 'esc_sql(wp_encode_emoji(sanitize_textarea_field($message["text"])))', 'serialize($meta)')
SQL command (INSERT INTO `$wpdbvw_vmls_messages` ( `sender_id`, `webcam_id`, `reply_id`, `sdate`, `message`, `meta`) VALUES ( '2136', '$roomID', '0', 'time()', 'esc_sql(wp_encode_emoji(sanitize_textarea_field($message["text"])))', 'serialize($meta)')) cannot be parsed correct.
UPDATE `$wpdbvw_vmls_sessions` set meta='esc_sql(serialize($userMeta))' WHERE id ='$session'
SQL command (UPDATE `$wpdbvw_vmls_sessions` set meta='esc_sql(serialize($userMeta))' WHERE id ='$session') cannot be parsed correct.
UPDATE `$wpdbvw_vmls_sessions` set meta='esc_sql(serialize($userMeta))' WHERE id ='$nextSession_id'
SQL command (UPDATE `$wpdbvw_vmls_sessions` set meta='esc_sql(serialize($userMeta))' WHERE id ='$nextSession_id') cannot be parsed correct.
UPDATE `$wpdbvw_vmls_sessions` set meta='esc_sql(serialize($userMeta))' WHERE id ='$session_id'
SQL command (UPDATE `$wpdbvw_vmls_sessions` set meta='esc_sql(serialize($userMeta))' WHERE id ='$session_id') cannot be parsed correct.
UPDATE `$wpdbvw_vmls_sessions` set meta='esc_sql(serialize($userMeta))' WHERE id ='$nextSession_id'
SQL command (UPDATE `$wpdbvw_vmls_sessions` set meta='esc_sql(serialize($userMeta))' WHERE id ='$nextSession_id') cannot be parsed correct.
UPDATE `$wpdbvw_vmls_sessions` set meta='esc_sql(serialize($userMeta))' WHERE id ='$nextSession_id'
SQL command (UPDATE `$wpdbvw_vmls_sessions` set meta='esc_sql(serialize($userMeta))' WHERE id ='$nextSession_id') cannot be parsed correct.
UPDATE `$wpdbvw_vmls_actions` SET  status = 'intval($action["status"])', mdate = 'time()' WHERE `id` = 'intval($action["ID"])'
SQL command (UPDATE `$wpdbvw_vmls_actions` SET status = 'intval($action["status"])', mdate = 'time()' WHERE `id` = 'intval($action["ID"])') cannot be parsed correct.
UPDATE `$wpdbvw_vmls_private` SET status = '1' WHERE `status` = 0 AND rid='$roomID' AND pid='$action_privateUID' AND cid='$userID'
SQL command (UPDATE `$wpdbvw_vmls_private` SET status = '1' WHERE `status` = 0 AND rid='$roomID' AND pid='$action_privateUID' AND cid='$userID') cannot be parsed correct.
UPDATE `$wpdbvw_vmls_actions` SET  status = 'intval($action["status"])', mdate = 'time()' WHERE `id` = 'intval($action["ID"])'
SQL command (UPDATE `$wpdbvw_vmls_actions` SET status = 'intval($action["status"])', mdate = 'time()' WHERE `id` = 'intval($action["ID"])') cannot be parsed correct.
UPDATE `$wpdbvw_vmls_actions` SET  answer = 'sanitize_text_field($action["answer"])', status = 'intval($action["status"])', mdate = 'time()' WHERE `id` = 'intval($action["ID"])'
SQL command (UPDATE `$wpdbvw_vmls_actions` SET answer = 'sanitize_text_field($action["answer"])', status = 'intval($action["status"])', mdate = 'time()' WHERE `id` = 'intval($action["ID"])') cannot be parsed correct.
UPDATE `$wpdbvw_vmls_actions` SET status = '12' WHERE user_id='intval($action["userID"])' AND room_id='intval($action["roomID"])' AND action = 'sanitize_text_field($action["action"])' AND status=0
SQL command (UPDATE `$wpdbvw_vmls_actions` SET status = '12' WHERE user_id='intval($action["userID"])' AND room_id='intval($action["roomID"])' AND action = 'sanitize_text_field($action["action"])' AND status=0) cannot be parsed correct.
INSERT INTO `$wpdbvw_vmls_messages` ( `sender_id`, `webcam_id`, `reply_id`, `sdate`, `message`, `meta`) VALUES ( '2136', '$roomID', 'intval($_POST["messageSelected"])', 'time()', 'esc_sql(wp_encode_emoji(sanitize_textarea_field($message["text"])))', 'serialize($meta)')
SQL command (INSERT INTO `$wpdbvw_vmls_messages` ( `sender_id`, `webcam_id`, `reply_id`, `sdate`, `message`, `meta`) VALUES ( '2136', '$roomID', 'intval($_POST["messageSelected"])', 'time()', 'esc_sql(wp_encode_emoji(sanitize_textarea_field($message["text"])))', 'serialize($meta)')) cannot be parsed correct.
UPDATE `$wpdbvw_vmls_messages` SET `ldate` = 'time()' WHERE id = 'intval($_POST["messageSelected"])'
SQL command (UPDATE `$wpdbvw_vmls_messages` SET `ldate` = 'time()' WHERE id = 'intval($_POST["messageSelected"])') cannot be parsed correct.
INSERT INTO `$wpdbvw_vmls_chatlog` ( `username`, `room`, `room_id`, `message`, `mdate`, `type`, `user_id`, `meta`, `private_uid`) VALUES ('sanitize_text_field($message["userName"])', 'get_post($roomID)_post_title', '13', 'esc_sql(wp_encode_emoji(sanitize_textarea_field($message["text"])))', time(), '2', '2136', 'esc_sql(serialize($meta))', 'intval($VideoWhisper["privateUID"])')
SQL command (INSERT INTO `$wpdbvw_vmls_chatlog` ( `username`, `room`, `room_id`, `message`, `mdate`, `type`, `user_id`, `meta`, `private_uid`) VALUES ('sanitize_text_field($message["userName"])', 'get_post($roomID)_post_title', '13', 'esc_sql(wp_encode_emoji(sanitize_textarea_field($message["text"])))', time(), '2', '2136', 'esc_sql(serialize($meta))', 'intval($VideoWhisper["privateUID"])')) cannot be parsed correct.
UPDATE `$wpdbvw_vmls_sessions` set meta='esc_sql(serialize($userMeta))' WHERE id ='$session_id'
SQL command (UPDATE `$wpdbvw_vmls_sessions` set meta='esc_sql(serialize($userMeta))' WHERE id ='$session_id') cannot be parsed correct.
DELETE FROM `$wpdbvw_vmls_actions` WHERE mdate < $closeTime
SQL command (DELETE FROM `$wpdbvw_vmls_actions` WHERE mdate < $closeTime) cannot be parsed correct.
UPDATE `$wpdbvw_vmls_actions` SET status = 5, mdate = 'time()' WHERE `id` = '$sqlRow'
SQL command (UPDATE `$wpdbvw_vmls_actions` SET status = 5, mdate = 'time()' WHERE `id` = '$sqlRow') cannot be parsed correct.
UPDATE `$wpdbvw_vmls_actions` SET mdate = 'time()' WHERE `id` = 'intval($VideoWhisper["roomActionID"])'
SQL command (UPDATE `$wpdbvw_vmls_actions` SET mdate = 'time()' WHERE `id` = 'intval($VideoWhisper["roomActionID"])') cannot be parsed correct.
UPDATE `$wpdbvw_vmls_private` SET status = '1' WHERE `status` = 0 AND rid='$roomID' AND pid='$userID' AND cid='$privateUID'
SQL command (UPDATE `$wpdbvw_vmls_private` SET status = '1' WHERE `status` = 0 AND rid='$roomID' AND pid='$userID' AND cid='$privateUID') cannot be parsed correct.
DELETE FROM `$wpdbvw_vmls_chatlog` WHERE mdate < $closeTime
SQL command (DELETE FROM `$wpdbvw_vmls_chatlog` WHERE mdate < $closeTime) cannot be parsed correct.
INSERT INTO `$wpdbvw_vmls_actions` ( `user_id`, `room_id`, `target_id`, `action`, `meta`, `mdate`, `status`, `answer`) VALUES ('intval($action["userID"])', 'intval($action["roomID"])', 'intval($action["targetID"])', 'sanitize_text_field($action["action"])', 'serialize(is_array($action["meta"])array_map("sanitize_text_field", $action["meta"])[])', 'time()', '0', '0')
SQL command (INSERT INTO `$wpdbvw_vmls_actions` ( `user_id`, `room_id`, `target_id`, `action`, `meta`, `mdate`, `status`, `answer`) VALUES ('intval($action["userID"])', 'intval($action["roomID"])', 'intval($action["targetID"])', 'sanitize_text_field($action["action"])', 'serialize(is_array($action["meta"])array_map("sanitize_text_field", $action["meta"])[])', 'time()', '0', '0')) cannot be parsed correct.
DELETE FROM $wpdbvw_vmls_private WHERE rid = intval($atts["post_id"]) AND `call` > 0 AND id = intval($_GET["deletecall"]) AND pid = wp_get_current_user()
SQL command (DELETE FROM $wpdbvw_vmls_private WHERE rid = intval($atts["post_id"]) AND `call` > 0 AND id = intval($_GET["deletecall"]) AND pid = wp_get_current_user()) cannot be parsed correct.
INSERT INTO `$wpdbvw_vmls_messages` ( `sender_id`, `webcam_id`, `reply_id`, `sdate`, `message`, `meta`) VALUES ( 'get_current_user_id()', 'intval($_GET["webcam_id"])', '0', 'time()', 'esc_sql(wp_encode_emoji(sanitize_textarea_field($_POST["paidmessage"])))', 'serialize($meta)')
SQL command (INSERT INTO `$wpdbvw_vmls_messages` ( `sender_id`, `webcam_id`, `reply_id`, `sdate`, `message`, `meta`) VALUES ( 'get_current_user_id()', 'intval($_GET["webcam_id"])', '0', 'time()', 'esc_sql(wp_encode_emoji(sanitize_textarea_field($_POST["paidmessage"])))', 'serialize($meta)')) cannot be parsed correct.
INSERT INTO `$wpdbvw_vmls_private` ( `call`, `performer`, `pid`, `client`, `cid`, `rid`, `room`, `status`, `meta` ) VALUES ( '1', '$performer', 'wp_get_current_user()', 'get_user_by("email", $client)_user_login', 'get_user_by("email", $client)_ID', 'intval($atts["post_id"])', 'get_post($postID)_post_name', 0, 'serialize($meta)')
SQL command (INSERT INTO `$wpdbvw_vmls_private` ( `call`, `performer`, `pid`, `client`, `cid`, `rid`, `room`, `status`, `meta` ) VALUES ( '1', '$performer', 'wp_get_current_user()', 'get_user_by("email", $client)_user_login', 'get_user_by("email", $client)_ID', 'intval($atts["post_id"])', 'get_post($postID)_post_name', 0, 'serialize($meta)')) cannot be parsed correct.
INSERT INTO `$wpdbvw_vmls_messages` ( `sender_id`, `webcam_id`, `reply_id`, `sdate`, `message`, `meta`) VALUES ( 'get_current_user_id()', 'intval($_GET["webcam_id"])', '$id', 'time()', 'esc_sql(wp_kses($_POST["message"], $allowedtags))', 'serialize($meta)')
SQL command (INSERT INTO `$wpdbvw_vmls_messages` ( `sender_id`, `webcam_id`, `reply_id`, `sdate`, `message`, `meta`) VALUES ( 'get_current_user_id()', 'intval($_GET["webcam_id"])', '$id', 'time()', 'esc_sql(wp_kses($_POST["message"], $allowedtags))', 'serialize($meta)')) cannot be parsed correct.
UPDATE `$wpdbvw_vmls_messages` SET `ldate` = 'time()' WHERE id = '$id'
SQL command (UPDATE `$wpdbvw_vmls_messages` SET `ldate` = 'time()' WHERE id = '$id') cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [2661, 33998, 34063, 34147, 38110, 38121, 38182, 38315, 33863, 33874, 34426, 34524, 38508, 38683, 38745, 33953, 123032, 123103, 127053, 128149, 129090, 124417, 124487, 126611, 126761, 127684, 127758, 127819, 123768, 128577, 128898, 123839, 11663, 11916, 19760, 19915, 28233, 27870, 50268, 59592, 71044, 59989, 74189, 71375, 73342, 73404, 74465, 100263, 102309, 105115, 103730, 7169, 7308, 7475, 6854, 6913, 7611, 8472, 9510, 10226, 9674, 19362, 19393, 19484, 19515, 8641, 22321, 54039, 48582, 64097, 61880, 64386, 69449, 71642, 100173, 100953, 7298, 7363, 4645, 6951, 7601, 7666, 8140, 8594, 9456, 11395, 10211, 9664, 9746, 11638, 11832, 10780, 21523, 19688, 19708, 20834, 19818, 19872, 19889, 19968, 22785, 25667, 49387, 45473, 53672, 53816, 66010, 63497, 61960, 70074, 66235, 66436, 66696, 71998, 72216, 69199, 69234, 69367, 69541, 69721, 70360, 70390, 70663, 66873, 71333, 71590, 71666, 71724, 70952, 69789, 105072, 99657, 104545, 101769, 101892]
Added 0 SQL nodes. 0 out of 135 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:59.595691.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
Added 1 AST_HTML nodes and 1 PARENT_OF edges.
Added 7 AST_HTML nodes and 7 PARENT_OF edges.
Added 10 AST_HTML nodes and 10 PARENT_OF edges.
Added 10 AST_HTML nodes and 10 PARENT_OF edges.
Added 1 AST_HTML nodes and 1 PARENT_OF edges.
Added 1 AST_HTML nodes and 1 PARENT_OF edges.
Added 1 AST_HTML nodes and 1 PARENT_OF edges.
Added 1 AST_HTML nodes and 1 PARENT_OF edges.
Added 7 AST_HTML nodes and 7 PARENT_OF edges.
Added 15 AST_HTML nodes and 15 PARENT_OF edges.
Added 8 AST_HTML nodes and 8 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 13 AST_HTML nodes and 13 PARENT_OF edges.
Added 5 AST_HTML nodes and 5 PARENT_OF edges.
HTML code '$'ERROR: No session: SELECT * FROM $wpdbvw_vmls_sessions WHERE session=\'urlencode(sanitize_file_name($user->user_nicename))\' AND status=\'0\' AND rid=\'$wpdb->get_var("SELECT ID FROM "$wpdb->posts" WHERE post_title = \\'" . $room . "\\' and post_type=\\'" . $options["custom_post"] . "\\' LIMIT 0,1")\'  AND broadcaster=\'1\' ORDER BY edate DESC LIMIT 0,1'' cannot be parsed correct.
Added 9 AST_HTML nodes and 9 PARENT_OF edges.
Added 7 AST_HTML nodes and 7 PARENT_OF edges.
Added 7 AST_HTML nodes and 7 PARENT_OF edges.
Added 4 AST_HTML nodes and 4 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 4 AST_HTML nodes and 4 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 9 AST_HTML nodes and 9 PARENT_OF edges.
Added 9 AST_HTML nodes and 9 PARENT_OF edges.
Added 5 AST_HTML nodes and 5 PARENT_OF edges.
Added 7 AST_HTML nodes and 7 PARENT_OF edges.
Added 5 AST_HTML nodes and 5 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 5 AST_HTML nodes and 5 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 1 AST_HTML nodes and 1 PARENT_OF edges.
Added 6 AST_HTML nodes and 6 PARENT_OF edges.
Added 6 AST_HTML nodes and 6 PARENT_OF edges.
Added 12 AST_HTML nodes and 12 PARENT_OF edges.
Added 4 AST_HTML nodes and 4 PARENT_OF edges.
Added 5 AST_HTML nodes and 5 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 7 AST_HTML nodes and 7 PARENT_OF edges.
Added 5 AST_HTML nodes and 5 PARENT_OF edges.
Added 5 AST_HTML nodes and 5 PARENT_OF edges.
Added 7 AST_HTML nodes and 7 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 6 AST_HTML nodes and 6 PARENT_OF edges.
Added 20 AST_HTML nodes and 20 PARENT_OF edges.
Added 4 AST_HTML nodes and 4 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 10 AST_HTML nodes and 10 PARENT_OF edges.
Added 10 AST_HTML nodes and 10 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 6 AST_HTML nodes and 6 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 6 AST_HTML nodes and 6 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 49 AST_HTML nodes and 49 PARENT_OF edges.
Added 49 AST_HTML nodes and 49 PARENT_OF edges.
Added 7 AST_HTML nodes and 7 PARENT_OF edges.
Added 7 AST_HTML nodes and 7 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 1 AST_HTML nodes and 1 PARENT_OF edges.
Added 5 AST_HTML nodes and 5 PARENT_OF edges.
Added 4 AST_HTML nodes and 4 PARENT_OF edges.
Added 4 AST_HTML nodes and 4 PARENT_OF edges.
Added 4 AST_HTML nodes and 4 PARENT_OF edges.
Added 6 AST_HTML nodes and 6 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 10 AST_HTML nodes and 10 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 10 AST_HTML nodes and 10 PARENT_OF edges.
Added 9 AST_HTML nodes and 9 PARENT_OF edges.
Added 10 AST_HTML nodes and 10 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 4 AST_HTML nodes and 4 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 10 AST_HTML nodes and 10 PARENT_OF edges.
Added 10 AST_HTML nodes and 10 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 5 AST_HTML nodes and 5 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 14 AST_HTML nodes and 14 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 6 AST_HTML nodes and 6 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 4 AST_HTML nodes and 4 PARENT_OF edges.
Added 9 AST_HTML nodes and 9 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 10 AST_HTML nodes and 10 PARENT_OF edges.
Added 7 AST_HTML nodes and 7 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 6 AST_HTML nodes and 6 PARENT_OF edges.
Added 6 AST_HTML nodes and 6 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 5 AST_HTML nodes and 5 PARENT_OF edges.
Added 13 AST_HTML nodes and 13 PARENT_OF edges.
Added 10 AST_HTML nodes and 10 PARENT_OF edges.
Added 6 AST_HTML nodes and 6 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 4 AST_HTML nodes and 4 PARENT_OF edges.
Added 11 AST_HTML nodes and 11 PARENT_OF edges.
Added 9 AST_HTML nodes and 9 PARENT_OF edges.
Added 5 AST_HTML nodes and 5 PARENT_OF edges.
Added 13 AST_HTML nodes and 13 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 5 AST_HTML nodes and 5 PARENT_OF edges.
HTML code '$'<script>var category$id = document.getElementById("categor$id"); categor$id.onchange = function(){aurlsanitize_file_name($_GET["id"])=\'admin_url()admin-ajax.php?action=vmls_cams&menu=$menu&pp=$perPage&pr=$perRow&ss=$selectStatus&sc=$selectCategory&so=$selectOrder&sn=$selectName&sg=$selectTags&sp=$selectPage&sl=$selectLayout&id=sanitize_file_name($_GET["id"])&tags=urlencode($tags)&name=urlencode($name)&ob=sanitize_file_name($_GET["ob"])&layout=get_option("VWliveWebcamsOptions")_layoutDefault&cat=\'+ this.value; loadWebcamssanitize_file_name($_GET["id"])(\'<div class=\\'ui active inline text large loader\\'>Loading category...</div>\')}
			</script>'' cannot be parsed correct.
HTML code '$'<div class="field"><select class="ui dropdown v-select fluid" id="pstatus$id" name="pstatus$id" onchange="aurlsanitize_file_name($_GET["id"])=\'admin_url()admin-ajax.php?action=vmls_cams&menu=$menu&pp=$perPage&pr=$perRow&ss=$selectStatus&sc=$selectCategory&so=$selectOrder&sn=$selectName&sg=$selectTags&sp=$selectPage&sl=$selectLayout&id=sanitize_file_name($_GET["id"])&tags=urlencode($tags)&name=urlencode($name)&cat=$category&ob=default&layout=sanitize_file_name($_GET["layout"])&st=\'+ this.value; loadWebcamssanitize_file_name($_GET["id"])(\'<div class=\\'ui active inline text large loader\\'>Filtering Webcams...</div>\')">'' cannot be parsed correct.
Added 6 AST_HTML nodes and 6 PARENT_OF edges.
Added 6 AST_HTML nodes and 6 PARENT_OF edges.
Added 35 AST_HTML nodes and 35 PARENT_OF edges.
HTML code '$'  <a class=active item" onclick="aurl$id=\'$ajaxurlO&cat=0\'; loadWebcamssanitize_file_name($_GET["id"])(\'<div class=\\'ui active inline text large loader\\'>Loading category...</div>\')"All Categories</a> '' cannot be parsed correct.
HTML code '$'  <a class=active item" onclick="aurl$id=\'$ajaxurlO&cat=$cat\'; loadWebcamssanitize_file_name($_GET["id"])(\'<div class=\\'ui active inline text large loader\\'>Loading category...</div>\')"$cat</a> '' cannot be parsed correct.
Added 37 AST_HTML nodes and 37 PARENT_OF edges.
HTML code '$'  <a class=active item" onclick="aurl$id=\'$ajaxurlC&ob=$key\'; loadWebcamssanitize_file_name($_GET["id"])(\'<div class=\\'ui active inline text large loader\\'>Ordering Rooms...</div>\')"$value</a> '' cannot be parsed correct.
HTML code '$'
<div class="right floated column">
<div class="ui icon buttons right floated">
  <a class="ui button active" href="JavaScript: void()" onclick="aurl$id=\'$ajaxurlCOP&layout=grid\'; loadWebcams$id(\'<div class=\\'ui active inline text large loader\\'>Loading grid layout...</div>\');">
    <i class="th icon"></i>
  </a>
  <a class="ui button active" href="JavaScript: void()" onclick="aurlsanitize_file_name($_GET["id"])=\'admin_url()admin-ajax.php?action=vmls_cams&menu=$menu&pp=$perPage&pr=$perRow&ss=$selectStatus&sc=$selectCategory&so=$selectOrder&sn=$selectName&sg=$selectTags&sp=$selectPage&sl=$selectLayout&id=sanitize_file_name($_GET["id"])&tags=urlencode($tags)&name=urlencode($name)&cat=$category&ob=sanitize_file_name($_GET["ob"])&p=$page&layout=list\'; loadWebcamssanitize_file_name($_GET["id"])(\'<div class=\\'ui active inline text large loader\\'>Loading list layout...</div>\');">
    <i class="th list icon"></i>
  </a>
</div>
</div>'' cannot be parsed correct.
Added 2 AST_HTML nodes and 2 PARENT_OF edges.
HTML code '$'
<div class="ui$options_interfaceClass accordion small">

  <div class="title">
    <i class="dropdown icon"></i>
    Status <i class="check icon small"></i>
  </div>

  <div class=active content">
  <div class="ui $options_interfaceClass vertical menu small">

  <a class="active item" onclick="aurl$id=\'$ajaxurlCO&st=\'; loadWebcams$id(\'<div class=\\'ui active inline text large loader\\'>Filtering Webcams...</div>\')"</a>

  <a class=active item" onclick="aurl$id=\'$ajaxurlCO&st=online\'; loadWebcams$id(\'<div class=\\'ui active inline text large loader\\'>Filtering Webcams...</div>\')"</a>
  <a class=active item" onclick="aurl$id=\'$ajaxurlCO&st=public\'; loadWebcams$id(\'<div class=\\'ui active inline text large loader\\'>Filtering Webcams...</div>\')"</a>

  <a class=active item" onclick="aurl$id=\'$ajaxurlCO&st=paid\'; loadWebcams$id(\'<div class=\\'ui active inline text large loader\\'>Filtering Webcams...</div>\')"</a>
  <a class=active item" onclick="aurl$id=\'$ajaxurlCO&st=free\'; loadWebcams$id(\'<div class=\\'ui active inline text large loader\\'>Filtering Webcams...</div>\')"</a>

  <a class=active item" onclick="aurl$id=\'$ajaxurlCO&st=available_paid\'; loadWebcams$id(\'<div class=\\'ui active inline text large loader\\'>Filtering Webcams...</div>\')"</a>
  <a class=active item" onclick="aurl$id=\'$ajaxurlCO&st=available_free\'; loadWebcams$id(\'<div class=\\'ui active inline text large loader\\'>Filtering Webcams...</div>\')"</a>

  <a class=active item" onclick="aurl$id=\'$ajaxurlCO&st=private\'; loadWebcams$id(\'<div class=\\'ui active inline text large loader\\'>Filtering Webcams...</div>\')"</a>
  <a class=active item" onclick="aurl$id=\'$ajaxurlCO&st=offline\'; loadWebcamssanitize_file_name($_GET["id"])(\'<div class=\\'ui active inline text large loader\\'>Filtering Webcams...</div>\')"</a>

</div>

  </div>
</div>'' cannot be parsed correct.
Added 6 AST_HTML nodes and 6 PARENT_OF edges.
Added 6 AST_HTML nodes and 6 PARENT_OF edges.
Added 6 AST_HTML nodes and 6 PARENT_OF edges.
Added 6 AST_HTML nodes and 6 PARENT_OF edges.
Added 6 AST_HTML nodes and 6 PARENT_OF edges.
Added 6 AST_HTML nodes and 6 PARENT_OF edges.
Added 6 AST_HTML nodes and 6 PARENT_OF edges.
HTML code '$'<div class="field"><select class="ui dropdown v-select fluid" id="order_by$id" name="order_by$id" onchange="aurlsanitize_file_name($_GET["id"])=\'admin_url()admin-ajax.php?action=vmls_cams&menu=$menu&pp=$perPage&pr=$perRow&ss=$selectStatus&sc=$selectCategory&so=$selectOrder&sn=$selectName&sg=$selectTags&sp=$selectPage&sl=$selectLayout&id=sanitize_file_name($_GET["id"])&tags=urlencode($tags)&name=urlencode($name)&cat=$category&layout=get_option("VWliveWebcamsOptions")_layoutDefault&ob=\'+ this.value; loadWebcamssanitize_file_name($_GET["id"])(\'<div class=\\'ui active inline text large loader\\'>Ordering webcams...</div>\')">'' cannot be parsed correct.
Added 5 AST_HTML nodes and 5 PARENT_OF edges.
Added 7 AST_HTML nodes and 7 PARENT_OF edges.
Added 7 AST_HTML nodes and 7 PARENT_OF edges.
Added 7 AST_HTML nodes and 7 PARENT_OF edges.
Added 7 AST_HTML nodes and 7 PARENT_OF edges.
Added 7 AST_HTML nodes and 7 PARENT_OF edges.
Added 7 AST_HTML nodes and 7 PARENT_OF edges.
Added 7 AST_HTML nodes and 7 PARENT_OF edges.
Added 7 AST_HTML nodes and 7 PARENT_OF edges.
Added 7 AST_HTML nodes and 7 PARENT_OF edges.
Added 1 AST_HTML nodes and 1 PARENT_OF edges.
Added 1 AST_HTML nodes and 1 PARENT_OF edges.
Added 37 AST_HTML nodes and 37 PARENT_OF edges.
HTML code '$'  <a class=active item" onclick="aurl$id=\'add_query_arg($fieldMeta, "", $ajaxurlA)\'; loadWebcamssanitize_file_name($_GET["id"])(\'<div class=\\'ui active inline text large loader\\'>Filtering Rooms...</div>\')"Any</a> '' cannot be parsed correct.
HTML code '$'  <a class=active item" onclick="aurl$id=\'add_query_arg($fieldMeta, urlencode(sanitize_text_field($fieldOption)), $ajaxurlA)\'; loadWebcamssanitize_file_name($_GET["id"])(\'<div class=\\'ui active inline text large loader\\'>Filtering Rooms...</div>\')"$fieldOption</a> '' cannot be parsed correct.
Added 17 AST_HTML nodes and 17 PARENT_OF edges.
Added 1 AST_HTML nodes and 1 PARENT_OF edges.
Added 28 AST_HTML nodes and 28 PARENT_OF edges.
Added 32 AST_HTML nodes and 32 PARENT_OF edges.
HTML code '$'<div class="field"><button class="ui icon button" data-tooltip="Search" type="button" name="button" id="submit" value="Search" onclick="aurl$id=\'$ajaxurlCO&tags=\' + document.getElementById(\'tags\').value +\'&name=\' + document.getElementById(\'name\').value; loadWebcams$id(\'<div class=\\'ui active inline text large loader\\'>Searching webcams...</div>\')"><i class="search icon"></i></button>
			 <button style="float:right" data-tooltip="Reload" class="ui icon button" type="button" name="reload" id="reload" value="Reload" onclick="aurlsanitize_file_name($_GET["id"])=\'add_query_arg($customFilters, $ajaxurlA)\'; loadWebcamssanitize_file_name($_GET["id"])(\'<div class=\\'ui active inline text large loader\\'>Reloading Rooms List...</div>\')"><i class="sync icon"></i></button>
			 </div>'' cannot be parsed correct.
Added 6 AST_HTML nodes and 6 PARENT_OF edges.
HTML code '$' <a class="ui labeled icon button" href="javascript:void(0);" onclick="aurl$id=\'$ajaxurlCO&p=intval($page - 1)\'; loadWebcamssanitize_file_name($_GET["id"])(\'<div class=\\'ui active inline text large loader\\'>Loading previous page...</div>\');"><i class="left arrow icon"></i> Previous</a> '' cannot be parsed correct.
Added 7 AST_HTML nodes and 7 PARENT_OF edges.
HTML code '$' <a class="ui right labeled icon button" href="javascript:void(0);" onclick="aurl$id=\'$ajaxurlCO&p=intval($page + 1)\'; loadWebcamssanitize_file_name($_GET["id"])(\'<div class=\\'ui active inline text large loader\\'>Loading next page...</div>\');">Next <i class="right arrow icon"></i></a> '' cannot be parsed correct.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 14 AST_HTML nodes and 14 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 5 AST_HTML nodes and 5 PARENT_OF edges.
Added 15 AST_HTML nodes and 15 PARENT_OF edges.
Added 15 AST_HTML nodes and 15 PARENT_OF edges.
Added 16 AST_HTML nodes and 16 PARENT_OF edges.
Added 6 AST_HTML nodes and 6 PARENT_OF edges.
Added 6 AST_HTML nodes and 6 PARENT_OF edges.
Added 1 AST_HTML nodes and 1 PARENT_OF edges.
Added 12 AST_HTML nodes and 12 PARENT_OF edges.
Added 14 AST_HTML nodes and 14 PARENT_OF edges.
Added 1 AST_HTML nodes and 1 PARENT_OF edges.
Added 9 AST_HTML nodes and 9 PARENT_OF edges.
Added 5 AST_HTML nodes and 5 PARENT_OF edges.
Added 20 AST_HTML nodes and 20 PARENT_OF edges.
Added 21 AST_HTML nodes and 21 PARENT_OF edges.
Added 13 AST_HTML nodes and 13 PARENT_OF edges.
Added 1 AST_HTML nodes and 1 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 1 AST_HTML nodes and 1 PARENT_OF edges.
Added 1 AST_HTML nodes and 1 PARENT_OF edges.
Added 4 AST_HTML nodes and 4 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 5 AST_HTML nodes and 5 PARENT_OF edges.
Added 5 AST_HTML nodes and 5 PARENT_OF edges.
Added 5 AST_HTML nodes and 5 PARENT_OF edges.
Added 5 AST_HTML nodes and 5 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 1 AST_HTML nodes and 1 PARENT_OF edges.
Added 6 AST_HTML nodes and 6 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 2 AST_HTML nodes and 2 PARENT_OF edges.
Added 1 AST_HTML nodes and 1 PARENT_OF edges.
Added 1 AST_HTML nodes and 1 PARENT_OF edges.
Added 5 AST_HTML nodes and 5 PARENT_OF edges.
Added 2 AST_HTML nodes and 2 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 4 AST_HTML nodes and 4 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 5 AST_HTML nodes and 5 PARENT_OF edges.
Added 5 AST_HTML nodes and 5 PARENT_OF edges.
Added 5 AST_HTML nodes and 5 PARENT_OF edges.
Added 5 AST_HTML nodes and 5 PARENT_OF edges.
Added 5 AST_HTML nodes and 5 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 1 AST_HTML nodes and 1 PARENT_OF edges.
Added 2 AST_HTML nodes and 2 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 5 AST_HTML nodes and 5 PARENT_OF edges.
Added 9 AST_HTML nodes and 9 PARENT_OF edges.
Added 1 AST_HTML nodes and 1 PARENT_OF edges.
Added 9 AST_HTML nodes and 9 PARENT_OF edges.
Added 5 AST_HTML nodes and 5 PARENT_OF edges.
Added 19 AST_HTML nodes and 19 PARENT_OF edges.
Added 4 AST_HTML nodes and 4 PARENT_OF edges.
Added 6 AST_HTML nodes and 6 PARENT_OF edges.
Added 14 AST_HTML nodes and 14 PARENT_OF edges.
Added 11 AST_HTML nodes and 11 PARENT_OF edges.
Added 14 AST_HTML nodes and 14 PARENT_OF edges.
Added 6 AST_HTML nodes and 6 PARENT_OF edges.
Added 7 AST_HTML nodes and 7 PARENT_OF edges.
Added 7 AST_HTML nodes and 7 PARENT_OF edges.
Added 1 AST_HTML nodes and 1 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 1 AST_HTML nodes and 1 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 4 AST_HTML nodes and 4 PARENT_OF edges.
Added 5 AST_HTML nodes and 5 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 13 AST_HTML nodes and 13 PARENT_OF edges.
Added 5 AST_HTML nodes and 5 PARENT_OF edges.
Added 5 AST_HTML nodes and 5 PARENT_OF edges.
Added 1 AST_HTML nodes and 1 PARENT_OF edges.
Added 7 AST_HTML nodes and 7 PARENT_OF edges.
Added 5 AST_HTML nodes and 5 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 8 AST_HTML nodes and 8 PARENT_OF edges.
Added 4 AST_HTML nodes and 4 PARENT_OF edges.
Added 5 AST_HTML nodes and 5 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 1 AST_HTML nodes and 1 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 1 AST_HTML nodes and 1 PARENT_OF edges.
Added 5 AST_HTML nodes and 5 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 8 AST_HTML nodes and 8 PARENT_OF edges.
Added 4 AST_HTML nodes and 4 PARENT_OF edges.
Added 4 AST_HTML nodes and 4 PARENT_OF edges.
Added 2 AST_HTML nodes and 2 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 11 AST_HTML nodes and 11 PARENT_OF edges.
Added 14 AST_HTML nodes and 14 PARENT_OF edges.
Added 6 AST_HTML nodes and 6 PARENT_OF edges.
Added 7 AST_HTML nodes and 7 PARENT_OF edges.
Added 6 AST_HTML nodes and 6 PARENT_OF edges.
Added 7 AST_HTML nodes and 7 PARENT_OF edges.
Added 7 AST_HTML nodes and 7 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 4 AST_HTML nodes and 4 PARENT_OF edges.
Added 4 AST_HTML nodes and 4 PARENT_OF edges.
Added 11 AST_HTML nodes and 11 PARENT_OF edges.
Added 14 AST_HTML nodes and 14 PARENT_OF edges.
Added 6 AST_HTML nodes and 6 PARENT_OF edges.
Added 7 AST_HTML nodes and 7 PARENT_OF edges.
Added 7 AST_HTML nodes and 7 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 14 AST_HTML nodes and 14 PARENT_OF edges.
Added 14 AST_HTML nodes and 14 PARENT_OF edges.
Added 14 AST_HTML nodes and 14 PARENT_OF edges.
Added 7 AST_HTML nodes and 7 PARENT_OF edges.
Added 7 AST_HTML nodes and 7 PARENT_OF edges.
Added 1 AST_HTML nodes and 1 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 2 AST_HTML nodes and 2 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 2 AST_HTML nodes and 2 PARENT_OF edges.
Added 7 AST_HTML nodes and 7 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
Added 6 AST_HTML nodes and 6 PARENT_OF edges.
Added 5 AST_HTML nodes and 5 PARENT_OF edges.
Added 13 AST_HTML nodes and 13 PARENT_OF edges.
Added 1 AST_HTML nodes and 1 PARENT_OF edges.
Added 2 AST_HTML nodes and 2 PARENT_OF edges.
Added 12 AST_HTML nodes and 12 PARENT_OF edges.
Added 1 AST_HTML nodes and 1 PARENT_OF edges.
Added 1 AST_HTML nodes and 1 PARENT_OF edges.
Added 10 AST_HTML nodes and 10 PARENT_OF edges.
Added 1 AST_HTML nodes and 1 PARENT_OF edges.
Added 1 AST_HTML nodes and 1 PARENT_OF edges.
Added 10 AST_HTML nodes and 10 PARENT_OF edges.
Added 4 AST_HTML nodes and 4 PARENT_OF edges.
Added 1 AST_HTML nodes and 1 PARENT_OF edges.
Added 4 AST_HTML nodes and 4 PARENT_OF edges.
Added 1 AST_HTML nodes and 1 PARENT_OF edges.
Added 4 AST_HTML nodes and 4 PARENT_OF edges.
Added 10 AST_HTML nodes and 10 PARENT_OF edges.
Added 1 AST_HTML nodes and 1 PARENT_OF edges.
Added 1 AST_HTML nodes and 1 PARENT_OF edges.
Added 10 AST_HTML nodes and 10 PARENT_OF edges.
Added 3 AST_HTML nodes and 3 PARENT_OF edges.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:02:51.454674.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Cannot match corresponding html and php nodes due to unequal number of php end tags and php code's placeholders: 9 end tag vs 8 placeholders. toplevel id: 2
Cannot match corresponding html and php nodes due to unequal number of php end tags and php code's placeholders: 12 end tag vs 11 placeholders. toplevel id: 226
Cannot match corresponding html and php nodes due to unequal number of php end tags and php code's placeholders: 30 end tag vs 27 placeholders. toplevel id: 329
Cannot match corresponding html and php nodes due to unequal number of php end tags and php code's placeholders: 625 end tag vs 624 placeholders. toplevel id: 28847
Successfully connected PHP to HTML ASTs in 2 out of 6 files. Added 23 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.764600.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 6 do_action/apply_filters calls and 60 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:08.675937.

1000 HTML Nodes Created
2000 HTML Nodes Created
2053 HTML Nodes Created
2 HTML_TO_PHP_REACHES edges created
6 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
9 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
9 PARENT_OF edges created
5 HTML_TO_PHP_REACHES edges created
6 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
14 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
7 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
12 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
4 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
8 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
6 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
6 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
3 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
3 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
8 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
8 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
4 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
6 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
4 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
4 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
2 HTML_TO_PHP_REACHES edges created
5 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
5 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
11 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
3 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
4 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
6 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
4 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
4 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
6 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
5 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
19 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
3 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
9 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
9 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
5 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
5 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
48 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
48 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
6 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
6 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
2 HTML_TO_PHP_REACHES edges created
4 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
3 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
3 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
3 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
5 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
9 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
9 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
8 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
9 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
3 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
9 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
9 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
4 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
13 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
5 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
3 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
8 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
9 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
6 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
5 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
5 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
4 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
12 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
9 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
5 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
3 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
10 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
8 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
4 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
12 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
4 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
5 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
5 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
34 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
36 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
1 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
5 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
5 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
5 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
5 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
5 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
5 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
5 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
4 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
6 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
6 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
6 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
6 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
6 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
6 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
6 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
6 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
6 PARENT_OF edges created
3 HTML_TO_PHP_REACHES edges created
36 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
16 PARENT_OF edges created
2 HTML_TO_PHP_REACHES edges created
27 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
31 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
5 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
6 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
13 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
4 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
14 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
14 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
15 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
5 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
5 PARENT_OF edges created
2 HTML_TO_PHP_REACHES edges created
11 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
13 PARENT_OF edges created
2 HTML_TO_PHP_REACHES edges created
8 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
4 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
19 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
20 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
12 PARENT_OF edges created
2 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
3 HTML_TO_PHP_REACHES edges created
3 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
4 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
4 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
4 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
4 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
2 HTML_TO_PHP_REACHES edges created
5 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
1 PARENT_OF edges created
3 HTML_TO_PHP_REACHES edges created
4 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
1 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
3 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
4 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
4 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
4 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
4 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
4 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
2 HTML_TO_PHP_REACHES edges created
1 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
4 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
8 PARENT_OF edges created
2 HTML_TO_PHP_REACHES edges created
8 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
4 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
18 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
3 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
5 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
13 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
10 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
13 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
5 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
6 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
6 PARENT_OF edges created
2 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
2 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
3 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
4 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
12 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
4 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
4 PARENT_OF edges created
2 HTML_TO_PHP_REACHES edges created
6 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
4 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
7 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
3 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
4 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
2 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
2 HTML_TO_PHP_REACHES edges created
4 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
7 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
3 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
3 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
1 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
10 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
13 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
5 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
6 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
5 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
6 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
6 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
3 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
3 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
10 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
13 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
5 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
6 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
6 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
13 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
13 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
13 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
6 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
6 PARENT_OF edges created
2 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
1 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
1 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
6 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
5 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
4 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
12 PARENT_OF edges created
2 HTML_TO_PHP_REACHES edges created
1 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
11 PARENT_OF edges created
3 HTML_TO_PHP_REACHES edges created
9 PARENT_OF edges created
3 HTML_TO_PHP_REACHES edges created
9 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
3 PARENT_OF edges created
2 HTML_TO_PHP_REACHES edges created
3 PARENT_OF edges created
2 HTML_TO_PHP_REACHES edges created
3 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
9 PARENT_OF edges created
3 HTML_TO_PHP_REACHES edges created
9 PARENT_OF edges created
1 HTML_TO_PHP_REACHES edges created
2 PARENT_OF edges created
31 PHP_TO_HTML_REACHES edges created
2084 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Start running FrontBaseDetector
### Start running HashDetector
### Start running IBMDb2Detector
### Start running InformixDetector
### Start running IngresDetector
### Start running maxdbDetector
### Finish running IBMDb2Detector
### Start running MongoDbDetector
### Finish running MongoDbDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running HashDetector
### Start running MySQLDetector
### Finish running ArrayElementDetector
### Start running MySQLiDetector
### Finish running FileProDetector
### Start running Oci8Detector
### Finish running DbaseDetector
### Start running OpenSSLDetector
### Finish running DbplusDetector
### Start running ParadoxDetector
### Finish running InformixDetector
### Start running PasswordHashingDetector
### Finish running FrontBaseDetector
### Start running PhpCurlDetector
### Finish running IngresDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running MySQLDetector
### Start running PHPRetrievalDetector
### Finish running OpenSSLDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running CubridDetector
### Start running PhpVarDetector
### Finish running PhpCurlDetector
### Start running PostgreSQLDetector
### Finish running MsqlDetector
### Start running PropertyDetector
### Finish running PostgreSQLDetector
### Start running Sqlite3Detector
### Finish running Sqlite3Detector
### Start running SqliteDetector
### Finish running FirebirdInterBaseDetector
### Start running SqlServerDetector
### Finish running SqlServerDetector
### Start running SybaseDetector
### Finish running Oci8Detector
### Start running TokyoTyrantDetector
### Finish running TokyoTyrantDetector
### Start running UserInputDetector
### Finish running ParadoxDetector
### Start running VariableDetector
### Finish running UserInputDetector
### Start running WordpressHashingFnDetector
### Finish running SqliteDetector
### Start running WordPressRemoteDetector
### Finish running SybaseDetector
### Start running WordPressRetrievalDetector
### Finish running PropertyDetector
### Start running WordPressStorageDetector
### Finish running PHPRetrievalDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running PasswordHashingDetector
### Start running GenericEncryptionDetector
### Finish running WordPressRemoteDetector
### Start running DeletionDetector
### Finish running PhpVarDetector
### Start running UninstallDetector
### Finish running GenericEncryptionDetector
### Finish running GenericDatabaseUsageDetector
### Finish running UninstallDetector
### Finish running WordpressHashingFnDetector
### Finish running VariableDetector
### Finish running maxdbDetector
### Finish running MySQLiDetector
### Finish running PHPIncludedDetector
### Finish running DeletionDetector
### Finish running PHPStorageDetector
### Finish running WordPressStorageDetector
### Finish running WordPressRetrievalDetector
### Finished running detectors
inc/shortcodes.php:771
  - Request variable '$_POST["address"]' of personal types {'address'} is found.
  - Data types: address
inc/shortcodes.php:772
  - Request variable '$_POST["address"]' of personal types {'address'} is found.
  - Data types: address
inc/shortcodes.php:1136
  - Request variable '$_POST["email"]' of personal types {'email'} is found.
  - Data types: email
inc/shortcodes.php:1136
  - Request variable '$_POST["videowhisper_password"]' of personal types {'password'} is found.
  - Data types: password
inc/shortcodes.php:1174
  - Request variable '$_POST["email"]' of personal types {'email'} is found.
  - Data types: email
inc/shortcodes.php:1213
  - Request variable '$_POST["videowhisper_password"]' of personal types {'password'} is found.
  - Data types: password
inc/shortcodes.php:1298
  - Request variable '$_POST["videowhisper_password"]' of personal types {'password'} is found.
  - Data types: password
inc/shortcodes.php:1588
  - Request variable '$_POST["firstname"]' of personal types {'first_name'} is found.
  - Data types: first_name
inc/shortcodes.php:1589
  - Request variable '$_POST["lastname"]' of personal types {'last_name'} is found.
  - Data types: last_name
inc/shortcodes.php:1593
  - Request variable '$_POST["email"]' of personal types {'email'} is found.
  - Data types: email
inc/shortcodes.php:2403
  - Request variable '$_POST["performer_username"]' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/shortcodes.php:2404
  - Request variable '$_POST["performer_email"]' of personal types {'email'} is found.
  - Data types: email 

inc/h5videochat.php:2234
  - MD5 called with parameters [options, webKey, postID, vw, userID]. Ignore if [options, webKey, postID, vw, userID] does not contain personal information.
inc/h5videochat.php:2237
  - MD5 called with parameters [webKey, vw, options, postID]. Ignore if [webKey, vw, options, postID] does not contain personal information.
inc/options.php:2741
  - MD5 called with parameters [options, webKey, vw, ID, item]. Ignore if [options, webKey, vw, ID, item] does not contain personal information.
inc/shortcodes.php:1185
  - SHA1 called with parameters [time, user_id]. Ignore if [time, user_id] does not contain personal information.
inc/shortcodes.php:1682
  - SHA1 called with parameters [time, user_id]. Ignore if [time, user_id] does not contain personal information.
inc/shortcodes.php:5929
  - MD5 called with parameters [fn, uniqid, true]. Ignore if [fn, uniqid, true] does not contain personal information.
inc/streams.php:151
  - MD5 called with parameters [webKey, vw, options, postID]. Ignore if [webKey, vw, options, postID] does not contain personal information.
inc/streams.php:288
  - MD5 called with parameters [webKey, vw, options, postID]. Ignore if [webKey, vw, options, postID] does not contain personal information.
inc/streams.php:484
  - MD5 called with parameters [options, webKey, postID, vw, userID]. Ignore if [options, webKey, postID, vw, userID] does not contain personal information.
inc/streams.php:487
  - MD5 called with parameters [webKey, vw, options, postID]. Ignore if [webKey, vw, options, postID] does not contain personal information.
inc/streams.php:591
  - MD5 called with parameters [webKey, vw, options, postID]. Ignore if [webKey, vw, options, postID] does not contain personal information.
inc/streams.php:1071
  - MD5 called with parameters [current_user, options, webKey, postID, vw, ID]. Ignore if [current_user, options, webKey, postID, vw, ID] does not contain personal information.
inc/streams.php:1073
  - MD5 called with parameters [webKey, vw, options, postID]. Ignore if [webKey, vw, options, postID] does not contain personal information.
ppv-live-webcams.php:5442
  - MD5 called with parameters [options, webKey, postID, vw, userID]. Ignore if [options, webKey, postID, vw, userID] does not contain personal information.
ppv-live-webcams.php:5464
  - MD5 called with parameters [webKey, vw, options, postID]. Ignore if [webKey, vw, options, postID] does not contain personal information.
ppv-live-webcams.php:5651
  - MD5 called with parameters [options, webKey, vw, channel_id, userID]. Ignore if [options, webKey, vw, channel_id, userID] does not contain personal information.
ppv-live-webcams.php:6326
  - MD5 called with parameters [options, webKey, vw, ID, item]. Ignore if [options, webKey, vw, ID, item] does not contain personal information. 

inc/options.php:2647
  - RETRIEVAL call to file_get_contents($path).
  - Data types: file
inc/options.php:2704
  - RETRIEVAL call to file_get_contents($log["file"]).
  - Data types: file
inc/options.php:3337
  - RETRIEVAL call to file_get_contents($smilPath).
  - Data types: file
inc/shortcodes.php:3351
  - RETRIEVAL call to file_get_contents($destination).
  - Data types: file
ppv-live-webcams.php:2784
  - RETRIEVAL call to file_get_contents($path).
  - Data types: file
ppv-live-webcams.php:2798
  - RETRIEVAL call to file_get_contents($path).
  - Data types: file
ppv-live-webcams.php:5225
  - RETRIEVAL call to file_get_contents($lastCleanFile).
  - Data types: file
ppv-live-webcams.php:5479
  - RETRIEVAL call to file($filename1).
  - Data types: file
ppv-live-webcams.php:6265
  - RETRIEVAL call to file_get_contents($path).
  - Data types: file 

inc/h5videochat.php:3141
  - STORAGE call to fputs($dfile, $messageText . "<BR>").
  - Data types: file
inc/h5videochat.php:4482
  - STORAGE call to fputs($dfile, $messageText . "<BR>").
  - Data types: file
inc/streams.php:864
  - STORAGE call to file_put_contents($log_file, $stream"|"$stream_hls"|"$stream_webrtc"|"$transcodeEnabled"|"$detect"|"$videoCodec"|"$audioCodec, FILE_APPEND).
  - Data types: file
inc/streams.php:865
  - STORAGE call to file_put_contents($log_file, $info, FILE_APPEND).
  - Data types: file
inc/streams.php:878
  - STORAGE call to file_put_contents($log_file, "

CMD: " . $cmd, FILE_APPEND).
  - Data types: file
inc/streams.php:885
  - STORAGE call to file_put_contents($log_file, "RTSP stream incomplete: " . escapeshellarg($options["rtsp_server"] . "/" . $stream) . " Will check again later... ", FILE_APPEND).
  - Data types: file
inc/streams.php:1136
  - STORAGE call to file_put_contents($log_file, " CMD: " . $cmd, FILE_APPEND).
  - Data types: file
inc/streams.php:1137
  - STORAGE call to file_put_contents($log_file, $info, FILE_APPEND).
  - Data types: file
inc/streams.php:1203
  - STORAGE call to file_put_contents($log_file, "

CMD: " . $cmd . " Return:" . $returnvalue . " processID:" . $processId . " postID:" . $postID . " stream:" . $stream . "
", FILE_APPEND).
  - Data types: file
ppv-live-webcams.php:2460
  - STORAGE call to fputs($dfile, $message . "<BR>").
  - Data types: file
ppv-live-webcams.php:2587
  - STORAGE call to fputs($dfile, $message . "<BR>").
  - Data types: file
ppv-live-webcams.php:2775
  - STORAGE call to file_put_contents($path, serialize($var)).
  - Data types: file
ppv-live-webcams.php:2789
  - STORAGE call to file_put_contents($path, $var).
  - Data types: file
ppv-live-webcams.php:2911
  - STORAGE call to file_put_contents($smilPath, $smilCode).
  - Data types: file
ppv-live-webcams.php:5235
  - STORAGE call to file_put_contents($lastCleanFile, $ztime).
  - Data types: file
ppv-live-webcams.php:5351
  - STORAGE call to fputs($dfile, $info).
  - Data types: file
ppv-live-webcams.php:5558
  - STORAGE call to fputs($dfile, "VideoWhisper Log for RTMP Session Control" . "
").
  - Data types: file
ppv-live-webcams.php:5559
  - STORAGE call to fputs($dfile, "Server Date: " . "
" . date("D M j G:i:s T Y") . "
").
  - Data types: file
ppv-live-webcams.php:5560
  - STORAGE call to fputs($dfile, "$_POST:" . "
" . serialize($_POST)).
  - Data types: file
ppv-live-webcams.php:5571
  - STORAGE call to file_put_contents($options["uploadsPath"] . "/sessionsRTP", $rtpsessiondata).
  - Data types: file
ppv-live-webcams.php:5756
  - STORAGE call to fputs($dfile, "
Control RTP Sessions: " . "
" . $controlSessionsS).
  - Data types: file
ppv-live-webcams.php:5760
  - STORAGE call to file_put_contents($options["uploadsPath"] . "/sessionsUsers", $userdata).
  - Data types: file
ppv-live-webcams.php:5932
  - STORAGE call to fputs($dfile, "
Control RTMP Users: " . "
" . $controlUsersS).
  - Data types: file
ppv-live-webcams.php:5934
  - STORAGE call to fputs($dfile, "
" . $debugInfo).
  - Data types: file
ppv-live-webcams.php:5938
  - STORAGE call to file_put_contents($options["uploadsPath"] . "/sessionsApp", $appStats).
  - Data types: file 

inc/h5videochat.php:187
  - object property '$user->user_nicename' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/h5videochat.php:189
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
inc/h5videochat.php:1060
  - object property '$current_user->user_nicename' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/h5videochat.php:1062
  - object property '$current_user->user_email' of personal types {'email'} is found.
  - Data types: email
inc/h5videochat.php:1282
  - object property '$session->username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/h5videochat.php:1306
  - object property '$session->username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/h5videochat.php:1331
  - object property '$session->username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/h5videochat.php:1408
  - object property '$session->username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/h5videochat.php:1532
  - object property '$user->user_nicename' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/h5videochat.php:1541
  - object property '$user->user_nicename' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/h5videochat.php:1675
  - object property '$session->username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/h5videochat.php:2114
  - object property '$session->username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/h5videochat.php:2117
  - object property '$session->username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/h5videochat.php:2381
  - object property '$sender->user_nicename' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/h5videochat.php:2467
  - object property '$sqlRow->username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/h5videochat.php:2483
  - object property '$sqlRow->username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/h5videochat.php:2485
  - object property '$sqlRow->username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/h5videochat.php:2515
  - object property '$sqlRow->username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/h5videochat.php:2648
  - object property '$session->username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/h5videochat.php:2685
  - object property '$session->username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/h5videochat.php:3362
  - object property '$user->user_nicename' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/h5videochat.php:3364
  - object property '$user->user_nicename' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/h5videochat.php:4540
  - object property '$sqlRow->username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/h5videochat.php:4549
  - object property '$sqlRow->username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/h5videochat.php:4551
  - object property '$sqlRow->username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/options.php:1810
  - object property '$current_user->user_nicename' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/options.php:1848
  - object property '$current_user->user_nicename' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/options.php:4267
  - object property '$current_user->user_nicename' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/options.php:4715
  - object property '$current_user->user_nicename' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/options.php:4925
  - object property '$current_user->user_nicename' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/options.php:6298
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
inc/options.php:6318
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
inc/shortcodes.php:1735
  - object property '$user->user_nicename' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/shortcodes.php:2158
  - object property '$current_user->user_nicename' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/shortcodes.php:2247
  - object property '$current_user->user_nicename' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/shortcodes.php:2249
  - object property '$current_user->user_email' of personal types {'email'} is found.
  - Data types: email
inc/shortcodes.php:2500
  - object property '$performer->user_email' of personal types {'email'} is found.
  - Data types: email
inc/shortcodes.php:2881
  - object property '$current_user->user_nicename' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/shortcodes.php:2883
  - object property '$current_user->user_email' of personal types {'email'} is found.
  - Data types: email
inc/shortcodes.php:4487
  - object property '$webcamPost->post_password' of personal types {'password'} is found.
  - Data types: password
inc/shortcodes.php:6131
  - object property '$author->user_email' of personal types {'email'} is found.
  - Data types: email
inc/shortcodes.php:6243
  - object property '$sender->user_nicename' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/shortcodes.php:6549
  - object property '$client->user_email' of personal types {'email'} is found.
  - Data types: email
inc/shortcodes.php:6689
  - object property '$sender->user_nicename' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/shortcodes.php:6942
  - object property '$sender->user_nicename' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/shortcodes.php:7007
  - object property '$current_user->user_nicename' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/shortcodes.php:7009
  - object property '$current_user->user_email' of personal types {'email'} is found.
  - Data types: email
inc/shortcodes.php:7046
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
inc/streams.php:68
  - object property '$session->username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/streams.php:187
  - object property '$session->username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:1705
  - object property '$session->username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:1750
  - object property '$session->username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:2619
  - object property '$chatRow->username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:2657
  - object property '$session->username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:2680
  - object property '$chatRow->username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:2691
  - object property '$chatRow->username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:2693
  - object property '$chatRow->username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:3753
  - object property '$user->user_nicename' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:3764
  - object property '$user->user_nicename' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:3788
  - object property '$user->user_nicename' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:3798
  - object property '$user->user_nicename' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:3828
  - object property '$user->user_nicename' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:4792
  - object property '$session->username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:5611
  - object property '$user->user_nicename' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:5920
  - object property '$session->username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta 

inc/h5videochat.php:2235
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/h5videochat.php:2238
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/h5videochat.php:2353
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/h5videochat.php:3255
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/h5videochat.php:3314
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/options.php:2742
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/shortcodes.php:693
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/shortcodes.php:708
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/shortcodes.php:711
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/shortcodes.php:777
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
inc/shortcodes.php:778
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
inc/shortcodes.php:1174
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
inc/shortcodes.php:1175
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
inc/shortcodes.php:1180
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
inc/shortcodes.php:1195
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
inc/shortcodes.php:1349
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
inc/shortcodes.php:1588
  - variable '$firstname' of personal types {'first_name'} is found.
  - Data types: first_name
inc/shortcodes.php:1589
  - variable '$lastname' of personal types {'last_name'} is found.
  - Data types: last_name
inc/shortcodes.php:1593
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
inc/shortcodes.php:1599
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
inc/shortcodes.php:1673
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
inc/shortcodes.php:1674
  - variable '$firstname' of personal types {'first_name'} is found.
  - Data types: first_name
inc/shortcodes.php:1675
  - variable '$lastname' of personal types {'last_name'} is found.
  - Data types: last_name
inc/shortcodes.php:1694
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
inc/shortcodes.php:1839
  - variable '$firstname' of personal types {'first_name'} is found.
  - Data types: first_name
inc/shortcodes.php:1843
  - variable '$lastname' of personal types {'last_name'} is found.
  - Data types: last_name
inc/shortcodes.php:1862
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
inc/shortcodes.php:2403
  - variable '$performer_username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/shortcodes.php:2404
  - variable '$performer_email' of personal types {'email'} is found.
  - Data types: email
inc/shortcodes.php:2406
  - variable '$performer_username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/shortcodes.php:2409
  - variable '$performer_email' of personal types {'email'} is found.
  - Data types: email
inc/shortcodes.php:2428
  - variable '$random_password' of personal types {'password'} is found.
  - Data types: password
inc/shortcodes.php:2429
  - variable '$performer_email' of personal types {'email'} is found.
  - Data types: email
inc/shortcodes.php:2429
  - variable '$random_password' of personal types {'password'} is found.
  - Data types: password
inc/shortcodes.php:2429
  - variable '$performer_username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/shortcodes.php:2431
  - variable '$performer_email' of personal types {'email'} is found.
  - Data types: email
inc/shortcodes.php:2431
  - variable '$random_password' of personal types {'password'} is found.
  - Data types: password
inc/shortcodes.php:2431
  - variable '$performer_username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/shortcodes.php:2436
  - variable '$random_password' of personal types {'password'} is found.
  - Data types: password
inc/shortcodes.php:7042
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
inc/shortcodes.php:7046
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
inc/shortcodes.php:7076
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
inc/shortcodes.php:9211
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/streams.php:107
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
inc/streams.php:110
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
inc/streams.php:144
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
inc/streams.php:157
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
ppv-live-webcams.php:1865
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:1876
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:1882
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:1897
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:1913
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:1924
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:1936
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:1936
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:1939
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:2000
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:2327
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:2344
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:2349
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:2351
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:2352
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:2416
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:2429
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:2490
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:2514
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:2522
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:2543
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:2556
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:2638
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:5045
  - variable '$username1' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:5046
  - variable '$username2' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:5051
  - variable '$username1' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:5051
  - variable '$username2' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:5329
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:5329
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:5331
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:5350
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:5404
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:5430
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:5453
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:5453
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:5611
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:5615
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:5616
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:5636
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:5642
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:5724
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:5746
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:5775
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:5818
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:5900
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:5925
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
ppv-live-webcams.php:6327
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta 

inc/shortcodes.php:1285
  - CRYPTOGRAPHY call to wp_set_password($password, $user_id) alters data types {'user_meta'}. Passed arguments: 0: $password (string), 1: $user_id (int).
  - Data types: user_meta
inc/shortcodes.php:2429
  - CRYPTOGRAPHY call to wp_create_user($performer_username, $random_password, $performer_email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $username (string), 1: $password (string), 2: $email (string). Returns (int|WP_Error).
  - Data types: user, user_meta
inc/shortcodes.php:2440
  - CRYPTOGRAPHY call to wp_update_user(["ID" => $user_id, "role" => $options["rolePerformer"]]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
ppv-live-webcams.php:4007
  - CRYPTOGRAPHY call to wp_update_user($userdata) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
ppv-live-webcams.php:6151
  - CRYPTOGRAPHY call to wp_update_user(["ID" => $member->ID, "role" => sanitize_text_field($options["rolePerformer"])]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta 

inc/shortcodes.php:939
  - API call to wp_remote_get("https://www.google.com/recaptcha/api/siteverify" . "?secret=" . $options["recaptchaSecret"] . "&response=" . $recaptcha_response). Passed arguments: 0: $url (string). Returns (array|WP_Error).
  - Data types: remote
inc/shortcodes.php:1153
  - API call to wp_remote_get("https://www.google.com/recaptcha/api/siteverify" . "?secret=" . $options["recaptchaSecret"] . "&response=" . $recaptcha_response). Passed arguments: 0: $url (string). Returns (array|WP_Error).
  - Data types: remote
inc/shortcodes.php:1256
  - API call to wp_remote_get("https://www.google.com/recaptcha/api/siteverify" . "?secret=" . $options["recaptchaSecret"] . "&response=" . $recaptcha_response). Passed arguments: 0: $url (string). Returns (array|WP_Error).
  - Data types: remote
inc/shortcodes.php:1639
  - API call to wp_remote_get("https://www.google.com/recaptcha/api/siteverify" . "?secret=" . $options["recaptchaSecret"] . "&response=" . $recaptcha_response). Passed arguments: 0: $url (string). Returns (array|WP_Error).
  - Data types: remote 

inc/buddypress.php:75
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
inc/buddypress.php:78
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/buddypress.php:90
  - RETRIEVAL call to get_post_meta($postID, "performerID", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/buddypress.php:93
  - RETRIEVAL call to get_post_meta($postID, "performerID", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/buddypress.php:100
  - RETRIEVAL call to get_userdata($performerID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/buddypress.php:108
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/buddypress.php:154
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/buddypress.php:175
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/h5videochat.php:33
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
inc/h5videochat.php:41
  - RETRIEVAL call to get_user_meta($current_user->ID, "studioDisabled", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/h5videochat.php:47
  - RETRIEVAL call to get_user_meta($current_user->ID, "currentWebcam", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/h5videochat.php:49
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/h5videochat.php:60
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/h5videochat.php:70
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/h5videochat.php:103
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/h5videochat.php:159
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/h5videochat.php:176
  - RETRIEVAL call to get_userdata($userID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/h5videochat.php:256
  - RETRIEVAL call to get_post_meta($postID, "calls_only", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:263
  - RETRIEVAL call to get_post_meta($postID, "bans", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:314
  - RETRIEVAL call to get_post_meta($postID, "vw_accessList", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:347
  - RETRIEVAL call to get_post_meta($postID, "performer", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:348
  - RETRIEVAL call to get_post_meta($postID, "performerUserID", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:380
  - RETRIEVAL call to get_post_meta($postID, "group_disabled", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:643
  - RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
inc/h5videochat.php:936
  - RETRIEVAL call to get_user_meta($session->uid, "h5v_sfx", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/h5videochat.php:937
  - RETRIEVAL call to get_user_meta($session->uid, "h5v_audio", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/h5videochat.php:938
  - RETRIEVAL call to get_user_meta($session->uid, "h5v_dark", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/h5videochat.php:939
  - RETRIEVAL call to get_user_meta($session->uid, "h5v_pip", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/h5videochat.php:940
  - RETRIEVAL call to get_user_meta($session->uid, "h5v_min", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/h5videochat.php:941
  - RETRIEVAL call to get_user_meta($session->uid, "h5v_reveal", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/h5videochat.php:942
  - RETRIEVAL call to get_user_meta($session->uid, "h5v_reveal_warmup", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/h5videochat.php:962
  - RETRIEVAL call to get_post_meta($post->ID, "requests_disable", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:969
  - RETRIEVAL call to get_post_meta($post->ID, "room_private", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:977
  - RETRIEVAL call to get_post_meta($post->ID, "calls_only", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:984
  - RETRIEVAL call to get_post_meta($post->ID, "group_disabled", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:992
  - RETRIEVAL call to get_post_meta($post->ID, "room_audio", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:1000
  - RETRIEVAL call to get_post_meta($post->ID, "room_text", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:1008
  - RETRIEVAL call to get_post_meta($post->ID, "room_conference", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:1016
  - RETRIEVAL call to get_post_meta($post->ID, "conference_auto", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:1022
  - RETRIEVAL call to get_post_meta($post->ID, "room_slots", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:1056
  - RETRIEVAL call to get_userdata($session->uid) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/h5videochat.php:1071
  - RETRIEVAL call to get_post_meta($post->ID, "vw_presentationMode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:1081
  - RETRIEVAL call to get_post_meta($post->ID, "party", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:1121
  - RETRIEVAL call to get_post_meta($post->ID, "external_rtmp", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:1130
  - RETRIEVAL call to get_post_meta($post->ID, "stream_record", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:1137
  - RETRIEVAL call to get_post_meta($post->ID, "stream_record_private", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:1144
  - RETRIEVAL call to get_post_meta($post->ID, "stream_record_all", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:1153
  - RETRIEVAL call to get_post_meta($post->ID, "gifts", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:1162
  - RETRIEVAL call to get_post_meta($post->ID, "goals_panel", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:1171
  - RETRIEVAL call to get_post_meta($post->ID, "goals_sort", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:1181
  - RETRIEVAL call to get_post_meta($post->ID, "question_closed", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:1199
  - RETRIEVAL call to get_user_meta($session->uid, "h5v_sfx", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/h5videochat.php:1206
  - RETRIEVAL call to get_user_meta($session->uid, "h5v_dark", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/h5videochat.php:1213
  - RETRIEVAL call to get_user_meta($session->uid, "h5v_pip", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/h5videochat.php:1220
  - RETRIEVAL call to get_user_meta($session->uid, "h5v_min", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/h5videochat.php:1228
  - RETRIEVAL call to get_user_meta($session->uid, "h5v_audio", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/h5videochat.php:1235
  - RETRIEVAL call to get_user_meta($session->uid, "h5v_reveal", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/h5videochat.php:1240
  - RETRIEVAL call to get_user_meta($session->uid, "h5v_reveal_warmup", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/h5videochat.php:1361
  - RETRIEVAL call to get_post_meta($post->ID, "room_audio", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:1362
  - RETRIEVAL call to get_post_meta($post->ID, "room_text", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:1486
  - RETRIEVAL call to get_post_meta($post->ID, "video_teaser", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:1513
  - RETRIEVAL call to get_post_meta($postID, "vw_presentationMode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:1530
  - RETRIEVAL call to get_userdata($userID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/h5videochat.php:1539
  - RETRIEVAL call to get_userdata($performerID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/h5videochat.php:1579
  - RETRIEVAL call to get_userdata($userID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/h5videochat.php:1604
  - RETRIEVAL call to get_post_meta($post->ID, "performer", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:1605
  - RETRIEVAL call to get_post_meta($post->ID, "performerUserID", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:1615
  - RETRIEVAL call to get_post_meta($post->ID, "room_conference", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:1617
  - RETRIEVAL call to get_post_meta($post->ID, "room_audio", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:1618
  - RETRIEVAL call to get_post_meta($post->ID, "room_text", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:1666
  - RETRIEVAL call to get_post_meta($post->ID, "requests_disable", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:1670
  - RETRIEVAL call to get_post_meta($post->ID, "privateShow", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:1682
  - RETRIEVAL call to get_post_meta($post->ID, "room_private", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:1687
  - RETRIEVAL call to get_post_meta($post->ID, "calls_only", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:1692
  - RETRIEVAL call to get_post_meta($post->ID, "group_disabled", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:1702
  - RETRIEVAL call to get_post_meta($post->ID, "groupCPM", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:1705
  - RETRIEVAL call to get_post_meta($post->ID, "groupMode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:1757
  - RETRIEVAL call to get_user_meta($session->uid, "currentWebcam", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/h5videochat.php:1795
  - RETRIEVAL call to get_post_meta($post->ID, "party", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:1832
  - RETRIEVAL call to get_post_meta($post->ID, "video_teaser", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:1912
  - RETRIEVAL call to get_post_meta($post->ID, "external_rtmp", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:1948
  - RETRIEVAL call to get_post_meta($post->ID, "question_closed", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:1959
  - RETRIEVAL call to get_post_meta($post->ID, "question_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:1979
  - RETRIEVAL call to get_post_meta($post->ID, "goals_panel", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:1983
  - RETRIEVAL call to get_post_meta($post->ID, "goals_sort", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:1998
  - RETRIEVAL call to get_post_meta($post->ID, "gifts", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:1998
  - RETRIEVAL call to get_userdata($session->uid) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/h5videochat.php:2071
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/h5videochat.php:2078
  - RETRIEVAL call to get_post_meta($postID, "goals", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:2248
  - RETRIEVAL call to get_post_meta($post->ID, "presentationMedia", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:2260
  - RETRIEVAL call to get_post_meta($post->ID, "room_conference", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:2263
  - RETRIEVAL call to get_post_meta($post->ID, "room_slots", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:2380
  - RETRIEVAL call to get_userdata($message->sender_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/h5videochat.php:2553
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/h5videochat.php:2627
  - RETRIEVAL call to get_post($roomID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/h5videochat.php:2689
  - RETRIEVAL call to get_post_meta($postID, "groupCPM", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:2690
  - RETRIEVAL call to get_post_meta($postID, "performer", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:2691
  - RETRIEVAL call to get_post_meta($postID, "sessionStart", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:2692
  - RETRIEVAL call to get_post_meta($postID, "checkin", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:2693
  - RETRIEVAL call to get_post_meta($postID, "privateShow", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:2708
  - RETRIEVAL call to get_userdata($userID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/h5videochat.php:2768
  - RETRIEVAL call to get_user_meta($userID, $key, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/h5videochat.php:2925
  - RETRIEVAL call to get_post_meta($postID, "bans", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:2981
  - RETRIEVAL call to get_post_meta($postID, "privateShow", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:2983
  - RETRIEVAL call to get_post_meta($postID, "performerUserID", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:3249
  - RETRIEVAL call to get_post_meta($postID, "bans", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:3308
  - RETRIEVAL call to get_post_meta($postID, "bans", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:3354
  - RETRIEVAL call to get_userdata($TuserID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/h5videochat.php:3592
  - RETRIEVAL call to get_post($partyID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/h5videochat.php:3657
  - RETRIEVAL call to get_post_meta($partyID, "party_reserved", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:3666
  - RETRIEVAL call to get_post($nextRoomID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/h5videochat.php:3766
  - RETRIEVAL call to get_post_meta($post->ID, "room_conference", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:3767
  - RETRIEVAL call to get_post_meta($post->ID, "conference_auto", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:3797
  - RETRIEVAL call to get_post_meta($post->ID, "performer", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:3992
  - RETRIEVAL call to get_user_meta($userID, "tipsRecent", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/h5videochat.php:4015
  - RETRIEVAL call to get_user_meta($userID, "vwTipLast", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/h5videochat.php:4103
  - RETRIEVAL call to get_user_meta($performerID, "tipsRecent", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/h5videochat.php:4116
  - RETRIEVAL call to get_user_meta($targetID, "tipsRecent", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/h5videochat.php:4129
  - RETRIEVAL call to get_post_meta($postID, "gifts", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:4300
  - RETRIEVAL call to get_post_meta($postID, "question_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:4368
  - RETRIEVAL call to get_post_meta($postID, "question_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:4549
  - RETRIEVAL call to get_user_by($userName, $sqlRow->username) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
inc/h5videochat.php:4551
  - RETRIEVAL call to get_user_by("login", $sqlRow->username) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
inc/h5videochat.php:4684
  - RETRIEVAL call to get_post_meta($postID, "party", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:4700
  - RETRIEVAL call to get_post_meta($partyID, "partyRoomID", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:4708
  - RETRIEVAL call to get_post($partyRoomID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/h5videochat.php:4739
  - RETRIEVAL call to get_post_meta($postID, "party", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/h5videochat.php:4777
  - RETRIEVAL call to get_user_meta($userID, "tipsRecent", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/h5videochat.php:4794
  - RETRIEVAL call to get_user_meta($userID, "balance_warning" . $privateUID, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/h5videochat.php:4836
  - RETRIEVAL call to get_user_meta($userID, "updated_options", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/h5videochat.php:4852
  - RETRIEVAL call to get_post_meta($postID, "updated_" . $update, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/options.php:35
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/options.php:54
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/options.php:1493
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/options.php:2278
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
inc/options.php:2452
  - RETRIEVAL call to get_option("vmls_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/options.php:2736
  - RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
inc/options.php:3287
  - RETRIEVAL call to get_post($disablePlaylist) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/options.php:3293
  - RETRIEVAL call to get_post_meta($roomPost->ID, "performer", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/options.php:3356
  - RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
inc/options.php:4174
  - RETRIEVAL call to get_currentuserinfo() alters data types {'user', 'user_meta'}. Returns (bool|WP_User).
  - Data types: user, user_meta
inc/options.php:4631
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
inc/options.php:5651
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/options.php:5683
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/options.php:5703
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/options.php:5752
  - RETRIEVAL call to get_post($pid) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/options.php:5873
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/options.php:6082
  - RETRIEVAL call to get_user_meta($user->ID, "vwVerified", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/options.php:6083
  - RETRIEVAL call to get_user_meta($user->ID, "vwSuspended", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/options.php:6145
  - RETRIEVAL call to get_user_meta($user_id, "vwVerified", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/options.php:6146
  - RETRIEVAL call to get_user_meta($user_id, "vwUpdated", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/options.php:6148
  - RETRIEVAL call to get_user_meta($user_id, "studioID", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/options.php:6157
  - RETRIEVAL call to get_user_meta($user_id, "videowhisper_activate", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/options.php:6276
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/options.php:6281
  - RETRIEVAL call to get_userdata($user_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/options.php:6303
  - RETRIEVAL call to get_user_meta($user_id, "vwVerified", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/options.php:6304
  - RETRIEVAL call to get_user_meta($user_id, "vwVerifiedTime", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/options.php:6306
  - RETRIEVAL call to get_user_meta($user_id, "vwSuspended", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/options.php:6307
  - RETRIEVAL call to get_user_meta($user_id, "vwUpdated", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/options.php:6336
  - RETRIEVAL call to get_user_meta($user_id, "vwVerifiedReason", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/options.php:6351
  - RETRIEVAL call to get_user_meta($user_id, "videowhisper_ip_register", true) alters data types {'ip', 'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: ip, user_meta
inc/options.php:6352
  - RETRIEVAL call to get_user_meta($user_id, "videowhisper_ip_newpassword", true) alters data types {'ip', 'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: ip, user_meta
inc/options.php:6370
  - RETRIEVAL call to get_user_meta($user->ID, "vwf_" . $fieldName, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/options.php:6378
  - RETRIEVAL call to get_user_meta($user->ID, "vwf_" . $fieldName, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/options.php:6412
  - RETRIEVAL call to get_users($args) alters data types {'user', 'user_meta'}. Passed arguments: 0: $args (array). Returns (array).
  - Data types: user, user_meta
inc/options.php:6445
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/options.php:6626
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
inc/options.php:6693
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/options.php:6707
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/options.php:6709
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
inc/requirements.php:136
  - RETRIEVAL call to get_option( . "_requirementsRemind") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/requirements.php:147
  - RETRIEVAL call to get_option( . "_requirements") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/requirements.php:358
  - RETRIEVAL call to get_option($requirement["option"]) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:53
  - RETRIEVAL call to get_post_meta($postID, "statsTimeOnline", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:272
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/shortcodes.php:490
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:622
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:639
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/shortcodes.php:655
  - RETRIEVAL call to get_post_meta($item->ID, "requests_disable", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:670
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:687
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/shortcodes.php:692
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
inc/shortcodes.php:699
  - RETRIEVAL call to get_post_meta($post->ID, "external_rtmp", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:763
  - RETRIEVAL call to get_post_meta($postID, "pushStreams", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:832
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:1000
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:1039
  - RETRIEVAL call to get_userdata($user_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/shortcodes.php:1044
  - RETRIEVAL call to get_user_meta($user_id, "videowhisper_newpassword", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:1180
  - RETRIEVAL call to get_user_by("email", $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
inc/shortcodes.php:1225
  - RETRIEVAL call to get_userdata($user_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/shortcodes.php:1229
  - RETRIEVAL call to get_user_meta($user_id, "videowhisper_newpassword", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:1381
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:1416
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
inc/shortcodes.php:1560
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:1617
  - RETRIEVAL call to get_users(["meta_key" => "videowhisper_ip_register", "meta_value" => self->get_ip_address(), "meta_compare" => "="]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $args (array). Returns (array).
  - Data types: user, user_meta
inc/shortcodes.php:1707
  - RETRIEVAL call to get_userdata($user_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/shortcodes.php:1751
  - RETRIEVAL call to get_user_meta($user->ID, "vwf_" . $fieldName, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:1887
  - RETRIEVAL call to get_user_meta($current_user->ID, "vwf_" . $fieldName, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:1892
  - RETRIEVAL call to get_user_meta($current_user->ID, "vwf_" . $fieldName, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:1959
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:1978
  - RETRIEVAL call to get_user_meta($user_id, "videowhisper_activate", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:2001
  - RETRIEVAL call to get_user_meta($user->ID, "videowhisper_activate") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:2014
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:2020
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
inc/shortcodes.php:2027
  - RETRIEVAL call to get_user_meta($current_user->ID, "vwVerified", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:2028
  - RETRIEVAL call to get_user_meta($current_user->ID, "vwSuspended", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:2035
  - RETRIEVAL call to get_user_meta($current_user->ID, "vwVerifiedReason", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:2079
  - RETRIEVAL call to get_user_meta($current_user->ID, "vwf_" . $fieldName, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:2084
  - RETRIEVAL call to get_user_meta($current_user->ID, "vwf_" . $fieldName, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:2174
  - RETRIEVAL call to get_user_meta($current_user->ID, "vwf_" . $fieldName, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:2219
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:2238
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
inc/shortcodes.php:2307
  - RETRIEVAL call to get_user_meta($collectID, "studioID", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:2314
  - RETRIEVAL call to get_userdata($collectID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/shortcodes.php:2315
  - RETRIEVAL call to get_userdata($studioID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/shortcodes.php:2317
  - RETRIEVAL call to get_user_meta($collectID, "studioCollectLast", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:2318
  - RETRIEVAL call to get_user_meta($collectID, "studioCollectTotal", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:2338
  - RETRIEVAL call to get_user_meta($transactionsID, "studioID", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:2342
  - RETRIEVAL call to get_userdata($transactionsID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/shortcodes.php:2419
  - RETRIEVAL call to get_users($args) alters data types {'user', 'user_meta'}. Passed arguments: 0: $args (array). Returns (array).
  - Data types: user, user_meta
inc/shortcodes.php:2448
  - RETRIEVAL call to get_userdata($user_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/shortcodes.php:2464
  - RETRIEVAL call to get_user_meta($user_id, "studioID", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:2489
  - RETRIEVAL call to get_users($args) alters data types {'user', 'user_meta'}. Passed arguments: 0: $args (array). Returns (array).
  - Data types: user, user_meta
inc/shortcodes.php:2519
  - RETRIEVAL call to get_user_meta($performer->ID, "studioCollectLast", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:2520
  - RETRIEVAL call to get_user_meta($performer->ID, "studioCollectTotal", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:2525
  - RETRIEVAL call to get_user_meta($performer->ID, "studioDisabled", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:2548
  - RETRIEVAL call to get_user_meta($performer->ID, "studioPassword", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:2555
  - RETRIEVAL call to get_user_meta($performer->ID, "currentWebcam", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:2629
  - RETRIEVAL call to get_users($args) alters data types {'user', 'user_meta'}. Passed arguments: 0: $args (array). Returns (array).
  - Data types: user, user_meta
inc/shortcodes.php:2727
  - RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
inc/shortcodes.php:2741
  - RETRIEVAL call to get_post_meta($webcam->ID, "performerID", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:2745
  - RETRIEVAL call to get_userdata(intval($performerID)) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/shortcodes.php:2853
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:2870
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
inc/shortcodes.php:2909
  - RETRIEVAL call to get_user_meta($current_user->ID, "studioDisabled", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:2930
  - RETRIEVAL call to get_post($selectWebcam) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/shortcodes.php:2937
  - RETRIEVAL call to get_post_meta($webcam->ID, "performerID", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:2964
  - RETRIEVAL call to get_user_meta($current_user->ID, "currentWebcam", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:3042
  - RETRIEVAL call to get_user_by("email", $value) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
inc/shortcodes.php:3045
  - RETRIEVAL call to get_user_by("login", $value) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
inc/shortcodes.php:3087
  - RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
inc/shortcodes.php:3100
  - RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
inc/shortcodes.php:3113
  - RETRIEVAL call to get_user_meta($current_user->ID, "currentWebcam", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:3118
  - RETRIEVAL call to get_post_meta($webcam->ID, "performerID", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:3122
  - RETRIEVAL call to get_userdata($performerID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/shortcodes.php:3137
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/shortcodes.php:3184
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/shortcodes.php:3602
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/shortcodes.php:3642
  - RETRIEVAL call to get_post_meta($postID, "vw_costPerMinuteGroup", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:3651
  - RETRIEVAL call to get_post_meta($postID, "vw_slots2way", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:3709
  - RETRIEVAL call to get_post_meta($postID, $key, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:3731
  - RETRIEVAL call to get_post_meta($postID, "archivedSessions", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:3766
  - RETRIEVAL call to get_user_by("email", $value) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
inc/shortcodes.php:3768
  - RETRIEVAL call to get_user_by("login", $value) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
inc/shortcodes.php:3814
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/shortcodes.php:3836
  - RETRIEVAL call to get_post_meta($postID, "vw_costPerMinute", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:3837
  - RETRIEVAL call to get_post_meta($postID, "vw_costPerMinuteGroup", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:3847
  - RETRIEVAL call to get_post_meta($postID, "groupMode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:3863
  - RETRIEVAL call to get_post_meta($postID, "room_private", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:3879
  - RETRIEVAL call to get_post_meta($postID, "groupMode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:3911
  - RETRIEVAL call to get_post_meta($postID, "room_private", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:3919
  - RETRIEVAL call to get_post_meta($postID, "roomInterface", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:3979
  - RETRIEVAL call to get_post_meta($postID, "performerID", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:3984
  - RETRIEVAL call to get_user_by("id", $performerID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
inc/shortcodes.php:4023
  - RETRIEVAL call to get_post_meta($postID, "hasSnapshot", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:4023
  - RETRIEVAL call to get_post_meta($postID, "hasPicture", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:4163
  - RETRIEVAL call to get_user_meta($current_user->ID, "vw_provider_subscriptions", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:4164
  - RETRIEVAL call to get_post_meta($postID, "vw_subscription_tier", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:4168
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:4190
  - RETRIEVAL call to get_post_meta($postID, "vw_costPerMinute", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:4210
  - RETRIEVAL call to get_post_meta($postID, "vw_costPerMinuteaudio", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:4228
  - RETRIEVAL call to get_post_meta($postID, "vw_costPerMinutetext", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:4250
  - RETRIEVAL call to get_post_meta($postID, "vw_costPerMinuteGroup", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:4273
  - RETRIEVAL call to get_post_meta($postID, "vw_slots2way", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:4282
  - RETRIEVAL call to get_post_meta($postID, "picture", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:4283
  - RETRIEVAL call to get_post_meta($postID, "thumbPicture", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:4298
  - RETRIEVAL call to get_post_meta($postID, "showImage", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:4301
  - RETRIEVAL call to get_post_meta($postID, "snapshot", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:4302
  - RETRIEVAL call to get_post_meta($postID, "thumbSnapshot", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:4304
  - RETRIEVAL call to get_post_meta($postID, "performerUserID", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:4305
  - RETRIEVAL call to get_post_meta($postID, "performer", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:4333
  - RETRIEVAL call to get_post_meta($postID, "vw_roomLabel", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:4359
  - RETRIEVAL call to get_post_meta($postID, "vw_roomBrief", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:4386
  - RETRIEVAL call to get_post_meta($postID, "vw_banCountries", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:4455
  - RETRIEVAL call to get_post_meta($postID, "vw_accessList", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:4475
  - RETRIEVAL call to get_post_meta($postID, "vw_accessPrice", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:4641
  - RETRIEVAL call to get_post_meta($postID, "vwf_" . $fieldName, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:4649
  - RETRIEVAL call to get_post_meta($postID, "vwf_" . $fieldName, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:4725
  - RETRIEVAL call to get_post_meta($postID, "external_rtmp", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:4795
  - RETRIEVAL call to get_post_meta($postID, "stream_record", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:4796
  - RETRIEVAL call to get_post_meta($postID, "stream_record_private", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:4798
  - RETRIEVAL call to get_post_meta($postID, "stream_record_all", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:5255
  - RETRIEVAL call to get_post_meta($postID, "contentIDs", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:5263
  - RETRIEVAL call to get_post(abs($selectedInt)) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/shortcodes.php:5294
  - RETRIEVAL call to get_post_meta($postID, "contentIDs", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:5399
  - RETRIEVAL call to get_post_meta($postID, "productIDs", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:5407
  - RETRIEVAL call to get_post(abs($selectedInt)) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/shortcodes.php:5439
  - RETRIEVAL call to get_post_meta($postID, "productIDs", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:5600
  - RETRIEVAL call to get_post_meta($postID, "bans", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:5679
  - RETRIEVAL call to get_user_meta($uid, "paidSessionsPrivate", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:5680
  - RETRIEVAL call to get_user_meta($uid, "paidSessionsGroup", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:5713
  - RETRIEVAL call to get_user_meta($uid, "paidSessionsPrivate", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:5714
  - RETRIEVAL call to get_user_meta($uid, "paidSessionsGroup", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:5750
  - RETRIEVAL call to get_user_meta($uid, "paidSessionsPrivate", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:5751
  - RETRIEVAL call to get_user_meta($uid, "paidSessionsGroup", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:5819
  - RETRIEVAL call to get_post_meta($postID, "performer", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:5838
  - RETRIEVAL call to get_post_meta($postID, "performerUserID", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:5846
  - RETRIEVAL call to get_post_meta($postID, "vw_featured", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:5859
  - RETRIEVAL call to get_post_meta($postID, "vw_videos", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:5866
  - RETRIEVAL call to get_post_meta($postID, "vw_pictures", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:5887
  - RETRIEVAL call to get_post_meta($postID, "vw_playlistActive", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:5958
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/shortcodes.php:5970
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:5975
  - RETRIEVAL call to get_post_meta($postID, "question_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:5982
  - RETRIEVAL call to get_post_meta($postID, "question_closed", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:6086
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
inc/shortcodes.php:6095
  - RETRIEVAL call to get_option("VWinlineRecorderOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:6128
  - RETRIEVAL call to get_userdata($post->post_author) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/shortcodes.php:6221
  - RETRIEVAL call to get_post($question->webcam_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/shortcodes.php:6239
  - RETRIEVAL call to get_userdata($message->sender_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/shortcodes.php:6316
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/shortcodes.php:6333
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:6511
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
inc/shortcodes.php:6518
  - RETRIEVAL call to get_option("VWinlineRecorderOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:6546
  - RETRIEVAL call to get_userdata($mainmessage->sender_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/shortcodes.php:6570
  - RETRIEVAL call to get_post_meta($postID, "question_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:6670
  - RETRIEVAL call to get_userdata($message->sender_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/shortcodes.php:6708
  - RETRIEVAL call to get_post_meta($postID, "question_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:6713
  - RETRIEVAL call to get_post_meta($postID, "question_closed", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:6748
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:6760
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
inc/shortcodes.php:6803
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:6815
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
inc/shortcodes.php:6885
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/shortcodes.php:6893
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:6938
  - RETRIEVAL call to get_userdata($message->sender_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/shortcodes.php:6993
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/shortcodes.php:6999
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:7003
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
inc/shortcodes.php:7040
  - RETRIEVAL call to get_user_by("email", $client) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
inc/shortcodes.php:7044
  - RETRIEVAL call to get_user_by("login", $client) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
inc/shortcodes.php:7232
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:7249
  - RETRIEVAL call to get_post_meta($postID, "roomInterface", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:7250
  - RETRIEVAL call to get_post_meta($postID, "stream-type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:7356
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:7406
  - RETRIEVAL call to get_post_meta($postID, "video_teaser", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:7450
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:7500
  - RETRIEVAL call to get_post_meta($postID, "video_teaser", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:7540
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:7719
  - RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
inc/shortcodes.php:7765
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:7800
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:7845
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:7861
  - RETRIEVAL call to get_post_meta($postID, "edate", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:7866
  - RETRIEVAL call to get_post_meta($postID, "vw_roomLabel", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:7870
  - RETRIEVAL call to get_post_meta($postID, "vw_roomBrief", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:7884
  - RETRIEVAL call to get_post_meta($postID, "checkin", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:7894
  - RETRIEVAL call to get_post_meta($postID, "groupMode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:7898
  - RETRIEVAL call to get_post_meta($postID, "groupCPM", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:7932
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:8061
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:8091
  - RETRIEVAL call to get_option("VWvideoShareOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:8758
  - RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
inc/shortcodes.php:8822
  - RETRIEVAL call to get_post_meta($item->ID, "edate", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:8825
  - RETRIEVAL call to get_post_meta($item->ID, "privateShow", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:8839
  - RETRIEVAL call to get_post_meta($item->ID, "vw_ipCamera", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:8839
  - RETRIEVAL call to get_post_meta($item->ID, "vw_playlistActive", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:8851
  - RETRIEVAL call to get_post_meta($item->ID, "customRoomLink", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:8859
  - RETRIEVAL call to get_post_meta($item->ID, "customRoomLink", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:8874
  - RETRIEVAL call to get_post_meta($item->ID, "vw_roomBrief", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:8886
  - RETRIEVAL call to get_post_meta($item->ID, "vw_roomLabel", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:8901
  - RETRIEVAL call to get_post_meta($item->ID, "groupMode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:8906
  - RETRIEVAL call to get_post_meta($item->ID, "groupCPM", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:8912
  - RETRIEVAL call to get_post_meta($item->ID, "groupParameters", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:8915
  - RETRIEVAL call to get_post_meta($item->ID, "paidSessionsPrivate", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:8916
  - RETRIEVAL call to get_post_meta($item->ID, "paidSessionsGroup", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:8920
  - RETRIEVAL call to get_post_meta($item->ID, "rateStarReview_rating", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:8931
  - RETRIEVAL call to get_post_meta($item->ID, "vw_featured", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:8937
  - RETRIEVAL call to get_post_meta($item->ID, "checkin", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:8954
  - RETRIEVAL call to get_post_meta($item->ID, "requests_disable", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:8958
  - RETRIEVAL call to get_post_meta($item->ID, "group_disabled", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:9019
  - RETRIEVAL call to get_post_meta($postID, "mode2way", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:9024
  - RETRIEVAL call to get_post_meta($item->ID, "roomInterface", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:9148
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:9209
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
inc/shortcodes.php:9229
  - RETRIEVAL call to get_post_meta($postID, "stream-protocol", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:9230
  - RETRIEVAL call to get_post_meta($postID, "stream-mode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:9298
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:9337
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/shortcodes.php:9343
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
inc/shortcodes.php:9662
  - RETRIEVAL call to get_post_meta($postID, "contentIDs", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:9675
  - RETRIEVAL call to get_post_meta($postID, "productIDs", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:9705
  - RETRIEVAL call to get_post_meta($postID, "video_teaser", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:9722
  - RETRIEVAL call to get_post_meta($postID, "maxViewers", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:9725
  - RETRIEVAL call to get_post_meta($postID, "maxDate", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:9736
  - RETRIEVAL call to get_post_meta($postID, "paidSessionsPrivate", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:9737
  - RETRIEVAL call to get_post_meta($postID, "paidSessionsGroup", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:9772
  - RETRIEVAL call to get_post_meta($postID, "vw_videos", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:9793
  - RETRIEVAL call to get_post_meta($postID, "vw_pictures", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:9890
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:9902
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:9955
  - RETRIEVAL call to get_post_meta($postID, "vwf_" . $fieldName, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:9963
  - RETRIEVAL call to get_post_meta($postID, "vwf_" . $fieldName, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:9993
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:10053
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
inc/shortcodes.php:10056
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/shortcodes.php:10066
  - RETRIEVAL call to get_post_meta($postID, "groupCPM", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:10109
  - RETRIEVAL call to get_post_meta($postID, "buddypressGroup", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:10120
  - RETRIEVAL call to get_post_meta($postID, "roomInterface", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:10121
  - RETRIEVAL call to get_post_meta($postID, "vw_playlistActive", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:10135
  - RETRIEVAL call to get_post_meta($postID, "groupParameters", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:10153
  - RETRIEVAL call to get_post_meta($postID, "mode2way", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:10168
  - RETRIEVAL call to get_post_meta($postID, "modeVoyeur", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:10191
  - RETRIEVAL call to get_post_meta($postID, "group_disabled", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:10421
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/streams.php:19
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/streams.php:26
  - RETRIEVAL call to get_user_meta($user->ID, "vwActivityPost", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/streams.php:30
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/streams.php:31
  - RETRIEVAL call to get_post_meta($postID, "groupMode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/streams.php:81
  - RETRIEVAL call to get_post_meta($postID, "pushStreams", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/streams.php:196
  - RETRIEVAL call to get_post_meta($postID, "stream_record", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/streams.php:197
  - RETRIEVAL call to get_post_meta($postID, "stream_record_all", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/streams.php:198
  - RETRIEVAL call to get_post_meta($postID, "stream_record_private", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/streams.php:201
  - RETRIEVAL call to get_post_meta($postID, "privateShow", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/streams.php:446
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/streams.php:455
  - RETRIEVAL call to get_post_meta($postID, "performer", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/streams.php:468
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/streams.php:512
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/streams.php:538
  - RETRIEVAL call to get_post_meta($postID, "snapshotDate", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/streams.php:570
  - RETRIEVAL call to get_post_meta($postID, "stream-protocol", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/streams.php:571
  - RETRIEVAL call to get_post_meta($postID, "stream-type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/streams.php:572
  - RETRIEVAL call to get_post_meta($postID, "vw_ipCamera", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/streams.php:650
  - RETRIEVAL call to get_post_meta($postID, "showImage", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/streams.php:653
  - RETRIEVAL call to get_post_meta($postID, "performerUserID", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/streams.php:663
  - RETRIEVAL call to get_post_meta($postID, "picture", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/streams.php:670
  - RETRIEVAL call to get_post_meta($postID, "snapshot", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/streams.php:682
  - RETRIEVAL call to get_post_meta($postID, "thumbPicture", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/streams.php:695
  - RETRIEVAL call to get_post_meta($postID, "thumbSnapshot", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/streams.php:729
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/streams.php:759
  - RETRIEVAL call to get_post_meta($postID, "stream-webrtc", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/streams.php:765
  - RETRIEVAL call to get_post_meta($postID, "vw_transcode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/streams.php:766
  - RETRIEVAL call to get_post_meta($postID, "stream-codec-video", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/streams.php:767
  - RETRIEVAL call to get_post_meta($postID, "privateShow", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/streams.php:768
  - RETRIEVAL call to get_post_meta($postID, "performer", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/streams.php:769
  - RETRIEVAL call to get_post_meta($postID, "performerUserID", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/streams.php:775
  - RETRIEVAL call to get_post_meta($postID, "stream-protocol", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/streams.php:776
  - RETRIEVAL call to get_post_meta($postID, "stream-type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/streams.php:777
  - RETRIEVAL call to get_post_meta($postID, "stream-mode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/streams.php:906
  - RETRIEVAL call to get_post_meta($postID, "stream-protocol", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/streams.php:912
  - RETRIEVAL call to get_post_meta($postID, "stream-codec-video", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/streams.php:913
  - RETRIEVAL call to get_post_meta($postID, "stream-codec-audio", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/streams.php:926
  - RETRIEVAL call to get_post_meta($postID, "stream-hls", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/streams.php:953
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/streams.php:974
  - RETRIEVAL call to get_post_meta($postID, "vw_transcode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/streams.php:975
  - RETRIEVAL call to get_post_meta($postID, "stream-codec-video", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/streams.php:976
  - RETRIEVAL call to get_post_meta($postID, "privateShow", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/streams.php:977
  - RETRIEVAL call to get_post_meta($postID, "performer", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/streams.php:983
  - RETRIEVAL call to get_post_meta($postID, "stream-protocol", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/streams.php:984
  - RETRIEVAL call to get_post_meta($postID, "stream-type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/streams.php:985
  - RETRIEVAL call to get_post_meta($postID, "stream-hls", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/streams.php:986
  - RETRIEVAL call to get_post_meta($postID, "vw_ipCamera", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/streams.php:1069
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
inc/streams.php:1144
  - RETRIEVAL call to get_post_meta($postID, "stream-codec-video", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/streams.php:1147
  - RETRIEVAL call to get_post_meta($postID, "stream-codec-audio", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/streams.php:1190
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/streams.php:1244
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/streams.php:1303
  - RETRIEVAL call to get_post_meta($info["postID"], "edate", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:67
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:162
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
ppv-live-webcams.php:175
  - RETRIEVAL call to get_userdata($userID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
ppv-live-webcams.php:179
  - RETRIEVAL call to get_user_meta($userID, "currentWebcam", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
ppv-live-webcams.php:269
  - RETRIEVAL call to get_user_meta($userID, "currentWebcam", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
ppv-live-webcams.php:278
  - RETRIEVAL call to get_post(intval($selectWebcam)) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
ppv-live-webcams.php:349
  - RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
ppv-live-webcams.php:359
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:504
  - RETRIEVAL call to get_option("vmls_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:646
  - RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).
ppv-live-webcams.php:671
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:677
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
ppv-live-webcams.php:713
  - RETRIEVAL call to get_post_meta($post->ID, "videowhisper_template", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:767
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:843
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:849
  - RETRIEVAL call to get_post_meta($postID, "vw_roomLabel", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:876
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
ppv-live-webcams.php:884
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:928
  - RETRIEVAL call to get_post_meta($postID, "vw_banCountries", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:932
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
ppv-live-webcams.php:933
  - RETRIEVAL call to get_post_field("post_author", $postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $field (string), 1: $post (int|WP_Post). Returns (string).
  - Data types: post_meta, post, wp_post
ppv-live-webcams.php:978
  - RETRIEVAL call to get_post_meta($postID, "performer", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:990
  - RETRIEVAL call to get_post_meta($postID, "vw_playlistActive", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:1005
  - RETRIEVAL call to get_post_meta($postID, "groupCPM", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:1034
  - RETRIEVAL call to get_post_meta($postID, "vw_ipCamera", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:1034
  - RETRIEVAL call to get_post_meta($postID, "vw_playlistActive", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:1090
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:1138
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:1144
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:1157
  - RETRIEVAL call to get_post_meta($post_id, "edate", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:1166
  - RETRIEVAL call to get_post_meta($post_id, "vw_costPerMinute", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:1170
  - RETRIEVAL call to get_post_meta($post_id, "vw_costPerMinuteGroup", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:1174
  - RETRIEVAL call to get_post_meta($post_id, "customRoomLink", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:1178
  - RETRIEVAL call to get_post_meta($post_id, "vw_earningRatio", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:1182
  - RETRIEVAL call to get_post_meta($post_id, "vw_featured", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:1208
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:1268
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:1316
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:1318
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
ppv-live-webcams.php:1361
  - RETRIEVAL call to get_user_meta($performerID, "currentWebcam", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
ppv-live-webcams.php:1403
  - RETRIEVAL call to get_post_meta($postID, "videowhisper_template", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:1417
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:1449
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:1456
  - RETRIEVAL call to get_post_meta($postID, "archivedSessions", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:1461
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
ppv-live-webcams.php:1531
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:1536
  - RETRIEVAL call to get_post_meta($video_teaser, "video-adaptive", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:1561
  - RETRIEVAL call to get_post_meta($video_teaser, "video-source-file", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:1586
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:1697
  - RETRIEVAL call to get_userdata($privateUID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
ppv-live-webcams.php:1742
  - RETRIEVAL call to get_userdata($privateUID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
ppv-live-webcams.php:1871
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:1876
  - RETRIEVAL call to get_user_by($options["userName"], $username) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
ppv-live-webcams.php:1882
  - RETRIEVAL call to get_user_by("login", $username) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
ppv-live-webcams.php:1913
  - RETRIEVAL call to get_user_by($options["performerName"], $username) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
ppv-live-webcams.php:2005
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:2010
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
ppv-live-webcams.php:2030
  - RETRIEVAL call to get_post_meta($postID, "groupCPM", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:2031
  - RETRIEVAL call to get_post_meta($postID, "performer", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:2032
  - RETRIEVAL call to get_post_meta($postID, "sessionStart", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:2033
  - RETRIEVAL call to get_post_meta($postID, "checkin", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:2034
  - RETRIEVAL call to get_post_meta($postID, "privateShow", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:2036
  - RETRIEVAL call to get_post_meta($postID, "groupMode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $key (string), 2: $single (bool). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:2041
  - RETRIEVAL call to get_post_meta($postID, "roomInterface", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:2046
  - RETRIEVAL call to get_post_meta($postID, "groupParameters", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:2050
  - RETRIEVAL call to get_post_meta($postID, "mode2way", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:2080
  - RETRIEVAL call to get_post_meta($postID, "modeVoyeur", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:2127
  - RETRIEVAL call to get_post_meta($postID, "edate", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:2211
  - RETRIEVAL call to get_post_meta($postID, "bans", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:2310
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:2332
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
ppv-live-webcams.php:2380
  - RETRIEVAL call to get_user_meta($current_user->ID, "vwTipLast", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
ppv-live-webcams.php:2488
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
ppv-live-webcams.php:2617
  - RETRIEVAL call to get_user_by($userName, $userRow->session) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
ppv-live-webcams.php:2619
  - RETRIEVAL call to get_user_by("login", $chatRow->username) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
ppv-live-webcams.php:2691
  - RETRIEVAL call to get_user_by($userName, $chatRow->username) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
ppv-live-webcams.php:2693
  - RETRIEVAL call to get_user_by("login", $chatRow->username) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
ppv-live-webcams.php:2736
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:2762
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:2810
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:2846
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:2917
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:2972
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
ppv-live-webcams.php:2978
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
ppv-live-webcams.php:2988
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:3205
  - RETRIEVAL call to get_option("VWvideoShareOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:3222
  - RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
ppv-live-webcams.php:3236
  - RETRIEVAL call to get_post_meta($video_id, "video-source-file", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:3240
  - RETRIEVAL call to get_post_meta($video_id, "video-adaptive", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:3392
  - RETRIEVAL call to get_post_meta($postID, "video_teaser", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:3398
  - RETRIEVAL call to get_post_meta($video_teaser, "video-adaptive", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:3421
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:3733
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:3774
  - RETRIEVAL call to get_user_by("id", $id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
ppv-live-webcams.php:3817
  - RETRIEVAL call to get_userdata($id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
ppv-live-webcams.php:3966
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:3994
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:4014
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:4045
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:4092
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:4098
  - RETRIEVAL call to get_post_meta($postID, "goals", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:4124
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:4131
  - RETRIEVAL call to get_post_meta($postID, "goal", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:4132
  - RETRIEVAL call to get_post_meta($postID, "goals", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:4269
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:4304
  - RETRIEVAL call to get_user_meta($userID, "micropayments_balance", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
ppv-live-webcams.php:4334
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:4400
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:4414
  - RETRIEVAL call to get_user_meta($userID, "vw_ppv_tempt", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
ppv-live-webcams.php:4417
  - RETRIEVAL call to get_user_meta($userID, "vw_ppv_temp", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
ppv-live-webcams.php:4466
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:4492
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:4514
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:4620
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:4629
  - RETRIEVAL call to get_post_meta($postID, "vw_costPerMinute" . $type, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:4652
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:4662
  - RETRIEVAL call to get_post_meta($postID, "vw_earningRatio", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:4663
  - RETRIEVAL call to get_post_meta($postID, "vw_bonusRatio", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:4696
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:4819
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:4938
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:4966
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:4990
  - RETRIEVAL call to get_post_meta($session->rid, "vw_subscription_tier", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:4994
  - RETRIEVAL call to get_post_field("post_author", $session->rid) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $field (string), 1: $post (int|WP_Post). Returns (string).
  - Data types: post_meta, post, wp_post
ppv-live-webcams.php:4997
  - RETRIEVAL call to get_user_meta($session->uid, "vw_client_subscription_" . $author_id, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
ppv-live-webcams.php:5012
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:5041
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
ppv-live-webcams.php:5043
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:5059
  - RETRIEVAL call to get_post_meta($postID, "edate", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:5061
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:5080
  - RETRIEVAL call to get_userdata($userID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
ppv-live-webcams.php:5088
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
ppv-live-webcams.php:5099
  - RETRIEVAL call to get_post_meta($postID, "performerID", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:5104
  - RETRIEVAL call to get_post_meta($postID, "performerID", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:5126
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
ppv-live-webcams.php:5137
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
ppv-live-webcams.php:5148
  - RETRIEVAL call to get_post_meta($postID, "performerID", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:5153
  - RETRIEVAL call to get_post_meta($postID, "performerID", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:5172
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:5187
  - RETRIEVAL call to get_post_meta($postID, "maxViewers", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:5201
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:5293
  - RETRIEVAL call to get_post_meta($post->ID, "performerID", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:5310
  - RETRIEVAL call to get_post_meta($postID, "rtmp_server", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:5317
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:5332
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:5363
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:5378
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:5421
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:5430
  - RETRIEVAL call to get_post_meta($postID, "performer") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:5525
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:5606
  - RETRIEVAL call to get_userdata($userID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
ppv-live-webcams.php:5622
  - RETRIEVAL call to get_post($channel_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
ppv-live-webcams.php:5697
  - RETRIEVAL call to get_post_meta($postID, "stream-mode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:5863
  - RETRIEVAL call to get_post_meta($postID, "stream-type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
ppv-live-webcams.php:5891
  - RETRIEVAL call to get_userdata($session->uid) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
ppv-live-webcams.php:5988
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:6027
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:6093
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:6105
  - RETRIEVAL call to get_user_by("email", $user) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
ppv-live-webcams.php:6107
  - RETRIEVAL call to get_user_by("login", $user) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
ppv-live-webcams.php:6116
  - RETRIEVAL call to get_userdata($user_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
ppv-live-webcams.php:6123
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
ppv-live-webcams.php:6136
  - RETRIEVAL call to get_user_by("email", $studio) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
ppv-live-webcams.php:6138
  - RETRIEVAL call to get_user_by("login", $studio) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
ppv-live-webcams.php:6220
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:6311
  - RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ppv-live-webcams.php:6323
  - RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
ppv-live-webcams.php:6342
  - RETRIEVAL call to get_post($roomid) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post 

inc/buddypress.php:88
  - STORAGE call to update_post_meta($postID, "buddypressGroup", $bp->groups->current_group->id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/buddypress.php:92
  - STORAGE call to add_post_meta($postID, "performerID", $current_user->ID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: post_meta
inc/h5videochat.php:198
  - STORAGE call to update_post_meta($postID, "performer", $userName) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/h5videochat.php:199
  - STORAGE call to update_post_meta($postID, "performerUserID", $userID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/h5videochat.php:201
  - STORAGE call to update_post_meta($postID, "stream-protocol", "rtsp") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/h5videochat.php:202
  - STORAGE call to update_post_meta($postID, "stream-type", "webrtc") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/h5videochat.php:203
  - STORAGE call to update_post_meta($postID, "roomInterface", "html5app") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/h5videochat.php:274
  - STORAGE call to update_post_meta($postID, "bans", $bans) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/h5videochat.php:2322
  - STORAGE call to update_post_meta($post->ID, "presentationMedia", $media) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/h5videochat.php:2323
  - STORAGE call to update_post_meta($post->ID, "updated_media", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/h5videochat.php:2733
  - STORAGE call to update_post_meta($postID, "performer", $userName) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/h5videochat.php:2734
  - STORAGE call to update_post_meta($postID, "performerUserID", $userID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/h5videochat.php:2771
  - STORAGE call to update_user_meta($userID, $key, $value) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/h5videochat.php:2936
  - STORAGE call to update_post_meta($postID, "bans", $bans) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/h5videochat.php:3173
  - STORAGE call to update_user_meta($userID, $name, $value) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/h5videochat.php:3174
  - STORAGE call to update_user_meta($userID, "updated_options", time()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/h5videochat.php:3178
  - STORAGE call to update_post_meta($postID, $name, $value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/h5videochat.php:3179
  - STORAGE call to update_post_meta($postID, "updated_options", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/h5videochat.php:3185
  - STORAGE call to update_post_meta($postID, "updated_media", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/h5videochat.php:3190
  - STORAGE call to update_post_meta($postID, "updated_room", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/h5videochat.php:3203
  - STORAGE call to update_post_meta($postID, "updated_" . $update, time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/h5videochat.php:3263
  - STORAGE call to update_post_meta($postID, "bans", $bans) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/h5videochat.php:3322
  - STORAGE call to update_post_meta($postID, "bans", $bans) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/h5videochat.php:3368
  - STORAGE call to update_post_meta($postID, "presentationMedia", $presentationMedia) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/h5videochat.php:3379
  - STORAGE call to update_post_meta($postID, "updated_media", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/h5videochat.php:3405
  - STORAGE call to update_post_meta($postID, "presentationMedia", $presentationMedia) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/h5videochat.php:3408
  - STORAGE call to update_post_meta($postID, "updated_media", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/h5videochat.php:3456
  - STORAGE call to update_post_meta($postID, "presentationMedia", $presentationMedia) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/h5videochat.php:3463
  - STORAGE call to update_post_meta($postID, "updated_media", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/h5videochat.php:3498
  - STORAGE call to update_post_meta($postID, "updated_files", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/h5videochat.php:3590
  - STORAGE call to update_post_meta($partyID, "partyRoomID", $nextRoomID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/h5videochat.php:3675
  - STORAGE call to update_post_meta($partyID, "partyRoomID", $nextRoomID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/h5videochat.php:3725
  - STORAGE call to update_post_meta($post->ID, "updated_media", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/h5videochat.php:3786
  - STORAGE call to update_post_meta($post->ID, "presentationMedia", $presentationMedia) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/h5videochat.php:3787
  - STORAGE call to update_post_meta($post->ID, "updated_media", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/h5videochat.php:3822
  - STORAGE call to update_post_meta($post->ID, "presentationMedia", $presentationMedia) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/h5videochat.php:3823
  - STORAGE call to update_post_meta($post->ID, "updated_media", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/h5videochat.php:3890
  - STORAGE call to update_post_meta($post->ID, "goals", $newGoals) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/h5videochat.php:3919
  - STORAGE call to update_post_meta($post->ID, "goal", $goal) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/h5videochat.php:3920
  - STORAGE call to update_post_meta($post->ID, "goals", $goals) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/h5videochat.php:3948
  - STORAGE call to update_post_meta($post->ID, "goals", $goals) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/h5videochat.php:3974
  - STORAGE call to update_post_meta($post->ID, "goals", $goals) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/h5videochat.php:3980
  - STORAGE call to update_post_meta($post->ID, "goals", $goals) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/h5videochat.php:3998
  - STORAGE call to update_usermeta($userID, "tipsRecent", $tipsRecent) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).
  - Data types: user_meta
inc/h5videochat.php:4106
  - STORAGE call to update_usermeta($performerID, "tipsRecent", $tipsRecent) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).
  - Data types: user_meta
inc/h5videochat.php:4119
  - STORAGE call to update_usermeta($targetID, "tipsRecent", $tipsRecent) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).
  - Data types: user_meta
inc/h5videochat.php:4123
  - STORAGE call to update_user_meta($userID, "vwTipLast", time()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/h5videochat.php:4780
  - STORAGE call to update_usermeta($userID, "tipsRecent", $tipsRecent) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).
  - Data types: user_meta
inc/h5videochat.php:4828
  - STORAGE call to update_user_meta($userID, "balance_warning" . $privateUID, time()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/options.php:1503
  - STORAGE call to update_option("VWliveWebcamsOptions", $adminOptions) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/options.php:1595
  - STORAGE call to update_option("VWliveWebcamsOptions", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/options.php:2779
  - STORAGE call to update_option("VWliveWebcamsOptions", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/options.php:2840
  - STORAGE call to update_option("VWliveWebcamsOptions", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/options.php:3295
  - STORAGE call to update_post_meta($roomPost->ID, "vw_playlistUpdated", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/options.php:3296
  - STORAGE call to update_post_meta($roomPost->ID, "vw_playlistActive", "0") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/options.php:5776
  - STORAGE call to wp_insert_post($page). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
inc/options.php:5865
  - STORAGE call to update_option("VWliveWebcamsOptions", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/options.php:6293
  - STORAGE call to update_user_meta($user_id, "vwVerified", 2) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/options.php:6294
  - STORAGE call to update_user_meta($user_id, "vwVerifiedReason", wp_kses_post($_POST["reason"])) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/options.php:6295
  - STORAGE call to update_user_meta($user_id, "vwVerifiedTime", time()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/options.php:6313
  - STORAGE call to update_user_meta($user_id, "vwVerified", 1) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/options.php:6314
  - STORAGE call to update_user_meta($user_id, "vwVerifiedTime", time()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/options.php:6315
  - STORAGE call to delete_user_meta($user_id, "vwVerifiedReason") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
inc/options.php:6326
  - STORAGE call to update_user_meta($user_id, "adminSuspended", $adminSuspended) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/requirements.php:243
  - STORAGE call to update_option( . "_requirementsRemind", time() + 86400) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/requirements.php:293
  - STORAGE call to update_option( . "_requirements", $status) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/shortcodes.php:123
  - STORAGE call to update_post_meta($postID, "statsTimeOnline", $timeOnline) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:127
  - STORAGE call to update_post_meta($postID, "vw_bonusRatio", $options["statsBonusRate"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:128
  - STORAGE call to delete_post_meta($postID, "vw_bonusRatio") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/shortcodes.php:773
  - STORAGE call to update_post_meta($postID, "pushStreams", $pushDestinations) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:789
  - STORAGE call to update_post_meta($postID, "pushStreams", $pushDestinations) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:976
  - STORAGE call to update_user_meta($login_user->ID, "videowhisper_ip_login", self->get_ip_address()) alters data types {'ip', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: ip, user_meta
inc/shortcodes.php:1193
  - STORAGE call to update_user_meta($user_id, "videowhisper_newpassword", $code) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/shortcodes.php:1285
  - STORAGE call to wp_set_password($password, $user_id) alters data types {'user_meta'}. Passed arguments: 0: $password (string), 1: $user_id (int).
  - Data types: user_meta
inc/shortcodes.php:1286
  - STORAGE call to delete_user_meta($user_id, "videowhisper_newpassword") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
inc/shortcodes.php:1287
  - STORAGE call to update_user_meta($user_id, "videowhisper_ip_newpassword", self->get_ip_address()) alters data types {'ip', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: ip, user_meta
inc/shortcodes.php:1679
  - STORAGE call to wp_insert_user($newuser) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
inc/shortcodes.php:1691
  - STORAGE call to add_user_meta($user_id, "videowhisper_activate", $code, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).
  - Data types: user_meta
inc/shortcodes.php:1692
  - STORAGE call to update_user_meta($user_id, "videowhisper_ip_register", self->get_ip_address()) alters data types {'ip', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: ip, user_meta
inc/shortcodes.php:1758
  - STORAGE call to update_user_meta($user->ID, "vwf_" . $fieldName, $newpath) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/shortcodes.php:1766
  - STORAGE call to update_user_meta($user->ID, "vwf_" . $fieldName, sanitize_text_field($_POST[$fieldName])) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/shortcodes.php:1774
  - STORAGE call to update_user_meta($user->ID, "vwUpdated", time()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/shortcodes.php:1883
  - STORAGE call to update_user_meta($current_user->ID, "vwf_" . $fieldName, sanitize_text_field($_POST[$fieldName])) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/shortcodes.php:1980
  - STORAGE call to delete_user_meta($user_id, "videowhisper_activate") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
inc/shortcodes.php:2075
  - STORAGE call to update_user_meta($current_user->ID, "vwf_" . $fieldName, sanitize_text_field($_POST[$fieldName])) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/shortcodes.php:2181
  - STORAGE call to update_user_meta($current_user->ID, "vwf_" . $fieldName, $newpath) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/shortcodes.php:2191
  - STORAGE call to update_user_meta($current_user->ID, "vwf_" . $fieldName, sanitize_text_field($_POST[$fieldName])) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/shortcodes.php:2199
  - STORAGE call to update_user_meta($current_user->ID, "vwUpdated", time()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/shortcodes.php:2323
  - STORAGE call to update_user_meta($collectID, "studioCollectLast", $balance) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/shortcodes.php:2324
  - STORAGE call to update_user_meta($collectID, "studioCollectTotal", $balance + $collectTotal) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/shortcodes.php:2429
  - STORAGE call to wp_create_user($performer_username, $random_password, $performer_email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $username (string), 1: $password (string), 2: $email (string). Returns (int|WP_Error).
  - Data types: user, user_meta
inc/shortcodes.php:2434
  - STORAGE call to update_user_meta($user_id, "studioID", $current_user->ID) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/shortcodes.php:2435
  - STORAGE call to update_user_meta($user_id, "studioLogin", $current_user->user_login) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/shortcodes.php:2436
  - STORAGE call to update_user_meta($user_id, "studioPassword", $random_password) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/shortcodes.php:2437
  - STORAGE call to update_user_meta($user_id, "studioDisabled", 0) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/shortcodes.php:2440
  - STORAGE call to wp_update_user(["ID" => $user_id, "role" => $options["rolePerformer"]]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
inc/shortcodes.php:2452
  - STORAGE call to update_user_meta($user_id, "currentWebcam", $webcamID) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/shortcodes.php:2467
  - STORAGE call to update_user_meta($user_id, "studioDisabled", $_GET["disabled"]) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/shortcodes.php:2683
  - STORAGE call to wp_insert_post($post). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
inc/shortcodes.php:2686
  - STORAGE call to update_post_meta($pid, "studioID", $current_user->ID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:2691
  - STORAGE call to add_post_meta($pid, "performerID", intval($performer), false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).
  - Data types: post_meta
inc/shortcodes.php:2952
  - STORAGE call to update_user_meta($current_user->ID, "currentWebcam", $selectWebcam) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/shortcodes.php:3027
  - STORAGE call to wp_insert_post($post). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
inc/shortcodes.php:3030
  - STORAGE call to update_post_meta($pid, "studioID", $current_user->ID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:3057
  - STORAGE call to add_post_meta($pid, "performerID", $performerID, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).
  - Data types: post_meta
inc/shortcodes.php:3191
  - STORAGE call to update_post_meta($postID, "vw_subscription_tier", $subscriptionTier) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:3207
  - STORAGE call to update_post_meta($postID, "vw_costPerMinute", $costPerMinute) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:3209
  - STORAGE call to delete_post_meta($postID, "vw_costPerMinute") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/shortcodes.php:3224
  - STORAGE call to update_post_meta($postID, "vw_costPerMinuteaudio", $costPerMinuteAudio) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:3226
  - STORAGE call to delete_post_meta($postID, "vw_costPerMinuteaudio") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/shortcodes.php:3241
  - STORAGE call to update_post_meta($postID, "vw_costPerMinutetext", $costPerMinuteText) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:3243
  - STORAGE call to delete_post_meta($postID, "vw_costPerMinutetext") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/shortcodes.php:3260
  - STORAGE call to update_post_meta($postID, "vw_costPerMinuteGroup", $costPerMinute) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:3262
  - STORAGE call to delete_post_meta($postID, "vw_costPerMinuteGroup") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/shortcodes.php:3271
  - STORAGE call to update_post_meta($postID, "vw_slots2way", $slots2way) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:3273
  - STORAGE call to delete_post_meta($postID, "vw_slots2way") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/shortcodes.php:3319
  - STORAGE call to update_post_meta($postID, "picture", $destination) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:3320
  - STORAGE call to update_post_meta($postID, "hasPicture", 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:3394
  - STORAGE call to update_post_meta($postID, "thumbPicture", $thumbFilename) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:3395
  - STORAGE call to update_post_meta($postID, "hasThumb", 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:3419
  - STORAGE call to update_post_meta($postID, "showImage", $showImage) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:3433
  - STORAGE call to wp_update_post(["ID" => $postID, "post_content" => $roomDescription]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
inc/shortcodes.php:3444
  - STORAGE call to update_post_meta($postID, "vw_roomLabel", $roomLabel) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:3450
  - STORAGE call to update_post_meta($postID, "vw_roomBrief", $roomBrief) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:3465
  - STORAGE call to delete_post_meta($postID, "vw_banCountries") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/shortcodes.php:3471
  - STORAGE call to add_post_meta($postID, "vw_banCountries", trim($value)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: post_meta
inc/shortcodes.php:3487
  - STORAGE call to update_post_meta($postID, "vw_accessList", $accessList) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:3494
  - STORAGE call to update_post_meta($postID, "vw_accessPrice", $accessPrice) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:3510
  - STORAGE call to update_post_meta($postID, "myCRED_sell_content", $mCa) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:3512
  - STORAGE call to delete_post_meta($postID, "myCRED_sell_content") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/shortcodes.php:3525
  - STORAGE call to wp_update_post(["ID" => $postID, "post_password" => $accessPassword]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
inc/shortcodes.php:3546
  - STORAGE call to update_post_meta($postID, "vw_presentationMode", $roomLabel) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:3548
  - STORAGE call to update_post_meta($postID, "vw_presentationMode", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:3578
  - STORAGE call to update_post_meta($postID, "vw_videos", "1") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:3580
  - STORAGE call to update_post_meta($postID, "vw_videos", "0") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:3586
  - STORAGE call to update_post_meta($postID, "vw_pictures", "1") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:3588
  - STORAGE call to update_post_meta($postID, "vw_pictures", "0") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:3594
  - STORAGE call to update_post_meta($postID, "vw_playlistActive", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:3604
  - STORAGE call to wp_update_post(["ID" => $postID, "post_title" => sanitize_file_name($webcamPost->post_title)]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
inc/shortcodes.php:3615
  - STORAGE call to update_post_meta($postID, "performer", $performerName) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:3616
  - STORAGE call to update_post_meta($postID, "performerUserID", $current_user->ID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:3618
  - STORAGE call to update_post_meta($postID, "sessionStart", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:3657
  - STORAGE call to update_post_meta($postID, "groupCPM", floatval($CPMg)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:3658
  - STORAGE call to update_post_meta($postID, "groupMode", $groupMode) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:3659
  - STORAGE call to update_post_meta($postID, "groupParameters", $modeParameters) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:3663
  - STORAGE call to update_post_meta($postID, $meta, $modeParameters[$meta]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:3679
  - STORAGE call to update_post_meta($postID, "groupCPM", 0) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:3680
  - STORAGE call to update_post_meta($postID, "groupMode", $mode$mode__("Free", "ppv-live-webcams")) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:3701
  - STORAGE call to update_post_meta($postID, "roomInterface", $roomInterface) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:3712
  - STORAGE call to update_post_meta($postID, $key, $value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:3727
  - STORAGE call to update_post_meta($postID, "rtmp_server", $options["rtmp_server_archive"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:3741
  - STORAGE call to update_post_meta($postID, "archivedSessions", $archivedSessions) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:3744
  - STORAGE call to update_post_meta($postID, "rtmp_server", $options["rtmp_server"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:3788
  - STORAGE call to update_post_meta($postID, "checkin", $selectedPerformers) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:3791
  - STORAGE call to update_post_meta($postID, "updated_room", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:4632
  - STORAGE call to update_post_meta($postID, "vwf_" . $fieldName, $tags) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:4634
  - STORAGE call to update_post_meta($postID, "vwf_" . $fieldName, wp_kses($_POST[$fieldName], $allowedtags)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:5286
  - STORAGE call to update_post_meta($postID, "contentIDs", $contentIDs) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:5430
  - STORAGE call to update_post_meta($postID, "productIDs", $productIDs) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:5628
  - STORAGE call to update_post_meta($postID, "bans", $bans) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:5823
  - STORAGE call to update_post_meta($postID, "performer", $performerName) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:5824
  - STORAGE call to update_post_meta($postID, "performerUserID", $current_user->ID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:5848
  - STORAGE call to update_post_meta($postID, "vw_featured", 0) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:6343
  - STORAGE call to update_post_meta($postID, "question_price", $price) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:6345
  - STORAGE call to update_post_meta($postID, "question_closed", intval($_POST["question_closed"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:8854
  - STORAGE call to update_post_meta($item->ID, "customRoomLink", $url) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:9389
  - STORAGE call to update_post_meta($postID, "performer", $stream) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:9390
  - STORAGE call to update_post_meta($postID, "performerUserID", $current_user->ID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:9392
  - STORAGE call to update_post_meta($postID, "stream-protocol", "rtsp") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:9393
  - STORAGE call to update_post_meta($postID, "stream-type", "webrtc") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:9394
  - STORAGE call to update_post_meta($postID, "roomInterface", "html5") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:9397
  - STORAGE call to update_post_meta($postID, "stream-mode", "safari_pc") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:9399
  - STORAGE call to update_post_meta($postID, "stream-mode", "direct") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:10162
  - STORAGE call to update_post_meta($postID, "mode2way", $mode2way) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:10175
  - STORAGE call to update_post_meta($postID, "modeVoyeur", $modeVoyeur) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/streams.php:46
  - STORAGE call to update_user_meta($user->ID, "vwActivityPost", time()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/streams.php:609
  - STORAGE call to update_post_meta($postID, "edate", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/streams.php:610
  - STORAGE call to update_post_meta($postID, "snapshotDate", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/streams.php:611
  - STORAGE call to update_post_meta($postID, "vw_lastSnapshot", $filename) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/streams.php:612
  - STORAGE call to update_post_meta($postID, "snapshot", $filename) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/streams.php:638
  - STORAGE call to update_post_meta($postID, "hasSnapshot", $picType) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/streams.php:639
  - STORAGE call to update_post_meta($postID, "thumbSnapshot", $thumbFilename) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/streams.php:640
  - STORAGE call to update_post_meta($postID, "hasThumb", 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/streams.php:846
  - STORAGE call to update_post_meta($postID, "stream-codec-video", strtolower($videoCodec)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/streams.php:858
  - STORAGE call to update_post_meta($postID, "stream-codec-audio", strtolower($audioCodec)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/streams.php:861
  - STORAGE call to update_post_meta($postID, "stream-codec-detect", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/streams.php:883
  - STORAGE call to update_post_meta($postID, "stream-webrtc", $stream_webrtc) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/streams.php:888
  - STORAGE call to update_post_meta($postID, "transcoding-webrtc", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/streams.php:896
  - STORAGE call to update_post_meta($postID, "stream-webrtc", $stream_webrtc) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/streams.php:1007
  - STORAGE call to update_post_meta($postID, "stream-hls", $stream) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/streams.php:1118
  - STORAGE call to update_post_meta($postID, "stream-codec-video", strtolower($videoCodec)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/streams.php:1129
  - STORAGE call to update_post_meta($postID, "stream-codec-audio", strtolower($audioCodec)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/streams.php:1133
  - STORAGE call to update_post_meta($postID, "stream-codec-detect", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
ppv-live-webcams.php:649
  - STORAGE call to add_option("vmls_db_version", $vmls_db_version) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
ppv-live-webcams.php:651
  - STORAGE call to update_option("vmls_db_version", $vmls_db_version) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
ppv-live-webcams.php:1184
  - STORAGE call to update_post_meta($post_id, "vw_featured", 0) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
ppv-live-webcams.php:1265
  - STORAGE call to update_post_meta($post_id, "videowhisper_template", $postTemplate) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
ppv-live-webcams.php:1287
  - STORAGE call to update_post_meta($post_id, "vw_costPerMinute", sanitize_text_field($_REQUEST["vw_costPerMinute"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
ppv-live-webcams.php:1291
  - STORAGE call to update_post_meta($post_id, "vw_costPerMinuteGroup", sanitize_text_field($_REQUEST["vw_costPerMinuteGroup"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
ppv-live-webcams.php:1295
  - STORAGE call to update_post_meta($post_id, "vw_earningRatio", sanitize_text_field($_REQUEST["vw_earningRatio"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
ppv-live-webcams.php:1299
  - STORAGE call to update_post_meta($post_id, "vw_featured", sanitize_text_field($_REQUEST["vw_featured"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
ppv-live-webcams.php:1303
  - STORAGE call to update_post_meta($post_id, "customRoomLink", sanitize_text_field($_REQUEST["customRoomLink"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
ppv-live-webcams.php:1339
  - STORAGE call to wp_insert_post($post). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
ppv-live-webcams.php:1348
  - STORAGE call to update_post_meta($pid, "performer", $performer) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
ppv-live-webcams.php:1357
  - STORAGE call to update_post_meta($pid, "performerID", $performerID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
ppv-live-webcams.php:1363
  - STORAGE call to update_user_meta($performerID, "currentWebcam", $pid) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
ppv-live-webcams.php:1368
  - STORAGE call to update_post_meta($pid, "studioID", $studioID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
ppv-live-webcams.php:1510
  - STORAGE call to update_post_meta($postID, "archivedSessions", $archivedSessions) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
ppv-live-webcams.php:1518
  - STORAGE call to update_post_meta($postID, "archivedSessions", []) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
ppv-live-webcams.php:1634
  - STORAGE call to update_post_meta($postID, "edate", $ztime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
ppv-live-webcams.php:1944
  - STORAGE call to update_post_meta($postID, "edate", $ztime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
ppv-live-webcams.php:1982
  - STORAGE call to update_post_meta($postID, "privateShow", $shows) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
ppv-live-webcams.php:2069
  - STORAGE call to update_post_meta($postID, "mode2way", $mode2way) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
ppv-live-webcams.php:2101
  - STORAGE call to update_post_meta($postID, "modeVoyeur", $modeVoyeur) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
ppv-live-webcams.php:2223
  - STORAGE call to update_post_meta($postID, "bans", $bans) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
ppv-live-webcams.php:2493
  - STORAGE call to update_user_meta($current_user->ID, "vwTipLast", time()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
ppv-live-webcams.php:4007
  - STORAGE call to wp_update_user($userdata) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
ppv-live-webcams.php:4111
  - STORAGE call to update_post_meta($postID, "goals", $goals) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
ppv-live-webcams.php:4249
  - STORAGE call to update_post_meta($postID, "goal", $goal) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
ppv-live-webcams.php:4255
  - STORAGE call to update_post_meta($postID, "goals", $goals) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
ppv-live-webcams.php:4475
  - STORAGE call to update_user_meta($uid, "paidSessionsPrivate", $clients->no) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
ppv-live-webcams.php:4479
  - STORAGE call to update_user_meta($uid, "paidSessionsGroup", $clients->no) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
ppv-live-webcams.php:4501
  - STORAGE call to update_post_meta($rid, "paidSessionsPrivate", $clients->no) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
ppv-live-webcams.php:4505
  - STORAGE call to update_post_meta($rid, "paidSessionsGroup", $clients->no) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
ppv-live-webcams.php:4605
  - STORAGE call to update_user_meta($uid, "vw_ppv_temp", $temp) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
ppv-live-webcams.php:4606
  - STORAGE call to update_user_meta($uid, "vw_ppv_tempt", time()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
ppv-live-webcams.php:4608
  - STORAGE call to update_user_meta($uid, "vw_ppv_temp", 0) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
ppv-live-webcams.php:4609
  - STORAGE call to update_user_meta($uid, "vw_ppv_tempt", time()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
ppv-live-webcams.php:5185
  - STORAGE call to update_post_meta($postID, "viewers", $viewers) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
ppv-live-webcams.php:5190
  - STORAGE call to update_post_meta($postID, "maxViewers", $viewers) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
ppv-live-webcams.php:5191
  - STORAGE call to update_post_meta($postID, "maxDate", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
ppv-live-webcams.php:5458
  - STORAGE call to update_post_meta($postID, "stream-protocol", "rtmp") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
ppv-live-webcams.php:5459
  - STORAGE call to update_post_meta($postID, "stream-type", "external") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
ppv-live-webcams.php:5460
  - STORAGE call to update_post_meta($postID, "stream-updated", $ztime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
ppv-live-webcams.php:5511
  - STORAGE call to update_option("VWliveWebcamsOptions", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
ppv-live-webcams.php:5688
  - STORAGE call to update_post_meta($postID, "edate", $ztime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
ppv-live-webcams.php:5689
  - STORAGE call to update_post_meta($postID, "btime", $btime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
ppv-live-webcams.php:5691
  - STORAGE call to update_post_meta($postID, "stream-protocol", "rtsp") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
ppv-live-webcams.php:5692
  - STORAGE call to update_post_meta($postID, "stream-type", "webrtc") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
ppv-live-webcams.php:5865
  - STORAGE call to update_post_meta($postID, "edate", $ztime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
ppv-live-webcams.php:5868
  - STORAGE call to update_post_meta($postID, "stream-protocol", "rtmp") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
ppv-live-webcams.php:5869
  - STORAGE call to update_post_meta($postID, "stream-type", "external") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
ppv-live-webcams.php:5870
  - STORAGE call to update_post_meta($postID, "stream-updated", $ztime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
ppv-live-webcams.php:5875
  - STORAGE call to update_post_meta($postID, "updated_stream", $ztime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
ppv-live-webcams.php:6146
  - STORAGE call to update_user_meta($member->ID, "studioID", $memberStudio->ID) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
ppv-live-webcams.php:6147
  - STORAGE call to update_user_meta($member->ID, "studioLogin", $memberStudio->user_login) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
ppv-live-webcams.php:6148
  - STORAGE call to update_user_meta($member->ID, "studioDisabled", 0) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
ppv-live-webcams.php:6151
  - STORAGE call to wp_update_user(["ID" => $member->ID, "role" => sanitize_text_field($options["rolePerformer"])]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
ppv-live-webcams.php:6162
  - STORAGE call to update_user_meta($member->ID, "currentWebcam", $webcamID) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta 

inc/options.php:6315
  - DELETION call to delete_user_meta($user_id, "vwVerifiedReason") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
inc/shortcodes.php:128
  - DELETION call to delete_post_meta($postID, "vw_bonusRatio") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/shortcodes.php:1286
  - DELETION call to delete_user_meta($user_id, "videowhisper_newpassword") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
inc/shortcodes.php:1980
  - DELETION call to delete_user_meta($user_id, "videowhisper_activate") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
inc/shortcodes.php:3209
  - DELETION call to delete_post_meta($postID, "vw_costPerMinute") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/shortcodes.php:3226
  - DELETION call to delete_post_meta($postID, "vw_costPerMinuteaudio") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/shortcodes.php:3243
  - DELETION call to delete_post_meta($postID, "vw_costPerMinutetext") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/shortcodes.php:3262
  - DELETION call to delete_post_meta($postID, "vw_costPerMinuteGroup") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/shortcodes.php:3273
  - DELETION call to delete_post_meta($postID, "vw_slots2way") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/shortcodes.php:3465
  - DELETION call to delete_post_meta($postID, "vw_banCountries") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/shortcodes.php:3512
  - DELETION call to delete_post_meta($postID, "myCRED_sell_content") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
ppv-live-webcams.php:3720
  - DELETION call to wp_delete_attachment($file->ID) alters data types {'attachment_meta', 'attachment'}. Passed arguments: 0: $post_id (int). Returns (WP_Post|false|null).
  - Data types: attachment_meta, attachment 

By data type:
address
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	ArrayElementDetector.(unknown) - {'address'}
	ArrayElementDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
attachment
	DeletionDetector.wp_delete_attachment($file->ID) - {'attachment_meta', 'attachment'}
attachment_meta
	DeletionDetector.wp_delete_attachment($file->ID) - {'attachment_meta', 'attachment'}
email
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
file
	PHPRetrievalDetector.file($filename1) - {'file'}
	PHPRetrievalDetector.file_get_contents($smilPath) - {'file'}
	PHPRetrievalDetector.file_get_contents($path) - {'file'}
	PHPRetrievalDetector.file_get_contents($destination) - {'file'}
	PHPRetrievalDetector.file_get_contents($path) - {'file'}
	PHPStorageDetector.file_put_contents($log_file, "RTSP stream incomplete: " . escapeshellarg($options["rtsp_server"] . "/" . $stream) . " Will check again later... ", FILE_APPEND) - {'file'}
	PHPRetrievalDetector.file_get_contents($lastCleanFile) - {'file'}
	PHPRetrievalDetector.file_get_contents($path) - {'file'}
	PHPRetrievalDetector.file_get_contents($path) - {'file'}
	PHPRetrievalDetector.file_get_contents($log["file"]) - {'file'}
	PHPStorageDetector.fputs($dfile, $messageText . "<BR>") - {'file'}
	PHPStorageDetector.file_put_contents($log_file, "

CMD: " . $cmd . " Return:" . $returnvalue . " processID:" . $processId . " postID:" . $postID . " stream:" . $stream . "
", FILE_APPEND) - {'file'}
	PHPStorageDetector.file_put_contents($log_file, $stream"|"$stream_hls"|"$stream_webrtc"|"$transcodeEnabled"|"$detect"|"$videoCodec"|"$audioCodec, FILE_APPEND) - {'file'}
	PHPStorageDetector.fputs($dfile, "VideoWhisper Log for RTMP Session Control" . "
") - {'file'}
	PHPStorageDetector.file_put_contents($options["uploadsPath"] . "/sessionsApp", $appStats) - {'file'}
	PHPStorageDetector.file_put_contents($log_file, "

CMD: " . $cmd, FILE_APPEND) - {'file'}
	PHPStorageDetector.fputs($dfile, $messageText . "<BR>") - {'file'}
	PHPStorageDetector.file_put_contents($log_file, " CMD: " . $cmd, FILE_APPEND) - {'file'}
	PHPStorageDetector.file_put_contents($log_file, $info, FILE_APPEND) - {'file'}
	PHPStorageDetector.fputs($dfile, "$_POST:" . "
" . serialize($_POST)) - {'file'}
	PHPStorageDetector.file_put_contents($options["uploadsPath"] . "/sessionsRTP", $rtpsessiondata) - {'file'}
	PHPStorageDetector.file_put_contents($options["uploadsPath"] . "/sessionsUsers", $userdata) - {'file'}
	PHPStorageDetector.fputs($dfile, "
" . $debugInfo) - {'file'}
	PHPStorageDetector.fputs($dfile, $message . "<BR>") - {'file'}
	PHPStorageDetector.fputs($dfile, $message . "<BR>") - {'file'}
	PHPStorageDetector.fputs($dfile, "
Control RTP Sessions: " . "
" . $controlSessionsS) - {'file'}
	PHPStorageDetector.file_put_contents($path, serialize($var)) - {'file'}
	PHPStorageDetector.file_put_contents($smilPath, $smilCode) - {'file'}
	PHPStorageDetector.fputs($dfile, "
Control RTMP Users: " . "
" . $controlUsersS) - {'file'}
	PHPStorageDetector.file_put_contents($log_file, $info, FILE_APPEND) - {'file'}
	PHPStorageDetector.file_put_contents($path, $var) - {'file'}
	PHPStorageDetector.fputs($dfile, $info) - {'file'}
	PHPStorageDetector.fputs($dfile, "Server Date: " . "
" . date("D M j G:i:s T Y") . "
") - {'file'}
	PHPStorageDetector.file_put_contents($lastCleanFile, $ztime) - {'file'}
first_name
	VariableDetector.(unknown) - {'first_name'}
	VariableDetector.(unknown) - {'first_name'}
	VariableDetector.(unknown) - {'first_name'}
	ArrayElementDetector.(unknown) - {'first_name'}
ip
	WordPressRetrievalDetector.get_user_meta($user_id, "videowhisper_ip_register", true) - {'ip', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id, "videowhisper_ip_newpassword", true) - {'ip', 'user_meta'}
	WordPressStorageDetector.update_user_meta($login_user->ID, "videowhisper_ip_login", self->get_ip_address()) - {'ip', 'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "videowhisper_ip_newpassword", self->get_ip_address()) - {'ip', 'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "videowhisper_ip_register", self->get_ip_address()) - {'ip', 'user_meta'}
last_name
	VariableDetector.(unknown) - {'last_name'}
	VariableDetector.(unknown) - {'last_name'}
	VariableDetector.(unknown) - {'last_name'}
	ArrayElementDetector.(unknown) - {'last_name'}
none
	WordPressRetrievalDetector.get_posts($args) - set()
	PHPIncludedDetector.(unknown) - set()
	WordPressRetrievalDetector.get_posts($args) - set()
	WordPressRetrievalDetector.get_posts($args) - set()
	PHPIncludedDetector.(unknown) - set()
	WordPressStorageDetector.wp_insert_post($page) - set()
	WordPressStorageDetector.wp_insert_post($post) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	WordPressRetrievalDetector.dbDelta($sql) - set()
	WordPressRetrievalDetector.get_posts($args) - set()
	WordPressRetrievalDetector.get_posts($args) - set()
	WordPressRetrievalDetector.get_posts($args) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	WordPressStorageDetector.wp_update_post(["ID" => $postID, "post_title" => sanitize_file_name($webcamPost->post_title)]) - set()
	WordPressRetrievalDetector.get_posts($args) - set()
	WordPressRetrievalDetector.get_posts($args) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	WordPressStorageDetector.wp_update_post(["ID" => $postID, "post_content" => $roomDescription]) - set()
	WordPressRetrievalDetector.get_posts($args) - set()
	PHPIncludedDetector.(unknown) - set()
	WordPressStorageDetector.wp_update_post(["ID" => $postID, "post_password" => $accessPassword]) - set()
	WordPressRetrievalDetector.get_posts($args) - set()
	WordPressStorageDetector.wp_insert_post($post) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	WordPressStorageDetector.wp_insert_post($post) - set()
	WordPressRetrievalDetector.get_posts($args) - set()
option
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWvideoShareOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressStorageDetector.update_option("VWliveWebcamsOptions", $options) - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressStorageDetector.add_option("vmls_db_version", $vmls_db_version) - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressStorageDetector.update_option("vmls_db_version", $vmls_db_version) - {'option'}
	WordPressRetrievalDetector.get_option("VWvideoShareOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("vmls_db_version") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWinlineRecorderOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option( . "_requirementsRemind") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("vmls_db_version") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressStorageDetector.update_option( . "_requirements", $status) - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressStorageDetector.update_option("VWliveWebcamsOptions", $options) - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressStorageDetector.update_option( . "_requirementsRemind", time() + 86400) - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option($requirement["option"]) - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressStorageDetector.update_option("VWliveWebcamsOptions", $adminOptions) - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWinlineRecorderOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option( . "_requirements") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressStorageDetector.update_option("VWliveWebcamsOptions", $options) - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressStorageDetector.update_option("VWliveWebcamsOptions", $options) - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressStorageDetector.update_option("VWliveWebcamsOptions", $options) - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveWebcamsOptions") - {'option'}
password
	PropertyDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
	ArrayElementDetector.(unknown) - {'password'}
	ArrayElementDetector.(unknown) - {'password'}
	ArrayElementDetector.(unknown) - {'password'}
post
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($roomid) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($partyID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($roomID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post(intval($selectWebcam)) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($partyRoomID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($selectWebcam) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($channel_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($question->webcam_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post(abs($selectedInt)) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_field("post_author", $postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($disablePlaylist) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($pid) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($nextRoomID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_field("post_author", $session->rid) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post(abs($selectedInt)) - {'post_meta', 'post', 'wp_post'}
post_meta
	WordPressRetrievalDetector.get_post_meta($postID, "vw_presentationMode", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "mode2way", $mode2way) - {'post_meta'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($postID, "privateShow", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-protocol", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "video_teaser", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-type", "external") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "goals_panel", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "edate", time()) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "vw_presentationMode", "") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "performerUserID", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "goals_sort", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "performerUserID", $current_user->ID) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-webrtc", $stream_webrtc) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "goals", true) - {'post_meta'}
	DeletionDetector.delete_post_meta($postID, "vw_slots2way") - {'post_meta'}
	DeletionDetector.delete_post_meta($postID, "vw_banCountries") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "gifts", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "checkin", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "groupParameters", $modeParameters) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "room_conference", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "party", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "group_disabled", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "groupCPM", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "roomInterface", "html5") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "question_price", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "room_slots", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($video_id, "video-source-file", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-protocol", "rtsp") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-codec-audio", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "roomInterface", $roomInterface) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($video_id, "video-adaptive", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "requests_disable", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "bans", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($pid, "studioID", $current_user->ID) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "question_closed", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "vw_costPerMinuteaudio", $costPerMinuteAudio) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-type", "webrtc") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "customRoomLink", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_costPerMinute" . $type, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "privateShow", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "vw_earningRatio", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "bans", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "room_private", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream_record_private", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "vw_lastSnapshot", $filename) - {'post_meta'}
	WordPressRetrievalDetector.get_post($roomid) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "calls_only", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "bans", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-protocol", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "updated_stream", $ztime) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($item->ID, "customRoomLink", $url) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "question_price", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post->ID, "goals", $newGoals) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "groupMode", $mode$mode__("Free", "ppv-live-webcams")) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-codec-video", strtolower($videoCodec)) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-protocol", "rtsp") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "hasSnapshot", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-mode", "direct") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-codec-audio", strtolower($audioCodec)) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-codec-detect", time()) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream_record", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "performerUserID", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "bans", $bans) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($partyID, "partyRoomID", $nextRoomID) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-webrtc", $stream_webrtc) - {'post_meta'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($postID, "question_price", $price) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-type", true) - {'post_meta'}
	WordPressStorageDetector.add_post_meta($pid, "performerID", $performerID, false) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "room_conference", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "room_private", true) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($postID, "vw_costPerMinute") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-mode", "safari_pc") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-codec-detect", time()) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "updated_" . $update, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "picture", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($partyID, "party_reserved", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "question_closed", intval($_POST["question_closed"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($video_teaser, "video-source-file", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "external_rtmp", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "checkin", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_accessList", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "question_price", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "stream_record", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($partyID) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($postID, "stream-protocol", "rtsp") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "stream_record_private", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-type", "webrtc") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "thumbPicture", $thumbFilename) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "question_closed", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "group_disabled", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_roomLabel", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_videos", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "vw_presentationMode", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($roomPost->ID, "vw_playlistActive", "0") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "stream_record_all", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "roomInterface", "html5app") - {'post_meta'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "party", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "gifts", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_roomBrief", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "room_conference", true) - {'post_meta'}
	DeletionDetector.delete_post_meta($postID, "vw_costPerMinute") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "goals_panel", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "presentationMedia", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "conference_auto", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "statsTimeOnline", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "groupMode", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "bans", $bans) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "vw_costPerMinuteGroup", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-codec-video", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post->ID, "presentationMedia", $media) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "requests_disable", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "vw_pictures", "1") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "room_audio", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "room_text", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-hls", $stream) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "groupMode", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "room_text", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "vw_costPerMinuteGroup", sanitize_text_field($_REQUEST["vw_costPerMinuteGroup"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "rtmp_server", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, $key, $value) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "performerID", false) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_banCountries", false) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "vw_earningRatio", sanitize_text_field($_REQUEST["vw_earningRatio"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "groupMode", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($item->ID, "requests_disable", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "performerUserID", $userID) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "pushStreams", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "vw_costPerMinute", sanitize_text_field($_REQUEST["vw_costPerMinute"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "performer", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "external_rtmp", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "videowhisper_template", $postTemplate) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "vw_featured", 0) - {'post_meta'}
	WordPressRetrievalDetector.get_post($roomID) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($postID, "edate", $ztime) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-mode", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "bans", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "vw_featured", sanitize_text_field($_REQUEST["vw_featured"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post(intval($selectWebcam)) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($postID, "vw_roomBrief", $roomBrief) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "groupMode", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "party", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "customRoomLink", sanitize_text_field($_REQUEST["customRoomLink"])) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($postID, "myCRED_sell_content") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($pid, "studioID", $current_user->ID) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "performer", $userName) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "archivedSessions", $archivedSessions) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "maxViewers", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "archivedSessions", []) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "buddypressGroup", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-type", "webrtc") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "sessionStart", time()) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "buddypressGroup", $bp->groups->current_group->id) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "vw_playlistActive", "") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_playlistActive", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "calls_only", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "bans", $bans) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "edate", $ztime) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "goals", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "performerUserID", $current_user->ID) - {'post_meta'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($pid, "performer", $performer) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "vw_videos", "1") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "videowhisper_template", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "edate", $ztime) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "goal", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-codec-video", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "presentationMedia", $presentationMedia) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "transcoding-webrtc", time()) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($webcam->ID, "performerID", false) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "video_teaser", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "updated_media", time()) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "productIDs", $productIDs) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "edate", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, $key, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($video_teaser, "video-adaptive", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "groupCPM", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "vwf_" . $fieldName, wp_kses($_POST[$fieldName], $allowedtags)) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "archivedSessions", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "goal", $goal) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($video_teaser, "video-adaptive", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "gifts", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($postID, "groupCPM", 0) - {'post_meta'}
	WordPressRetrievalDetector.get_post($partyRoomID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($partyID, "partyRoomID", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "contentIDs", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_subscription_tier", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($postID, "productIDs", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "video_teaser", true) - {'post_meta'}
	WordPressStorageDetector.add_post_meta($pid, "performerID", intval($performer), false) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($item->ID, "edate", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "performer", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($item->ID, "privateShow", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_costPerMinute", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "goals", $goals) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_costPerMinuteaudio", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_costPerMinutetext", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($item->ID, "vw_ipCamera", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($pid, "studioID", $studioID) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-updated", $ztime) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($item->ID, "customRoomLink", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($item->ID, "vw_playlistActive", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($item->ID, "customRoomLink", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "mode2way", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($item->ID, "groupCPM", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "archivedSessions", $archivedSessions) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-updated", $ztime) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vwf_" . $fieldName, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "snapshot", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "external_rtmp", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($postID, "updated_room", time()) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "question_price", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "picture", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "rtmp_server", $options["rtmp_server_archive"]) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "rtmp_server", $options["rtmp_server"]) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "updated_" . $update, time()) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "checkin", $selectedPerformers) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "snapshot", $filename) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream_record", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "question_closed", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($partyID, "partyRoomID", $nextRoomID) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "performerID", false) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-type", "external") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post->ID, "updated_media", time()) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_roomLabel", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "performerUserID", true) - {'post_meta'}
	WordPressStorageDetector.add_post_meta($postID, "vw_banCountries", trim($value)) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($postID, "vw_banCountries") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "thumbSnapshot", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "party", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post->ID, "updated_media", time()) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "vw_accessList", $accessList) - {'post_meta'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($postID, "vw_accessPrice", $accessPrice) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "question_price", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_featured", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post->ID, "presentationMedia", $presentationMedia) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "myCRED_sell_content", $mCa) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "productIDs", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post->ID, "goals", $goals) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "bans", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post->ID, "updated_media", time()) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_pictures", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_playlistActive", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($postID, "presentationMedia", $presentationMedia) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post->ID, "presentationMedia", $presentationMedia) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "question_price", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "updated_media", time()) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "presentationMedia", $presentationMedia) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "thumbPicture", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream_record_all", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "updated_media", time()) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "question_closed", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "groupCPM", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "bans", $bans) - {'post_meta'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($post->ID, "goals", $goals) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "thumbPicture", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "bans", $bans) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-codec-audio", true) - {'post_meta'}
	DeletionDetector.delete_post_meta($postID, "vw_bonusRatio") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "updated_files", time()) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "contentIDs", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "updated_media", time()) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post->ID, "goals", $goals) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "showImage", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post->ID, "goals", $goals) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "hasSnapshot", $picType) - {'post_meta'}
	DeletionDetector.delete_post_meta($postID, "vw_costPerMinuteGroup") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "vw_pictures", "0") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "roomInterface", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, $name, $value) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "updated_options", time()) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "vw_bonusRatio", $options["statsBonusRate"]) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "performer", $performerName) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-type", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "statsTimeOnline", $timeOnline) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "updated_room", time()) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "video_teaser", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "room_audio", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-webrtc", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "calls_only", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_transcode", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "performerUserID", $current_user->ID) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-codec-video", true) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($postID, "vw_bonusRatio") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "modeVoyeur", $modeVoyeur) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "privateShow", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "picture", $destination) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "snapshotDate", time()) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "performer", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "room_text", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "performer", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "room_audio", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "hasPicture", 1) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "performerUserID", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "performer", $performerName) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "roomInterface", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_playlistActive", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "room_conference", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "pushStreams", $pushDestinations) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "thumbSnapshot", $thumbFilename) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "conference_auto", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_ipCamera", true) - {'post_meta'}
	DeletionDetector.delete_post_meta($postID, "myCRED_sell_content") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($item->ID, "rateStarReview_rating", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-protocol", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "pushStreams", $pushDestinations) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "room_slots", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "hasThumb", 1) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-type", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-codec-video", strtolower($videoCodec)) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-codec-video", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "viewers", $viewers) - {'post_meta'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-mode", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-protocol", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_transcode", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "vw_roomLabel", $roomLabel) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "vw_featured", 0) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "performer", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($webcam->ID, "performerID", false) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "showImage", $showImage) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "room_private", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "privateShow", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($item->ID, "paidSessionsGroup", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "snapshotDate", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-protocol", "rtmp") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($pid, "performerID", $performerID) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "vw_subscription_tier", $subscriptionTier) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "performerID", false) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "vw_costPerMinute", $costPerMinute) - {'post_meta'}
	DeletionDetector.delete_post_meta($postID, "vw_costPerMinuteaudio") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "edate", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "hasThumb", 1) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-type", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($info["postID"], "edate", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-mode", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-hls", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post->ID, "goal", $goal) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_ipCamera", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "groupParameters", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "archivedSessions", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($postID, "modeVoyeur", $modeVoyeur) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "external_rtmp", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "maxViewers", $viewers) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($webcam->ID, "performerID", false) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "performerUserID", $userID) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "performer", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($selectWebcam) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($postID, "maxDate", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "groupCPM", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "maxViewers", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "pushStreams", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "sessionStart", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($postID, "paidSessionsPrivate", true) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($postID, "vw_costPerMinuteGroup") - {'post_meta'}
	DeletionDetector.delete_post_meta($postID, "vw_costPerMinutetext") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "edate", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "vw_costPerMinuteGroup", $costPerMinute) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "vw_costPerMinute", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($channel_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($question->webcam_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($postID, "checkin", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "performer", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "privateShow", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "vw_slots2way", $slots2way) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "contentIDs", $contentIDs) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($postID, "vw_slots2way") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "paidSessionsGroup", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "performer", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_roomBrief", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_videos", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_roomLabel", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vwf_" . $fieldName, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_pictures", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "vw_presentationMode", $roomLabel) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "edate", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "vw_videos", "0") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "modeVoyeur", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "sessionStart", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($postID, "group_disabled", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "vw_featured", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "videowhisper_template", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "performer") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream_record_private", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vwf_" . $fieldName, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream_record_all", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_playlistActive", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($postID, "video_teaser", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "performerID", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "contentIDs", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post(abs($selectedInt)) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($postID, "vwf_" . $fieldName, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "performerID", false) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post->ID, "updated_media", time()) - {'post_meta'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_ipCamera", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "performerID", false) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($item->ID, "group_disabled", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "modeVoyeur", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "edate", $ztime) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "hasPicture", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($item->ID, "vw_roomBrief", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "roomInterface", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "showImage", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($item->ID, "vw_roomLabel", true) - {'post_meta'}
	WordPressStorageDetector.add_post_meta($postID, "performerID", $current_user->ID) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "groupCPM", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-type", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_accessList", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_bonusRatio", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_earningRatio", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "performerID", false) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "performer", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_accessPrice", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($item->ID, "groupMode", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "groupCPM", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "roomInterface", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "mode2way", $mode2way) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "group_disabled", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "privateShow", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_costPerMinute", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "vw_costPerMinutetext", $costPerMinuteText) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "mode2way", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "performerUserID", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_banCountries", false) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_costPerMinuteGroup", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "groupMode", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($item->ID, "roomInterface", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "maxDate", time()) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "performer", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_field("post_author", $postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($postID, "groupMode", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-protocol", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "groupParameters", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "room_private", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-protocol", "rtmp") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($session->rid, "vw_subscription_tier", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "mode2way", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($disablePlaylist) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_costPerMinuteGroup", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($item->ID, "groupParameters", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-hls", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "goals", $goals) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($postID, "vw_costPerMinuteaudio") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "video_teaser", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "performer", $stream) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "goals", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_slots2way", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "performer", $userName) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "groupMode", $groupMode) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "privateShow", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($item->ID, "paidSessionsPrivate", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "groupCPM", floatval($CPMg)) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, $meta, $modeParameters[$meta]) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "goals_sort", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-codec-audio", strtolower($audioCodec)) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($rid, "paidSessionsPrivate", $clients->no) - {'post_meta'}
	WordPressRetrievalDetector.get_post($pid) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($postID, "snapshot", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "thumbSnapshot", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($nextRoomID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($roomPost->ID, "performer", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($item->ID, "vw_featured", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($item->ID, "checkin", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($item->ID, "requests_disable", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($rid, "paidSessionsGroup", $clients->no) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "performerUserID", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "privateShow", $shows) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "performerUserID", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($roomPost->ID, "vw_playlistUpdated", time()) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "performer", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_field("post_author", $session->rid) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_costPerMinuteGroup", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "bans", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "btime", $btime) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($postID, "vw_costPerMinutetext") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "bans", $bans) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_slots2way", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($postID, "productIDs", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "performerID", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "vwf_" . $fieldName, $tags) - {'post_meta'}
	WordPressRetrievalDetector.get_post(abs($selectedInt)) - {'post_meta', 'post', 'wp_post'}
remote
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
user
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($userID) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($userID) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by($userName, $userRow->session) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($performerID) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($collectID) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($privateUID) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_users($args) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_users($args) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($TuserID) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($message->sender_id) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($message->sender_id) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($performerID) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_users($args) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($session->uid) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", $sqlRow->username) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($post->post_author) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($privateUID) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($user_id) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by($userName, $chatRow->username) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($userID) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", $user) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($performerID) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $user) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata(intval($performerID)) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($user_id) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $email) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $studio) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $value) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", $studio) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", $value) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($transactionsID) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_users(["meta_key" => "videowhisper_ip_register", "meta_value" => self->get_ip_address(), "meta_compare" => "="]) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($userID) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($session->uid) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($session->uid) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $client) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by($userName, $sqlRow->username) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", $client) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($user_id) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($mainmessage->sender_id) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($message->sender_id) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_update_user(["ID" => $member->ID, "role" => sanitize_text_field($options["rolePerformer"])]) - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_create_user($performer_username, $random_password, $performer_email) - {'user', 'user_meta'}
	WordPressStorageDetector.wp_insert_user($newuser) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($studioID) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_update_user(["ID" => $user_id, "role" => $options["rolePerformer"]]) - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_update_user($userdata) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.wp_create_user($performer_username, $random_password, $performer_email) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", $chatRow->username) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($user_id) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($message->sender_id) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	ArrayElementDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", $value) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $value) - {'user', 'user_meta'}
	WordPressStorageDetector.wp_update_user(["ID" => $member->ID, "role" => sanitize_text_field($options["rolePerformer"])]) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.wp_update_user(["ID" => $user_id, "role" => $options["rolePerformer"]]) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($userID) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by($options["performerName"], $username) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", $username) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("id", $performerID) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_currentuserinfo() - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($userID) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($user_id) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by($options["userName"], $username) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($id) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("id", $id) - {'user', 'user_meta'}
	WordPressStorageDetector.wp_update_user($userdata) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($userID) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($user_id) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_users($args) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", $chatRow->username) - {'user', 'user_meta'}
user_meta
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($userID) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($userID) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id, "studioID", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id, "videowhisper_activate", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($userID, "balance_warning" . $privateUID, true) - {'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by($userName, $userRow->session) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($performerID) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user->ID, "vwActivityPost", true) - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id, "videowhisper_ip_register", true) - {'ip', 'user_meta'}
	WordPressStorageDetector.update_user_meta($current_user->ID, "vwUpdated", time()) - {'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($collectID) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($privateUID) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user->ID, "vwf_" . $fieldName, true) - {'user_meta'}
	WordPressRetrievalDetector.get_users($args) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($uid, "vw_ppv_temp", $temp) - {'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($performer->ID, "studioPassword", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($userID, "tipsRecent", true) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_users($args) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($userID, "vwTipLast", true) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($TuserID) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id, "vwUpdated", true) - {'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($message->sender_id) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($collectID, "studioID", true) - {'user_meta'}
	WordPressRetrievalDetector.get_userdata($message->sender_id) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($performerID) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($userID, "vw_ppv_tempt", true) - {'user_meta'}
	WordPressRetrievalDetector.get_users($args) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($session->uid) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($performerID, "tipsRecent", true) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "vwVerified", 2) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "vwVerifiedTime", time()) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "vwVerifiedReason", wp_kses_post($_POST["reason"])) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($session->uid, "h5v_sfx", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($session->uid, "h5v_dark", true) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "adminSuspended", $adminSuspended) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "vwVerified", 1) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($session->uid, "h5v_audio", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", $sqlRow->username) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "vwVerifiedTime", time()) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($session->uid, "h5v_pip", true) - {'user_meta'}
	WordPressStorageDetector.delete_user_meta($user_id, "vwVerifiedReason") - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($session->uid, "h5v_pip", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($session->uid, "h5v_reveal_warmup", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($userID, "tipsRecent", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($current_user->ID, "studioDisabled", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($session->uid, "h5v_dark", true) - {'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($session->uid, "currentWebcam", true) - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id, "videowhisper_newpassword", true) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($collectID, "studioCollectTotal", $balance + $collectTotal) - {'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($post->post_author) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($privateUID) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($user_id) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by($userName, $chatRow->username) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($current_user->ID, "vw_provider_subscriptions", true) - {'user_meta'}
	WordPressRetrievalDetector.get_userdata($userID) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id, "videowhisper_newpassword", true) - {'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($current_user->ID, "vwTipLast", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($current_user->ID, "vwf_" . $fieldName, true) - {'user_meta'}
	WordPressStorageDetector.update_usermeta($targetID, "tipsRecent", $tipsRecent) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($performerID, "currentWebcam", $pid) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($session->uid, "h5v_audio", true) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($userID, "vwTipLast", time()) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($current_user->ID, "vwVerifiedReason", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", $user) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($performerID) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $user) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata(intval($performerID)) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($user_id) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($collectID, "studioCollectLast", $balance) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($current_user->ID, "vwVerified", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $email) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $studio) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $value) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", $studio) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", $value) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($targetID, "tipsRecent", true) - {'user_meta'}
	WordPressRetrievalDetector.get_userdata($transactionsID) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_users(["meta_key" => "videowhisper_ip_register", "meta_value" => self->get_ip_address(), "meta_compare" => "="]) - {'user', 'user_meta'}
	WordPressStorageDetector.update_usermeta($userID, "tipsRecent", $tipsRecent) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($session->uid, "h5v_sfx", true) - {'user_meta'}
	WordPressRetrievalDetector.get_userdata($userID) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($session->uid, "h5v_reveal", true) - {'user_meta'}
	WordPressRetrievalDetector.get_userdata($session->uid) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($session->uid) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user->ID, "vwVerified", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user->ID, "vwSuspended", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user->ID, "vwf_" . $fieldName, true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id, "vwVerified", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id, "videowhisper_ip_newpassword", true) - {'ip', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($current_user->ID, "vwSuspended", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $client) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by($userName, $sqlRow->username) - {'user', 'user_meta'}
	WordPressStorageDetector.update_usermeta($userID, "tipsRecent", $tipsRecent) - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($uid, "paidSessionsPrivate", true) - {'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($uid, "paidSessionsGroup", true) - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", $client) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($session->uid, "h5v_min", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($uid, "paidSessionsPrivate", true) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($user_id) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($uid, "paidSessionsGroup", true) - {'user_meta'}
	WordPressRetrievalDetector.get_userdata($mainmessage->sender_id) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($message->sender_id) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($userID, $key, $value) - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($uid, "vw_ppv_temp", 0) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($current_user->ID, "vwf_" . $fieldName, true) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($userID, $name, $value) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($userID, "updated_options", time()) - {'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($userID, "balance_warning" . $privateUID, time()) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($current_user->ID, "vwf_" . $fieldName, sanitize_text_field($_POST[$fieldName])) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_update_user(["ID" => $member->ID, "role" => sanitize_text_field($options["rolePerformer"])]) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($collectID, "studioCollectTotal", true) - {'user_meta'}
	WordpressHashingFnDetector.wp_create_user($performer_username, $random_password, $performer_email) - {'user', 'user_meta'}
	WordPressStorageDetector.wp_insert_user($newuser) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "studioPassword", $random_password) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($current_user->ID, "currentWebcam", $selectWebcam) - {'user_meta'}
	WordPressRetrievalDetector.get_userdata($studioID) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.update_usermeta($performerID, "tipsRecent", $tipsRecent) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($session->uid, "h5v_min", true) - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($userID, "currentWebcam", true) - {'user_meta'}
	WordpressHashingFnDetector.wp_update_user(["ID" => $user_id, "role" => $options["rolePerformer"]]) - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_update_user($userdata) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user->ID, "videowhisper_activate") - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "videowhisper_newpassword", $code) - {'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.wp_create_user($performer_username, $random_password, $performer_email) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", $chatRow->username) - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_set_password($password, $user_id) - {'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($user_id) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($login_user->ID, "videowhisper_ip_login", self->get_ip_address()) - {'ip', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id, "studioID", true) - {'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($uid, "vw_ppv_tempt", time()) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.delete_user_meta($user_id, "videowhisper_newpassword") - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($current_user->ID, "vwf_" . $fieldName, true) - {'user_meta'}
	WordPressStorageDetector.wp_set_password($password, $user_id) - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($message->sender_id) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($member->ID, "currentWebcam", $webcamID) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "videowhisper_ip_newpassword", self->get_ip_address()) - {'ip', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($collectID, "studioCollectLast", true) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($current_user->ID, "vwf_" . $fieldName, $newpath) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id, "vwSuspended", true) - {'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($current_user->ID, "currentWebcam", true) - {'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($transactionsID, "studioID", true) - {'user_meta'}
	ArrayElementDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($member->ID, "studioDisabled", 0) - {'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", $value) - {'user', 'user_meta'}
	WordPressStorageDetector.delete_user_meta($user_id, "videowhisper_activate") - {'user_meta'}
	WordPressStorageDetector.update_user_meta($current_user->ID, "vwf_" . $fieldName, sanitize_text_field($_POST[$fieldName])) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $value) - {'user', 'user_meta'}
	WordPressStorageDetector.wp_update_user(["ID" => $member->ID, "role" => sanitize_text_field($options["rolePerformer"])]) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($uid, "paidSessionsGroup", $clients->no) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user->ID, "vwf_" . $fieldName, $newpath) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($current_user->ID, "currentWebcam", true) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user->ID, "vwf_" . $fieldName, sanitize_text_field($_POST[$fieldName])) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "studioDisabled", $_GET["disabled"]) - {'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($user->ID, "vwUpdated", time()) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	DeletionDetector.delete_user_meta($user_id, "videowhisper_newpassword") - {'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($uid, "paidSessionsPrivate", $clients->no) - {'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($userID, "updated_options", true) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "studioID", $current_user->ID) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "studioLogin", $current_user->user_login) - {'user_meta'}
	WordPressStorageDetector.wp_update_user(["ID" => $user_id, "role" => $options["rolePerformer"]]) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "currentWebcam", $webcamID) - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($userID, $key, true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($performerID, "currentWebcam", true) - {'user_meta'}
	DeletionDetector.delete_user_meta($user_id, "videowhisper_activate") - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "studioDisabled", 0) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($userID) - {'user', 'user_meta'}
	DeletionDetector.delete_user_meta($user_id, "vwVerifiedReason") - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($performer->ID, "studioDisabled", true) - {'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by($options["performerName"], $username) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($uid, "paidSessionsGroup", true) - {'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", $username) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("id", $performerID) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($performer->ID, "studioCollectLast", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($uid, "paidSessionsPrivate", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($performer->ID, "studioCollectTotal", true) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_currentuserinfo() - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($userID, "currentWebcam", true) - {'user_meta'}
	WordPressRetrievalDetector.get_userdata($userID) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($session->uid, "h5v_reveal", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($current_user->ID, "vwf_" . $fieldName, true) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($current_user->ID, "vwTipLast", time()) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($userID, "micropayments_balance", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id, "videowhisper_activate", true) - {'user_meta'}
	WordPressStorageDetector.add_user_meta($user_id, "videowhisper_activate", $code, true) - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($user_id) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by($options["userName"], $username) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user->ID, "vwf_" . $fieldName, true) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($uid, "vw_ppv_tempt", time()) - {'user_meta'}
	WordPressRetrievalDetector.get_userdata($id) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("id", $id) - {'user', 'user_meta'}
	WordPressStorageDetector.wp_update_user($userdata) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id, "vwVerified", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($session->uid, "h5v_reveal_warmup", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id, "vwVerifiedTime", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($current_user->ID, "vwf_" . $fieldName, true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($userID, "vw_ppv_temp", true) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($member->ID, "studioID", $memberStudio->ID) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id, "vwVerifiedReason", true) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($member->ID, "studioLogin", $memberStudio->user_login) - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($userID) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($current_user->ID, "studioDisabled", true) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($current_user->ID, "currentWebcam", true) - {'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id, "vwUpdated", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($session->uid, "vw_client_subscription_" . $author_id, true) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user->ID, "vwActivityPost", time()) - {'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($current_user->ID, "vwf_" . $fieldName, sanitize_text_field($_POST[$fieldName])) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "videowhisper_ip_register", self->get_ip_address()) - {'ip', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($user_id) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($performer->ID, "currentWebcam", true) - {'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_users($args) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", $chatRow->username) - {'user', 'user_meta'}
wp_post
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($roomid) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($partyID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($roomID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post(intval($selectWebcam)) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($partyRoomID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($selectWebcam) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($channel_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($question->webcam_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post(abs($selectedInt)) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_field("post_author", $postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($disablePlaylist) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($pid) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($nextRoomID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_field("post_author", $session->rid) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post(abs($selectedInt)) - {'post_meta', 'post', 'wp_post'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:02:32.148230.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 67532 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:07.999867.

!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 3754
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 796
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 5555
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 10364
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 13269
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 8861
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 22252
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 22562
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 26696
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 33100
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 40905
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 47328
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 47627
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 46944
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 82006
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 79126
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 75871
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 86213
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 83378
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 99488
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 103275
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 104139
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 101611
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 102875
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 115445
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 118702
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 115972
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 129396
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 127855
1000 STORE_REACHES edges created
2000 STORE_REACHES edges created
3000 STORE_REACHES edges created
4000 STORE_REACHES edges created
5000 STORE_REACHES edges created
6000 STORE_REACHES edges created
7000 STORE_REACHES edges created
8000 STORE_REACHES edges created
9000 STORE_REACHES edges created
10000 STORE_REACHES edges created
11000 STORE_REACHES edges created
12000 STORE_REACHES edges created
13000 STORE_REACHES edges created
14000 STORE_REACHES edges created
15000 STORE_REACHES edges created
16000 STORE_REACHES edges created
17000 STORE_REACHES edges created
18000 STORE_REACHES edges created
19000 STORE_REACHES edges created
20000 STORE_REACHES edges created
21000 STORE_REACHES edges created
22000 STORE_REACHES edges created
23000 STORE_REACHES edges created
24000 STORE_REACHES edges created
25000 STORE_REACHES edges created
26000 STORE_REACHES edges created
27000 STORE_REACHES edges created
28000 STORE_REACHES edges created
29000 STORE_REACHES edges created
30000 STORE_REACHES edges created
31000 STORE_REACHES edges created
32000 STORE_REACHES edges created
33000 STORE_REACHES edges created
34000 STORE_REACHES edges created
35000 STORE_REACHES edges created
36000 STORE_REACHES edges created
37000 STORE_REACHES edges created
38000 STORE_REACHES edges created
39000 STORE_REACHES edges created
40000 STORE_REACHES edges created
41000 STORE_REACHES edges created
42000 STORE_REACHES edges created
43000 STORE_REACHES edges created
44000 STORE_REACHES edges created
45000 STORE_REACHES edges created
46000 STORE_REACHES edges created
47000 STORE_REACHES edges created
48000 STORE_REACHES edges created
49000 STORE_REACHES edges created
50000 STORE_REACHES edges created
51000 STORE_REACHES edges created
52000 STORE_REACHES edges created
53000 STORE_REACHES edges created
54000 STORE_REACHES edges created
55000 STORE_REACHES edges created
56000 STORE_REACHES edges created
57000 STORE_REACHES edges created
58000 STORE_REACHES edges created
59000 STORE_REACHES edges created
60000 STORE_REACHES edges created
61000 STORE_REACHES edges created
62000 STORE_REACHES edges created
63000 STORE_REACHES edges created
64000 STORE_REACHES edges created
65000 STORE_REACHES edges created
66000 STORE_REACHES edges created
67000 STORE_REACHES edges created
67532 STORE_REACHES edges created
67532 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 1000 nodes as PERSONAL
Tainted 2000 nodes as PERSONAL
Tainted 3000 nodes as PERSONAL
Tainted 4000 nodes as PERSONAL
Tainted 5000 nodes as PERSONAL
Tainted 6000 nodes as PERSONAL
Tainted 7000 nodes as PERSONAL
Tainted 8000 nodes as PERSONAL
Tainted 9000 nodes as PERSONAL
Tainted 9766 nodes as PERSONAL
In total, tainted 9766 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 1000 nodes as ENCRYPTED
Tainted 2000 nodes as ENCRYPTED
Tainted 3000 nodes as ENCRYPTED
Tainted 4000 nodes as ENCRYPTED
Tainted 5000 nodes as ENCRYPTED
Tainted 6000 nodes as ENCRYPTED
Tainted 7000 nodes as ENCRYPTED
Tainted 8000 nodes as ENCRYPTED
Tainted 9000 nodes as ENCRYPTED
Tainted 9363 nodes as ENCRYPTED
In total, tainted 9363 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 2:05:38.984629.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 2:34:45.646279!
Request variable '$_POST["email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["videowhisper_password"]' of personal types {'password'} is found.,,None
Request variable '$_POST["email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["videowhisper_password"]' of personal types {'password'} is found.,,None
Request variable '$_POST["videowhisper_password"]' of personal types {'password'} is found.,,None
Request variable '$_POST["firstname"]' of personal types {'first_name'} is found.,,None
Request variable '$_POST["lastname"]' of personal types {'last_name'} is found.,,None
Request variable '$_POST["email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["performer_username"]' of personal types {'user', 'user_meta'} is found.,,None
Request variable '$_POST["performer_email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["address"]' of personal types {'address'} is found.,,None
Request variable '$_POST["address"]' of personal types {'address'} is found.,,None
DELETION call to delete_user_meta($user_id, "vwVerifiedReason") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($postID, "vw_bonusRatio") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_user_meta($user_id, "videowhisper_newpassword") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_user_meta($user_id, "videowhisper_activate") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($postID, "vw_costPerMinute") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($postID, "vw_costPerMinuteaudio") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($postID, "vw_costPerMinutetext") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($postID, "vw_costPerMinuteGroup") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($postID, "vw_slots2way") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($postID, "vw_banCountries") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($postID, "myCRED_sell_content") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to wp_delete_attachment($file->ID) alters data types {'attachment_meta', 'attachment'}. Passed arguments: 0: $post_id (int). Returns (WP_Post|false|null).,None,None
MD5 called with parameters [options, webKey, postID, vw, userID]. Ignore if [options, webKey, postID, vw, userID] does not contain personal information.,md5,None
MD5 called with parameters [webKey, vw, options, postID]. Ignore if [webKey, vw, options, postID] does not contain personal information.,md5,None
MD5 called with parameters [options, webKey, vw, ID, item]. Ignore if [options, webKey, vw, ID, item] does not contain personal information.,md5,None
SHA1 called with parameters [time, user_id]. Ignore if [time, user_id] does not contain personal information.,sha1,None
SHA1 called with parameters [time, user_id]. Ignore if [time, user_id] does not contain personal information.,sha1,None
MD5 called with parameters [fn, uniqid, true]. Ignore if [fn, uniqid, true] does not contain personal information.,md5,None
MD5 called with parameters [current_user, options, webKey, postID, vw, ID]. Ignore if [current_user, options, webKey, postID, vw, ID] does not contain personal information.,md5,None
MD5 called with parameters [webKey, vw, options, postID]. Ignore if [webKey, vw, options, postID] does not contain personal information.,md5,None
MD5 called with parameters [webKey, vw, options, postID]. Ignore if [webKey, vw, options, postID] does not contain personal information.,md5,None
MD5 called with parameters [webKey, vw, options, postID]. Ignore if [webKey, vw, options, postID] does not contain personal information.,md5,None
MD5 called with parameters [options, webKey, postID, vw, userID]. Ignore if [options, webKey, postID, vw, userID] does not contain personal information.,md5,None
MD5 called with parameters [webKey, vw, options, postID]. Ignore if [webKey, vw, options, postID] does not contain personal information.,md5,None
MD5 called with parameters [webKey, vw, options, postID]. Ignore if [webKey, vw, options, postID] does not contain personal information.,md5,None
MD5 called with parameters [options, webKey, postID, vw, userID]. Ignore if [options, webKey, postID, vw, userID] does not contain personal information.,md5,None
MD5 called with parameters [webKey, vw, options, postID]. Ignore if [webKey, vw, options, postID] does not contain personal information.,md5,None
MD5 called with parameters [options, webKey, vw, channel_id, userID]. Ignore if [options, webKey, vw, channel_id, userID] does not contain personal information.,md5,None
MD5 called with parameters [options, webKey, vw, ID, item]. Ignore if [options, webKey, vw, ID, item] does not contain personal information.,md5,None
RETRIEVAL call to file_get_contents($path).,None,None
RETRIEVAL call to file_get_contents($log["file"]).,None,None
RETRIEVAL call to file_get_contents($smilPath).,None,None
RETRIEVAL call to file_get_contents($destination).,None,None
RETRIEVAL call to file_get_contents($path).,None,None
RETRIEVAL call to file_get_contents($path).,None,None
RETRIEVAL call to file_get_contents($lastCleanFile).,None,None
RETRIEVAL call to file($filename1).,None,None
RETRIEVAL call to file_get_contents($path).,None,None
STORAGE call to fputs($dfile, $messageText . "<BR>").,None,None
STORAGE call to fputs($dfile, $messageText . "<BR>").,None,None
STORAGE call to file_put_contents($log_file, " CMD: " . $cmd, FILE_APPEND).,None,None
STORAGE call to file_put_contents($log_file, $info, FILE_APPEND).,None,None
STORAGE call to file_put_contents($log_file, "

CMD: " . $cmd . " Return:" . $returnvalue . " processID:" . $processId . " postID:" . $postID . " stream:" . $stream . "
", FILE_APPEND).,None,None
STORAGE call to file_put_contents($log_file, $stream"|"$stream_hls"|"$stream_webrtc"|"$transcodeEnabled"|"$detect"|"$videoCodec"|"$audioCodec, FILE_APPEND).,None,None
STORAGE call to file_put_contents($log_file, $info, FILE_APPEND).,None,None
STORAGE call to file_put_contents($log_file, "

CMD: " . $cmd, FILE_APPEND).,None,None
STORAGE call to file_put_contents($log_file, "RTSP stream incomplete: " . escapeshellarg($options["rtsp_server"] . "/" . $stream) . " Will check again later... ", FILE_APPEND).,None,None
STORAGE call to fputs($dfile, $message . "<BR>").,None,None
STORAGE call to fputs($dfile, $message . "<BR>").,None,None
STORAGE call to file_put_contents($path, serialize($var)).,None,None
STORAGE call to file_put_contents($path, $var).,None,None
STORAGE call to file_put_contents($smilPath, $smilCode).,None,None
STORAGE call to file_put_contents($lastCleanFile, $ztime).,None,None
STORAGE call to fputs($dfile, $info).,None,None
STORAGE call to fputs($dfile, "VideoWhisper Log for RTMP Session Control" . "
").,None,None
STORAGE call to fputs($dfile, "Server Date: " . "
" . date("D M j G:i:s T Y") . "
").,None,None
STORAGE call to fputs($dfile, "$_POST:" . "
" . serialize($_POST)).,None,None
STORAGE call to file_put_contents($options["uploadsPath"] . "/sessionsRTP", $rtpsessiondata).,None,None
STORAGE call to fputs($dfile, "
Control RTP Sessions: " . "
" . $controlSessionsS).,None,None
STORAGE call to file_put_contents($options["uploadsPath"] . "/sessionsUsers", $userdata).,None,None
STORAGE call to fputs($dfile, "
Control RTMP Users: " . "
" . $controlUsersS).,None,None
STORAGE call to fputs($dfile, "
" . $debugInfo).,None,None
STORAGE call to file_put_contents($options["uploadsPath"] . "/sessionsApp", $appStats).,None,None
object property '$current_user->user_nicename' of personal types {'user', 'user_meta'} is found.,,None
object property '$current_user->user_email' of personal types {'email'} is found.,,None
object property '$session->username' of personal types {'user', 'user_meta'} is found.,,None
object property '$session->username' of personal types {'user', 'user_meta'} is found.,,None
object property '$session->username' of personal types {'user', 'user_meta'} is found.,,None
object property '$session->username' of personal types {'user', 'user_meta'} is found.,,None
object property '$user->user_nicename' of personal types {'user', 'user_meta'} is found.,,None
object property '$user->user_nicename' of personal types {'user', 'user_meta'} is found.,,None
object property '$session->username' of personal types {'user', 'user_meta'} is found.,,None
object property '$user->user_nicename' of personal types {'user', 'user_meta'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$session->username' of personal types {'user', 'user_meta'} is found.,,None
object property '$session->username' of personal types {'user', 'user_meta'} is found.,,None
object property '$sender->user_nicename' of personal types {'user', 'user_meta'} is found.,,None
object property '$sqlRow->username' of personal types {'user', 'user_meta'} is found.,,None
object property '$sqlRow->username' of personal types {'user', 'user_meta'} is found.,,None
object property '$sqlRow->username' of personal types {'user', 'user_meta'} is found.,,None
object property '$sqlRow->username' of personal types {'user', 'user_meta'} is found.,,None
object property '$session->username' of personal types {'user', 'user_meta'} is found.,,None
object property '$session->username' of personal types {'user', 'user_meta'} is found.,,None
object property '$user->user_nicename' of personal types {'user', 'user_meta'} is found.,,None
object property '$user->user_nicename' of personal types {'user', 'user_meta'} is found.,,None
object property '$sqlRow->username' of personal types {'user', 'user_meta'} is found.,,None
object property '$sqlRow->username' of personal types {'user', 'user_meta'} is found.,,None
object property '$sqlRow->username' of personal types {'user', 'user_meta'} is found.,,None
object property '$current_user->user_nicename' of personal types {'user', 'user_meta'} is found.,,None
object property '$current_user->user_nicename' of personal types {'user', 'user_meta'} is found.,,None
object property '$current_user->user_nicename' of personal types {'user', 'user_meta'} is found.,,None
object property '$current_user->user_nicename' of personal types {'user', 'user_meta'} is found.,,None
object property '$current_user->user_nicename' of personal types {'user', 'user_meta'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$user->user_nicename' of personal types {'user', 'user_meta'} is found.,,None
object property '$current_user->user_nicename' of personal types {'user', 'user_meta'} is found.,,None
object property '$current_user->user_nicename' of personal types {'user', 'user_meta'} is found.,,None
object property '$current_user->user_email' of personal types {'email'} is found.,,None
object property '$performer->user_email' of personal types {'email'} is found.,,None
object property '$current_user->user_nicename' of personal types {'user', 'user_meta'} is found.,,None
object property '$current_user->user_email' of personal types {'email'} is found.,,None
object property '$webcamPost->post_password' of personal types {'password'} is found.,,None
object property '$author->user_email' of personal types {'email'} is found.,,None
object property '$sender->user_nicename' of personal types {'user', 'user_meta'} is found.,,None
object property '$client->user_email' of personal types {'email'} is found.,,None
object property '$sender->user_nicename' of personal types {'user', 'user_meta'} is found.,,None
object property '$sender->user_nicename' of personal types {'user', 'user_meta'} is found.,,None
object property '$current_user->user_nicename' of personal types {'user', 'user_meta'} is found.,,None
object property '$current_user->user_email' of personal types {'email'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$session->username' of personal types {'user', 'user_meta'} is found.,,None
object property '$session->username' of personal types {'user', 'user_meta'} is found.,,None
object property '$session->username' of personal types {'user', 'user_meta'} is found.,,None
object property '$session->username' of personal types {'user', 'user_meta'} is found.,,None
object property '$chatRow->username' of personal types {'user', 'user_meta'} is found.,,None
object property '$session->username' of personal types {'user', 'user_meta'} is found.,,None
object property '$chatRow->username' of personal types {'user', 'user_meta'} is found.,,None
object property '$chatRow->username' of personal types {'user', 'user_meta'} is found.,,None
object property '$chatRow->username' of personal types {'user', 'user_meta'} is found.,,None
object property '$user->user_nicename' of personal types {'user', 'user_meta'} is found.,,None
object property '$user->user_nicename' of personal types {'user', 'user_meta'} is found.,,None
object property '$user->user_nicename' of personal types {'user', 'user_meta'} is found.,,None
object property '$user->user_nicename' of personal types {'user', 'user_meta'} is found.,,None
object property '$user->user_nicename' of personal types {'user', 'user_meta'} is found.,,None
object property '$session->username' of personal types {'user', 'user_meta'} is found.,,None
object property '$user->user_nicename' of personal types {'user', 'user_meta'} is found.,,None
object property '$session->username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$firstname' of personal types {'first_name'} is found.,,None
variable '$lastname' of personal types {'last_name'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$firstname' of personal types {'first_name'} is found.,,None
variable '$lastname' of personal types {'last_name'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$firstname' of personal types {'first_name'} is found.,,None
variable '$lastname' of personal types {'last_name'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$performer_username' of personal types {'user', 'user_meta'} is found.,,None
variable '$performer_email' of personal types {'email'} is found.,,None
variable '$performer_username' of personal types {'user', 'user_meta'} is found.,,None
variable '$performer_email' of personal types {'email'} is found.,,None
variable '$random_password' of personal types {'password'} is found.,,None
variable '$performer_email' of personal types {'email'} is found.,,None
variable '$random_password' of personal types {'password'} is found.,,None
variable '$performer_username' of personal types {'user', 'user_meta'} is found.,,None
variable '$random_password' of personal types {'password'} is found.,,None
variable '$performer_email' of personal types {'email'} is found.,,None
variable '$performer_username' of personal types {'user', 'user_meta'} is found.,,None
variable '$random_password' of personal types {'password'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username1' of personal types {'user', 'user_meta'} is found.,,None
variable '$username2' of personal types {'user', 'user_meta'} is found.,,None
variable '$username2' of personal types {'user', 'user_meta'} is found.,,None
variable '$username1' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
API call to wp_remote_get("https://www.google.com/recaptcha/api/siteverify" . "?secret=" . $options["recaptchaSecret"] . "&response=" . $recaptcha_response). Passed arguments: 0: $url (string). Returns (array|WP_Error).,https,[]
API call to wp_remote_get("https://www.google.com/recaptcha/api/siteverify" . "?secret=" . $options["recaptchaSecret"] . "&response=" . $recaptcha_response). Passed arguments: 0: $url (string). Returns (array|WP_Error).,https,[]
API call to wp_remote_get("https://www.google.com/recaptcha/api/siteverify" . "?secret=" . $options["recaptchaSecret"] . "&response=" . $recaptcha_response). Passed arguments: 0: $url (string). Returns (array|WP_Error).,https,[]
API call to wp_remote_get("https://www.google.com/recaptcha/api/siteverify" . "?secret=" . $options["recaptchaSecret"] . "&response=" . $recaptcha_response). Passed arguments: 0: $url (string). Returns (array|WP_Error).,https,[]
RETRIEVAL call to get_userdata($performerID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "performerID", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "performerID", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "room_text", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "room_conference", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "conference_auto", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "room_slots", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdata($session->uid) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_post_meta($post->ID, "vw_presentationMode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "party", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "external_rtmp", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "stream_record", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "stream_record_private", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "stream_record_all", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "gifts", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "goals_panel", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "goals_sort", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "question_closed", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($session->uid, "h5v_sfx", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($session->uid, "h5v_dark", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($session->uid, "h5v_pip", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($session->uid, "h5v_min", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($session->uid, "h5v_audio", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($session->uid, "h5v_reveal", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($session->uid, "h5v_reveal_warmup", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "room_audio", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "room_text", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "video_teaser", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_presentationMode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdata($userID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_userdata($performerID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_userdata($userID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($post->ID, "performer", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "performerUserID", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "room_conference", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "room_audio", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "room_text", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "requests_disable", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "privateShow", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "room_private", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "calls_only", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "group_disabled", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "groupCPM", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "groupMode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($session->uid, "currentWebcam", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdata($userID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_post_meta($post->ID, "party", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "video_teaser", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "external_rtmp", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "question_closed", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "question_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "goals_panel", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "goals_sort", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "gifts", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdata($session->uid) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "goals", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "presentationMedia", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "room_conference", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "room_slots", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdata($message->sender_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "calls_only", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($roomID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($postID, "bans", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "groupCPM", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "performer", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "sessionStart", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "checkin", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "privateShow", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdata($userID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_meta($userID, $key, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "bans", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "privateShow", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "performerUserID", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_accessList", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "bans", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_post_meta($postID, "bans", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdata($TuserID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_post_meta($postID, "performer", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "performerUserID", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($partyID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($partyID, "party_reserved", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($nextRoomID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($post->ID, "room_conference", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "conference_auto", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "performer", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "group_disabled", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($userID, "tipsRecent", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($userID, "vwTipLast", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($current_user->ID, "studioDisabled", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($performerID, "tipsRecent", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($targetID, "tipsRecent", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "gifts", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "question_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "question_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_by($userName, $sqlRow->username) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_by("login", $sqlRow->username) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_post_meta($postID, "party", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($current_user->ID, "currentWebcam", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($partyID, "partyRoomID", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($partyRoomID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($postID, "party", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($userID, "tipsRecent", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($userID, "balance_warning" . $privateUID, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($userID, "updated_options", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "updated_" . $update, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_user_meta($session->uid, "h5v_sfx", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($session->uid, "h5v_audio", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($session->uid, "h5v_dark", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($session->uid, "h5v_pip", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($session->uid, "h5v_min", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($session->uid, "h5v_reveal", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($session->uid, "h5v_reveal_warmup", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "requests_disable", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "room_private", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "calls_only", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "group_disabled", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "room_audio", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_option("vmls_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_post($disablePlaylist) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($roomPost->ID, "performer", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_currentuserinfo() alters data types {'user', 'user_meta'}. Returns (bool|WP_User).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($pid) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user->ID, "vwVerified", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user->ID, "vwSuspended", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user_id, "vwVerified", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user_id, "vwUpdated", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user_id, "studioID", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user_id, "videowhisper_activate", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdata($user_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_meta($user_id, "vwVerified", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user_id, "vwVerifiedTime", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user_id, "vwSuspended", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user_id, "vwUpdated", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user_id, "vwVerifiedReason", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user_id, "videowhisper_ip_register", true) alters data types {'ip', 'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user_id, "videowhisper_ip_newpassword", true) alters data types {'ip', 'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user->ID, "vwf_" . $fieldName, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user->ID, "vwf_" . $fieldName, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_users($args) alters data types {'user', 'user_meta'}. Passed arguments: 0: $args (array). Returns (array).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_option( . "_requirementsRemind") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option( . "_requirements") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($requirement["option"]) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($postID, "groupCPM", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "buddypressGroup", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "roomInterface", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_playlistActive", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "groupParameters", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "mode2way", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "modeVoyeur", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "group_disabled", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdata($user_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user_id, "videowhisper_newpassword", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_by("email", $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_userdata($user_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_meta($user_id, "videowhisper_newpassword", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_users(["meta_key" => "videowhisper_ip_register", "meta_value" => self->get_ip_address(), "meta_compare" => "="]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $args (array). Returns (array).,None,None
RETRIEVAL call to get_userdata($user_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_meta($user->ID, "vwf_" . $fieldName, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($current_user->ID, "vwf_" . $fieldName, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($current_user->ID, "vwf_" . $fieldName, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user_id, "videowhisper_activate", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user->ID, "videowhisper_activate") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_user_meta($current_user->ID, "vwVerified", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($current_user->ID, "vwSuspended", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($current_user->ID, "vwVerifiedReason", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($current_user->ID, "vwf_" . $fieldName, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($current_user->ID, "vwf_" . $fieldName, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($current_user->ID, "vwf_" . $fieldName, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_user_meta($collectID, "studioID", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdata($collectID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_userdata($studioID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_meta($collectID, "studioCollectLast", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($collectID, "studioCollectTotal", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($transactionsID, "studioID", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdata($transactionsID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_users($args) alters data types {'user', 'user_meta'}. Passed arguments: 0: $args (array). Returns (array).,None,None
RETRIEVAL call to get_userdata($user_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_meta($user_id, "studioID", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_users($args) alters data types {'user', 'user_meta'}. Passed arguments: 0: $args (array). Returns (array).,None,None
RETRIEVAL call to get_user_meta($performer->ID, "studioCollectLast", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($performer->ID, "studioCollectTotal", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($performer->ID, "studioDisabled", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($performer->ID, "studioPassword", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($performer->ID, "currentWebcam", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_users($args) alters data types {'user', 'user_meta'}. Passed arguments: 0: $args (array). Returns (array).,None,None
RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_post_meta($webcam->ID, "performerID", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdata(intval($performerID)) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_user_meta($current_user->ID, "studioDisabled", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($selectWebcam) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($webcam->ID, "performerID", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($current_user->ID, "currentWebcam", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_by("email", $value) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_by("login", $value) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_user_meta($current_user->ID, "currentWebcam", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($webcam->ID, "performerID", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdata($performerID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_costPerMinuteGroup", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_slots2way", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, $key, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "archivedSessions", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_by("email", $value) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_by("login", $value) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_costPerMinute", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_costPerMinuteGroup", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "groupMode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "room_private", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "groupMode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "room_private", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "roomInterface", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "performerID", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_by("id", $performerID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_post_meta($postID, "hasSnapshot", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "hasPicture", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($current_user->ID, "vw_provider_subscriptions", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_subscription_tier", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_costPerMinute", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_costPerMinuteaudio", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_costPerMinutetext", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_costPerMinuteGroup", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_slots2way", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "picture", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "thumbPicture", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "showImage", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "snapshot", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "thumbSnapshot", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "performerUserID", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "performer", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_roomLabel", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_roomBrief", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_banCountries", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_accessList", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_accessPrice", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vwf_" . $fieldName, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vwf_" . $fieldName, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "external_rtmp", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream_record", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream_record_private", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream_record_all", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "contentIDs", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post(abs($selectedInt)) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($postID, "contentIDs", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "statsTimeOnline", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "productIDs", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post(abs($selectedInt)) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($postID, "productIDs", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "bans", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($uid, "paidSessionsPrivate", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($uid, "paidSessionsGroup", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($uid, "paidSessionsPrivate", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($uid, "paidSessionsGroup", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($uid, "paidSessionsPrivate", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($uid, "paidSessionsGroup", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "performer", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "performerUserID", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_featured", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_videos", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_pictures", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_playlistActive", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "question_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "question_closed", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_option("VWinlineRecorderOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdata($post->post_author) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($question->webcam_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_userdata($message->sender_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_option("VWinlineRecorderOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdata($mainmessage->sender_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_post_meta($item->ID, "requests_disable", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "question_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdata($message->sender_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "question_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "question_closed", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_userdata($message->sender_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_post_meta($post->ID, "external_rtmp", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_user_by("email", $client) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_by("login", $client) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "roomInterface", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "video_teaser", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "video_teaser", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "pushStreams", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "edate", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_roomLabel", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_roomBrief", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "checkin", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "groupMode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "groupCPM", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWvideoShareOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_post_meta($item->ID, "edate", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($item->ID, "privateShow", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($item->ID, "vw_ipCamera", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($item->ID, "vw_playlistActive", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($item->ID, "customRoomLink", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($item->ID, "customRoomLink", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($item->ID, "vw_roomBrief", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($item->ID, "vw_roomLabel", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($item->ID, "groupMode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($item->ID, "groupCPM", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($item->ID, "groupParameters", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($item->ID, "paidSessionsPrivate", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($item->ID, "paidSessionsGroup", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($item->ID, "rateStarReview_rating", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($item->ID, "vw_featured", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($item->ID, "checkin", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($item->ID, "requests_disable", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($item->ID, "group_disabled", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "mode2way", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($item->ID, "roomInterface", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-protocol", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-mode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_post_meta($postID, "contentIDs", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "productIDs", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "video_teaser", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "maxViewers", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "maxDate", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "paidSessionsPrivate", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "paidSessionsGroup", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_videos", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_pictures", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vwf_" . $fieldName, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vwf_" . $fieldName, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-codec-video", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-codec-audio", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($info["postID"], "edate", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream_record", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream_record_all", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream_record_private", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "privateShow", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user->ID, "vwActivityPost", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($postID, "groupMode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "performer", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "snapshotDate", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-protocol", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_ipCamera", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "showImage", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "performerUserID", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "picture", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "snapshot", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "thumbPicture", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "thumbSnapshot", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-webrtc", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_transcode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-codec-video", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "privateShow", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "performer", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "performerUserID", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-protocol", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-mode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "pushStreams", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-protocol", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-codec-video", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-codec-audio", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-hls", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_transcode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-codec-video", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "privateShow", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "performer", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-protocol", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-hls", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_ipCamera", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "groupCPM", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_playlistActive", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_ipCamera", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "edate", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "vw_costPerMinute", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "vw_costPerMinuteGroup", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "customRoomLink", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "vw_earningRatio", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "vw_featured", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_user_meta($performerID, "currentWebcam", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "videowhisper_template", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "archivedSessions", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($video_teaser, "video-adaptive", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($video_teaser, "video-source-file", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_userdata($privateUID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_userdata($privateUID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_userdata($userID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_meta($userID, "currentWebcam", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_by($options["userName"], $username) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_by("login", $username) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_by($options["performerName"], $username) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_post_meta($postID, "groupCPM", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "performer", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "sessionStart", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "checkin", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "privateShow", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "groupMode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $key (string), 2: $single (bool). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "roomInterface", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "groupParameters", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "mode2way", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "modeVoyeur", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "edate", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "bans", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_user_meta($current_user->ID, "vwTipLast", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_user_by($userName, $userRow->session) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_by("login", $chatRow->username) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_meta($userID, "currentWebcam", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_by($userName, $chatRow->username) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_by("login", $chatRow->username) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post(intval($selectWebcam)) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWvideoShareOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_post_meta($video_id, "video-source-file", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($video_id, "video-adaptive", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "video_teaser", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($video_teaser, "video-adaptive", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_by("id", $id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_userdata($id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "goals", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "goal", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "goals", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($userID, "micropayments_balance", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($userID, "vw_ppv_tempt", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($userID, "vw_ppv_temp", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_costPerMinute" . $type, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_earningRatio", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_bonusRatio", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($session->rid, "vw_subscription_tier", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_field("post_author", $session->rid) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $field (string), 1: $post (int|WP_Post). Returns (string).,None,None
RETRIEVAL call to get_user_meta($session->uid, "vw_client_subscription_" . $author_id, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vmls_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "edate", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdata($userID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($postID, "performerID", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "performerID", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($postID, "performerID", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "performerID", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "maxViewers", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "performerID", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "rtmp_server", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "performer") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdata($userID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_post($channel_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-mode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdata($session->uid) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_by("email", $user) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_by("login", $user) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_userdata($user_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_user_by("email", $studio) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_by("login", $studio) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_post($roomid) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($post->ID, "videowhisper_template", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_roomLabel", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("VWliveWebcamsOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_banCountries", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_post_field("post_author", $postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $field (string), 1: $post (int|WP_Post). Returns (string).,None,None
RETRIEVAL call to get_post_meta($postID, "performer", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_playlistActive", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
STORAGE call to update_post_meta($postID, "buddypressGroup", $bp->groups->current_group->id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to add_post_meta($postID, "performerID", $current_user->ID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to update_post_meta($postID, "performer", $userName) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "performerUserID", $userID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-protocol", "rtsp") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-type", "webrtc") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "roomInterface", "html5app") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post->ID, "presentationMedia", $media) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post->ID, "updated_media", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "performer", $userName) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "performerUserID", $userID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "bans", $bans) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($userID, $key, $value) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "bans", $bans) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($userID, $name, $value) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($userID, "updated_options", time()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, $name, $value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "updated_options", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "updated_media", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "updated_room", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "updated_" . $update, time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "bans", $bans) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "bans", $bans) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "presentationMedia", $presentationMedia) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "updated_media", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "presentationMedia", $presentationMedia) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "updated_media", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "presentationMedia", $presentationMedia) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "updated_media", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "updated_files", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($partyID, "partyRoomID", $nextRoomID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($partyID, "partyRoomID", $nextRoomID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post->ID, "updated_media", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post->ID, "presentationMedia", $presentationMedia) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post->ID, "updated_media", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post->ID, "presentationMedia", $presentationMedia) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post->ID, "updated_media", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post->ID, "goals", $newGoals) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post->ID, "goal", $goal) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post->ID, "goals", $goals) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post->ID, "goals", $goals) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post->ID, "goals", $goals) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post->ID, "goals", $goals) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_usermeta($userID, "tipsRecent", $tipsRecent) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).,None,None
STORAGE call to update_usermeta($performerID, "tipsRecent", $tipsRecent) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).,None,None
STORAGE call to update_usermeta($targetID, "tipsRecent", $tipsRecent) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).,None,None
STORAGE call to update_user_meta($userID, "vwTipLast", time()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_usermeta($userID, "tipsRecent", $tipsRecent) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).,None,None
STORAGE call to update_user_meta($userID, "balance_warning" . $privateUID, time()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("VWliveWebcamsOptions", $adminOptions) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("VWliveWebcamsOptions", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("VWliveWebcamsOptions", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("VWliveWebcamsOptions", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($roomPost->ID, "vw_playlistUpdated", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($roomPost->ID, "vw_playlistActive", "0") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_insert_post($page). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to update_option("VWliveWebcamsOptions", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_user_meta($user_id, "vwVerified", 2) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "vwVerifiedReason", wp_kses_post($_POST["reason"])) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "vwVerifiedTime", time()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "vwVerified", 1) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "vwVerifiedTime", time()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_user_meta($user_id, "vwVerifiedReason") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_user_meta($user_id, "adminSuspended", $adminSuspended) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option( . "_requirementsRemind", time() + 86400) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option( . "_requirements", $status) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($postID, "mode2way", $mode2way) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "modeVoyeur", $modeVoyeur) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "videowhisper_newpassword", $code) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "statsTimeOnline", $timeOnline) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "vw_bonusRatio", $options["statsBonusRate"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($postID, "vw_bonusRatio") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to wp_set_password($password, $user_id) alters data types {'user_meta'}. Passed arguments: 0: $password (string), 1: $user_id (int).,None,None
STORAGE call to delete_user_meta($user_id, "videowhisper_newpassword") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_user_meta($user_id, "videowhisper_ip_newpassword", self->get_ip_address()) alters data types {'ip', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_insert_user($newuser) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,None,None
STORAGE call to add_user_meta($user_id, "videowhisper_activate", $code, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).,None,None
STORAGE call to update_user_meta($user_id, "videowhisper_ip_register", self->get_ip_address()) alters data types {'ip', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user->ID, "vwf_" . $fieldName, $newpath) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user->ID, "vwf_" . $fieldName, sanitize_text_field($_POST[$fieldName])) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user->ID, "vwUpdated", time()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($current_user->ID, "vwf_" . $fieldName, sanitize_text_field($_POST[$fieldName])) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_user_meta($user_id, "videowhisper_activate") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_user_meta($current_user->ID, "vwf_" . $fieldName, sanitize_text_field($_POST[$fieldName])) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($current_user->ID, "vwf_" . $fieldName, $newpath) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($current_user->ID, "vwf_" . $fieldName, sanitize_text_field($_POST[$fieldName])) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($current_user->ID, "vwUpdated", time()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($collectID, "studioCollectLast", $balance) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($collectID, "studioCollectTotal", $balance + $collectTotal) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_create_user($performer_username, $random_password, $performer_email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $username (string), 1: $password (string), 2: $email (string). Returns (int|WP_Error).,None,None
STORAGE call to update_user_meta($user_id, "studioID", $current_user->ID) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "studioLogin", $current_user->user_login) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "studioPassword", $random_password) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "studioDisabled", 0) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_update_user(["ID" => $user_id, "role" => $options["rolePerformer"]]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,None,None
STORAGE call to update_user_meta($user_id, "currentWebcam", $webcamID) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "studioDisabled", $_GET["disabled"]) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_insert_post($post). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($pid, "studioID", $current_user->ID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to add_post_meta($pid, "performerID", intval($performer), false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).,None,None
STORAGE call to update_user_meta($current_user->ID, "currentWebcam", $selectWebcam) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_insert_post($post). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($pid, "studioID", $current_user->ID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to add_post_meta($pid, "performerID", $performerID, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).,None,None
STORAGE call to update_post_meta($postID, "vw_subscription_tier", $subscriptionTier) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "vw_costPerMinute", $costPerMinute) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($postID, "vw_costPerMinute") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($postID, "vw_costPerMinuteaudio", $costPerMinuteAudio) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($postID, "vw_costPerMinuteaudio") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($postID, "vw_costPerMinutetext", $costPerMinuteText) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($postID, "vw_costPerMinutetext") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($postID, "vw_costPerMinuteGroup", $costPerMinute) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($postID, "vw_costPerMinuteGroup") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($postID, "vw_slots2way", $slots2way) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($postID, "vw_slots2way") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($postID, "picture", $destination) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "hasPicture", 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "thumbPicture", $thumbFilename) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "hasThumb", 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "showImage", $showImage) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_update_post(["ID" => $postID, "post_content" => $roomDescription]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($postID, "vw_roomLabel", $roomLabel) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "vw_roomBrief", $roomBrief) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($postID, "vw_banCountries") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to add_post_meta($postID, "vw_banCountries", trim($value)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to update_post_meta($postID, "vw_accessList", $accessList) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "vw_accessPrice", $accessPrice) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "myCRED_sell_content", $mCa) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($postID, "myCRED_sell_content") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to wp_update_post(["ID" => $postID, "post_password" => $accessPassword]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($postID, "vw_presentationMode", $roomLabel) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "vw_presentationMode", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "vw_videos", "1") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "vw_videos", "0") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "vw_pictures", "1") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "vw_pictures", "0") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "vw_playlistActive", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_update_post(["ID" => $postID, "post_title" => sanitize_file_name($webcamPost->post_title)]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($postID, "performer", $performerName) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "performerUserID", $current_user->ID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "sessionStart", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "groupCPM", floatval($CPMg)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "groupMode", $groupMode) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "groupParameters", $modeParameters) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, $meta, $modeParameters[$meta]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "groupCPM", 0) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "groupMode", $mode$mode__("Free", "ppv-live-webcams")) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "roomInterface", $roomInterface) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, $key, $value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "rtmp_server", $options["rtmp_server_archive"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "archivedSessions", $archivedSessions) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "rtmp_server", $options["rtmp_server"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "checkin", $selectedPerformers) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "updated_room", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "vwf_" . $fieldName, $tags) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "vwf_" . $fieldName, wp_kses($_POST[$fieldName], $allowedtags)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "contentIDs", $contentIDs) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "productIDs", $productIDs) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "bans", $bans) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "performer", $performerName) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "performerUserID", $current_user->ID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "vw_featured", 0) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "question_price", $price) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "question_closed", intval($_POST["question_closed"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "pushStreams", $pushDestinations) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "pushStreams", $pushDestinations) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($item->ID, "customRoomLink", $url) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "performer", $stream) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "performerUserID", $current_user->ID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-protocol", "rtsp") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-type", "webrtc") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "roomInterface", "html5") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-mode", "safari_pc") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-mode", "direct") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($login_user->ID, "videowhisper_ip_login", self->get_ip_address()) alters data types {'ip', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-hls", $stream) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-codec-video", strtolower($videoCodec)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-codec-audio", strtolower($audioCodec)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-codec-detect", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user->ID, "vwActivityPost", time()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "edate", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "snapshotDate", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "vw_lastSnapshot", $filename) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "snapshot", $filename) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "hasSnapshot", $picType) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "thumbSnapshot", $thumbFilename) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "hasThumb", 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-codec-video", strtolower($videoCodec)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-codec-audio", strtolower($audioCodec)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-codec-detect", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-webrtc", $stream_webrtc) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "transcoding-webrtc", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-webrtc", $stream_webrtc) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "vw_featured", 0) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "videowhisper_template", $postTemplate) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "vw_costPerMinute", sanitize_text_field($_REQUEST["vw_costPerMinute"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "vw_costPerMinuteGroup", sanitize_text_field($_REQUEST["vw_costPerMinuteGroup"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "vw_earningRatio", sanitize_text_field($_REQUEST["vw_earningRatio"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "vw_featured", sanitize_text_field($_REQUEST["vw_featured"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "customRoomLink", sanitize_text_field($_REQUEST["customRoomLink"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_insert_post($post). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($pid, "performer", $performer) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($pid, "performerID", $performerID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($performerID, "currentWebcam", $pid) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($pid, "studioID", $studioID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "archivedSessions", $archivedSessions) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "archivedSessions", []) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "edate", $ztime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "edate", $ztime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "privateShow", $shows) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "mode2way", $mode2way) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "modeVoyeur", $modeVoyeur) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "bans", $bans) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($current_user->ID, "vwTipLast", time()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_update_user($userdata) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($postID, "goals", $goals) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "goal", $goal) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "goals", $goals) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($uid, "paidSessionsPrivate", $clients->no) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($uid, "paidSessionsGroup", $clients->no) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($rid, "paidSessionsPrivate", $clients->no) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($rid, "paidSessionsGroup", $clients->no) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($uid, "vw_ppv_temp", $temp) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($uid, "vw_ppv_tempt", time()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($uid, "vw_ppv_temp", 0) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($uid, "vw_ppv_tempt", time()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "viewers", $viewers) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "maxViewers", $viewers) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "maxDate", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-protocol", "rtmp") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-type", "external") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-updated", $ztime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("VWliveWebcamsOptions", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($postID, "edate", $ztime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "btime", $btime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-protocol", "rtsp") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-type", "webrtc") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "edate", $ztime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-protocol", "rtmp") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-type", "external") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-updated", $ztime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "updated_stream", $ztime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($member->ID, "studioID", $memberStudio->ID) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($member->ID, "studioLogin", $memberStudio->user_login) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($member->ID, "studioDisabled", 0) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_update_user(["ID" => $member->ID, "role" => sanitize_text_field($options["rolePerformer"])]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,None,None
STORAGE call to update_user_meta($member->ID, "currentWebcam", $webcamID) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to add_option("vmls_db_version", $vmls_db_version) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("vmls_db_version", $vmls_db_version) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
CRYPTOGRAPHY call to wp_set_password($password, $user_id) alters data types {'user_meta'}. Passed arguments: 0: $password (string), 1: $user_id (int).,hash,None
CRYPTOGRAPHY call to wp_create_user($performer_username, $random_password, $performer_email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $username (string), 1: $password (string), 2: $email (string). Returns (int|WP_Error).,hash,None
CRYPTOGRAPHY call to wp_update_user(["ID" => $user_id, "role" => $options["rolePerformer"]]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,hash,None
CRYPTOGRAPHY call to wp_update_user($userdata) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,hash,None
CRYPTOGRAPHY call to wp_update_user(["ID" => $member->ID, "role" => sanitize_text_field($options["rolePerformer"])]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,hash,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
Data Deletion violation! The plugin has storage node that has no identifier and cannot be accessed!
Data Deletion violation! The plugin has storage node that has no identifier and cannot be accessed!
Data Deletion violation! The plugin has storage node that has no identifier and cannot be accessed!
Data Deletion violation! The plugin has storage node that has no identifier and cannot be accessed!
Data Deletion violation! The plugin has storage node that has no identifier and cannot be accessed!
Data Deletion violation! The plugin has storage node that has no identifier and cannot be accessed!
Data Deletion violation! The plugin has storage node that has no identifier and cannot be accessed!
Data Deletion violation! The plugin has storage node that has no identifier and cannot be accessed!
Data Deletion violation! The plugin has storage node that has no identifier and cannot be accessed!
Data Deletion violation! The plugin has storage node that has no identifier and cannot be accessed!
Data Deletion violation! The plugin has storage node that has no identifier and cannot be accessed!
Data Deletion violation! The plugin has storage node that has no identifier and cannot be accessed!
Data Deletion violation! The plugin has storage node that has no identifier and cannot be accessed!
Data Deletion violation! The plugin has storage node that has no identifier and cannot be accessed!
Data Deletion violation! The plugin has storage node that has no identifier and cannot be accessed!
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "stream-type", "external")", found in file ppv-live-webcams.php at line 5869. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "vw_presentationMode", "")", found in file inc/shortcodes.php at line 3548. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "performerUserID", $current_user->ID)", found in file inc/shortcodes.php at line 9390. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "stream-webrtc", $stream_webrtc)", found in file inc/streams.php at line 883. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "groupParameters", $modeParameters)", found in file inc/shortcodes.php at line 3659. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "roomInterface", $roomInterface)", found in file inc/shortcodes.php at line 3701. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_user_meta($current_user->ID, "vwUpdated", time())", found in file inc/shortcodes.php at line 2199. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_user_meta($uid, "vw_ppv_temp", $temp)", found in file ppv-live-webcams.php at line 4605. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($pid, "studioID", $current_user->ID)", found in file inc/shortcodes.php at line 2686. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "vw_costPerMinuteaudio", $costPerMinuteAudio)", found in file inc/shortcodes.php at line 3224. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "updated_stream", $ztime)", found in file ppv-live-webcams.php at line 5875. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($post->ID, "goals", $newGoals)", found in file inc/h5videochat.php at line 3890. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "groupMode", $mode$mode__("Free", "ppv-live-webcams"))", found in file inc/shortcodes.php at line 3680. 

[has_storage] Unstructured data storage of PII types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) to files through function "file_put_contents", found in file inc/streams.php at line 885. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "bans", $bans)", found in file inc/h5videochat.php at line 2936. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($partyID, "partyRoomID", $nextRoomID)", found in file inc/h5videochat.php at line 3590. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "stream-webrtc", $stream_webrtc)", found in file inc/streams.php at line 896. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "add_post_meta($pid, "performerID", $performerID, false)", found in file inc/shortcodes.php at line 3057. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "thumbPicture", $thumbFilename)", found in file inc/shortcodes.php at line 3394. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($roomPost->ID, "vw_playlistActive", "0")", found in file inc/options.php at line 3296. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user_id, "vwVerified", 2)", found in file inc/options.php at line 6293. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user_id, "vwVerifiedTime", time())", found in file inc/options.php at line 6295. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user_id, "vwVerifiedReason", wp_kses_post($_POST["reason"]))", found in file inc/options.php at line 6294. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_user_meta($user_id, "adminSuspended", $adminSuspended)", found in file inc/options.php at line 6326. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user_id, "vwVerified", 1)", found in file inc/options.php at line 6313. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user_id, "vwVerifiedTime", time())", found in file inc/options.php at line 6314. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "bans", $bans)", found in file inc/h5videochat.php at line 274. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "wp_insert_post($post)", found in file inc/shortcodes.php at line 2683. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($post->ID, "presentationMedia", $media)", found in file inc/h5videochat.php at line 2322. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "vw_pictures", "1")", found in file inc/shortcodes.php at line 3586. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "stream-hls", $stream)", found in file inc/streams.php at line 1007. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_user_meta($collectID, "studioCollectTotal", $balance + $collectTotal)", found in file inc/shortcodes.php at line 2324. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, $key, $value)", found in file inc/shortcodes.php at line 3712. 

[has_storage] Unstructured data storage of PII types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) to files through function "fputs", found in file inc/h5videochat.php at line 3141. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "edate", $ztime)", found in file ppv-live-webcams.php at line 1944. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "vw_roomBrief", $roomBrief)", found in file inc/shortcodes.php at line 3450. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($pid, "studioID", $current_user->ID)", found in file inc/shortcodes.php at line 3030. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "performer", $userName)", found in file inc/h5videochat.php at line 2733. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "sessionStart", time())", found in file inc/shortcodes.php at line 3618. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "buddypressGroup", $bp->groups->current_group->id)", found in file inc/buddypress.php at line 88. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "vw_playlistActive", "")", found in file inc/shortcodes.php at line 3594. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "bans", $bans)", found in file ppv-live-webcams.php at line 2223. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "performerUserID", $current_user->ID)", found in file inc/shortcodes.php at line 3616. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($pid, "performer", $performer)", found in file ppv-live-webcams.php at line 1348. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "vw_videos", "1")", found in file inc/shortcodes.php at line 3578. 

[has_storage] Unstructured data storage of PII types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) to files through function "file_put_contents", found in file inc/streams.php at line 1203. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_usermeta($targetID, "tipsRecent", $tipsRecent)", found in file inc/h5videochat.php at line 4119. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_user_meta($performerID, "currentWebcam", $pid)", found in file ppv-live-webcams.php at line 1363. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "edate", $ztime)", found in file ppv-live-webcams.php at line 5865. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($userID, "vwTipLast", time())", found in file inc/h5videochat.php at line 4123. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "productIDs", $productIDs)", found in file inc/shortcodes.php at line 5430. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($collectID, "studioCollectLast", $balance)", found in file inc/shortcodes.php at line 2323. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "vwf_" . $fieldName, wp_kses($_POST[$fieldName], $allowedtags))", found in file inc/shortcodes.php at line 4634. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "goal", $goal)", found in file ppv-live-webcams.php at line 4249. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_usermeta($userID, "tipsRecent", $tipsRecent)", found in file inc/h5videochat.php at line 4780. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "groupCPM", 0)", found in file inc/shortcodes.php at line 3679. 

[has_storage] Unstructured data storage of PII types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) to files through function "file_put_contents", found in file inc/streams.php at line 864. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "add_post_meta($pid, "performerID", intval($performer), false)", found in file inc/shortcodes.php at line 2691. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($pid, "studioID", $studioID)", found in file ppv-live-webcams.php at line 1368. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "stream-updated", $ztime)", found in file ppv-live-webcams.php at line 5870. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "archivedSessions", $archivedSessions)", found in file inc/shortcodes.php at line 3741. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_usermeta($userID, "tipsRecent", $tipsRecent)", found in file inc/h5videochat.php at line 3998. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "rtmp_server", $options["rtmp_server_archive"])", found in file inc/shortcodes.php at line 3727. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "rtmp_server", $options["rtmp_server"])", found in file inc/shortcodes.php at line 3744. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "checkin", $selectedPerformers)", found in file inc/shortcodes.php at line 3788. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($partyID, "partyRoomID", $nextRoomID)", found in file inc/h5videochat.php at line 3675. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($post->ID, "updated_media", time())", found in file inc/h5videochat.php at line 3725. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "add_post_meta($postID, "vw_banCountries", trim($value))", found in file inc/shortcodes.php at line 3471. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($post->ID, "updated_media", time())", found in file inc/h5videochat.php at line 3823. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "vw_accessList", $accessList)", found in file inc/shortcodes.php at line 3487. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "vw_accessPrice", $accessPrice)", found in file inc/shortcodes.php at line 3494. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($post->ID, "presentationMedia", $presentationMedia)", found in file inc/h5videochat.php at line 3786. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "myCRED_sell_content", $mCa)", found in file inc/shortcodes.php at line 3510. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($post->ID, "goals", $goals)", found in file inc/h5videochat.php at line 3920. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($post->ID, "updated_media", time())", found in file inc/h5videochat.php at line 3787. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($post->ID, "presentationMedia", $presentationMedia)", found in file inc/h5videochat.php at line 3822. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "presentationMedia", $presentationMedia)", found in file inc/h5videochat.php at line 3405. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($userID, $key, $value)", found in file inc/h5videochat.php at line 2771. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($post->ID, "goals", $goals)", found in file inc/h5videochat.php at line 3948. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_user_meta($uid, "vw_ppv_temp", 0)", found in file ppv-live-webcams.php at line 4608. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($post->ID, "goals", $goals)", found in file inc/h5videochat.php at line 3974. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($post->ID, "goals", $goals)", found in file inc/h5videochat.php at line 3980. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($userID, $name, $value)", found in file inc/h5videochat.php at line 3173. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($userID, "updated_options", time())", found in file inc/h5videochat.php at line 3174. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "vw_pictures", "0")", found in file inc/shortcodes.php at line 3588. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_user_meta($userID, "balance_warning" . $privateUID, time())", found in file inc/h5videochat.php at line 4828. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "vw_bonusRatio", $options["statsBonusRate"])", found in file inc/shortcodes.php at line 127. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "performer", $performerName)", found in file inc/shortcodes.php at line 3615. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($current_user->ID, "vwf_" . $fieldName, sanitize_text_field($_POST[$fieldName]))", found in file inc/shortcodes.php at line 1883. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "statsTimeOnline", $timeOnline)", found in file inc/shortcodes.php at line 123. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "updated_room", time())", found in file inc/shortcodes.php at line 3791. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "wp_update_post(["ID" => $postID, "post_title" => sanitize_file_name($webcamPost->post_title)])", found in file inc/shortcodes.php at line 3604. 

[has_storage] WP User info of types (['first_name', 'last_name', 'user', 'user_meta', 'email']) stored through WordPress function "wp_insert_user($newuser)", found in file inc/shortcodes.php at line 1679. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "performerUserID", $current_user->ID)", found in file inc/shortcodes.php at line 5824. 

[has_storage] PII of types (['user', 'password', 'user_meta', 'email']) stored through WordPress function "update_user_meta($user_id, "studioPassword", $random_password)", found in file inc/shortcodes.php at line 2436. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_user_meta($current_user->ID, "currentWebcam", $selectWebcam)", found in file inc/shortcodes.php at line 2952. 

[has_storage] Unstructured data storage of PII types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) to files through function "file_put_contents", found in file inc/streams.php at line 878. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_usermeta($performerID, "tipsRecent", $tipsRecent)", found in file inc/h5videochat.php at line 4106. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "picture", $destination)", found in file inc/shortcodes.php at line 3319. 

[has_storage] Unstructured data storage of PII types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) to files through function "fputs", found in file inc/h5videochat.php at line 4482. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "hasPicture", 1)", found in file inc/shortcodes.php at line 3320. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "performer", $performerName)", found in file inc/shortcodes.php at line 5823. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_user_meta($user_id, "videowhisper_newpassword", $code)", found in file inc/shortcodes.php at line 1193. 

[has_storage] WP User info of types (['user', 'password', 'user_meta', 'email']) stored through WordPress function "wp_create_user($performer_username, $random_password, $performer_email)", found in file inc/shortcodes.php at line 2429. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "viewers", $viewers)", found in file ppv-live-webcams.php at line 5185. 

[has_storage] PII of types (['ip', 'user_meta']) stored through WordPress function "update_user_meta($login_user->ID, "videowhisper_ip_login", self->get_ip_address())", found in file inc/shortcodes.php at line 976. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "vw_roomLabel", $roomLabel)", found in file inc/shortcodes.php at line 3444. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_user_meta($uid, "vw_ppv_tempt", time())", found in file ppv-live-webcams.php at line 4606. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "vw_featured", 0)", found in file inc/shortcodes.php at line 5848. 

[has_storage] WP User info of types (['user_meta']) stored through WordPress function "wp_set_password($password, $user_id)", found in file inc/shortcodes.php at line 1285. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "showImage", $showImage)", found in file inc/shortcodes.php at line 3419. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "wp_update_post(["ID" => $postID, "post_content" => $roomDescription])", found in file inc/shortcodes.php at line 3433. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_user_meta($member->ID, "currentWebcam", $webcamID)", found in file ppv-live-webcams.php at line 6162. 

[has_storage] PII of types (['ip', 'user_meta']) stored through WordPress function "update_user_meta($user_id, "videowhisper_ip_newpassword", self->get_ip_address())", found in file inc/shortcodes.php at line 1287. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "stream-protocol", "rtmp")", found in file ppv-live-webcams.php at line 5868. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($pid, "performerID", $performerID)", found in file ppv-live-webcams.php at line 1357. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_user_meta($current_user->ID, "vwf_" . $fieldName, $newpath)", found in file inc/shortcodes.php at line 2181. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "vw_subscription_tier", $subscriptionTier)", found in file inc/shortcodes.php at line 3191. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "vw_costPerMinute", $costPerMinute)", found in file inc/shortcodes.php at line 3207. 

[has_storage] Unstructured data storage of PII types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) to files through function "file_put_contents", found in file inc/streams.php at line 1136. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "hasThumb", 1)", found in file inc/shortcodes.php at line 3395. 

[has_storage] Unstructured data storage of PII types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) to files through function "file_put_contents", found in file inc/streams.php at line 1137. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($post->ID, "goal", $goal)", found in file inc/h5videochat.php at line 3919. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_user_meta($member->ID, "studioDisabled", 0)", found in file ppv-live-webcams.php at line 6148. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "modeVoyeur", $modeVoyeur)", found in file ppv-live-webcams.php at line 2101. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_user_meta($current_user->ID, "vwf_" . $fieldName, sanitize_text_field($_POST[$fieldName]))", found in file inc/shortcodes.php at line 2075. 

[has_storage] WP User info of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "wp_update_user(["ID" => $member->ID, "role" => sanitize_text_field($options["rolePerformer"])])", found in file ppv-live-webcams.php at line 6151. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "maxViewers", $viewers)", found in file ppv-live-webcams.php at line 5190. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($uid, "paidSessionsGroup", $clients->no)", found in file ppv-live-webcams.php at line 4479. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_user_meta($user->ID, "vwf_" . $fieldName, $newpath)", found in file inc/shortcodes.php at line 1758. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_user_meta($user->ID, "vwf_" . $fieldName, sanitize_text_field($_POST[$fieldName]))", found in file inc/shortcodes.php at line 1766. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user_id, "studioDisabled", $_GET["disabled"])", found in file inc/shortcodes.php at line 2467. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "wp_update_post(["ID" => $postID, "post_password" => $accessPassword])", found in file inc/shortcodes.php at line 3525. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_user_meta($user->ID, "vwUpdated", time())", found in file inc/shortcodes.php at line 1774. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "vw_costPerMinuteGroup", $costPerMinute)", found in file inc/shortcodes.php at line 3260. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "vw_slots2way", $slots2way)", found in file inc/shortcodes.php at line 3271. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "contentIDs", $contentIDs)", found in file inc/shortcodes.php at line 5286. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($uid, "paidSessionsPrivate", $clients->no)", found in file ppv-live-webcams.php at line 4475. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_user_meta($user_id, "studioID", $current_user->ID)", found in file inc/shortcodes.php at line 2434. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_user_meta($user_id, "studioLogin", $current_user->user_login)", found in file inc/shortcodes.php at line 2435. 

[has_storage] WP User info of types (['user', 'password', 'user_meta', 'email']) stored through WordPress function "wp_update_user(["ID" => $user_id, "role" => $options["rolePerformer"]])", found in file inc/shortcodes.php at line 2440. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "vw_presentationMode", $roomLabel)", found in file inc/shortcodes.php at line 3546. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_user_meta($user_id, "currentWebcam", $webcamID)", found in file inc/shortcodes.php at line 2452. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "vw_videos", "0")", found in file inc/shortcodes.php at line 3580. 

[has_storage] PII of types (['user', 'password', 'user_meta', 'email']) stored through WordPress function "update_user_meta($user_id, "studioDisabled", 0)", found in file inc/shortcodes.php at line 2437. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "wp_insert_post($post)", found in file ppv-live-webcams.php at line 1339. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($post->ID, "updated_media", time())", found in file inc/h5videochat.php at line 2323. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "add_post_meta($postID, "performerID", $current_user->ID)", found in file inc/buddypress.php at line 92. 

[has_storage] Unstructured data storage of PII types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) to files through function "fputs", found in file ppv-live-webcams.php at line 5934. 

[has_storage] Unstructured data storage of PII types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) to files through function "fputs", found in file ppv-live-webcams.php at line 2460. 

[has_storage] Unstructured data storage of PII types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) to files through function "fputs", found in file ppv-live-webcams.php at line 2587. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "mode2way", $mode2way)", found in file ppv-live-webcams.php at line 2069. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "vw_costPerMinutetext", $costPerMinuteText)", found in file inc/shortcodes.php at line 3241. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_user_meta($current_user->ID, "vwTipLast", time())", found in file ppv-live-webcams.php at line 2493. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "maxDate", time())", found in file ppv-live-webcams.php at line 5191. 

[has_storage] Unstructured data storage of PII types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) to files through function "file_put_contents", found in file ppv-live-webcams.php at line 2775. 

[has_storage] PII of types (['first_name', 'last_name', 'user', 'user_meta', 'email']) stored through WordPress function "add_user_meta($user_id, "videowhisper_activate", $code, true)", found in file inc/shortcodes.php at line 1691. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_user_meta($uid, "vw_ppv_tempt", time())", found in file ppv-live-webcams.php at line 4609. 

[has_storage] WP User info of types (['user', 'user_meta']) stored through WordPress function "wp_update_user($userdata)", found in file ppv-live-webcams.php at line 4007. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "performer", $stream)", found in file inc/shortcodes.php at line 9389. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "performer", $userName)", found in file inc/h5videochat.php at line 198. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "groupMode", $groupMode)", found in file inc/shortcodes.php at line 3658. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "groupCPM", floatval($CPMg))", found in file inc/shortcodes.php at line 3657. 

[has_storage] Unstructured data storage of PII types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) to files through function "file_put_contents", found in file inc/streams.php at line 865. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_user_meta($member->ID, "studioID", $memberStudio->ID)", found in file ppv-live-webcams.php at line 6146. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, $meta, $modeParameters[$meta])", found in file inc/shortcodes.php at line 3663. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_user_meta($member->ID, "studioLogin", $memberStudio->user_login)", found in file ppv-live-webcams.php at line 6147. 

[has_storage] Unstructured data storage of PII types (['user', 'user_meta']) to files through function "fputs", found in file ppv-live-webcams.php at line 5351. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "privateShow", $shows)", found in file ppv-live-webcams.php at line 1982. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user->ID, "vwActivityPost", time())", found in file inc/streams.php at line 46. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($roomPost->ID, "vw_playlistUpdated", time())", found in file inc/options.php at line 3295. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_user_meta($current_user->ID, "vwf_" . $fieldName, sanitize_text_field($_POST[$fieldName]))", found in file inc/shortcodes.php at line 2191. 

[has_storage] PII of types (['ip', 'first_name', 'last_name', 'user', 'user_meta', 'email']) stored through WordPress function "update_user_meta($user_id, "videowhisper_ip_register", self->get_ip_address())", found in file inc/shortcodes.php at line 1692. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "wp_insert_post($post)", found in file inc/shortcodes.php at line 3027. 

[has_storage] Unstructured data storage of PII types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) to files through function "file_put_contents", found in file ppv-live-webcams.php at line 5235. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "bans", $bans)", found in file inc/shortcodes.php at line 5628. 

[has_storage] PII of types (['ip', 'first_name', 'address', 'last_name', 'user', 'password', 'user_meta', 'email']) stored through WordPress function "update_post_meta($postID, "vwf_" . $fieldName, $tags)", found in file inc/shortcodes.php at line 4632. 

[has_storage] Storage check is CUSTOM_UNSTRUCTURED 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "stream-type", "external") does not have corresponding deletion method. Storage method found in file ppv-live-webcams.php at line 5869. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "vw_presentationMode", "") does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 3548. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "performerUserID", $current_user->ID) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 9390. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "stream-webrtc", $stream_webrtc) does not have corresponding deletion method. Storage method found in file inc/streams.php at line 883. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "groupParameters", $modeParameters) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 3659. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "roomInterface", $roomInterface) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 3701. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($current_user->ID, "vwUpdated", time()) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 2199. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($uid, "vw_ppv_temp", $temp) does not have corresponding deletion method. Storage method found in file ppv-live-webcams.php at line 4605. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($pid, "studioID", $current_user->ID) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 2686. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "vw_costPerMinuteaudio", $costPerMinuteAudio) has deletion method delete_post_meta($postID, "vw_costPerMinuteaudio"). Storage method found in file inc/shortcodes.php at line 3224. Deletion method found in file inc/shortcodes.php at line 3226. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "updated_stream", $ztime) does not have corresponding deletion method. Storage method found in file ppv-live-webcams.php at line 5875. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post->ID, "goals", $newGoals) does not have corresponding deletion method. Storage method found in file inc/h5videochat.php at line 3890. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "groupMode", $mode$mode__("Free", "ppv-live-webcams")) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 3680. 

[Art.17, Right to erasure] Complete data deletion is required for storage at node ID 127079 , but is impossible due to custom storage of PII without identifiers. Found in file inc/streams.php at line 885 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "bans", $bans) does not have corresponding deletion method. Storage method found in file inc/h5videochat.php at line 2936. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($partyID, "partyRoomID", $nextRoomID) does not have corresponding deletion method. Storage method found in file inc/h5videochat.php at line 3590. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "stream-webrtc", $stream_webrtc) does not have corresponding deletion method. Storage method found in file inc/streams.php at line 896. 

[Art.17, Right to erasure] Wordpress storage of PII through add_post_meta($pid, "performerID", $performerID, false) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 3057. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "thumbPicture", $thumbFilename) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 3394. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($roomPost->ID, "vw_playlistActive", "0") does not have corresponding deletion method. Storage method found in file inc/options.php at line 3296. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "vwVerified", 2) does not have corresponding deletion method. Storage method found in file inc/options.php at line 6293. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "vwVerifiedTime", time()) does not have corresponding deletion method. Storage method found in file inc/options.php at line 6295. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "vwVerifiedReason", wp_kses_post($_POST["reason"])) has deletion method delete_user_meta($user_id, "vwVerifiedReason"). Storage method found in file inc/options.php at line 6294. Deletion method found in file inc/options.php at line 6315. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "adminSuspended", $adminSuspended) does not have corresponding deletion method. Storage method found in file inc/options.php at line 6326. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "vwVerified", 1) does not have corresponding deletion method. Storage method found in file inc/options.php at line 6313. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "vwVerifiedTime", time()) does not have corresponding deletion method. Storage method found in file inc/options.php at line 6314. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "bans", $bans) does not have corresponding deletion method. Storage method found in file inc/h5videochat.php at line 274. 

[Art.17, Right to erasure] Wordpress storage of PII through wp_insert_post($post) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 2683. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post->ID, "presentationMedia", $media) does not have corresponding deletion method. Storage method found in file inc/h5videochat.php at line 2322. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "vw_pictures", "1") does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 3586. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "stream-hls", $stream) does not have corresponding deletion method. Storage method found in file inc/streams.php at line 1007. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($collectID, "studioCollectTotal", $balance + $collectTotal) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 2324. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, $key, $value) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 3712. 

[Art.17, Right to erasure] Complete data deletion is required for storage at node ID 63590 , but is impossible due to custom storage of PII without identifiers. Found in file inc/h5videochat.php at line 3141 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "edate", $ztime) does not have corresponding deletion method. Storage method found in file ppv-live-webcams.php at line 1944. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "vw_roomBrief", $roomBrief) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 3450. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($pid, "studioID", $current_user->ID) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 3030. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "performer", $userName) does not have corresponding deletion method. Storage method found in file inc/h5videochat.php at line 2733. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "sessionStart", time()) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 3618. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "buddypressGroup", $bp->groups->current_group->id) does not have corresponding deletion method. Storage method found in file inc/buddypress.php at line 88. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "vw_playlistActive", "") does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 3594. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "bans", $bans) does not have corresponding deletion method. Storage method found in file ppv-live-webcams.php at line 2223. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "performerUserID", $current_user->ID) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 3616. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($pid, "performer", $performer) does not have corresponding deletion method. Storage method found in file ppv-live-webcams.php at line 1348. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "vw_videos", "1") does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 3578. 

[Art.17, Right to erasure] Complete data deletion is required for storage at node ID 128589 , but is impossible due to custom storage of PII without identifiers. Found in file inc/streams.php at line 1203 

[Art.17, Right to erasure] Wordpress storage of PII through update_usermeta($targetID, "tipsRecent", $tipsRecent) does not have corresponding deletion method. Storage method found in file inc/h5videochat.php at line 4119. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($performerID, "currentWebcam", $pid) does not have corresponding deletion method. Storage method found in file ppv-live-webcams.php at line 1363. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "edate", $ztime) does not have corresponding deletion method. Storage method found in file ppv-live-webcams.php at line 5865. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($userID, "vwTipLast", time()) does not have corresponding deletion method. Storage method found in file inc/h5videochat.php at line 4123. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "productIDs", $productIDs) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 5430. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($collectID, "studioCollectLast", $balance) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 2323. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "vwf_" . $fieldName, wp_kses($_POST[$fieldName], $allowedtags)) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 4634. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "goal", $goal) does not have corresponding deletion method. Storage method found in file ppv-live-webcams.php at line 4249. 

[Art.17, Right to erasure] Wordpress storage of PII through update_usermeta($userID, "tipsRecent", $tipsRecent) does not have corresponding deletion method. Storage method found in file inc/h5videochat.php at line 4780. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "groupCPM", 0) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 3679. 

[Art.17, Right to erasure] Complete data deletion is required for storage at node ID 126933 , but is impossible due to custom storage of PII without identifiers. Found in file inc/streams.php at line 864 

[Art.17, Right to erasure] Wordpress storage of PII through add_post_meta($pid, "performerID", intval($performer), false) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 2691. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($pid, "studioID", $studioID) does not have corresponding deletion method. Storage method found in file ppv-live-webcams.php at line 1368. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "stream-updated", $ztime) does not have corresponding deletion method. Storage method found in file ppv-live-webcams.php at line 5870. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "archivedSessions", $archivedSessions) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 3741. 

[Art.17, Right to erasure] Wordpress storage of PII through update_usermeta($userID, "tipsRecent", $tipsRecent) does not have corresponding deletion method. Storage method found in file inc/h5videochat.php at line 3998. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "rtmp_server", $options["rtmp_server_archive"]) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 3727. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "rtmp_server", $options["rtmp_server"]) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 3744. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "checkin", $selectedPerformers) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 3788. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($partyID, "partyRoomID", $nextRoomID) does not have corresponding deletion method. Storage method found in file inc/h5videochat.php at line 3675. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post->ID, "updated_media", time()) does not have corresponding deletion method. Storage method found in file inc/h5videochat.php at line 3725. 

[Art.17, Right to erasure] Wordpress storage of PII through add_post_meta($postID, "vw_banCountries", trim($value)) has deletion method delete_post_meta($postID, "vw_banCountries"). Storage method found in file inc/shortcodes.php at line 3471. Deletion method found in file inc/shortcodes.php at line 3465. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post->ID, "updated_media", time()) does not have corresponding deletion method. Storage method found in file inc/h5videochat.php at line 3823. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "vw_accessList", $accessList) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 3487. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "vw_accessPrice", $accessPrice) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 3494. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post->ID, "presentationMedia", $presentationMedia) does not have corresponding deletion method. Storage method found in file inc/h5videochat.php at line 3786. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "myCRED_sell_content", $mCa) has deletion method delete_post_meta($postID, "myCRED_sell_content"). Storage method found in file inc/shortcodes.php at line 3510. Deletion method found in file inc/shortcodes.php at line 3512. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post->ID, "goals", $goals) does not have corresponding deletion method. Storage method found in file inc/h5videochat.php at line 3920. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post->ID, "updated_media", time()) does not have corresponding deletion method. Storage method found in file inc/h5videochat.php at line 3787. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post->ID, "presentationMedia", $presentationMedia) does not have corresponding deletion method. Storage method found in file inc/h5videochat.php at line 3822. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "presentationMedia", $presentationMedia) does not have corresponding deletion method. Storage method found in file inc/h5videochat.php at line 3405. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($userID, $key, $value) does not have corresponding deletion method. Storage method found in file inc/h5videochat.php at line 2771. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post->ID, "goals", $goals) does not have corresponding deletion method. Storage method found in file inc/h5videochat.php at line 3948. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($uid, "vw_ppv_temp", 0) does not have corresponding deletion method. Storage method found in file ppv-live-webcams.php at line 4608. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post->ID, "goals", $goals) does not have corresponding deletion method. Storage method found in file inc/h5videochat.php at line 3974. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post->ID, "goals", $goals) does not have corresponding deletion method. Storage method found in file inc/h5videochat.php at line 3980. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($userID, $name, $value) does not have corresponding deletion method. Storage method found in file inc/h5videochat.php at line 3173. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($userID, "updated_options", time()) does not have corresponding deletion method. Storage method found in file inc/h5videochat.php at line 3174. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "vw_pictures", "0") does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 3588. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($userID, "balance_warning" . $privateUID, time()) does not have corresponding deletion method. Storage method found in file inc/h5videochat.php at line 4828. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "vw_bonusRatio", $options["statsBonusRate"]) has deletion method delete_post_meta($postID, "vw_bonusRatio"). Storage method found in file inc/shortcodes.php at line 127. Deletion method found in file inc/shortcodes.php at line 128. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "performer", $performerName) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 3615. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($current_user->ID, "vwf_" . $fieldName, sanitize_text_field($_POST[$fieldName])) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 1883. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "statsTimeOnline", $timeOnline) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 123. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "updated_room", time()) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 3791. 

[Art.17, Right to erasure] Wordpress storage of PII through wp_update_post(["ID" => $postID, "post_title" => sanitize_file_name($webcamPost->post_title)]) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 3604. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "performerUserID", $current_user->ID) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 5824. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "studioPassword", $random_password) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 2436. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($current_user->ID, "currentWebcam", $selectWebcam) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 2952. 

[Art.17, Right to erasure] Complete data deletion is required for storage at node ID 127033 , but is impossible due to custom storage of PII without identifiers. Found in file inc/streams.php at line 878 

[Art.17, Right to erasure] Wordpress storage of PII through update_usermeta($performerID, "tipsRecent", $tipsRecent) does not have corresponding deletion method. Storage method found in file inc/h5videochat.php at line 4106. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "picture", $destination) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 3319. 

[Art.17, Right to erasure] Complete data deletion is required for storage at node ID 70859 , but is impossible due to custom storage of PII without identifiers. Found in file inc/h5videochat.php at line 4482 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "hasPicture", 1) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 3320. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "performer", $performerName) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 5823. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "videowhisper_newpassword", $code) has deletion method delete_user_meta($user_id, "videowhisper_newpassword"). Storage method found in file inc/shortcodes.php at line 1193. Deletion method found in file inc/shortcodes.php at line 1286. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "viewers", $viewers) does not have corresponding deletion method. Storage method found in file ppv-live-webcams.php at line 5185. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($login_user->ID, "videowhisper_ip_login", self->get_ip_address()) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 976. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "vw_roomLabel", $roomLabel) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 3444. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($uid, "vw_ppv_tempt", time()) does not have corresponding deletion method. Storage method found in file ppv-live-webcams.php at line 4606. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "vw_featured", 0) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 5848. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "showImage", $showImage) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 3419. 

[Art.17, Right to erasure] Wordpress storage of PII through wp_update_post(["ID" => $postID, "post_content" => $roomDescription]) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 3433. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($member->ID, "currentWebcam", $webcamID) does not have corresponding deletion method. Storage method found in file ppv-live-webcams.php at line 6162. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "videowhisper_ip_newpassword", self->get_ip_address()) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 1287. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "stream-protocol", "rtmp") does not have corresponding deletion method. Storage method found in file ppv-live-webcams.php at line 5868. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($pid, "performerID", $performerID) does not have corresponding deletion method. Storage method found in file ppv-live-webcams.php at line 1357. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($current_user->ID, "vwf_" . $fieldName, $newpath) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 2181. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "vw_subscription_tier", $subscriptionTier) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 3191. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "vw_costPerMinute", $costPerMinute) has deletion method delete_post_meta($postID, "vw_costPerMinute"). Storage method found in file inc/shortcodes.php at line 3207. Deletion method found in file inc/shortcodes.php at line 3209. 

[Art.17, Right to erasure] Complete data deletion is required for storage at node ID 128311 , but is impossible due to custom storage of PII without identifiers. Found in file inc/streams.php at line 1136 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "hasThumb", 1) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 3395. 

[Art.17, Right to erasure] Complete data deletion is required for storage at node ID 128324 , but is impossible due to custom storage of PII without identifiers. Found in file inc/streams.php at line 1137 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post->ID, "goal", $goal) does not have corresponding deletion method. Storage method found in file inc/h5videochat.php at line 3919. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($member->ID, "studioDisabled", 0) does not have corresponding deletion method. Storage method found in file ppv-live-webcams.php at line 6148. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "modeVoyeur", $modeVoyeur) does not have corresponding deletion method. Storage method found in file ppv-live-webcams.php at line 2101. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($current_user->ID, "vwf_" . $fieldName, sanitize_text_field($_POST[$fieldName])) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 2075. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "maxViewers", $viewers) does not have corresponding deletion method. Storage method found in file ppv-live-webcams.php at line 5190. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($uid, "paidSessionsGroup", $clients->no) does not have corresponding deletion method. Storage method found in file ppv-live-webcams.php at line 4479. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user->ID, "vwf_" . $fieldName, $newpath) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 1758. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user->ID, "vwf_" . $fieldName, sanitize_text_field($_POST[$fieldName])) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 1766. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "studioDisabled", $_GET["disabled"]) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 2467. 

[Art.17, Right to erasure] Wordpress storage of PII through wp_update_post(["ID" => $postID, "post_password" => $accessPassword]) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 3525. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user->ID, "vwUpdated", time()) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 1774. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "vw_costPerMinuteGroup", $costPerMinute) has deletion method delete_post_meta($postID, "vw_costPerMinuteGroup"). Storage method found in file inc/shortcodes.php at line 3260. Deletion method found in file inc/shortcodes.php at line 3262. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "vw_slots2way", $slots2way) has deletion method delete_post_meta($postID, "vw_slots2way"). Storage method found in file inc/shortcodes.php at line 3271. Deletion method found in file inc/shortcodes.php at line 3273. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "contentIDs", $contentIDs) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 5286. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($uid, "paidSessionsPrivate", $clients->no) does not have corresponding deletion method. Storage method found in file ppv-live-webcams.php at line 4475. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "studioID", $current_user->ID) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 2434. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "studioLogin", $current_user->user_login) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 2435. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "vw_presentationMode", $roomLabel) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 3546. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "currentWebcam", $webcamID) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 2452. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "vw_videos", "0") does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 3580. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "studioDisabled", 0) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 2437. 

[Art.17, Right to erasure] Wordpress storage of PII through wp_insert_post($post) does not have corresponding deletion method. Storage method found in file ppv-live-webcams.php at line 1339. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post->ID, "updated_media", time()) does not have corresponding deletion method. Storage method found in file inc/h5videochat.php at line 2323. 

[Art.17, Right to erasure] Wordpress storage of PII through add_post_meta($postID, "performerID", $current_user->ID) does not have corresponding deletion method. Storage method found in file inc/buddypress.php at line 92. 

[Art.17, Right to erasure] Complete data deletion is required for storage at node ID 26081 , but is impossible due to custom storage of PII without identifiers. Found in file ppv-live-webcams.php at line 5934 

[Art.17, Right to erasure] Complete data deletion is required for storage at node ID 10971 , but is impossible due to custom storage of PII without identifiers. Found in file ppv-live-webcams.php at line 2460 

[Art.17, Right to erasure] Complete data deletion is required for storage at node ID 11586 , but is impossible due to custom storage of PII without identifiers. Found in file ppv-live-webcams.php at line 2587 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "mode2way", $mode2way) does not have corresponding deletion method. Storage method found in file ppv-live-webcams.php at line 2069. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "vw_costPerMinutetext", $costPerMinuteText) has deletion method delete_post_meta($postID, "vw_costPerMinutetext"). Storage method found in file inc/shortcodes.php at line 3241. Deletion method found in file inc/shortcodes.php at line 3243. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($current_user->ID, "vwTipLast", time()) does not have corresponding deletion method. Storage method found in file ppv-live-webcams.php at line 2493. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "maxDate", time()) does not have corresponding deletion method. Storage method found in file ppv-live-webcams.php at line 5191. 

[Art.17, Right to erasure] Complete data deletion is required for storage at node ID 12408 , but is impossible due to custom storage of PII without identifiers. Found in file ppv-live-webcams.php at line 2775 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "videowhisper_activate", $code, true) has deletion method delete_user_meta($user_id, "videowhisper_activate"). Storage method found in file inc/shortcodes.php at line 1691. Deletion method found in file inc/shortcodes.php at line 1980. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($uid, "vw_ppv_tempt", time()) does not have corresponding deletion method. Storage method found in file ppv-live-webcams.php at line 4609. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "performer", $stream) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 9389. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "performer", $userName) does not have corresponding deletion method. Storage method found in file inc/h5videochat.php at line 198. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "groupMode", $groupMode) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 3658. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "groupCPM", floatval($CPMg)) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 3657. 

[Art.17, Right to erasure] Complete data deletion is required for storage at node ID 126963 , but is impossible due to custom storage of PII without identifiers. Found in file inc/streams.php at line 865 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($member->ID, "studioID", $memberStudio->ID) does not have corresponding deletion method. Storage method found in file ppv-live-webcams.php at line 6146. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, $meta, $modeParameters[$meta]) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 3663. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($member->ID, "studioLogin", $memberStudio->user_login) does not have corresponding deletion method. Storage method found in file ppv-live-webcams.php at line 6147. 

[Art.17, Right to erasure] Complete data deletion is required for storage at node ID 23510 , but is impossible due to custom storage of PII without identifiers. Found in file ppv-live-webcams.php at line 5351 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "privateShow", $shows) does not have corresponding deletion method. Storage method found in file ppv-live-webcams.php at line 1982. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user->ID, "vwActivityPost", time()) does not have corresponding deletion method. Storage method found in file inc/streams.php at line 46. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($roomPost->ID, "vw_playlistUpdated", time()) does not have corresponding deletion method. Storage method found in file inc/options.php at line 3295. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($current_user->ID, "vwf_" . $fieldName, sanitize_text_field($_POST[$fieldName])) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 2191. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "videowhisper_ip_register", self->get_ip_address()) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 1692. 

[Art.17, Right to erasure] Wordpress storage of PII through wp_insert_post($post) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 3027. 

[Art.17, Right to erasure] Complete data deletion is required for storage at node ID 23036 , but is impossible due to custom storage of PII without identifiers. Found in file ppv-live-webcams.php at line 5235 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "bans", $bans) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 5628. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "vwf_" . $fieldName, $tags) does not have corresponding deletion method. Storage method found in file inc/shortcodes.php at line 4632. 

[Art.17, Right to erasure] Deletion access is NONE 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 25835. Found in file ppv-live-webcams.php at line 5869 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 89275. Found in file inc/shortcodes.php at line 3548 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 116198. Found in file inc/shortcodes.php at line 9390 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 127067. Found in file inc/streams.php at line 883 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 89714. Found in file inc/shortcodes.php at line 3659 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 89959. Found in file inc/shortcodes.php at line 3701 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 83263. Found in file inc/shortcodes.php at line 2199 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 19986. Found in file ppv-live-webcams.php at line 4605 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 85489. Found in file inc/shortcodes.php at line 2686 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 87892. Found in file inc/shortcodes.php at line 3224 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 25859. Found in file ppv-live-webcams.php at line 5875 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 67416. Found in file inc/h5videochat.php at line 3890 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 89856. Found in file inc/shortcodes.php at line 3680 

[Art.15, Right to access] Complete data access is required for storage at node ID 127079 , but is impossible due to custom storage of PII without identifiers. Found in file inc/streams.php at line 885 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 62502. Found in file inc/h5videochat.php at line 2936 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 65924. Found in file inc/h5videochat.php at line 3590 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 127130. Found in file inc/streams.php at line 896 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 87098. Found in file inc/shortcodes.php at line 3057 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 88683. Found in file inc/shortcodes.php at line 3394 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 36765. Found in file inc/options.php at line 3296 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 45566. Found in file inc/options.php at line 6293 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 45589. Found in file inc/options.php at line 6295 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 45574. Found in file inc/options.php at line 6294 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 45822. Found in file inc/options.php at line 6326 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 45723. Found in file inc/options.php at line 6313 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 45731. Found in file inc/options.php at line 6314 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 48805. Found in file inc/h5videochat.php at line 274 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 85483. Found in file inc/shortcodes.php at line 2683 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 59382. Found in file inc/h5videochat.php at line 2322 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 89344. Found in file inc/shortcodes.php at line 3586 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 127633. Found in file inc/streams.php at line 1007 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 83832. Found in file inc/shortcodes.php at line 2324 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 90041. Found in file inc/shortcodes.php at line 3712 

[Art.15, Right to access] Complete data access is required for storage at node ID 63590 , but is impossible due to custom storage of PII without identifiers. Found in file inc/h5videochat.php at line 3141 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 8606. Found in file ppv-live-webcams.php at line 1944 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 88931. Found in file inc/shortcodes.php at line 3450 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 86939. Found in file inc/shortcodes.php at line 3030 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 61443. Found in file inc/h5videochat.php at line 2733 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 89480. Found in file inc/shortcodes.php at line 3618 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 129498. Found in file inc/buddypress.php at line 88 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 89384. Found in file inc/shortcodes.php at line 3594 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9851. Found in file ppv-live-webcams.php at line 2223 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 89469. Found in file inc/shortcodes.php at line 3616 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 5690. Found in file ppv-live-webcams.php at line 1348 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 89304. Found in file inc/shortcodes.php at line 3578 

[Art.15, Right to access] Complete data access is required for storage at node ID 128589 , but is impossible due to custom storage of PII without identifiers. Found in file inc/streams.php at line 1203 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 68906. Found in file inc/h5videochat.php at line 4119 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 5755. Found in file ppv-live-webcams.php at line 1363 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 25818. Found in file ppv-live-webcams.php at line 5865 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 68915. Found in file inc/h5videochat.php at line 4123 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 96233. Found in file inc/shortcodes.php at line 5430 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 83823. Found in file inc/shortcodes.php at line 2323 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 94431. Found in file inc/shortcodes.php at line 4634 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 18285. Found in file ppv-live-webcams.php at line 4249 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 72412. Found in file inc/h5videochat.php at line 4780 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 89848. Found in file inc/shortcodes.php at line 3679 

[Art.15, Right to access] Complete data access is required for storage at node ID 126933 , but is impossible due to custom storage of PII without identifiers. Found in file inc/streams.php at line 864 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 85516. Found in file inc/shortcodes.php at line 2691 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 5769. Found in file ppv-live-webcams.php at line 1368 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 25843. Found in file ppv-live-webcams.php at line 5870 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 90139. Found in file inc/shortcodes.php at line 3741 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 68029. Found in file inc/h5videochat.php at line 3998 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 90075. Found in file inc/shortcodes.php at line 3727 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 90151. Found in file inc/shortcodes.php at line 3744 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 90397. Found in file inc/shortcodes.php at line 3788 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 66396. Found in file inc/h5videochat.php at line 3675 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 66703. Found in file inc/h5videochat.php at line 3725 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 89050. Found in file inc/shortcodes.php at line 3471 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 67198. Found in file inc/h5videochat.php at line 3823 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 89088. Found in file inc/shortcodes.php at line 3487 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 89123. Found in file inc/shortcodes.php at line 3494 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 67020. Found in file inc/h5videochat.php at line 3786 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 89177. Found in file inc/shortcodes.php at line 3510 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 67576. Found in file inc/h5videochat.php at line 3920 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 67031. Found in file inc/h5videochat.php at line 3787 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 67187. Found in file inc/h5videochat.php at line 3822 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 64945. Found in file inc/h5videochat.php at line 3405 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 61669. Found in file inc/h5videochat.php at line 2771 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 67749. Found in file inc/h5videochat.php at line 3948 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 20009. Found in file ppv-live-webcams.php at line 4608 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 67880. Found in file inc/h5videochat.php at line 3974 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 67914. Found in file inc/h5videochat.php at line 3980 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 63800. Found in file inc/h5videochat.php at line 3173 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 63810. Found in file inc/h5videochat.php at line 3174 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 89355. Found in file inc/shortcodes.php at line 3588 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 72605. Found in file inc/h5videochat.php at line 4828 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 73479. Found in file inc/shortcodes.php at line 127 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 89460. Found in file inc/shortcodes.php at line 3615 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 81346. Found in file inc/shortcodes.php at line 1883 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 73450. Found in file inc/shortcodes.php at line 123 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 90406. Found in file inc/shortcodes.php at line 3791 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 89429. Found in file inc/shortcodes.php at line 3604 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 97917. Found in file inc/shortcodes.php at line 5824 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 84401. Found in file inc/shortcodes.php at line 2436 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 86610. Found in file inc/shortcodes.php at line 2952 

[Art.15, Right to access] Complete data access is required for storage at node ID 127033 , but is impossible due to custom storage of PII without identifiers. Found in file inc/streams.php at line 878 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 68755. Found in file inc/h5videochat.php at line 4106 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 88375. Found in file inc/shortcodes.php at line 3319 

[Art.15, Right to access] Complete data access is required for storage at node ID 70859 , but is impossible due to custom storage of PII without identifiers. Found in file inc/h5videochat.php at line 4482 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 88384. Found in file inc/shortcodes.php at line 3320 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 97908. Found in file inc/shortcodes.php at line 5823 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 78218. Found in file inc/shortcodes.php at line 1193 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 22810. Found in file ppv-live-webcams.php at line 5185 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 77346. Found in file inc/shortcodes.php at line 976 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 88897. Found in file inc/shortcodes.php at line 3444 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 19995. Found in file ppv-live-webcams.php at line 4606 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 98196. Found in file inc/shortcodes.php at line 5848 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 88792. Found in file inc/shortcodes.php at line 3419 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 88859. Found in file inc/shortcodes.php at line 3433 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 26900. Found in file ppv-live-webcams.php at line 6162 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 78648. Found in file inc/shortcodes.php at line 1287 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 25827. Found in file ppv-live-webcams.php at line 5868 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 5727. Found in file ppv-live-webcams.php at line 1357 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 83214. Found in file inc/shortcodes.php at line 2181 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 87704. Found in file inc/shortcodes.php at line 3191 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 87800. Found in file inc/shortcodes.php at line 3207 

[Art.15, Right to access] Complete data access is required for storage at node ID 128311 , but is impossible due to custom storage of PII without identifiers. Found in file inc/streams.php at line 1136 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 88692. Found in file inc/shortcodes.php at line 3395 

[Art.15, Right to access] Complete data access is required for storage at node ID 128324 , but is impossible due to custom storage of PII without identifiers. Found in file inc/streams.php at line 1137 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 67565. Found in file inc/h5videochat.php at line 3919 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 26839. Found in file ppv-live-webcams.php at line 6148 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9313. Found in file ppv-live-webcams.php at line 2101 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 82485. Found in file inc/shortcodes.php at line 2075 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 22840. Found in file ppv-live-webcams.php at line 5190 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 19400. Found in file ppv-live-webcams.php at line 4479 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 80835. Found in file inc/shortcodes.php at line 1758 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 80863. Found in file inc/shortcodes.php at line 1766 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 84524. Found in file inc/shortcodes.php at line 2467 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 89225. Found in file inc/shortcodes.php at line 3525 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 80884. Found in file inc/shortcodes.php at line 1774 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 88076. Found in file inc/shortcodes.php at line 3260 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 88125. Found in file inc/shortcodes.php at line 3271 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 95555. Found in file inc/shortcodes.php at line 5286 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 19369. Found in file ppv-live-webcams.php at line 4475 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 84379. Found in file inc/shortcodes.php at line 2434 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 84390. Found in file inc/shortcodes.php at line 2435 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 89263. Found in file inc/shortcodes.php at line 3546 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 84472. Found in file inc/shortcodes.php at line 2452 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 89315. Found in file inc/shortcodes.php at line 3580 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 84410. Found in file inc/shortcodes.php at line 2437 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 5668. Found in file ppv-live-webcams.php at line 1339 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 59393. Found in file inc/h5videochat.php at line 2323 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 129540. Found in file inc/buddypress.php at line 92 

[Art.15, Right to access] Complete data access is required for storage at node ID 26081 , but is impossible due to custom storage of PII without identifiers. Found in file ppv-live-webcams.php at line 5934 

[Art.15, Right to access] Complete data access is required for storage at node ID 10971 , but is impossible due to custom storage of PII without identifiers. Found in file ppv-live-webcams.php at line 2460 

[Art.15, Right to access] Complete data access is required for storage at node ID 11586 , but is impossible due to custom storage of PII without identifiers. Found in file ppv-live-webcams.php at line 2587 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9168. Found in file ppv-live-webcams.php at line 2069 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 87984. Found in file inc/shortcodes.php at line 3241 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 11183. Found in file ppv-live-webcams.php at line 2493 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 22849. Found in file ppv-live-webcams.php at line 5191 

[Art.15, Right to access] Complete data access is required for storage at node ID 12408 , but is impossible due to custom storage of PII without identifiers. Found in file ppv-live-webcams.php at line 2775 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 80336. Found in file inc/shortcodes.php at line 1691 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 20017. Found in file ppv-live-webcams.php at line 4609 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 116189. Found in file inc/shortcodes.php at line 9389 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 48360. Found in file inc/h5videochat.php at line 198 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 89705. Found in file inc/shortcodes.php at line 3658 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 89692. Found in file inc/shortcodes.php at line 3657 

[Art.15, Right to access] Complete data access is required for storage at node ID 126963 , but is impossible due to custom storage of PII without identifiers. Found in file inc/streams.php at line 865 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 26813. Found in file ppv-live-webcams.php at line 6146 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 89788. Found in file inc/shortcodes.php at line 3663 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 26826. Found in file ppv-live-webcams.php at line 6147 

[Art.15, Right to access] Complete data access is required for storage at node ID 23510 , but is impossible due to custom storage of PII without identifiers. Found in file ppv-live-webcams.php at line 5351 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 8747. Found in file ppv-live-webcams.php at line 1982 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 122737. Found in file inc/streams.php at line 46 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 36752. Found in file inc/options.php at line 3295 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 83242. Found in file inc/shortcodes.php at line 2191 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 80348. Found in file inc/shortcodes.php at line 1692 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 86933. Found in file inc/shortcodes.php at line 3027 

[Art.15, Right to access] Complete data access is required for storage at node ID 23036 , but is impossible due to custom storage of PII without identifiers. Found in file ppv-live-webcams.php at line 5235 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 96977. Found in file inc/shortcodes.php at line 5628 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 94416. Found in file inc/shortcodes.php at line 4632 

[Art.15, Right to access] Data access is NONE 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['access', 'deletion', 'encryption', 'third_party'] 

[main] Is deletion in violation? True 

[main] Is access in violation? True 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? False 


###########
### Q&A ###
###########

1. Why is my plugin in violation against GDPR?

GDPR (https://gdpr-info.eu/) aims to give citizens in the European Union (EU) control over their personal data. If a website collects or store user data, it is required to provide users functionalities to control their data, such as ones to erase or export their data. While a plugin do not directly interact with users, it may provide functionalities that collect or store personal data, which would make websites that deploy the plugin in violation against GDPR if the plugin does not provide corresponding functionalities to allow users control their personal data. Therefore, plugin developers are responsible to provide functions to manage the personal data they handle in accordance with GDPR. We list requirements by specific GDPR articles relevant to your plugin below.


[Art. 13, Information to be provided where personal data are collected from the data subject] If a plugin collects or handles personal data, it needs to provide privacy policy texts that explain what personal data is being collected and for what purpose. The texts are meant to be added to the privacy policy of the websites that deploy the plugin. 


            
[Art.17, Right to erasure] If a plugin stores personal data in a custom database they create or manage, or through Wordpress's native storage functions (e.g., update_user_meta), it needs to provide methods for users to erase the data upon request. Note that deleting data for all users upon uninstallation does not satisfy the requirement. 


            
        

2. How do I make my plugin compliant?

Please refer to the fix report below to see how you can make your plugin comply with GDPR.

        
