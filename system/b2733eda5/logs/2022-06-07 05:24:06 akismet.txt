Timeout in resolving values
Timeout in running neo4j query
Running Main.py on akismet

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.663903.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.096510.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 9 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.393488.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 3 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.643278.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 1322 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:01.106343.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 256 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:02.388537.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
Added 4 PHP_REACHES edges.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.071466.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 498 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:07.570994.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 11154
Added 9062 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 12315
Added 1161 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.781441.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/akismet/akismet.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/akismet/class.akismet-admin.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/akismet/class.akismet-cli.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/akismet/class.akismet.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/akismet/class.akismet-rest-api.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/akismet/class.akismet-widget.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/akismet/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/akismet/wrapper.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/akismet/views/activate.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/akismet/views/config.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/akismet/views/connect-jp.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/akismet/views/enter.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/akismet/views/get.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/akismet/views/notice.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/akismet/views/predefined.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/akismet/views/setup.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/akismet/views/start.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/akismet/views/stats.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/akismet/views/title.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:01.548287.

9 PHP_REACHES edges created
3 REACHES edges created
1000 PHP_REACHES edges created
1322 PHP_REACHES edges created
102 CALLS edges created
6 PHP_REACHES edges created
7 CALLS edges created
2 PHP_REACHES edges created
139 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
9564 PHP_REACHES edges created
1000 PHP_REACHES edges created
1161 PHP_REACHES edges created
12315 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 3960 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.228922.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:04.192299.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 245 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:07.646009.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 282 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.243205.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.705177.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:02.317155.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.053210.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.034264.

527 PHP_REACHES edges created
527 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 244 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.139632.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
14 SQL operations to process.
SELECT * FROM $wpdb WHERE comment_approved = '0' LIMIT 100 OFFSET %d
SELECT * FROM $wpdb WHERE comment_approved = '0' LIMIT 100 OFFSET 0
SELECT * FROM $wpdb WHERE comment_approved = '0' LIMIT 100 OFFSET 0
SQL command (SELECT * FROM $wpdb WHERE comment_approved = '0' LIMIT 100 OFFSET 0) cannot be parsed correct.
SELECT comment_id FROM $wpdb_comments WHERE DATE_SUB(NOW(), INTERVAL max(1, intval($delete_interval)) DAY) > comment_date_gmt AND comment_approved = 'spam' LIMIT %d
SELECT comment_id FROM $wpdb_comments WHERE DATE_SUB(NOW(), INTERVAL max(1, intval($delete_interval)) DAY) > comment_date_gmt AND comment_approved = 'spam' LIMIT max(1, intval($delete_limit))
SELECT comment_id FROM $wpdb_comments WHERE DATE_SUB(NOW(), INTERVAL max(1, intval($delete_interval)) DAY) > comment_date_gmt AND comment_approved = 'spam' LIMIT max(1, intval($delete_limit))
SQL command (SELECT comment_id FROM $wpdb_comments WHERE DATE_SUB(NOW(), INTERVAL max(1, intval($delete_interval)) DAY) > comment_date_gmt AND comment_approved = 'spam' LIMIT max(1, intval($delete_limit))) cannot be parsed correct.
SELECT m.comment_id FROM $wpdb_commentmeta as m INNER JOIN $wpdb_comments as c USING(comment_id) WHERE m.meta_key = 'akismet_as_submitted' AND DATE_SUB(NOW(), INTERVAL 1 DAY) > c.comment_date_gmt LIMIT 10000
SELECT m.comment_id FROM $wpdb_commentmeta as m INNER JOIN $wpdb_comments as c USING(comment_id) WHERE m.meta_key = 'akismet_as_submitted' AND DATE_SUB(NOW(), INTERVAL 1 DAY) > c.comment_date_gmt LIMIT 10000
SQL command (SELECT m.comment_id FROM $wpdb_commentmeta as m INNER JOIN $wpdb_comments as c USING(comment_id) WHERE m.meta_key = 'akismet_as_submitted' AND DATE_SUB(NOW(), INTERVAL 1 DAY) > c.comment_date_gmt LIMIT 10000) cannot be parsed correct.
SELECT comment_id FROM $wpdb WHERE meta_key = 'akismet_error'	LIMIT 100
SQL command (SELECT comment_id FROM $wpdb WHERE meta_key = 'akismet_error' LIMIT 100) cannot be parsed correct.
SELECT m.meta_id, m.comment_id, m.meta_key FROM $wpdb_commentmeta as m LEFT JOIN $wpdb_comments as c USING(comment_id) WHERE c.comment_id IS NULL AND m.meta_id > $commentmeta ORDER BY m.meta_id LIMIT 1000
SELECT m.meta_id, m.comment_id, m.meta_key FROM $wpdb_commentmeta as m LEFT JOIN $wpdb_comments as c USING(comment_id) WHERE c.comment_id IS NULL AND m.meta_id > $commentmeta ORDER BY m.meta_id LIMIT 1000
SQL command (SELECT m.meta_id, m.comment_id, m.meta_key FROM $wpdb_commentmeta as m LEFT JOIN $wpdb_comments as c USING(comment_id) WHERE c.comment_id IS NULL AND m.meta_id > $commentmeta ORDER BY m.meta_id LIMIT 1000) cannot be parsed correct.
SELECT * FROM $wpdb WHERE comment_ID = $id
SELECT * FROM $wpdb WHERE comment_ID = $id
SQL command (SELECT * FROM $wpdb WHERE comment_ID = $id) cannot be parsed correct.
SELECT * FROM $wpdb WHERE comment_ID = $comment_id
SELECT * FROM $wpdb WHERE comment_ID = $comment_id
SQL command (SELECT * FROM $wpdb WHERE comment_ID = $comment_id) cannot be parsed correct.
SELECT * FROM $wpdb WHERE comment_ID = $comment_id
SELECT * FROM $wpdb WHERE comment_ID = $comment_id
SQL command (SELECT * FROM $wpdb WHERE comment_ID = $comment_id) cannot be parsed correct.
DELETE FROM $wpdb WHERE comment_id IN ( implode(", ", array_fill(0, count($comment_ids), "$wpdb->get_col($wpdb->prepare("SELECT comment_id FROM "$wpdb->comments" WHERE DATE_SUB(NOW(), INTERVAL %d DAY) > comment_date_gmt AND comment_approved = \'spam\' LIMIT %d", $delete_interval, $delete_limit))")) )
DELETE FROM $wpdb WHERE comment_id IN ( implode(", ", array_fill(0, count($comment_ids), "$wpdb->get_col($wpdb->prepare("SELECT comment_id FROM "$wpdb->comments" WHERE DATE_SUB(NOW(), INTERVAL %d DAY) > comment_date_gmt AND comment_approved = \'spam\' LIMIT %d", $delete_interval, $delete_limit))")) )
SQL command (DELETE FROM $wpdb WHERE comment_id IN ( implode(", ", array_fill(0, count($comment_ids), "$wpdb->get_col($wpdb->prepare("SELECT comment_id FROM "$wpdb->comments" WHERE DATE_SUB(NOW(), INTERVAL %d DAY) > comment_date_gmt AND comment_approved = \'spam\' LIMIT %d", $delete_interval, $delete_limit))")) )) cannot be parsed correct.
DELETE FROM $wpdb WHERE comment_id IN ( implode(", ", array_fill(0, count($comment_ids), "$wpdb->get_col($wpdb->prepare("SELECT comment_id FROM "$wpdb->comments" WHERE DATE_SUB(NOW(), INTERVAL %d DAY) > comment_date_gmt AND comment_approved = \'spam\' LIMIT %d", $delete_interval, $delete_limit))")) )
DELETE FROM $wpdb WHERE comment_id IN ( implode(", ", array_fill(0, count($comment_ids), "$wpdb->get_col($wpdb->prepare("SELECT comment_id FROM "$wpdb->comments" WHERE DATE_SUB(NOW(), INTERVAL %d DAY) > comment_date_gmt AND comment_approved = \'spam\' LIMIT %d", $delete_interval, $delete_limit))")) )
SQL command (DELETE FROM $wpdb WHERE comment_id IN ( implode(", ", array_fill(0, count($comment_ids), "$wpdb->get_col($wpdb->prepare("SELECT comment_id FROM "$wpdb->comments" WHERE DATE_SUB(NOW(), INTERVAL %d DAY) > comment_date_gmt AND comment_approved = \'spam\' LIMIT %d", $delete_interval, $delete_limit))")) )) cannot be parsed correct.
OPTIMIZE TABLE $wpdb_comments
SQL command (OPTIMIZE TABLE $wpdb_comments) cannot be parsed correct.
OPTIMIZE TABLE $wpdb_commentmeta
SQL command (OPTIMIZE TABLE $wpdb_commentmeta) cannot be parsed correct.
OPTIMIZE TABLE $wpdb_commentmeta
SQL command (OPTIMIZE TABLE $wpdb_commentmeta) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [2662, 11099, 11357, 13447, 11509, 12003, 12737, 13071, 6429, 11195, 11219, 11304, 11445, 11644]
Added 0 SQL nodes. 0 out of 14 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:04.864427.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'<h3>_x("Spam", "comments", "akismet")</h3>'' cannot be parsed correct.
HTML code '$'<p>sprintf(_n("<a href="%1$s">Akismet</a> has protected your site from <a href="%2$s">%3$s spam comment</a>.", "<a href="%1$s">Akismet</a> has protected your site from <a href="%2$s">%3$s spam comments</a>.", $count, "akismet"), "https://akismet.com/wordpress/", esc_url(add_query_arg(["page" => "akismet-admin"], admin_url(isset($submenu["edit-comments.php"])"edit-comments.php""edit.php"))), number_format_i18n($count))</p>'' cannot be parsed correct.
HTML code '$'<p class=\'akismet-right-now\'>sprintf(_n("<a href="%1$s">Akismet</a> has protected your site from %2$s spam comment already. ", "<a href="%1$s">Akismet</a> has protected your site from %2$s spam comments already. ", $count, "akismet"), "https://akismet.com/wordpress/", number_format_i18n($count))<br />sprintf(__("There&#8217;s nothing in your <a href=\\'%s\\'>spam queue</a> at the moment.", "akismet"), esc_url($link))</p>
'' cannot be parsed correct.
HTML code '$'<a
				class=implode(" ", $classes) href=$link data-progress-label=Checking for Spam (%1$s%)"
				data-success-url="remove_query_arg(["akismet_recheck", "akismet_recheck_error"], add_query_arg(["akismet_recheck_complete" => 1, "recheck_count" => urlencode("__recheck_count__"), "spam_count" => urlencode("__spam_count__")]))"
				data-failure-url="remove_query_arg(["akismet_recheck", "akismet_recheck_complete"], add_query_arg(["akismet_recheck_error" => 1]))"
				data-pending-comment-count="$comments_count"
				data-nonce="wp_create_nonce("akismet_check_for_spam")"
			onclick="return false;"
				>Check for Spam</a>'' cannot be parsed correct.
HTML code '$'No comment history.'' cannot be parsed correct.
HTML code '$'<span class="akismet-status" commentid=""><a href="comment.php?action=editcomment&amp;c=#akismet-status" title="esc_attr__("View comment history", "akismet")"null</a></span>'' cannot be parsed correct.
HTML code '$'<span class="akismet-user-comment-count" commentid="" style="display:none;"><br><span class="akismet-user-comment-counts">sprintf(esc_html(_n("%s approved", "%s approved", $comment_count, "akismet")), number_format_i18n($comment_count))</span></span>'' cannot be parsed correct.
HTML code '$'<span style="color: #999;" alt="date("D d M Y @ h:i:s a", $row["time"]) GMT" title="date("D d M Y @ h:i:s a", $row["time"]) GMT"sprintf(esc_html__("%s ago", "akismet"), human_time_diff($row["time"]))</span>'' cannot be parsed correct.
HTML code '$'Akismet cleared this comment during an automatic retry.'' cannot be parsed correct.
HTML code '$'<div class="notice notice-success"><p>There were no comments to check. Akismet will only check comments awaiting moderation.</p></div>'' cannot be parsed correct.
HTML code '$'<div class="notice notice-error"><p>Akismet could not recheck your comments for spam.</p></div>'' cannot be parsed correct.
HTML code '$'$this->get_field_id("title")'' cannot be parsed correct.
HTML code '$'$this->get_field_id("title")'' cannot be parsed correct.
HTML code '$'$this->get_field_name("title")'' cannot be parsed correct.
HTML code '$'Spam Blocked'' cannot be parsed correct.
HTML code '$'$args_after_widget'' cannot be parsed correct.
HTML code '$'$args_before_widget'' cannot be parsed correct.
HTML code '$'$args_before_title'' cannot be parsed correct.
HTML code '$'$instance_title'' cannot be parsed correct.
HTML code '$'$args_after_title'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(_n("<strong class="count">%1$s spam</strong> blocked by <strong>Akismet</strong>", "<strong class="count">%1$s spam</strong> blocked by <strong>Akismet</strong>", $count, "akismet"), number_format_i18n($count)), ["strong" => ["class" => true]])'' cannot be parsed correct.
HTML code '$'apply_filters("akismet_comment_form_privacy_notice_markup", "<p class="akismet_comment_form_privacy_notice">" . sprintf(__("This site uses Akismet to reduce spam. <a href="%s" target="_blank" rel="nofollow noopener">Learn how your comment data is processed</a>.", "akismet"), "https://akismet.com/privacy/") . "</p>")'' cannot be parsed correct.
HTML code '$'plugins_url("../_inc/img/logo-full-2x.png", )'' cannot be parsed correct.
HTML code '$'number_format($stat_totals["6-months"]->spam)'' cannot be parsed correct.
HTML code '$'_n("Spam blocked", "Spam blocked", $stat_totals["6-months"]->spam, "akismet")'' cannot be parsed correct.
HTML code '$'<strong>sprintf(esc_html__("Akismet %s requires WordPress %s or higher.", "akismet"), AKISMET_VERSION, AKISMET__MINIMUM_WP_VERSION)</strong> sprintf(__("Please <a href="%1$s">upgrade WordPress</a> to a current version, or <a href="%2$s">downgrade to version 2.4 of the Akismet plugin</a>.", "akismet"), "https://codex.wordpress.org/Upgrading_WordPress", "https://wordpress.org/extend/plugins/akismet/download/")'' cannot be parsed correct.
HTML code '$'number_format($stat_totals["all"]->spam)'' cannot be parsed correct.
HTML code '$'_n("Spam blocked", "Spam blocked", $stat_totals["all"]->spam, "akismet")'' cannot be parsed correct.
HTML code '$'floatval($stat_totals["all"]->accuracy)'' cannot be parsed correct.
HTML code '$'get_option("wordpress_api_key")'' cannot be parsed correct.
HTML code '$'regular-text code $akismet_user'' cannot be parsed correct.
HTML code '$'get_avatar($akismet_user->user_email, null, null, null, ["class" => "akismet-jetpack-gravatar"])'' cannot be parsed correct.
HTML code '$'sprintf(esc_html(__("You are connected as %s.", "akismet")), "<b>" . esc_html($akismet_user->user_login) . "</b>")'' cannot be parsed correct.
HTML code '$'$akismet_user'' cannot be parsed correct.
HTML code '$'get_option("home")'' cannot be parsed correct.
HTML code '$'$redirectplugin-signup'' cannot be parsed correct.
HTML code '$'implode(" ", $classes)akismet-button'' cannot be parsed correct.
HTML code '$'$text'' cannot be parsed correct.
HTML code '$'checked("hide", get_option("akismet_comment_form_privacy_notice"), false)checked="checked"'' cannot be parsed correct.
HTML code '$'$akismet_user'' cannot be parsed correct.
HTML code '$'date("F j, Y", $akismet_user->next_billing_date)'' cannot be parsed correct.
HTML code '$'get_option("home")'' cannot be parsed correct.
HTML code '$'$akismet_user'' cannot be parsed correct.
HTML code '$'get_avatar($akismet_user->user_email, null, null, null, ["class" => "akismet-jetpack-gravatar"])'' cannot be parsed correct.
HTML code '$'sprintf(esc_html(__("You are connected as %s.", "akismet")), "<b>" . esc_html($akismet_user->user_login) . "</b>")'' cannot be parsed correct.
HTML code '$'$link_text'' cannot be parsed correct.
HTML code '$'$msg'' cannot be parsed correct.
HTML code '$'$notice_header'' cannot be parsed correct.
HTML code '$'$notice_text'' cannot be parsed correct.
HTML code '$'$time_saved'' cannot be parsed correct.
HTML code '$'Your API key is no longer valid.'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(__("Please enter a new key or <a href="%s" target="_blank">contact Akismet support</a>.", "akismet"), "https://akismet.com/contact/"), ["a" => ["href" => true, "target" => true]])'' cannot be parsed correct.
HTML code '$'$akismet_user'' cannot be parsed correct.
HTML code '$'get_option("home")'' cannot be parsed correct.
HTML code '$'$akismet_user'' cannot be parsed correct.
HTML code '$'get_avatar($akismet_user->user_email, null, null, null, ["class" => "akismet-jetpack-gravatar"])'' cannot be parsed correct.
HTML code '$'sprintf(__("Your subscription for %s is cancelled.", "akismet"), $akismet_user->user_email)'' cannot be parsed correct.
HTML code '$'$akismet_user'' cannot be parsed correct.
HTML code '$'sprintf(__("Your subscription for %s is suspended.", "akismet"), $akismet_user->user_email)'' cannot be parsed correct.
HTML code '$'$akismet_user'' cannot be parsed correct.
HTML code '$'plugins_url("../_inc/img/logo-a-2x.png", )'' cannot be parsed correct.
HTML code '$'sprintf(__("Since %1$s, your account made %2$s API calls, compared to your plan&#8217;s limit of %3$s.", "akismet"), esc_html(gmdate("F") . " 1"), number_format($api_calls), number_format($usage_limit))'' cannot be parsed correct.
HTML code '$'Learn more about usage limits.'' cannot be parsed correct.
HTML code '$'Your Akismet usage has been over your plan&#8217;s limit for two consecutive months. Next month, we will restrict your account after you reach the limit. Please consider upgrading your plan.'' cannot be parsed correct.
HTML code '$'Learn more about usage limits.'' cannot be parsed correct.
HTML code '$'Your Akismet usage is nearing your plan&#8217;s limit for the third consecutive month. We will restrict your account after you reach the limit. Upgrade your plan so Akismet can continue blocking spam.'' cannot be parsed correct.
HTML code '$'Learn more about usage limits.'' cannot be parsed correct.
HTML code '$'Your Akismet usage has been over your plan&#8217;s limit for three consecutive months. We have restricted your account for the rest of the month. Upgrade your plan so Akismet can continue blocking spam.'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(__("The connection to akismet.com could not be established. Please refer to <a href="%s" target="_blank">our guide about firewalls</a> and check your server configuration.", "akismet"), "https://blog.akismet.com/akismet-hosting-faq/"), ["a" => ["href" => true, "target" => true]])'' cannot be parsed correct.
HTML code '$'wp_kses(sprintf(__("Your Plus subscription allows the use of Akismet on only one site. Please <a href="%s" target="_blank">purchase additional Plus subscriptions</a> or upgrade to an Enterprise subscription that allows the use of Akismet on unlimited sites.", "akismet"), "https://docs.akismet.com/billing/add-more-sites/"), ["a" => ["href" => true, "target" => true]])'' cannot be parsed correct.
HTML code '$'Learn more about usage limits.'' cannot be parsed correct.
HTML code '$'$upgrade_url'' cannot be parsed correct.
HTML code '$'sprintf(__("Upgrade to %s", "akismet"), $upgrade_plan)'' cannot be parsed correct.
HTML code '$'sprintf(esc_html__("An Akismet API key has been defined in the %s file for this site.", "akismet"), "<code>wp-config.php</code>")'' cannot be parsed correct.
HTML code '$'plugins_url("../_inc/img/logo-full-2x.png", )'' cannot be parsed correct.
HTML code '$'plugins_url("../_inc/img/logo-full-2x.png", )'' cannot be parsed correct.
HTML code '$'sprintf("//akismet.com/web/1.0/user-stats.php?blog=%s&api_key=%s&locale=%s", urlencode(get_option("home")), Akismet->get_api_key(), get_locale())'' cannot be parsed correct.
HTML code '$'Hi there!  I\'m just a plugin, not much I can do when called directly.'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'<div class="alignleft actions">'' cannot be parsed correct.
HTML code '$'<span class="checkforspam-spinner"></span>'' cannot be parsed correct.
HTML code '$'</p>'' cannot be parsed correct.
HTML code '$'<p>'' cannot be parsed correct.
HTML code '$'</p>'' cannot be parsed correct.
HTML code '$'<p>'' cannot be parsed correct.
HTML code '$' - '' cannot be parsed correct.
HTML code '$'<p style="display: none;">'' cannot be parsed correct.
HTML code '$'</p>'' cannot be parsed correct.
HTML code '$'			<input type="submit" class="akismet-button akismet-is-primary" value="'' cannot be parsed correct.
HTML code '$'			<input type="hidden" name="action" value="enter-key">
			<p style="width: 100%; display: flex; flex-wrap: nowrap; box-sizing: border-box;">
				<input id="key" name="key" type="text" size="15" value="" placeholder="'' cannot be parsed correct.
HTML code '$'							<div id="publishing-action">
								<input type="hidden" name="action" value="enter-key">
								<input type="submit" name="submit" id="submit" class="akismet-button akismet-could-be-primary" value="'' cannot be parsed correct.
HTML code '$'<a href="https://docs.akismet.com/akismet-api-usage-limits/" target="_blank">'' cannot be parsed correct.
HTML code '$'</a>'' cannot be parsed correct.
HTML code '$'<a href="https://docs.akismet.com/akismet-api-usage-limits/" target="_blank">'' cannot be parsed correct.
HTML code '$'</a>'' cannot be parsed correct.
HTML code '$'<a href="https://docs.akismet.com/akismet-api-usage-limits/" target="_blank">'' cannot be parsed correct.
HTML code '$'</a>'' cannot be parsed correct.
HTML code '$'<a href="https://docs.akismet.com/akismet-api-usage-limits/" target="_blank">'' cannot be parsed correct.
HTML code '$'</a>'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:10.043737.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.049679.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 49 do_action/apply_filters calls and 50 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:02.410962.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FileProDetector
### Start running FrontBaseDetector
### Finish running DbplusDetector
### Start running HashDetector
### Finish running DbaseDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running FirebirdInterBaseDetector
### Start running IngresDetector
### Finish running InformixDetector
### Start running maxdbDetector
### Finish running FrontBaseDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running IBMDb2Detector
### Start running MsqlDetector
### Finish running MongoDetector
### Start running MySQLDetector
### Finish running ArrayElementDetector
### Start running MySQLiDetector
### Finish running MongoDbDetector
### Start running Oci8Detector
### Finish running MsqlDetector
### Start running OpenSSLDetector
### Finish running MySQLDetector
### Start running ParadoxDetector
### Finish running Oci8Detector
### Start running PasswordHashingDetector
### Finish running ParadoxDetector
### Start running PhpCurlDetector
### Finish running PhpCurlDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PasswordHashingDetector
### Start running PHPRetrievalDetector
### Finish running HashDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPIncludedDetector
### Start running PhpVarDetector
### Finish running PHPStorageDetector
### Start running PostgreSQLDetector
### Finish running PHPRetrievalDetector
### Start running PropertyDetector
### Finish running PhpVarDetector
### Start running Sqlite3Detector
### Finish running OpenSSLDetector
### Start running SqliteDetector
### Finish running PostgreSQLDetector
### Start running SqlServerDetector
### Finish running Sqlite3Detector
### Start running SybaseDetector
### Finish running SqliteDetector
### Start running TokyoTyrantDetector
### Finish running SybaseDetector
### Start running UserInputDetector
### Finish running TokyoTyrantDetector
### Start running VariableDetector
### Finish running maxdbDetector
### Start running WordpressHashingFnDetector
### Finish running SqlServerDetector
### Start running WordPressRemoteDetector
### Finish running MySQLiDetector
### Start running WordPressRetrievalDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressStorageDetector
### Finish running PropertyDetector
### Start running WP_UserDetector
### Finish running UserInputDetector
### Start running GenericDatabaseUsageDetector
### Finish running WP_UserDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running VariableDetector
### Start running UninstallDetector
### Finish running GenericDatabaseUsageDetector
### Finish running UninstallDetector
### Finish running WordPressRemoteDetector
### Finish running WordPressStorageDetector
### Finish running DeletionDetector
### Finish running WordPressRetrievalDetector
### Finished running detectors
class.akismet-admin.php:574
  - object property '$comment->comment_author_email' of personal types {'email'} is found.
  - Data types: email
class.akismet.php:358
  - object property '$comment->comment_author_email' of personal types {'email'} is found.
  - Data types: email
class.akismet.php:363
  - object property '$comment->comment_author_email' of personal types {'email'} is found.
  - Data types: email
class.akismet.php:946
  - object property '$comment->comment_author_email' of personal types {'email'} is found.
  - Data types: email
views/connect-jp.php:20
  - object property '$akismet_user->user_email' of personal types {'email'} is found.
  - Data types: email
views/connect-jp.php:23
  - object property '$akismet_user->user_email' of personal types {'email'} is found.
  - Data types: email
views/connect-jp.php:33
  - object property '$akismet_user->user_email' of personal types {'email'} is found.
  - Data types: email
views/connect-jp.php:36
  - object property '$akismet_user->user_email' of personal types {'email'} is found.
  - Data types: email
views/connect-jp.php:36
  - object property '$akismet_user->user_email' of personal types {'email'} is found.
  - Data types: email
views/connect-jp.php:44
  - object property '$akismet_user->user_email' of personal types {'email'} is found.
  - Data types: email
views/connect-jp.php:55
  - object property '$akismet_user->user_email' of personal types {'email'} is found.
  - Data types: email
views/connect-jp.php:58
  - object property '$akismet_user->user_email' of personal types {'email'} is found.
  - Data types: email 

class.akismet-admin.php:1267
  - variable '$email_address' of personal types {'email', 'address'} is found.
  - Data types: email, address
class.akismet-admin.php:1267
  - variable '$email_address' of personal types {'email', 'address'} is found.
  - Data types: email, address
class.akismet.php:545
  - variable '$comment_author_email' of personal types {'email'} is found.
  - Data types: email
class.akismet.php:546
  - variable '$comment_author_email' of personal types {'email'} is found.
  - Data types: email
class.akismet.php:1175
  - variable '$emails' of personal types {'email'} is found.
  - Data types: email
class.akismet.php:1188
  - variable '$emails' of personal types {'email'} is found.
  - Data types: email
wrapper.php:155
  - variable '$comment_author_email' of personal types {'email'} is found.
  - Data types: email 

class.akismet-admin.php:768
  - API call to wp_remote_get("https://rest.akismet.com/1.1/test"). Passed arguments: 0: $url (string). Returns (array|WP_Error).
  - Data types: remote
class.akismet-admin.php:771
  - API call to wp_remote_get("http://rest.akismet.com/1.1/test"). Passed arguments: 0: $url (string). Returns (array|WP_Error).
  - Data types: remote
class.akismet.php:1264
  - API call to wp_remote_post($akismet_url, $http_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
class.akismet.php:1274
  - API call to wp_remote_post($akismet_url, $http_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
class.akismet.php:1286
  - API call to wp_remote_post($http_akismet_url, $http_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote 

class.akismet-admin.php:74
  - RETRIEVAL call to get_option("Activated_Akismet") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet-admin.php:340
  - RETRIEVAL call to get_option("akismet_spam_count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet-admin.php:356
  - RETRIEVAL call to get_option("akismet_spam_count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet-admin.php:499
  - RETRIEVAL call to get_comment($comment_id, ARRAY_A). Passed arguments: 1: $output (string), 0: $comment (WP_Comment|string|int). Returns (WP_Comment|array|null).
class.akismet-admin.php:503
  - RETRIEVAL call to wp_update_comment($comment). Passed arguments: 0: $commentarr (array). Returns (int|false|WP_Error).
class.akismet-admin.php:512
  - RETRIEVAL call to get_comment($comment_id, ARRAY_A). Passed arguments: 1: $output (string), 0: $comment (WP_Comment|string|int). Returns (WP_Comment|array|null).
class.akismet-admin.php:516
  - RETRIEVAL call to wp_update_comment($comment). Passed arguments: 0: $commentarr (array). Returns (int|false|WP_Error).
class.akismet-admin.php:523
  - RETRIEVAL call to get_comment_meta($comment->comment_ID, "akismet_result", true) alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: comment_meta
class.akismet-admin.php:524
  - RETRIEVAL call to get_comment_meta($comment->comment_ID, "akismet_error", true) alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: comment_meta
class.akismet-admin.php:525
  - RETRIEVAL call to get_comment_meta($comment->comment_ID, "akismet_user_result", true) alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: comment_meta
class.akismet-admin.php:537
  - RETRIEVAL call to get_comment_meta($comment->comment_ID, "akismet_user", true) alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: comment_meta
class.akismet-admin.php:563
  - RETRIEVAL call to get_option("akismet_show_user_comments_approved") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet-admin.php:760
  - RETRIEVAL call to get_option("akismet_available_servers") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet-admin.php:761
  - RETRIEVAL call to get_option("akismet_connectivity_time") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet-admin.php:827
  - RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet-admin.php:842
  - RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet-admin.php:886
  - RETRIEVAL call to get_option("akismet_alert_code") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet-admin.php:887
  - RETRIEVAL call to get_option("akismet_alert_msg") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet-admin.php:894
  - RETRIEVAL call to get_option("akismet_alert_code") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet-admin.php:895
  - RETRIEVAL call to get_option("akismet_alert_msg") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet-admin.php:896
  - RETRIEVAL call to get_option("akismet_alert_api_calls") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet-admin.php:897
  - RETRIEVAL call to get_option("akismet_alert_usage_limit") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet-admin.php:898
  - RETRIEVAL call to get_option("akismet_alert_upgrade_plan") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet-admin.php:899
  - RETRIEVAL call to get_option("akismet_alert_upgrade_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet-admin.php:900
  - RETRIEVAL call to get_option("akismet_alert_upgrade_type") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet-admin.php:999
  - RETRIEVAL call to get_option("akismet_strictness") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet-admin.php:1000
  - RETRIEVAL call to get_option("akismet_discard_month") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet-admin.php:1041
  - RETRIEVAL call to get_option("akismet_alert_code") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet-admin.php:1080
  - RETRIEVAL call to get_option("akismet_alert_code") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet-admin.php:1083
  - RETRIEVAL call to get_option("akismet_alert_code") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet-admin.php:1276
  - RETRIEVAL call to get_comment_meta($comment->comment_ID, "akismet_as_submitted", true) alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: comment_meta
class.akismet-cli.php:151
  - RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet-rest-api.php:190
  - RETRIEVAL call to get_option("akismet_strictness", "1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
class.akismet-rest-api.php:191
  - RETRIEVAL call to get_option("akismet_show_user_comments_approved", "1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
class.akismet-rest-api.php:267
  - RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet-rest-api.php:286
  - RETRIEVAL call to get_option("akismet_alert_code") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet-rest-api.php:287
  - RETRIEVAL call to get_option("akismet_alert_msg") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet-rest-api.php:325
  - RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet-widget.php:87
  - RETRIEVAL call to get_option("akismet_spam_count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet.php:78
  - RETRIEVAL call to get_option("wordpress_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet.php:82
  - RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet.php:100
  - RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet.php:176
  - RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet.php:178
  - RETRIEVAL call to get_option("blog_charset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet.php:186
  - RETRIEVAL call to get_option("akismet_comment_nonce") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet.php:222
  - RETRIEVAL call to get_post($comment["comment_post_ID"]) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, post_meta, wp_post
class.akismet.php:264
  - RETRIEVAL call to get_option("akismet_spam_count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet.php:420
  - RETRIEVAL call to get_comment($comment_id). Passed arguments: 0: $comment (WP_Comment|string|int). Returns (WP_Comment|array|null).
class.akismet.php:554
  - RETRIEVAL call to get_comment_meta($comment_id, "akismet_history", false) alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: comment_meta
class.akismet.php:643
  - RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet.php:645
  - RETRIEVAL call to get_option("blog_charset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet.php:724
  - RETRIEVAL call to get_comment_meta($comment->comment_ID, "akismet_rechecking") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $key (string). Returns (mixed).
  - Data types: comment_meta
class.akismet.php:789
  - RETRIEVAL call to get_comment_meta($comment_id, "akismet_as_submitted", true) alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: comment_meta
class.akismet.php:794
  - RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet.php:796
  - RETRIEVAL call to get_option("blog_charset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet.php:813
  - RETRIEVAL call to get_post($comment->comment_post_ID) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, post_meta, wp_post
class.akismet.php:847
  - RETRIEVAL call to get_comment_meta($comment_id, "akismet_as_submitted", true) alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: comment_meta
class.akismet.php:852
  - RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet.php:854
  - RETRIEVAL call to get_option("blog_charset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet.php:871
  - RETRIEVAL call to get_post($comment->comment_post_ID) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, post_meta, wp_post
class.akismet.php:894
  - RETRIEVAL call to get_option("akismet_alert_code") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet.php:897
  - RETRIEVAL call to get_option("akismet_alert_code") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet.php:909
  - RETRIEVAL call to get_comment($comment_id). Passed arguments: 0: $comment (WP_Comment|string|int). Returns (WP_Comment|array|null).
class.akismet.php:939
  - RETRIEVAL call to get_comment($comment_id). Passed arguments: 0: $comment (WP_Comment|string|int). Returns (WP_Comment|array|null).
class.akismet.php:948
  - RETRIEVAL call to get_comment_meta($comment_id, "akismet_delayed_moderation_email", true) alters data types {'email', 'comment_meta'}. Passed arguments: 0: $comment_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: email, comment_meta
class.akismet.php:983
  - RETRIEVAL call to get_option("akismet_alert_code") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet.php:1009
  - RETRIEVAL call to get_option("akismet_comment_nonce") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet.php:1028
  - RETRIEVAL call to get_option("akismet_strictness") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet.php:1157
  - RETRIEVAL call to get_option("akismet_spam_count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet.php:1176
  - RETRIEVAL call to get_comment($comment_id). Passed arguments: 0: $comment (WP_Comment|string|int). Returns (WP_Comment|array|null).
class.akismet.php:1231
  - RETRIEVAL call to get_option("blog_charset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet.php:1248
  - RETRIEVAL call to get_option("akismet_ssl_disabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet.php:1333
  - RETRIEVAL call to get_option($option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet.php:1447
  - RETRIEVAL call to get_option("active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class.akismet.php:1643
  - RETRIEVAL call to get_post($post_id) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, post_meta, wp_post
class.akismet.php:1721
  - RETRIEVAL call to get_option("akismet_comment_form_privacy_notice", "hide") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
views/config.php:38
  - RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
views/config.php:79
  - RETRIEVAL call to get_option("wordpress_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
views/config.php:95
  - RETRIEVAL call to get_option("akismet_ssl_disabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
views/config.php:124
  - RETRIEVAL call to get_option("akismet_show_user_comments_approved") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
views/config.php:138
  - RETRIEVAL call to get_option("akismet_strictness") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
views/config.php:139
  - RETRIEVAL call to get_option("akismet_strictness") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
views/config.php:165
  - RETRIEVAL call to get_option("akismet_comment_form_privacy_notice") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
views/config.php:166
  - RETRIEVAL call to get_option("akismet_comment_form_privacy_notice") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
views/config.php:166
  - RETRIEVAL call to get_option("akismet_comment_form_privacy_notice") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
views/connect-jp.php:15
  - RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
views/connect-jp.php:28
  - RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
views/get.php:9
  - RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
views/stats.php:10
  - RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option 

class.akismet-admin.php:75
  - STORAGE call to delete_option("Activated_Akismet") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
class.akismet-admin.php:282
  - STORAGE call to update_option($option, isset($_POST[$option]) && $_POST[$option] == 1"1""0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
class.akismet-admin.php:300
  - STORAGE call to delete_option("wordpress_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
class.akismet-admin.php:319
  - STORAGE call to update_option("wordpress_api_key", $api_key) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
class.akismet-admin.php:763
  - STORAGE call to update_option("akismet_available_servers", $servers) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
class.akismet-admin.php:764
  - STORAGE call to update_option("akismet_connectivity_time", time()) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
class.akismet-admin.php:934
  - STORAGE call to delete_option("wordpress_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
class.akismet-admin.php:1000
  - STORAGE call to add_option("akismet_strictness", get_option("akismet_discard_month") === "false""0""1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
class.akismet-admin.php:1005
  - STORAGE call to update_option("akismet_spam_count", $stat_totals["all"]->spam) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
class.akismet-admin.php:1233
  - STORAGE call to update_option("akismet_comment_form_privacy_notice", $state) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
class.akismet-admin.php:1279
  - STORAGE call to delete_comment_meta($comment->comment_ID, "akismet_as_submitted") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: comment_meta
class.akismet-rest-api.php:161
  - STORAGE call to update_option("wordpress_api_key", $new_api_key) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
class.akismet-rest-api.php:177
  - STORAGE call to delete_option("wordpress_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
class.akismet-rest-api.php:218
  - STORAGE call to update_option($setting_key, $setting_value"1""0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
class.akismet-rest-api.php:298
  - STORAGE call to delete_option("akismet_alert_code") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
class.akismet-rest-api.php:299
  - STORAGE call to delete_option("akismet_alert_msg") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
class.akismet-rest-api.php:314
  - STORAGE call to delete_option("akismet_alert_code") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
class.akismet-rest-api.php:315
  - STORAGE call to delete_option("akismet_alert_msg") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
class.akismet.php:264
  - STORAGE call to update_option("akismet_spam_count", get_option("akismet_spam_count") + $incr) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
class.akismet.php:464
  - STORAGE call to delete_comment_meta($comment_id, "akismet_as_submitted") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: comment_meta
class.akismet.php:493
  - STORAGE call to delete_comment_meta($commentmeta->comment_id, $commentmeta->meta_key) alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: comment_meta
class.akismet.php:624
  - STORAGE call to add_comment_meta($comment_id, "akismet_history", $event, false) alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|bool).
  - Data types: comment_meta
class.akismet.php:667
  - STORAGE call to add_comment_meta($id, "akismet_rechecking", true) alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: comment_meta
class.akismet.php:671
  - STORAGE call to delete_comment_meta($id, "akismet_rechecking") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: comment_meta
class.akismet.php:679
  - STORAGE call to delete_comment_meta($id, "akismet_error") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: comment_meta
class.akismet.php:680
  - STORAGE call to delete_comment_meta($id, "akismet_delayed_moderation_email") alters data types {'email', 'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: email, comment_meta
class.akismet.php:685
  - STORAGE call to delete_comment_meta($id, "akismet_error") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: comment_meta
class.akismet.php:686
  - STORAGE call to delete_comment_meta($id, "akismet_delayed_moderation_email") alters data types {'email', 'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: email, comment_meta
class.akismet.php:901
  - STORAGE call to delete_option("akismet_available_servers") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
class.akismet.php:916
  - STORAGE call to delete_comment_meta($comment_id, "akismet_error") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: comment_meta
class.akismet.php:917
  - STORAGE call to delete_comment_meta($comment_id, "akismet_delayed_moderation_email") alters data types {'email', 'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: email, comment_meta
class.akismet.php:921
  - STORAGE call to add_comment_meta($comment_id, "akismet_rechecking", true) alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: comment_meta
class.akismet.php:935
  - STORAGE call to delete_comment_meta($comment_id, "akismet_error") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: comment_meta
class.akismet.php:953
  - STORAGE call to delete_comment_meta($comment_id, "akismet_delayed_moderation_email") alters data types {'email', 'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: email, comment_meta
class.akismet.php:958
  - STORAGE call to delete_comment_meta($comment_id, "akismet_delayed_moderation_email") alters data types {'email', 'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: email, comment_meta
class.akismet.php:962
  - STORAGE call to delete_comment_meta($comment_id, "akismet_rechecking") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: comment_meta
class.akismet.php:967
  - STORAGE call to delete_comment_meta($comment_id, "akismet_rechecking") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: comment_meta
class.akismet.php:1157
  - STORAGE call to update_option("akismet_spam_count", get_option("akismet_spam_count") + $incr) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
class.akismet.php:1252
  - STORAGE call to delete_option("akismet_ssl_disabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
class.akismet.php:1300
  - STORAGE call to update_option("akismet_ssl_disabled", time()) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
class.akismet.php:1335
  - STORAGE call to delete_option($option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
class.akismet.php:1337
  - STORAGE call to update_option($option_name, $value) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
class.akismet.php:1458
  - STORAGE call to update_option("active_plugins", array_filter($plugins)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
class.akismet.php:1490
  - STORAGE call to add_option("Activated_Akismet", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option 

class.akismet.php:1116
  - WP_User object is created.
  - Data types: user_meta, user 

class.akismet-admin.php:75
  - DELETION call to delete_option("Activated_Akismet") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
class.akismet-admin.php:300
  - DELETION call to delete_option("wordpress_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
class.akismet-admin.php:934
  - DELETION call to delete_option("wordpress_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
class.akismet-admin.php:1279
  - DELETION call to delete_comment_meta($comment->comment_ID, "akismet_as_submitted") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: comment_meta
class.akismet-rest-api.php:177
  - DELETION call to delete_option("wordpress_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
class.akismet-rest-api.php:298
  - DELETION call to delete_option("akismet_alert_code") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
class.akismet-rest-api.php:299
  - DELETION call to delete_option("akismet_alert_msg") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
class.akismet-rest-api.php:314
  - DELETION call to delete_option("akismet_alert_code") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
class.akismet-rest-api.php:315
  - DELETION call to delete_option("akismet_alert_msg") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
class.akismet.php:464
  - DELETION call to delete_comment_meta($comment_id, "akismet_as_submitted") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: comment_meta
class.akismet.php:493
  - DELETION call to delete_comment_meta($commentmeta->comment_id, $commentmeta->meta_key) alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: comment_meta
class.akismet.php:671
  - DELETION call to delete_comment_meta($id, "akismet_rechecking") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: comment_meta
class.akismet.php:679
  - DELETION call to delete_comment_meta($id, "akismet_error") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: comment_meta
class.akismet.php:680
  - DELETION call to delete_comment_meta($id, "akismet_delayed_moderation_email") alters data types {'email', 'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: email, comment_meta
class.akismet.php:685
  - DELETION call to delete_comment_meta($id, "akismet_error") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: comment_meta
class.akismet.php:686
  - DELETION call to delete_comment_meta($id, "akismet_delayed_moderation_email") alters data types {'email', 'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: email, comment_meta
class.akismet.php:901
  - DELETION call to delete_option("akismet_available_servers") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
class.akismet.php:916
  - DELETION call to delete_comment_meta($comment_id, "akismet_error") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: comment_meta
class.akismet.php:917
  - DELETION call to delete_comment_meta($comment_id, "akismet_delayed_moderation_email") alters data types {'email', 'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: email, comment_meta
class.akismet.php:935
  - DELETION call to delete_comment_meta($comment_id, "akismet_error") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: comment_meta
class.akismet.php:953
  - DELETION call to delete_comment_meta($comment_id, "akismet_delayed_moderation_email") alters data types {'email', 'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: email, comment_meta
class.akismet.php:958
  - DELETION call to delete_comment_meta($comment_id, "akismet_delayed_moderation_email") alters data types {'email', 'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: email, comment_meta
class.akismet.php:962
  - DELETION call to delete_comment_meta($comment_id, "akismet_rechecking") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: comment_meta
class.akismet.php:967
  - DELETION call to delete_comment_meta($comment_id, "akismet_rechecking") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: comment_meta
class.akismet.php:1252
  - DELETION call to delete_option("akismet_ssl_disabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
class.akismet.php:1335
  - DELETION call to delete_option($option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

By data type:
address
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
comment_meta
	WordPressStorageDetector.add_comment_meta($id, "akismet_rechecking", true) - {'comment_meta'}
	DeletionDetector.delete_comment_meta($comment_id, "akismet_delayed_moderation_email") - {'email', 'comment_meta'}
	WordPressStorageDetector.delete_comment_meta($id, "akismet_rechecking") - {'comment_meta'}
	DeletionDetector.delete_comment_meta($comment_id, "akismet_rechecking") - {'comment_meta'}
	DeletionDetector.delete_comment_meta($comment_id, "akismet_rechecking") - {'comment_meta'}
	DeletionDetector.delete_comment_meta($comment_id, "akismet_delayed_moderation_email") - {'email', 'comment_meta'}
	DeletionDetector.delete_comment_meta($id, "akismet_delayed_moderation_email") - {'email', 'comment_meta'}
	DeletionDetector.delete_comment_meta($comment_id, "akismet_error") - {'comment_meta'}
	DeletionDetector.delete_comment_meta($comment_id, "akismet_as_submitted") - {'comment_meta'}
	DeletionDetector.delete_comment_meta($id, "akismet_rechecking") - {'comment_meta'}
	WordPressStorageDetector.delete_comment_meta($comment_id, "akismet_as_submitted") - {'comment_meta'}
	WordPressStorageDetector.delete_comment_meta($id, "akismet_error") - {'comment_meta'}
	DeletionDetector.delete_comment_meta($comment_id, "akismet_error") - {'comment_meta'}
	WordPressStorageDetector.delete_comment_meta($comment_id, "akismet_error") - {'comment_meta'}
	WordPressRetrievalDetector.get_comment_meta($comment->comment_ID, "akismet_rechecking") - {'comment_meta'}
	WordPressStorageDetector.delete_comment_meta($comment_id, "akismet_error") - {'comment_meta'}
	WordPressRetrievalDetector.get_comment_meta($comment_id, "akismet_as_submitted", true) - {'comment_meta'}
	DeletionDetector.delete_comment_meta($id, "akismet_error") - {'comment_meta'}
	WordPressRetrievalDetector.get_comment_meta($comment->comment_ID, "akismet_result", true) - {'comment_meta'}
	WordPressStorageDetector.delete_comment_meta($comment_id, "akismet_delayed_moderation_email") - {'email', 'comment_meta'}
	WordPressStorageDetector.delete_comment_meta($commentmeta->comment_id, $commentmeta->meta_key) - {'comment_meta'}
	WordPressRetrievalDetector.get_comment_meta($comment->comment_ID, "akismet_user", true) - {'comment_meta'}
	WordPressStorageDetector.add_comment_meta($comment_id, "akismet_rechecking", true) - {'comment_meta'}
	WordPressStorageDetector.delete_comment_meta($comment_id, "akismet_delayed_moderation_email") - {'email', 'comment_meta'}
	WordPressRetrievalDetector.get_comment_meta($comment_id, "akismet_delayed_moderation_email", true) - {'email', 'comment_meta'}
	WordPressStorageDetector.add_comment_meta($comment_id, "akismet_history", $event, false) - {'comment_meta'}
	WordPressStorageDetector.delete_comment_meta($id, "akismet_delayed_moderation_email") - {'email', 'comment_meta'}
	WordPressRetrievalDetector.get_comment_meta($comment_id, "akismet_history", false) - {'comment_meta'}
	WordPressStorageDetector.delete_comment_meta($comment_id, "akismet_delayed_moderation_email") - {'email', 'comment_meta'}
	WordPressRetrievalDetector.get_comment_meta($comment_id, "akismet_as_submitted", true) - {'comment_meta'}
	WordPressStorageDetector.delete_comment_meta($comment_id, "akismet_rechecking") - {'comment_meta'}
	DeletionDetector.delete_comment_meta($comment_id, "akismet_delayed_moderation_email") - {'email', 'comment_meta'}
	DeletionDetector.delete_comment_meta($comment->comment_ID, "akismet_as_submitted") - {'comment_meta'}
	WordPressRetrievalDetector.get_comment_meta($comment->comment_ID, "akismet_user_result", true) - {'comment_meta'}
	WordPressStorageDetector.delete_comment_meta($id, "akismet_error") - {'comment_meta'}
	DeletionDetector.delete_comment_meta($id, "akismet_delayed_moderation_email") - {'email', 'comment_meta'}
	WordPressStorageDetector.delete_comment_meta($comment_id, "akismet_rechecking") - {'comment_meta'}
	WordPressRetrievalDetector.get_comment_meta($comment->comment_ID, "akismet_as_submitted", true) - {'comment_meta'}
	DeletionDetector.delete_comment_meta($commentmeta->comment_id, $commentmeta->meta_key) - {'comment_meta'}
	WordPressStorageDetector.delete_comment_meta($comment->comment_ID, "akismet_as_submitted") - {'comment_meta'}
	WordPressStorageDetector.delete_comment_meta($id, "akismet_delayed_moderation_email") - {'email', 'comment_meta'}
	WordPressRetrievalDetector.get_comment_meta($comment->comment_ID, "akismet_error", true) - {'comment_meta'}
	DeletionDetector.delete_comment_meta($id, "akismet_error") - {'comment_meta'}
email
	PropertyDetector.(unknown) - {'email'}
	DeletionDetector.delete_comment_meta($comment_id, "akismet_delayed_moderation_email") - {'email', 'comment_meta'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email', 'address'}
	DeletionDetector.delete_comment_meta($comment_id, "akismet_delayed_moderation_email") - {'email', 'comment_meta'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	DeletionDetector.delete_comment_meta($id, "akismet_delayed_moderation_email") - {'email', 'comment_meta'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	WordPressStorageDetector.delete_comment_meta($comment_id, "akismet_delayed_moderation_email") - {'email', 'comment_meta'}
	PropertyDetector.(unknown) - {'email'}
	WordPressStorageDetector.delete_comment_meta($comment_id, "akismet_delayed_moderation_email") - {'email', 'comment_meta'}
	PropertyDetector.(unknown) - {'email'}
	WordPressRetrievalDetector.get_comment_meta($comment_id, "akismet_delayed_moderation_email", true) - {'email', 'comment_meta'}
	VariableDetector.(unknown) - {'email'}
	WordPressStorageDetector.delete_comment_meta($id, "akismet_delayed_moderation_email") - {'email', 'comment_meta'}
	VariableDetector.(unknown) - {'email', 'address'}
	WordPressStorageDetector.delete_comment_meta($comment_id, "akismet_delayed_moderation_email") - {'email', 'comment_meta'}
	DeletionDetector.delete_comment_meta($comment_id, "akismet_delayed_moderation_email") - {'email', 'comment_meta'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	DeletionDetector.delete_comment_meta($id, "akismet_delayed_moderation_email") - {'email', 'comment_meta'}
	WordPressStorageDetector.delete_comment_meta($id, "akismet_delayed_moderation_email") - {'email', 'comment_meta'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
none
	WordPressRetrievalDetector.get_comment($comment_id) - set()
	WordPressRetrievalDetector.get_comment($comment_id, ARRAY_A) - set()
	WordPressRetrievalDetector.wp_update_comment($comment) - set()
	WordPressRetrievalDetector.get_comment($comment_id) - set()
	WordPressRetrievalDetector.get_comment($comment_id, ARRAY_A) - set()
	WordPressRetrievalDetector.wp_update_comment($comment) - set()
	WordPressRetrievalDetector.get_comment($comment_id) - set()
	WordPressRetrievalDetector.get_comment($comment_id) - set()
option
	WordPressRetrievalDetector.get_option("home") - {'option'}
	WordPressRetrievalDetector.get_option("akismet_spam_count") - {'option'}
	WordPressRetrievalDetector.get_option("home") - {'option'}
	DeletionDetector.delete_option("akismet_alert_code") - {'option'}
	WordPressRetrievalDetector.get_option("akismet_alert_upgrade_url") - {'option'}
	WordPressRetrievalDetector.get_option("akismet_alert_code") - {'option'}
	WordPressStorageDetector.delete_option($option_name) - {'option'}
	WordPressStorageDetector.delete_option("akismet_alert_msg") - {'option'}
	DeletionDetector.delete_option("akismet_alert_msg") - {'option'}
	WordPressStorageDetector.update_option($setting_key, $setting_value"1""0") - {'option'}
	WordPressRetrievalDetector.get_option("akismet_alert_msg") - {'option'}
	WordPressRetrievalDetector.get_option("akismet_alert_upgrade_plan") - {'option'}
	DeletionDetector.delete_option("Activated_Akismet") - {'option'}
	WordPressRetrievalDetector.get_option("home") - {'option'}
	WordPressStorageDetector.delete_option("akismet_alert_code") - {'option'}
	WordPressStorageDetector.update_option($option_name, $value) - {'option'}
	WordPressRetrievalDetector.get_option("home") - {'option'}
	WordPressRetrievalDetector.get_option("akismet_alert_code") - {'option'}
	DeletionDetector.delete_option("akismet_alert_code") - {'option'}
	WordPressStorageDetector.delete_option("wordpress_api_key") - {'option'}
	DeletionDetector.delete_option("wordpress_api_key") - {'option'}
	WordPressRetrievalDetector.get_option("akismet_strictness") - {'option'}
	WordPressRetrievalDetector.get_option("home") - {'option'}
	WordPressRetrievalDetector.get_option("home") - {'option'}
	WordPressRetrievalDetector.get_option("wordpress_api_key") - {'option'}
	WordPressRetrievalDetector.get_option("akismet_connectivity_time") - {'option'}
	WordPressRetrievalDetector.get_option("akismet_spam_count") - {'option'}
	WordPressStorageDetector.update_option("akismet_spam_count", get_option("akismet_spam_count") + $incr) - {'option'}
	WordPressRetrievalDetector.get_option("akismet_alert_code") - {'option'}
	WordPressRetrievalDetector.get_option("home") - {'option'}
	WordPressStorageDetector.delete_option("akismet_alert_code") - {'option'}
	WordPressStorageDetector.update_option("active_plugins", array_filter($plugins)) - {'option'}
	WordPressRetrievalDetector.get_option("akismet_strictness", "1") - {'option'}
	WordPressRetrievalDetector.get_option("home") - {'option'}
	WordPressRetrievalDetector.get_option("home") - {'option'}
	WordPressRetrievalDetector.get_option("akismet_comment_form_privacy_notice") - {'option'}
	WordPressRetrievalDetector.get_option("akismet_show_user_comments_approved") - {'option'}
	WordPressRetrievalDetector.get_option("home") - {'option'}
	WordPressStorageDetector.delete_option("akismet_alert_msg") - {'option'}
	WordPressRetrievalDetector.get_option("akismet_alert_code") - {'option'}
	WordPressRetrievalDetector.get_option("home") - {'option'}
	WordPressRetrievalDetector.get_option("blog_charset") - {'option'}
	WordPressRetrievalDetector.get_option("akismet_comment_form_privacy_notice") - {'option'}
	WordPressRetrievalDetector.get_option("home") - {'option'}
	WordPressRetrievalDetector.get_option("akismet_available_servers") - {'option'}
	WordPressStorageDetector.delete_option("akismet_ssl_disabled") - {'option'}
	DeletionDetector.delete_option("wordpress_api_key") - {'option'}
	WordPressRetrievalDetector.get_option("akismet_alert_msg") - {'option'}
	WordPressRetrievalDetector.get_option("blog_charset") - {'option'}
	WordPressStorageDetector.update_option("akismet_ssl_disabled", time()) - {'option'}
	WordPressRetrievalDetector.get_option("home") - {'option'}
	WordPressRetrievalDetector.get_option("akismet_alert_code") - {'option'}
	WordPressRetrievalDetector.get_option("akismet_discard_month") - {'option'}
	WordPressRetrievalDetector.get_option("Activated_Akismet") - {'option'}
	WordPressRetrievalDetector.get_option("blog_charset") - {'option'}
	WordPressRetrievalDetector.get_option("akismet_spam_count") - {'option'}
	WordPressRetrievalDetector.get_option("blog_charset") - {'option'}
	WordPressRetrievalDetector.get_option("akismet_alert_usage_limit") - {'option'}
	WordPressStorageDetector.delete_option("wordpress_api_key") - {'option'}
	DeletionDetector.delete_option("akismet_available_servers") - {'option'}
	DeletionDetector.delete_option($option_name) - {'option'}
	WordPressRetrievalDetector.get_option("akismet_alert_msg") - {'option'}
	WordPressRetrievalDetector.get_option("akismet_comment_nonce") - {'option'}
	WordPressStorageDetector.add_option("akismet_strictness", get_option("akismet_discard_month") === "false""0""1") - {'option'}
	WordPressRetrievalDetector.get_option("akismet_show_user_comments_approved", "1") - {'option'}
	WordPressStorageDetector.update_option("akismet_connectivity_time", time()) - {'option'}
	WordPressStorageDetector.delete_option("Activated_Akismet") - {'option'}
	WordPressStorageDetector.update_option("akismet_spam_count", $stat_totals["all"]->spam) - {'option'}
	WordPressStorageDetector.delete_option("akismet_available_servers") - {'option'}
	WordPressRetrievalDetector.get_option("akismet_alert_api_calls") - {'option'}
	WordPressRetrievalDetector.get_option("akismet_alert_code") - {'option'}
	WordPressRetrievalDetector.get_option("akismet_strictness") - {'option'}
	WordPressRetrievalDetector.get_option("akismet_ssl_disabled") - {'option'}
	WordPressRetrievalDetector.get_option("akismet_alert_upgrade_type") - {'option'}
	WordPressRetrievalDetector.get_option("akismet_alert_code") - {'option'}
	WordPressRetrievalDetector.get_option("blog_charset") - {'option'}
	WordPressStorageDetector.delete_option("wordpress_api_key") - {'option'}
	WordPressRetrievalDetector.get_option("active_plugins") - {'option'}
	WordPressRetrievalDetector.get_option("home") - {'option'}
	WordPressRetrievalDetector.get_option("wordpress_api_key") - {'option'}
	WordPressStorageDetector.add_option("Activated_Akismet", true) - {'option'}
	WordPressRetrievalDetector.get_option("akismet_comment_form_privacy_notice") - {'option'}
	WordPressRetrievalDetector.get_option("akismet_show_user_comments_approved") - {'option'}
	WordPressStorageDetector.update_option("akismet_comment_form_privacy_notice", $state) - {'option'}
	WordPressRetrievalDetector.get_option("akismet_spam_count") - {'option'}
	WordPressRetrievalDetector.get_option("akismet_alert_code") - {'option'}
	WordPressStorageDetector.update_option("wordpress_api_key", $new_api_key) - {'option'}
	WordPressRetrievalDetector.get_option("akismet_ssl_disabled") - {'option'}
	WordPressStorageDetector.update_option("wordpress_api_key", $api_key) - {'option'}
	WordPressRetrievalDetector.get_option("akismet_spam_count") - {'option'}
	WordPressRetrievalDetector.get_option("home") - {'option'}
	DeletionDetector.delete_option("akismet_alert_msg") - {'option'}
	WordPressRetrievalDetector.get_option("akismet_alert_code") - {'option'}
	WordPressRetrievalDetector.get_option("home") - {'option'}
	WordPressRetrievalDetector.get_option("akismet_comment_form_privacy_notice", "hide") - {'option'}
	DeletionDetector.delete_option("akismet_ssl_disabled") - {'option'}
	WordPressRetrievalDetector.get_option($option_name) - {'option'}
	WordPressRetrievalDetector.get_option("akismet_comment_nonce") - {'option'}
	WordPressStorageDetector.update_option($option, isset($_POST[$option]) && $_POST[$option] == 1"1""0") - {'option'}
	WordPressRetrievalDetector.get_option("akismet_strictness") - {'option'}
	WordPressStorageDetector.update_option("akismet_spam_count", get_option("akismet_spam_count") + $incr) - {'option'}
	DeletionDetector.delete_option("wordpress_api_key") - {'option'}
	WordPressRetrievalDetector.get_option("akismet_strictness") - {'option'}
	WordPressStorageDetector.update_option("akismet_available_servers", $servers) - {'option'}
post
	WordPressRetrievalDetector.get_post($comment->comment_post_ID) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($comment["comment_post_ID"]) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($comment->comment_post_ID) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($post_id) - {'post', 'post_meta', 'wp_post'}
post_meta
	WordPressRetrievalDetector.get_post($comment->comment_post_ID) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($comment["comment_post_ID"]) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($comment->comment_post_ID) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($post_id) - {'post', 'post_meta', 'wp_post'}
remote
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
user
	WP_UserDetector.WP_User($user_id) - {'user_meta', 'user'}
user_meta
	WP_UserDetector.WP_User($user_id) - {'user_meta', 'user'}
wp_post
	WordPressRetrievalDetector.get_post($comment->comment_post_ID) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($comment["comment_post_ID"]) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($comment->comment_post_ID) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($post_id) - {'post', 'post_meta', 'wp_post'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:19.716512.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 1922 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.785704.

1000 STORE_REACHES edges created
1922 STORE_REACHES edges created
1922 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 174 nodes as PERSONAL
In total, tainted 174 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
In total, tainted 0 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:04.018894.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:01:36.682035!
DELETION call to delete_comment_meta($comment->comment_ID, "akismet_as_submitted") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_option("wordpress_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("Activated_Akismet") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("wordpress_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("wordpress_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("akismet_alert_code") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("akismet_alert_msg") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("akismet_alert_code") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("akismet_alert_msg") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("akismet_ssl_disabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option($option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_comment_meta($comment_id, "akismet_as_submitted") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_comment_meta($commentmeta->comment_id, $commentmeta->meta_key) alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_comment_meta($id, "akismet_rechecking") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_comment_meta($id, "akismet_error") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_comment_meta($id, "akismet_delayed_moderation_email") alters data types {'email', 'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_comment_meta($id, "akismet_error") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_comment_meta($id, "akismet_delayed_moderation_email") alters data types {'email', 'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_option("akismet_available_servers") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_comment_meta($comment_id, "akismet_error") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_comment_meta($comment_id, "akismet_delayed_moderation_email") alters data types {'email', 'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_comment_meta($comment_id, "akismet_error") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_comment_meta($comment_id, "akismet_delayed_moderation_email") alters data types {'email', 'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_comment_meta($comment_id, "akismet_delayed_moderation_email") alters data types {'email', 'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_comment_meta($comment_id, "akismet_rechecking") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_comment_meta($comment_id, "akismet_rechecking") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).,None,None
object property '$comment->comment_author_email' of personal types {'email'} is found.,,None
object property '$comment->comment_author_email' of personal types {'email'} is found.,,None
object property '$comment->comment_author_email' of personal types {'email'} is found.,,None
object property '$comment->comment_author_email' of personal types {'email'} is found.,,None
object property '$akismet_user->user_email' of personal types {'email'} is found.,,None
object property '$akismet_user->user_email' of personal types {'email'} is found.,,None
object property '$akismet_user->user_email' of personal types {'email'} is found.,,None
object property '$akismet_user->user_email' of personal types {'email'} is found.,,None
object property '$akismet_user->user_email' of personal types {'email'} is found.,,None
object property '$akismet_user->user_email' of personal types {'email'} is found.,,None
object property '$akismet_user->user_email' of personal types {'email'} is found.,,None
object property '$akismet_user->user_email' of personal types {'email'} is found.,,None
variable '$email_address' of personal types {'email', 'address'} is found.,,None
variable '$email_address' of personal types {'email', 'address'} is found.,,None
variable '$emails' of personal types {'email'} is found.,,None
variable '$emails' of personal types {'email'} is found.,,None
variable '$comment_author_email' of personal types {'email'} is found.,,None
variable '$comment_author_email' of personal types {'email'} is found.,,None
variable '$comment_author_email' of personal types {'email'} is found.,,None
WP_User object is created.,,None
API call to wp_remote_get("https://rest.akismet.com/1.1/test"). Passed arguments: 0: $url (string). Returns (array|WP_Error).,https,['https://rest.akismet.com/1.1/test']
API call to wp_remote_get("http://rest.akismet.com/1.1/test"). Passed arguments: 0: $url (string). Returns (array|WP_Error).,,['http://rest.akismet.com/1.1/test']
API call to wp_remote_post($akismet_url, $http_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_post($akismet_url, $http_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_post($http_akismet_url, $http_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
RETRIEVAL call to get_option("akismet_discard_month") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("akismet_alert_code") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("akismet_alert_code") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("akismet_alert_code") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_comment_meta($comment->comment_ID, "akismet_as_submitted", true) alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("akismet_spam_count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("akismet_spam_count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_comment($comment_id, ARRAY_A). Passed arguments: 1: $output (string), 0: $comment (WP_Comment|string|int). Returns (WP_Comment|array|null).,None,None
RETRIEVAL call to wp_update_comment($comment). Passed arguments: 0: $commentarr (array). Returns (int|false|WP_Error).,None,None
RETRIEVAL call to get_comment($comment_id, ARRAY_A). Passed arguments: 1: $output (string), 0: $comment (WP_Comment|string|int). Returns (WP_Comment|array|null).,None,None
RETRIEVAL call to wp_update_comment($comment). Passed arguments: 0: $commentarr (array). Returns (int|false|WP_Error).,None,None
RETRIEVAL call to get_comment_meta($comment->comment_ID, "akismet_result", true) alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_comment_meta($comment->comment_ID, "akismet_error", true) alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_comment_meta($comment->comment_ID, "akismet_user_result", true) alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_comment_meta($comment->comment_ID, "akismet_user", true) alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("akismet_show_user_comments_approved") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("Activated_Akismet") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("akismet_available_servers") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("akismet_connectivity_time") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("akismet_alert_code") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("akismet_alert_msg") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("akismet_alert_code") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("akismet_alert_msg") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("akismet_alert_api_calls") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("akismet_alert_usage_limit") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("akismet_alert_upgrade_plan") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("akismet_alert_upgrade_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("akismet_alert_upgrade_type") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("akismet_strictness") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("akismet_strictness", "1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("akismet_show_user_comments_approved", "1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("akismet_alert_code") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("akismet_alert_msg") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("akismet_spam_count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("akismet_comment_nonce") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("akismet_strictness") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("akismet_spam_count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_comment($comment_id). Passed arguments: 0: $comment (WP_Comment|string|int). Returns (WP_Comment|array|null).,None,None
RETRIEVAL call to get_option("blog_charset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("akismet_ssl_disabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($post_id) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("akismet_comment_form_privacy_notice", "hide") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("blog_charset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("akismet_comment_nonce") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($comment["comment_post_ID"]) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("akismet_spam_count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_comment($comment_id). Passed arguments: 0: $comment (WP_Comment|string|int). Returns (WP_Comment|array|null).,None,None
RETRIEVAL call to get_comment_meta($comment_id, "akismet_history", false) alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("blog_charset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_comment_meta($comment->comment_ID, "akismet_rechecking") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wordpress_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_comment_meta($comment_id, "akismet_as_submitted", true) alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("blog_charset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($comment->comment_post_ID) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_comment_meta($comment_id, "akismet_as_submitted", true) alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("blog_charset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($comment->comment_post_ID) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("akismet_alert_code") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("akismet_alert_code") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_comment($comment_id). Passed arguments: 0: $comment (WP_Comment|string|int). Returns (WP_Comment|array|null).,None,None
RETRIEVAL call to get_comment($comment_id). Passed arguments: 0: $comment (WP_Comment|string|int). Returns (WP_Comment|array|null).,None,None
RETRIEVAL call to get_comment_meta($comment_id, "akismet_delayed_moderation_email", true) alters data types {'email', 'comment_meta'}. Passed arguments: 0: $comment_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("akismet_alert_code") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("akismet_show_user_comments_approved") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("akismet_strictness") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("akismet_strictness") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("akismet_comment_form_privacy_notice") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("akismet_comment_form_privacy_notice") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("akismet_comment_form_privacy_notice") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wordpress_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("akismet_ssl_disabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
STORAGE call to add_option("akismet_strictness", get_option("akismet_discard_month") === "false""0""1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("akismet_spam_count", $stat_totals["all"]->spam) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("akismet_comment_form_privacy_notice", $state) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_comment_meta($comment->comment_ID, "akismet_as_submitted") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_option($option, isset($_POST[$option]) && $_POST[$option] == 1"1""0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("wordpress_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("wordpress_api_key", $api_key) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("Activated_Akismet") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("akismet_available_servers", $servers) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("akismet_connectivity_time", time()) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("wordpress_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("wordpress_api_key", $new_api_key) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("wordpress_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option($setting_key, $setting_value"1""0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("akismet_alert_code") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("akismet_alert_msg") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("akismet_alert_code") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("akismet_alert_msg") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("akismet_spam_count", get_option("akismet_spam_count") + $incr) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("akismet_ssl_disabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("akismet_ssl_disabled", time()) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option($option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option($option_name, $value) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("active_plugins", array_filter($plugins)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("Activated_Akismet", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("akismet_spam_count", get_option("akismet_spam_count") + $incr) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_comment_meta($comment_id, "akismet_as_submitted") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_comment_meta($commentmeta->comment_id, $commentmeta->meta_key) alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to add_comment_meta($comment_id, "akismet_history", $event, false) alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|bool).,None,None
STORAGE call to add_comment_meta($id, "akismet_rechecking", true) alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_comment_meta($id, "akismet_rechecking") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_comment_meta($id, "akismet_error") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_comment_meta($id, "akismet_delayed_moderation_email") alters data types {'email', 'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_comment_meta($id, "akismet_error") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_comment_meta($id, "akismet_delayed_moderation_email") alters data types {'email', 'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_option("akismet_available_servers") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_comment_meta($comment_id, "akismet_error") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_comment_meta($comment_id, "akismet_delayed_moderation_email") alters data types {'email', 'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to add_comment_meta($comment_id, "akismet_rechecking", true) alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_comment_meta($comment_id, "akismet_error") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_comment_meta($comment_id, "akismet_delayed_moderation_email") alters data types {'email', 'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_comment_meta($comment_id, "akismet_delayed_moderation_email") alters data types {'email', 'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_comment_meta($comment_id, "akismet_rechecking") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_comment_meta($comment_id, "akismet_rechecking") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] Storage check is NONE 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['encryption', 'third_party'] 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? True 

No findings
