Timeout in resolving values
Timeout in running neo4j query
Running Main.py on videowhisper-live-streaming-integration

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:08.713663.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:04.394024.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 4 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.377460.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 4 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:01.188308.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 8730 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:03.343539.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 299 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:02.287223.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.083337.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 2557 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:04:43.165076.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 42931
Added 31337 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 289534
Added 246603 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:17.690596.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/videowhisper-live-streaming-integration/bp.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/videowhisper-live-streaming-integration/template-channel.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/videowhisper-live-streaming-integration/videowhisper_streaming.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/videowhisper-live-streaming-integration/inc/iptv.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/videowhisper-live-streaming-integration/inc/options.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/videowhisper-live-streaming-integration/inc/requirements.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.842723.

4 PHP_REACHES edges created
4 REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
8730 PHP_REACHES edges created
299 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
14000 PHP_REACHES edges created
15000 PHP_REACHES edges created
16000 PHP_REACHES edges created
17000 PHP_REACHES edges created
18000 PHP_REACHES edges created
19000 PHP_REACHES edges created
20000 PHP_REACHES edges created
21000 PHP_REACHES edges created
22000 PHP_REACHES edges created
23000 PHP_REACHES edges created
24000 PHP_REACHES edges created
25000 PHP_REACHES edges created
26000 PHP_REACHES edges created
27000 PHP_REACHES edges created
28000 PHP_REACHES edges created
29000 PHP_REACHES edges created
30000 PHP_REACHES edges created
31000 PHP_REACHES edges created
32000 PHP_REACHES edges created
33000 PHP_REACHES edges created
33894 PHP_REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
14000 PHP_REACHES edges created
15000 PHP_REACHES edges created
16000 PHP_REACHES edges created
17000 PHP_REACHES edges created
18000 PHP_REACHES edges created
19000 PHP_REACHES edges created
20000 PHP_REACHES edges created
21000 PHP_REACHES edges created
22000 PHP_REACHES edges created
23000 PHP_REACHES edges created
24000 PHP_REACHES edges created
25000 PHP_REACHES edges created
26000 PHP_REACHES edges created
27000 PHP_REACHES edges created
28000 PHP_REACHES edges created
29000 PHP_REACHES edges created
30000 PHP_REACHES edges created
31000 PHP_REACHES edges created
32000 PHP_REACHES edges created
33000 PHP_REACHES edges created
34000 PHP_REACHES edges created
35000 PHP_REACHES edges created
36000 PHP_REACHES edges created
37000 PHP_REACHES edges created
38000 PHP_REACHES edges created
39000 PHP_REACHES edges created
40000 PHP_REACHES edges created
41000 PHP_REACHES edges created
42000 PHP_REACHES edges created
43000 PHP_REACHES edges created
44000 PHP_REACHES edges created
45000 PHP_REACHES edges created
46000 PHP_REACHES edges created
47000 PHP_REACHES edges created
48000 PHP_REACHES edges created
49000 PHP_REACHES edges created
50000 PHP_REACHES edges created
51000 PHP_REACHES edges created
52000 PHP_REACHES edges created
53000 PHP_REACHES edges created
54000 PHP_REACHES edges created
55000 PHP_REACHES edges created
56000 PHP_REACHES edges created
57000 PHP_REACHES edges created
58000 PHP_REACHES edges created
59000 PHP_REACHES edges created
60000 PHP_REACHES edges created
61000 PHP_REACHES edges created
62000 PHP_REACHES edges created
63000 PHP_REACHES edges created
64000 PHP_REACHES edges created
65000 PHP_REACHES edges created
66000 PHP_REACHES edges created
67000 PHP_REACHES edges created
68000 PHP_REACHES edges created
69000 PHP_REACHES edges created
70000 PHP_REACHES edges created
71000 PHP_REACHES edges created
72000 PHP_REACHES edges created
73000 PHP_REACHES edges created
74000 PHP_REACHES edges created
75000 PHP_REACHES edges created
76000 PHP_REACHES edges created
77000 PHP_REACHES edges created
78000 PHP_REACHES edges created
79000 PHP_REACHES edges created
80000 PHP_REACHES edges created
81000 PHP_REACHES edges created
82000 PHP_REACHES edges created
83000 PHP_REACHES edges created
84000 PHP_REACHES edges created
85000 PHP_REACHES edges created
86000 PHP_REACHES edges created
87000 PHP_REACHES edges created
88000 PHP_REACHES edges created
89000 PHP_REACHES edges created
90000 PHP_REACHES edges created
91000 PHP_REACHES edges created
92000 PHP_REACHES edges created
93000 PHP_REACHES edges created
94000 PHP_REACHES edges created
95000 PHP_REACHES edges created
96000 PHP_REACHES edges created
97000 PHP_REACHES edges created
98000 PHP_REACHES edges created
99000 PHP_REACHES edges created
100000 PHP_REACHES edges created
101000 PHP_REACHES edges created
102000 PHP_REACHES edges created
103000 PHP_REACHES edges created
104000 PHP_REACHES edges created
105000 PHP_REACHES edges created
106000 PHP_REACHES edges created
107000 PHP_REACHES edges created
108000 PHP_REACHES edges created
109000 PHP_REACHES edges created
110000 PHP_REACHES edges created
111000 PHP_REACHES edges created
112000 PHP_REACHES edges created
113000 PHP_REACHES edges created
114000 PHP_REACHES edges created
115000 PHP_REACHES edges created
116000 PHP_REACHES edges created
117000 PHP_REACHES edges created
118000 PHP_REACHES edges created
119000 PHP_REACHES edges created
120000 PHP_REACHES edges created
121000 PHP_REACHES edges created
122000 PHP_REACHES edges created
123000 PHP_REACHES edges created
124000 PHP_REACHES edges created
125000 PHP_REACHES edges created
126000 PHP_REACHES edges created
127000 PHP_REACHES edges created
128000 PHP_REACHES edges created
129000 PHP_REACHES edges created
130000 PHP_REACHES edges created
131000 PHP_REACHES edges created
132000 PHP_REACHES edges created
133000 PHP_REACHES edges created
134000 PHP_REACHES edges created
135000 PHP_REACHES edges created
136000 PHP_REACHES edges created
137000 PHP_REACHES edges created
138000 PHP_REACHES edges created
139000 PHP_REACHES edges created
140000 PHP_REACHES edges created
141000 PHP_REACHES edges created
142000 PHP_REACHES edges created
143000 PHP_REACHES edges created
144000 PHP_REACHES edges created
145000 PHP_REACHES edges created
146000 PHP_REACHES edges created
147000 PHP_REACHES edges created
148000 PHP_REACHES edges created
149000 PHP_REACHES edges created
150000 PHP_REACHES edges created
151000 PHP_REACHES edges created
152000 PHP_REACHES edges created
153000 PHP_REACHES edges created
154000 PHP_REACHES edges created
155000 PHP_REACHES edges created
156000 PHP_REACHES edges created
157000 PHP_REACHES edges created
158000 PHP_REACHES edges created
159000 PHP_REACHES edges created
160000 PHP_REACHES edges created
161000 PHP_REACHES edges created
162000 PHP_REACHES edges created
163000 PHP_REACHES edges created
164000 PHP_REACHES edges created
165000 PHP_REACHES edges created
166000 PHP_REACHES edges created
167000 PHP_REACHES edges created
168000 PHP_REACHES edges created
169000 PHP_REACHES edges created
170000 PHP_REACHES edges created
171000 PHP_REACHES edges created
172000 PHP_REACHES edges created
173000 PHP_REACHES edges created
174000 PHP_REACHES edges created
175000 PHP_REACHES edges created
176000 PHP_REACHES edges created
177000 PHP_REACHES edges created
178000 PHP_REACHES edges created
179000 PHP_REACHES edges created
180000 PHP_REACHES edges created
181000 PHP_REACHES edges created
182000 PHP_REACHES edges created
183000 PHP_REACHES edges created
184000 PHP_REACHES edges created
185000 PHP_REACHES edges created
186000 PHP_REACHES edges created
187000 PHP_REACHES edges created
188000 PHP_REACHES edges created
189000 PHP_REACHES edges created
190000 PHP_REACHES edges created
191000 PHP_REACHES edges created
192000 PHP_REACHES edges created
193000 PHP_REACHES edges created
194000 PHP_REACHES edges created
195000 PHP_REACHES edges created
196000 PHP_REACHES edges created
197000 PHP_REACHES edges created
198000 PHP_REACHES edges created
199000 PHP_REACHES edges created
200000 PHP_REACHES edges created
201000 PHP_REACHES edges created
202000 PHP_REACHES edges created
203000 PHP_REACHES edges created
204000 PHP_REACHES edges created
205000 PHP_REACHES edges created
206000 PHP_REACHES edges created
207000 PHP_REACHES edges created
208000 PHP_REACHES edges created
209000 PHP_REACHES edges created
210000 PHP_REACHES edges created
211000 PHP_REACHES edges created
212000 PHP_REACHES edges created
213000 PHP_REACHES edges created
214000 PHP_REACHES edges created
215000 PHP_REACHES edges created
216000 PHP_REACHES edges created
217000 PHP_REACHES edges created
218000 PHP_REACHES edges created
219000 PHP_REACHES edges created
220000 PHP_REACHES edges created
221000 PHP_REACHES edges created
222000 PHP_REACHES edges created
223000 PHP_REACHES edges created
224000 PHP_REACHES edges created
225000 PHP_REACHES edges created
226000 PHP_REACHES edges created
227000 PHP_REACHES edges created
228000 PHP_REACHES edges created
229000 PHP_REACHES edges created
230000 PHP_REACHES edges created
231000 PHP_REACHES edges created
232000 PHP_REACHES edges created
233000 PHP_REACHES edges created
234000 PHP_REACHES edges created
235000 PHP_REACHES edges created
236000 PHP_REACHES edges created
237000 PHP_REACHES edges created
238000 PHP_REACHES edges created
239000 PHP_REACHES edges created
240000 PHP_REACHES edges created
241000 PHP_REACHES edges created
242000 PHP_REACHES edges created
243000 PHP_REACHES edges created
244000 PHP_REACHES edges created
245000 PHP_REACHES edges created
246000 PHP_REACHES edges created
246603 PHP_REACHES edges created
289534 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 14392 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:02.142379.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:24.944826.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 540 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:23.318653.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 882 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.268880.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:09.273767.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:09.222218.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.068966.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.031864.

1000 PHP_REACHES edges created
1422 PHP_REACHES edges created
1422 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 540 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.143687.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
91 SQL operations to process.
ps aux | grep '$search'
SQL command (ps aux | grep '$search') cannot be parsed correct.
kill -9 preg_split("/\\s+", $line)_1
SQL command (kill -9 preg_split("/\\s+", $line)_1) cannot be parsed correct.
SELECT * FROM $wpdbvw_sessions where session='$bp' and status='1'
SQL command (SELECT * FROM $wpdbvw_sessions where session='$bp' and status='1') cannot be parsed correct.
nice $options_ffmpegPath -y -i $roomRTMPserver/$stream" -c:v copy -c:a copy "$options_streamsPath/$stream_time().mp4" >$options_streamsPath/$stream_time() &  echo $!;
SQL command (nice $options_ffmpegPath -y -i $roomRTMPserver/$stream" -c:v copy -c:a copy "$options_streamsPath/$stream_time().mp4" >$options_streamsPath/$stream_time() & echo $!;) cannot be parsed correct.
echo 'nice $options_ffmpegPath -y -i $roomRTMPserver/$stream" -c:v copy -c:a copy "$options_streamsPath/$stream_time().mp4" >$options_streamsPath/$stream_time() & ' >> $options_streamsPath/$stream_time()-cmd.txt
SQL command (echo 'nice $options_ffmpegPath -y -i $roomRTMPserver/$stream" -c:v copy -c:a copy "$options_streamsPath/$stream_time().mp4" >$options_streamsPath/$stream_time() & ' >> $options_streamsPath/$stream_time()-cmd.txt) cannot be parsed correct.
ps auxww | grep '$options_streamsPath/$stream'
SQL command (ps auxww | grep '$options_streamsPath/$stream') cannot be parsed correct.
kill -KILL preg_split("/\\s+", $line)_1
SQL command (kill -KILL preg_split("/\\s+", $line)_1) cannot be parsed correct.
echo 'date(DATE_RFC2822):: $options_ffmpegPath  -threads 1 -codec copy -bsf:v h264_mp4toannexb -bsf:a aac_adtstoasc -f flv $options_rtmp_server?urlencode($stream_hls)&urlencode($stream)&md5("vw" . $options["webKey"] . $userID . $postID)&1&get_post($postID)_post_author&videowhisper/get_post($postID)_post_title" -re -stream_loop -1 -i "get_post_meta($postID, "vw_ipCamera", true)" >$options_uploadsPath/get_post($postID)_post_title/iptvStart.log & ' >> $options_uploadsPath/get_post($postID)_post_title/iptvStart.log.cmd
SQL command (echo 'date(DATE_RFC2822):: $options_ffmpegPath -threads 1 -codec copy -bsf:v h264_mp4toannexb -bsf:a aac_adtstoasc -f flv $options_rtmp_server?urlencode($stream_hls)&urlencode($stream)&md5("vw" . $options["webKey"] . $userID . $postID)&1&get_post($postID)_post_author&videowhisper/get_post($postID)_post_title" -re -stream_loop -1 -i "get_post_meta($postID, "vw_ipCamera", true)" >$options_uploadsPath/get_post($postID)_post_title/iptvStart.log & ' >> $options_uploadsPath/get_post($postID)_post_title/iptvStart.log.cmd) cannot be parsed correct.
$options_ffmpegPath  -threads 1 -codec copy -bsf:v h264_mp4toannexb -bsf:a aac_adtstoasc -f flv $options_rtmp_server?urlencode($stream_hls)&urlencode($stream)&md5("vw" . $options["webKey"] . $userID . $postID)&1&get_post($postID)_post_author&videowhisper/get_post($postID)_post_title" -re -stream_loop -1 -i "get_post_meta($postID, "vw_ipCamera", true)" >$options_uploadsPath/get_post($postID)_post_title/iptvStart.log & 
SQL command ($options_ffmpegPath -threads 1 -codec copy -bsf:v h264_mp4toannexb -bsf:a aac_adtstoasc -f flv $options_rtmp_server?urlencode($stream_hls)&urlencode($stream)&md5("vw" . $options["webKey"] . $userID . $postID)&1&get_post($postID)_post_author&videowhisper/get_post($postID)_post_title" -re -stream_loop -1 -i "get_post_meta($postID, "vw_ipCamera", true)" >$options_uploadsPath/get_post($postID)_post_title/iptvStart.log & ) cannot be parsed correct.
get_option("VWliveStreamingOptions")_ffmpegSnapshotTimeout get_option("VWliveStreamingOptions")_ffmpegPath -y -frames 1 get_option("VWliveStreamingOptions")_uploadsPath/sanitize_text_field($_GET["id"]).jpg"-rtsp_transport tcp -ss 00:00:02 -i sanitize_text_field($_GET["address"])" >get_option("VWliveStreamingOptions")_uploadsPath/sanitize_text_field($_GET["id"]).jpg.txt  
SQL command (get_option("VWliveStreamingOptions")_ffmpegSnapshotTimeout get_option("VWliveStreamingOptions")_ffmpegPath -y -frames 1 get_option("VWliveStreamingOptions")_uploadsPath/sanitize_text_field($_GET["id"]).jpg"-rtsp_transport tcp -ss 00:00:02 -i sanitize_text_field($_GET["address"])" >get_option("VWliveStreamingOptions")_uploadsPath/sanitize_text_field($_GET["id"]).jpg.txt ) cannot be parsed correct.
echo 'get_option("VWliveStreamingOptions")_ffmpegSnapshotTimeout get_option("VWliveStreamingOptions")_ffmpegPath -y -frames 1 get_option("VWliveStreamingOptions")_uploadsPath/sanitize_text_field($_GET["id"]).jpg"-rtsp_transport tcp -ss 00:00:02 -i sanitize_text_field($_GET["address"])" >get_option("VWliveStreamingOptions")_uploadsPath/sanitize_text_field($_GET["id"]).jpg.txt  ' >> get_option("VWliveStreamingOptions")_uploadsPath/sanitize_text_field($_GET["id"]).jpg-cmd.txt
SQL command (echo 'get_option("VWliveStreamingOptions")_ffmpegSnapshotTimeout get_option("VWliveStreamingOptions")_ffmpegPath -y -frames 1 get_option("VWliveStreamingOptions")_uploadsPath/sanitize_text_field($_GET["id"]).jpg"-rtsp_transport tcp -ss 00:00:02 -i sanitize_text_field($_GET["address"])" >get_option("VWliveStreamingOptions")_uploadsPath/sanitize_text_field($_GET["id"]).jpg.txt ' >> get_option("VWliveStreamingOptions")_uploadsPath/sanitize_text_field($_GET["id"]).jpg-cmd.txt) cannot be parsed correct.
get_option("VWliveStreamingOptions")_ffmpegSnapshotTimeout get_option("VWliveStreamingOptions")_ffmpegPath -y -frames 1 get_option("VWliveStreamingOptions")_uploadsPath/sanitize_text_field($_GET["id"]).jpg" -i sanitize_text_field($_GET["address"])" >get_option("VWliveStreamingOptions")_uploadsPath/sanitize_text_field($_GET["id"]).jpg.txt  
SQL command (get_option("VWliveStreamingOptions")_ffmpegSnapshotTimeout get_option("VWliveStreamingOptions")_ffmpegPath -y -frames 1 get_option("VWliveStreamingOptions")_uploadsPath/sanitize_text_field($_GET["id"]).jpg" -i sanitize_text_field($_GET["address"])" >get_option("VWliveStreamingOptions")_uploadsPath/sanitize_text_field($_GET["id"]).jpg.txt ) cannot be parsed correct.
echo 'get_option("VWliveStreamingOptions")_ffmpegSnapshotTimeout get_option("VWliveStreamingOptions")_ffmpegPath -y -frames 1 get_option("VWliveStreamingOptions")_uploadsPath/sanitize_text_field($_GET["id"]).jpg" -i sanitize_text_field($_GET["address"])" >get_option("VWliveStreamingOptions")_uploadsPath/sanitize_text_field($_GET["id"]).jpg.txt  ' >> get_option("VWliveStreamingOptions")_uploadsPath/sanitize_text_field($_GET["id"]).jpg-cmd.txt
SQL command (echo 'get_option("VWliveStreamingOptions")_ffmpegSnapshotTimeout get_option("VWliveStreamingOptions")_ffmpegPath -y -frames 1 get_option("VWliveStreamingOptions")_uploadsPath/sanitize_text_field($_GET["id"]).jpg" -i sanitize_text_field($_GET["address"])" >get_option("VWliveStreamingOptions")_uploadsPath/sanitize_text_field($_GET["id"]).jpg.txt ' >> get_option("VWliveStreamingOptions")_uploadsPath/sanitize_text_field($_GET["id"]).jpg-cmd.txt) cannot be parsed correct.
SELECT * FROM $wpdbvw_lsrooms where name='sanitize_file_name($_GET["label"])'
SQL command (SELECT * FROM $wpdbvw_lsrooms where name='sanitize_file_name($_GET["label"])') cannot be parsed correct.
exec
SQL command (exec) cannot be parsed correct.
echo EXEC
SQL command (echo EXEC) cannot be parsed correct.
whoami
SQL command (whoami) cannot be parsed correct.
$options_ffmpegPath -version 2>&1
SQL command ($options_ffmpegPath -version 2>&1) cannot be parsed correct.
$options_ffmpegPath -codecs 2>&1
SQL command ($options_ffmpegPath -codecs 2>&1) cannot be parsed correct.
$options_ffmpegPath -protocols 2>&1
SQL command ($options_ffmpegPath -protocols 2>&1) cannot be parsed correct.
$options_ffmpegPath -y -i 'plugin_dir_path(dirname())screenshot-5.png' -vf scale=320:-1 '$options_uploadsPath/ffmpeg-test.png' 2>&1
SQL command ($options_ffmpegPath -y -i 'plugin_dir_path(dirname())screenshot-5.png' -vf scale=320:-1 '$options_uploadsPath/ffmpeg-test.png' 2>&1) cannot be parsed correct.
$options_ffmpegPath -version
SQL command ($options_ffmpegPath -version) cannot be parsed correct.
$options_ffmpegPath -codecs
SQL command ($options_ffmpegPath -codecs) cannot be parsed correct.
ps aux | grep 'ffmpeg'
SQL command (ps aux | grep 'ffmpeg') cannot be parsed correct.
kill -KILL preg_split("/\\s+", $line)_1
SQL command (kill -KILL preg_split("/\\s+", $line)_1) cannot be parsed correct.
DROP TABLE IF EXISTS `$wpdbvw_sessions`;
		CREATE TABLE `$wpdbvw_sessions` (
		  `id` int(11) NOT NULL auto_increment,
		  `session` varchar(64) NOT NULL,
		  `username` varchar(64) NOT NULL,
		  `uid` int(11) NOT NULL,
		  `room` varchar(64) NOT NULL,
		  `message` text NOT NULL,
		  `sdate` int(11) NOT NULL,
		  `edate` int(11) NOT NULL,
		  `status` tinyint(4) NOT NULL,
		  `type` tinyint(4) NOT NULL,
		  PRIMARY KEY  (`id`),
		  KEY `status` (`status`),
		  KEY `type` (`type`),
		  KEY `uid` (`uid`),
		  KEY `room` (`room`)
		) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='Video Whisper: Broadcaster Sessions - 2009@videowhisper.com' AUTO_INCREMENT=1 ;

		DROP TABLE IF EXISTS `$wpdbvw_lwsessions`;
		CREATE TABLE `$wpdbvw_lwsessions` (
		  `id` int(11) NOT NULL auto_increment,
		  `session` varchar(64) NOT NULL,
		  `username` varchar(64) NOT NULL,
		  `uid` int(11) NOT NULL,
		  `room` varchar(64) NOT NULL,
		  `rid` int(11) NOT NULL,
		  `rsdate` int(11) NOT NULL,
		  `redate` int(11) NOT NULL,
		  `roptions` text NOT NULL,
		  `rmode` tinyint(4) NOT NULL,
		  `message` text NOT NULL,
		  `ip` text NOT NULL,
		  `sdate` int(11) NOT NULL,
		  `edate` int(11) NOT NULL,
		  `status` tinyint(4) NOT NULL,
		  `type` tinyint(4) NOT NULL,
		  PRIMARY KEY  (`id`),
		  KEY `status` (`status`),
		  KEY `type` (`type`),
		  KEY `rid` (`rid`),
		  KEY `uid` (`uid`),
		  KEY `rmode` (`rmode`),
		  KEY `rsdate` (`rsdate`),
		  KEY `redate` (`redate`),
		  KEY `sdate` (`sdate`),
		  KEY `edate` (`edate`),
		  KEY `room` (`room`)
		) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Video Whisper: Sessions - 2015@videowhisper.com' AUTO_INCREMENT=1 ;


		DROP TABLE IF EXISTS `$wpdbvw_lsrooms`;
		CREATE TABLE `$wpdbvw_lsrooms` (
		  `id` int(11) NOT NULL auto_increment,
		  `name` varchar(64) NOT NULL,
		  `owner` int(11) NOT NULL,
		  `sdate` int(11) NOT NULL,
		  `edate` int(11) NOT NULL,
		  `btime` int(11) NOT NULL,
		  `wtime` int(11) NOT NULL,
		  `rdate` int(11) NOT NULL,
		  `status` tinyint(4) NOT NULL,
		  `type` tinyint(4) NOT NULL,
		  `options` TEXT,
		  PRIMARY KEY  (`id`),
		  KEY `name` (`name`),
		  KEY `status` (`status`),
		  KEY `type` (`type`),
		  KEY `owner` (`owner`)
		) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='Video Whisper: Rooms - 2014@videowhisper.com' AUTO_INCREMENT=1 ;

		DROP TABLE IF EXISTS `$wpdbvw_vwls_chatlog`;
		CREATE TABLE `$wpdbvw_vwls_chatlog` (
		  `id` int(11) unsigned NOT NULL auto_increment,
		  `username` varchar(64) NOT NULL,
		  `room` varchar(64) NOT NULL,
		  `message` text NOT NULL,
		  `mdate` int(11) NOT NULL,
		  `type` tinyint(4) NOT NULL,
		  `meta` TEXT,
		  `user_id` int(11) unsigned NOT NULL,
		  PRIMARY KEY  (`id`),
		  KEY `room` (`room`),
		  KEY `mdate` (`mdate`),
		  KEY `type` (`type`),
		  KEY `user_id` (`user_id`)
		) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Video Whisper: Chat Logs - 2018@videowhisper.com' AUTO_INCREMENT=1;

		
SQL command (DROP TABLE IF EXISTS `$wpdbvw_sessions`; CREATE TABLE `$wpdbvw_sessions` ( `id` int(11) NOT NULL auto_increment, `session` varchar(64) NOT NULL, `username` varchar(64) NOT NULL, `uid` int(11) NOT NULL, `room` varchar(64) NOT NULL, `message` text NOT NULL, `sdate` int(11) NOT NULL, `edate` int(11) NOT NULL, `status` tinyint(4) NOT NULL, `type` tinyint(4) NOT NULL, PRIMARY KEY (`id`), KEY `status` (`status`), KEY `type` (`type`), KEY `uid` (`uid`), KEY `room` (`room`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='Video Whisper: Broadcaster Sessions - 2009@videowhisper.com' AUTO_INCREMENT=1 ; DROP TABLE IF EXISTS `$wpdbvw_lwsessions`; CREATE TABLE `$wpdbvw_lwsessions` ( `id` int(11) NOT NULL auto_increment, `session` varchar(64) NOT NULL, `username` varchar(64) NOT NULL, `uid` int(11) NOT NULL, `room` varchar(64) NOT NULL, `rid` int(11) NOT NULL, `rsdate` int(11) NOT NULL, `redate` int(11) NOT NULL, `roptions` text NOT NULL, `rmode` tinyint(4) NOT NULL, `message` text NOT NULL, `ip` text NOT NULL, `sdate` int(11) NOT NULL, `edate` int(11) NOT NULL, `status` tinyint(4) NOT NULL, `type` tinyint(4) NOT NULL, PRIMARY KEY (`id`), KEY `status` (`status`), KEY `type` (`type`), KEY `rid` (`rid`), KEY `uid` (`uid`), KEY `rmode` (`rmode`), KEY `rsdate` (`rsdate`), KEY `redate` (`redate`), KEY `sdate` (`sdate`), KEY `edate` (`edate`), KEY `room` (`room`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Video Whisper: Sessions - 2015@videowhisper.com' AUTO_INCREMENT=1 ; DROP TABLE IF EXISTS `$wpdbvw_lsrooms`; CREATE TABLE `$wpdbvw_lsrooms` ( `id` int(11) NOT NULL auto_increment, `name` varchar(64) NOT NULL, `owner` int(11) NOT NULL, `sdate` int(11) NOT NULL, `edate` int(11) NOT NULL, `btime` int(11) NOT NULL, `wtime` int(11) NOT NULL, `rdate` int(11) NOT NULL, `status` tinyint(4) NOT NULL, `type` tinyint(4) NOT NULL, `options` TEXT, PRIMARY KEY (`id`), KEY `name` (`name`), KEY `status` (`status`), KEY `type` (`type`), KEY `owner` (`owner`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='Video Whisper: Rooms - 2014@videowhisper.com' AUTO_INCREMENT=1 ; DROP TABLE IF EXISTS `$wpdbvw_vwls_chatlog`; CREATE TABLE `$wpdbvw_vwls_chatlog` ( `id` int(11) unsigned NOT NULL auto_increment, `username` varchar(64) NOT NULL, `room` varchar(64) NOT NULL, `message` text NOT NULL, `mdate` int(11) NOT NULL, `type` tinyint(4) NOT NULL, `meta` TEXT, `user_id` int(11) unsigned NOT NULL, PRIMARY KEY (`id`), KEY `room` (`room`), KEY `mdate` (`mdate`), KEY `type` (`type`), KEY `user_id` (`user_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Video Whisper: Chat Logs - 2018@videowhisper.com' AUTO_INCREMENT=1; ) cannot be parsed correct.
SELECT * FROM $wpdbvw_lsrooms where name='sanitize_file_name($channel)'
SQL command (SELECT * FROM $wpdbvw_lsrooms where name='sanitize_file_name($channel)') cannot be parsed correct.
DELETE FROM $wpdbvw_lsrooms where name='sanitize_file_name($post->post_title)'
SQL command (DELETE FROM $wpdbvw_lsrooms where name='sanitize_file_name($post->post_title)') cannot be parsed correct.
SELECT * FROM $wpdbvw_lsrooms where name='$stream'
SQL command (SELECT * FROM $wpdbvw_lsrooms where name='$stream') cannot be parsed correct.
UPDATE `$wpdbvw_lsrooms` set type=1 where name='$stream'
SQL command (UPDATE `$wpdbvw_lsrooms` set type=1 where name='$stream') cannot be parsed correct.
ps aux | grep '/i_sanitize_file_name($stream) -i rtsp'
SQL command (ps aux | grep '/i_sanitize_file_name($stream) -i rtsp') cannot be parsed correct.
ps aux | grep '/sanitize_file_name($stream)_webrtc -i rtmp'
SQL command (ps aux | grep '/sanitize_file_name($stream)_webrtc -i rtmp') cannot be parsed correct.
$options_ffmpegPath $options_ffmpegTranscodeRTC -threads 1 -f rtsp get_option("VWliveStreamingOptions")_rtsp_server_publish/$streamQuery" -i "get_option("VWliveStreamingOptions")_rtmp_server/sanitize_file_name($stream)" >get_option("VWliveStreamingOptions")_uploadsPath/sanitize_file_name($stream)/transcode_rtmp-webrtc.log & 
SQL command ($options_ffmpegPath $options_ffmpegTranscodeRTC -threads 1 -f rtsp get_option("VWliveStreamingOptions")_rtsp_server_publish/$streamQuery" -i "get_option("VWliveStreamingOptions")_rtmp_server/sanitize_file_name($stream)" >get_option("VWliveStreamingOptions")_uploadsPath/sanitize_file_name($stream)/transcode_rtmp-webrtc.log & ) cannot be parsed correct.
echo '$options_ffmpegPath $options_ffmpegTranscodeRTC -threads 1 -f rtsp get_option("VWliveStreamingOptions")_rtsp_server_publish/$streamQuery" -i "get_option("VWliveStreamingOptions")_rtmp_server/sanitize_file_name($stream)" >get_option("VWliveStreamingOptions")_uploadsPath/sanitize_file_name($stream)/transcode_rtmp-webrtc.log & ' >> get_option("VWliveStreamingOptions")_uploadsPath/sanitize_file_name($stream)/transcode_rtmp-webrtc.log.cmd
SQL command (echo '$options_ffmpegPath $options_ffmpegTranscodeRTC -threads 1 -f rtsp get_option("VWliveStreamingOptions")_rtsp_server_publish/$streamQuery" -i "get_option("VWliveStreamingOptions")_rtmp_server/sanitize_file_name($stream)" >get_option("VWliveStreamingOptions")_uploadsPath/sanitize_file_name($stream)/transcode_rtmp-webrtc.log & ' >> get_option("VWliveStreamingOptions")_uploadsPath/sanitize_file_name($stream)/transcode_rtmp-webrtc.log.cmd) cannot be parsed correct.
ps aux | grep '/i_ -i rtmp'
SQL command (ps aux | grep '/i_ -i rtmp') cannot be parsed correct.
timeout -s KILL 3 get_option("VWliveStreamingOptions")_ffmpegPath -y -i get_option("VWliveStreamingOptions")_rtsp_server/sanitize_file_name($stream)" 2>&1
SQL command (timeout -s KILL 3 get_option("VWliveStreamingOptions")_ffmpegPath -y -i get_option("VWliveStreamingOptions")_rtsp_server/sanitize_file_name($stream)" 2>&1) cannot be parsed correct.
echo 'sanitize_file_name($stream)|i_sanitize_file_name($stream)|sanitize_file_name($stream)_webrtc|$transcodeEnabled|$detect|$videoCodec|trim($audioCodec, " ,.	
")' >> get_option("VWliveStreamingOptions")_uploadsPath/sanitize_file_name($stream)/streaminfo-webrtc.log
SQL command (echo 'sanitize_file_name($stream)|i_sanitize_file_name($stream)|sanitize_file_name($stream)_webrtc|$transcodeEnabled|$detect|$videoCodec|trim($audioCodec, " ,. ")' >> get_option("VWliveStreamingOptions")_uploadsPath/sanitize_file_name($stream)/streaminfo-webrtc.log) cannot be parsed correct.
echo addslashes($info)" >>get_option("VWliveStreamingOptions")_uploadsPath/sanitize_file_name($stream)/streaminfo-webrtc.log
SQL command (echo addslashes($info)" >>get_option("VWliveStreamingOptions")_uploadsPath/sanitize_file_name($stream)/streaminfo-webrtc.log) cannot be parsed correct.
$options_ffmpegPath $options_ffmpegTranscode -threads 1 -f flv get_option("VWliveStreamingOptions")_rtmp_server/i_sanitize_file_name($stream)" -i "get_option("VWliveStreamingOptions")_rtsp_server/sanitize_file_name($stream)" >get_option("VWliveStreamingOptions")_uploadsPath/sanitize_file_name($stream)/transcode_webrtc-hls.log & 
SQL command ($options_ffmpegPath $options_ffmpegTranscode -threads 1 -f flv get_option("VWliveStreamingOptions")_rtmp_server/i_sanitize_file_name($stream)" -i "get_option("VWliveStreamingOptions")_rtsp_server/sanitize_file_name($stream)" >get_option("VWliveStreamingOptions")_uploadsPath/sanitize_file_name($stream)/transcode_webrtc-hls.log & ) cannot be parsed correct.
echo '$options_ffmpegPath $options_ffmpegTranscode -threads 1 -f flv get_option("VWliveStreamingOptions")_rtmp_server/i_sanitize_file_name($stream)" -i "get_option("VWliveStreamingOptions")_rtsp_server/sanitize_file_name($stream)" >get_option("VWliveStreamingOptions")_uploadsPath/sanitize_file_name($stream)/transcode_webrtc-hls.log & ' >> get_option("VWliveStreamingOptions")_uploadsPath/sanitize_file_name($stream)/transcode_webrtc-hls.log.cmd
SQL command (echo '$options_ffmpegPath $options_ffmpegTranscode -threads 1 -f flv get_option("VWliveStreamingOptions")_rtmp_server/i_sanitize_file_name($stream)" -i "get_option("VWliveStreamingOptions")_rtsp_server/sanitize_file_name($stream)" >get_option("VWliveStreamingOptions")_uploadsPath/sanitize_file_name($stream)/transcode_webrtc-hls.log & ' >> get_option("VWliveStreamingOptions")_uploadsPath/sanitize_file_name($stream)/transcode_webrtc-hls.log.cmd) cannot be parsed correct.
echo 'Stream incomplete. Will check again later... ' >> get_option("VWliveStreamingOptions")_uploadsPath/sanitize_file_name($stream)/transcode_webrtc-hls.log
SQL command (echo 'Stream incomplete. Will check again later... ' >> get_option("VWliveStreamingOptions")_uploadsPath/sanitize_file_name($stream)/transcode_webrtc-hls.log) cannot be parsed correct.
timeout -s KILL 3 get_option("VWliveStreamingOptions")_ffmpegPath -y -i get_option("VWliveStreamingOptions")_rtmp_server?urlencode("ffmpegInfo_" . $stream)&urlencode($stream)&md5("vw" . $options["webKey"] . intval($postID))&0&videowhisper/" 2>&1
SQL command (timeout -s KILL 3 get_option("VWliveStreamingOptions")_ffmpegPath -y -i get_option("VWliveStreamingOptions")_rtmp_server?urlencode("ffmpegInfo_" . $stream)&urlencode($stream)&md5("vw" . $options["webKey"] . intval($postID))&0&videowhisper/" 2>&1) cannot be parsed correct.
echo '|i_|get_post_meta($postID, "vw_transcode", true)|$required|$detect|$convert|$videoCodec|trim($audioCodec, " ,.	
")' >> get_option("VWliveStreamingOptions")_uploadsPath//streaminfo-rtmp.log
SQL command (echo '|i_|get_post_meta($postID, "vw_transcode", true)|$required|$detect|$convert|$videoCodec|trim($audioCodec, " ,. ")' >> get_option("VWliveStreamingOptions")_uploadsPath//streaminfo-rtmp.log) cannot be parsed correct.
echo addslashes($info)" >>get_option("VWliveStreamingOptions")_uploadsPath//streaminfo-rtmp.log
SQL command (echo addslashes($info)" >>get_option("VWliveStreamingOptions")_uploadsPath//streaminfo-rtmp.log) cannot be parsed correct.
echo 'timeout -s KILL 3 get_option("VWliveStreamingOptions")_ffmpegPath -y -i get_option("VWliveStreamingOptions")_rtmp_server?urlencode("ffmpegInfo_" . $stream)&urlencode($stream)&md5("vw" . $options["webKey"] . intval($postID))&0&videowhisper/" 2>&1' >> get_option("VWliveStreamingOptions")_uploadsPath//streaminfo-rtmp.log.cmd
SQL command (echo 'timeout -s KILL 3 get_option("VWliveStreamingOptions")_ffmpegPath -y -i get_option("VWliveStreamingOptions")_rtmp_server?urlencode("ffmpegInfo_" . $stream)&urlencode($stream)&md5("vw" . $options["webKey"] . intval($postID))&0&videowhisper/" 2>&1' >> get_option("VWliveStreamingOptions")_uploadsPath//streaminfo-rtmp.log.cmd) cannot be parsed correct.
echo 'date(DATE_RFC2822)|$convert|get_post_meta($postID, "vw_transcode", true)||i_|$wpdb->get_var("SELECT MAX(ID) FROM "$wpdb->posts" WHERE post_title = \'" . sanitize_file_name($stream) . "\' and post_type=\'" . $options["custom_post"] . "\' LIMIT 0,1")|1:: $options_ffmpegPath $options_ffmpegTranscode -threads 1 -f flv $options_rtmp_server?urlencode($stream_hls)&urlencode($stream)&md5("vw" . $options["webKey"] . intval($userID) . intval($postID))&1&intval($userID)&videowhisper/i_" -i "get_option("VWliveStreamingOptions")_rtmp_server/" >get_option("VWliveStreamingOptions")_uploadsPath//transcode-rtmp.log & ' >> get_option("VWliveStreamingOptions")_uploadsPath//transcode-rtmp.log.cmd
SQL command (echo 'date(DATE_RFC2822)|$convert|get_post_meta($postID, "vw_transcode", true)||i_|$wpdb->get_var("SELECT MAX(ID) FROM "$wpdb->posts" WHERE post_title = \'" . sanitize_file_name($stream) . "\' and post_type=\'" . $options["custom_post"] . "\' LIMIT 0,1")|1:: $options_ffmpegPath $options_ffmpegTranscode -threads 1 -f flv $options_rtmp_server?urlencode($stream_hls)&urlencode($stream)&md5("vw" . $options["webKey"] . intval($userID) . intval($postID))&1&intval($userID)&videowhisper/i_" -i "get_option("VWliveStreamingOptions")_rtmp_server/" >get_option("VWliveStreamingOptions")_uploadsPath//transcode-rtmp.log & ' >> get_option("VWliveStreamingOptions")_uploadsPath//transcode-rtmp.log.cmd) cannot be parsed correct.
$options_ffmpegPath $options_ffmpegTranscode -threads 1 -f flv $options_rtmp_server?urlencode($stream_hls)&urlencode($stream)&md5("vw" . $options["webKey"] . intval($userID) . intval($postID))&1&intval($userID)&videowhisper/i_" -i "get_option("VWliveStreamingOptions")_rtmp_server/" >get_option("VWliveStreamingOptions")_uploadsPath//transcode-rtmp.log & 
SQL command ($options_ffmpegPath $options_ffmpegTranscode -threads 1 -f flv $options_rtmp_server?urlencode($stream_hls)&urlencode($stream)&md5("vw" . $options["webKey"] . intval($userID) . intval($postID))&1&intval($userID)&videowhisper/i_" -i "get_option("VWliveStreamingOptions")_rtmp_server/" >get_option("VWliveStreamingOptions")_uploadsPath//transcode-rtmp.log & ) cannot be parsed correct.
echo 'Stream incomplete. Will check again later... ' >> get_option("VWliveStreamingOptions")_uploadsPath//transcode-rtmp.log
SQL command (echo 'Stream incomplete. Will check again later... ' >> get_option("VWliveStreamingOptions")_uploadsPath//transcode-rtmp.log) cannot be parsed correct.
INSERT INTO `$wpdbvw_vwls_chatlog` ( `username`, `room`, `message`, `mdate`, `type`, `meta`, `user_id`) VALUES ('', 'sanitize_file_name($_GET["room"])', '<I>preg_replace("/([^\\s]{12})(?=[^\\s])/", "$1" . "<wbr>", $message)</I>', time(), '2', 'serialize($meta)', '0')
SQL command (INSERT INTO `$wpdbvw_vwls_chatlog` ( `username`, `room`, `message`, `mdate`, `type`, `meta`, `user_id`) VALUES ('', 'sanitize_file_name($_GET["room"])', '<I>preg_replace("/([^\\s]{12})(?=[^\\s])/", "$1" . "<wbr>", $message)</I>', time(), '2', 'serialize($meta)', '0')) cannot be parsed correct.
INSERT INTO `$wpdbvw_vwls_chatlog` ( `username`, `room`, `message`, `mdate`, `type`, `user_id`) VALUES ('sanitize_text_field($_COOKIE["htmlchat_username"])', 'sanitize_file_name($_GET["room"])', 'preg_replace("/([^\\s]{12})(?=[^\\s])/", "$1" . "<wbr>", $message)', time(), '2', '0')
SQL command (INSERT INTO `$wpdbvw_vwls_chatlog` ( `username`, `room`, `message`, `mdate`, `type`, `user_id`) VALUES ('sanitize_text_field($_COOKIE["htmlchat_username"])', 'sanitize_file_name($_GET["room"])', 'preg_replace("/([^\\s]{12})(?=[^\\s])/", "$1" . "<wbr>", $message)', time(), '2', '0')) cannot be parsed correct.
UPDATE `$wpdbvw_lwsessions` SET status = 1 WHERE status = 0 AND edate < get_option("VWliveStreamingOptions")
SQL command (UPDATE `$wpdbvw_lwsessions` SET status = 1 WHERE status = 0 AND edate < get_option("VWliveStreamingOptions")) cannot be parsed correct.
SELECT * FROM `$wpdbvw_lwsessions` where room='sanitize_file_name($_GET["room"])' and status='0' AND type < 5 ORDER by sdate ASC
SQL command (SELECT * FROM `$wpdbvw_lwsessions` where room='sanitize_file_name($_GET["room"])' and status='0' AND type < 5 ORDER by sdate ASC) cannot be parsed correct.
SELECT * FROM `$wpdbvw_lwsessions` WHERE session='$username' AND status='0' AND room='sanitize_file_name($_GET["room"])' AND type='$type' AND rmode='$rmode' LIMIT 1
SQL command (SELECT * FROM `$wpdbvw_lwsessions` WHERE session='$username' AND status='0' AND room='sanitize_file_name($_GET["room"])' AND type='$type' AND rmode='$rmode' LIMIT 1) cannot be parsed correct.
INSERT INTO `$wpdbvw_lwsessions` ( `session`, `username`, `uid`, `room`, `rid`, `roptions`, `rsdate`, `redate`, `rmode`, `message`, `sdate`, `edate`, `status`, `type`, `ip`) VALUES ('$username', '$username', 'wp_get_current_user()_ID', '$room', '$wpdb->get_var($sql"SELECT ID FROM " . $wpdb->posts . " WHERE post_title = \'" . $room . "\' and post_type=\'" . $options["custom_post"] . "\' LIMIT 0,1")', '$roptions', '0', '$redate', '$rmode', '$m', 'time()', 'time()', 0, $type, '$clientIP')
SQL command (INSERT INTO `$wpdbvw_lwsessions` ( `session`, `username`, `uid`, `room`, `rid`, `roptions`, `rsdate`, `redate`, `rmode`, `message`, `sdate`, `edate`, `status`, `type`, `ip`) VALUES ('$username', '$username', 'wp_get_current_user()_ID', '$room', '$wpdb->get_var($sql"SELECT ID FROM " . $wpdb->posts . " WHERE post_title = \'" . $room . "\' and post_type=\'" . $options["custom_post"] . "\' LIMIT 0,1")', '$roptions', '0', '$redate', '$rmode', '$m', 'time()', 'time()', 0, $type, '$clientIP')) cannot be parsed correct.
SELECT * FROM `$wpdbvw_lwsessions` WHERE session='$username' AND status='0' AND room='sanitize_file_name($_GET["room"])' AND type='$type' AND rmode='$rmode' LIMIT 1
SQL command (SELECT * FROM `$wpdbvw_lwsessions` WHERE session='$username' AND status='0' AND room='sanitize_file_name($_GET["room"])' AND type='$type' AND rmode='$rmode' LIMIT 1) cannot be parsed correct.
UPDATE `$wpdbvw_lwsessions` set edate='time()', rsdate='$redate', redate='$redate', roptions = '$roptions' WHERE id='$wpdb->get_row($sqlS)_id' LIMIT 1
SQL command (UPDATE `$wpdbvw_lwsessions` set edate='time()', rsdate='$redate', redate='$redate', roptions = '$roptions' WHERE id='$wpdb->get_row($sqlS)_id' LIMIT 1) cannot be parsed correct.
SELECT * FROM $wpdbvw_lsrooms WHERE name='$wpdb->get_row($sqlS)_room' LIMIT 0,1
SQL command (SELECT * FROM $wpdbvw_lsrooms WHERE name='$wpdb->get_row($sqlS)_room' LIMIT 0,1) cannot be parsed correct.
UPDATE `$wpdbvw_lsrooms` set wtime = $wpdb->get_row($sqlC)_wtime where id = '$wpdb->get_row($sqlC)_id'
SQL command (UPDATE `$wpdbvw_lsrooms` set wtime = $wpdb->get_row($sqlC)_wtime where id = '$wpdb->get_row($sqlC)_id') cannot be parsed correct.
DELETE FROM `$wpdbvw_vwls_chatlog` WHERE mdate < $closeTime
SQL command (DELETE FROM `$wpdbvw_vwls_chatlog` WHERE mdate < $closeTime) cannot be parsed correct.
SELECT * FROM (SELECT * FROM `$wpdbvw_vwls_chatlog` WHERE room='sanitize_file_name($_GET["room"])' AND id > intval($_GET["lastID"]) AND mdate > $session ORDER BY mdate DESC LIMIT 0,20) items ORDER BY mdate ASC
SQL command (SELECT * FROM (SELECT * FROM `$wpdbvw_vwls_chatlog` WHERE room='sanitize_file_name($_GET["room"])' AND id > intval($_GET["lastID"]) AND mdate > $session ORDER BY mdate DESC LIMIT 0,20) items ORDER BY mdate ASC) cannot be parsed correct.
SELECT * FROM `$wpdbvw_lsrooms` WHERE status=1 ORDER BY edate DESC LIMIT get_option("VWliveStreamingOptions")_perPage, get_option("VWliveStreamingOptions")_perPage
SQL command (SELECT * FROM `$wpdbvw_lsrooms` WHERE status=1 ORDER BY edate DESC LIMIT get_option("VWliveStreamingOptions")_perPage, get_option("VWliveStreamingOptions")_perPage) cannot be parsed correct.
SELECT * FROM `$wpdbvw_sessions` where status='1'
SQL command (SELECT * FROM `$wpdbvw_sessions` where status='1') cannot be parsed correct.
SELECT count(id) as no FROM `$wpdbvw_lwsessions` where status='1' and room='$item'
SQL command (SELECT count(id) as no FROM `$wpdbvw_lwsessions` where status='1' and room='$item') cannot be parsed correct.
post_type
SQL command (post_type) cannot be parsed correct.
SELECT user_id FROM $wpdbmyCRED_log WHERE user_id=wp_get_current_user() AND ref = 'buy_content' AND ref_id = $wpdb->get_var("SELECT MAX(ID) FROM "$wpdb->posts" WHERE post_title = \'" . $channel . "\' and post_type=\'channel\' LIMIT 0,1") AND creds < 0
SQL command (SELECT user_id FROM $wpdbmyCRED_log WHERE user_id=wp_get_current_user() AND ref = 'buy_content' AND ref_id = $wpdb->get_var("SELECT MAX(ID) FROM "$wpdb->posts" WHERE post_title = \'" . $channel . "\' and post_type=\'channel\' LIMIT 0,1") AND creds < 0) cannot be parsed correct.
ps aux | grep 'ffmpeg'
SQL command (ps aux | grep 'ffmpeg') cannot be parsed correct.
kill -KILL preg_split("/\\s+", $line)_1
SQL command (kill -KILL preg_split("/\\s+", $line)_1) cannot be parsed correct.
SELECT * FROM `$wpdbvw_lsrooms` ORDER BY edate DESC LIMIT 0, 200
SQL command (SELECT * FROM `$wpdbvw_lsrooms` ORDER BY edate DESC LIMIT 0, 200) cannot be parsed correct.
SELECT * FROM `$wpdbvw_sessions` WHERE room = '$item' ORDER BY edate DESC LIMIT 0, 100
SQL command (SELECT * FROM `$wpdbvw_sessions` WHERE room = '$item' ORDER BY edate DESC LIMIT 0, 100) cannot be parsed correct.
UPDATE `$wpdbvw_lsrooms` set status='1' WHERE name ='$item'
SQL command (UPDATE `$wpdbvw_lsrooms` set status='1' WHERE name ='$item') cannot be parsed correct.
UPDATE `$wpdbvw_lsrooms` set status='0' WHERE name ='$item'
SQL command (UPDATE `$wpdbvw_lsrooms` set status='0' WHERE name ='$item') cannot be parsed correct.
DELETE FROM `$wpdbvw_lsrooms` WHERE name ='$item'
SQL command (DELETE FROM `$wpdbvw_lsrooms` WHERE name ='$item') cannot be parsed correct.
DELETE FROM `$wpdbvw_lsrooms` WHERE name = 'sanitize_file_name($_GET["ban"])'
SQL command (DELETE FROM `$wpdbvw_lsrooms` WHERE name = 'sanitize_file_name($_GET["ban"])') cannot be parsed correct.
SELECT * FROM $wpdbvw_lwsessions where session='get_userdata($userID)_session' and status='1'  ORDER BY edate DESC LIMIT 0,1
SQL command (SELECT * FROM $wpdbvw_lwsessions where session='get_userdata($userID)_session' and status='1' ORDER BY edate DESC LIMIT 0,1) cannot be parsed correct.
DELETE FROM `$wpdbvw_lwsessions` WHERE edate < time()
SQL command (DELETE FROM `$wpdbvw_lwsessions` WHERE edate < time()) cannot be parsed correct.
SELECT * FROM $wpdbvw_lwsessions where session='get_userdata($userID)_session' and status='1'  ORDER BY edate DESC LIMIT 0,1
SQL command (SELECT * FROM $wpdbvw_lwsessions where session='get_userdata($userID)_session' and status='1' ORDER BY edate DESC LIMIT 0,1) cannot be parsed correct.
UPDATE `$wpdbvw_sessions` set edate=time(), room='get_user_by("login", $u)_rooms', username='get_userdata($userID)_session' where id ='$wpdb->get_row($sqlS)_id'
SQL command (UPDATE `$wpdbvw_sessions` set edate=time(), room='get_user_by("login", $u)_rooms', username='get_userdata($userID)_session' where id ='$wpdb->get_row($sqlS)_id') cannot be parsed correct.
UPDATE `$wpdbvw_lsrooms` set status='2', edate='time()' where name ='sanitize_file_name($stream)'
SQL command (UPDATE `$wpdbvw_lsrooms` set status='2', edate='time()' where name ='sanitize_file_name($stream)') cannot be parsed correct.
get_option("VWliveStreamingOptions")_ffmpegSnapshotTimeout get_option("VWliveStreamingOptions")_ffmpegPath -y  -f image2 -vframes 1 get_option("VWliveStreamingOptions")_uploadsPath/sanitize_file_name($stream).jpg" -i "get_option("VWliveStreamingOptions")_rtsp_server/$streamQuery" >&get_option("VWliveStreamingOptions")_uploadsPath/sanitize_file_name($stream).jpg.txt get_option("VWliveStreamingOptions")_ffmpegSnapshotBackground
SQL command (get_option("VWliveStreamingOptions")_ffmpegSnapshotTimeout get_option("VWliveStreamingOptions")_ffmpegPath -y -f image2 -vframes 1 get_option("VWliveStreamingOptions")_uploadsPath/sanitize_file_name($stream).jpg" -i "get_option("VWliveStreamingOptions")_rtsp_server/$streamQuery" >&get_option("VWliveStreamingOptions")_uploadsPath/sanitize_file_name($stream).jpg.txt get_option("VWliveStreamingOptions")_ffmpegSnapshotBackground) cannot be parsed correct.
echo 'Command: get_option("VWliveStreamingOptions")_ffmpegSnapshotTimeout get_option("VWliveStreamingOptions")_ffmpegPath -y -frames 1 get_option("VWliveStreamingOptions")_uploadsPath/sanitize_file_name($stream).jpg"-rtsp_transport tcp  -i get_post_meta($postID, "vw_ipCamera", true)" >&get_option("VWliveStreamingOptions")_uploadsPath/sanitize_file_name($stream).jpg.txt  get_option("VWliveStreamingOptions")_ffmpegSnapshotBackground Return: $returnvalue Output[0]: $output_0'  >> get_option("VWliveStreamingOptions")_uploadsPath/sanitize_file_name($stream).jpg.txt.cmd
SQL command (echo 'Command: get_option("VWliveStreamingOptions")_ffmpegSnapshotTimeout get_option("VWliveStreamingOptions")_ffmpegPath -y -frames 1 get_option("VWliveStreamingOptions")_uploadsPath/sanitize_file_name($stream).jpg"-rtsp_transport tcp -i get_post_meta($postID, "vw_ipCamera", true)" >&get_option("VWliveStreamingOptions")_uploadsPath/sanitize_file_name($stream).jpg.txt get_option("VWliveStreamingOptions")_ffmpegSnapshotBackground Return: $returnvalue Output[0]: $output_0' >> get_option("VWliveStreamingOptions")_uploadsPath/sanitize_file_name($stream).jpg.txt.cmd) cannot be parsed correct.
SELECT * FROM `$wpdbvw_vwls_sessions` WHERE session='$current_user_$userfield' AND room='$room' AND status='1' LIMIT 1
SQL command (SELECT * FROM `$wpdbvw_vwls_sessions` WHERE session='$current_user_$userfield' AND room='$room' AND status='1' LIMIT 1) cannot be parsed correct.
UPDATE `$wpdbvw_lsrooms` set edate=time(), btime = intval($channel->btime) where id = '$wpdb->get_row($sqlC)_id'
SQL command (UPDATE `$wpdbvw_lsrooms` set edate=time(), btime = intval($channel->btime) where id = '$wpdb->get_row($sqlC)_id') cannot be parsed correct.
SELECT * FROM $wpdbvw_lsrooms WHERE name='$session_room' LIMIT 0,1
SQL command (SELECT * FROM $wpdbvw_lsrooms WHERE name='$session_room' LIMIT 0,1) cannot be parsed correct.
UPDATE `$wpdbvw_lsrooms` set wtime = intval($channel->wtime) where id = '$wpdb->get_row($sqlC)_id'
SQL command (UPDATE `$wpdbvw_lsrooms` set wtime = intval($channel->wtime) where id = '$wpdb->get_row($sqlC)_id') cannot be parsed correct.
SELECT * FROM $wpdbvw_lsrooms WHERE name='$stream' LIMIT 0,1
SQL command (SELECT * FROM $wpdbvw_lsrooms WHERE name='$stream' LIMIT 0,1) cannot be parsed correct.
UPDATE `$wpdbvw_lsrooms` set edate=time(), btime = $wpdb->get_row($sqlC)_btime where id = '$wpdb->get_row($sqlC)_id'
SQL command (UPDATE `$wpdbvw_lsrooms` set edate=time(), btime = $wpdb->get_row($sqlC)_btime where id = '$wpdb->get_row($sqlC)_id') cannot be parsed correct.
SELECT * FROM $wpdbvw_lsrooms WHERE name='$session_room' LIMIT 0,1
SQL command (SELECT * FROM $wpdbvw_lsrooms WHERE name='$session_room' LIMIT 0,1) cannot be parsed correct.
SELECT * FROM $wpdbvw_lsrooms WHERE name='$session_room' LIMIT 0,1
SQL command (SELECT * FROM $wpdbvw_lsrooms WHERE name='$session_room' LIMIT 0,1) cannot be parsed correct.
UPDATE `$wpdbvw_lsrooms` set wtime = $wpdb->get_row($sqlC)_wtime where id = '$wpdb->get_row($sqlC)_id'
SQL command (UPDATE `$wpdbvw_lsrooms` set wtime = $wpdb->get_row($sqlC)_wtime where id = '$wpdb->get_row($sqlC)_id') cannot be parsed correct.
SELECT * FROM $wpdbvw_lsrooms where name='sanitize_text_field($p[1])'
SQL command (SELECT * FROM $wpdbvw_lsrooms where name='sanitize_text_field($p[1])') cannot be parsed correct.
UPDATE `$wpdbvw_lsrooms` set edate=time() where name='sanitize_text_field($p[1])'
SQL command (UPDATE `$wpdbvw_lsrooms` set edate=time() where name='sanitize_text_field($p[1])') cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [1127, 1314, 306, 819, 837, 1562, 1628, 2212, 2247, 4091, 4107, 4228, 4244, 4769, 7215, 7226, 7307, 7360, 7457, 7705, 7804, 12244, 12366, 12708, 12880, 18758, 19506, 18870, 23863, 23964, 29063, 28702, 28956, 28972, 30227, 29316, 29490, 29532, 29616, 29632, 29666, 30562, 30736, 30781, 30808, 31027, 31077, 31146, 39151, 39789, 40023, 40048, 38171, 38267, 38277, 38349, 38374, 38488, 40230, 40296, 42128, 45033, 45060, 47258, 49088, 52426, 52598, 52709, 53379, 52899, 52922, 52974, 53931, 55043, 55169, 54912, 54978, 56067, 55749, 55765, 57259, 58012, 58302, 58408, 57900, 59052, 59395, 58947, 59494, 60216, 60309]
Added 0 SQL nodes. 0 out of 91 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:23.907885.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'<br>Warning: No info found for process #preg_split("/\\s+", $line)_1'' cannot be parsed correct.
HTML code '$'<br>processTimeout (item offline) Killed #preg_split("/\\s+", $line)_1'' cannot be parsed correct.
HTML code '$'<br>0 processes found, 0 cleared'' cannot be parsed correct.
HTML code '$'attribute_escape($this->name)'' cannot be parsed correct.
HTML code '$'get_bloginfo("url")/groups/$bp/$this/'' cannot be parsed correct.
HTML code '$'First broadcast: creating group channel. <b>$bp</b>'' cannot be parsed correct.
HTML code '$'<a class="ui button primary" href="add_query_arg(["broadcast" => ""], get_permalink($postID))"Broadcast $bp</a>'' cannot be parsed correct.
HTML code '$'do_shortcode("[videowhisper_watch channel=" . $bp->groups->current_group->slug . """)'' cannot be parsed correct.
HTML code '$'attribute_escape($this->name)'' cannot be parsed correct.
HTML code '$'wp_kses_post($msg)'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'<h4>To Do:</h4>wp_kses_post($htmlPending)'' cannot be parsed correct.
HTML code '$'<h4>Skipped:</h4>wp_kses_post($htmlSkip)'' cannot be parsed correct.
HTML code '$'<h4>Done (0):</h4>wp_kses_post($htmlDone)'' cannot be parsed correct.
HTML code '$'Web Name: $_SERVER_SERVER_NAME'' cannot be parsed correct.
HTML code '$'<br>Web IP: $_SERVER_SERVER_ADDR'' cannot be parsed correct.
HTML code '$'<br>Site Path: $_SERVER_DOCUMENT_ROOT'' cannot be parsed correct.
HTML code '$'<br>Server Hostname: gethostname()'' cannot be parsed correct.
HTML code '$'<br>Server OS: php_uname()'' cannot be parsed correct.
HTML code '$'<br>Web Server: $_SERVER_SERVER_SOFTWARE'' cannot be parsed correct.
HTML code '$'<br>Connection: $_SERVER_HTTP_CONNECTION'' cannot be parsed correct.
HTML code '$'<br>Client IP: $_SERVER_REMOTE_ADDR'' cannot be parsed correct.
HTML code '$'<br>Client Browser: $_SERVER_HTTP_USER_AGENT'' cannot be parsed correct.
HTML code '$'wp_kses_post("<br>PHP script owner: " . get_current_user() . " #" . getmyuid())'' cannot be parsed correct.
HTML code '$'wp_kses_post("<br>Process effective owner: " . posix_getpwuid(posix_geteuid())["name"] . " #" . posix_geteuid())'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'wp_nonce_url($_SERVER["REQUEST_URI"], "vwsec")'' cannot be parsed correct.
HTML code '$'wp_kses_post("<br> - "$key" = "$value)'' cannot be parsed correct.
HTML code '$'
$key = htmlentities(stripslashes($value))'' cannot be parsed correct.
HTML code '$'
$key = htmlentities(stripslashes($value))'' cannot be parsed correct.
HTML code '$'get_option("vwls_page_manage")'' cannot be parsed correct.
HTML code '$'get_option("vwls_page_manage")'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'get_option("vwls_page_channels")'' cannot be parsed correct.
HTML code '$'get_option("vwls_page_channels")'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'<option value=intval($sPage->ID)"selected>$sPage</option>
'' cannot be parsed correct.
HTML code '$'$outp'' cannot be parsed correct.
HTML code '$'wp_kses_post("<br><BR>FFMPEG ("$cmd"): ")'' cannot be parsed correct.
HTML code '$'wp_kses_post("<b>Warning: not detected: "$cmd"</b>")'' cannot be parsed correct.
HTML code '$'join("
", $output)'' cannot be parsed correct.
HTML code '$' but is NOT executable by current user: $processUser'' cannot be parsed correct.
HTML code '$'wp_kses_post("<br><br> + Codec libraries ("$cmd"):")'' cannot be parsed correct.
HTML code '$'join("
", $output)'' cannot be parsed correct.
HTML code '$'<BR>$cod : '' cannot be parsed correct.
HTML code '$'detected ($outp)'' cannot be parsed correct.
HTML code '$'lib$cod is missing but other aac codec may be available'' cannot be parsed correct.
HTML code '$'wp_kses_post("<b>missing: configure and install FFMPEG with lib"$cod" if you don\\'t have another library for that codec</b>")'' cannot be parsed correct.
HTML code '$'wp_kses_post("<br><br> + Codecs & Protocols ("$cmd"):")'' cannot be parsed correct.
HTML code '$'join("
", $output)'' cannot be parsed correct.
HTML code '$'wp_kses_post("<br><BR> + FFMPEG Image Resize Test ("$cmd"): ")'' cannot be parsed correct.
HTML code '$'wp_kses_post("<br>Warning: not detected ("$returnvalue"): "$cmd" :" . $output[0])'' cannot be parsed correct.
HTML code '$'join("
", $output)'' cannot be parsed correct.
HTML code '$'wp_kses_post("<br>Output ("$dest"):")'' cannot be parsed correct.
HTML code '$'wp_kses_post("found <a href=" . self->path2url($dest) . " target="_blank">Open</a>")'' cannot be parsed correct.
HTML code '$'wp_kses_post("<h5>FFMPEG Stream Snapshot</h5>  "$lastLog" : ")'' cannot be parsed correct.
HTML code '$'<br>Time: date(DATE_RFC2822, $log["time"])'' cannot be parsed correct.
HTML code '$'<br>Command: $log_cmd'' cannot be parsed correct.
HTML code '$'<br>Return: $log_return'' cannot be parsed correct.
HTML code '$'<br>Output[0]: $log_output0'' cannot be parsed correct.
HTML code '$'<BR>Your Limit: $limitsunlimited'' cannot be parsed correct.
HTML code '$'$postID'' cannot be parsed correct.
HTML code '$' ($pid)'' cannot be parsed correct.
HTML code '$'Post #$postID not found. Deleted? Removing...'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'$options_applicationWebRTC'' cannot be parsed correct.
HTML code '$'Not found: #intval($_GET["removeStream"])'' cannot be parsed correct.
HTML code '$'Room: $_GET'' cannot be parsed correct.
HTML code '$'<br>Found file date: date(DATE_RFC2822, $ftime)'' cannot be parsed correct.
HTML code '$'<br>Removed: $options_streamsPath/$_GET'' cannot be parsed correct.
HTML code '$'<br>Stream file not found: $options_streamsPath/$_GET'' cannot be parsed correct.
HTML code '$'<br>File: $log_file'' cannot be parsed correct.
HTML code '$'<br><textarea readonly cols="100" rows="4">file_get_contents($log["file"])</textarea>'' cannot be parsed correct.
HTML code '$'wp_kses_post("<h5>FFMPEG Stream Info</h5>  "$lastLog" : ")'' cannot be parsed correct.
HTML code '$'<br>Time: date(DATE_RFC2822, $log["time"])'' cannot be parsed correct.
HTML code '$'<br>Command: $log_cmd'' cannot be parsed correct.
HTML code '$'<br>Return: $log_return'' cannot be parsed correct.
HTML code '$'<br>Output[0]: $log_output0'' cannot be parsed correct.
HTML code '$'<br>File: $log_file'' cannot be parsed correct.
HTML code '$'<br><textarea readonly cols="100" rows="4">file_get_contents($log["file"])</textarea>'' cannot be parsed correct.
HTML code '$'wp_kses_post("<h5>IPTV Stream Start</h5>  "$lastLog" : ")'' cannot be parsed correct.
HTML code '$'<br>Time: date(DATE_RFC2822, $log["time"])'' cannot be parsed correct.
HTML code '$'<br>Command: $log_cmd'' cannot be parsed correct.
HTML code '$'<br>Return: $log_return'' cannot be parsed correct.
HTML code '$'<br>Output[0]: $log_output0'' cannot be parsed correct.
HTML code '$'<br>File: $log_file'' cannot be parsed correct.
HTML code '$'<br><textarea readonly cols="100" rows="4">file_get_contents($log["file"])</textarea>'' cannot be parsed correct.
HTML code '$'wp_kses_post("<h5>FFMPEG Stream Transcode</h5>  "$lastLog" : ")'' cannot be parsed correct.
HTML code '$'<br>Time: date(DATE_RFC2822, $log["time"])'' cannot be parsed correct.
HTML code '$'<br>Command: $log_cmd'' cannot be parsed correct.
HTML code '$'<br>Return: $log_return'' cannot be parsed correct.
HTML code '$'<br>Output[0]: $log_output0'' cannot be parsed correct.
HTML code '$'<br>File: $log_file'' cannot be parsed correct.
HTML code '$'<br><textarea readonly cols="100" rows="4">file_get_contents($log["file"])</textarea>'' cannot be parsed correct.
HTML code '$'wp_kses_post("<h5>FFMPEG Stream Setup</h5>  "$lastLog" : ")'' cannot be parsed correct.
HTML code '$'<br>Time: date(DATE_RFC2822, $log["time"])'' cannot be parsed correct.
HTML code '$'<br>Command: $log_cmd'' cannot be parsed correct.
HTML code '$'<br>Return: $log_return'' cannot be parsed correct.
HTML code '$'<br>Output[0]: $log_output0'' cannot be parsed correct.
HTML code '$'<br>File: $log_file'' cannot be parsed correct.
HTML code '$'<br><textarea readonly cols="100" rows="4">file_get_contents($log["file"])</textarea>'' cannot be parsed correct.
HTML code '$'<p><A class="button" href="get_permalink()admin.php?page=live-streaming&tab=reset&confirm=1">Yes, Reset These Settings!</A></p'' cannot be parsed correct.
HTML code '$'<BR> - $opt'' cannot be parsed correct.
HTML code '$'<h4>DB Version</h4>get_option("vwls_db_version")'' cannot be parsed correct.
HTML code '$'$options_watchRoleParametersConfig'' cannot be parsed correct.
HTML code '$'$optionsDefault_watchRoleParametersConfig'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'$options_userWatchInterval'' cannot be parsed correct.
HTML code '$'$optionsDefault_userWatchInterval'' cannot be parsed correct.
HTML code '$'$options_userWatchLimitDefault'' cannot be parsed correct.
HTML code '$'$optionsDefault_userWatchLimitDefault'' cannot be parsed correct.
HTML code '$'<tr class="alternate">'' cannot be parsed correct.
HTML code '$'<TH><a href=get_permalink($post->ID)" target="_channel">$post</a></TH>'' cannot be parsed correct.
HTML code '$'<td>get_userdata($userID)_user_login</td>'' cannot be parsed correct.
HTML code '$'<TD><a class="secondary button" href="admin.php?page=live-streaming&tab=stream&removeStream=intval($post->ID)">Remove</a></TD><TD><smallhtmlspecialchars($vw_ipCamera)</small></TD>'' cannot be parsed correct.
HTML code '$'<td>YesNo</td>'' cannot be parsed correct.
HTML code '$'<td></td>'' cannot be parsed correct.
HTML code '$'<td></td>'' cannot be parsed correct.
HTML code '$'<td></td>'' cannot be parsed correct.
HTML code '$'<td></td>'' cannot be parsed correct.
HTML code '$'<td></td>'' cannot be parsed correct.
HTML code '$'$options_streamsPath'' cannot be parsed correct.
HTML code '$'<br>Remove: base64_decode(sanitize_text_field($_GET["removeFile"]))'' cannot be parsed correct.
HTML code '$'$options_userWatchLimitsConfig'' cannot be parsed correct.
HTML code '$'$optionsDefault_userWatchLimitsConfig'' cannot be parsed correct.
HTML code '$'<BR>Your Watch Time: get_user_meta($current_user->ID, "vwls_watch", true)s'' cannot be parsed correct.
HTML code '$'<BR>Since: date("F j, Y, g:i a", get_user_meta($current_user->ID, "vwls_watch_update", true))'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'<BR>Next automated check (WP Cron, 10 min or more depending on site activity): in s'' cannot be parsed correct.
HTML code '$'$options_restreamTimeout'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'$options_streamsPath'' cannot be parsed correct.
HTML code '$'$options_streamsPath : '' cannot be parsed correct.
HTML code '$' Post type name: get_option("VWvideoShareOptions")_custom_post'' cannot be parsed correct.
HTML code '$'$options_custom_post_video'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'Not found: intval($_GET["disablePlaylist"])'' cannot be parsed correct.
HTML code '$'<BR>$file : htmlspecialchars($address)'' cannot be parsed correct.
HTML code '$' <a class="secondary button" href="admin.php?page=live-streaming&tab=stream&removeFile=urlencode(base64_encode($file))">Remove</a'' cannot be parsed correct.
HTML code '$'$options_loginLogo'' cannot be parsed correct.
HTML code '$'<BR><img src=\'$options_loginLogo\'>'' cannot be parsed correct.
HTML code '$'$options_interfaceClass'' cannot be parsed correct.
HTML code '$'$options_customCSS'' cannot be parsed correct.
HTML code '$'$optionsDefault_customCSS'' cannot be parsed correct.
HTML code '$'intval($options["thumbWidth"])'' cannot be parsed correct.
HTML code '$'intval($options["thumbHeight"])'' cannot be parsed correct.
HTML code '$'$options_perPage'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'wp_get_current_user()'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'wp_get_current_user()'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'wp_get_current_user()'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'intval($current_user->ID)'' cannot be parsed correct.
HTML code '$'wp_get_current_user()_$userName'' cannot be parsed correct.
HTML code '$'$options_profilePrefix'' cannot be parsed correct.
HTML code '$'$optionsDefault_profilePrefix'' cannot be parsed correct.
HTML code '$'Room: $_GET Performer Stream: $_GET'' cannot be parsed correct.
HTML code '$'$options_streamsPath'' cannot be parsed correct.
HTML code '$'$options_streamsPath : '' cannot be parsed correct.
HTML code '$'<br><br>Playlist found: $streamsPathplaylist.smil'' cannot be parsed correct.
HTML code '$'<br><textarea readonly cols="100" rows="10">htmlentities($smil)</textarea>'' cannot be parsed correct.
HTML code '$'<br> - $post <a href="admin.php?page=live-streaming&tab=playlists&disablePlaylistintval($post->ID)">Disable</a'' cannot be parsed correct.
HTML code '$'$optItm'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'$optItm'' cannot be parsed correct.
HTML code '$'$optItm'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'$optItm'' cannot be parsed correct.
HTML code '$'$options_camBandwidthMobile'' cannot be parsed correct.
HTML code '$'$options_webrtcVideoBitrate'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'$options_ffmpegTranscodeRTC'' cannot be parsed correct.
HTML code '$'$optionsDefault_ffmpegTranscodeRTC'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'wp_kses_post("<b>Warning: not detected: "$cmd"</b>")'' cannot be parsed correct.
HTML code '$'<BR>_0'' cannot be parsed correct.
HTML code '$'<BR>_1'' cannot be parsed correct.
HTML code '$' but is NOT executable by current user: $processUser'' cannot be parsed correct.
HTML code '$'wp_kses_post("<BR>"$cod" : ")'' cannot be parsed correct.
HTML code '$'detected ($outp)'' cannot be parsed correct.
HTML code '$'lib$cod is missing but other aac codec may be available'' cannot be parsed correct.
HTML code '$'wp_kses_post("<b>missing: configure and install FFMPEG with lib"$cod" if you don\\'t have another library for that codec</b>")'' cannot be parsed correct.
HTML code '$'$ffmpegDisabled'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'wp_kses_post("This section shows FFMPEG transcoding and snapshot retrieval processes currently run by account \\'"$processUser"\\' (#"$processUid"). Transcoding starts some time after stream is published for VideoWhisper web apps or when RTMP Session Control is enabled.<BR>")'' cannot be parsed correct.
HTML code '$' + Process #$columns_1 CPU: $columns_2 Mem: preg_split("/\\s+", $line)_3 Start: preg_split("/\\s+", $line)_8 CPU Time: preg_split("/\\s+", $line)_9 Cmd: '' cannot be parsed correct.
HTML code '$'preg_split("/\\s+", $line)_10 '' cannot be parsed correct.
HTML code '$' <a href="admin.php?page=live-streaming&tab=hls&killpreg_split("/\\s+", $line)_1">Kill</a'' cannot be parsed correct.
HTML code '$'<BR>Total processes for transcoding/snapshot: 0'' cannot be parsed correct.
HTML code '$'$options_ffmpegPath'' cannot be parsed correct.
HTML code '$'$optionsDefault_ffmpegPath'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'$options_ffmpegTranscode'' cannot be parsed correct.
HTML code '$'readonly'' cannot be parsed correct.
HTML code '$'$options_httpstreamer'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'$options_profilePrefixChannel'' cannot be parsed correct.
HTML code '$'$optionsDefault_profilePrefixChannel'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'get_avatar_url(get_current_user_id())'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'get_bloginfo("url")/'' cannot be parsed correct.
HTML code '$'get_bloginfo("url")/'' cannot be parsed correct.
HTML code '$'get_bloginfo("url")/'' cannot be parsed correct.
HTML code '$'get_bloginfo("url")/'' cannot be parsed correct.
HTML code '$'get_bloginfo("url")/'' cannot be parsed correct.
HTML code '$'$options_postTemplate'' cannot be parsed correct.
HTML code '$'get_stylesheet_directory()/$options_postTemplate : '' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'$webrtcDisabled'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'$options_wsURLWebRTC'' cannot be parsed correct.
HTML code '$'$options_applicationWebRTC'' cannot be parsed correct.
HTML code '$'$options_rtsp_server'' cannot be parsed correct.
HTML code '$'$options_rtsp_server_publish'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'Detected hosting client upload limit: $limitClientRateInkbpsunlimited<br>'' cannot be parsed correct.
HTML code '$'$options_uploadsPath'' cannot be parsed correct.
HTML code '$'$options_ffmpegTranscodeRTC'' cannot be parsed correct.
HTML code '$'$optionsDefault_ffmpegTranscodeRTC'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'$options_ffmpegTimeout'' cannot be parsed correct.
HTML code '$'$options_ffmpegSnapshotBackground'' cannot be parsed correct.
HTML code '$'$optionsDefault_ffmpegSnapshotBackground'' cannot be parsed correct.
HTML code '$'$options_ffmpegSnapshotTimeout'' cannot be parsed correct.
HTML code '$'$optionsDefault_ffmpegSnapshotTimeout'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'$options_rtmp_server'' cannot be parsed correct.
HTML code '$'$options_streamsPath'' cannot be parsed correct.
HTML code '$'$options_streamsPath : '' cannot be parsed correct.
HTML code '$'<br><b>Warning: Folder does not exist. If this warning persists after first access check path permissions:</b> $options_uploadsPath'' cannot be parsed correct.
HTML code '$'<br>WordPress Path: get_home_path()'' cannot be parsed correct.
HTML code '$'<br>WordPress URL: get_site_url()'' cannot be parsed correct.
HTML code '$'wp_upload_dir()_basedir'' cannot be parsed correct.
HTML code '$'$_SERVER_DOCUMENT_ROOT'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'$options_broadcastList'' cannot be parsed correct.
HTML code '$'$options_maxChannels'' cannot be parsed correct.
HTML code '$'$options_broadcastTime'' cannot be parsed correct.
HTML code '$'$options_watchTime'' cannot be parsed correct.
HTML code '$'$options_timeReset'' cannot be parsed correct.
HTML code '$'$options_bannedNames'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'$options_premiumLevelsNumber'' cannot be parsed correct.
HTML code '$'intval($i + 1)'' cannot be parsed correct.
HTML code '$'intval($i)'' cannot be parsed correct.
HTML code '$'intval($i)'' cannot be parsed correct.
HTML code '$'$premiumLev_0_premiumList'' cannot be parsed correct.
HTML code '$'intval($i)'' cannot be parsed correct.
HTML code '$'intval($i)'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'$options_tokenKey'' cannot be parsed correct.
HTML code '$'$options_webKey'' cannot be parsed correct.
HTML code '$'<!-- VideoWhisper.com: RTMP Session Control https://videowhisper.com/?p=rtmp-session-control -->
<Property>
<Name>acceptPlayers</Name>
<Value>true</Value>
</Property>
<Property>
<Name>webLogin</Name>
<Value>htmlentities($admin_ajax . "?action=vwls&task=rtmp_login&s=")</Value>
</Property>
<Property>
<Name>webKey</Name>
<Value>$options_webKey</Value>
</Property>
<Property>
<Name>webLogout</Name>
<Value>htmlentities($admin_ajax . "?action=vwls&task=rtmp_logout&s=")</Value>
</Property>
<Property>
<Name>webStatus</Name>
<Value>htmlentities($admin_ajax . "?action=vwls&task=rtmp_status")</Value>
</Property>
				'' cannot be parsed correct.
HTML code '$'<!-- VideoWhisper.com: RTMP Session Control https://videowhisper.com/?p=rtmp-session-control -->
<Property>
<Name>acceptPlayers</Name>
<Value>true</Value>
</Property>
<Property>
<Name>webLogin</Name>
<Value>htmlentities($admin_ajax . "?action=vwls&task=rtmp_login&s=")</Value>
</Property>
<Property>
<Name>webKey</Name>
<Value>$options_webKey</Value>
</Property>
<Property>
<Name>webLogout</Name>
<Value>htmlentities($admin_ajax . "?action=vwls&task=rtmp_logout&s=")</Value>
</Property>
<Property>
<Name>webStatus</Name>
<Value>htmlentities($admin_ajax . "?action=vwls&task=rtmp_status")</Value>
</Property>
			'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'$options_rtmp_restrict_ip'' cannot be parsed correct.
HTML code '$'Found: <a target=_blank href=$url">last status request</a>date("D M j G:i:s T Y", filemtime($path))'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'$options_watchList'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'intval($i)'' cannot be parsed correct.
HTML code '$'intval($i)'' cannot be parsed correct.
HTML code '$'$premiumLev_0_watchListPremium'' cannot be parsed correct.
HTML code '$'intval($i)'' cannot be parsed correct.
HTML code '$'intval($i)'' cannot be parsed correct.
HTML code '$'$premiumLev_0_pMaxChannels'' cannot be parsed correct.
HTML code '$'$optionsDefault_maxChannels'' cannot be parsed correct.
HTML code '$'intval($i)'' cannot be parsed correct.
HTML code '$'intval($i)'' cannot be parsed correct.
HTML code '$'$premiumLev_0_pBroadcastTime'' cannot be parsed correct.
HTML code '$'intval($i)'' cannot be parsed correct.
HTML code '$'intval($i)'' cannot be parsed correct.
HTML code '$'$premiumLev_0_pWatchTime'' cannot be parsed correct.
HTML code '$'intval($i)'' cannot be parsed correct.
HTML code '$'intval($i)'' cannot be parsed correct.
HTML code '$'$premiumLev_0_pCamBandwidth'' cannot be parsed correct.
HTML code '$'intval($i)'' cannot be parsed correct.
HTML code '$'intval($i)'' cannot be parsed correct.
HTML code '$'$premiumLev_0_pCamMaxBandwidth'' cannot be parsed correct.
HTML code '$'$options_timeReset'' cannot be parsed correct.
HTML code '$'<h3>$feature_name</h3>'' cannot be parsed correct.
HTML code '$'<textarea name=$key" cols="64" rows="2" id="$key"trim($options[$key])</textarea>'' cannot be parsed correct.
HTML code '$'<br>$feature_description'' cannot be parsed correct.
HTML code '$'<br>Testing balance: You have: $wooWallet->wallet->get_wallet_balance(get_current_user_id())'' cannot be parsed correct.
HTML code '$'<br>Testing MyCred balance: You have mycred_get_users_balance(get_current_user_id()) htmlspecialchars($options["currencyLong"]). '' cannot be parsed correct.
HTML code '$'ucwords($options["custom_post"])'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'$options_tipOptions'' cannot be parsed correct.
HTML code '$'$optionsDefault_tipOptions'' cannot be parsed correct.
HTML code '$'<br>Error:xml_error_string($error)'' cannot be parsed correct.
HTML code '$'$options_tipRatio'' cannot be parsed correct.
HTML code '$'$options_tipCooldown'' cannot be parsed correct.
HTML code '$'<option value=intval($sPage->ID)"selected>$sPage</option>
'' cannot be parsed correct.
HTML code '$'$options_custom_post'' cannot be parsed correct.
HTML code '$'get_permalink(get_option("vwls_page_manage"))'' cannot be parsed correct.
HTML code '$'get_permalink(get_option("vwls_page_channels"))'' cannot be parsed correct.
HTML code '$'admin_url("admin.php?page=live-streaming&tab=appearance")'' cannot be parsed correct.
HTML code '$'wp_kses_post($htmlCode)'' cannot be parsed correct.
HTML code '$'$requirement_label'' cannot be parsed correct.
HTML code '$'$requirement_title'' cannot be parsed correct.
HTML code '$'$requirement_label'' cannot be parsed correct.
HTML code '$'get_admin_url()admin-ajax.php'' cannot be parsed correct.
HTML code '$'get_option("VWliveStreamingOptions")_loginLogo'' cannot be parsed correct.
HTML code '$'json_encode($res)'' cannot be parsed correct.
HTML code '$' <div class="field"><select class="ui dropdown fluid" id="order_by$id" name="order_by$id" onchange="aurl$id=\'admin_url()admin-ajax.php?action=vwls_channels&pp=$perPage&pr=$perRow&sc=$selectCategory&sn=$selectName&sg=$selectTags&so=$selectOrder&sp=$selectPage&id=sanitize_text_field($_GET["id"])&tags=urlencode($tags)&name=urlencode($name)&cat=$category&ob=\'+ this.value; loadChannelssanitize_text_field($_GET["id"])(\'<div class=\\'ui active inline text large loader\\'>Ordering channels...</div>\')"'' cannot be parsed correct.
HTML code '$'<option value="">Order By:</option>'' cannot be parsed correct.
HTML code '$'<option value="post_date" selected>Creation Date</option>'' cannot be parsed correct.
HTML code '$'<option value="edate" selected>Broadcast Recently</option>'' cannot be parsed correct.
HTML code '$'<option value="viewers" selected>Current Viewers</option>'' cannot be parsed correct.
HTML code '$'<option value="maxViewers" selected>Maximum Viewers</option>'' cannot be parsed correct.
HTML code '$'<option value="rateStarReview_rating" selected>Rating</option>'' cannot be parsed correct.
HTML code '$'<option value="rateStarReview_ratingNumber" selected>Most Rated</option>'' cannot be parsed correct.
HTML code '$'json_encode($response)'' cannot be parsed correct.
HTML code '$'<option value="rateStarReview_ratingPoints" selected>Rate Popularity</option>'' cannot be parsed correct.
HTML code '$'<option value="rand" selected>Random</option>'' cannot be parsed correct.
HTML code '$'<div class="field" data-tooltip="Tags, Comma Separated"><div class="ui left icon input"><i class="tags icon"></i><INPUT class="videowhisperInput" type="text" size="12" name="tags" id="tags" placeholder="Tags" value="htmlspecialchars($tags)">
					</div></div'' cannot be parsed correct.
HTML code '$'<div class="field"><div class="ui left corner labeled input"><INPUT class="videowhisperInput" type="text" size="12" name="name" id="name" placeholder="Name" value="htmlspecialchars($name)">
  <div class="ui left corner label">
    <i class="asterisk icon"></i>
  </div>
					</div></div>'' cannot be parsed correct.
HTML code '$'<div class="field" data-tooltip="Search by Tags and/or Name"><button class="ui fluid icon button"  type="submit" name="submit" id="submitSearch" value="Search" onclick="aurlsanitize_text_field($_GET["id"])=\'admin_url()admin-ajax.php?action=vwls_channels&pp=$perPage&pr=$perRow&sc=$selectCategory&sn=$selectName&sg=$selectTags&so=$selectOrder&sp=$selectPage&id=sanitize_text_field($_GET["id"])&tags=urlencode($tags)&name=urlencode($name)&cat=$category&ob=edate&tags=\' + document.getElementById(\'tags\').value +\'&name=\' + document.getElementById(\'name\').value; loadChannelssanitize_text_field($_GET["id"])(\'<div class=\\'ui active inline text large loader\\'>Searching Channels...</div>\')"><i class="search icon"></i></button></div>'' cannot be parsed correct.
HTML code '$'<div class="videowhisperTitle">sanitize_file_name($item->post_title)</div>'' cannot be parsed correct.
HTML code '$'<div class="videowhisperTime">wp_kses_post($banLink)$age</div>'' cannot be parsed correct.
HTML code '$'<div class="videowhisperChannelRating"><div class="ui star rating readonly" data-rating="round($rating * $max)" data-max-rating="5"></div></div'' cannot be parsed correct.
HTML code '$'<div class="uiget_option("VWliveStreamingOptions")_interfaceClass small equal width form" style="z-index: 20;"><div class="inline fields">'' cannot be parsed correct.
HTML code '$'<div class="field">wp_dropdown_categories("echo=0&name=category" . esc_attr($id) . "&hide_empty=0&class=ui+dropdown+fluid&hierarchical=1&show_option_all=" . __("All", "live-streaming") . "&selected=" . esc_attr($category))</div>'' cannot be parsed correct.
HTML code '$'<script>var category$id = document.getElementById("categor$id"); 			categor$id.onchange = function(){aurl$id=\'admin_url()admin-ajax.php?action=vwls_channels&pp=$perPage&pr=$perRow&sc=$selectCategory&sn=$selectName&sg=$selectTags&so=$selectOrder&sp=$selectPage&id=sanitize_text_field($_GET["id"])&tags=urlencode($tags)&name=urlencode($name)&ob=edate&cat=\'+ this.value; loadChannelssanitize_text_field($_GET["id"])(\'<div class="ui active inline text large loader">Loading Category...</div>\')}
			</script>'' cannot be parsed correct.
HTML code '$' <a class="ui right labeled icon button" href="JavaScript: void()" onclick="aurl$id=\'$ajaxurlCO&p=intval($page + 1)\'; loadChannelssanitize_text_field($_GET["id"])(\'<div class=\\'ui active inline text large loader\\'>Loading next page...</div>\');">Next <i class="right arrow icon"></i></a> '' cannot be parsed correct.
HTML code '$'<div class="videowhisperTitle">$item</div>'' cannot be parsed correct.
HTML code '$'<div class="videowhisperTime">wp_kses_post($banLink)$age</div>'' cannot be parsed correct.
HTML code '$'<a href=$url"><IMG src="" width="intval($options["thumbWidth"])px" height="intval($options["thumbHeight"])px"></a'' cannot be parsed correct.
HTML code '$'<a href=$url"><IMG src="" width="intval($options["thumbWidth"])px" height="intval($options["thumbHeight"])px"></a'' cannot be parsed correct.
HTML code '$'<a href=$url"><IMG SRC="plugin_dir_url()screenshot-3.jpg" width="intval($options["thumbWidth"])px" height="intval($options["thumbHeight"])px"></a'' cannot be parsed correct.
HTML code '$'No channels match current selection. Channels get listed after being broadcast or configured as events, with snapshot/picture.'' cannot be parsed correct.
HTML code '$'<div class="uiget_option("VWliveStreamingOptions")_interfaceClass form"><div class="inline fields">'' cannot be parsed correct.
HTML code '$' <a class="ui labeled icon button" href="JavaScript: void()" onclick="aurl$id=\'$ajaxurlCO&p=intval($page - 1)\'; loadChannelssanitize_text_field($_GET["id"])(\'<div class=\\'ui active inline text large loader\\'>Loading previous page...</div>\');"><i class="left arrow icon"></i> Previous</a> '' cannot be parsed correct.
HTML code '$'<a href=$url"><IMG SRC="plugin_dir_url()screenshot-3.jpg" width="intval($options["thumbWidth"])px" height="intval($options["thumbHeight"])px"></a'' cannot be parsed correct.
HTML code '$' <a class="ui labeled icon button" href="JavaScript: void()" onclick="aurl$id=\'$ajaxurlCO&p=intval($page - 1)\'; loadChannelssanitize_text_field($_GET["id"])(\'Loading previous page...\');">><i class="left arrow icon"></i> Previous</a> '' cannot be parsed correct.
HTML code '$' <a class="ui right labeled icon button" href="JavaScript: void()" onclick="aurl$id=\'$ajaxurlCO&p=intval($page + 1)\'; loadChannelssanitize_text_field($_GET["id"])(\'Loading next page...\');"Next  <i class="right arrow icon"></i></a> '' cannot be parsed correct.
HTML code '$'$bgcolor'' cannot be parsed correct.
HTML code '$'do_shortcode("[videowhisper_broadcast]")'' cannot be parsed correct.
HTML code '$'<li><a href=\'$url\'><B>$item</B>
(intval($count[0]->no + 1)) : $item</a></li>'' cannot be parsed correct.
HTML code '$'plugin_dir_url()'' cannot be parsed correct.
HTML code '$'sanitize_file_name($username)'' cannot be parsed correct.
HTML code '$'plugin_dir_url()'' cannot be parsed correct.
HTML code '$'<div id="VideoWhisper" style="display: block;"><p>Powered by VideoWhisper <a href="https://broadcastlivevideo.com">Broadcast Live Video - HTML5 Live Streaming
Turnkey Site Platform</a>.</p></div>'' cannot be parsed correct.
HTML code '$'wp_kses_post($before_widget)'' cannot be parsed correct.
HTML code '$'wp_kses_post($before_title)'' cannot be parsed correct.
HTML code '$'wp_kses_post($after_title)'' cannot be parsed correct.
HTML code '$'wp_kses_post($after_widget)'' cannot be parsed correct.
HTML code '$'<a href=$url"><IMG src="" width="intval($options["thumbWidth"])px" height="intval($options["thumbHeight"])px"></a'' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$'<title>sanitize_file_name($wp->query_vars["vwls_fullchannel"])</title>
<body style="margin:0; padding:0; width:100%; height:100%">
'' cannot be parsed correct.
HTML code '$'<p>No items.</p>'' cannot be parsed correct.
HTML code '$'category'' cannot be parsed correct.
HTML code '$'category'' cannot be parsed correct.
HTML code '$' class="tabs"'' cannot be parsed correct.
HTML code '$'category'' cannot be parsed correct.
HTML code '$'add_query_arg($taxonomy_name . "-tab", "most-used", remove_query_arg($removed_args))'' cannot be parsed correct.
HTML code '$'category'' cannot be parsed correct.
HTML code '$'category'' cannot be parsed correct.
HTML code '$'category'' cannot be parsed correct.
HTML code '$'category'' cannot be parsed correct.
HTML code '$'walk_nav_menu_tree(array_map(["VWliveStreaming", "nav_menu_item"], $search_results), 0, $args)'' cannot be parsed correct.
HTML code '$' class="tabs"'' cannot be parsed correct.
HTML code '$'category'' cannot be parsed correct.
HTML code '$'add_query_arg($taxonomy_name . "-tab", "all", remove_query_arg($removed_args))'' cannot be parsed correct.
HTML code '$'category'' cannot be parsed correct.
HTML code '$' class="tabs"'' cannot be parsed correct.
HTML code '$'category'' cannot be parsed correct.
HTML code '$'add_query_arg($taxonomy_name . "-tab", "search", remove_query_arg($removed_args))'' cannot be parsed correct.
HTML code '$'category'' cannot be parsed correct.
HTML code '$'category'' cannot be parsed correct.
HTML code '$'tabs-panel-activetabs-panel-inactive'' cannot be parsed correct.
HTML code '$'category'' cannot be parsed correct.
HTML code '$'walk_nav_menu_tree(array_map(["VWliveStreaming", "nav_menu_item"], $popular_terms), 0, $args)'' cannot be parsed correct.
HTML code '$'category'' cannot be parsed correct.
HTML code '$'tabs-panel-activetabs-panel-inactive'' cannot be parsed correct.
HTML code '$'wp_kses_post($page_links)'' cannot be parsed correct.
HTML code '$'category'' cannot be parsed correct.
HTML code '$'category'' cannot be parsed correct.
HTML code '$'walk_nav_menu_tree(array_map(["VWliveStreaming", "nav_menu_item"], $terms), 0, $args)'' cannot be parsed correct.
HTML code '$'wp_kses_post($page_links)'' cannot be parsed correct.
HTML code '$'tabs-panel-activetabs-panel-inactive'' cannot be parsed correct.
HTML code '$'category'' cannot be parsed correct.
HTML code '$'$search_results->get_error_message()'' cannot be parsed correct.
HTML code '$'add_query_arg([$taxonomy_name . "-tab" => "all", "selectall" => 1], remove_query_arg($removed_args))'' cannot be parsed correct.
HTML code '$'category'' cannot be parsed correct.
HTML code '$'submit-taxonomy-category'' cannot be parsed correct.
HTML code '$'+ RTMP Session Info Detected: <a target=_blank href=$url">last status request</a>date("D M j G:i:s T Y", filemtime($path))'' cannot be parsed correct.
HTML code '$'</th><td></td><td> / unlimited</td><td> / unlimited</td><td></td><td>Premium intval($item->type - 1)Standard</td>'' cannot be parsed correct.
HTML code '$'Last App Instance: $sessionsVars_appInstanceInfo'' cannot be parsed correct.
HTML code '$'wp_kses_post($key": "$value . strstr(strtolower($key), "rate") && !strstr(strtolower($key), "disconnect")"bytes = " . self->humanSize(8 * $value) . "bits""" . "<br>")'' cannot be parsed correct.
HTML code '$'wp_kses_post($key": "$value . strstr(strtolower($key), "rate") && !strstr(strtolower($key), "disconnect")" = " . self->humanSize(8 * $value)"" . "; ")'' cannot be parsed correct.
HTML code '$'wp_kses_post("<h4>FFmpeg</h4> + FFMPEG transcoding and snapshot retrieval processes currently run by account \\'"$processUser"\\' (#"$processUid"). Transcoding starts some time after stream is published for VideoWhisper web apps or when RTMP Session Control is enabled.<BR>")'' cannot be parsed correct.
HTML code '$' - Process #$columns_1 CPU: $columns_2 Mem: preg_split("/\\s+", $line)_3 Start: preg_split("/\\s+", $line)_8 CPU Time: preg_split("/\\s+", $line)_9 Cmd: '' cannot be parsed correct.
HTML code '$'preg_split("/\\s+", $line)_10 '' cannot be parsed correct.
HTML code '$' <a href="admin.php?page=live-streaming&tab=hls&killpreg_split("/\\s+", $line)_1">Kill</a'' cannot be parsed correct.
HTML code '$'<BR>Total processes for transcoding/snapshot: 0'' cannot be parsed correct.
HTML code '$'<tr class=\'alternate\'><th>$item'' cannot be parsed correct.
HTML code '$'<td>wp_kses_post("<a target=\\'_blank\\' href=\\'"$logsurl"\\'>"$upload_size" ("$upload_c["count"]" files)</a>")</td></tr>'' cannot be parsed correct.
HTML code '$'<tr><td colspan="7">wp_kses_post($warnCode)</td></tr>'' cannot be parsed correct.
HTML code '$'<tr><td colspan=\'7\'> - $broadcaster Session Type: $typeLabel Status: $broadcaster Started:   Broadcaster updated: </td></tr>'' cannot be parsed correct.
HTML code '$'Video Codec: get_post_meta($postID, "stream-codec-video", true) Audio Codec: get_post_meta($postID, "stream-codec-audio", true) Detected: $codecAge HLS: get_post_meta($postID, "stream-hls", true)'' cannot be parsed correct.
HTML code '$' WebRTC: get_post_meta($postID, "stream-mode", true)'' cannot be parsed correct.
HTML code '$' Protocol:  Type: get_post_meta($postID, "stream-type", true) Broadcast session updated: $updatedAge'' cannot be parsed correct.
HTML code '$' <A target="_viewchannel" href="get_permalink($postID)">View</A'' cannot be parsed correct.
HTML code '$'sanitize_file_name($username)'' cannot be parsed correct.
HTML code '$'admin_url()admin-ajax.php?action=vwls_broadcast&n=urlencode($username)'' cannot be parsed correct.
HTML code '$'get_bloginfo("url")/'' cannot be parsed correct.
HTML code '$'get_bloginfo("url")/'' cannot be parsed correct.
HTML code '$'sanitize_file_name($username)'' cannot be parsed correct.
HTML code '$'get_bloginfo("url")/'' cannot be parsed correct.
HTML code '$'do_shortcode("[videowhisper_channels ban="1" per_page="24"]")'' cannot be parsed correct.
HTML code '$'wp_kses_post("<p> + Total temporary file usage (logs, snapshots, session info): " . " <a target=\\'_blank\\' href=\\'"$logsurl"\\'>"$upload_size" (in "$upload_c["count"]" files and "$upload_c["dircount"]" folders)</a>" . "</p>")'' cannot be parsed correct.
HTML code '$'wp_kses_post("<br>Channel post \\'"$ban"\\' not found!")'' cannot be parsed correct.
HTML code '$'wp_kses_post("<br>Channel post \\'"$ban"\\' was deleted.")'' cannot be parsed correct.
HTML code '$'wp_kses_post("<br>Channel room \\'"$ban"\\' was deleted.")'' cannot be parsed correct.
HTML code '$'<br>Current ban list: get_option("VWliveStreamingOptions")_bannedNames <a href="admin.php?page=live-streaming&tab=broadcaster" class="button button-primary">Edit</a>'' cannot be parsed correct.
HTML code '$'Error - Folder does not exist and could not be created: get_option("VWliveStreamingOptions")_uploadsPath - error_get_last()_message'' cannot be parsed correct.
HTML code '$'$output'' cannot be parsed correct.
HTML code '$'VideoWhisper=1&usersCount=count($users)&controlUsers=serialize($controlUsers)&controlSessions=serialize($controlSessions)'' cannot be parsed correct.
HTML code '$'unlink($filename1)'' cannot be parsed correct.
HTML code '$'implode("", file($filename1))'' cannot be parsed correct.
HTML code '$'&role=$broadcaster'' cannot be parsed correct.
HTML code '$'VideoWhisper=1&login=0&missingSession=sanitize_file_name($session)&invalid=$invalid&verified=1&wrongKey=0&k=sanitize_text_field($key)&p=count($p)'' cannot be parsed correct.
HTML code '$'&rtmp_restrict_ip=get_option("VWliveStreamingOptions")_rtmp_restrict_ip'' cannot be parsed correct.
HTML code '$'&webStatus=$options_webStatus'' cannot be parsed correct.
HTML code '$'<BR>Checking timeout processes (associated with offline listings) ...'' cannot be parsed correct.
HTML code '$'Invalid nonce!'' cannot be parsed correct.
HTML code '$'<h4>Web Host</h4>'' cannot be parsed correct.
HTML code '$'<h4>FFMPEG</h4>'' cannot be parsed correct.
HTML code '$'Executing server comments is currently disabled. Enable from Server settings tab to allow advanced features.'' cannot be parsed correct.
HTML code '$'exec: '' cannot be parsed correct.
HTML code '$'function is enabled'' cannot be parsed correct.
HTML code '$' and works'' cannot be parsed correct.
HTML code '$' <b>but does not work</b>'' cannot be parsed correct.
HTML code '$'<b>function is not enabled</b><BR>PHP function "exec" is required to run FFMPEG. Current hosting settings are not compatible with this functionality.'' cannot be parsed correct.
HTML code '$'<br>Importing: '' cannot be parsed correct.
HTML code '$'Saving pages setup...'' cannot be parsed correct.
HTML code '$'<br>exec("whoami"): '' cannot be parsed correct.
HTML code '$'found'' cannot be parsed correct.
HTML code '$' / Output:<br><textarea readonly cols="120" rows="4">'' cannot be parsed correct.
HTML code '$'</textarea>'' cannot be parsed correct.
HTML code '$'<br>FFMPEG is a video tool required on web hosting for video stream snapshots, analysis (detecting codecs), transcoding. Usually not available on budget web hosting and available on premium video hosting.'' cannot be parsed correct.
HTML code '$' / Output:<br><textarea readonly cols="120" rows="4">'' cannot be parsed correct.
HTML code '$'</textarea>'' cannot be parsed correct.
HTML code '$' / Output:<br><textarea readonly cols="120" rows="4">'' cannot be parsed correct.
HTML code '$'</textarea>'' cannot be parsed correct.
HTML code '$'Output:<br><textarea readonly cols="120" rows="4">'' cannot be parsed correct.
HTML code '$'</textarea>'' cannot be parsed correct.
HTML code '$' but is NOT executable by current user. '' cannot be parsed correct.
HTML code '$'not found (Failed): review ffmpeg configuration and process/file ownership/permissions'' cannot be parsed correct.
HTML code '$'<h4>FFMPEG Logs</h4>Logs from last operations attempted, for troubleshooting. Make sure FFMPEG is functional and scripts can write the log files. Then try features that should call this functionality.'' cannot be parsed correct.
HTML code '$'Not found, yet!'' cannot be parsed correct.
HTML code '$' - '' cannot be parsed correct.
HTML code '$'<br>'' cannot be parsed correct.
HTML code '$'No IPTV active streams.'' cannot be parsed correct.
HTML code '$'<h4>Removing Stream</h4>'' cannot be parsed correct.
HTML code '$' Log file not found!'' cannot be parsed correct.
HTML code '$'Not found, yet!'' cannot be parsed correct.
HTML code '$' Log file not found!'' cannot be parsed correct.
HTML code '$'Not found, yet!'' cannot be parsed correct.
HTML code '$' Log file not found!'' cannot be parsed correct.
HTML code '$'Not found, yet!'' cannot be parsed correct.
HTML code '$' Log file not found!'' cannot be parsed correct.
HTML code '$'Not found, yet!'' cannot be parsed correct.
HTML code '$' Log file not found!'' cannot be parsed correct.
HTML code '$'<h4>Resetting...</h4>'' cannot be parsed correct.
HTML code '$'<br><textarea readonly cols="100" rows="4">'' cannot be parsed correct.
HTML code '$'</textarea>'' cannot be parsed correct.
HTML code '$'<h4>Testing</h4>Your role(s): '' cannot be parsed correct.
HTML code '$'<BR>Role Parameters: '' cannot be parsed correct.
HTML code '$'<br>Removed channel re-streaming configuration.'' cannot be parsed correct.
HTML code '$'<table><tr><th>Channel</th><th>Owner</th><th>Remove</th><th>Address</th><th>Paused</th><th>Accessed</th><th>Accessed by an user</th><th>Owner active</th><th>Broadcast</th><th>Thumb</th></tr>'' cannot be parsed correct.
HTML code '$'</tr>'' cannot be parsed correct.
HTML code '$'<tr><td colspan=6>No channels with streams.<td></tr>'' cannot be parsed correct.
HTML code '$'</table>'' cannot be parsed correct.
HTML code '$' NOT FOUND!'' cannot be parsed correct.
HTML code '$' BAD PATH!'' cannot be parsed correct.
HTML code '$'<h4>Testing</h4>Your role(s): '' cannot be parsed correct.
HTML code '$' * NOT assigned to any channel!'' cannot be parsed correct.
HTML code '$' - CLEANED'' cannot be parsed correct.
HTML code '$'<br>No stream files detected in configured folder.'' cannot be parsed correct.
HTML code '$'Found. '' cannot be parsed correct.
HTML code '$'Writable. (OK)'' cannot be parsed correct.
HTML code '$'NOT writable.'' cannot be parsed correct.
HTML code '$'<b>NOT found!</b>'' cannot be parsed correct.
HTML code '$'Detected.'' cannot be parsed correct.
HTML code '$'Not detected. Please install, activate and configure <a target="_blank" href="https://wordpress.org/plugins/video-share-vod/">Video Share VOD</a>!'' cannot be parsed correct.
HTML code '$'<h4>Disabling Playlists</h4>'' cannot be parsed correct.
HTML code '$'Found. '' cannot be parsed correct.
HTML code '$'Writable. (OK)'' cannot be parsed correct.
HTML code '$'NOT writable.'' cannot be parsed correct.
HTML code '$'<b>NOT found!</b>'' cannot be parsed correct.
HTML code '$'<BR><BR>SMIL updated on settings save.'' cannot be parsed correct.
HTML code '$'No active playlists scheduled.'' cannot be parsed correct.
HTML code '$'<b>Warning: Adjust bitrate to prevent disconnect / failure.<br>Video bitrate should be 100kbps lower than total upload so it fits with audio and data added. Save to apply!</b><br>'' cannot be parsed correct.
HTML code '$'FFMPEG: '' cannot be parsed correct.
HTML code '$'found'' cannot be parsed correct.
HTML code '$'<br>Codec libraries:'' cannot be parsed correct.
HTML code '$' <B>Killing process...</B>'' cannot be parsed correct.
HTML code '$'<br>'' cannot be parsed correct.
HTML code '$'No live transcoding/snapshot processes detected.'' cannot be parsed correct.
HTML code '$'<br>Warning: As WebRTC is not configured to use H264, video also needs to be transcoded. This requires high hosting processing resources which may result in slower site speed or failed requests. A hosting plan with high processing resources (CPU & memory) is required for video transcoding.'' cannot be parsed correct.
HTML code '$'Found.'' cannot be parsed correct.
HTML code '$'Not Found! Use another theme file!'' cannot be parsed correct.
HTML code '$'Detected:  <a href="admin.php?page=rate-star-review">Configure</a>'' cannot be parsed correct.
HTML code '$'Not detected. Please install and activate Rate Star Review by VideoWhisper.com from <a href="plugin-install.php?s=videowhisper+rate+star+review&tab=search&type=term">Plugins > Add New</a>!'' cannot be parsed correct.
HTML code '$'<br><b>Warning: Uploaded files may not be accessible by web (path is not within WP installation path).</b>'' cannot be parsed correct.
HTML code '$'Found. '' cannot be parsed correct.
HTML code '$'Writable. (OK)'' cannot be parsed correct.
HTML code '$'NOT writable.'' cannot be parsed correct.
HTML code '$'<b>NOT found!</b>'' cannot be parsed correct.
HTML code '$'</textarea>
<BR>Dedicated IP Based. HTTP, when using same server for web and streaming or CloudFlare/firewall that blocks requests:
<br><textarea readonly cols="100" rows="4">
'' cannot be parsed correct.
HTML code '$'</textarea>
<BR>'' cannot be parsed correct.
HTML code '$'WooWallet Plugin Detected'' cannot be parsed correct.
HTML code '$'Error: WooWallet->wallet not ready! Make sure <a href="https://woocommerce.com/?aff=18336&cid=1980980" target="_woocommerce">WooCommerce</a> is also installed and active. <a href="plugin-install.php">Plugins > Add New Plugin</a>'' cannot be parsed correct.
HTML code '$'Error: woo_wallet not found!'' cannot be parsed correct.
HTML code '$'Not detected. Please install and activate <a target="_plugin" href="https://wordpress.org/plugins/woo-wallet/">WooCommerce Wallet</a> from <a href="plugin-install.php">Plugins > Add New</a>!'' cannot be parsed correct.
HTML code '$'MyCred Plugin Detected'' cannot be parsed correct.
HTML code '$'Not detected. Please install and activate <a target="_mycred" href="https://wordpress.org/plugins/mycred/">myCRED</a> from <a href="plugin-install.php">Plugins > Add New</a>!'' cannot be parsed correct.
HTML code '$'Warning: No balance detected! Unless this account is excluded, there should be a MyCred balance. MyCred plugin may not be configured/enabled correctly.'' cannot be parsed correct.
HTML code '$'Detected'' cannot be parsed correct.
HTML code '$'Not detected. Please install and activate myCRED with <a href="admin.php?page=mycred-addons">buyCRED addon</a>!'' cannot be parsed correct.
HTML code '$'Detected'' cannot be parsed correct.
HTML code '$'Not detected. Please install and activate myCRED with <a href="admin.php?page=mycred-addons">Sell Content addon</a>!'' cannot be parsed correct.
HTML code '$'<br>- '' cannot be parsed correct.
HTML code '$'</select></div>'' cannot be parsed correct.
HTML code '$'<div class="field"></div>'' cannot be parsed correct.
HTML code '$'</div></div>'' cannot be parsed correct.
HTML code '$'<br>'' cannot be parsed correct.
HTML code '$'<div class="videowhisperChannel">'' cannot be parsed correct.
HTML code '$'</div></div>'' cannot be parsed correct.
HTML code '$'<div class="videowhisperChannel">'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'No channel ID provided!'' cannot be parsed correct.
HTML code '$'Channel not found!'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'<BR>'' cannot be parsed correct.
HTML code '$'Access not permitted (different channel owner)!'' cannot be parsed correct.
HTML code '$'<ul>'' cannot be parsed correct.
HTML code '$'<li>No broadcasters online.</li>'' cannot be parsed correct.
HTML code '$'</ul>'' cannot be parsed correct.
HTML code '$'Action not supported!'' cannot be parsed correct.
HTML code '$'No channel name provided!'' cannot be parsed correct.
HTML code '$'<div class="info">Regenerating thumbs for listed channels.</div>'' cannot be parsed correct.
HTML code '$'<h4>Last App Instance Info</h4>'' cannot be parsed correct.
HTML code '$'<style type="text/css">
    #favorite-actions {display:none;}
    .add-new-h2{display:none;}
    .tablenav{display:none;}
    </style>'' cannot be parsed correct.
HTML code '$'<h5>Streaming Host Limits</h5>'' cannot be parsed correct.
HTML code '$'<h5>All Parameters</h5><small>'' cannot be parsed correct.
HTML code '$'</small>'' cannot be parsed correct.
HTML code '$'+ Warning: RTMP Session Control info was not detected. Without this broadcasts external to VideoWhisper apps will not show online and will not generate snapshots. Also all transcoding and thumb generation processes will have longer latency.'' cannot be parsed correct.
HTML code '$' <B>Killing process...</B>'' cannot be parsed correct.
HTML code '$'<br>'' cannot be parsed correct.
HTML code '$'No live transcoding/snapshot processes detected.'' cannot be parsed correct.
HTML code '$'<h4>Channel Activity</h4> <table class=\'wp-list-table widefat\'><thead><tr><th>Channel</th><th>Last Access</th><th>Broadcast Time</th><th>Watch Time</th><th>Last Reset</th><th>Type</th><th>Logs</th></tr></thead>'' cannot be parsed correct.
HTML code '$'<tr><td colspan="7">'' cannot be parsed correct.
HTML code '$' </td></tr>'' cannot be parsed correct.
HTML code '$'</table>'' cannot be parsed correct.
HTML code '$'<div class=\'warning\'>Snapshot missing!</div>'' cannot be parsed correct.
HTML code '$'<br>DELETED: No channel post.'' cannot be parsed correct.
HTML code '$'missingParameterArray'' cannot be parsed correct.
HTML code '$'logout='' cannot be parsed correct.
HTML code '$'missingSession'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:56.502902.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.038391.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 4 do_action/apply_filters calls and 41 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:03.675723.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FileProDetector
### Start running FrontBaseDetector
### Finish running DbplusDetector
### Start running HashDetector
### Finish running DbaseDetector
### Start running IBMDb2Detector
### Finish running ArrayElementDetector
### Start running InformixDetector
### Finish running IBMDb2Detector
### Start running IngresDetector
### Finish running HashDetector
### Start running maxdbDetector
### Finish running CubridDetector
### Start running MongoDbDetector
### Finish running FirebirdInterBaseDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running MongoDbDetector
### Start running MySQLDetector
### Finish running InformixDetector
### Start running MySQLiDetector
### Finish running FrontBaseDetector
### Start running Oci8Detector
### Finish running IngresDetector
### Start running OpenSSLDetector
### Finish running MySQLDetector
### Start running ParadoxDetector
### Finish running OpenSSLDetector
### Start running PasswordHashingDetector
### Finish running MsqlDetector
### Start running PhpCurlDetector
### Finish running PhpCurlDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running Oci8Detector
### Start running PHPRetrievalDetector
### Finish running ParadoxDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PasswordHashingDetector
### Start running PhpVarDetector
### Finish running PHPRetrievalDetector
### Start running PostgreSQLDetector
### Finish running PostgreSQLDetector
### Start running PropertyDetector
### Finish running PhpVarDetector
### Start running Sqlite3Detector
### Finish running Sqlite3Detector
### Start running SqliteDetector
### Finish running PropertyDetector
### Start running SqlServerDetector
### Finish running SqlServerDetector
### Start running SybaseDetector
### Finish running SqliteDetector
### Start running TokyoTyrantDetector
### Finish running PHPStorageDetector
### Start running UserInputDetector
### Finish running TokyoTyrantDetector
### Start running VariableDetector
### Finish running SybaseDetector
### Start running WordpressHashingFnDetector
### Finish running UserInputDetector
### Start running WordPressRemoteDetector
### Finish running maxdbDetector
### Start running WordPressRetrievalDetector
### Finish running MySQLiDetector
### Start running WordPressStorageDetector
### Finish running WordPressRemoteDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running WordpressHashingFnDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running GenericDatabaseUsageDetector
### Start running UninstallDetector
### Finish running PHPIncludedDetector
### Finish running UninstallDetector
### Finish running VariableDetector
### Finish running DeletionDetector
### Finish running WordPressStorageDetector
### Finish running WordPressRetrievalDetector
### Finished running detectors
inc/iptv.php:663
  - Request variable '$_GET["address"]' of personal types {'address'} is found.
  - Data types: address
inc/iptv.php:666
  - Request variable '$_GET["username"]' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/iptv.php:667
  - Request variable '$_GET["email"]' of personal types {'email'} is found.
  - Data types: email 

inc/iptv.php:230
  - MD5 called with parameters [webKey, options, postID, vw]. Ignore if [webKey, options, postID, vw] does not contain personal information.
inc/iptv.php:287
  - MD5 called with parameters [webKey, userID, postID, vw, options]. Ignore if [webKey, userID, postID, vw, options] does not contain personal information.
videowhisper_streaming.php:2555
  - MD5 called with parameters [webKey, postID, vw, intval, options]. Ignore if [webKey, postID, vw, intval, options] does not contain personal information.
videowhisper_streaming.php:2629
  - MD5 called with parameters [webKey, userID, postID, vw, intval, options]. Ignore if [webKey, userID, postID, vw, intval, options] does not contain personal information.
videowhisper_streaming.php:2847
  - MD5 called with parameters [webKey, userID, postID, vw, intval, options]. Ignore if [webKey, userID, postID, vw, intval, options] does not contain personal information.
videowhisper_streaming.php:2849
  - MD5 called with parameters [webKey, postID, vw, intval, options]. Ignore if [webKey, postID, vw, intval, options] does not contain personal information.
videowhisper_streaming.php:4178
  - MD5 called with parameters [webKey, userID, postID, vw, intval, options]. Ignore if [webKey, userID, postID, vw, intval, options] does not contain personal information.
videowhisper_streaming.php:4181
  - MD5 called with parameters [webKey, postID, vw, intval, options]. Ignore if [webKey, postID, vw, intval, options] does not contain personal information.
videowhisper_streaming.php:4197
  - MD5 called with parameters [webKey, userID, postID, vw, intval, options]. Ignore if [webKey, userID, postID, vw, intval, options] does not contain personal information.
videowhisper_streaming.php:4200
  - MD5 called with parameters [webKey, postID, vw, intval, options]. Ignore if [webKey, postID, vw, intval, options] does not contain personal information.
videowhisper_streaming.php:8701
  - MD5 called with parameters [webKey, postID, vw, intval, options]. Ignore if [webKey, postID, vw, intval, options] does not contain personal information.
videowhisper_streaming.php:9210
  - MD5 called with parameters [webKey, userID, channel_id, vw, intval, options]. Ignore if [webKey, userID, channel_id, vw, intval, options] does not contain personal information.
videowhisper_streaming.php:9795
  - MD5 called with parameters [webKey, postID, vw, intval, options, broadcasterID]. Ignore if [webKey, postID, vw, intval, options, broadcasterID] does not contain personal information.
videowhisper_streaming.php:9839
  - MD5 called with parameters [webKey, postID, vw, intval, options]. Ignore if [webKey, postID, vw, intval, options] does not contain personal information. 

inc/options.php:976
  - RETRIEVAL call to file_get_contents($log["file"]).
  - Data types: file
inc/options.php:994
  - RETRIEVAL call to file_get_contents($log["file"]).
  - Data types: file
inc/options.php:1012
  - RETRIEVAL call to file_get_contents($log["file"]).
  - Data types: file
inc/options.php:1030
  - RETRIEVAL call to file_get_contents($log["file"]).
  - Data types: file
inc/options.php:1048
  - RETRIEVAL call to file_get_contents($log["file"]).
  - Data types: file
inc/options.php:1361
  - RETRIEVAL call to file_get_contents($file).
  - Data types: file
inc/options.php:1558
  - RETRIEVAL call to file_get_contents($smilPath).
  - Data types: file
videowhisper_streaming.php:1109
  - RETRIEVAL call to file_get_contents($filename).
  - Data types: file
videowhisper_streaming.php:5936
  - RETRIEVAL call to file_get_contents($path).
  - Data types: file
videowhisper_streaming.php:8904
  - RETRIEVAL call to file_get_contents($lastCleanFile).
  - Data types: file
videowhisper_streaming.php:9857
  - RETRIEVAL call to file($filename1).
  - Data types: file 

inc/iptv.php:501
  - STORAGE call to fwrite($myfile, $vw_ipCamera).
  - Data types: file
inc/iptv.php:970
  - STORAGE call to fwrite($myfile, $address).
  - Data types: file
videowhisper_streaming.php:1256
  - STORAGE call to fwrite($myfile, $ipCamera).
  - Data types: file
videowhisper_streaming.php:5290
  - STORAGE call to fputs($dfile, $message . "<BR>").
  - Data types: file
videowhisper_streaming.php:5425
  - STORAGE call to fputs($dfile, $message . "<BR>").
  - Data types: file
videowhisper_streaming.php:5928
  - STORAGE call to file_put_contents($path, serialize($var)).
  - Data types: file
videowhisper_streaming.php:6037
  - STORAGE call to file_put_contents($smilPath, $smilCode).
  - Data types: file
videowhisper_streaming.php:8544
  - STORAGE call to fputs($dfile, $info).
  - Data types: file
videowhisper_streaming.php:8914
  - STORAGE call to file_put_contents($lastCleanFile, $ztime).
  - Data types: file
videowhisper_streaming.php:9129
  - STORAGE call to fputs($dfile, "VideoWhisper Log for RTMP Session Control" . "
").
  - Data types: file
videowhisper_streaming.php:9130
  - STORAGE call to fputs($dfile, "Server Date: " . "
" . date("D M j G:i:s T Y") . "
").
  - Data types: file
videowhisper_streaming.php:9131
  - STORAGE call to fputs($dfile, "$_POST:" . "
" . sanitize_textarea_field(serialize($_POST))).
  - Data types: file
videowhisper_streaming.php:9441
  - STORAGE call to fputs($dfile, "
Control RTP Sessions: " . "
" . $controlSessionsS).
  - Data types: file
videowhisper_streaming.php:9711
  - STORAGE call to fputs($dfile, "
Control RTMP Users: " . "
" . $controlUsersS).
  - Data types: file
videowhisper_streaming.php:9715
  - STORAGE call to file_put_contents($options["uploadsPath"] . "/sessionsApp", $appStats).
  - Data types: file 

inc/iptv.php:171
  - object property '$session->username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/options.php:1802
  - object property '$current_user->user_nicename' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:521
  - object property '$current_user->user_email' of personal types {'email'} is found.
  - Data types: email
videowhisper_streaming.php:694
  - object property '$current_user->user_email' of personal types {'email'} is found.
  - Data types: email
videowhisper_streaming.php:954
  - object property '$current_user->user_email' of personal types {'email'} is found.
  - Data types: email
videowhisper_streaming.php:1996
  - object property '$channel->post_password' of personal types {'password'} is found.
  - Data types: password
videowhisper_streaming.php:4853
  - object property '$current_user->user_email' of personal types {'email'} is found.
  - Data types: email
videowhisper_streaming.php:5514
  - object property '$chatRow->username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:5526
  - object property '$chatRow->username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:8200
  - object property '$broadcaster->username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:9697
  - object property '$session->username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta 

inc/iptv.php:270
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
inc/iptv.php:271
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
inc/iptv.php:275
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
inc/iptv.php:275
  - variable '$addressProtocol' of personal types {'address'} is found.
  - Data types: address
inc/iptv.php:276
  - variable '$addressProtocol' of personal types {'address'} is found.
  - Data types: address
inc/iptv.php:307
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
inc/iptv.php:547
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
inc/iptv.php:558
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
inc/iptv.php:598
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
inc/iptv.php:663
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
inc/iptv.php:666
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/iptv.php:667
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
inc/iptv.php:685
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
inc/iptv.php:691
  - variable '$addressProtocol' of personal types {'address'} is found.
  - Data types: address
inc/iptv.php:691
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
inc/iptv.php:692
  - variable '$addressProtocol' of personal types {'address'} is found.
  - Data types: address
inc/iptv.php:693
  - variable '$addressProtocol' of personal types {'address'} is found.
  - Data types: address
inc/iptv.php:698
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
inc/iptv.php:698
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
inc/iptv.php:703
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
inc/iptv.php:703
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
inc/iptv.php:710
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
inc/iptv.php:743
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
inc/iptv.php:743
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
inc/iptv.php:743
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
inc/iptv.php:747
  - variable '$addressProtocol' of personal types {'address'} is found.
  - Data types: address
inc/iptv.php:751
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
inc/iptv.php:776
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
inc/iptv.php:801
  - variable '$addressProtocol' of personal types {'address'} is found.
  - Data types: address
inc/iptv.php:801
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
inc/iptv.php:851
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
inc/iptv.php:864
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
inc/iptv.php:864
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/iptv.php:868
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/iptv.php:921
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/iptv.php:957
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
inc/iptv.php:960
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
inc/iptv.php:966
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
inc/iptv.php:970
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
inc/iptv.php:972
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
inc/iptv.php:975
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
inc/iptv.php:983
  - variable '$addressProtocol' of personal types {'address'} is found.
  - Data types: address
inc/iptv.php:983
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
inc/iptv.php:984
  - variable '$addressProtocol' of personal types {'address'} is found.
  - Data types: address
inc/iptv.php:1005
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
inc/options.php:1257
  - variable '$addresses' of personal types {'address'} is found.
  - Data types: address
inc/options.php:1324
  - variable '$addresses' of personal types {'address'} is found.
  - Data types: address
inc/options.php:1361
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
inc/options.php:1362
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
inc/options.php:1365
  - variable '$addresses' of personal types {'address'} is found.
  - Data types: address
inc/options.php:1365
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
inc/options.php:1776
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/options.php:1778
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/options.php:1778
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/options.php:1811
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:687
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:698
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:705
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:709
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:725
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:729
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:730
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:947
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:958
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:965
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:969
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:1947
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:3540
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:3583
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:3843
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:4226
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:4260
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:4354
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:4388
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:4460
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:4494
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:4717
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:4751
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:5011
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:5155
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:5170
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:5176
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:5181
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:5183
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:5184
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:5246
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:5259
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:5321
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:5345
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:5354
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:5358
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:5381
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:5394
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:5475
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:6518
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:6520
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:6520
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:6522
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:8309
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:8311
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:8311
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:8317
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:8320
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:8324
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:8522
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:8522
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:8524
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:8543
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:8557
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:8575
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:8579
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:8579
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:8581
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:9067
  - variable '$username1' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:9072
  - variable '$username1' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:9181
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:9198
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:9330
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:9756
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:9826
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
videowhisper_streaming.php:9826
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta 

bp.php:76
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
bp.php:90
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
inc/iptv.php:27
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/iptv.php:76
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/iptv.php:131
  - RETRIEVAL call to get_post_meta($info["postID"], "edate", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/iptv.php:181
  - RETRIEVAL call to get_post_meta($postID, "vw_recording", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/iptv.php:270
  - RETRIEVAL call to get_post_meta($postID, "vw_ipCamera", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/iptv.php:280
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/iptv.php:356
  - RETRIEVAL call to get_post_meta($postID, "iptvPid", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/iptv.php:390
  - RETRIEVAL call to get_post_meta($postID, "iptvPid", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/iptv.php:391
  - RETRIEVAL call to get_post_meta($postID, "iptvLive", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/iptv.php:411
  - RETRIEVAL call to get_post_meta($postID, "iptvPid", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/iptv.php:439
  - RETRIEVAL call to get_post_meta($postID, "accessedUser", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/iptv.php:447
  - RETRIEVAL call to get_post_meta($postID, "accessed", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/iptv.php:455
  - RETRIEVAL call to get_post_field("post_author", $postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $field (string), 1: $post (int|WP_Post). Returns (string).
  - Data types: post_meta, post, wp_post
inc/iptv.php:456
  - RETRIEVAL call to get_user_meta($userID, "accessTime", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/iptv.php:464
  - RETRIEVAL call to get_option("userAccessTime", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/iptv.php:470
  - RETRIEVAL call to get_post_meta($postID, "stream-mode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/iptv.php:497
  - RETRIEVAL call to get_post_meta($postID, "vw_ipCamera", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/iptv.php:545
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
inc/iptv.php:554
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/iptv.php:558
  - RETRIEVAL call to get_post_meta($postID, "vw_ipCamera", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/iptv.php:584
  - RETRIEVAL call to get_post_meta($postID, "vw_lastSnapshot", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/iptv.php:638
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/iptv.php:655
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
inc/iptv.php:670
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
inc/iptv.php:671
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/iptv.php:860
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
inc/options.php:14
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/options.php:499
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/options.php:647
  - RETRIEVAL call to get_option("vwls_page_manage") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/options.php:652
  - RETRIEVAL call to get_option("vwls_page_channels") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/options.php:668
  - RETRIEVAL call to get_option("vwls_page_manage") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/options.php:668
  - RETRIEVAL call to get_option("vwls_page_manage") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/options.php:676
  - RETRIEVAL call to get_option("vwls_page_channels") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/options.php:676
  - RETRIEVAL call to get_option("vwls_page_channels") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/options.php:1081
  - RETRIEVAL call to get_option("vwls_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/options.php:1107
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
inc/options.php:1152
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
inc/options.php:1156
  - RETRIEVAL call to get_user_meta($current_user->ID, "vwls_watch", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/options.php:1157
  - RETRIEVAL call to get_user_meta($current_user->ID, "vwls_watch_update", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/options.php:1180
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/options.php:1226
  - RETRIEVAL call to get_post($removeStream) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/options.php:1284
  - RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
inc/options.php:1295
  - RETRIEVAL call to get_post_meta($post->ID, "edate", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/options.php:1296
  - RETRIEVAL call to get_post_meta($post->ID, "thumbTime", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/options.php:1298
  - RETRIEVAL call to get_post_meta($post->ID, "vw_ipCamera", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/options.php:1299
  - RETRIEVAL call to get_post_meta($post->ID, "restreamPaused", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/options.php:1302
  - RETRIEVAL call to get_post_meta($post->ID, "accessedUser", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/options.php:1303
  - RETRIEVAL call to get_post_meta($post->ID, "accessed", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/options.php:1306
  - RETRIEVAL call to get_post_field("post_author", $post->ID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $field (string), 1: $post (int|WP_Post). Returns (string).
  - Data types: post_meta, post, wp_post
inc/options.php:1307
  - RETRIEVAL call to get_userdata($userID) alters data types {'user_meta', 'user'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user_meta, user
inc/options.php:1309
  - RETRIEVAL call to get_user_meta($userID, "accessTime", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/options.php:1487
  - RETRIEVAL call to get_option("VWvideoShareOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/options.php:1515
  - RETRIEVAL call to get_post($disablePlaylist) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/options.php:1575
  - RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
inc/options.php:1769
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
inc/options.php:1783
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
inc/options.php:3074
  - RETRIEVAL call to get_option("vwls_page_manage") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/options.php:3078
  - RETRIEVAL call to get_option("vwls_page_channels") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/options.php:3191
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/options.php:3217
  - RETRIEVAL call to get_option("vwls_page_manage") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/options.php:3251
  - RETRIEVAL call to get_option("vwls_page_channels") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/options.php:3277
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/options.php:3280
  - RETRIEVAL call to get_option("vwls_page_manage") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/options.php:3288
  - RETRIEVAL call to get_option("vwls_page_channels") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/requirements.php:16
  - RETRIEVAL call to get_option("vwls_page_manage") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/requirements.php:145
  - RETRIEVAL call to get_option( . "_requirementsRemind") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/requirements.php:156
  - RETRIEVAL call to get_option( . "_requirements") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/requirements.php:366
  - RETRIEVAL call to get_option($requirement["option"]) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:80
  - RETRIEVAL call to get_user_meta($userID, "accessTime", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
videowhisper_streaming.php:86
  - RETRIEVAL call to get_option("userAccessTime", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:175
  - RETRIEVAL call to get_option("vwls_page_manage") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:176
  - RETRIEVAL call to get_option("vwls_page_channels") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:188
  - RETRIEVAL call to get_option("vwls_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:287
  - RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).
videowhisper_streaming.php:310
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:315
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
videowhisper_streaming.php:336
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:403
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:438
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:463
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:515
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
videowhisper_streaming.php:551
  - RETRIEVAL call to get_post_meta($postID, "vw_accessList", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:558
  - RETRIEVAL call to get_post_meta($postID, "vw_playlistActive", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:559
  - RETRIEVAL call to get_post_meta($postID, "vw_ipCamera", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:608
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:613
  - RETRIEVAL call to get_post_meta($video_teaser, "video-adaptive", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:638
  - RETRIEVAL call to get_post_meta($video_teaser, "video-source-file", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:673
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:684
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
videowhisper_streaming.php:739
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
videowhisper_streaming.php:756
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:873
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:931
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:944
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
videowhisper_streaming.php:994
  - RETRIEVAL call to get_post($deleteChannel) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
videowhisper_streaming.php:1063
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
videowhisper_streaming.php:1320
  - RETRIEVAL call to get_post($editPlaylist) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
videowhisper_streaming.php:1364
  - RETRIEVAL call to get_post_meta($editPlaylist, "vw_playlistActive", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:1371
  - RETRIEVAL call to get_post_meta($editPlaylist, "vw_playlistUpdated", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:1374
  - RETRIEVAL call to get_post_meta($editPlaylist, "vw_playlistLoaded", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:1526
  - RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
videowhisper_streaming.php:1614
  - RETRIEVAL call to get_post_meta($postID, "vw_ipCamera", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:1614
  - RETRIEVAL call to get_post_meta($postID, "vw_playlistActive", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:1656
  - RETRIEVAL call to get_post_meta($postID, "showImage", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:1684
  - RETRIEVAL call to get_post_meta($postID, "vw_transcode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:1698
  - RETRIEVAL call to get_post_meta($postID, "edate", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:1713
  - RETRIEVAL call to get_post_meta($postID, "vw_recording", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:1720
  - RETRIEVAL call to get_post_meta($postID, "vw_logo", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:1721
  - RETRIEVAL call to get_post_meta($postID, "vw_ads", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:1723
  - RETRIEVAL call to get_post_meta($postID, "stream-type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:1725
  - RETRIEVAL call to get_post_meta($postID, "vw_ipCamera", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:1729
  - RETRIEVAL call to get_post_meta($postID, "restreamPaused", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:1733
  - RETRIEVAL call to get_post_meta($postID, "vw_playlistActive", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:1738
  - RETRIEVAL call to get_post_meta($postID, "vw_" . $field . "List", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:1927
  - RETRIEVAL call to get_post($editPost) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
videowhisper_streaming.php:2016
  - RETRIEVAL call to get_post_meta($editPost, "vw_" . $field . "List", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:2028
  - RETRIEVAL call to get_post_meta($editPost, "vw_recording", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:2042
  - RETRIEVAL call to get_post_meta($editPost, "vw_accessPrice", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:2053
  - RETRIEVAL call to get_post_meta($editPost, "vw_logoImage", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:2060
  - RETRIEVAL call to get_post_meta($editPost, "vw_logoLink", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:2071
  - RETRIEVAL call to get_post_meta($editPost, "vw_ipCamera", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:2082
  - RETRIEVAL call to get_post_meta($editPost, "vw_adsServer", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:2095
  - RETRIEVAL call to get_post_meta($editPost, "showImage", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:2106
  - RETRIEVAL call to get_post_meta($editPost, "eventTitle", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:2112
  - RETRIEVAL call to get_post_meta($editPost, "eventStart", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:2115
  - RETRIEVAL call to get_post_meta($editPost, "eventStartTime", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:2120
  - RETRIEVAL call to get_post_meta($editPost, "eventEnd", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:2123
  - RETRIEVAL call to get_post_meta($editPost, "eventEndTime", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:2128
  - RETRIEVAL call to get_post_meta($editPost, "eventDescription", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:2201
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:2345
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:2391
  - RETRIEVAL call to get_post_meta($postID, "vw_ipCamera", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:2396
  - RETRIEVAL call to get_post_meta($postID, "stream-protocol", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:2397
  - RETRIEVAL call to get_post_meta($postID, "stream-type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:2398
  - RETRIEVAL call to get_post_meta($postID, "stream-mode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:2464
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:2503
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:2522
  - RETRIEVAL call to get_post_meta($postID, "stream-protocol", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:2523
  - RETRIEVAL call to get_post_meta($postID, "stream-type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:2563
  - RETRIEVAL call to get_post_field("post_author", $postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $field (string), 1: $post (int|WP_Post). Returns (string).
  - Data types: post_meta, post, wp_post
videowhisper_streaming.php:2626
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
videowhisper_streaming.php:2715
  - RETRIEVAL call to get_post_meta($postID, "stream-protocol", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:2721
  - RETRIEVAL call to get_post_meta($postID, "stream-codec-video", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:2722
  - RETRIEVAL call to get_post_meta($postID, "stream-codec-audio", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:2735
  - RETRIEVAL call to get_post_meta($postID, "stream-hls", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:2756
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:2766
  - RETRIEVAL call to get_post_meta($postID, "stream-protocol", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:2767
  - RETRIEVAL call to get_post_meta($postID, "stream-type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:2768
  - RETRIEVAL call to get_post_meta($postID, "stream-hls", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:2770
  - RETRIEVAL call to get_post_meta($postID, "vw_transcode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:2771
  - RETRIEVAL call to get_post_meta($postID, "stream-codec-video", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:2773
  - RETRIEVAL call to get_post_meta($postID, "vw_ipCamera", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:2845
  - RETRIEVAL call to get_post_field("post_author", $postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $field (string), 1: $post (int|WP_Post). Returns (string).
  - Data types: post_meta, post, wp_post
videowhisper_streaming.php:2933
  - RETRIEVAL call to get_post_meta($postID, "stream-codec-video", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:2936
  - RETRIEVAL call to get_post_meta($postID, "stream-codec-audio", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:2998
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:3049
  - RETRIEVAL call to get_post_meta($postID, "stream-protocol", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:3051
  - RETRIEVAL call to get_post_meta($postID, "stream-hls", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:3068
  - RETRIEVAL call to get_post_meta($postID, "stream-codec-audio", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:3069
  - RETRIEVAL call to get_post_meta($postID, "stream-codec-video", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:3071
  - RETRIEVAL call to get_post_meta($postID, "edate", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:3073
  - RETRIEVAL call to get_post_meta($postID, "offline_video", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:3141
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:3190
  - RETRIEVAL call to get_post_meta($postID, "stream-protocol", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:3192
  - RETRIEVAL call to get_post_meta($postID, "stream-hls", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:3215
  - RETRIEVAL call to get_post_meta($postID, "stream-codec-video", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $key (string), 2: $single (bool). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:3216
  - RETRIEVAL call to get_post_meta($postID, "stream-codec-audio", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:3219
  - RETRIEVAL call to get_post_meta($postID, "edate", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:3221
  - RETRIEVAL call to get_post_meta($postID, "offline_video", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:3368
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:3417
  - RETRIEVAL call to get_post_meta($postID, "vw_ipCamera", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:3425
  - RETRIEVAL call to get_post_meta($postID, "stream-protocol", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:3426
  - RETRIEVAL call to get_post_meta($postID, "stream-type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:3427
  - RETRIEVAL call to get_post_meta($postID, "stream-mode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:3443
  - RETRIEVAL call to get_post_meta($postID, "edate", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:3530
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:3538
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
videowhisper_streaming.php:3594
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
videowhisper_streaming.php:3785
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:3841
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
videowhisper_streaming.php:3867
  - RETRIEVAL call to get_post_meta($postID, "stream-protocol", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:3944
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:4175
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:4192
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:4215
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:4223
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
videowhisper_streaming.php:4271
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
videowhisper_streaming.php:4343
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:4351
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
videowhisper_streaming.php:4399
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
videowhisper_streaming.php:4449
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:4457
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
videowhisper_streaming.php:4505
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
videowhisper_streaming.php:4706
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:4714
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
videowhisper_streaming.php:4766
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
videowhisper_streaming.php:5016
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:5020
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
videowhisper_streaming.php:5106
  - RETRIEVAL call to get_user_by("login", $u) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user_meta, user
videowhisper_streaming.php:5136
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:5152
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
videowhisper_streaming.php:5160
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
videowhisper_streaming.php:5213
  - RETRIEVAL call to get_user_meta($current_user->ID, "vwTipLast", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
videowhisper_streaming.php:5455
  - RETRIEVAL call to get_user_by("login", $userRow->session) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user_meta, user
videowhisper_streaming.php:5524
  - RETRIEVAL call to get_user_by($userName, $userRow->session) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user_meta, user
videowhisper_streaming.php:5526
  - RETRIEVAL call to get_user_by("login", $chatRow->username) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user_meta, user
videowhisper_streaming.php:5573
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:5751
  - RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
videowhisper_streaming.php:5767
  - RETRIEVAL call to get_post_meta($item->ID, "edate", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:5781
  - RETRIEVAL call to get_post_meta($item->ID, "rateStarReview_rating", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:5796
  - RETRIEVAL call to get_post_meta($item->ID, "showImage", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:5945
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:5980
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:6042
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:6077
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
videowhisper_streaming.php:6083
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
videowhisper_streaming.php:6092
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:6313
  - RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
videowhisper_streaming.php:6325
  - RETRIEVAL call to get_post_meta($video_id, "video-source-file", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:6329
  - RETRIEVAL call to get_post_meta($video_id, "video-adaptive", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:6506
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:6515
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
videowhisper_streaming.php:6596
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:6632
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
videowhisper_streaming.php:6634
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
videowhisper_streaming.php:6642
  - RETRIEVAL call to get_option("vwls_page_manage") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:6718
  - RETRIEVAL call to get_post_meta($postID, "vw_ipCamera", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:6720
  - RETRIEVAL call to get_post_meta($postID, "vw_playlistActive", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:6772
  - RETRIEVAL call to get_post_meta($postID, "accessedUser", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:6779
  - RETRIEVAL call to get_post_meta($postID, "accessed", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:6790
  - RETRIEVAL call to get_post_meta($postID, "edate", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:6796
  - RETRIEVAL call to get_post_meta($postID, "maxViewers", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:6801
  - RETRIEVAL call to get_post_meta($postID, "maxDate", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:6812
  - RETRIEVAL call to get_post_meta($postID, "wtime", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:6844
  - RETRIEVAL call to get_post_meta($postID, "eventTitle", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:6846
  - RETRIEVAL call to get_post_meta($postID, "eventStart", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:6847
  - RETRIEVAL call to get_post_meta($postID, "eventEnd", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:6848
  - RETRIEVAL call to get_post_meta($postID, "eventStartTime", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:6849
  - RETRIEVAL call to get_post_meta($postID, "eventEndTime", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:6851
  - RETRIEVAL call to get_post_meta($postID, "eventDescription", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:6853
  - RETRIEVAL call to get_post_meta($postID, "showImage", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:6931
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:6944
  - RETRIEVAL call to get_post_meta($post_id, "edate", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:7016
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:7100
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:7156
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:7213
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:7227
  - RETRIEVAL call to get_user_meta($userID, "vw_ppv_tempt", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
videowhisper_streaming.php:7230
  - RETRIEVAL call to get_user_meta($userID, "vw_ppv_temp", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
videowhisper_streaming.php:7251
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:7279
  - RETRIEVAL call to get_post_meta($postID, "myCRED_sell_content", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:7565
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:7604
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:7606
  - RETRIEVAL call to get_option("vwls_page_channels") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:7700
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:7822
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
videowhisper_streaming.php:7824
  - RETRIEVAL call to get_option("vwls_page_manage") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:7839
  - RETRIEVAL call to get_option("vwls_page_channels") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:7864
  - RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
videowhisper_streaming.php:7916
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:7948
  - RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
videowhisper_streaming.php:7955
  - RETRIEVAL call to get_post_meta($post->ID, "restreamPaused", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:7999
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:8205
  - RETRIEVAL call to get_post_meta($postID, "stream-codec-video", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:8210
  - RETRIEVAL call to get_post_meta($postID, "stream-protocol", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:8215
  - RETRIEVAL call to get_post_meta($postID, "stream-codec-detect", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:8221
  - RETRIEVAL call to get_post_meta($postID, "stream-updated", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:8229
  - RETRIEVAL call to get_post_meta($postID, "stream-codec-audio", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:8229
  - RETRIEVAL call to get_post_meta($postID, "stream-hls", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:8231
  - RETRIEVAL call to get_post_meta($postID, "stream-mode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:8236
  - RETRIEVAL call to get_post_meta($postID, "stream-type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:8266
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:8306
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
videowhisper_streaming.php:8525
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:8603
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:8636
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:8665
  - RETRIEVAL call to get_post_meta($postID, "restreamPaused", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:8671
  - RETRIEVAL call to get_post_meta($postID, "stream-protocol", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:8672
  - RETRIEVAL call to get_post_meta($postID, "stream-type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:8673
  - RETRIEVAL call to get_post_meta($postID, "vw_ipCamera", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:8734
  - RETRIEVAL call to get_post_meta($postID, "thumbTime", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:8848
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:8863
  - RETRIEVAL call to get_post_meta($postID, "maxViewers", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
videowhisper_streaming.php:8887
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:8953
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:8958
  - RETRIEVAL call to get_user_meta($user->ID, "vwls_watch_update", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
videowhisper_streaming.php:8966
  - RETRIEVAL call to get_user_meta($user->ID, "vwls_watch", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
videowhisper_streaming.php:9062
  - RETRIEVAL call to get_currentuserinfo() alters data types {'user_meta', 'user'}. Returns (bool|WP_User).
  - Data types: user_meta, user
videowhisper_streaming.php:9064
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:9089
  - RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
videowhisper_streaming.php:9174
  - RETRIEVAL call to get_userdata($userID) alters data types {'user_meta', 'user'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user_meta, user
videowhisper_streaming.php:9187
  - RETRIEVAL call to get_post($channel_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
videowhisper_streaming.php:9384
  - RETRIEVAL call to get_user_by("login", $u) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user_meta, user
videowhisper_streaming.php:9654
  - RETRIEVAL call to get_user_by("login", $u) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user_meta, user
videowhisper_streaming.php:9783
  - RETRIEVAL call to get_post_field("post_author", $postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $field (string), 1: $post (int|WP_Post). Returns (string).
  - Data types: post_meta, post, wp_post 

bp.php:105
  - STORAGE call to wp_insert_post($post). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
bp.php:109
  - STORAGE call to wp_update_post($post). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
inc/iptv.php:330
  - STORAGE call to update_post_meta($postID, "stream-protocol", "rtmp") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/iptv.php:331
  - STORAGE call to update_post_meta($postID, "stream-mode", "iptv") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/iptv.php:333
  - STORAGE call to update_post_meta($postID, "iptvPid", $pid) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/iptv.php:334
  - STORAGE call to update_post_meta($postID, "iptvStart", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/iptv.php:335
  - STORAGE call to update_post_meta($postID, "iptvLive", 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/iptv.php:363
  - STORAGE call to update_post_meta($postID, "iptvStop", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/iptv.php:364
  - STORAGE call to update_post_meta($postID, "iptvLive", 0) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/iptv.php:365
  - STORAGE call to update_post_meta($postID, "iptvPid", 0) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/iptv.php:394
  - STORAGE call to update_post_meta($postID, "iptvLive", 0) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/iptv.php:400
  - STORAGE call to update_post_meta($postID, "iptvRunning", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/iptv.php:403
  - STORAGE call to update_post_meta($postID, "iptvLive", 0) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/iptv.php:508
  - STORAGE call to update_post_meta($postID, "restreamPaused", $paused) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/iptv.php:868
  - STORAGE call to register_new_user($username, $password) alters data types {'user_meta', 'user'}. Passed arguments: 0: $user_login (string), 1: $user_email (string). Returns (int|WP_Error).
  - Data types: user_meta, user
inc/iptv.php:903
  - STORAGE call to wp_update_post($post). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
inc/iptv.php:905
  - STORAGE call to wp_insert_post($post). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
inc/iptv.php:946
  - STORAGE call to update_post_meta($postID, "vw_lastSnapshot", $snapshot) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/iptv.php:980
  - STORAGE call to update_post_meta($postID, "stream-hls", $label) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/iptv.php:984
  - STORAGE call to update_post_meta($postID, "stream-protocol", $addressProtocol) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/iptv.php:985
  - STORAGE call to update_post_meta($postID, "stream-mode", "stream") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/iptv.php:1005
  - STORAGE call to update_post_meta($postID, "vw_ipCamera", $address) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/iptv.php:1006
  - STORAGE call to update_post_meta($postID, "stream-type", "restream") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/iptv.php:1008
  - STORAGE call to update_post_meta($postID, "edate", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/options.php:505
  - STORAGE call to update_option("VWliveStreamingOptions", $adminOptions) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/options.php:539
  - STORAGE call to update_option("VWliveStreamingOptions", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/options.php:610
  - STORAGE call to update_option("VWliveStreamingOptions", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/options.php:1078
  - STORAGE call to update_option("VWliveStreamingOptions", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/options.php:1244
  - STORAGE call to update_post_meta($roomPost->ID, "vw_ipCamera", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/options.php:1521
  - STORAGE call to update_post_meta($roomPost->ID, "vw_playlistUpdated", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/options.php:1522
  - STORAGE call to update_post_meta($roomPost->ID, "vw_playlistActive", "0") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/options.php:2722
  - STORAGE call to update_option("VWliveStreamingOptions", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/options.php:3222
  - STORAGE call to wp_insert_post($page). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
inc/options.php:3223
  - STORAGE call to update_option("vwls_page_manage", $pageid) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/options.php:3256
  - STORAGE call to wp_insert_post($page). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
inc/options.php:3257
  - STORAGE call to update_option("vwls_page_channels", $pageid) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/options.php:3282
  - STORAGE call to wp_delete_post($page_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post_meta, post, wp_post
inc/options.php:3283
  - STORAGE call to update_option("vwls_page_manage", -1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/options.php:3290
  - STORAGE call to wp_delete_post($page_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post_meta, post, wp_post
inc/options.php:3291
  - STORAGE call to update_option("vwls_page_channels", -1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/requirements.php:249
  - STORAGE call to update_option( . "_requirementsRemind", time() + 86400) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/requirements.php:301
  - STORAGE call to update_option( . "_requirements", $status) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
videowhisper_streaming.php:82
  - STORAGE call to update_user_meta($userID, "accessTime", $ztime) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
videowhisper_streaming.php:88
  - STORAGE call to update_option("userAccessTime", $ztime) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
videowhisper_streaming.php:290
  - STORAGE call to add_option("vwls_db_version", $vw_db_version) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
videowhisper_streaming.php:292
  - STORAGE call to update_option("vwls_db_version", $vw_db_version) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
videowhisper_streaming.php:736
  - STORAGE call to wp_insert_post($post). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
videowhisper_streaming.php:1074
  - STORAGE call to wp_insert_post($post). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
videowhisper_streaming.php:1131
  - STORAGE call to update_post_meta($postID, "hasPicture", $picType) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:1132
  - STORAGE call to update_post_meta($postID, "hasSnapshot", 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:1133
  - STORAGE call to update_post_meta($postID, "edate", time() - 60) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:1164
  - STORAGE call to update_post_meta($postID, "showImage", $showImage) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:1169
  - STORAGE call to update_post_meta($postID, "eventTitle", sanitize_text_field($_POST["eventTitle"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:1170
  - STORAGE call to update_post_meta($postID, "eventStart", sanitize_text_field($_POST["eventStart"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:1171
  - STORAGE call to update_post_meta($postID, "eventEnd", sanitize_text_field($_POST["eventEnd"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:1172
  - STORAGE call to update_post_meta($postID, "eventStartTime", sanitize_text_field($_POST["eventStartTime"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:1173
  - STORAGE call to update_post_meta($postID, "eventEndTime", sanitize_text_field($_POST["eventEndTime"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:1174
  - STORAGE call to update_post_meta($postID, "eventDescription", sanitize_text_field($_POST["eventDescription"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:1178
  - STORAGE call to update_post_meta($postID, "disableSidebar", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:1183
  - STORAGE call to update_post_meta($postID, "vw_recording", $value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:1186
  - STORAGE call to update_post_meta($postID, "vw_recording", $options["recordingFFmpeg"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:1191
  - STORAGE call to update_post_meta($postID, "vw_transcode", "1") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:1193
  - STORAGE call to update_post_meta($postID, "vw_transcode", "0") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:1198
  - STORAGE call to update_post_meta($postID, "vw_logo", "hide") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:1200
  - STORAGE call to update_post_meta($postID, "vw_logo", "global") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:1206
  - STORAGE call to update_post_meta($postID, "vw_logoImage", $logoImage) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:1209
  - STORAGE call to update_post_meta($postID, "vw_logoLink", $logoLink) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:1211
  - STORAGE call to update_post_meta($postID, "vw_logo", "custom") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:1216
  - STORAGE call to update_post_meta($postID, "vw_ads", "hide") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:1218
  - STORAGE call to update_post_meta($postID, "vw_ads", "global") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:1224
  - STORAGE call to update_post_meta($postID, "vw_adsServer", $logoImage) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:1226
  - STORAGE call to update_post_meta($postID, "vw_ads", "custom") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:1270
  - STORAGE call to update_post_meta($postID, "vw_ipCamera", $ipCamera) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:1272
  - STORAGE call to update_post_meta($postID, "stream-protocol", $protocol) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:1273
  - STORAGE call to update_post_meta($postID, "stream-type", "restream") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:1274
  - STORAGE call to update_post_meta($postID, "stream-mode", "stream") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:1280
  - STORAGE call to update_post_meta($postID, "vw_ipCamera", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:1285
  - STORAGE call to update_post_meta($postID, "vw_playlistActive", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:1292
  - STORAGE call to update_post_meta($postID, "vw_" . $field . "List", $value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:1299
  - STORAGE call to update_post_meta($postID, "vw_accessPrice", $accessPrice) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:1309
  - STORAGE call to update_post_meta($postID, "myCRED_sell_content", $mCa) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:1311
  - STORAGE call to delete_post_meta($postID, "myCRED_sell_content") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
videowhisper_streaming.php:1355
  - STORAGE call to update_post_meta($editPlaylist, "vw_playlistActive", $playlistActive$_POST["playlistActive"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:1357
  - STORAGE call to update_post_meta($editPlaylist, "vw_playlistUpdated", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:1359
  - STORAGE call to update_post_meta($editPlaylist, "stream-type", "playlist") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:1360
  - STORAGE call to update_post_meta($editPlaylist, "stream-protocol", "rtmp") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:1691
  - STORAGE call to update_post_meta($postID, "vw_transcode", $new_vw_transcode) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:2593
  - STORAGE call to update_post_meta($postID, "stream-webrtc", $stream_webrtc) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:2595
  - STORAGE call to update_post_meta($postID, "transcoding-webrtc", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:2664
  - STORAGE call to update_post_meta($postID, "stream-codec-video", strtolower($videoCodec)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:2676
  - STORAGE call to update_post_meta($postID, "stream-codec-audio", strtolower($audioCodec)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:2679
  - STORAGE call to update_post_meta($postID, "stream-codec-detect", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:2699
  - STORAGE call to update_post_meta($postID, "stream-hls", $stream_hls) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:2704
  - STORAGE call to update_post_meta($postID, "transcoding-hls", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:2791
  - STORAGE call to update_post_meta($postID, "stream-hls", $stream) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:2888
  - STORAGE call to update_post_meta($postID, "stream-codec-video", strtolower($videoCodec)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:2900
  - STORAGE call to update_post_meta($postID, "stream-codec-audio", strtolower($audioCodec)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:2904
  - STORAGE call to update_post_meta($postID, "stream-codec-detect", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:2947
  - STORAGE call to update_post_meta($postID, "stream-hls", $stream) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:2984
  - STORAGE call to update_post_meta($postID, "stream-hls", $stream_hls) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:3616
  - STORAGE call to update_post_meta($postID, "stream-protocol", "rtsp") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:3617
  - STORAGE call to update_post_meta($postID, "stream-type", "webrtc") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:3620
  - STORAGE call to update_post_meta($postID, "stream-mode", "safari_pc") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:3622
  - STORAGE call to update_post_meta($postID, "stream-mode", "direct") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:5098
  - STORAGE call to update_post_meta($postID, "wtime", $channel->wtime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:5118
  - STORAGE call to update_post_meta($postID, "accessedUser", $ztime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:5120
  - STORAGE call to update_post_meta($postID, "accessed", $ztime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:5324
  - STORAGE call to update_user_meta($current_user->ID, "vwTipLast", time()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
videowhisper_streaming.php:6774
  - STORAGE call to update_post_meta($postID, "accessedUser", $ztime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:6781
  - STORAGE call to update_post_meta($postID, "accessed", $ztime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:8281
  - STORAGE call to wp_delete_post($postID, true) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post_meta, post, wp_post
videowhisper_streaming.php:8293
  - STORAGE call to update_option("VWliveStreamingOptions", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
videowhisper_streaming.php:8588
  - STORAGE call to update_post_meta($postID, "edate", $ztime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:8742
  - STORAGE call to update_post_meta($postID, "edate", $ztime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:8743
  - STORAGE call to update_post_meta($postID, "vw_lastSnapshot", $filename) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:8782
  - STORAGE call to update_post_meta($postID, "hasSnapshot", $picType) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:8783
  - STORAGE call to update_post_meta($postID, "thumbTime", $ztime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:8860
  - STORAGE call to update_post_meta($postID, "viewers", $viewers) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:8861
  - STORAGE call to update_post_meta($postID, "viewersUpdate", $ztime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:8865
  - STORAGE call to update_post_meta($postID, "maxViewers", $viewers) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:8866
  - STORAGE call to update_post_meta($postID, "maxDate", $ztime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:8961
  - STORAGE call to update_user_meta($user->ID, "vwls_watch_update", time()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
videowhisper_streaming.php:8962
  - STORAGE call to update_user_meta($user->ID, "vwls_watch", $dS) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
videowhisper_streaming.php:8968
  - STORAGE call to update_user_meta($user->ID, "vwls_watch", $currentWatch) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
videowhisper_streaming.php:9275
  - STORAGE call to update_post_meta($postID, "edate", $ztime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:9276
  - STORAGE call to update_post_meta($postID, "btime", $btime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:9278
  - STORAGE call to update_post_meta($postID, "stream-protocol", "rtsp") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:9279
  - STORAGE call to update_post_meta($postID, "stream-type", "webrtc") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:9380
  - STORAGE call to update_post_meta($postID, "wtime", $wtime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:9552
  - STORAGE call to update_post_meta($postID, "edate", $ztime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:9553
  - STORAGE call to update_post_meta($postID, "btime", $channel->btime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:9555
  - STORAGE call to update_post_meta($postID, "stream-protocol", "rtmp") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:9556
  - STORAGE call to update_post_meta($postID, "stream-type", "external") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:9557
  - STORAGE call to update_post_meta($postID, "stream-updated", $ztime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:9650
  - STORAGE call to update_post_meta($postID, "wtime", $channel->wtime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:9831
  - STORAGE call to update_post_meta($postID, "stream-protocol", "rtmp") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:9832
  - STORAGE call to update_post_meta($postID, "stream-type", "external") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:9833
  - STORAGE call to update_post_meta($postID, "stream-updated", $ztime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
videowhisper_streaming.php:9886
  - STORAGE call to update_option("VWliveStreamingOptions", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option 

inc/options.php:3282
  - DELETION call to wp_delete_post($page_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post_meta, post, wp_post
inc/options.php:3290
  - DELETION call to wp_delete_post($page_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post_meta, post, wp_post
videowhisper_streaming.php:1311
  - DELETION call to delete_post_meta($postID, "myCRED_sell_content") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
videowhisper_streaming.php:6570
  - DELETION call to wp_delete_attachment($file->ID) alters data types {'attachment', 'attachment_meta'}. Passed arguments: 0: $post_id (int). Returns (WP_Post|false|null).
  - Data types: attachment, attachment_meta
videowhisper_streaming.php:8281
  - DELETION call to wp_delete_post($postID, true) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post_meta, post, wp_post 

By data type:
address
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	ArrayElementDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
attachment
	DeletionDetector.wp_delete_attachment($file->ID) - {'attachment', 'attachment_meta'}
attachment_meta
	DeletionDetector.wp_delete_attachment($file->ID) - {'attachment', 'attachment_meta'}
email
	ArrayElementDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
file
	PHPStorageDetector.fputs($dfile, "
Control RTMP Users: " . "
" . $controlUsersS) - {'file'}
	PHPStorageDetector.fputs($dfile, $message . "<BR>") - {'file'}
	PHPStorageDetector.fputs($dfile, "Server Date: " . "
" . date("D M j G:i:s T Y") . "
") - {'file'}
	PHPRetrievalDetector.file($filename1) - {'file'}
	PHPRetrievalDetector.file_get_contents($path) - {'file'}
	PHPRetrievalDetector.file_get_contents($smilPath) - {'file'}
	PHPRetrievalDetector.file_get_contents($filename) - {'file'}
	PHPRetrievalDetector.file_get_contents($log["file"]) - {'file'}
	PHPStorageDetector.fputs($dfile, "$_POST:" . "
" . sanitize_textarea_field(serialize($_POST))) - {'file'}
	PHPStorageDetector.file_put_contents($lastCleanFile, $ztime) - {'file'}
	PHPStorageDetector.file_put_contents($options["uploadsPath"] . "/sessionsApp", $appStats) - {'file'}
	PHPStorageDetector.fputs($dfile, "VideoWhisper Log for RTMP Session Control" . "
") - {'file'}
	PHPStorageDetector.fputs($dfile, $info) - {'file'}
	PHPStorageDetector.fwrite($myfile, $ipCamera) - {'file'}
	PHPStorageDetector.file_put_contents($path, serialize($var)) - {'file'}
	PHPStorageDetector.fputs($dfile, $message . "<BR>") - {'file'}
	PHPStorageDetector.fwrite($myfile, $vw_ipCamera) - {'file'}
	PHPStorageDetector.fwrite($myfile, $address) - {'file'}
	PHPStorageDetector.fputs($dfile, "
Control RTP Sessions: " . "
" . $controlSessionsS) - {'file'}
	PHPStorageDetector.file_put_contents($smilPath, $smilCode) - {'file'}
	PHPRetrievalDetector.file_get_contents($lastCleanFile) - {'file'}
	PHPRetrievalDetector.file_get_contents($log["file"]) - {'file'}
	PHPRetrievalDetector.file_get_contents($log["file"]) - {'file'}
	PHPRetrievalDetector.file_get_contents($log["file"]) - {'file'}
	PHPRetrievalDetector.file_get_contents($file) - {'file'}
	PHPRetrievalDetector.file_get_contents($log["file"]) - {'file'}
none
	WordPressRetrievalDetector.get_posts($args) - set()
	PHPIncludedDetector.(unknown) - set()
	WordPressRetrievalDetector.get_posts($args) - set()
	WordPressRetrievalDetector.get_posts($args) - set()
	PHPIncludedDetector.(unknown) - set()
	WordPressRetrievalDetector.get_posts($args) - set()
	WordPressStorageDetector.wp_update_post($post) - set()
	WordPressRetrievalDetector.dbDelta($sql) - set()
	WordPressRetrievalDetector.get_posts($args) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	WordPressRetrievalDetector.get_posts($args) - set()
	WordPressStorageDetector.wp_update_post($post) - set()
	WordPressStorageDetector.wp_insert_post($post) - set()
	PHPIncludedDetector.(unknown) - set()
	WordPressStorageDetector.wp_insert_post($post) - set()
	PHPIncludedDetector.(unknown) - set()
	WordPressStorageDetector.wp_insert_post($page) - set()
	PHPIncludedDetector.(unknown) - set()
	WordPressStorageDetector.wp_insert_post($page) - set()
	PHPIncludedDetector.(unknown) - set()
	WordPressRetrievalDetector.get_posts($args) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	WordPressStorageDetector.wp_insert_post($post) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	WordPressStorageDetector.wp_insert_post($post) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
option
	WordPressRetrievalDetector.get_option( . "_requirements") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressStorageDetector.update_option("VWliveStreamingOptions", $options) - {'option'}
	WordPressRetrievalDetector.get_option("vwls_page_channels") - {'option'}
	WordPressStorageDetector.update_option("VWliveStreamingOptions", $options) - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("vwls_page_channels") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("vwls_page_manage") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressStorageDetector.update_option("VWliveStreamingOptions", $options) - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressStorageDetector.update_option("vwls_db_version", $vw_db_version) - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("vwls_db_version") - {'option'}
	WordPressStorageDetector.update_option("VWliveStreamingOptions", $options) - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("vwls_page_manage") - {'option'}
	WordPressRetrievalDetector.get_option("vwls_page_manage") - {'option'}
	WordPressRetrievalDetector.get_option("vwls_page_channels") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("vwls_page_channels") - {'option'}
	WordPressRetrievalDetector.get_option("vwls_page_channels") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("vwls_db_version") - {'option'}
	WordPressRetrievalDetector.get_option("vwls_page_channels") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("vwls_page_manage") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressStorageDetector.update_option("VWliveStreamingOptions", $options) - {'option'}
	WordPressStorageDetector.update_option("VWliveStreamingOptions", $options) - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressStorageDetector.update_option("vwls_page_manage", -1) - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressStorageDetector.update_option("vwls_page_manage", $pageid) - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("vwls_page_channels") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressStorageDetector.update_option("vwls_page_channels", $pageid) - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressStorageDetector.update_option("VWliveStreamingOptions", $adminOptions) - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressStorageDetector.update_option("vwls_page_channels", -1) - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("vwls_page_manage") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("vwls_page_manage") - {'option'}
	WordPressRetrievalDetector.get_option("vwls_page_channels") - {'option'}
	WordPressRetrievalDetector.get_option($requirement["option"]) - {'option'}
	WordPressRetrievalDetector.get_option("userAccessTime", 0) - {'option'}
	WordPressRetrievalDetector.get_option("vwls_page_manage") - {'option'}
	WordPressRetrievalDetector.get_option("vwls_page_channels") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("vwls_page_manage") - {'option'}
	WordPressRetrievalDetector.get_option("vwls_page_manage") - {'option'}
	WordPressRetrievalDetector.get_option("vwls_page_manage") - {'option'}
	WordPressRetrievalDetector.get_option( . "_requirementsRemind") - {'option'}
	WordPressRetrievalDetector.get_option("userAccessTime", 0) - {'option'}
	WordPressStorageDetector.add_option("vwls_db_version", $vw_db_version) - {'option'}
	WordPressStorageDetector.update_option( . "_requirementsRemind", time() + 86400) - {'option'}
	WordPressRetrievalDetector.get_option("VWvideoShareOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressStorageDetector.update_option( . "_requirements", $status) - {'option'}
	WordPressStorageDetector.update_option("userAccessTime", $ztime) - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWliveStreamingOptions") - {'option'}
password
	PropertyDetector.(unknown) - {'password'}
post
	WordPressRetrievalDetector.get_post($editPlaylist) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_field("post_author", $postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($editPost) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_field("post_author", $postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	DeletionDetector.wp_delete_post($page_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($removeStream) - {'post_meta', 'post', 'wp_post'}
	DeletionDetector.wp_delete_post($page_id) - {'post_meta', 'post', 'wp_post'}
	DeletionDetector.wp_delete_post($postID, true) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.wp_delete_post($page_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($deleteChannel) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.wp_delete_post($page_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_field("post_author", $post->ID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_field("post_author", $postID) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.wp_delete_post($postID, true) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_field("post_author", $postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($channel_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($disablePlaylist) - {'post_meta', 'post', 'wp_post'}
post_meta
	WordPressStorageDetector.update_post_meta($postID, "stream-updated", $ztime) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_transcode", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($editPlaylist) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($postID, "edate", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "showImage", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "accessedUser", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "maxDate", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_field("post_author", $postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($editPost, "showImage", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_accessList", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_playlistActive", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-hls", $stream) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($editPlaylist, "vw_playlistActive", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-hls", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_ipCamera", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "wtime", true) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($postID, "myCRED_sell_content") - {'post_meta'}
	WordPressRetrievalDetector.get_post($editPost) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "restreamPaused", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "eventTitle", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($editPlaylist, "vw_playlistUpdated", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "accessed", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "thumbTime", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "vw_ipCamera", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "edate", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($editPlaylist, "vw_playlistLoaded", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_field("post_author", $postID) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($editPlaylist, "vw_playlistActive", $playlistActive$_POST["playlistActive"]) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($item->ID, "edate", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($postID, "stream-mode", "stream") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "offline_video", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_ipCamera", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-hls", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-protocol", $addressProtocol) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-hls", $stream_hls) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-hls", $label) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-codec-video", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($roomPost->ID, "vw_ipCamera", "") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-codec-video", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "iptvLive", 0) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "vw_lastSnapshot", $filename) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-codec-video", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "vw_ipCamera", $address) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-type", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "iptvRunning", time()) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-protocol", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-protocol", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-codec-audio", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "offline_video", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "eventDescription", sanitize_text_field($_POST["eventDescription"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "edate", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "vw_recording", $value) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_playlistActive", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-protocol", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-protocol", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "restreamPaused", $paused) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-codec-video", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "maxViewers", $viewers) - {'post_meta'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-hls", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "restreamPaused", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($postID, "eventTitle", sanitize_text_field($_POST["eventTitle"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($editPost, "eventEndTime", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($postID, "showImage", $showImage) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($editPost, "eventEnd", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_lastSnapshot", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "vw_ipCamera", $ipCamera) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "accessedUser", $ztime) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-protocol", "rtsp") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-type", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-protocol", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-protocol", $protocol) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "iptvPid", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "btime", $btime) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "eventEndTime", sanitize_text_field($_POST["eventEndTime"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "vw_recording", $options["recordingFFmpeg"]) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "iptvPid", 0) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "eventDescription", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "eventStartTime", sanitize_text_field($_POST["eventStartTime"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "iptvPid", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($editPost, "vw_accessPrice", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_ipCamera", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-codec-audio", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "maxDate", $ztime) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($video_teaser, "video-source-file", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "eventStart", sanitize_text_field($_POST["eventStart"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($editPost, "vw_recording", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-protocol", "rtmp") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-protocol", "rtmp") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_ipCamera", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($editPost, "eventStartTime", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-webrtc", $stream_webrtc) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "eventEnd", sanitize_text_field($_POST["eventEnd"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($editPost, "vw_" . $field . "List", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "iptvPid", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "iptvLive", 0) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "edate", $ztime) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "iptvLive", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($video_id, "video-source-file", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "vw_logo", "global") - {'post_meta'}
	DeletionDetector.wp_delete_post($page_id) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($postID, "iptvStop", time()) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-codec-audio", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "vw_ads", "custom") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-type", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "iptvPid", $pid) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($editPlaylist, "vw_playlistUpdated", time()) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "edate", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "vw_ads", "global") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "edate", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-protocol", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($removeStream) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($postID, "vw_ads", "hide") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "showImage", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "accessedUser", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-mode", "iptv") - {'post_meta'}
	DeletionDetector.wp_delete_post($page_id) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($postID, "thumbTime", $ztime) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-updated", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_recording", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "accessedUser", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "edate", $ztime) - {'post_meta'}
	DeletionDetector.wp_delete_post($postID, true) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($postID, "stream-updated", $ztime) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-hls", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($post_id, "edate", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "iptvStart", time()) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "vw_logoLink", $logoLink) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_ipCamera", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-hls", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($postID, "stream-protocol", "rtmp") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "vw_logoImage", $logoImage) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($video_id, "video-adaptive", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "wtime", $channel->wtime) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "viewers", $viewers) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-protocol", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-mode", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "vw_logo", "custom") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_ipCamera", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($postID, "vw_adsServer", $logoImage) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "edate", $ztime) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($video_teaser, "video-adaptive", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-type", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "myCRED_sell_content", true) - {'post_meta'}
	WordPressStorageDetector.wp_delete_post($page_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-protocol", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "edate", time() - 60) - {'post_meta'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($postID, "vw_lastSnapshot", $snapshot) - {'post_meta'}
	WordPressRetrievalDetector.get_post($deleteChannel) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($editPost, "vw_logoImage", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "disableSidebar", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "edate", time()) - {'post_meta'}
	WordPressStorageDetector.wp_delete_post($page_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($item->ID, "rateStarReview_rating", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($editPost, "vw_logoLink", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-codec-video", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($editPost, "vw_ipCamera", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($roomPost->ID, "vw_playlistUpdated", time()) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "viewersUpdate", $ztime) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-type", "restream") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($editPost, "vw_adsServer", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "eventStartTime", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "wtime", $channel->wtime) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($roomPost->ID, "vw_playlistActive", "0") - {'post_meta'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-codec-detect", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "eventEnd", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "eventStart", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-protocol", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_field("post_author", $post->ID) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($postID, "stream-codec-video", strtolower($videoCodec)) - {'post_meta'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($postID, "stream-type", "external") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_ipCamera", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "iptvLive", 1) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "btime", $channel->btime) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "transcoding-hls", time()) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "thumbTime", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "maxViewers", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-type", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "restreamPaused", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "accessed", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "iptvLive", 0) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-codec-video", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "accessed", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($postID, "vw_ipCamera", "") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-hls", $stream_hls) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-codec-audio", strtolower($audioCodec)) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-mode", "stream") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-type", "restream") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_ipCamera", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_field("post_author", $postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-codec-audio", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-type", "webrtc") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "maxViewers", true) - {'post_meta'}
	DeletionDetector.delete_post_meta($postID, "myCRED_sell_content") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "hasSnapshot", $picType) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-codec-detect", time()) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "edate", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-protocol", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_playlistActive", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-codec-audio", strtolower($audioCodec)) - {'post_meta'}
	WordPressStorageDetector.wp_delete_post($postID, true) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($postID, "hasPicture", $picType) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($editPlaylist, "stream-protocol", "rtmp") - {'post_meta'}
	WordPressRetrievalDetector.get_post_field("post_author", $postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-type", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_transcode", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "vw_transcode", "1") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "vw_transcode", "0") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "vw_playlistActive", "") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-codec-video", strtolower($videoCodec)) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-mode", "direct") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_ipCamera", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_" . $field . "List", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "accessedUser", $ztime) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "eventEndTime", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-protocol", "rtsp") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "accessed", $ztime) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-mode", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "restreamPaused", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-codec-detect", time()) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-mode", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-type", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "edate", $ztime) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "accessed", $ztime) - {'post_meta'}
	WordPressRetrievalDetector.get_post($channel_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_playlistActive", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "myCRED_sell_content", $mCa) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($item->ID, "showImage", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-codec-audio", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_ads", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_ipCamera", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($editPost, "eventTitle", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "vw_logo", "hide") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-mode", "safari_pc") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "wtime", $wtime) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($info["postID"], "edate", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($editPost, "eventStart", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "vw_transcode", $new_vw_transcode) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_recording", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "vw_accessPrice", $accessPrice) - {'post_meta'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($disablePlaylist) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($postID, "hasSnapshot", 1) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_ipCamera", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "transcoding-webrtc", time()) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-type", "webrtc") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-hls", $stream) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_logo", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "vw_" . $field . "List", $value) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($editPost, "eventDescription", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "stream-mode", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "stream-type", "external") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($editPlaylist, "stream-type", "playlist") - {'post_meta'}
user
	VariableDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($userID) - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.register_new_user($username, $password) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", $chatRow->username) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_user_by($userName, $userRow->session) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", $u) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_user_by("login", $u) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", $userRow->session) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	ArrayElementDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_currentuserinfo() - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($userID) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", $u) - {'user_meta', 'user'}
user_meta
	VariableDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($userID, "accessTime", true) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($userID) - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($current_user->ID, "vwls_watch", true) - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user->ID, "vwls_watch", true) - {'user_meta'}
	WordPressStorageDetector.register_new_user($username, $password) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", $chatRow->username) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($current_user->ID, "vwls_watch_update", true) - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_user_meta($user->ID, "vwls_watch_update", true) - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_user_by($userName, $userRow->session) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($user->ID, "vwls_watch", $dS) - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressStorageDetector.update_user_meta($user->ID, "vwls_watch_update", time()) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($user->ID, "vwls_watch", $currentWatch) - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", $u) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_user_by("login", $u) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", $userRow->session) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($userID, "vw_ppv_temp", true) - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_user_meta($current_user->ID, "vwTipLast", true) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($userID, "vw_ppv_tempt", true) - {'user_meta'}
	ArrayElementDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($current_user->ID, "vwTipLast", time()) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_currentuserinfo() - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($userID, "accessTime", true) - {'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($userID, "accessTime", $ztime) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($userID) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", $u) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_user_meta($userID, "accessTime", true) - {'user_meta'}
wp_post
	WordPressRetrievalDetector.get_post($editPlaylist) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_field("post_author", $postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($editPost) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_field("post_author", $postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	DeletionDetector.wp_delete_post($page_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($removeStream) - {'post_meta', 'post', 'wp_post'}
	DeletionDetector.wp_delete_post($page_id) - {'post_meta', 'post', 'wp_post'}
	DeletionDetector.wp_delete_post($postID, true) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.wp_delete_post($page_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($deleteChannel) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.wp_delete_post($page_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_field("post_author", $post->ID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_field("post_author", $postID) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.wp_delete_post($postID, true) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_field("post_author", $postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($channel_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($disablePlaylist) - {'post_meta', 'post', 'wp_post'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:01:09.214067.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 18671 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:01.757972.

!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 381
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 3236
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 3569
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 3661
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 4537
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 8787
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 8954
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 11176
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 11259
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 19672
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 21181
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 20428
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 33258
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 34290
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 35776
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 36211
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 36636
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 38067
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 37128
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 38728
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 43283
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 45246
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 45744
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 51367
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 54022
1000 STORE_REACHES edges created
2000 STORE_REACHES edges created
3000 STORE_REACHES edges created
4000 STORE_REACHES edges created
5000 STORE_REACHES edges created
6000 STORE_REACHES edges created
7000 STORE_REACHES edges created
8000 STORE_REACHES edges created
9000 STORE_REACHES edges created
10000 STORE_REACHES edges created
11000 STORE_REACHES edges created
12000 STORE_REACHES edges created
13000 STORE_REACHES edges created
14000 STORE_REACHES edges created
15000 STORE_REACHES edges created
16000 STORE_REACHES edges created
17000 STORE_REACHES edges created
18000 STORE_REACHES edges created
18671 STORE_REACHES edges created
18671 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 1000 nodes as PERSONAL
Tainted 2000 nodes as PERSONAL
Tainted 3000 nodes as PERSONAL
Tainted 4000 nodes as PERSONAL
Tainted 4595 nodes as PERSONAL
In total, tainted 4595 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 14 nodes as ENCRYPTED
In total, tainted 14 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:09:19.285266.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:21:15.900727!
Request variable '$_GET["address"]' of personal types {'address'} is found.,,None
Request variable '$_GET["username"]' of personal types {'user', 'user_meta'} is found.,,None
Request variable '$_GET["email"]' of personal types {'email'} is found.,,None
DELETION call to wp_delete_post($page_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).,None,None
DELETION call to wp_delete_post($page_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).,None,None
DELETION call to delete_post_meta($postID, "myCRED_sell_content") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to wp_delete_attachment($file->ID) alters data types {'attachment', 'attachment_meta'}. Passed arguments: 0: $post_id (int). Returns (WP_Post|false|null).,None,None
DELETION call to wp_delete_post($postID, true) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
MD5 called with parameters [webKey, options, postID, vw]. Ignore if [webKey, options, postID, vw] does not contain personal information.,md5,None
MD5 called with parameters [webKey, userID, postID, vw, options]. Ignore if [webKey, userID, postID, vw, options] does not contain personal information.,md5,None
MD5 called with parameters [webKey, postID, vw, intval, options]. Ignore if [webKey, postID, vw, intval, options] does not contain personal information.,md5,None
MD5 called with parameters [webKey, userID, postID, vw, intval, options]. Ignore if [webKey, userID, postID, vw, intval, options] does not contain personal information.,md5,None
MD5 called with parameters [webKey, userID, postID, vw, intval, options]. Ignore if [webKey, userID, postID, vw, intval, options] does not contain personal information.,md5,None
MD5 called with parameters [webKey, postID, vw, intval, options]. Ignore if [webKey, postID, vw, intval, options] does not contain personal information.,md5,None
MD5 called with parameters [webKey, userID, postID, vw, intval, options]. Ignore if [webKey, userID, postID, vw, intval, options] does not contain personal information.,md5,None
MD5 called with parameters [webKey, postID, vw, intval, options]. Ignore if [webKey, postID, vw, intval, options] does not contain personal information.,md5,None
MD5 called with parameters [webKey, userID, postID, vw, intval, options]. Ignore if [webKey, userID, postID, vw, intval, options] does not contain personal information.,md5,None
MD5 called with parameters [webKey, postID, vw, intval, options]. Ignore if [webKey, postID, vw, intval, options] does not contain personal information.,md5,None
MD5 called with parameters [webKey, postID, vw, intval, options]. Ignore if [webKey, postID, vw, intval, options] does not contain personal information.,md5,None
MD5 called with parameters [webKey, userID, channel_id, vw, intval, options]. Ignore if [webKey, userID, channel_id, vw, intval, options] does not contain personal information.,md5,None
MD5 called with parameters [webKey, postID, vw, intval, options, broadcasterID]. Ignore if [webKey, postID, vw, intval, options, broadcasterID] does not contain personal information.,md5,None
MD5 called with parameters [webKey, postID, vw, intval, options]. Ignore if [webKey, postID, vw, intval, options] does not contain personal information.,md5,None
RETRIEVAL call to file_get_contents($log["file"]).,None,None
RETRIEVAL call to file_get_contents($log["file"]).,None,None
RETRIEVAL call to file_get_contents($log["file"]).,None,None
RETRIEVAL call to file_get_contents($file).,None,None
RETRIEVAL call to file_get_contents($smilPath).,None,None
RETRIEVAL call to file_get_contents($log["file"]).,None,None
RETRIEVAL call to file_get_contents($log["file"]).,None,None
RETRIEVAL call to file_get_contents($filename).,None,None
RETRIEVAL call to file_get_contents($path).,None,None
RETRIEVAL call to file_get_contents($lastCleanFile).,None,None
RETRIEVAL call to file($filename1).,None,None
STORAGE call to fwrite($myfile, $vw_ipCamera).,None,None
STORAGE call to fwrite($myfile, $address).,None,None
STORAGE call to fwrite($myfile, $ipCamera).,None,None
STORAGE call to fputs($dfile, $message . "<BR>").,None,None
STORAGE call to fputs($dfile, $message . "<BR>").,None,None
STORAGE call to file_put_contents($path, serialize($var)).,None,None
STORAGE call to file_put_contents($smilPath, $smilCode).,None,None
STORAGE call to fputs($dfile, $info).,None,None
STORAGE call to file_put_contents($lastCleanFile, $ztime).,None,None
STORAGE call to fputs($dfile, "VideoWhisper Log for RTMP Session Control" . "
").,None,None
STORAGE call to fputs($dfile, "Server Date: " . "
" . date("D M j G:i:s T Y") . "
").,None,None
STORAGE call to fputs($dfile, "$_POST:" . "
" . sanitize_textarea_field(serialize($_POST))).,None,None
STORAGE call to fputs($dfile, "
Control RTP Sessions: " . "
" . $controlSessionsS).,None,None
STORAGE call to fputs($dfile, "
Control RTMP Users: " . "
" . $controlUsersS).,None,None
STORAGE call to file_put_contents($options["uploadsPath"] . "/sessionsApp", $appStats).,None,None
object property '$session->username' of personal types {'user', 'user_meta'} is found.,,None
object property '$current_user->user_nicename' of personal types {'user', 'user_meta'} is found.,,None
object property '$channel->post_password' of personal types {'password'} is found.,,None
object property '$current_user->user_email' of personal types {'email'} is found.,,None
object property '$current_user->user_email' of personal types {'email'} is found.,,None
object property '$chatRow->username' of personal types {'user', 'user_meta'} is found.,,None
object property '$chatRow->username' of personal types {'user', 'user_meta'} is found.,,None
object property '$current_user->user_email' of personal types {'email'} is found.,,None
object property '$broadcaster->username' of personal types {'user', 'user_meta'} is found.,,None
object property '$current_user->user_email' of personal types {'email'} is found.,,None
object property '$session->username' of personal types {'user', 'user_meta'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$addressProtocol' of personal types {'address'} is found.,,None
variable '$addressProtocol' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$addressProtocol' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$addressProtocol' of personal types {'address'} is found.,,None
variable '$addressProtocol' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$addressProtocol' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$addressProtocol' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$addressProtocol' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$addressProtocol' of personal types {'address'} is found.,,None
variable '$addresses' of personal types {'address'} is found.,,None
variable '$addresses' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$addresses' of personal types {'address'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username1' of personal types {'user', 'user_meta'} is found.,,None
variable '$username1' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_post_meta($info["postID"], "edate", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_recording", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_ipCamera", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($postID, "iptvPid", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "iptvPid", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "iptvLive", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "iptvPid", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "accessedUser", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "accessed", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_field("post_author", $postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $field (string), 1: $post (int|WP_Post). Returns (string).,None,None
RETRIEVAL call to get_user_meta($userID, "accessTime", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("userAccessTime", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-mode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_ipCamera", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_ipCamera", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_lastSnapshot", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_option("vwls_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_user_meta($current_user->ID, "vwls_watch", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($current_user->ID, "vwls_watch_update", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($removeStream) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_post_meta($post->ID, "edate", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "thumbTime", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "vw_ipCamera", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "restreamPaused", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "accessedUser", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "accessed", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_field("post_author", $post->ID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $field (string), 1: $post (int|WP_Post). Returns (string).,None,None
RETRIEVAL call to get_userdata($userID) alters data types {'user_meta', 'user'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_meta($userID, "accessTime", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWvideoShareOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($disablePlaylist) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_option("vwls_page_manage") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vwls_page_channels") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vwls_page_manage") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vwls_page_channels") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vwls_page_manage") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vwls_page_channels") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vwls_page_manage") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vwls_page_channels") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vwls_page_manage") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vwls_page_manage") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vwls_page_channels") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vwls_page_channels") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option( . "_requirementsRemind") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option( . "_requirements") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vwls_page_manage") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($requirement["option"]) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($editPlaylist) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($editPlaylist, "vw_playlistActive", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($editPlaylist, "vw_playlistUpdated", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($editPlaylist, "vw_playlistLoaded", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_playlistActive", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_ipCamera", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "showImage", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_transcode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "edate", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_recording", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_logo", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_ads", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_ipCamera", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "restreamPaused", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_playlistActive", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_" . $field . "List", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vwls_page_manage") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vwls_page_channels") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vwls_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($editPost) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($editPost, "vw_" . $field . "List", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($editPost, "vw_recording", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($editPost, "vw_accessPrice", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($editPost, "vw_logoImage", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($editPost, "vw_logoLink", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($editPost, "vw_ipCamera", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($editPost, "vw_adsServer", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($editPost, "showImage", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($editPost, "eventTitle", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($editPost, "eventStart", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($editPost, "eventStartTime", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($editPost, "eventEnd", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($editPost, "eventEndTime", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($editPost, "eventDescription", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_ipCamera", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-protocol", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-mode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-protocol", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_field("post_author", $postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $field (string), 1: $post (int|WP_Post). Returns (string).,None,None
RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-protocol", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-codec-video", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-codec-audio", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-hls", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-protocol", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-hls", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_transcode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-codec-video", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_ipCamera", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_field("post_author", $postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $field (string), 1: $post (int|WP_Post). Returns (string).,None,None
RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-codec-video", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-codec-audio", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-protocol", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-hls", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-codec-audio", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-codec-video", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "edate", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "offline_video", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-protocol", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-hls", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-codec-video", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $key (string), 2: $single (bool). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-codec-audio", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "edate", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "offline_video", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_ipCamera", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-protocol", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-mode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "edate", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-protocol", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_user_by("login", $u) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_user_meta($current_user->ID, "vwTipLast", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_by("login", $userRow->session) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_accessList", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_by($userName, $userRow->session) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_by("login", $chatRow->username) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_playlistActive", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_ipCamera", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_post_meta($item->ID, "edate", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($item->ID, "rateStarReview_rating", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($item->ID, "showImage", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($video_teaser, "video-adaptive", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_post_meta($video_id, "video-source-file", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($video_id, "video-adaptive", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($video_teaser, "video-source-file", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("vwls_page_manage") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_ipCamera", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_playlistActive", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "accessedUser", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "accessed", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "edate", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "maxViewers", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "maxDate", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "wtime", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_post_meta($postID, "eventTitle", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "eventStart", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "eventEnd", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "eventStartTime", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "eventEndTime", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "eventDescription", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "showImage", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "edate", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($userID, "vw_ppv_tempt", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($userID, "vw_ppv_temp", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "myCRED_sell_content", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vwls_page_channels") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_option("vwls_page_manage") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vwls_page_channels") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_post_meta($post->ID, "restreamPaused", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($userID, "accessTime", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-codec-video", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-protocol", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-codec-detect", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-updated", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-codec-audio", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-hls", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-mode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("userAccessTime", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "restreamPaused", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-protocol", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "stream-type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "vw_ipCamera", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "thumbTime", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postID, "maxViewers", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user->ID, "vwls_watch_update", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user->ID, "vwls_watch", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_currentuserinfo() alters data types {'user_meta', 'user'}. Returns (bool|WP_User).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdata($userID) alters data types {'user_meta', 'user'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_post($channel_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("VWliveStreamingOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_by("login", $u) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_user_by("login", $u) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_post_field("post_author", $postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $field (string), 1: $post (int|WP_Post). Returns (string).,None,None
RETRIEVAL call to get_post($deleteChannel) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
STORAGE call to wp_insert_post($post). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to wp_update_post($post). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($postID, "vw_ipCamera", $address) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-type", "restream") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "edate", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-protocol", "rtmp") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-mode", "iptv") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "iptvPid", $pid) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "iptvStart", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "iptvLive", 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "iptvStop", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "iptvLive", 0) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "iptvPid", 0) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "iptvLive", 0) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "iptvRunning", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "iptvLive", 0) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "restreamPaused", $paused) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to register_new_user($username, $password) alters data types {'user_meta', 'user'}. Passed arguments: 0: $user_login (string), 1: $user_email (string). Returns (int|WP_Error).,None,None
STORAGE call to wp_update_post($post). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to wp_insert_post($post). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($postID, "vw_lastSnapshot", $snapshot) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-hls", $label) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-protocol", $addressProtocol) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-mode", "stream") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("VWliveStreamingOptions", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($roomPost->ID, "vw_ipCamera", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($roomPost->ID, "vw_playlistUpdated", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($roomPost->ID, "vw_playlistActive", "0") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("VWliveStreamingOptions", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to wp_insert_post($page). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to update_option("vwls_page_manage", $pageid) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to wp_insert_post($page). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to update_option("vwls_page_channels", $pageid) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to wp_delete_post($page_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).,None,None
STORAGE call to update_option("vwls_page_manage", -1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to wp_delete_post($page_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).,None,None
STORAGE call to update_option("vwls_page_channels", -1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("VWliveStreamingOptions", $adminOptions) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("VWliveStreamingOptions", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("VWliveStreamingOptions", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option( . "_requirementsRemind", time() + 86400) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option( . "_requirements", $status) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to wp_insert_post($post). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($postID, "hasPicture", $picType) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "hasSnapshot", 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "edate", time() - 60) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "showImage", $showImage) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "eventTitle", sanitize_text_field($_POST["eventTitle"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "eventStart", sanitize_text_field($_POST["eventStart"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "eventEnd", sanitize_text_field($_POST["eventEnd"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "eventStartTime", sanitize_text_field($_POST["eventStartTime"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "eventEndTime", sanitize_text_field($_POST["eventEndTime"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "eventDescription", sanitize_text_field($_POST["eventDescription"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "disableSidebar", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "vw_recording", $value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "vw_recording", $options["recordingFFmpeg"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "vw_transcode", "1") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "vw_transcode", "0") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "vw_logo", "hide") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "vw_logo", "global") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "vw_logoImage", $logoImage) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "vw_logoLink", $logoLink) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "vw_logo", "custom") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "vw_ads", "hide") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "vw_ads", "global") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "vw_adsServer", $logoImage) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "vw_ads", "custom") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "vw_ipCamera", $ipCamera) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-protocol", $protocol) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-type", "restream") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-mode", "stream") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "vw_ipCamera", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "vw_playlistActive", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "vw_" . $field . "List", $value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "vw_accessPrice", $accessPrice) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "myCRED_sell_content", $mCa) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($postID, "myCRED_sell_content") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($editPlaylist, "vw_playlistActive", $playlistActive$_POST["playlistActive"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($editPlaylist, "vw_playlistUpdated", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($editPlaylist, "stream-type", "playlist") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($editPlaylist, "stream-protocol", "rtmp") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "vw_transcode", $new_vw_transcode) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-webrtc", $stream_webrtc) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "transcoding-webrtc", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-codec-video", strtolower($videoCodec)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-codec-audio", strtolower($audioCodec)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-codec-detect", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-hls", $stream_hls) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "transcoding-hls", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-hls", $stream) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-codec-video", strtolower($videoCodec)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to add_option("vwls_db_version", $vw_db_version) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($postID, "stream-codec-audio", strtolower($audioCodec)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-codec-detect", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("vwls_db_version", $vw_db_version) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($postID, "stream-hls", $stream) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-hls", $stream_hls) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-protocol", "rtsp") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-type", "webrtc") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-mode", "safari_pc") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-mode", "direct") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "wtime", $channel->wtime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "accessedUser", $ztime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "accessed", $ztime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($current_user->ID, "vwTipLast", time()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "accessedUser", $ztime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "accessed", $ztime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_insert_post($post). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to update_user_meta($userID, "accessTime", $ztime) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_delete_post($postID, true) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
STORAGE call to update_option("VWliveStreamingOptions", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($postID, "edate", $ztime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "edate", $ztime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "vw_lastSnapshot", $filename) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "hasSnapshot", $picType) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "thumbTime", $ztime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("userAccessTime", $ztime) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($postID, "viewers", $viewers) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "viewersUpdate", $ztime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "maxViewers", $viewers) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "maxDate", $ztime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user->ID, "vwls_watch_update", time()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user->ID, "vwls_watch", $dS) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user->ID, "vwls_watch", $currentWatch) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "edate", $ztime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "btime", $btime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-protocol", "rtsp") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-type", "webrtc") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "wtime", $wtime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "edate", $ztime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "btime", $channel->btime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-protocol", "rtmp") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-type", "external") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-updated", $ztime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "wtime", $channel->wtime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-protocol", "rtmp") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-type", "external") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postID, "stream-updated", $ztime) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("VWliveStreamingOptions", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
Data Deletion violation! The plugin has storage node that has no identifier and cannot be accessed!
Data Deletion violation! The plugin has storage node that has no identifier and cannot be accessed!
Data Deletion violation! The plugin has storage node that has no identifier and cannot be accessed!
Data Deletion violation! The plugin has storage node that has no identifier and cannot be accessed!
Data Deletion violation! The plugin has storage node that has no identifier and cannot be accessed!
Data Deletion violation! The plugin has storage node that has no identifier and cannot be accessed!
Data Deletion violation! The plugin has storage node that has no identifier and cannot be accessed!
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] Unstructured data storage of PII types (['address', 'password', 'email', 'user', 'user_meta']) to files through function "fputs", found in file videowhisper_streaming.php at line 5425. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "stream-hls", $stream)", found in file videowhisper_streaming.php at line 2947. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "stream-mode", "stream")", found in file inc/iptv.php at line 985. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "stream-protocol", $addressProtocol)", found in file inc/iptv.php at line 984. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "stream-hls", $stream_hls)", found in file videowhisper_streaming.php at line 2699. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "stream-hls", $label)", found in file inc/iptv.php at line 980. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($roomPost->ID, "vw_ipCamera", "")", found in file inc/options.php at line 1244. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "vw_lastSnapshot", $filename)", found in file videowhisper_streaming.php at line 8743. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "vw_ipCamera", $address)", found in file inc/iptv.php at line 1005. 

[has_storage] PII of types (['user_meta', 'user']) stored through WordPress function "register_new_user($username, $password)", found in file inc/iptv.php at line 868. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "eventDescription", sanitize_text_field($_POST["eventDescription"]))", found in file videowhisper_streaming.php at line 1174. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "vw_recording", $value)", found in file videowhisper_streaming.php at line 1183. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "maxViewers", $viewers)", found in file videowhisper_streaming.php at line 8865. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "eventTitle", sanitize_text_field($_POST["eventTitle"]))", found in file videowhisper_streaming.php at line 1169. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "showImage", $showImage)", found in file videowhisper_streaming.php at line 1164. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "vw_ipCamera", $ipCamera)", found in file videowhisper_streaming.php at line 1270. 

[has_storage] PII of types (['user', 'user_meta']) stored through WordPress function "update_user_meta($user->ID, "vwls_watch", $dS)", found in file videowhisper_streaming.php at line 8962. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "stream-protocol", $protocol)", found in file videowhisper_streaming.php at line 1272. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "btime", $btime)", found in file videowhisper_streaming.php at line 9276. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "eventEndTime", sanitize_text_field($_POST["eventEndTime"]))", found in file videowhisper_streaming.php at line 1173. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "vw_recording", $options["recordingFFmpeg"])", found in file videowhisper_streaming.php at line 1186. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "eventStartTime", sanitize_text_field($_POST["eventStartTime"]))", found in file videowhisper_streaming.php at line 1172. 

[has_storage] PII of types (['user', 'user_meta']) stored through WordPress function "update_user_meta($user->ID, "vwls_watch_update", time())", found in file videowhisper_streaming.php at line 8961. 

[has_storage] PII of types (['user', 'user_meta']) stored through WordPress function "update_user_meta($user->ID, "vwls_watch", $currentWatch)", found in file videowhisper_streaming.php at line 8968. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "maxDate", $ztime)", found in file videowhisper_streaming.php at line 8866. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "eventStart", sanitize_text_field($_POST["eventStart"]))", found in file videowhisper_streaming.php at line 1170. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "stream-protocol", "rtmp")", found in file videowhisper_streaming.php at line 9555. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "stream-webrtc", $stream_webrtc)", found in file videowhisper_streaming.php at line 2593. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "eventEnd", sanitize_text_field($_POST["eventEnd"]))", found in file videowhisper_streaming.php at line 1171. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "edate", $ztime)", found in file videowhisper_streaming.php at line 8742. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "vw_logo", "global")", found in file videowhisper_streaming.php at line 1200. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "vw_ads", "custom")", found in file videowhisper_streaming.php at line 1226. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "iptvPid", $pid)", found in file inc/iptv.php at line 333. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "vw_ads", "global")", found in file videowhisper_streaming.php at line 1218. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "vw_ads", "hide")", found in file videowhisper_streaming.php at line 1216. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "stream-mode", "iptv")", found in file inc/iptv.php at line 331. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "thumbTime", $ztime)", found in file videowhisper_streaming.php at line 8783. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "stream-updated", $ztime)", found in file videowhisper_streaming.php at line 9557. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "iptvStart", time())", found in file inc/iptv.php at line 334. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "vw_logoLink", $logoLink)", found in file videowhisper_streaming.php at line 1209. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "stream-protocol", "rtmp")", found in file inc/iptv.php at line 330. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "vw_logoImage", $logoImage)", found in file videowhisper_streaming.php at line 1206. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "wtime", $channel->wtime)", found in file videowhisper_streaming.php at line 9650. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "viewers", $viewers)", found in file videowhisper_streaming.php at line 8860. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "vw_logo", "custom")", found in file videowhisper_streaming.php at line 1211. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "vw_adsServer", $logoImage)", found in file videowhisper_streaming.php at line 1224. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "wp_insert_post($post)", found in file bp.php at line 105. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "edate", $ztime)", found in file videowhisper_streaming.php at line 8588. 

[has_storage] Unstructured data storage of PII types (['address', 'password', 'email', 'user', 'user_meta']) to files through function "file_put_contents", found in file videowhisper_streaming.php at line 8914. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "wp_insert_post($post)", found in file inc/iptv.php at line 905. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "edate", time() - 60)", found in file videowhisper_streaming.php at line 1133. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "vw_lastSnapshot", $snapshot)", found in file inc/iptv.php at line 946. 

[has_storage] Unstructured data storage of PII types (['user_meta', 'user']) to files through function "fputs", found in file videowhisper_streaming.php at line 8544. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "disableSidebar", true)", found in file videowhisper_streaming.php at line 1178. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "edate", time())", found in file inc/iptv.php at line 1008. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($roomPost->ID, "vw_playlistUpdated", time())", found in file inc/options.php at line 1521. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "viewersUpdate", $ztime)", found in file videowhisper_streaming.php at line 8861. 

[has_storage] Unstructured data storage of PII types (['address', 'password', 'email', 'user', 'user_meta']) to files through function "file_put_contents", found in file videowhisper_streaming.php at line 5928. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "stream-type", "restream")", found in file inc/iptv.php at line 1006. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "wtime", $channel->wtime)", found in file videowhisper_streaming.php at line 5098. 

[has_storage] Unstructured data storage of PII types (['address', 'password', 'email', 'user', 'user_meta']) to files through function "fputs", found in file videowhisper_streaming.php at line 5290. 

[has_storage] Unstructured data storage of PII types (['address', 'password', 'email', 'user', 'user_meta']) to files through function "fwrite", found in file inc/iptv.php at line 501. 

[has_storage] Unstructured data storage of PII types (['address']) to files through function "fwrite", found in file inc/iptv.php at line 970. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($roomPost->ID, "vw_playlistActive", "0")", found in file inc/options.php at line 1522. 

[has_storage] PII of types (['user', 'user_meta']) stored through WordPress function "update_user_meta($current_user->ID, "vwTipLast", time())", found in file videowhisper_streaming.php at line 5324. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "stream-codec-video", strtolower($videoCodec))", found in file videowhisper_streaming.php at line 2888. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "stream-type", "external")", found in file videowhisper_streaming.php at line 9556. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "iptvLive", 1)", found in file inc/iptv.php at line 335. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "btime", $channel->btime)", found in file videowhisper_streaming.php at line 9553. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "transcoding-hls", time())", found in file videowhisper_streaming.php at line 2704. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "vw_ipCamera", "")", found in file videowhisper_streaming.php at line 1280. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "stream-hls", $stream_hls)", found in file videowhisper_streaming.php at line 2984. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "stream-codec-audio", strtolower($audioCodec))", found in file videowhisper_streaming.php at line 2900. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "stream-mode", "stream")", found in file videowhisper_streaming.php at line 1274. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "stream-type", "restream")", found in file videowhisper_streaming.php at line 1273. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "wp_insert_post($post)", found in file videowhisper_streaming.php at line 1074. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "hasSnapshot", $picType)", found in file videowhisper_streaming.php at line 8782. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "stream-codec-detect", time())", found in file videowhisper_streaming.php at line 2904. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($userID, "accessTime", $ztime)", found in file videowhisper_streaming.php at line 82. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "stream-codec-audio", strtolower($audioCodec))", found in file videowhisper_streaming.php at line 2676. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "hasPicture", $picType)", found in file videowhisper_streaming.php at line 1131. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "vw_transcode", "1")", found in file videowhisper_streaming.php at line 1191. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "vw_transcode", "0")", found in file videowhisper_streaming.php at line 1193. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "vw_playlistActive", "")", found in file videowhisper_streaming.php at line 1285. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "stream-codec-video", strtolower($videoCodec))", found in file videowhisper_streaming.php at line 2664. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "stream-codec-detect", time())", found in file videowhisper_streaming.php at line 2679. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "edate", $ztime)", found in file videowhisper_streaming.php at line 9552. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "myCRED_sell_content", $mCa)", found in file videowhisper_streaming.php at line 1309. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "wp_insert_post($post)", found in file videowhisper_streaming.php at line 736. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "vw_logo", "hide")", found in file videowhisper_streaming.php at line 1198. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "wtime", $wtime)", found in file videowhisper_streaming.php at line 9380. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "vw_transcode", $new_vw_transcode)", found in file videowhisper_streaming.php at line 1691. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "vw_accessPrice", $accessPrice)", found in file videowhisper_streaming.php at line 1299. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "hasSnapshot", 1)", found in file videowhisper_streaming.php at line 1132. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "transcoding-webrtc", time())", found in file videowhisper_streaming.php at line 2595. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "stream-hls", $stream)", found in file videowhisper_streaming.php at line 2791. 

[has_storage] PII of types (['address', 'password', 'email', 'user', 'user_meta']) stored through WordPress function "update_post_meta($postID, "vw_" . $field . "List", $value)", found in file videowhisper_streaming.php at line 1292. 

[has_storage] Storage check is CUSTOM_UNSTRUCTURED 

[Art.17, Right to erasure] Complete data deletion is required for storage at node ID 39980 , but is impossible due to custom storage of PII without identifiers. Found in file videowhisper_streaming.php at line 5425 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "stream-hls", $stream) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 2947. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "stream-mode", "stream") does not have corresponding deletion method. Storage method found in file inc/iptv.php at line 985. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "stream-protocol", $addressProtocol) does not have corresponding deletion method. Storage method found in file inc/iptv.php at line 984. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "stream-hls", $stream_hls) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 2699. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "stream-hls", $label) does not have corresponding deletion method. Storage method found in file inc/iptv.php at line 980. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($roomPost->ID, "vw_ipCamera", "") does not have corresponding deletion method. Storage method found in file inc/options.php at line 1244. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "vw_lastSnapshot", $filename) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 8743. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "vw_ipCamera", $address) does not have corresponding deletion method. Storage method found in file inc/iptv.php at line 1005. 

[Art.17, Right to erasure] Wordpress storage of PII through register_new_user($username, $password) does not have corresponding deletion method. Storage method found in file inc/iptv.php at line 868. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "eventDescription", sanitize_text_field($_POST["eventDescription"])) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 1174. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "vw_recording", $value) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 1183. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "maxViewers", $viewers) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 8865. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "eventTitle", sanitize_text_field($_POST["eventTitle"])) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 1169. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "showImage", $showImage) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 1164. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "vw_ipCamera", $ipCamera) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 1270. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user->ID, "vwls_watch", $dS) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 8962. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "stream-protocol", $protocol) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 1272. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "btime", $btime) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 9276. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "eventEndTime", sanitize_text_field($_POST["eventEndTime"])) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 1173. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "vw_recording", $options["recordingFFmpeg"]) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 1186. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "eventStartTime", sanitize_text_field($_POST["eventStartTime"])) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 1172. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user->ID, "vwls_watch_update", time()) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 8961. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user->ID, "vwls_watch", $currentWatch) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 8968. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "maxDate", $ztime) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 8866. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "eventStart", sanitize_text_field($_POST["eventStart"])) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 1170. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "stream-protocol", "rtmp") does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 9555. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "stream-webrtc", $stream_webrtc) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 2593. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "eventEnd", sanitize_text_field($_POST["eventEnd"])) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 1171. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "edate", $ztime) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 8742. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "vw_logo", "global") does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 1200. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "vw_ads", "custom") does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 1226. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "iptvPid", $pid) does not have corresponding deletion method. Storage method found in file inc/iptv.php at line 333. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "vw_ads", "global") does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 1218. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "vw_ads", "hide") does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 1216. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "stream-mode", "iptv") does not have corresponding deletion method. Storage method found in file inc/iptv.php at line 331. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "thumbTime", $ztime) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 8783. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "stream-updated", $ztime) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 9557. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "iptvStart", time()) does not have corresponding deletion method. Storage method found in file inc/iptv.php at line 334. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "vw_logoLink", $logoLink) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 1209. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "stream-protocol", "rtmp") does not have corresponding deletion method. Storage method found in file inc/iptv.php at line 330. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "vw_logoImage", $logoImage) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 1206. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "wtime", $channel->wtime) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 9650. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "viewers", $viewers) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 8860. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "vw_logo", "custom") does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 1211. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "vw_adsServer", $logoImage) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 1224. 

[Art.17, Right to erasure] Wordpress storage of PII through wp_insert_post($post) does not have corresponding deletion method. Storage method found in file bp.php at line 105. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "edate", $ztime) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 8588. 

[Art.17, Right to erasure] Complete data deletion is required for storage at node ID 56618 , but is impossible due to custom storage of PII without identifiers. Found in file videowhisper_streaming.php at line 8914 

[Art.17, Right to erasure] Wordpress storage of PII through wp_insert_post($post) does not have corresponding deletion method. Storage method found in file inc/iptv.php at line 905. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "edate", time() - 60) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 1133. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "vw_lastSnapshot", $snapshot) does not have corresponding deletion method. Storage method found in file inc/iptv.php at line 946. 

[Art.17, Right to erasure] Complete data deletion is required for storage at node ID 54789 , but is impossible due to custom storage of PII without identifiers. Found in file videowhisper_streaming.php at line 8544 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "disableSidebar", true) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 1178. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "edate", time()) does not have corresponding deletion method. Storage method found in file inc/iptv.php at line 1008. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($roomPost->ID, "vw_playlistUpdated", time()) does not have corresponding deletion method. Storage method found in file inc/options.php at line 1521. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "viewersUpdate", $ztime) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 8861. 

[Art.17, Right to erasure] Complete data deletion is required for storage at node ID 42606 , but is impossible due to custom storage of PII without identifiers. Found in file videowhisper_streaming.php at line 5928 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "stream-type", "restream") does not have corresponding deletion method. Storage method found in file inc/iptv.php at line 1006. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "wtime", $channel->wtime) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 5098. 

[Art.17, Right to erasure] Complete data deletion is required for storage at node ID 39342 , but is impossible due to custom storage of PII without identifiers. Found in file videowhisper_streaming.php at line 5290 

[Art.17, Right to erasure] Complete data deletion is required for storage at node ID 3103 , but is impossible due to custom storage of PII without identifiers. Found in file inc/iptv.php at line 501 

[Art.17, Right to erasure] Complete data deletion is required for storage at node ID 5048 , but is impossible due to custom storage of PII without identifiers. Found in file inc/iptv.php at line 970 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($roomPost->ID, "vw_playlistActive", "0") does not have corresponding deletion method. Storage method found in file inc/options.php at line 1522. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($current_user->ID, "vwTipLast", time()) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 5324. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "stream-codec-video", strtolower($videoCodec)) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 2888. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "stream-type", "external") does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 9556. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "iptvLive", 1) does not have corresponding deletion method. Storage method found in file inc/iptv.php at line 335. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "btime", $channel->btime) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 9553. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "transcoding-hls", time()) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 2704. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "vw_ipCamera", "") does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 1280. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "stream-hls", $stream_hls) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 2984. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "stream-codec-audio", strtolower($audioCodec)) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 2900. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "stream-mode", "stream") does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 1274. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "stream-type", "restream") does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 1273. 

[Art.17, Right to erasure] Wordpress storage of PII through wp_insert_post($post) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 1074. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "hasSnapshot", $picType) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 8782. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "stream-codec-detect", time()) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 2904. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($userID, "accessTime", $ztime) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 82. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "stream-codec-audio", strtolower($audioCodec)) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 2676. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "hasPicture", $picType) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 1131. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "vw_transcode", "1") does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 1191. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "vw_transcode", "0") does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 1193. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "vw_playlistActive", "") does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 1285. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "stream-codec-video", strtolower($videoCodec)) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 2664. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "stream-codec-detect", time()) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 2679. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "edate", $ztime) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 9552. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "myCRED_sell_content", $mCa) has deletion method delete_post_meta($postID, "myCRED_sell_content"). Storage method found in file videowhisper_streaming.php at line 1309. Deletion method found in file videowhisper_streaming.php at line 1311. 

[Art.17, Right to erasure] Wordpress storage of PII through wp_insert_post($post) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 736. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "vw_logo", "hide") does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 1198. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "wtime", $wtime) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 9380. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "vw_transcode", $new_vw_transcode) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 1691. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "vw_accessPrice", $accessPrice) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 1299. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "hasSnapshot", 1) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 1132. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "transcoding-webrtc", time()) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 2595. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "stream-hls", $stream) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 2791. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($postID, "vw_" . $field . "List", $value) does not have corresponding deletion method. Storage method found in file videowhisper_streaming.php at line 1292. 

[Art.17, Right to erasure] Deletion access is NONE 

[Art.15, Right to access] Complete data access is required for storage at node ID 39980 , but is impossible due to custom storage of PII without identifiers. Found in file videowhisper_streaming.php at line 5425 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 30946. Found in file videowhisper_streaming.php at line 2947 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 5133. Found in file inc/iptv.php at line 985 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 5124. Found in file inc/iptv.php at line 984 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 29648. Found in file videowhisper_streaming.php at line 2699 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 5104. Found in file inc/iptv.php at line 980 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9360. Found in file inc/options.php at line 1244 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 55884. Found in file videowhisper_streaming.php at line 8743 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 5182. Found in file inc/iptv.php at line 1005 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 4572. Found in file inc/iptv.php at line 868 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 22370. Found in file videowhisper_streaming.php at line 1174 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 22420. Found in file videowhisper_streaming.php at line 1183 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 56402. Found in file videowhisper_streaming.php at line 8865 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 22295. Found in file videowhisper_streaming.php at line 1169 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 22272. Found in file videowhisper_streaming.php at line 1164 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 22866. Found in file videowhisper_streaming.php at line 1270 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 56811. Found in file videowhisper_streaming.php at line 8962 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 22880. Found in file videowhisper_streaming.php at line 1272 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 58038. Found in file videowhisper_streaming.php at line 9276 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 22355. Found in file videowhisper_streaming.php at line 1173 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 22432. Found in file videowhisper_streaming.php at line 1186 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 22340. Found in file videowhisper_streaming.php at line 1172 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 56798. Found in file videowhisper_streaming.php at line 8961 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 56850. Found in file videowhisper_streaming.php at line 8968 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 56411. Found in file videowhisper_streaming.php at line 8866 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 22310. Found in file videowhisper_streaming.php at line 1170 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 59157. Found in file videowhisper_streaming.php at line 9555 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 28988. Found in file videowhisper_streaming.php at line 2593 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 22325. Found in file videowhisper_streaming.php at line 1171 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 55875. Found in file videowhisper_streaming.php at line 8742 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 22501. Found in file videowhisper_streaming.php at line 1200 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 22638. Found in file videowhisper_streaming.php at line 1226 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 2318. Found in file inc/iptv.php at line 333 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 22596. Found in file videowhisper_streaming.php at line 1218 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 22585. Found in file videowhisper_streaming.php at line 1216 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 2310. Found in file inc/iptv.php at line 331 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 56083. Found in file videowhisper_streaming.php at line 8783 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 59173. Found in file videowhisper_streaming.php at line 9557 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 2327. Found in file inc/iptv.php at line 334 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 22554. Found in file videowhisper_streaming.php at line 1209 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 2302. Found in file inc/iptv.php at line 330 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 22534. Found in file videowhisper_streaming.php at line 1206 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 59526. Found in file videowhisper_streaming.php at line 9650 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 56363. Found in file videowhisper_streaming.php at line 8860 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 22563. Found in file videowhisper_streaming.php at line 1211 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 22629. Found in file videowhisper_streaming.php at line 1224 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 452. Found in file bp.php at line 105 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 55015. Found in file videowhisper_streaming.php at line 8588 

[Art.15, Right to access] Complete data access is required for storage at node ID 56618 , but is impossible due to custom storage of PII without identifiers. Found in file videowhisper_streaming.php at line 8914 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 4740. Found in file inc/iptv.php at line 905 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 22153. Found in file videowhisper_streaming.php at line 1133 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 4950. Found in file inc/iptv.php at line 946 

[Art.15, Right to access] Complete data access is required for storage at node ID 54789 , but is impossible due to custom storage of PII without identifiers. Found in file videowhisper_streaming.php at line 8544 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 22385. Found in file videowhisper_streaming.php at line 1178 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 5199. Found in file inc/iptv.php at line 1008 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 10477. Found in file inc/options.php at line 1521 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 56372. Found in file videowhisper_streaming.php at line 8861 

[Art.15, Right to access] Complete data access is required for storage at node ID 42606 , but is impossible due to custom storage of PII without identifiers. Found in file videowhisper_streaming.php at line 5928 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 5191. Found in file inc/iptv.php at line 1006 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 38500. Found in file videowhisper_streaming.php at line 5098 

[Art.15, Right to access] Complete data access is required for storage at node ID 39342 , but is impossible due to custom storage of PII without identifiers. Found in file videowhisper_streaming.php at line 5290 

[Art.15, Right to access] Complete data access is required for storage at node ID 3103 , but is impossible due to custom storage of PII without identifiers. Found in file inc/iptv.php at line 501 

[Art.15, Right to access] Complete data access is required for storage at node ID 5048 , but is impossible due to custom storage of PII without identifiers. Found in file inc/iptv.php at line 970 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 10490. Found in file inc/options.php at line 1522 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 39553. Found in file videowhisper_streaming.php at line 5324 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 30625. Found in file videowhisper_streaming.php at line 2888 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 59165. Found in file videowhisper_streaming.php at line 9556 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 2338. Found in file inc/iptv.php at line 335 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 59146. Found in file videowhisper_streaming.php at line 9553 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 29681. Found in file videowhisper_streaming.php at line 2704 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 22920. Found in file videowhisper_streaming.php at line 1280 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 31128. Found in file videowhisper_streaming.php at line 2984 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 30695. Found in file videowhisper_streaming.php at line 2900 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 22897. Found in file videowhisper_streaming.php at line 1274 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 22889. Found in file videowhisper_streaming.php at line 1273 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 21808. Found in file videowhisper_streaming.php at line 1074 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 56074. Found in file videowhisper_streaming.php at line 8782 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 30719. Found in file videowhisper_streaming.php at line 2904 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 18065. Found in file videowhisper_streaming.php at line 82 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 29449. Found in file videowhisper_streaming.php at line 2676 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 22136. Found in file videowhisper_streaming.php at line 1131 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 22457. Found in file videowhisper_streaming.php at line 1191 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 22468. Found in file videowhisper_streaming.php at line 1193 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 22949. Found in file videowhisper_streaming.php at line 1285 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 29379. Found in file videowhisper_streaming.php at line 2664 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 29473. Found in file videowhisper_streaming.php at line 2679 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 59137. Found in file videowhisper_streaming.php at line 9552 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 23089. Found in file videowhisper_streaming.php at line 1309 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 20648. Found in file videowhisper_streaming.php at line 736 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 22490. Found in file videowhisper_streaming.php at line 1198 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 58440. Found in file videowhisper_streaming.php at line 9380 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 24453. Found in file videowhisper_streaming.php at line 1691 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 23053. Found in file videowhisper_streaming.php at line 1299 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 22145. Found in file videowhisper_streaming.php at line 1132 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 29000. Found in file videowhisper_streaming.php at line 2595 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 30098. Found in file videowhisper_streaming.php at line 2791 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 23009. Found in file videowhisper_streaming.php at line 1292 

[Art.15, Right to access] Data access is NONE 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['access', 'deletion', 'encryption', 'third_party'] 

[main] Is deletion in violation? True 

[main] Is access in violation? True 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? False 


###########
### Q&A ###
###########

1. Why is my plugin in violation against GDPR?

GDPR (https://gdpr-info.eu/) aims to give citizens in the European Union (EU) control over their personal data. If a website collects or store user data, it is required to provide users functionalities to control their data, such as ones to erase or export their data. While a plugin do not directly interact with users, it may provide functionalities that collect or store personal data, which would make websites that deploy the plugin in violation against GDPR if the plugin does not provide corresponding functionalities to allow users control their personal data. Therefore, plugin developers are responsible to provide functions to manage the personal data they handle in accordance with GDPR. We list requirements by specific GDPR articles relevant to your plugin below.


[Art. 13, Information to be provided where personal data are collected from the data subject] If a plugin collects or handles personal data, it needs to provide privacy policy texts that explain what personal data is being collected and for what purpose. The texts are meant to be added to the privacy policy of the websites that deploy the plugin. 


            
[Art.17, Right to erasure] If a plugin stores personal data in a custom database they create or manage, or through Wordpress's native storage functions (e.g., update_user_meta), it needs to provide methods for users to erase the data upon request. Note that deleting data for all users upon uninstallation does not satisfy the requirement. 


            
        

2. How do I make my plugin compliant?

Please refer to the fix report below to see how you can make your plugin comply with GDPR.

        
