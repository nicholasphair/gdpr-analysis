Timeout in resolving values
Timeout in running neo4j query
Running Main.py on wp-events-manager

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:03.126769.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:02.166115.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 174 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.976872.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 8 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.810896.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 1905 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:01.409284.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 76 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:01.224441.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.103057.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 829 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:40.942596.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 17680
Added 14688 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 76901
Added 59221 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:06.400059.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/wp-events-manager.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/class-wpems-ajax.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/class-wpems-assets.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/class-wpems-autoloader.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/class-wpems-booking.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/class-wpems-event.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/class-wpems-frontend-assets.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/class-wpems-gdpr.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/class-wpems-install.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/class-wpems-payment-gateways.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/class-wpems-post-types.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/class-wpems-session.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/class-wpems-settings.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/class-wpems-shortcodes.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/class-wpems-template.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/class-wpems-user-process.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/wpems-core-functions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/abstracts/class-wpems-abstract-payment-gateway.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/abstracts/class-wpems-abstract-setting.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/admin/class-wpems-admin-assets.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/admin/class-wpems-admin-menu.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/admin/class-wpems-admin-metaboxes.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/admin/class-wpems-admin.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/admin/class-wpems-admin-settings.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/admin/class-wpems-admin-users.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/admin/metaboxes/class-wpems-admin-metabox-booking.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/admin/metaboxes/class-wpems-admin-metabox-event.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/admin/settings/class-wpems-admin-setting-checkout.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/admin/settings/class-wpems-admin-setting-emails.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/admin/settings/class-wpems-admin-setting-general.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/admin/settings/class-wpems-admin-setting-pages.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/admin/upgrades/upgrade-2.0.8.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/admin/upgrades/upgrade-2.0.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/admin/upgrades/upgrade-2.1.7.2.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/admin/views/metaboxes/booking-actions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/admin/views/metaboxes/booking-details.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/admin/views/metaboxes/event-settings.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/admin/views/settings/checkbox.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/admin/views/settings/image-size.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/admin/views/settings/radio.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/admin/views/settings/section-end.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/admin/views/settings/section-start.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/admin/views/settings/select-page.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/admin/views/settings/select.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/admin/views/settings/textarea.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/admin/views/settings/text.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/admin/views/settings/yes-no.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/emails/class-wpems-register-event.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/gateways/paypal/class-wpems-payment-gateway-paypal.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/inc/widgets/class-wpems-widget-countdown.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/templates/archive-event.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/templates/content-event.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/templates/content-single-event.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/templates/pagination.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/templates/single-event.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/templates/emails/register-admin-event.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/templates/emails/register-event-body.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/templates/emails/register-event.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/templates/loop/booking-form.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/templates/loop/content.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/templates/loop/countdown.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/templates/loop/excerpt.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/templates/loop/location.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/templates/loop/register.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/templates/loop/thumbnail.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/templates/loop/title.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/templates/notices/error.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/templates/notices/messages.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/templates/notices/success.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/templates/shortcodes/event-countdown.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/templates/shortcodes/event-list.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/templates/shortcodes/forgot-password.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/templates/shortcodes/form-login.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/templates/shortcodes/form-register.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/templates/shortcodes/register-completed.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/templates/shortcodes/register-error.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/templates/shortcodes/reset-password.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/templates/shortcodes/user-account.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-events-manager/templates/shortcodes/user-cannot-register.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:06.556371.

174 PHP_REACHES edges created
8 REACHES edges created
1000 PHP_REACHES edges created
1905 PHP_REACHES edges created
76 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
14000 PHP_REACHES edges created
15000 PHP_REACHES edges created
15517 PHP_REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
14000 PHP_REACHES edges created
15000 PHP_REACHES edges created
16000 PHP_REACHES edges created
17000 PHP_REACHES edges created
18000 PHP_REACHES edges created
19000 PHP_REACHES edges created
20000 PHP_REACHES edges created
21000 PHP_REACHES edges created
22000 PHP_REACHES edges created
23000 PHP_REACHES edges created
24000 PHP_REACHES edges created
25000 PHP_REACHES edges created
26000 PHP_REACHES edges created
27000 PHP_REACHES edges created
28000 PHP_REACHES edges created
29000 PHP_REACHES edges created
30000 PHP_REACHES edges created
31000 PHP_REACHES edges created
32000 PHP_REACHES edges created
33000 PHP_REACHES edges created
34000 PHP_REACHES edges created
35000 PHP_REACHES edges created
36000 PHP_REACHES edges created
37000 PHP_REACHES edges created
38000 PHP_REACHES edges created
39000 PHP_REACHES edges created
40000 PHP_REACHES edges created
41000 PHP_REACHES edges created
42000 PHP_REACHES edges created
43000 PHP_REACHES edges created
44000 PHP_REACHES edges created
45000 PHP_REACHES edges created
46000 PHP_REACHES edges created
47000 PHP_REACHES edges created
48000 PHP_REACHES edges created
49000 PHP_REACHES edges created
50000 PHP_REACHES edges created
51000 PHP_REACHES edges created
52000 PHP_REACHES edges created
53000 PHP_REACHES edges created
54000 PHP_REACHES edges created
55000 PHP_REACHES edges created
56000 PHP_REACHES edges created
57000 PHP_REACHES edges created
58000 PHP_REACHES edges created
59000 PHP_REACHES edges created
59221 PHP_REACHES edges created
76901 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 6083 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.301221.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 11 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:10.751957.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 25174
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 25174
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 25174
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 25174
Added 393 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:16.615315.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 379 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.223712.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:02.838481.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 25174
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 25174
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 25174
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 25174
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:06.999127.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.065679.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.030412.

11 CALLS edges created
772 PHP_REACHES edges created
783 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 524 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.143206.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
4 SQL operations to process.

					SELECT user.* FROM $wpdb AS user
					LEFT JOIN $wpdb AS pm ON user.ID = pm.meta_value
					LEFT JOIN $wpdb AS book ON pm.post_id = book.ID
					WHERE
						pm.meta_key = ea_booking_user_id
						AND book.post_type = %s
						AND book.post_status IN (%s,%s,%s,%s)
					GROUP BY user.ID
				

					SELECT user.* FROM $wpdb AS user
					LEFT JOIN $wpdb AS pm ON user.ID = pm.meta_value
					LEFT JOIN $wpdb AS book ON pm.post_id = book.ID
					WHERE
						pm.meta_key = ea_booking_user_id
						AND book.post_type = event_auth_book
						AND book.post_status IN (%s,%s,%s,%s)
					GROUP BY user.ID
				

					SELECT user.* FROM $wpdb AS user
					LEFT JOIN $wpdb AS pm ON user.ID = pm.meta_value
					LEFT JOIN $wpdb AS book ON pm.ea-cancelledst_id = book.ID
					WHERE
						pm.meta_key = ea_booking_user_id
						AND book.post_type = event_auth_book
						AND book.post_status IN (%s,%s,%s,%s)
					GROUP BY user.ID
				

					SELECT user.* FROM $wpdb AS user
					LEFT JOIN $wpdb AS pm ON user.ID = pm.meta_value
					LEFT JOIN $wpdb AS book ON pm.ea-cancelledst_id = book.ID
					WHERE
						pm.meta_key = ea_booking_user_id
					ea-pendingND book.post_type = event_auth_book
						AND book.post_status IN (%s,%s,%s,%s)
					GROUP BY user.ID
				
ea-processing					SELECT user.* FROM $wpdb AS user
					LEFT JOIN $wpdb AS pm ON user.ID = pm.meta_value
					LEFT JOIN $wpdb AS book ON pm.ea-cancelledst_id = book.ID
					WHERE
						pm.meta_key = ea_booking_user_id
					ea-pendingND book.post_type = event_auth_book
						AND book.post_status IN (%s,%s,%s,%s)
					GROUP BY user.ID
				
ea-processing					SELECT user.* FROM $wpdb AS user
					LEFT JOIN $wpdb AS pm ON user.ID = pm.meta_value
					LEFT JOIN $wpdb AS book ON pm.ea-cancelledst_id = book.ID
					WHERE
						pm.meta_key = eaea-completedooking_user_id
					ea-pendingND book.post_type = event_auth_book
						AND book.post_status IN (%s,%s,%s,%s)
					GROUP BY user.ID
				
ea-processing					SELECT user.* FROM $wpdb AS user
					LEFT JOIN $wpdb AS pm ON user.ID = pm.meta_value
					LEFT JOIN $wpdb AS book ON pm.ea-cancelledst_id = book.ID
					WHERE
						pm.meta_key = eaea-completedooking_user_id
					ea-pendingND book.post_type = event_auth_book
						AND book.post_status IN (%s,%s,%s,%s)
					GROUP BY user.ID
				
SQL command (ea-processing SELECT user.* FROM $wpdb AS user LEFT JOIN $wpdb AS pm ON user.ID = pm.meta_value LEFT JOIN $wpdb AS book ON pm.ea-cancelledst_id = book.ID WHERE pm.meta_key = eaea-completedooking_user_id ea-pendingND book.post_type = event_auth_book AND book.post_status IN (%s,%s,%s,%s) GROUP BY user.ID ) cannot be parsed correct.

				SELECT booked.* FROM $wpdb AS booked
					LEFT JOIN $wpdb AS event ON event.post_id = booked.ID
					LEFT JOIN $wpdb AS book_quanity ON book_quanity.post_id = booked.ID
					LEFT JOIN $wpdb AS user_booked ON user_booked.post_id = booked.ID
					LEFT JOIN $wpdb AS user ON user.ID = user_booked.meta_value
				WHERE booked.post_type = event_auth_book
					AND event.meta_key = %s
					AND event.meta_value = %d
					AND user_booked.meta_key = %s
					AND book_quanity.meta_key = %s
			

				SELECT booked.* FROM $wpdb AS booked
					LEFT JOIN $wpdb AS event ON event.post_id = booked.ID
					LEFT JOIN $wpdb AS book_quanity ON book_quanity.post_id = booked.ID
					LEFT JOIN $wpdb AS user_booked ON user_booked.post_id = booked.ID
					LEFT JOIN $wpdb AS user ON user.ID = user_booked.meta_value
				WHERE booked.post_type = event_auth_book
					AND event.meta_key = ea_booking_event_id
					AND event.meta_value = %d
					AND user_booked.meta_key = %s
					AND book_quanity.meta_key = %s
			

				SELECT booked.* FROM $wpdb AS booked
					LEFT JOIN $wpdb AS event ON event.post_id = booked.ID
					LEFT JOIN $wpdb AS book_quanity ON book_quanity.post_id = booked.ID
					LEFT JOIN $wpdb AS user_booked ON user_booked.post_id = booked.ID
					LEFT JOIN $wpdb AS user ON user.ID = user_booked.$this_IDta_value
				WHERE booked.post_type = event_auth_book
					AND event.meta_key = ea_booking_event_id
					AND event.meta_value = %d
					AND user_booked.meta_key = %s
					AND book_quanity.meta_key = %s
			

ea_booking_user_id		SELECT booked.* FROM $wpdb AS booked
					LEFT JOIN $wpdb AS event ON event.post_id = booked.ID
					LEFT JOIN $wpdb AS book_quanity ON book_quanity.post_id = booked.ID
					LEFT JOIN $wpdb AS user_booked ON user_booked.post_id = booked.ID
					LEFT JOIN $wpdb AS user ON user.ID = user_booked.$this_IDta_value
				WHERE booked.post_type = event_auth_book
					AND event.meta_key = ea_booking_event_id
					AND event.meta_value = %d
					AND user_booked.meta_key = %s
					AND book_quanity.meta_key = %s
			

ea_booking_user_id		SELECT booked.* FROM $wpdb AS booked
					LEFT JOIN $wpdb AS event ON event.post_id = booked.ID
					LEFT JOIN $wpdb AS book_quanity ON book_quanity.post_id = booked.ID
					LEFT JOIN $wpdb AS user_booked ON user_booked.post_id = booked.ID
					LEFT JOIN $wpdb AS user ON user.ID = user_booked.$this_IDta_value
				WHERE booked.post_type = event_auth_book
					AND event.meta_key = ea_booking_event_id
					AND event.meta_value = %d
					AND user_booked.meta_key = %ea_booking_qty
					AND book_quanity.meta_key = %s
			

ea_booking_user_id		SELECT booked.* FROM $wpdb AS booked
					LEFT JOIN $wpdb AS event ON event.post_id = booked.ID
					LEFT JOIN $wpdb AS book_quanity ON book_quanity.post_id = booked.ID
					LEFT JOIN $wpdb AS user_booked ON user_booked.post_id = booked.ID
					LEFT JOIN $wpdb AS user ON user.ID = user_booked.$this_IDta_value
				WHERE booked.post_type = event_auth_book
					AND event.meta_key = ea_booking_event_id
					AND event.meta_value = %d
					AND user_booked.meta_key = %ea_booking_qty
					AND book_quanity.meta_key = %s
			
SQL command ( ea_booking_user_id SELECT booked.* FROM $wpdb AS booked LEFT JOIN $wpdb AS event ON event.post_id = booked.ID LEFT JOIN $wpdb AS book_quanity ON book_quanity.post_id = booked.ID LEFT JOIN $wpdb AS user_booked ON user_booked.post_id = booked.ID LEFT JOIN $wpdb AS user ON user.ID = user_booked.$this_IDta_value WHERE booked.post_type = event_auth_book AND event.meta_key = ea_booking_event_id AND event.meta_value = %d AND user_booked.meta_key = %ea_booking_qty AND book_quanity.meta_key = %s ) cannot be parsed correct.

				SELECT booking.ID FROM $wpdbposts AS booking 
				INNER JOIN $wpdbpostmeta AS booking_meta ON booking.ID = booking_meta.post_id
				WHERE 
				booking.post_type = event_auth_book AND booking_meta.meta_key = %s AND booking_meta.meta_value = %s

				SELECT booking.ID FROM $wpdbposts AS booking 
				INNER JOIN $wpdbpostmeta AS booking_meta ON booking.ID = booking_meta.post_id
				WHERE 
				booking.post_type = event_auth_book AND booking_meta.meta_key = ea_booking_user_id AND booking_meta.meta_value = %s

				SELECT booking.ID FROM $wpdbposts AS booking 
				INNER JOIN $wpdbpostget_user_by("email", $email_address)ta AS booking_meta ON booking.ID = booking_meta.post_id
				WHERE 
				booking.post_type = event_auth_book AND booking_meta.meta_key = ea_booking_user_id AND booking_meta.meta_value = %s

				SELECT booking.ID FROM $wpdbposts AS booking 
				INNER JOIN $wpdbpostget_user_by("email", $email_address)ta AS booking_meta ON booking.ID = booking_meta.post_id
				WHERE 
				booking.post_type = event_auth_book AND booking_meta.meta_key = ea_booking_user_id AND booking_meta.meta_value = %s
SQL command ( SELECT booking.ID FROM $wpdbposts AS booking INNER JOIN $wpdbpostget_user_by("email", $email_address)ta AS booking_meta ON booking.ID = booking_meta.post_id WHERE booking.post_type = event_auth_book AND booking_meta.meta_key = ea_booking_user_id AND booking_meta.meta_value = %s) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [2285, 11879, 12912, 31903]
Added 0 SQL nodes. 0 out of 4 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:02.736511.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'implode("", $html)'' cannot be parsed correct.
HTML code '$'<li><a href=admin_url("admin.php?page=tp-event-setting&tab=" . $this->id . "&section=" . sanitize_title($id))" class="current"$label</a> | </li>'' cannot be parsed correct.
HTML code '$'<p>wp_kses_post($error)</p>'' cannot be parsed correct.
HTML code '$'<div class="updated inline"><p>$message</p></div>'' cannot be parsed correct.
HTML code '$'admin_url("admin.php?page=tp-event-setting&tab=" . $key)'' cannot be parsed correct.
HTML code '$' nav-tab-active'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'get_post_meta($post_id, $prefix . "location", true)'' cannot be parsed correct.
HTML code '$'You need set up Google Map API Key to show map.'' cannot be parsed correct.
HTML code '$'get_admin_url()/admin.php?page=tp-event-setting&tab=event_general'' cannot be parsed correct.
HTML code '$'Set up here'' cannot be parsed correct.
HTML code '$'[wp_event_countdown event_id=$post"'' cannot be parsed correct.
HTML code '$'class=$field_class'' cannot be parsed correct.
HTML code '$'$field_id'' cannot be parsed correct.
HTML code '$'$field_title'' cannot be parsed correct.
HTML code '$'$field_type'' cannot be parsed correct.
HTML code '$'$field_id'' cannot be parsed correct.
HTML code '$'$field_id'' cannot be parsed correct.
HTML code '$'checked($field["default"], 1)checked($val, 1, false)'' cannot be parsed correct.
HTML code '$'Booking Status'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$' selected'' cannot be parsed correct.
HTML code '$'Update booking event status'' cannot be parsed correct.
HTML code '$'Booking Notes'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "ea_booking_note", true)'' cannot be parsed correct.
HTML code '$'get_avatar($booking->user_id, 120)'' cannot be parsed correct.
HTML code '$'sprintf("<a href="%s">%s</a>", admin_url("admin.php?page=tp-event-users&user_id=" . $booking->user_id), $user->data->user_nicename)'' cannot be parsed correct.
HTML code '$'get_userdata($booking->user_id)_user_email'' cannot be parsed correct.
HTML code '$'sprintf(esc_attr__("Order %s", "wp-events-manager"), wpems_format_ID($post->ID))'' cannot be parsed correct.
HTML code '$'sprintf(__("Date %s", "wp-events-manager"), $post->post_date)'' cannot be parsed correct.
HTML code '$'$field_desc'' cannot be parsed correct.
HTML code '$'class=$field_class'' cannot be parsed correct.
HTML code '$'$field_id'' cannot be parsed correct.
HTML code '$'$field_title'' cannot be parsed correct.
HTML code '$'$field_type'' cannot be parsed correct.
HTML code '$'$field_id'' cannot be parsed correct.
HTML code '$'wpems_get_option($field["id"] . "_width", isset($field["default"]["width"])$field["default"]["width"]270)'' cannot be parsed correct.
HTML code '$'$field_id'' cannot be parsed correct.
HTML code '$'wpems_get_option($field["id"] . "_height", isset($field["default"]["height"])$field["default"]["height"]270)'' cannot be parsed correct.
HTML code '$'$field_desc'' cannot be parsed correct.
HTML code '$'class=$field_class'' cannot be parsed correct.
HTML code '$'$field_id'' cannot be parsed correct.
HTML code '$'$field_title'' cannot be parsed correct.
HTML code '$'$field_type'' cannot be parsed correct.
HTML code '$'$field_id'' cannot be parsed correct.
HTML code '$'$text'' cannot be parsed correct.
HTML code '$'$field_desc'' cannot be parsed correct.
HTML code '$'<h3>$field_title</h3>'' cannot be parsed correct.
HTML code '$'$booking_event_id'' cannot be parsed correct.
HTML code '$'sprintf("<a href="%s">%s</a>", get_edit_post_link($booking->event_id), get_the_title($booking->event_id))'' cannot be parsed correct.
HTML code '$'sprintf("%s", wpems_format_price(floatval($event->price)))'' cannot be parsed correct.
HTML code '$'sprintf("%s", $booking->qty)'' cannot be parsed correct.
HTML code '$'sprintf("%s", $booking->payment_idwpems_get_payment_title($booking->payment_id)__("No payment", "wp-events-manager"))'' cannot be parsed correct.
HTML code '$'sprintf("%s", wpems_format_price(floatval($booking->price)))'' cannot be parsed correct.
HTML code '$'sprintf("%s", wpems_format_price(floatval($booking->price)))'' cannot be parsed correct.
HTML code '$'tp_event_'' cannot be parsed correct.
HTML code '$'absint($qty)'' cannot be parsed correct.
HTML code '$'<span class="description">$field_desc</span>'' cannot be parsed correct.
HTML code '$'class=$field_class'' cannot be parsed correct.
HTML code '$'$field_id'' cannot be parsed correct.
HTML code '$'$field_title'' cannot be parsed correct.
HTML code '$'$field_type'' cannot be parsed correct.
HTML code '$'$field_desc'' cannot be parsed correct.
HTML code '$'class=$field_class'' cannot be parsed correct.
HTML code '$'$field_id'' cannot be parsed correct.
HTML code '$'$field_title'' cannot be parsed correct.
HTML code '$'$field_type'' cannot be parsed correct.
HTML code '$'$field_id'' cannot be parsed correct.
HTML code '$'[]'' cannot be parsed correct.
HTML code '$'$field_id'' cannot be parsed correct.
HTML code '$'multiple="multiple"'' cannot be parsed correct.
HTML code '$'$val'' cannot be parsed correct.
HTML code '$' selected'' cannot be parsed correct.
HTML code '$'$text'' cannot be parsed correct.
HTML code '$'$field_desc'' cannot be parsed correct.
HTML code '$'class=$field_class'' cannot be parsed correct.
HTML code '$'$field_id'' cannot be parsed correct.
HTML code '$'tp_event_'' cannot be parsed correct.
HTML code '$'floatval($price)'' cannot be parsed correct.
HTML code '$'Set 0 to make it becomes free event'' cannot be parsed correct.
HTML code '$'Start/End'' cannot be parsed correct.
HTML code '$'tp_event_'' cannot be parsed correct.
HTML code '$'tp_event_date("Y-m-d", strtotime("today"))'' cannot be parsed correct.
HTML code '$'tp_event_'' cannot be parsed correct.
HTML code '$'tp_event_'' cannot be parsed correct.
HTML code '$'to'' cannot be parsed correct.
HTML code '$'tp_event_'' cannot be parsed correct.
HTML code '$'tp_event_date("Y-m-d", strtotime("tomorrow"))'' cannot be parsed correct.
HTML code '$'tp_event_'' cannot be parsed correct.
HTML code '$'tp_event_'' cannot be parsed correct.
HTML code '$'tp_event_'' cannot be parsed correct.
HTML code '$'$field_title'' cannot be parsed correct.
HTML code '$'$field_type'' cannot be parsed correct.
HTML code '$'$field_type'' cannot be parsed correct.
HTML code '$'$field_id'' cannot be parsed correct.
HTML code '$'thimpress_events_thimpress_events_'' cannot be parsed correct.
HTML code '$'$field_placeholder'' cannot be parsed correct.
HTML code '$' min=$field_min'' cannot be parsed correct.
HTML code '$' max=$field_max'' cannot be parsed correct.
HTML code '$' step=$field_step'' cannot be parsed correct.
HTML code '$'$field_desc'' cannot be parsed correct.
HTML code '$'class=$field_class'' cannot be parsed correct.
HTML code '$'$field_id'' cannot be parsed correct.
HTML code '$'$field_title'' cannot be parsed correct.
HTML code '$'$field_type'' cannot be parsed correct.
HTML code '$'$field_desc'' cannot be parsed correct.
HTML code '$'sanitize_key($field["id"])'' cannot be parsed correct.
HTML code '$'$variable'' cannot be parsed correct.
HTML code '$'$variable'' cannot be parsed correct.
HTML code '$'class=$field_class'' cannot be parsed correct.
HTML code '$'$field_id'' cannot be parsed correct.
HTML code '$'$field_title'' cannot be parsed correct.
HTML code '$'$field_type'' cannot be parsed correct.
HTML code '$'$field_id'' cannot be parsed correct.
HTML code '$'$field_id'' cannot be parsed correct.
HTML code '$'checked($field["default"], "yes")checked($val, "yes", false)'' cannot be parsed correct.
HTML code '$'$field_desc'' cannot be parsed correct.
HTML code '$'ob_get_clean()'' cannot be parsed correct.
HTML code '$'get_post_meta($post_id, "tp_event_status", true)'' cannot be parsed correct.
HTML code '$'<span class="event_auth_event_type">Free</span>'' cannot be parsed correct.
HTML code '$'sprintf(__("<span class="event_auth_event_type">%s/%s</span>", "wp-events-manager"), wpems_format_price($event->get_price()), __("slot", "wp-events-manager"))'' cannot be parsed correct.
HTML code '$'sprintf("%s / %s", $event->booked_quantity(), $total)'' cannot be parsed correct.
HTML code '$'sprintf("<a href="%s">%s</a>", get_edit_post_link($booking->ID), wpems_format_ID($booking_id))'' cannot be parsed correct.
HTML code '$'sprintf("<a href="%s">%s</a>", get_edit_post_link($booking->event_id), get_the_title($booking->event_id))'' cannot be parsed correct.
HTML code '$'implode("", $return)'' cannot be parsed correct.
HTML code '$'get_the_date("", $booking->ID)'' cannot be parsed correct.
HTML code '$'wpems_format_price($booking->price)Free'' cannot be parsed correct.
HTML code '$'$booking_qty'' cannot be parsed correct.
HTML code '$'implode("", $return)'' cannot be parsed correct.
HTML code '$'<div class="event-wrapper-shortcode$shortcode"'' cannot be parsed correct.
HTML code '$'$args_before_widget'' cannot be parsed correct.
HTML code '$'$args_before_titleapply_filters("widget_title", $instance["title"])$args_after_title'' cannot be parsed correct.
HTML code '$' button-primary'' cannot be parsed correct.
HTML code '$' active'' cannot be parsed correct.
HTML code '$'$stt'' cannot be parsed correct.
HTML code '$'$this-get_the_ID()'' cannot be parsed correct.
HTML code '$'$this->get_field_name("wp_events")'' cannot be parsed correct.
HTML code '$'get_the_ID()'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'$this-get_the_ID()'' cannot be parsed correct.
HTML code '$'do_shortcode(implode(" ", $html))'' cannot be parsed correct.
HTML code '$'$args_after_widget'' cannot be parsed correct.
HTML code '$'$this->get_field_id("title")'' cannot be parsed correct.
HTML code '$'$this->get_field_id("title")'' cannot be parsed correct.
HTML code '$'$this->get_field_name("title")'' cannot be parsed correct.
HTML code '$'$title'' cannot be parsed correct.
HTML code '$'$this->get_field_id("wp_slide")'' cannot be parsed correct.
HTML code '$'$this->get_field_id("wp_slide")'' cannot be parsed correct.
HTML code '$'$this->get_field_name("wp_slide")'' cannot be parsed correct.
HTML code '$' checked'' cannot be parsed correct.
HTML code '$'$this->get_field_id("wp_navigation")'' cannot be parsed correct.
HTML code '$'$this->get_field_id("wp_navigation")'' cannot be parsed correct.
HTML code '$'$this->get_field_name("wp_navigation")'' cannot be parsed correct.
HTML code '$' checked'' cannot be parsed correct.
HTML code '$'$this->get_field_id("wp_pagination")'' cannot be parsed correct.
HTML code '$'$this->get_field_id("wp_pagination")'' cannot be parsed correct.
HTML code '$'$this->get_field_name("wp_pagination")'' cannot be parsed correct.
HTML code '$' checked'' cannot be parsed correct.
HTML code '$'$this->get_field_id("wp_events")'' cannot be parsed correct.
HTML code '$'$this->events($selected)'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'apply_filters("tp_event_filter_event_location_map", ["height" => "300px", "width" => "100%", "map_id" => md5(wpems_event_location()), "map_data" => ["address" => wpems_event_location(), "zoom" => 14, "scroll-zoom" => true, "draggable" => false, "api-key" => wpems_get_option("google_map_api_key"), "marker-icon" => apply_filters("tp-event-map-marker", WPEMS_ASSETS_URI . "images/map-marker.png"), "marker-at-center" => true]])_height'' cannot be parsed correct.
HTML code '$'apply_filters("tp_event_filter_event_location_map", ["height" => "300px", "width" => "100%", "map_id" => md5(wpems_event_location()), "map_data" => ["address" => wpems_event_location(), "zoom" => 14, "scroll-zoom" => true, "draggable" => false, "api-key" => wpems_get_option("google_map_api_key"), "marker-icon" => apply_filters("tp-event-map-marker", WPEMS_ASSETS_URI . "images/map-marker.png"), "marker-at-center" => true]])_width'' cannot be parsed correct.
HTML code '$'apply_filters("tp_event_filter_event_location_map", ["height" => "300px", "width" => "100%", "map_id" => md5(wpems_event_location()), "map_data" => ["address" => wpems_event_location(), "zoom" => 14, "scroll-zoom" => true, "draggable" => false, "api-key" => wpems_get_option("google_map_api_key"), "marker-icon" => apply_filters("tp-event-map-marker", WPEMS_ASSETS_URI . "images/map-marker.png"), "marker-at-center" => true]])_map_id'' cannot be parsed correct.
HTML code '$'$key=$val'' cannot be parsed correct.
HTML code '$'ob_get_clean()'' cannot be parsed correct.
HTML code '$'<a href=admin_url($admin_tabs[$admin_tab_id]["link"])" class="get_current_screen() nav-tab-apply_filters("tp_event_admin_event_tab_info", [10 => ["link" => "edit.php?post_type=tp_event", "name" => __("Events", "wp-events-manager"), "id" => "edit-tp_event"], 20 => ["link" => "edit-tags.php?taxonomy=tp_event_category&post_type=tp_event", "name" => __("Categories", "wp-events-manager"), "id" => "edit-tp_event_category"], 30 => ["link" => "edit-tags.php?taxonomy=tp_event_tag&post_type=tp_event", "name" => __("Tags", "wp-events-manager"), "id" => "edit-tp_event_tag"]])_$admin_tab_id_id"apply_filters("tp_event_admin_event_tab_info", [10 => ["link" => "edit.php?post_type=tp_event", "name" => __("Events", "wp-events-manager"), "id" => "edit-tp_event"], 20 => ["link" => "edit-tags.php?taxonomy=tp_event_category&post_type=tp_event", "name" => __("Categories", "wp-events-manager"), "id" => "edit-tp_event_category"], 30 => ["link" => "edit-tags.php?taxonomy=tp_event_tag&post_type=tp_event", "name" => __("Tags", "wp-events-manager"), "id" => "edit-tp_event_tag"]])_$admin_tab_id_name</a>'' cannot be parsed correct.
HTML code '$'wp_kses("<strong>WP Events Manager</strong> plugin version " . WPEMS_VER . " is an upgrade of <strong>Thim Events</strong> plugin and already included <strong>Thim Event Authentication</strong> add-on. Please deactivate and delete <strong>Thim Events/Thim Event Authentication</strong>.", ["strong" => []])'' cannot be parsed correct.
HTML code '$'get_the_password_form()'' cannot be parsed correct.
HTML code '$'$event->get_title()'' cannot be parsed correct.
HTML code '$'$event->get_slot_available()'' cannot be parsed correct.
HTML code '$'$id'' cannot be parsed correct.
HTML code '$'$id'' cannot be parsed correct.
HTML code '$' checked'' cannot be parsed correct.
HTML code '$'$id'' cannot be parsed correct.
HTML code '$'$payment->get_title()'' cannot be parsed correct.
HTML code '$'$event_id'' cannot be parsed correct.
HTML code '$'disabled="disabled"'' cannot be parsed correct.
HTML code '$'$date->format("M j, Y H:i:s O")'' cannot be parsed correct.
HTML code '$'This event has expired'' cannot be parsed correct.
HTML code '$'get_the_permalink()'' cannot be parsed correct.
HTML code '$'absint($event->qty)'' cannot be parsed correct.
HTML code '$'absint($event->booked_quantity())'' cannot be parsed correct.
HTML code '$'You have registered this event before.'' cannot be parsed correct.
HTML code '$'get_the_ID()'' cannot be parsed correct.
HTML code '$'sprintf(__("You must <a href="%s">login</a> before register event.", "wp-events-manager"), wpems_login_url())'' cannot be parsed correct.
HTML code '$'sprintf("%s", $message)'' cannot be parsed correct.
HTML code '$'sprintf("%s", $message)'' cannot be parsed correct.
HTML code '$'paginate_links(apply_filters("tp_event_pagination_args", ["base" => esc_url_raw(str_replace(999999999, "%#%", get_pagenum_link(999999999, false))), "format" => "", "add_args" => "", "current" => max(1, get_query_var("paged")), "total" => $wp_query->max_num_pages, "prev_text" => __("<", "wp-events-manager"), "next_text" => __(">", "wp-events-manager"), "type" => "list", "end_size" => 3, "mid_size" => 3]))'' cannot be parsed correct.
HTML code '$'<h2><a href=get_permalink($id)">get_the_title($id)</a></h2>'' cannot be parsed correct.
HTML code '$'$date->format("M j, Y H:i:s O")'' cannot be parsed correct.
HTML code '$'Invalid Event ID'' cannot be parsed correct.
HTML code '$'sanitize_text_field($_POST["user_login"])'' cannot be parsed correct.
HTML code '$'https://http://$_SERVER_HTTP_HOST$_SERVER_REQUEST_URI'' cannot be parsed correct.
HTML code '$'wpems_login_url()'' cannot be parsed correct.
HTML code '$'wpems_register_url()'' cannot be parsed correct.
HTML code '$'sanitize_text_field($_POST["user_login"])'' cannot be parsed correct.
HTML code '$'https://http://$_SERVER_HTTP_HOST$_SERVER_REQUEST_URI'' cannot be parsed correct.
HTML code '$'paginate_links(["base" => str_replace(9999999, "%#%", esc_url(get_pagenum_link(9999999))), "format" => "?paged=%#%", "prev_text" => __("Â« Previous", "wp-events-manager"), "next_text" => __("Next Â»", "wp-events-manager"), "current" => max(1, get_query_var("paged")), "total" => $query->max_num_pages])'' cannot be parsed correct.
HTML code '$'get_post_type_archive_link("tp_event")'' cannot be parsed correct.
HTML code '$'wpems_register_url()'' cannot be parsed correct.
HTML code '$'wp_lostpassword_url()'' cannot be parsed correct.
HTML code '$'sanitize_text_field($_POST["user_login"])'' cannot be parsed correct.
HTML code '$'sanitize_text_field($_POST["user_email"])'' cannot be parsed correct.
HTML code '$'https://http://$_SERVER_HTTP_HOST$_SERVER_REQUEST_URI'' cannot be parsed correct.
HTML code '$'wpems_login_url()'' cannot be parsed correct.
HTML code '$'wp_lostpassword_url()'' cannot be parsed correct.
HTML code '$'network_site_url("wp-login.php?action=resetpass", "login_post")'' cannot be parsed correct.
HTML code '$'$atts_login'' cannot be parsed correct.
HTML code '$'wp_get_password_hint()'' cannot be parsed correct.
HTML code '$'$atts_key'' cannot be parsed correct.
HTML code '$'wp_login_url()'' cannot be parsed correct.
HTML code '$' | sprintf("<a href="%s">%s</a>", esc_url(wp_registration_url()), __("Register", "wp-events-manager"))'' cannot be parsed correct.
HTML code '$'<ul class="subsubsub">'' cannot be parsed correct.
HTML code '$'<div id="event_error" class="error notice is-dismissible">'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'</ul><br class="clear" />'' cannot be parsed correct.
HTML code '$'" data-tab="'' cannot be parsed correct.
HTML code '$'">
							'' cannot be parsed correct.
HTML code '$'                            </a>
						'' cannot be parsed correct.
HTML code '$'location" id="_location" value="'' cannot be parsed correct.
HTML code '$'">
            </p>
		'' cannot be parsed correct.
HTML code '$'</a>
                </p>
			'' cannot be parsed correct.
HTML code '$'</label>
                <input type="text" class="short" id="_shortcode" value="'' cannot be parsed correct.
HTML code '$'">
			'' cannot be parsed correct.
HTML code '$'            </label>
		'' cannot be parsed correct.
HTML code '$'">
        <input type="hidden" name="'' cannot be parsed correct.
HTML code '$'" value="0" />
        <input type="checkbox" name="'' cannot be parsed correct.
HTML code '$'" value="1"
			'' cannot be parsed correct.
HTML code '$'>'' cannot be parsed correct.
HTML code '$'</option>
		'' cannot be parsed correct.
HTML code '$'</div>
		'' cannot be parsed correct.
HTML code '$'">
			'' cannot be parsed correct.
HTML code '$'            </label>
		'' cannot be parsed correct.
HTML code '$'">
	'' cannot be parsed correct.
HTML code '$'_width"
                    value="'' cannot be parsed correct.
HTML code '$'"
                /> x
		'' cannot be parsed correct.
HTML code '$'_height"
                    value="'' cannot be parsed correct.
HTML code '$'"
                /> px
		'' cannot be parsed correct.
HTML code '$'</div>
			'' cannot be parsed correct.
HTML code '$'">
			'' cannot be parsed correct.
HTML code '$'            </label>
		'' cannot be parsed correct.
HTML code '$'">
	'' cannot be parsed correct.
HTML code '$'                </label>

			'' cannot be parsed correct.
HTML code '$'</div>
			'' cannot be parsed correct.
HTML code '$'</table>'' cannot be parsed correct.
HTML code '$'</th>
                <th>'' cannot be parsed correct.
HTML code '$'</td>
                <td>'' cannot be parsed correct.
HTML code '$'</td>
                <td>'' cannot be parsed correct.
HTML code '$'</td>
                <td>'' cannot be parsed correct.
HTML code '$'</td>
                <td>'' cannot be parsed correct.
HTML code '$'</td>
            </tr>
            </tbody>
            <tfoot>
            <tr>
                <td width="300" colspan="4">'' cannot be parsed correct.
HTML code '$'</td>
            </tr>
            </tfoot>
			'' cannot be parsed correct.
HTML code '$'</label>
                <input type="number" min="0" step="1" class="short" name="'' cannot be parsed correct.
HTML code '$'qty" id="_qty" value="'' cannot be parsed correct.
HTML code '$'">
            </p>
        </div>
        <div class="option_group">
            <p class="form-field">
                <label for="_price">'' cannot be parsed correct.
HTML code '$'<table class="form-table">'' cannot be parsed correct.
HTML code '$'">
			'' cannot be parsed correct.
HTML code '$'            </label>
		'' cannot be parsed correct.
HTML code '$'">
	'' cannot be parsed correct.
HTML code '$'</div>
			'' cannot be parsed correct.
HTML code '$'">
			'' cannot be parsed correct.
HTML code '$'            </label>
		'' cannot be parsed correct.
HTML code '$'">
	'' cannot be parsed correct.
HTML code '$'"
                    id="'' cannot be parsed correct.
HTML code '$'"
			'' cannot be parsed correct.
HTML code '$'            >
				'' cannot be parsed correct.
HTML code '$'"
					'' cannot be parsed correct.
HTML code '$'                    >
						'' cannot be parsed correct.
HTML code '$'                    </option>
				'' cannot be parsed correct.
HTML code '$'</div>
			'' cannot be parsed correct.
HTML code '$'</label>
                <input type="number" step="any" min="0" class="short" name="'' cannot be parsed correct.
HTML code '$'price" id="_price" value="'' cannot be parsed correct.
HTML code '$'" />
            </p>
            <p class="event-meta-notice">
				'' cannot be parsed correct.
HTML code '$'date_start" id="_date_start"
                       value="'' cannot be parsed correct.
HTML code '$'time_start" id="_time_start"
                       value="'' cannot be parsed correct.
HTML code '$'">
                <span class="time-connect"> '' cannot be parsed correct.
HTML code '$'date_end" id="_date_end"
                       value="'' cannot be parsed correct.
HTML code '$'time_end" id="_time_end"
                       value="'' cannot be parsed correct.
HTML code '$'">
            </div>
        </div>
        <div class="option_group">
            <p class="form-field">
                <label for="_location">'' cannot be parsed correct.
HTML code '$'</label>
                <input type="text" class="short" name="'' cannot be parsed correct.
HTML code '$'</div>
		'' cannot be parsed correct.
HTML code '$'">
			'' cannot be parsed correct.
HTML code '$'            </label>
		'' cannot be parsed correct.
HTML code '$'">
        <input
            type="'' cannot be parsed correct.
HTML code '$'"
            name="'' cannot be parsed correct.
HTML code '$'"
            value="'' cannot be parsed correct.
HTML code '$'"
            class="regular-text"
            placeholder="'' cannot be parsed correct.
HTML code '$'"
		'' cannot be parsed correct.
HTML code '$'				'' cannot be parsed correct.
HTML code '$'				'' cannot be parsed correct.
HTML code '$'
			'' cannot be parsed correct.
HTML code '$'</div>
		'' cannot be parsed correct.
HTML code '$'">
			'' cannot be parsed correct.
HTML code '$'            </label>
		'' cannot be parsed correct.
HTML code '$'">
	'' cannot be parsed correct.
HTML code '$'</div>
			'' cannot be parsed correct.
HTML code '$'">
			'' cannot be parsed correct.
HTML code '$'            </label>
		'' cannot be parsed correct.
HTML code '$'">
        <input type="hidden" name="'' cannot be parsed correct.
HTML code '$'" value="no" />
        <input type="checkbox" name="'' cannot be parsed correct.
HTML code '$'" value="yes"
			'' cannot be parsed correct.
HTML code '$'<pre>'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'" class="button'' cannot be parsed correct.
HTML code '$'                    </a>
                </li>
				'' cannot be parsed correct.
HTML code '$'			'' cannot be parsed correct.
HTML code '$'">
                    <ul>
					'' cannot be parsed correct.
HTML code '$'[]" value="'' cannot be parsed correct.
HTML code '$'>
        </p>
        <p>
            <label for='' cannot be parsed correct.
HTML code '$'>
        </p>
        <p>
            <label for='' cannot be parsed correct.
HTML code '$'>
        </p>
        <p>
            <label for='' cannot be parsed correct.
HTML code '$'        </p>
		'' cannot be parsed correct.
HTML code '$'				'' cannot be parsed correct.
HTML code '$'			'' cannot be parsed correct.
HTML code '$'</th>
        <th>'' cannot be parsed correct.
HTML code '$'</th>
        <th>'' cannot be parsed correct.
HTML code '$'</th>
        <th>'' cannot be parsed correct.
HTML code '$'</th>
        <th>'' cannot be parsed correct.
HTML code '$'</th>
        <th>'' cannot be parsed correct.
HTML code '$'</th>
        <th>'' cannot be parsed correct.
HTML code '$'</th>
        <th>'' cannot be parsed correct.
HTML code '$'</th>
    </tr>
    </thead>
    <tbody>
    <tr>
        <td>'' cannot be parsed correct.
HTML code '$'</td>
        <td>'' cannot be parsed correct.
HTML code '$'</td>
        <td>'' cannot be parsed correct.
HTML code '$'</td>
        <td>'' cannot be parsed correct.
HTML code '$'</td>
        <td>'' cannot be parsed correct.
HTML code '$'</td>
        <td>'' cannot be parsed correct.
HTML code '$'</td>
        <td>'' cannot be parsed correct.
HTML code '$'</td>
        <td>
			'' cannot be parsed correct.
HTML code '$'</th>
		<th>'' cannot be parsed correct.
HTML code '$'</th>
		<th>'' cannot be parsed correct.
HTML code '$'</th>
		<th>'' cannot be parsed correct.
HTML code '$'</th>
		<th>'' cannot be parsed correct.
HTML code '$'</th>
		<th>'' cannot be parsed correct.
HTML code '$'</th>
		<th>'' cannot be parsed correct.
HTML code '$'</th>
	</tr>
	</thead>
	<tbody>
	<tr>
		<td>#{booking_id}</td>
		<td><a href="{event_link}">{event_title}</a></td>
		<td>{event_type}</td>
		<td>{booking_quantity}</td>
		<td>{booking_price}</td>
		<td>{booking_payment_method}</td>
		<td>{booking_status}</td>
	</tr>
	</tbody>
</table>'' cannot be parsed correct.
HTML code '$'</h2>

    <form name="event_register" class="event_register" method="POST">

		'' cannot be parsed correct.
HTML code '$'</label>
                <input type="number" name="qty" value="1" min="1" max="'' cannot be parsed correct.
HTML code '$'" id="event_register_qty" />
            </div>
		'' cannot be parsed correct.
HTML code '$'" type="radio" name="payment_method" value="'' cannot be parsed correct.
HTML code '$'/>
                            <label for="payment_method'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</label>
                        </li>
						'' cannot be parsed correct.
HTML code '$'" />
            <input type="hidden" name="action" value="event_auth_register" />
			'' cannot be parsed correct.
HTML code '$'>'' cannot be parsed correct.
HTML code '$'"></div>
'' cannot be parsed correct.
HTML code '$'</span>
            <span class="detail">'' cannot be parsed correct.
HTML code '$'</span>
        </li>
        <li class="booking_slot">
            <span class="label">'' cannot be parsed correct.
HTML code '$'</span>
            <span class="detail">'' cannot be parsed correct.
HTML code '$'</span>
        </li>
        <li class="price">
            <span class="label">'' cannot be parsed correct.
HTML code '$'</span>
            <span class="detail">'' cannot be parsed correct.
HTML code '$'</span>
        </li>
    </ul>

	'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'">
		'' cannot be parsed correct.
HTML code '$'">
'' cannot be parsed correct.
HTML code '$'</li>

	'' cannot be parsed correct.
HTML code '$'</div>

'' cannot be parsed correct.
HTML code '$'"></div>
        </div>
	'' cannot be parsed correct.
HTML code '$'        </p>
        <p class="form-row required">
            <label for="user_login" >'' cannot be parsed correct.
HTML code '$'                <input type="text" name="user_login" id="user_login" class="input" value="'' cannot be parsed correct.
HTML code '$'">
           '' cannot be parsed correct.
HTML code '$'">
               '' cannot be parsed correct.
HTML code '$'<span class="required">*</span></label>
        <input type="text" name="user_login" id="user_login" class="input" value="'' cannot be parsed correct.
HTML code '$'" size="20" /></label>
    </p>

    <p class="form-row form-required">
        <label for="user_pass">'' cannot be parsed correct.
HTML code '$'<span class="required">*</span></label>
        <input type="password" name="user_pass" id="user_pass" class="input" value="" size="25" />
    </p>

    '' cannot be parsed correct.
HTML code '$'    </a>
</div>'' cannot be parsed correct.
HTML code '$'            <tr>
                <td>'' cannot be parsed correct.
HTML code '$'</td>
                <td>'' cannot be parsed correct.
HTML code '$'</td>
                <td>'' cannot be parsed correct.
HTML code '$'</td>
                <td>'' cannot be parsed correct.
HTML code '$'</td>
                <td>'' cannot be parsed correct.
HTML code '$'</td>
                <td>'' cannot be parsed correct.
HTML code '$'</td>
                <th>'' cannot be parsed correct.
HTML code '$'</p>'' cannot be parsed correct.
HTML code '$'</a> |
    '' cannot be parsed correct.
HTML code '$'</a>
</p>
'' cannot be parsed correct.
HTML code '$'<span class="required">*</span></label>
        <input type="text" name="user_login" id="user_login" class="input" value="'' cannot be parsed correct.
HTML code '$'<span class="required">*</span></label>
        <input type="email" name="user_email" id="user_email" class="input" value="'' cannot be parsed correct.
HTML code '$'<span class="required">*</span></label>
        <input type="password" name="user_pass" id="user_pass" class="input" value="" size="25" />
    </p>

    <p class="form-row form-required">
        <label for="confirm_password">'' cannot be parsed correct.
HTML code '$'<span class="required">*</span></label>
        <input type="password" name="confirm_password" id="confirm_password" class="input" value="" size="25" /></label>
    </p>

    '' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</label>
        </p>

        <div class="wp-pwd">
            <span class="password-input-wrapper">
                <input type="password"  class="event_auth_input" name="pass1" />
            </span>
        </div>
    </div>

    <div class="user-pass2-wrap">
        <p class="form-row required">
            <label for="pass2">'' cannot be parsed correct.
HTML code '$'</label>
        </p>

        <div class="wp-pwd">
            <span class="password-input-wrapper">
                <input type="password" name="pass2" class="event_auth_input" />
            </span>
        </div>
    </div>

    <p class="description indicator-hint">'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:29.697727.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.040849.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 138 do_action/apply_filters calls and 86 add_action/add_filter calls. Now connecting do-add pairs.
Added 9 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:09.126855.

9 PHP_REACHES edges created
9 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbaseDetector
### Start running FrontBaseDetector
### Finish running FileProDetector
### Start running HashDetector
### Finish running DbplusDetector
### Start running IBMDb2Detector
### Finish running FirebirdInterBaseDetector
### Start running InformixDetector
### Finish running CubridDetector
### Start running IngresDetector
### Finish running IBMDb2Detector
### Start running maxdbDetector
### Finish running HashDetector
### Start running MongoDbDetector
### Finish running FrontBaseDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running InformixDetector
### Start running MySQLDetector
### Finish running MongoDbDetector
### Start running MySQLiDetector
### Finish running ArrayElementDetector
### Start running Oci8Detector
### Finish running IngresDetector
### Start running OpenSSLDetector
### Finish running MsqlDetector
### Start running ParadoxDetector
### Finish running OpenSSLDetector
### Start running PasswordHashingDetector
### Finish running MySQLDetector
### Start running PhpCurlDetector
### Finish running Oci8Detector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PhpCurlDetector
### Start running PHPRetrievalDetector
### Finish running ParadoxDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPRetrievalDetector
### Start running PhpVarDetector
### Finish running PasswordHashingDetector
### Start running PostgreSQLDetector
### Finish running PHPStorageDetector
### Start running PropertyDetector
### Finish running PostgreSQLDetector
### Start running Sqlite3Detector
### Finish running Sqlite3Detector
### Start running SqliteDetector
### Finish running PropertyDetector
### Start running SqlServerDetector
### Finish running PHPIncludedDetector
### Start running SybaseDetector
### Finish running SqliteDetector
### Start running TokyoTyrantDetector
### Finish running SqlServerDetector
### Start running UserInputDetector
### Finish running TokyoTyrantDetector
### Start running VariableDetector
### Finish running SybaseDetector
### Start running WordpressHashingFnDetector
### Finish running PhpVarDetector
### Start running WordPressRemoteDetector
### Finish running UserInputDetector
### Start running WordPressRetrievalDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressStorageDetector
### Finish running WordPressRemoteDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running GenericDatabaseUsageDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running VariableDetector
### Start running UninstallDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running MySQLiDetector
### Finish running maxdbDetector
### Finish running WordPressStorageDetector
### Finish running WordPressRetrievalDetector
### Finished running detectors
inc/class-wpems-shortcodes.php:181
  - Request variable '$_REQUEST["checkemail"]' of personal types {'email'} is found.
  - Data types: email
inc/class-wpems-shortcodes.php:181
  - Request variable '$_REQUEST["checkemail"]' of personal types {'email'} is found.
  - Data types: email
inc/class-wpems-shortcodes.php:211
  - Request variable '$_REQUEST["checkemail"]' of personal types {'email'} is found.
  - Data types: email
inc/class-wpems-shortcodes.php:211
  - Request variable '$_REQUEST["checkemail"]' of personal types {'email'} is found.
  - Data types: email
inc/class-wpems-user-process.php:72
  - Request variable '$_POST["user_email"]' of personal types {'email'} is found.
  - Data types: email
inc/class-wpems-user-process.php:72
  - Request variable '$_POST["user_email"]' of personal types {'email'} is found.
  - Data types: email
inc/class-wpems-user-process.php:73
  - Request variable '$_POST["user_pass"]' of personal types {'password'} is found.
  - Data types: password
inc/class-wpems-user-process.php:73
  - Request variable '$_POST["user_pass"]' of personal types {'password'} is found.
  - Data types: password
inc/class-wpems-user-process.php:74
  - Request variable '$_POST["confirm_password"]' of personal types {'password'} is found.
  - Data types: password
inc/class-wpems-user-process.php:74
  - Request variable '$_POST["confirm_password"]' of personal types {'password'} is found.
  - Data types: password
inc/class-wpems-user-process.php:142
  - Request variable '$_POST["user_pass"]' of personal types {'password'} is found.
  - Data types: password
inc/class-wpems-user-process.php:142
  - Request variable '$_POST["user_pass"]' of personal types {'password'} is found.
  - Data types: password
inc/class-wpems-user-process.php:155
  - Request variable '$_POST["user_pass"]' of personal types {'password'} is found.
  - Data types: password
templates/shortcodes/forgot-password.php:21
  - Request variable '$_REQUEST["checkemail"]' of personal types {'email'} is found.
  - Data types: email
templates/shortcodes/form-register.php:29
  - Request variable '$_POST["user_email"]' of personal types {'email'} is found.
  - Data types: email
templates/shortcodes/form-register.php:29
  - Request variable '$_POST["user_email"]' of personal types {'email'} is found.
  - Data types: email 

inc/wpems-core-functions.php:287
  - MD5 called with parameters [wpems_event_location]. Ignore if [wpems_event_location] does not contain personal information. 

inc/wpems-core-functions.php:578
  - STORAGE call to fwrite($fo, $post_id).
  - Data types: file 

inc/admin/class-wpems-admin-users.php:71
  - object property '$user->user_nicename' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/admin/class-wpems-admin-users.php:72
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
inc/admin/views/metaboxes/booking-details.php:30
  - object property '$user->data->user_nicename' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/admin/views/metaboxes/booking-details.php:33
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
inc/admin/views/metaboxes/booking-details.php:33
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
inc/class-wpems-ajax.php:185
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
inc/class-wpems-booking.php:71
  - object property '$user->user_nicename' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-wpems-booking.php:72
  - object property '$user->user_nicename' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-wpems-booking.php:73
  - object property '$user->user_nicename' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/emails/class-wpems-register-event.php:58
  - object property '$user->data->user_email' of personal types {'email'} is found.
  - Data types: email
inc/gateways/paypal/class-wpems-payment-gateway-paypal.php:41
  - object property '$this->paypal_email' of personal types {'email'} is found.
  - Data types: email
inc/gateways/paypal/class-wpems-payment-gateway-paypal.php:46
  - object property '$this->paypal_email' of personal types {'email'} is found.
  - Data types: email
inc/gateways/paypal/class-wpems-payment-gateway-paypal.php:64
  - object property '$this->paypal_email' of personal types {'email'} is found.
  - Data types: email
inc/gateways/paypal/class-wpems-payment-gateway-paypal.php:220
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
inc/gateways/paypal/class-wpems-payment-gateway-paypal.php:227
  - object property '$this->paypal_email' of personal types {'email'} is found.
  - Data types: email 

inc/class-wpems-gdpr.php:66
  - variable '$email_address' of personal types {'email', 'address'} is found.
  - Data types: email, address
inc/class-wpems-gdpr.php:66
  - variable '$email_address' of personal types {'email', 'address'} is found.
  - Data types: email, address
inc/class-wpems-gdpr.php:87
  - variable '$email_address' of personal types {'email', 'address'} is found.
  - Data types: email, address
inc/class-wpems-gdpr.php:87
  - variable '$email_address' of personal types {'email', 'address'} is found.
  - Data types: email, address
inc/class-wpems-gdpr.php:132
  - variable '$email_address' of personal types {'email', 'address'} is found.
  - Data types: email, address
inc/class-wpems-gdpr.php:132
  - variable '$email_address' of personal types {'email', 'address'} is found.
  - Data types: email, address
inc/class-wpems-shortcodes.php:135
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
inc/class-wpems-shortcodes.php:136
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
inc/class-wpems-shortcodes.php:181
  - variable '$checkemail' of personal types {'email'} is found.
  - Data types: email
inc/class-wpems-shortcodes.php:182
  - variable '$checkemail' of personal types {'email'} is found.
  - Data types: email
inc/class-wpems-user-process.php:71
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-wpems-user-process.php:72
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
inc/class-wpems-user-process.php:77
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
inc/class-wpems-user-process.php:77
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-wpems-user-process.php:106
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
inc/class-wpems-user-process.php:141
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-wpems-user-process.php:145
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-wpems-user-process.php:151
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-wpems-user-process.php:159
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-wpems-user-process.php:160
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-wpems-user-process.php:168
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/class-wpems-user-process.php:181
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/emails/class-wpems-register-event.php:50
  - variable '$email_subject' of personal types {'email'} is found.
  - Data types: email
inc/emails/class-wpems-register-event.php:60
  - variable '$email_body' of personal types {'email'} is found.
  - Data types: email
inc/emails/class-wpems-register-event.php:89
  - variable '$email_body' of personal types {'email'} is found.
  - Data types: email
inc/emails/class-wpems-register-event.php:89
  - variable '$email_body' of personal types {'email'} is found.
  - Data types: email
inc/emails/class-wpems-register-event.php:91
  - variable '$email_user_content' of personal types {'email'} is found.
  - Data types: email
inc/emails/class-wpems-register-event.php:93
  - variable '$email_body' of personal types {'email'} is found.
  - Data types: email
inc/emails/class-wpems-register-event.php:96
  - variable '$email_admin_content' of personal types {'email'} is found.
  - Data types: email
inc/emails/class-wpems-register-event.php:101
  - variable '$email_subject' of personal types {'email'} is found.
  - Data types: email
inc/emails/class-wpems-register-event.php:101
  - variable '$email_admin_content' of personal types {'email'} is found.
  - Data types: email
inc/emails/class-wpems-register-event.php:103
  - variable '$email_subject' of personal types {'email'} is found.
  - Data types: email
inc/emails/class-wpems-register-event.php:103
  - variable '$email_user_content' of personal types {'email'} is found.
  - Data types: email
inc/emails/class-wpems-register-event.php:110
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
inc/emails/class-wpems-register-event.php:111
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
inc/emails/class-wpems-register-event.php:112
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
inc/emails/class-wpems-register-event.php:116
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
inc/gateways/paypal/class-wpems-payment-gateway-paypal.php:220
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
inc/gateways/paypal/class-wpems-payment-gateway-paypal.php:233
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
inc/wpems-core-functions.php:1113
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/wpems-core-functions.php:1114
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
inc/wpems-core-functions.php:1119
  - variable '$confirm_password' of personal types {'password'} is found.
  - Data types: password
inc/wpems-core-functions.php:1120
  - variable '$confirm_password' of personal types {'password'} is found.
  - Data types: password
inc/wpems-core-functions.php:1120
  - variable '$confirm_password' of personal types {'password'} is found.
  - Data types: password
inc/wpems-core-functions.php:1120
  - variable '$confirm_password' of personal types {'password'} is found.
  - Data types: password
inc/wpems-core-functions.php:1127
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/wpems-core-functions.php:1129
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/wpems-core-functions.php:1136
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
inc/wpems-core-functions.php:1136
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
inc/wpems-core-functions.php:1138
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
inc/wpems-core-functions.php:1146
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
inc/wpems-core-functions.php:1146
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/wpems-core-functions.php:1152
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/wpems-core-functions.php:1153
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
templates/emails/register-event.php:17
  - variable '$email_body' of personal types {'email'} is found.
  - Data types: email
templates/emails/register-event.php:36
  - variable '$email_body' of personal types {'email'} is found.
  - Data types: email 

inc/admin/class-wpems-admin-metaboxes.php:76
  - RETRIEVAL call to get_option("tp_event_meta_box_error_messages", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/admin/class-wpems-admin-metaboxes.php:86
  - RETRIEVAL call to get_option("tp_event_meta_box_error_messages") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/admin/class-wpems-admin-users.php:154
  - RETRIEVAL call to get_user_meta($user, "ea_user_approved", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/admin/metaboxes/class-wpems-admin-metabox-event.php:47
  - RETRIEVAL call to get_option("gmt_offset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/admin/settings/class-wpems-admin-setting-emails.php:60
  - RETRIEVAL call to get_option("blogname") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/admin/settings/class-wpems-admin-setting-emails.php:62
  - RETRIEVAL call to get_option("blog_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/admin/settings/class-wpems-admin-setting-emails.php:68
  - RETRIEVAL call to get_option("admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/admin/settings/class-wpems-admin-setting-emails.php:70
  - RETRIEVAL call to get_option("admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/admin/upgrades/upgrade-2.0.8.php:29
  - RETRIEVAL call to get_post_meta(get_the_ID(), "tp_event_date_start", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/admin/upgrades/upgrade-2.0.8.php:30
  - RETRIEVAL call to get_post_meta(get_the_ID(), "tp_event_date_end", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/admin/upgrades/upgrade-2.0.php:33
  - RETRIEVAL call to get_post_meta(get_the_ID(), "thimpress_event_auth_quantity", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/admin/upgrades/upgrade-2.0.php:34
  - RETRIEVAL call to get_post_meta(get_the_ID(), "thimpress_event_auth_cost", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/admin/upgrades/upgrade-2.0.php:38
  - RETRIEVAL call to get_post_meta(get_the_ID(), "tp_event_date_start", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/admin/upgrades/upgrade-2.0.php:38
  - RETRIEVAL call to get_post_meta(get_the_ID(), "tp_event_time_start", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/admin/upgrades/upgrade-2.0.php:39
  - RETRIEVAL call to get_post_meta(get_the_ID(), "tp_event_date_end", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/admin/upgrades/upgrade-2.0.php:39
  - RETRIEVAL call to get_post_meta(get_the_ID(), "tp_event_time_end", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/admin/views/metaboxes/booking-actions.php:18
  - RETRIEVAL call to get_post_meta($post->ID, "ea_booking_note", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/admin/views/metaboxes/booking-details.php:17
  - RETRIEVAL call to get_userdata($booking->user_id) alters data types {'user_meta', 'user'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user_meta, user
inc/admin/views/metaboxes/event-settings.php:18
  - RETRIEVAL call to get_post_meta($post->ID, $prefix . "date_start", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/admin/views/metaboxes/event-settings.php:18
  - RETRIEVAL call to get_post_meta($post->ID, $prefix . "date_start", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/admin/views/metaboxes/event-settings.php:19
  - RETRIEVAL call to get_post_meta($post->ID, $prefix . "time_start", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/admin/views/metaboxes/event-settings.php:19
  - RETRIEVAL call to get_post_meta($post->ID, $prefix . "time_start", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/admin/views/metaboxes/event-settings.php:21
  - RETRIEVAL call to get_post_meta($post->ID, $prefix . "date_end", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/admin/views/metaboxes/event-settings.php:21
  - RETRIEVAL call to get_post_meta($post->ID, $prefix . "date_end", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/admin/views/metaboxes/event-settings.php:22
  - RETRIEVAL call to get_post_meta($post->ID, $prefix . "time_end", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/admin/views/metaboxes/event-settings.php:22
  - RETRIEVAL call to get_post_meta($post->ID, $prefix . "time_end", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/admin/views/metaboxes/event-settings.php:24
  - RETRIEVAL call to get_post_meta($post_id, $prefix . "qty", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/admin/views/metaboxes/event-settings.php:25
  - RETRIEVAL call to get_post_meta($post_id, $prefix . "price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/admin/views/metaboxes/event-settings.php:26
  - RETRIEVAL call to get_post_meta($post_id, $prefix . "location", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class-wpems-ajax.php:80
  - RETRIEVAL call to get_post_meta($event_id, "tp_event_status", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class-wpems-ajax.php:133
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
inc/class-wpems-ajax.php:140
  - RETRIEVAL call to get_post_meta($event_id, "tp_event_qty", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class-wpems-ajax.php:184
  - RETRIEVAL call to get_userdata($book->user_id) alters data types {'user_meta', 'user'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user_meta, user
inc/class-wpems-booking.php:27
  - RETRIEVAL call to get_post($id) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: wp_post, post, post_meta
inc/class-wpems-booking.php:50
  - RETRIEVAL call to get_post_meta($this->ID, "ea_booking_" . $key, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class-wpems-booking.php:61
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
inc/class-wpems-booking.php:117
  - RETRIEVAL call to get_post($id) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: wp_post, post, post_meta
inc/class-wpems-event.php:23
  - RETRIEVAL call to get_post($id) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: wp_post, post, post_meta
inc/class-wpems-event.php:44
  - RETRIEVAL call to get_post_meta($this->ID, "tp_event_" . $key, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class-wpems-event.php:173
  - RETRIEVAL call to get_post($id) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: wp_post, post, post_meta
inc/class-wpems-gdpr.php:66
  - RETRIEVAL call to get_user_by("email", $email_address) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user_meta, user
inc/class-wpems-gdpr.php:83
  - RETRIEVAL call to get_option("date_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/class-wpems-gdpr.php:132
  - RETRIEVAL call to get_user_by("email", $email_address) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user_meta, user
inc/class-wpems-install.php:62
  - RETRIEVAL call to get_option("thimpress-event-version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/class-wpems-install.php:65
  - RETRIEVAL call to get_option($prefix) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/class-wpems-install.php:163
  - RETRIEVAL call to get_option("thimpress-event-version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/class-wpems-post-types.php:295
  - RETRIEVAL call to get_post_meta($post_id, "tp_event_status", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class-wpems-post-types.php:298
  - RETRIEVAL call to get_post_meta($post_id, "tp_event_date_start", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class-wpems-post-types.php:299
  - RETRIEVAL call to get_post_meta($post_id, "tp_event_time_start", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class-wpems-post-types.php:301
  - RETRIEVAL call to get_option("date_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/class-wpems-post-types.php:304
  - RETRIEVAL call to get_option("time_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/class-wpems-post-types.php:308
  - RETRIEVAL call to get_post_meta($post_id, "tp_event_date_end", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class-wpems-post-types.php:309
  - RETRIEVAL call to get_post_meta($post_id, "tp_event_time_end", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class-wpems-post-types.php:311
  - RETRIEVAL call to get_option("date_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/class-wpems-post-types.php:314
  - RETRIEVAL call to get_option("time_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/class-wpems-post-types.php:325
  - RETRIEVAL call to get_post_meta($post_id, "tp_event_qty", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class-wpems-post-types.php:325
  - RETRIEVAL call to get_post_meta($post_id, "tp_event_qty", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class-wpems-post-types.php:370
  - RETRIEVAL call to get_userdata($booking->user_id) alters data types {'user_meta', 'user'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user_meta, user
inc/class-wpems-post-types.php:494
  - RETRIEVAL call to get_post() alters data types {'wp_post', 'post', 'post_meta'}. Returns (WP_Post|array|null).
  - Data types: wp_post, post, post_meta
inc/class-wpems-settings.php:58
  - RETRIEVAL call to get_option($this->_prefix, null) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/class-wpems-settings.php:59
  - RETRIEVAL call to get_option($this->_prefix, null) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/class-wpems-settings.php:62
  - RETRIEVAL call to get_option($this->_prefix, null) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/class-wpems-shortcodes.php:132
  - RETRIEVAL call to get_option("users_can_register") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/class-wpems-shortcodes.php:136
  - RETRIEVAL call to get_user_by("email", $email) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user_meta, user
inc/class-wpems-shortcodes.php:228
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
inc/class-wpems-user-process.php:160
  - RETRIEVAL call to get_user_by("email", $username) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user_meta, user
inc/emails/class-wpems-register-event.php:48
  - RETRIEVAL call to get_userdata($user_id) alters data types {'user_meta', 'user'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user_meta, user
inc/emails/class-wpems-register-event.php:101
  - RETRIEVAL call to get_option("admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/emails/class-wpems-register-event.php:110
  - RETRIEVAL call to get_option("admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/gateways/paypal/class-wpems-payment-gateway-paypal.php:219
  - RETRIEVAL call to get_userdata($book->user_id) alters data types {'user_meta', 'user'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user_meta, user
inc/wpems-core-functions.php:171
  - RETRIEVAL call to get_post_meta($post_id, "tp_event_date_start", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/wpems-core-functions.php:172
  - RETRIEVAL call to get_post_meta($post_id, "tp_event_date_end", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/wpems-core-functions.php:184
  - RETRIEVAL call to get_post_meta($post->ID, "wpems_event_location", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/wpems-core-functions.php:199
  - RETRIEVAL call to get_post() alters data types {'wp_post', 'post', 'post_meta'}. Returns (WP_Post|array|null).
  - Data types: wp_post, post, post_meta
inc/wpems-core-functions.php:218
  - RETRIEVAL call to get_post() alters data types {'wp_post', 'post', 'post_meta'}. Returns (WP_Post|array|null).
  - Data types: wp_post, post, post_meta
inc/wpems-core-functions.php:255
  - RETRIEVAL call to get_post() alters data types {'wp_post', 'post', 'post_meta'}. Returns (WP_Post|array|null).
  - Data types: wp_post, post, post_meta
inc/wpems-core-functions.php:258
  - RETRIEVAL call to get_post_meta($post->ID, "tp_event_location", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/wpems-core-functions.php:270
  - RETRIEVAL call to get_post() alters data types {'wp_post', 'post', 'post_meta'}. Returns (WP_Post|array|null).
  - Data types: wp_post, post, post_meta
inc/wpems-core-functions.php:273
  - RETRIEVAL call to get_post_meta($post->ID, "ea_booking_note", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/wpems-core-functions.php:421
  - RETRIEVAL call to get_option("gmt_offset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/wpems-core-functions.php:462
  - RETRIEVAL call to get_option($name, $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/wpems-core-functions.php:493
  - RETRIEVAL call to get_post($option_value) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: wp_post, post, post_meta
inc/wpems-core-functions.php:582
  - RETRIEVAL call to get_post_meta($post_id, "tp_event_status", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/wpems-core-functions.php:585
  - RETRIEVAL call to get_post($post_id) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: wp_post, post, post_meta
inc/wpems-core-functions.php:1291
  - RETRIEVAL call to get_option($name, $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/wpems-core-functions.php:1340
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
inc/wpems-core-functions.php:1361
  - RETRIEVAL call to get_option("thimpress_events_show_remove_event_auth_notice") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/wpems-core-functions.php:1414
  - RETRIEVAL call to get_post() alters data types {'wp_post', 'post', 'post_meta'}. Returns (WP_Post|array|null).
  - Data types: wp_post, post, post_meta
inc/wpems-core-functions.php:1435
  - RETRIEVAL call to get_post() alters data types {'wp_post', 'post', 'post_meta'}. Returns (WP_Post|array|null).
  - Data types: wp_post, post, post_meta
inc/wpems-core-functions.php:1476
  - RETRIEVAL call to get_post() alters data types {'wp_post', 'post', 'post_meta'}. Returns (WP_Post|array|null).
  - Data types: wp_post, post, post_meta
inc/wpems-core-functions.php:1479
  - RETRIEVAL call to get_post_meta($post->ID, "tp_event_location", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/wpems-core-functions.php:1551
  - RETRIEVAL call to get_post($post) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: wp_post, post, post_meta
inc/wpems-core-functions.php:1559
  - RETRIEVAL call to get_post($post->ID) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: wp_post, post, post_meta
inc/wpems-core-functions.php:1560
  - RETRIEVAL call to get_post_meta($post->ID, "tp_event_status", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
templates/loop/register.php:32
  - RETRIEVAL call to get_option("blogname") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
templates/loop/register.php:33
  - RETRIEVAL call to get_option("timezone_string") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
templates/loop/register.php:33
  - RETRIEVAL call to get_option("timezone_string") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
templates/loop/register.php:36
  - RETRIEVAL call to get_post_meta(get_the_ID(), "tp_event_status", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
templates/shortcodes/event-countdown.php:20
  - RETRIEVAL call to get_post($id) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: wp_post, post, post_meta
templates/shortcodes/form-login.php:50
  - RETRIEVAL call to get_option("users_can_register") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
templates/shortcodes/reset-password.php:69
  - RETRIEVAL call to get_option("users_can_register") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option 

inc/admin/class-wpems-admin-metaboxes.php:78
  - STORAGE call to update_option("tp_event_meta_box_error_messages", $error) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/admin/class-wpems-admin-metaboxes.php:97
  - STORAGE call to delete_option("tp_event_meta_box_error_messages") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/admin/class-wpems-admin-settings.php:203
  - STORAGE call to update_option($setting["id"], htmlentities(stripslashes($_POST[$setting["id"]]))) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/admin/class-wpems-admin-settings.php:205
  - STORAGE call to update_option($setting["id"], sanitize_text_field($_POST[$setting["id"]])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/admin/class-wpems-admin-users.php:156
  - STORAGE call to update_user_meta($user, "ea_user_approved", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/admin/class-wpems-admin-users.php:158
  - STORAGE call to delete_user_meta($user, "ea_user_approved") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
inc/admin/class-wpems-admin-users.php:178
  - STORAGE call to update_user_meta($user_id, "ea_user_approved", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/admin/class-wpems-admin-users.php:180
  - STORAGE call to delete_user_meta($user_id, "ea_user_approved") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
inc/admin/metaboxes/class-wpems-admin-metabox-booking.php:27
  - STORAGE call to update_post_meta($post_id, "ea_booking_note", sanitize_textarea_field($_POST["booking-notes"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/admin/metaboxes/class-wpems-admin-metabox-event.php:26
  - STORAGE call to update_post_meta($post_id, $name, $value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/admin/metaboxes/class-wpems-admin-metabox-event.php:69
  - STORAGE call to update_post_meta($post_id, "tp_event_status", $status) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/admin/upgrades/upgrade-2.0.8.php:33
  - STORAGE call to update_post_meta(get_the_ID(), "tp_event_date_start", date("Y-m-d", strtotime($start))) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/admin/upgrades/upgrade-2.0.8.php:36
  - STORAGE call to update_post_meta(get_the_ID(), "tp_event_date_end", date("Y-m-d", strtotime($end))) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/admin/upgrades/upgrade-2.0.php:35
  - STORAGE call to update_post_meta(get_the_ID(), "tp_event_qty", absint($qty)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/admin/upgrades/upgrade-2.0.php:36
  - STORAGE call to update_post_meta(get_the_ID(), "tp_event_price", absint($price)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/admin/upgrades/upgrade-2.0.php:58
  - STORAGE call to wp_update_post(["ID" => get_the_ID(), "post_status" => $status]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
inc/admin/upgrades/upgrade-2.1.7.2.php:15
  - STORAGE call to update_option("thimpress-event-version", "2.1.7.2") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/admin/upgrades/upgrade-2.1.7.2.php:48
  - STORAGE call to update_post_meta(get_the_ID(), "tp_event_status", $meta) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/admin/upgrades/upgrade-2.1.7.2.php:49
  - STORAGE call to wp_update_post(["ID" => get_the_ID(), "post_status" => "publish"]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
inc/class-wpems-ajax.php:49
  - STORAGE call to update_option("thimpress_events_show_remove_event_auth_notice", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/class-wpems-ajax.php:194
  - STORAGE call to wp_delete_post($booking_id) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: wp_post, post, post_meta
inc/class-wpems-booking.php:70
  - STORAGE call to wp_insert_post(["post_title" => sprintf(__("%s booking event %s", "wp-events-manager"), $user->user_nicename, $args["event_id"]), "post_content" => sprintf(__("%s booking event %s with %s slot", "wp-events-manager"), $user->user_nicename, $args["event_id"], $args["qty"]), "post_exceprt" => sprintf(__("%s booking event %s with %s slot", "wp-events-manager"), $user->user_nicename, $args["event_id"], $args["qty"]), "post_status" => "ea-pending", "post_type" => "event_auth_book"]). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
inc/class-wpems-booking.php:82
  - STORAGE call to update_post_meta($booking_id, "ea_booking_" . $key, $val) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/class-wpems-booking.php:104
  - STORAGE call to wp_update_post(["ID" => $this->ID, "post_status" => $status]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
inc/class-wpems-gdpr.php:138
  - STORAGE call to wp_delete_post($booking_id, true) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: wp_post, post, post_meta
inc/class-wpems-install.php:72
  - STORAGE call to update_option($prefix . "_" . $name . "_" . $n, $v) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/class-wpems-install.php:74
  - STORAGE call to update_option($prefix . "_" . $n, $v) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/class-wpems-install.php:78
  - STORAGE call to update_option($prefix . "_paypal_sanbox_email", $v) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/class-wpems-install.php:81
  - STORAGE call to update_option($prefix . "_paypal_email", $v) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/class-wpems-install.php:84
  - STORAGE call to update_option($prefix . "_paypal_enable", $v) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/class-wpems-install.php:86
  - STORAGE call to update_option($prefix . "_" . $name . "_" . $n, $v) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/class-wpems-install.php:88
  - STORAGE call to update_option($prefix . "_" . $n, $v) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/class-wpems-install.php:118
  - STORAGE call to delete_option("thimpress_events_show_remove_event_auth_notice") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/wpems-core-functions.php:478
  - STORAGE call to update_option("thimpress_events_" . $name, $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/wpems-core-functions.php:540
  - STORAGE call to wp_update_post($page_data). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
inc/wpems-core-functions.php:552
  - STORAGE call to wp_insert_post($page_data). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
inc/wpems-core-functions.php:599
  - STORAGE call to update_post_meta($post_id, "tp_event_status", $status) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/wpems-core-functions.php:1157
  - STORAGE call to wp_insert_user($userdata) alters data types {'user_meta', 'user'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user_meta, user
inc/wpems-core-functions.php:1266
  - STORAGE call to wp_update_post(["ID" => $booking_id, "post_status" => "ea-cancelled"]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
inc/wpems-core-functions.php:1565
  - STORAGE call to update_post_meta($post->ID, "tp_event_status", "happening") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/wpems-core-functions.php:1567
  - STORAGE call to update_post_meta($post->ID, "tp_event_status", "expired") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta 

inc/admin/class-wpems-admin-metaboxes.php:97
  - DELETION call to delete_option("tp_event_meta_box_error_messages") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/admin/class-wpems-admin-users.php:158
  - DELETION call to delete_user_meta($user, "ea_user_approved") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
inc/admin/class-wpems-admin-users.php:180
  - DELETION call to delete_user_meta($user_id, "ea_user_approved") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
inc/class-wpems-ajax.php:194
  - DELETION call to wp_delete_post($booking_id) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: wp_post, post, post_meta
inc/class-wpems-gdpr.php:138
  - DELETION call to wp_delete_post($booking_id, true) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: wp_post, post, post_meta
inc/class-wpems-install.php:118
  - DELETION call to delete_option("thimpress_events_show_remove_event_auth_notice") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

By data type:
address
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
email
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
file
	PHPStorageDetector.fwrite($fo, $post_id) - {'file'}
none
	PHPIncludedDetector.(unknown) - set()
	WordPressStorageDetector.wp_insert_post($page_data) - set()
	WordPressStorageDetector.wp_update_post(["ID" => get_the_ID(), "post_status" => "publish"]) - set()
	WordPressStorageDetector.wp_update_post($page_data) - set()
	WordPressStorageDetector.wp_update_post(["ID" => $booking_id, "post_status" => "ea-cancelled"]) - set()
	WordPressStorageDetector.wp_update_post(["ID" => $this->ID, "post_status" => $status]) - set()
	WordPressStorageDetector.wp_insert_post(["post_title" => sprintf(__("%s booking event %s", "wp-events-manager"), $user->user_nicename, $args["event_id"]), "post_content" => sprintf(__("%s booking event %s with %s slot", "wp-events-manager"), $user->user_nicename, $args["event_id"], $args["qty"]), "post_exceprt" => sprintf(__("%s booking event %s with %s slot", "wp-events-manager"), $user->user_nicename, $args["event_id"], $args["qty"]), "post_status" => "ea-pending", "post_type" => "event_auth_book"]) - set()
	WordPressStorageDetector.wp_update_post(["ID" => get_the_ID(), "post_status" => $status]) - set()
option
	WordPressRetrievalDetector.get_option("gmt_offset") - {'option'}
	WordPressRetrievalDetector.get_option("thimpress-event-version") - {'option'}
	DeletionDetector.delete_option("tp_event_meta_box_error_messages") - {'option'}
	WordPressStorageDetector.update_option("thimpress-event-version", "2.1.7.2") - {'option'}
	WordPressStorageDetector.update_option($prefix . "_" . $n, $v) - {'option'}
	WordPressRetrievalDetector.get_option("admin_email") - {'option'}
	WordPressRetrievalDetector.get_option("date_format") - {'option'}
	WordPressRetrievalDetector.get_option("users_can_register") - {'option'}
	WordPressRetrievalDetector.get_option("tp_event_meta_box_error_messages") - {'option'}
	DeletionDetector.delete_option("thimpress_events_show_remove_event_auth_notice") - {'option'}
	WordPressStorageDetector.update_option($prefix . "_paypal_email", $v) - {'option'}
	WordPressStorageDetector.update_option($prefix . "_" . $name . "_" . $n, $v) - {'option'}
	WordPressRetrievalDetector.get_option("date_format") - {'option'}
	WordPressRetrievalDetector.get_option("timezone_string") - {'option'}
	WordPressRetrievalDetector.get_option("users_can_register") - {'option'}
	WordPressRetrievalDetector.get_option("time_format") - {'option'}
	WordPressRetrievalDetector.get_option("tp_event_meta_box_error_messages", []) - {'option'}
	WordPressRetrievalDetector.get_option("time_format") - {'option'}
	WordPressStorageDetector.update_option("tp_event_meta_box_error_messages", $error) - {'option'}
	WordPressRetrievalDetector.get_option($this->_prefix, null) - {'option'}
	WordPressRetrievalDetector.get_option($this->_prefix, null) - {'option'}
	WordPressStorageDetector.delete_option("tp_event_meta_box_error_messages") - {'option'}
	WordPressRetrievalDetector.get_option($this->_prefix, null) - {'option'}
	WordPressStorageDetector.update_option($setting["id"], htmlentities(stripslashes($_POST[$setting["id"]]))) - {'option'}
	WordPressRetrievalDetector.get_option("date_format") - {'option'}
	WordPressRetrievalDetector.get_option("timezone_string") - {'option'}
	WordPressStorageDetector.update_option($setting["id"], sanitize_text_field($_POST[$setting["id"]])) - {'option'}
	WordPressRetrievalDetector.get_option($name, $default) - {'option'}
	WordPressRetrievalDetector.get_option("users_can_register") - {'option'}
	WordPressStorageDetector.update_option("thimpress_events_show_remove_event_auth_notice", 1) - {'option'}
	WordPressRetrievalDetector.get_option("admin_email") - {'option'}
	WordPressStorageDetector.delete_option("thimpress_events_show_remove_event_auth_notice") - {'option'}
	WordPressRetrievalDetector.get_option($prefix) - {'option'}
	WordPressRetrievalDetector.get_option("admin_email") - {'option'}
	WordPressStorageDetector.update_option($prefix . "_paypal_enable", $v) - {'option'}
	WordPressRetrievalDetector.get_option("admin_email") - {'option'}
	WordPressStorageDetector.update_option($prefix . "_" . $name . "_" . $n, $v) - {'option'}
	WordPressRetrievalDetector.get_option("blogname") - {'option'}
	WordPressRetrievalDetector.get_option("blogname") - {'option'}
	WordPressRetrievalDetector.get_option("thimpress_events_show_remove_event_auth_notice") - {'option'}
	WordPressRetrievalDetector.get_option("thimpress-event-version") - {'option'}
	WordPressStorageDetector.update_option("thimpress_events_" . $name, $default) - {'option'}
	WordPressRetrievalDetector.get_option("blog_name") - {'option'}
	WordPressStorageDetector.update_option($prefix . "_paypal_sanbox_email", $v) - {'option'}
	WordPressRetrievalDetector.get_option("gmt_offset") - {'option'}
	WordPressRetrievalDetector.get_option($name, $default) - {'option'}
	WordPressStorageDetector.update_option($prefix . "_" . $n, $v) - {'option'}
password
	VariableDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
	ArrayElementDetector.(unknown) - {'password'}
	ArrayElementDetector.(unknown) - {'password'}
	ArrayElementDetector.(unknown) - {'password'}
	ArrayElementDetector.(unknown) - {'password'}
	ArrayElementDetector.(unknown) - {'password'}
	ArrayElementDetector.(unknown) - {'password'}
	ArrayElementDetector.(unknown) - {'password'}
post
	WordPressRetrievalDetector.get_post($id) - {'wp_post', 'post', 'post_meta'}
	DeletionDetector.wp_delete_post($booking_id, true) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post($post) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post($post->ID) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'wp_post', 'post', 'post_meta'}
	DeletionDetector.wp_delete_post($booking_id) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'wp_post', 'post', 'post_meta'}
	WordPressStorageDetector.wp_delete_post($booking_id) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post($option_value) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'wp_post', 'post', 'post_meta'}
	WordPressStorageDetector.wp_delete_post($booking_id, true) - {'wp_post', 'post', 'post_meta'}
post_meta
	WordPressRetrievalDetector.get_post_meta($post->ID, $prefix . "date_end", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "tp_event_status", $status) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, $prefix . "date_end", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "tp_event_qty", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($booking_id, "ea_booking_" . $key, $val) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "thimpress_event_auth_quantity", true) - {'post_meta'}
	DeletionDetector.wp_delete_post($booking_id, true) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, $prefix . "qty", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "tp_event_date_start", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "tp_event_date_end", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "tp_event_date_end", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "tp_event_time_start", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "tp_event_status", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, $prefix . "time_start", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($post) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "tp_event_time_end", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, $prefix . "time_end", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post() - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post($post->ID) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, $prefix . "date_start", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post->ID, "tp_event_status", "expired") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, $prefix . "time_start", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "thimpress_event_auth_cost", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post_meta($this->ID, "ea_booking_" . $key, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, $prefix . "location", true) - {'post_meta'}
	DeletionDetector.wp_delete_post($booking_id) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "tp_event_qty", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "tp_event_status", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post_meta($this->ID, "tp_event_" . $key, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "tp_event_time_end", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "tp_event_status", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "ea_booking_note", sanitize_textarea_field($_POST["booking-notes"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta(get_the_ID(), "tp_event_date_start", date("Y-m-d", strtotime($start))) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "ea_booking_note", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, $name, $value) - {'post_meta'}
	WordPressStorageDetector.update_post_meta(get_the_ID(), "tp_event_price", absint($price)) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, $prefix . "date_start", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($event_id, "tp_event_qty", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post() - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "tp_event_location", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "tp_event_date_start", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "tp_event_date_end", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta(get_the_ID(), "tp_event_qty", absint($qty)) - {'post_meta'}
	WordPressStorageDetector.wp_delete_post($booking_id) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "tp_event_date_start", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta(get_the_ID(), "tp_event_date_end", date("Y-m-d", strtotime($end))) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post->ID, "tp_event_status", "happening") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, $prefix . "price", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "tp_event_time_start", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "tp_event_location", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post() - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "ea_booking_note", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "tp_event_date_end", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($option_value) - {'wp_post', 'post', 'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "tp_event_status", $status) - {'post_meta'}
	WordPressStorageDetector.update_post_meta(get_the_ID(), "tp_event_status", $meta) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "tp_event_date_start", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($event_id, "tp_event_status", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "wpems_event_location", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post() - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "tp_event_status", true) - {'post_meta'}
	WordPressStorageDetector.wp_delete_post($booking_id, true) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, $prefix . "time_end", true) - {'post_meta'}
user
	WordPressRetrievalDetector.get_user_by("email", $email_address) - {'user_meta', 'user'}
	WordPressStorageDetector.wp_insert_user($userdata) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_userdata($booking->user_id) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_userdata($book->user_id) - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_user_by("email", $email_address) - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_user_by("email", $email) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_userdata($book->user_id) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_user_by("email", $username) - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_userdata($user_id) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_userdata($booking->user_id) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
user_meta
	WordPressRetrievalDetector.get_user_by("email", $email_address) - {'user_meta', 'user'}
	WordPressStorageDetector.wp_insert_user($userdata) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_userdata($booking->user_id) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_user_meta($user, "ea_user_approved", true) - {'user_meta'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_userdata($book->user_id) - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_user_by("email", $email_address) - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_user_by("email", $email) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_userdata($book->user_id) - {'user_meta', 'user'}
	DeletionDetector.delete_user_meta($user_id, "ea_user_approved") - {'user_meta'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_user_by("email", $username) - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressStorageDetector.update_user_meta($user, "ea_user_approved", true) - {'user_meta'}
	WordPressRetrievalDetector.get_userdata($user_id) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressStorageDetector.delete_user_meta($user_id, "ea_user_approved") - {'user_meta'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressStorageDetector.update_user_meta($user_id, "ea_user_approved", true) - {'user_meta'}
	WordPressRetrievalDetector.get_userdata($booking->user_id) - {'user_meta', 'user'}
	DeletionDetector.delete_user_meta($user, "ea_user_approved") - {'user_meta'}
	WordPressStorageDetector.delete_user_meta($user, "ea_user_approved") - {'user_meta'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
wp_post
	WordPressRetrievalDetector.get_post($id) - {'wp_post', 'post', 'post_meta'}
	DeletionDetector.wp_delete_post($booking_id, true) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post($post) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post($post->ID) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'wp_post', 'post', 'post_meta'}
	DeletionDetector.wp_delete_post($booking_id) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'wp_post', 'post', 'post_meta'}
	WordPressStorageDetector.wp_delete_post($booking_id) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post($option_value) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post() - {'wp_post', 'post', 'post_meta'}
	WordPressStorageDetector.wp_delete_post($booking_id, true) - {'wp_post', 'post', 'post_meta'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:34.235961.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 1318 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.731521.

!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 9615
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 11164
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 17996
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 27584
1000 STORE_REACHES edges created
1318 STORE_REACHES edges created
1318 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 1000 nodes as PERSONAL
Tainted 1383 nodes as PERSONAL
In total, tainted 1383 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 1 nodes as ENCRYPTED
In total, tainted 1 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:01:11.094006.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:05:06.744462!
Request variable '$_REQUEST["checkemail"]' of personal types {'email'} is found.,,None
Request variable '$_REQUEST["checkemail"]' of personal types {'email'} is found.,,None
Request variable '$_REQUEST["checkemail"]' of personal types {'email'} is found.,,None
Request variable '$_REQUEST["checkemail"]' of personal types {'email'} is found.,,None
Request variable '$_POST["user_pass"]' of personal types {'password'} is found.,,None
Request variable '$_POST["user_pass"]' of personal types {'password'} is found.,,None
Request variable '$_POST["user_pass"]' of personal types {'password'} is found.,,None
Request variable '$_POST["user_email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["user_email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["user_pass"]' of personal types {'password'} is found.,,None
Request variable '$_POST["user_pass"]' of personal types {'password'} is found.,,None
Request variable '$_POST["confirm_password"]' of personal types {'password'} is found.,,None
Request variable '$_POST["confirm_password"]' of personal types {'password'} is found.,,None
Request variable '$_REQUEST["checkemail"]' of personal types {'email'} is found.,,None
Request variable '$_POST["user_email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["user_email"]' of personal types {'email'} is found.,,None
DELETION call to delete_option("tp_event_meta_box_error_messages") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_user_meta($user, "ea_user_approved") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_user_meta($user_id, "ea_user_approved") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to wp_delete_post($booking_id) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).,None,None
DELETION call to wp_delete_post($booking_id, true) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
DELETION call to delete_option("thimpress_events_show_remove_event_auth_notice") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
MD5 called with parameters [wpems_event_location]. Ignore if [wpems_event_location] does not contain personal information.,md5,None
STORAGE call to fwrite($fo, $post_id).,None,None
object property '$user->user_nicename' of personal types {'user_meta', 'user'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$user->data->user_nicename' of personal types {'user_meta', 'user'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$user->user_nicename' of personal types {'user_meta', 'user'} is found.,,None
object property '$user->user_nicename' of personal types {'user_meta', 'user'} is found.,,None
object property '$user->user_nicename' of personal types {'user_meta', 'user'} is found.,,None
object property '$user->data->user_email' of personal types {'email'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$this->paypal_email' of personal types {'email'} is found.,,None
object property '$this->paypal_email' of personal types {'email'} is found.,,None
object property '$this->paypal_email' of personal types {'email'} is found.,,None
object property '$this->paypal_email' of personal types {'email'} is found.,,None
variable '$email_address' of personal types {'email', 'address'} is found.,,None
variable '$email_address' of personal types {'email', 'address'} is found.,,None
variable '$email_address' of personal types {'email', 'address'} is found.,,None
variable '$email_address' of personal types {'email', 'address'} is found.,,None
variable '$email_address' of personal types {'email', 'address'} is found.,,None
variable '$email_address' of personal types {'email', 'address'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$checkemail' of personal types {'email'} is found.,,None
variable '$checkemail' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$email_admin_content' of personal types {'email'} is found.,,None
variable '$email_subject' of personal types {'email'} is found.,,None
variable '$email_user_content' of personal types {'email'} is found.,,None
variable '$email_subject' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email_subject' of personal types {'email'} is found.,,None
variable '$email_body' of personal types {'email'} is found.,,None
variable '$email_body' of personal types {'email'} is found.,,None
variable '$email_body' of personal types {'email'} is found.,,None
variable '$email_user_content' of personal types {'email'} is found.,,None
variable '$email_body' of personal types {'email'} is found.,,None
variable '$email_admin_content' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$confirm_password' of personal types {'password'} is found.,,None
variable '$confirm_password' of personal types {'password'} is found.,,None
variable '$confirm_password' of personal types {'password'} is found.,,None
variable '$confirm_password' of personal types {'password'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email_body' of personal types {'email'} is found.,,None
variable '$email_body' of personal types {'email'} is found.,,None
RETRIEVAL call to get_option("tp_event_meta_box_error_messages", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("tp_event_meta_box_error_messages") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user, "ea_user_approved", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("gmt_offset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("blogname") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("blog_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "tp_event_date_start", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "tp_event_date_end", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "thimpress_event_auth_quantity", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "thimpress_event_auth_cost", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "tp_event_time_start", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "tp_event_date_start", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "tp_event_date_end", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "tp_event_time_end", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "ea_booking_note", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdata($booking->user_id) alters data types {'user_meta', 'user'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_post_meta($post->ID, $prefix . "date_start", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, $prefix . "date_start", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, $prefix . "time_start", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, $prefix . "time_start", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, $prefix . "date_end", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, $prefix . "date_end", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, $prefix . "time_end", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, $prefix . "time_end", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, $prefix . "qty", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, $prefix . "price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, $prefix . "location", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_post_meta($event_id, "tp_event_qty", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdata($book->user_id) alters data types {'user_meta', 'user'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_post_meta($event_id, "tp_event_status", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($id) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($id) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($this->ID, "ea_booking_" . $key, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_post($id) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($id) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($this->ID, "tp_event_" . $key, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_by("email", $email_address) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_by("email", $email_address) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_option("date_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("thimpress-event-version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("thimpress-event-version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($prefix) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "tp_event_status", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "tp_event_date_start", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "tp_event_time_start", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("date_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("time_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "tp_event_date_end", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "tp_event_time_end", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("date_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("time_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "tp_event_qty", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "tp_event_qty", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdata($booking->user_id) alters data types {'user_meta', 'user'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_post() alters data types {'wp_post', 'post', 'post_meta'}. Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option($this->_prefix, null) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->_prefix, null) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->_prefix, null) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("users_can_register") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_by("email", $email) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_user_by("email", $username) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_option("admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdata($user_id) alters data types {'user_meta', 'user'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_userdata($book->user_id) alters data types {'user_meta', 'user'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_option($name, $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_option("thimpress_events_show_remove_event_auth_notice") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post() alters data types {'wp_post', 'post', 'post_meta'}. Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post() alters data types {'wp_post', 'post', 'post_meta'}. Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post() alters data types {'wp_post', 'post', 'post_meta'}. Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($post->ID, "tp_event_location", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($post) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($post->ID) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($post->ID, "tp_event_status", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "tp_event_date_start", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "tp_event_date_end", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "wpems_event_location", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post() alters data types {'wp_post', 'post', 'post_meta'}. Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post() alters data types {'wp_post', 'post', 'post_meta'}. Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post() alters data types {'wp_post', 'post', 'post_meta'}. Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($post->ID, "tp_event_location", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post() alters data types {'wp_post', 'post', 'post_meta'}. Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($post->ID, "ea_booking_note", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("gmt_offset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($name, $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post($option_value) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($post_id, "tp_event_status", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($post_id) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("blogname") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("timezone_string") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("timezone_string") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "tp_event_status", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($id) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("users_can_register") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("users_can_register") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
STORAGE call to update_option("tp_event_meta_box_error_messages", $error) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("tp_event_meta_box_error_messages") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option($setting["id"], htmlentities(stripslashes($_POST[$setting["id"]]))) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option($setting["id"], sanitize_text_field($_POST[$setting["id"]])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_user_meta($user, "ea_user_approved", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_user_meta($user, "ea_user_approved") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_user_meta($user_id, "ea_user_approved", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_user_meta($user_id, "ea_user_approved") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, "ea_booking_note", sanitize_textarea_field($_POST["booking-notes"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, $name, $value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "tp_event_status", $status) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta(get_the_ID(), "tp_event_date_start", date("Y-m-d", strtotime($start))) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta(get_the_ID(), "tp_event_date_end", date("Y-m-d", strtotime($end))) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta(get_the_ID(), "tp_event_qty", absint($qty)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta(get_the_ID(), "tp_event_price", absint($price)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_update_post(["ID" => get_the_ID(), "post_status" => $status]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to update_option("thimpress-event-version", "2.1.7.2") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta(get_the_ID(), "tp_event_status", $meta) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_update_post(["ID" => get_the_ID(), "post_status" => "publish"]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to wp_delete_post($booking_id) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).,None,None
STORAGE call to update_option("thimpress_events_show_remove_event_auth_notice", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to wp_update_post(["ID" => $this->ID, "post_status" => $status]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to wp_insert_post(["post_title" => sprintf(__("%s booking event %s", "wp-events-manager"), $user->user_nicename, $args["event_id"]), "post_content" => sprintf(__("%s booking event %s with %s slot", "wp-events-manager"), $user->user_nicename, $args["event_id"], $args["qty"]), "post_exceprt" => sprintf(__("%s booking event %s with %s slot", "wp-events-manager"), $user->user_nicename, $args["event_id"], $args["qty"]), "post_status" => "ea-pending", "post_type" => "event_auth_book"]). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($booking_id, "ea_booking_" . $key, $val) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_delete_post($booking_id, true) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
STORAGE call to delete_option("thimpress_events_show_remove_event_auth_notice") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option($prefix . "_" . $name . "_" . $n, $v) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option($prefix . "_" . $n, $v) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option($prefix . "_paypal_sanbox_email", $v) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option($prefix . "_paypal_email", $v) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option($prefix . "_paypal_enable", $v) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option($prefix . "_" . $name . "_" . $n, $v) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option($prefix . "_" . $n, $v) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to wp_insert_user($userdata) alters data types {'user_meta', 'user'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,None,None
STORAGE call to wp_update_post(["ID" => $booking_id, "post_status" => "ea-cancelled"]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($post->ID, "tp_event_status", "happening") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post->ID, "tp_event_status", "expired") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("thimpress_events_" . $name, $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to wp_update_post($page_data). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to wp_insert_post($page_data). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($post_id, "tp_event_status", $status) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] WP User info of types (['user', 'password', 'email', 'user_meta']) stored through WordPress function "wp_insert_user($userdata)", found in file inc/wpems-core-functions.php at line 1157. 

[has_storage] PII of types (['address', 'email', 'user_meta', 'user', 'password']) stored through WordPress function "update_post_meta($booking_id, "ea_booking_" . $key, $val)", found in file inc/class-wpems-booking.php at line 82. 

[has_storage] PII of types (['address', 'email', 'user_meta', 'user', 'password']) stored through WordPress function "update_post_meta($post->ID, "tp_event_status", "expired")", found in file inc/wpems-core-functions.php at line 1567. 

[has_storage] PII of types (['address', 'email', 'user_meta', 'user', 'password']) stored through WordPress function "wp_update_post(["ID" => $this->ID, "post_status" => $status])", found in file inc/class-wpems-booking.php at line 104. 

[has_storage] PII of types (['address', 'email', 'user_meta', 'user', 'password']) stored through WordPress function "wp_insert_post(["post_title" => sprintf(__("%s booking event %s", "wp-events-manager"), $user->user_nicename, $args["event_id"]), "post_content" => sprintf(__("%s booking event %s with %s slot", "wp-events-manager"), $user->user_nicename, $args["event_id"], $args["qty"]), "post_exceprt" => sprintf(__("%s booking event %s with %s slot", "wp-events-manager"), $user->user_nicename, $args["event_id"], $args["qty"]), "post_status" => "ea-pending", "post_type" => "event_auth_book"])", found in file inc/class-wpems-booking.php at line 70. 

[has_storage] PII of types (['address', 'email', 'user_meta', 'user', 'password']) stored through WordPress function "update_post_meta(get_the_ID(), "tp_event_date_start", date("Y-m-d", strtotime($start)))", found in file inc/admin/upgrades/upgrade-2.0.8.php at line 33. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user, "ea_user_approved", true)", found in file inc/admin/class-wpems-admin-users.php at line 156. 

[has_storage] PII of types (['address', 'email', 'user_meta', 'user', 'password']) stored through WordPress function "update_post_meta(get_the_ID(), "tp_event_price", absint($price))", found in file inc/admin/upgrades/upgrade-2.0.php at line 36. 

[has_storage] PII of types (['address', 'email', 'user_meta', 'user', 'password']) stored through WordPress function "update_post_meta(get_the_ID(), "tp_event_qty", absint($qty))", found in file inc/admin/upgrades/upgrade-2.0.php at line 35. 

[has_storage] PII of types (['address', 'email', 'user_meta', 'user', 'password']) stored through WordPress function "update_post_meta(get_the_ID(), "tp_event_date_end", date("Y-m-d", strtotime($end)))", found in file inc/admin/upgrades/upgrade-2.0.8.php at line 36. 

[has_storage] PII of types (['address', 'email', 'user_meta', 'user', 'password']) stored through WordPress function "update_post_meta($post->ID, "tp_event_status", "happening")", found in file inc/wpems-core-functions.php at line 1565. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user_id, "ea_user_approved", true)", found in file inc/admin/class-wpems-admin-users.php at line 178. 

[has_storage] Storage check is WP 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($booking_id, "ea_booking_" . $key, $val) does not have corresponding deletion method. Storage method found in file inc/class-wpems-booking.php at line 82. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post->ID, "tp_event_status", "expired") does not have corresponding deletion method. Storage method found in file inc/wpems-core-functions.php at line 1567. 

[Art.17, Right to erasure] Wordpress storage of PII through wp_update_post(["ID" => $this->ID, "post_status" => $status]) does not have corresponding deletion method. Storage method found in file inc/class-wpems-booking.php at line 104. 

[Art.17, Right to erasure] Wordpress storage of PII through wp_insert_post(["post_title" => sprintf(__("%s booking event %s", "wp-events-manager"), $user->user_nicename, $args["event_id"]), "post_content" => sprintf(__("%s booking event %s with %s slot", "wp-events-manager"), $user->user_nicename, $args["event_id"], $args["qty"]), "post_exceprt" => sprintf(__("%s booking event %s with %s slot", "wp-events-manager"), $user->user_nicename, $args["event_id"], $args["qty"]), "post_status" => "ea-pending", "post_type" => "event_auth_book"]) does not have corresponding deletion method. Storage method found in file inc/class-wpems-booking.php at line 70. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta(get_the_ID(), "tp_event_date_start", date("Y-m-d", strtotime($start))) does not have corresponding deletion method. Storage method found in file inc/admin/upgrades/upgrade-2.0.8.php at line 33. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user, "ea_user_approved", true) has deletion method delete_user_meta($user, "ea_user_approved"). Storage method found in file inc/admin/class-wpems-admin-users.php at line 156. Deletion method found in file inc/admin/class-wpems-admin-users.php at line 158. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user, "ea_user_approved", true) has deletion method delete_user_meta($user_id, "ea_user_approved"). Storage method found in file inc/admin/class-wpems-admin-users.php at line 156. Deletion method found in file inc/admin/class-wpems-admin-users.php at line 180. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta(get_the_ID(), "tp_event_price", absint($price)) does not have corresponding deletion method. Storage method found in file inc/admin/upgrades/upgrade-2.0.php at line 36. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta(get_the_ID(), "tp_event_qty", absint($qty)) does not have corresponding deletion method. Storage method found in file inc/admin/upgrades/upgrade-2.0.php at line 35. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta(get_the_ID(), "tp_event_date_end", date("Y-m-d", strtotime($end))) does not have corresponding deletion method. Storage method found in file inc/admin/upgrades/upgrade-2.0.8.php at line 36. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post->ID, "tp_event_status", "happening") does not have corresponding deletion method. Storage method found in file inc/wpems-core-functions.php at line 1565. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "ea_user_approved", true) has deletion method delete_user_meta($user, "ea_user_approved"). Storage method found in file inc/admin/class-wpems-admin-users.php at line 178. Deletion method found in file inc/admin/class-wpems-admin-users.php at line 158. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "ea_user_approved", true) has deletion method delete_user_meta($user_id, "ea_user_approved"). Storage method found in file inc/admin/class-wpems-admin-users.php at line 178. Deletion method found in file inc/admin/class-wpems-admin-users.php at line 180. 

[Art.17, Right to erasure] Deletion access is NONE 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 11306. Found in file inc/class-wpems-booking.php at line 82 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 28666. Found in file inc/wpems-core-functions.php at line 1567 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 11428. Found in file inc/class-wpems-booking.php at line 104 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 11204. Found in file inc/class-wpems-booking.php at line 70 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 5466. Found in file inc/admin/upgrades/upgrade-2.0.8.php at line 33 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 2729. Found in file inc/admin/class-wpems-admin-users.php at line 156 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 5632. Found in file inc/admin/upgrades/upgrade-2.0.php at line 36 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 5617. Found in file inc/admin/upgrades/upgrade-2.0.php at line 35 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 5491. Found in file inc/admin/upgrades/upgrade-2.0.8.php at line 36 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 28649. Found in file inc/wpems-core-functions.php at line 1565 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 2861. Found in file inc/admin/class-wpems-admin-users.php at line 178 

[Art.15, Right to access] Data access is NONE_BUT_NOT_REQUIRED 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['access', 'deletion', 'encryption', 'third_party'] 

[main] Is deletion in violation? True 

[main] Is access in violation? False 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? False 


###########
### Q&A ###
###########

1. Why is my plugin in violation against GDPR?

GDPR (https://gdpr-info.eu/) aims to give citizens in the European Union (EU) control over their personal data. If a website collects or store user data, it is required to provide users functionalities to control their data, such as ones to erase or export their data. While a plugin do not directly interact with users, it may provide functionalities that collect or store personal data, which would make websites that deploy the plugin in violation against GDPR if the plugin does not provide corresponding functionalities to allow users control their personal data. Therefore, plugin developers are responsible to provide functions to manage the personal data they handle in accordance with GDPR. We list requirements by specific GDPR articles relevant to your plugin below.


[Art. 13, Information to be provided where personal data are collected from the data subject] If a plugin collects or handles personal data, it needs to provide privacy policy texts that explain what personal data is being collected and for what purpose. The texts are meant to be added to the privacy policy of the websites that deploy the plugin. 


            
[Art.17, Right to erasure] If a plugin stores personal data in a custom database they create or manage, or through Wordpress's native storage functions (e.g., update_user_meta), it needs to provide methods for users to erase the data upon request. Note that deleting data for all users upon uninstallation does not satisfy the requirement. 


            
        

2. How do I make my plugin compliant?

Please refer to the fix report below to see how you can make your plugin comply with GDPR.

        
