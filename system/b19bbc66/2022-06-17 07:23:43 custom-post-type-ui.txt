Timeout in resolving values
Timeout in running neo4j query
Running Main.py on custom-post-type-ui

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:01.005434.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.207897.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 36 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.530843.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 2 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.629884.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 5107 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:02.366172.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 0 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:01.590554.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.114492.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 1202 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:28.467958.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 24688
Added 18341 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 27888
Added 3200 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:02.677694.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/custom-post-type-ui/custom-post-type-ui.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/custom-post-type-ui/classes/class.cptui_admin_ui.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/custom-post-type-ui/classes/class.cptui_debug_info.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/custom-post-type-ui/external/wpgraphql.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/custom-post-type-ui/inc/about.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/custom-post-type-ui/inc/listings.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/custom-post-type-ui/inc/post-types.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/custom-post-type-ui/inc/support.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/custom-post-type-ui/inc/taxonomies.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/custom-post-type-ui/inc/tools.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/custom-post-type-ui/inc/utility.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/custom-post-type-ui/inc/wp-cli.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:01.255645.

36 PHP_REACHES edges created
2 REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
14000 PHP_REACHES edges created
15000 PHP_REACHES edges created
16000 PHP_REACHES edges created
17000 PHP_REACHES edges created
18000 PHP_REACHES edges created
19000 PHP_REACHES edges created
20000 PHP_REACHES edges created
21000 PHP_REACHES edges created
22000 PHP_REACHES edges created
23000 PHP_REACHES edges created
24000 PHP_REACHES edges created
24650 PHP_REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
3200 PHP_REACHES edges created
27888 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 7270 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.636809.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:01.301594.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 416 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:16.899129.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 768 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.282380.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.239523.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:06.956373.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.107976.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.040532.

1000 PHP_REACHES edges created
1184 PHP_REACHES edges created
1184 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 702 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.271121.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
1 SQL operations to process.
UPDATE `$wpdb` SET `taxonomy` = filter_input(INPUT_POST, "cpt_custom_tax", FILTER_SANITIZE_STRING, FILTER_REQUIRE_ARRAY) WHERE `taxonomy` = %s AND `term_id` IN ( implode(",", $term_ids) )
UPDATE `$wpdb` SET `taxonomy` = filter_input(INPUT_POST, "cpt_custom_tax", FILTER_SANITIZE_STRING, FILTER_REQUIRE_ARRAY) WHERE `taxonomy` = filter_input(INPUT_POST, "tax_original", FILTER_SANITIZE_STRING) AND `term_id` IN ( implode(",", $term_ids) )
UPDATE `$wpdb` SET `taxonomy` = filter_input(INPUT_POST, "cpt_custom_tax", FILTER_SANITIZE_STRING, FILTER_REQUIRE_ARRAY) WHERE `taxonomy` = filter_input(INPUT_POST, "tax_original", FILTER_SANITIZE_STRING) AND `term_id` IN ( implode(",", $term_ids) )
SQL command (UPDATE `$wpdb` SET `taxonomy` = filter_input(INPUT_POST, "cpt_custom_tax", FILTER_SANITIZE_STRING, FILTER_REQUIRE_ARRAY) WHERE `taxonomy` = filter_input(INPUT_POST, "tax_original", FILTER_SANITIZE_STRING) AND `term_id` IN ( implode(",", $term_ids) )) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [27856]
Added 0 SQL nodes. 0 out of 1 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:02.222153.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'$this->system_status()'' cannot be parsed correct.
HTML code '$'Yes
No
'' cannot be parsed correct.
HTML code '$'site_url()
'' cannot be parsed correct.
HTML code '$'home_url()
'' cannot be parsed correct.
HTML code '$'get_bloginfo("version")
'' cannot be parsed correct.
HTML code '$'get_option("permalink_structure")
'' cannot be parsed correct.
HTML code '$'wp_get_theme() wp_get_theme()
'' cannot be parsed correct.
HTML code '$'implode(", ", get_post_types("", "names"))
'' cannot be parsed correct.
HTML code '$'PHP_VERSION
'' cannot be parsed correct.
HTML code '$'$wpdb->db_version()
'' cannot be parsed correct.
HTML code '$'$_SERVER_SERVER_SOFTWARE
'' cannot be parsed correct.
HTML code '$'get_option("show_on_front")
'' cannot be parsed correct.
HTML code '$'get_the_title($id) (#get_option("page_on_front"))
'' cannot be parsed correct.
HTML code '$'get_the_title($id) (#get_option("page_for_posts"))
'' cannot be parsed correct.
HTML code '$'MB'' cannot be parsed correct.
HTML code '$'TOTAL PLUGINS: count($plugins)

'' cannot be parsed correct.
HTML code '$'		MU PLUGINS: (count($mu_plugins))

'' cannot be parsed correct.
HTML code '$'		$mu_plugin_Name: $mu_plugin_Version
'' cannot be parsed correct.
HTML code '$'		ACTIVE PLUGINS: (count($active))

'' cannot be parsed correct.
HTML code '$'		$plugin_Name: $plugin_Version
'' cannot be parsed correct.
HTML code '$'INACTIVE PLUGINS: (count($active))

'' cannot be parsed correct.
HTML code '$'		$plugin_Name: $plugin_Version
'' cannot be parsed correct.
HTML code '$'NETWORK ACTIVE PLUGINS: (count($net_plugins))

'' cannot be parsed correct.
HTML code '$'get_plugin_data($plugin_path)_Name :get_plugin_data($plugin_path)_Version
'' cannot be parsed correct.
HTML code '$'		Post Types: 
'' cannot be parsed correct.
HTML code '$'		json_encode($cptui_post_types)
'' cannot be parsed correct.
HTML code '$'		Taxonomies: 
'' cannot be parsed correct.
HTML code '$'		json_encode($cptui_taxonomies)
'' cannot be parsed correct.
HTML code '$'		EXTRA DEBUG INFO'' cannot be parsed correct.
HTML code '$'$this->get_setting_fields($ui, $current, $name_array)'' cannot be parsed correct.
HTML code '$'$this->get_setting_fields($ui, $current, $name_array)'' cannot be parsed correct.
HTML code '$'Custom Post Type UI has native support for WPGraphQL. Please <a href="%s">de-active</a> the "WPGraphQL for Custom Post Type UI" extension to proceed.'' cannot be parsed correct.
HTML code '$'CPTUI_VERSION'' cannot be parsed correct.
HTML code '$'<h1>More from %s</h1>'' cannot be parsed correct.
HTML code '$'$ui->get_select_input(["namearray" => $name_array, "name" => "show_in_graphql", "labeltext" => esc_html__("Show in GraphQL", "wp-graphql-custom-post-type-ui"), "aftertext" => esc_html__("Whether or not to show data of this type in the WPGraphQL. Default: false", "wp-graphql-custom-post-type-ui"), "selections" => $selections, "default" => false, "required" => true])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => $name_array, "name" => "graphql_single_name", "labeltext" => esc_html__("GraphQL Single Name", "wp-graphql-custom-post-type-ui"), "aftertext" => esc_attr__("Singular name for reference in the GraphQL API.", "wp-graphql-custom-post-type-ui"), "textvalue" => isset($current["graphql_single_name"])esc_attr($current["graphql_single_name"])"", "required" => true])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => $name_array, "name" => "graphql_plural_name", "labeltext" => esc_html__("GraphQL Plural Name", "wp-graphql-custom-post-type-ui"), "aftertext" => esc_attr__("Plural name for reference in the GraphQL API.", "wp-graphql-custom-post-type-ui"), "textvalue" => isset($current["graphql_plural_name"])esc_attr($current["graphql_plural_name"])"", "required" => true])'' cannot be parsed correct.
HTML code '$'disp_boolean($value)'' cannot be parsed correct.
HTML code '$'$value""'' cannot be parsed correct.
HTML code '$'$support<br/>'' cannot be parsed correct.
HTML code '$'$taxonomy<br/>'' cannot be parsed correct.
HTML code '$'$post_type'' cannot be parsed correct.
HTML code '$'$post_type'' cannot be parsed correct.
HTML code '$'$post_type'' cannot be parsed correct.
HTML code '$'<th>$head</th>'' cannot be parsed correct.
HTML code '$'<h2 id="taxonomies">Taxonomies</h2>'' cannot be parsed correct.
HTML code '$'cptui_get_add_new_link("post_types")'' cannot be parsed correct.
HTML code '$'cptui_get_add_new_link("taxonomies")'' cannot be parsed correct.
HTML code '$'<h2 id="post-types">Post Types</h2>'' cannot be parsed correct.
HTML code '$'<th>$head</th>'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'get_post_type_archive_link($post_type)'' cannot be parsed correct.
HTML code '$'<th>$head</th>'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'disp_boolean($value)'' cannot be parsed correct.
HTML code '$'$value""'' cannot be parsed correct.
HTML code '$'$type<br/>'' cannot be parsed correct.
HTML code '$'$taxonomy'' cannot be parsed correct.
HTML code '$'$taxonomy'' cannot be parsed correct.
HTML code '$'<th>$head</th>'' cannot be parsed correct.
HTML code '$'<p>No post types registered for display. Visit %s to get started.</p>'' cannot be parsed correct.
HTML code '$'cptui-$tab'' cannot be parsed correct.
HTML code '$'cptui_get_post_form_action($ui)'' cannot be parsed correct.
HTML code '$'apply_filters("cptui_post_type_submit_select", __("Select", "custom-post-type-ui"))'' cannot be parsed correct.
HTML code '$'cptui_get_post_form_action($ui)'' cannot be parsed correct.
HTML code '$'$ui->get_tr_start()$ui->get_th_start()'' cannot be parsed correct.
HTML code '$'$ui->get_label("name", esc_html__("Post Type Slug", "custom-post-type-ui"))'' cannot be parsed correct.
HTML code '$'$ui->get_required_span()'' cannot be parsed correct.
HTML code '$'<p id="slugchanged" class="hidemessage">Slug has changed<span class="dashicons dashicons-warning"></span></p>'' cannot be parsed correct.
HTML code '$'<p id="slugexists" class="hidemessage">Slug already exists<span class="dashicons dashicons-warning"></span></p>'' cannot be parsed correct.
HTML code '$'$ui->get_th_end()$ui->get_td_start()'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_custom_post_type", "name" => "name", "textvalue" => isset($current["name"])esc_attr($current["name"])"", "maxlength" => "20", "helptext" => esc_html__("The post type name/slug. Used for various queries for post type content.", "custom-post-type-ui"), "required" => true, "placeholder" => false, "wrap" => false])'' cannot be parsed correct.
HTML code '$'$ui->get_check_input(["checkvalue" => "update_post_types", "checked" => "false", "name" => "update_post_types", "namearray" => "update_post_types", "labeltext" => esc_html__("Migrate posts to newly renamed post type?", "custom-post-type-ui"), "helptext" => false, "default" => false, "wrap" => false])'' cannot be parsed correct.
HTML code '$'$ui->get_td_end()'' cannot be parsed correct.
HTML code '$'$ui->get_tr_end()'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_custom_post_type", "name" => "label", "textvalue" => isset($current["label"])esc_attr($current["label"])"", "labeltext" => esc_html__("Plural Label", "custom-post-type-ui"), "aftertext" => esc_html__("(e.g. Movies)", "custom-post-type-ui"), "helptext" => esc_html__("Used for the post type admin menu item.", "custom-post-type-ui"), "required" => true])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_custom_post_type", "name" => "singular_label", "textvalue" => isset($current["singular_label"])esc_attr($current["singular_label"])"", "labeltext" => esc_html__("Singular Label", "custom-post-type-ui"), "aftertext" => esc_html__("(e.g. Movie)", "custom-post-type-ui"), "helptext" => esc_html__("Used when a singular label is needed.", "custom-post-type-ui"), "required" => true])'' cannot be parsed correct.
HTML code '$'<p>No taxonomies registered for display. Visit %s to get started.</p>'' cannot be parsed correct.
HTML code '$'$ui->get_tr_end()'' cannot be parsed correct.
HTML code '$'$ui->get_th_start()Auto-populate labels$ui->get_th_end()'' cannot be parsed correct.
HTML code '$'$ui->get_td_start()'' cannot be parsed correct.
HTML code '$'$link_text'' cannot be parsed correct.
HTML code '$'$ui->get_td_end()$ui->get_tr_end()'' cannot be parsed correct.
HTML code '$'apply_filters("cptui_post_type_submit_edit", __("Save Post Type", "custom-post-type-ui"))'' cannot be parsed correct.
HTML code '$'apply_filters("cptui_post_type_submit_delete", __("Delete Post Type", "custom-post-type-ui"))'' cannot be parsed correct.
HTML code '$'apply_filters("cptui_post_type_submit_add", __("Add Post Type", "custom-post-type-ui"))'' cannot be parsed correct.
HTML code '$'null_name'' cannot be parsed correct.
HTML code '$'$tab'' cannot be parsed correct.
HTML code '$'$ui->get_textarea_input(["namearray" => "cpt_custom_post_type", "name" => "description", "rows" => "4", "cols" => "40", "textvalue" => isset($current["description"])esc_textarea($current["description"])"", "labeltext" => esc_html__("Post Type Description", "custom-post-type-ui"), "helptext" => esc_html__("Perhaps describe what your custom post type is used for?", "custom-post-type-ui")])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["labeltext" => esc_html__("Menu Name", "custom-post-type-ui"), "helptext" => esc_html__("Custom admin menu name for your custom post type.", "custom-post-type-ui"), "namearray" => "cpt_labels", "name" => "menu_name", "textvalue" => isset($current["labels"]["menu_name"])esc_attr($current["labels"]["menu_name"])"", "aftertext" => esc_html__("(e.g. My Movies)", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("My %s", "custom-post-type-ui"), "item"), "plurality" => "plural"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["labeltext" => esc_html__("All Items", "custom-post-type-ui"), "helptext" => esc_html__("Used in the post type admin submenu.", "custom-post-type-ui"), "namearray" => "cpt_labels", "name" => "all_items", "textvalue" => isset($current["labels"]["all_items"])esc_attr($current["labels"]["all_items"])"", "aftertext" => esc_html__("(e.g. All Movies)", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("All %s", "custom-post-type-ui"), "item"), "plurality" => "plural"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["labeltext" => esc_html__("Not Found in Trash", "custom-post-type-ui"), "helptext" => esc_html__("Used when there are no posts to display on the post type list trash screen.", "custom-post-type-ui"), "namearray" => "cpt_labels", "name" => "not_found_in_trash", "textvalue" => isset($current["labels"]["not_found_in_trash"])esc_attr($current["labels"]["not_found_in_trash"])"", "aftertext" => esc_html__("(e.g. No Movies found in Trash)", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("No %s found in trash", "custom-post-type-ui"), "item"), "plurality" => "plural"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["labeltext" => esc_html__("Parent", "custom-post-type-ui"), "helptext" => esc_html__("Used for hierarchical types that need a colon.", "custom-post-type-ui"), "namearray" => "cpt_labels", "name" => "parent", "textvalue" => isset($current["labels"]["parent"])esc_attr($current["labels"]["parent"])"", "aftertext" => esc_html__("(e.g. Parent Movie:)", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("Parent %s:", "custom-post-type-ui"), "item"), "plurality" => "singular"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["labeltext" => esc_html__("Featured Image", "custom-post-type-ui"), "helptext" => esc_html__("Used as the "Featured Image" phrase for the post type.", "custom-post-type-ui"), "namearray" => "cpt_labels", "name" => "featured_image", "textvalue" => isset($current["labels"]["featured_image"])esc_attr($current["labels"]["featured_image"])"", "aftertext" => esc_html__("(e.g. Featured image for this movie)", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("Featured image for this %s", "custom-post-type-ui"), "item"), "plurality" => "singular"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["labeltext" => esc_html__("Set Featured Image", "custom-post-type-ui"), "helptext" => esc_html__("Used as the "Set featured image" phrase for the post type.", "custom-post-type-ui"), "namearray" => "cpt_labels", "name" => "set_featured_image", "textvalue" => isset($current["labels"]["set_featured_image"])esc_attr($current["labels"]["set_featured_image"])"", "aftertext" => esc_html__("(e.g. Set featured image for this movie)", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("Set featured image for this %s", "custom-post-type-ui"), "item"), "plurality" => "singular"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["labeltext" => esc_html__("Remove Featured Image", "custom-post-type-ui"), "helptext" => esc_html__("Used as the "Remove featured image" phrase for the post type.", "custom-post-type-ui"), "namearray" => "cpt_labels", "name" => "remove_featured_image", "textvalue" => isset($current["labels"]["remove_featured_image"])esc_attr($current["labels"]["remove_featured_image"])"", "aftertext" => esc_html__("(e.g. Remove featured image for this movie)", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("Remove featured image for this %s", "custom-post-type-ui"), "item"), "plurality" => "singular"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["labeltext" => esc_html__("Use Featured Image", "custom-post-type-ui"), "helptext" => esc_html__("Used as the "Use as featured image" phrase for the post type.", "custom-post-type-ui"), "namearray" => "cpt_labels", "name" => "use_featured_image", "textvalue" => isset($current["labels"]["use_featured_image"])esc_attr($current["labels"]["use_featured_image"])"", "aftertext" => esc_html__("(e.g. Use as featured image for this movie)", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("Use as featured image for this %s", "custom-post-type-ui"), "item"), "plurality" => "singular"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["labeltext" => esc_html__("Archives", "custom-post-type-ui"), "helptext" => esc_html__("Post type archive label used in nav menus.", "custom-post-type-ui"), "namearray" => "cpt_labels", "name" => "archives", "textvalue" => isset($current["labels"]["archives"])esc_attr($current["labels"]["archives"])"", "aftertext" => esc_html__("(e.g. Movie archives)", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("%s archives", "custom-post-type-ui"), "item"), "plurality" => "singular"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["labeltext" => esc_html__("Add New", "custom-post-type-ui"), "helptext" => esc_html__("Used in the post type admin submenu.", "custom-post-type-ui"), "namearray" => "cpt_labels", "name" => "add_new", "textvalue" => isset($current["labels"]["add_new"])esc_attr($current["labels"]["add_new"])"", "aftertext" => esc_html__("(e.g. Add New)", "custom-post-type-ui"), "data" => ["label" => esc_attr__("Add new", "custom-post-type-ui"), "plurality" => "plural"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["labeltext" => esc_html__("Add New Item", "custom-post-type-ui"), "helptext" => esc_html__("Used at the top of the post editor screen for a new post type post.", "custom-post-type-ui"), "namearray" => "cpt_labels", "name" => "add_new_item", "textvalue" => isset($current["labels"]["add_new_item"])esc_attr($current["labels"]["add_new_item"])"", "aftertext" => esc_html__("(e.g. Add New Movie)", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("Add new %s", "custom-post-type-ui"), "item"), "plurality" => "singular"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["labeltext" => esc_html__("Edit Item", "custom-post-type-ui"), "helptext" => esc_html__("Used at the top of the post editor screen for an existing post type post.", "custom-post-type-ui"), "namearray" => "cpt_labels", "name" => "edit_item", "textvalue" => isset($current["labels"]["edit_item"])esc_attr($current["labels"]["edit_item"])"", "aftertext" => esc_html__("(e.g. Edit Movie)", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("Edit %s", "custom-post-type-ui"), "item"), "plurality" => "singular"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["labeltext" => esc_html__("New Item", "custom-post-type-ui"), "helptext" => esc_html__("Post type label. Used in the admin menu for displaying post types.", "custom-post-type-ui"), "namearray" => "cpt_labels", "name" => "new_item", "textvalue" => isset($current["labels"]["new_item"])esc_attr($current["labels"]["new_item"])"", "aftertext" => esc_html__("(e.g. New Movie)", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("New %s", "custom-post-type-ui"), "item"), "plurality" => "singular"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["labeltext" => esc_html__("View Item", "custom-post-type-ui"), "helptext" => esc_html__("Used in the admin bar when viewing editor screen for a published post in the post type.", "custom-post-type-ui"), "namearray" => "cpt_labels", "name" => "view_item", "textvalue" => isset($current["labels"]["view_item"])esc_attr($current["labels"]["view_item"])"", "aftertext" => esc_html__("(e.g. View Movie)", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("View %s", "custom-post-type-ui"), "item"), "plurality" => "singular"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["labeltext" => esc_html__("View Items", "custom-post-type-ui"), "helptext" => esc_html__("Used in the admin bar when viewing editor screen for a published post in the post type.", "custom-post-type-ui"), "namearray" => "cpt_labels", "name" => "view_items", "textvalue" => isset($current["labels"]["view_items"])esc_attr($current["labels"]["view_items"])"", "aftertext" => esc_html__("(e.g. View Movies)", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("View %s", "custom-post-type-ui"), "item"), "plurality" => "plural"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["labeltext" => esc_html__("Search Item", "custom-post-type-ui"), "helptext" => esc_html__("Used as the text for the search button on post type list screen.", "custom-post-type-ui"), "namearray" => "cpt_labels", "name" => "search_items", "textvalue" => isset($current["labels"]["search_items"])esc_attr($current["labels"]["search_items"])"", "aftertext" => esc_html__("(e.g. Search Movies)", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("Search %s", "custom-post-type-ui"), "item"), "plurality" => "plural"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["labeltext" => esc_html__("Not Found", "custom-post-type-ui"), "helptext" => esc_html__("Used when there are no posts to display on the post type list screen.", "custom-post-type-ui"), "namearray" => "cpt_labels", "name" => "not_found", "textvalue" => isset($current["labels"]["not_found"])esc_attr($current["labels"]["not_found"])"", "aftertext" => esc_html__("(e.g. No Movies found)", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("No %s found", "custom-post-type-ui"), "item"), "plurality" => "plural"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["labeltext" => esc_html__("Insert into item", "custom-post-type-ui"), "helptext" => esc_html__("Used as the "Insert into post" or "Insert into page" phrase for the post type.", "custom-post-type-ui"), "namearray" => "cpt_labels", "name" => "insert_into_item", "textvalue" => isset($current["labels"]["insert_into_item"])esc_attr($current["labels"]["insert_into_item"])"", "aftertext" => esc_html__("(e.g. Insert into movie)", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("Insert into %s", "custom-post-type-ui"), "item"), "plurality" => "singular"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["labeltext" => esc_html__("Uploaded to this Item", "custom-post-type-ui"), "helptext" => esc_html__("Used as the "Uploaded to this post" or "Uploaded to this page" phrase for the post type.", "custom-post-type-ui"), "namearray" => "cpt_labels", "name" => "uploaded_to_this_item", "textvalue" => isset($current["labels"]["uploaded_to_this_item"])esc_attr($current["labels"]["uploaded_to_this_item"])"", "aftertext" => esc_html__("(e.g. Uploaded to this movie)", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("Upload to this %s", "custom-post-type-ui"), "item"), "plurality" => "singular"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["labeltext" => esc_html__("Filter Items List", "custom-post-type-ui"), "helptext" => esc_html__("Screen reader text for the filter links heading on the post type listing screen.", "custom-post-type-ui"), "namearray" => "cpt_labels", "name" => "filter_items_list", "textvalue" => isset($current["labels"]["filter_items_list"])esc_attr($current["labels"]["filter_items_list"])"", "aftertext" => esc_html__("(e.g. Filter movies list)", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("Filter %s list", "custom-post-type-ui"), "item"), "plurality" => "plural"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["labeltext" => esc_html__("Items List Navigation", "custom-post-type-ui"), "helptext" => esc_html__("Screen reader text for the pagination heading on the post type listing screen.", "custom-post-type-ui"), "namearray" => "cpt_labels", "name" => "items_list_navigation", "textvalue" => isset($current["labels"]["items_list_navigation"])esc_attr($current["labels"]["items_list_navigation"])"", "aftertext" => esc_html__("(e.g. Movies list navigation)", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("%s list navigation", "custom-post-type-ui"), "item"), "plurality" => "plural"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["labeltext" => esc_html__("Items List", "custom-post-type-ui"), "helptext" => esc_html__("Screen reader text for the items list heading on the post type listing screen.", "custom-post-type-ui"), "namearray" => "cpt_labels", "name" => "items_list", "textvalue" => isset($current["labels"]["items_list"])esc_attr($current["labels"]["items_list"])"", "aftertext" => esc_html__("(e.g. Movies list)", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("%s list", "custom-post-type-ui"), "item"), "plurality" => "plural"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["labeltext" => esc_html__("Attributes", "custom-post-type-ui"), "helptext" => esc_html__("Used for the title of the post attributes meta box.", "custom-post-type-ui"), "namearray" => "cpt_labels", "name" => "attributes", "textvalue" => isset($current["labels"]["attributes"])esc_attr($current["labels"]["attributes"])"", "aftertext" => esc_html__("(e.g. Movies Attributes)", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("%s attributes", "custom-post-type-ui"), "item"), "plurality" => "plural"]])'' cannot be parsed correct.
HTML code '$'$ui->get_select_input(["namearray" => "cpt_custom_post_type", "name" => "show_in_nav_menus", "labeltext" => esc_html__("Show in Nav Menus", "custom-post-type-ui"), "aftertext" => esc_html__("(Custom Post Type UI default: true) Whether or not this post type is available for selection in navigation menus.", "custom-post-type-ui"), "selections" => $select])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["labeltext" => esc_html__(""New" menu in admin bar", "custom-post-type-ui"), "helptext" => esc_html__("Used in New in Admin menu bar. Default "singular name" label.", "custom-post-type-ui"), "namearray" => "cpt_labels", "name" => "name_admin_bar", "textvalue" => isset($current["labels"]["name_admin_bar"])esc_attr($current["labels"]["name_admin_bar"])"", "aftertext" => esc_html__("(e.g. Movie)", "custom-post-type-ui"), "data" => ["label" => "item", "plurality" => "singular"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["labeltext" => esc_html__("Item Published", "custom-post-type-ui"), "helptext" => esc_html__("Used in the editor notice after publishing a post. Default "Post published." / "Page published."", "custom-post-type-ui"), "namearray" => "cpt_labels", "name" => "item_published", "textvalue" => isset($current["labels"]["item_published"])esc_attr($current["labels"]["item_published"])"", "aftertext" => esc_html__("(e.g. Movie published)", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("%s published", "custom-post-type-ui"), "item"), "plurality" => "singular"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["labeltext" => esc_html__("Item Published Privately", "custom-post-type-ui"), "helptext" => esc_html__("Used in the editor notice after publishing a private post. Default "Post published privately." / "Page published privately."", "custom-post-type-ui"), "namearray" => "cpt_labels", "name" => "item_published_privately", "textvalue" => isset($current["labels"]["item_published_privately"])esc_attr($current["labels"]["item_published_privately"])"", "aftertext" => esc_html__("(e.g. Movie published privately.)", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("%s published privately.", "custom-post-type-ui"), "item"), "plurality" => "singular"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["labeltext" => esc_html__("Item Reverted To Draft", "custom-post-type-ui"), "helptext" => esc_html__("Used in the editor notice after reverting a post to draft. Default "Post reverted to draft." / "Page reverted to draft."", "custom-post-type-ui"), "namearray" => "cpt_labels", "name" => "item_reverted_to_draft", "textvalue" => isset($current["labels"]["item_reverted_to_draft"])esc_attr($current["labels"]["item_reverted_to_draft"])"", "aftertext" => esc_html__("(e.g. Movie reverted to draft)", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("%s reverted to draft.", "custom-post-type-ui"), "item"), "plurality" => "singular"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["labeltext" => esc_html__("Item Scheduled", "custom-post-type-ui"), "helptext" => esc_html__("Used in the editor notice after scheduling a post to be published at a later date. Default "Post scheduled." / "Page scheduled."", "custom-post-type-ui"), "namearray" => "cpt_labels", "name" => "item_scheduled", "textvalue" => isset($current["labels"]["item_scheduled"])esc_attr($current["labels"]["item_scheduled"])"", "aftertext" => esc_html__("(e.g. Movie scheduled)", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("%s scheduled", "custom-post-type-ui"), "item"), "plurality" => "singular"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["labeltext" => esc_html__("Item Updated", "custom-post-type-ui"), "helptext" => esc_html__("Used in the editor notice after updating a post. Default "Post updated." / "Page updated."", "custom-post-type-ui"), "namearray" => "cpt_labels", "name" => "item_updated", "textvalue" => isset($current["labels"]["item_updated"])esc_attr($current["labels"]["item_updated"])"", "aftertext" => esc_html__("(e.g. Movie updated)", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("%s updated.", "custom-post-type-ui"), "item"), "plurality" => "singular"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["labeltext" => esc_html__("Add Title", "custom-post-type-ui"), "helptext" => esc_html__("Placeholder text in the "title" input when creating a post. Not exportable.", "custom-post-type-ui"), "namearray" => "cpt_custom_post_type", "name" => "enter_title_here", "textvalue" => isset($current["enter_title_here"])esc_attr($current["enter_title_here"])"", "aftertext" => esc_html__("(e.g. Add Movie)", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("Add %s", "custom-post-type-ui"), "item"), "plurality" => "singular"]])'' cannot be parsed correct.
HTML code '$'$ui->get_select_input(["namearray" => "cpt_custom_post_type", "name" => "public", "labeltext" => esc_html__("Public", "custom-post-type-ui"), "aftertext" => esc_html__("(Custom Post Type UI default: true) Whether or not posts of this type should be shown in the admin UI and is publicly queryable.", "custom-post-type-ui"), "selections" => $select])'' cannot be parsed correct.
HTML code '$'$ui->get_select_input(["namearray" => "cpt_custom_post_type", "name" => "publicly_queryable", "labeltext" => esc_html__("Publicly Queryable", "custom-post-type-ui"), "aftertext" => esc_html__("(default: true) Whether or not queries can be performed on the front end as part of parse_request()", "custom-post-type-ui"), "selections" => $select])'' cannot be parsed correct.
HTML code '$'$ui->get_select_input(["namearray" => "cpt_custom_post_type", "name" => "show_ui", "labeltext" => esc_html__("Show UI", "custom-post-type-ui"), "aftertext" => esc_html__("(default: true) Whether or not to generate a default UI for managing this post type.", "custom-post-type-ui"), "selections" => $select])'' cannot be parsed correct.
HTML code '$'$ui->get_select_input(["namearray" => "cpt_custom_post_type", "name" => "rewrite", "labeltext" => esc_html__("Rewrite", "custom-post-type-ui"), "aftertext" => esc_html__("(default: true) Whether or not WordPress should use rewrites for this post type.", "custom-post-type-ui"), "selections" => $select])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_custom_post_type", "name" => "rewrite_slug", "textvalue" => isset($current["rewrite_slug"])esc_attr($current["rewrite_slug"])"", "labeltext" => esc_html__("Custom Rewrite Slug", "custom-post-type-ui"), "aftertext" => esc_attr__("(default: post type slug)", "custom-post-type-ui"), "helptext" => esc_html__("Custom post type slug to use instead of the default.", "custom-post-type-ui")])'' cannot be parsed correct.
HTML code '$'$ui->get_select_input(["namearray" => "cpt_custom_post_type", "name" => "delete_with_user", "labeltext" => esc_html__("Delete with user", "custom-post-type-ui"), "aftertext" => esc_html__("(CPTUI default: false) Whether to delete posts of this type when deleting a user.", "custom-post-type-ui"), "selections" => $select])'' cannot be parsed correct.
HTML code '$'$ui->get_select_input(["namearray" => "cpt_custom_post_type", "name" => "show_in_rest", "labeltext" => esc_html__("Show in REST API", "custom-post-type-ui"), "aftertext" => esc_html__("(Custom Post Type UI default: true) Whether or not to show this post type data in the WP REST API.", "custom-post-type-ui"), "selections" => $select])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_custom_post_type", "name" => "rest_base", "labeltext" => esc_html__("REST API base slug", "custom-post-type-ui"), "aftertext" => esc_attr__("Slug to use in REST API URLs.", "custom-post-type-ui"), "textvalue" => isset($current["rest_base"])esc_attr($current["rest_base"])""])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_custom_post_type", "name" => "rest_controller_class", "labeltext" => esc_html__("REST API controller class", "custom-post-type-ui"), "aftertext" => esc_attr__("(default: WP_REST_Posts_Controller) Custom controller to use instead of WP_REST_Posts_Controller.", "custom-post-type-ui"), "textvalue" => isset($current["rest_controller_class"])esc_attr($current["rest_controller_class"])""])'' cannot be parsed correct.
HTML code '$'$ui->get_tr_start()$ui->get_th_start()'' cannot be parsed correct.
HTML code '$'$ui->get_label("has_archive", esc_html__("Has Archive", "custom-post-type-ui"))'' cannot be parsed correct.
HTML code '$'$ui->get_p(esc_html__("If left blank, the archive slug will default to the post type slug.", "custom-post-type-ui"))'' cannot be parsed correct.
HTML code '$'$ui->get_th_end()$ui->get_td_start()'' cannot be parsed correct.
HTML code '$'$ui->get_select_input(["namearray" => "cpt_custom_post_type", "name" => "has_archive", "aftertext" => esc_html__("(default: false) Whether or not the post type will have a post type archive URL.", "custom-post-type-ui"), "selections" => $select, "wrap" => false])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_custom_post_type", "name" => "has_archive_string", "textvalue" => isset($current["has_archive_string"])esc_attr($current["has_archive_string"])"", "aftertext" => esc_attr__("Slug to be used for archive URL.", "custom-post-type-ui"), "helptext_after" => true, "wrap" => false])'' cannot be parsed correct.
HTML code '$'$ui->get_td_end()$ui->get_tr_end()'' cannot be parsed correct.
HTML code '$'$ui->get_select_input(["namearray" => "cpt_custom_post_type", "name" => "rewrite_withfront", "labeltext" => esc_html__("With Front", "custom-post-type-ui"), "aftertext" => esc_html__("(default: true) Should the permalink structure be prepended with the front base. (example: if your permalink structure is /blog/, then your links will be: false->/news/, true->/blog/news/).", "custom-post-type-ui"), "selections" => $select])'' cannot be parsed correct.
HTML code '$'$ui->get_select_input(["namearray" => "cpt_custom_post_type", "name" => "query_var", "labeltext" => esc_html__("Query Var", "custom-post-type-ui"), "aftertext" => esc_html__("(default: true) Sets the query_var key for this post type.", "custom-post-type-ui"), "selections" => $select])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_custom_post_type", "name" => "query_var_slug", "textvalue" => isset($current["query_var_slug"])esc_attr($current["query_var_slug"])"", "labeltext" => esc_html__("Custom Query Var Slug", "custom-post-type-ui"), "aftertext" => esc_attr__("(default: post type slug) Query var needs to be true to use.", "custom-post-type-ui"), "helptext" => esc_html__("Custom query var slug to use instead of the default.", "custom-post-type-ui")])'' cannot be parsed correct.
HTML code '$'$ui->get_tr_start()$ui->get_th_start()'' cannot be parsed correct.
HTML code '$'$ui->get_label("menu_position", esc_html__("Menu Position", "custom-post-type-ui"))'' cannot be parsed correct.
HTML code '$'$ui->get_p(sprintf(esc_html__("See %s in the "menu_position" section. Range of 5-100", "custom-post-type-ui"), sprintf("<a href="https://developer.wordpress.org/reference/functions/register_post_type/#menu_position" target="_blank" rel="noopener">%s</a>", esc_html__("Available options", "custom-post-type-ui"))))'' cannot be parsed correct.
HTML code '$'$ui->get_th_end()$ui->get_td_start()'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_custom_post_type", "name" => "menu_position", "textvalue" => isset($current["menu_position"])esc_attr($current["menu_position"])"", "helptext" => esc_html__("The position in the menu order the post type should appear. show_in_menu must be true.", "custom-post-type-ui"), "wrap" => false])'' cannot be parsed correct.
HTML code '$'$ui->get_td_end()$ui->get_tr_end()'' cannot be parsed correct.
HTML code '$'$ui->get_tr_start()$ui->get_th_start()'' cannot be parsed correct.
HTML code '$'$ui->get_label("show_in_menu", esc_html__("Show in Menu", "custom-post-type-ui"))'' cannot be parsed correct.
HTML code '$'$ui->get_p(esc_html__(""Show UI" must be "true". If an existing top level page such as "tools.php" is indicated for second input, post type will be sub menu of that.", "custom-post-type-ui"))'' cannot be parsed correct.
HTML code '$'$ui->get_th_end()$ui->get_td_start()'' cannot be parsed correct.
HTML code '$'$ui->get_select_input(["namearray" => "cpt_custom_post_type", "name" => "show_in_menu", "aftertext" => esc_html__("(default: true) Whether or not to show the post type in the admin menu and where to show that menu.", "custom-post-type-ui"), "selections" => $select, "wrap" => false])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_custom_post_type", "name" => "show_in_menu_string", "textvalue" => isset($current["show_in_menu_string"])esc_attr($current["show_in_menu_string"])"", "helptext" => esc_attr__("The top-level admin menu page file name for which the post type should be in the sub menu of.", "custom-post-type-ui"), "helptext_after" => true, "wrap" => false])'' cannot be parsed correct.
HTML code '$'$ui->get_td_end()$ui->get_tr_end()'' cannot be parsed correct.
HTML code '$'$ui->get_tr_start()$ui->get_th_start()'' cannot be parsed correct.
HTML code '$'$ui->get_menu_icon_preview($current_menu_icon)'' cannot be parsed correct.
HTML code '$'$ui->get_label("menu_icon", esc_html__("Menu Icon", "custom-post-type-ui"))'' cannot be parsed correct.
HTML code '$'$ui->get_th_end()$ui->get_td_start()'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_custom_post_type", "name" => "menu_icon", "textvalue" => $current_menu_icon, "aftertext" => esc_attr__("(Full URL for icon or Dashicon class)", "custom-post-type-ui"), "helptext" => sprintf(esc_html__("Image URL or %sDashicon class name%s to use for icon. Custom image should be 20px by 20px.", "custom-post-type-ui"), "<a href="https://developer.wordpress.org/resource/dashicons/" target="_blank" rel="noopener">", "</a>"), "wrap" => false])'' cannot be parsed correct.
HTML code '$'$ui->get_button(["id" => "cptui_choose_dashicon", "classes" => "dashicons-picker", "textvalue" => esc_attr__("Choose dashicon", "custom-post-type-ui")])'' cannot be parsed correct.
HTML code '$'$ui->get_button(["id" => "cptui_choose_icon", "textvalue" => esc_attr__("Choose image icon", "custom-post-type-ui")])'' cannot be parsed correct.
HTML code '$'$ui->get_td_end()$ui->get_tr_end()'' cannot be parsed correct.
HTML code '$'$ui->get_tr_start()$ui->get_th_start()Supports'' cannot be parsed correct.
HTML code '$'$ui->get_p(esc_html__("Add support for various available post editor features on the right. A checked value means the post type feature is supported.", "custom-post-type-ui"))'' cannot be parsed correct.
HTML code '$'$ui->get_p(esc_html__("Use the "None" option to explicitly set "supports" to false.", "custom-post-type-ui"))'' cannot be parsed correct.
HTML code '$'$ui->get_th_end()$ui->get_td_start()$ui->get_fieldset_start()'' cannot be parsed correct.
HTML code '$'$ui->get_legend_start()Post type options$ui->get_legend_end()'' cannot be parsed correct.
HTML code '$'$ui->get_check_input(["checkvalue" => "title", "checked" => $title_checked, "name" => "title", "namearray" => "cpt_supports", "textvalue" => "title", "labeltext" => esc_html__("Title", "custom-post-type-ui"), "default" => true, "wrap" => false])'' cannot be parsed correct.
HTML code '$'$ui->get_check_input(["checkvalue" => "editor", "checked" => $editor_checked, "name" => "editor", "namearray" => "cpt_supports", "textvalue" => "editor", "labeltext" => esc_html__("Editor", "custom-post-type-ui"), "default" => true, "wrap" => false])'' cannot be parsed correct.
HTML code '$'$ui->get_check_input(["checkvalue" => "thumbnail", "checked" => $thumb_checked, "name" => "thumbnail", "namearray" => "cpt_supports", "textvalue" => "thumbnail", "labeltext" => esc_html__("Featured Image", "custom-post-type-ui"), "default" => true, "wrap" => false])'' cannot be parsed correct.
HTML code '$'$ui->get_check_input(["checkvalue" => "excerpt", "checked" => !empty($current["supports"]) && is_array($current["supports"]) && in_array("excerpt", $current["supports"])"true""false", "name" => "excerpts", "namearray" => "cpt_supports", "textvalue" => "excerpt", "labeltext" => esc_html__("Excerpt", "custom-post-type-ui"), "default" => true, "wrap" => false])'' cannot be parsed correct.
HTML code '$'$ui->get_select_input(["namearray" => "cpt_custom_post_type", "name" => "exclude_from_search", "labeltext" => esc_html__("Exclude From Search", "custom-post-type-ui"), "aftertext" => esc_html__("(default: false) Whether or not to exclude posts with this post type from front end search results. This also excludes from taxonomy term archives.", "custom-post-type-ui"), "selections" => $select])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_custom_post_type", "name" => "capability_type", "textvalue" => isset($current["capability_type"])esc_attr($current["capability_type"])"post", "labeltext" => esc_html__("Capability Type", "custom-post-type-ui"), "helptext" => esc_html__("The post type to use for checking read, edit, and delete capabilities. A comma-separated second value can be used for plural version.", "custom-post-type-ui")])'' cannot be parsed correct.
HTML code '$'$ui->get_select_input(["namearray" => "cpt_custom_post_type", "name" => "hierarchical", "labeltext" => esc_html__("Hierarchical", "custom-post-type-ui"), "aftertext" => esc_html__("(default: false) Whether or not the post type can have parent-child relationships. At least one published content item is needed in order to select a parent.", "custom-post-type-ui"), "selections" => $select])'' cannot be parsed correct.
HTML code '$'$ui->get_select_input(["namearray" => "cpt_custom_post_type", "name" => "can_export", "labeltext" => esc_html__("Can Export", "custom-post-type-ui"), "aftertext" => esc_html__("(default: false) Can this post_type be exported.", "custom-post-type-ui"), "selections" => $select])'' cannot be parsed correct.
HTML code '$'$ui->get_check_input(["checkvalue" => $add_tax->name, "checked" => !empty($current["taxonomies"]) && is_array($current["taxonomies"]) && in_array($add_tax->name, $current["taxonomies"])"true""false", "name" => $add_tax->name, "namearray" => "cpt_addon_taxes", "textvalue" => $add_tax->name, "labeltext" => $add_tax->label . " " . $core_label, "helptext" => sprintf(esc_attr__("Adds %s support", "custom-post-type-ui"), $add_tax->label), "wrap" => false])'' cannot be parsed correct.
HTML code '$'$ui->get_fieldset_end()$ui->get_td_end()$ui->get_tr_end()'' cannot be parsed correct.
HTML code '$'$ui->get_check_input(["checkvalue" => "trackbacks", "checked" => !empty($current["supports"]) && is_array($current["supports"]) && in_array("trackbacks", $current["supports"])"true""false", "name" => "trackbacks", "namearray" => "cpt_supports", "textvalue" => "trackbacks", "labeltext" => esc_html__("Trackbacks", "custom-post-type-ui"), "default" => true, "wrap" => false])'' cannot be parsed correct.
HTML code '$'$ui->get_check_input(["checkvalue" => "custom-fields", "checked" => !empty($current["supports"]) && is_array($current["supports"]) && in_array("custom-fields", $current["supports"])"true""false", "name" => "custom-fields", "namearray" => "cpt_supports", "textvalue" => "custom-fields", "labeltext" => esc_html__("Custom Fields", "custom-post-type-ui"), "default" => true, "wrap" => false])'' cannot be parsed correct.
HTML code '$'$ui->get_check_input(["checkvalue" => "comments", "checked" => !empty($current["supports"]) && is_array($current["supports"]) && in_array("comments", $current["supports"])"true""false", "name" => "comments", "namearray" => "cpt_supports", "textvalue" => "comments", "labeltext" => esc_html__("Comments", "custom-post-type-ui"), "default" => true, "wrap" => false])'' cannot be parsed correct.
HTML code '$'$ui->get_check_input(["checkvalue" => "revisions", "checked" => !empty($current["supports"]) && is_array($current["supports"]) && in_array("revisions", $current["supports"])"true""false", "name" => "revisions", "namearray" => "cpt_supports", "textvalue" => "revisions", "labeltext" => esc_html__("Revisions", "custom-post-type-ui"), "default" => true, "wrap" => false])'' cannot be parsed correct.
HTML code '$'$ui->get_check_input(["checkvalue" => "author", "checked" => !empty($current["supports"]) && is_array($current["supports"]) && in_array("author", $current["supports"])"true""false", "name" => "author", "namearray" => "cpt_supports", "textvalue" => "author", "labeltext" => esc_html__("Author", "custom-post-type-ui"), "default" => true, "wrap" => false])'' cannot be parsed correct.
HTML code '$'$ui->get_check_input(["checkvalue" => "page-attributes", "checked" => !empty($current["supports"]) && is_array($current["supports"]) && in_array("page-attributes", $current["supports"])"true""false", "name" => "page-attributes", "namearray" => "cpt_supports", "textvalue" => "page-attributes", "labeltext" => esc_html__("Page Attributes", "custom-post-type-ui"), "default" => true, "wrap" => false])'' cannot be parsed correct.
HTML code '$'$ui->get_check_input(["checkvalue" => "post-formats", "checked" => !empty($current["supports"]) && is_array($current["supports"]) && in_array("post-formats", $current["supports"])"true""false", "name" => "post-formats", "namearray" => "cpt_supports", "textvalue" => "post-formats", "labeltext" => esc_html__("Post Formats", "custom-post-type-ui"), "default" => true, "wrap" => false])'' cannot be parsed correct.
HTML code '$'$ui->get_check_input(["checkvalue" => "none", "checked" => !empty($current["supports"]) && is_array($current["supports"]) && in_array("none", $current["supports"])"true""false", "name" => "none", "namearray" => "cpt_supports", "textvalue" => "none", "labeltext" => esc_html__("None", "custom-post-type-ui"), "default" => false, "wrap" => false])'' cannot be parsed correct.
HTML code '$'apply_filters("cptui_post_type_submit_edit", __("Save Post Type", "custom-post-type-ui"))'' cannot be parsed correct.
HTML code '$'apply_filters("cptui_post_type_submit_delete", __("Delete Post Type", "custom-post-type-ui"))'' cannot be parsed correct.
HTML code '$'apply_filters("cptui_post_type_submit_add", __("Add Post Type", "custom-post-type-ui"))'' cannot be parsed correct.
HTML code '$'$ui->get_select_input(["namearray" => "cptui_selected_post_type", "name" => "post_type", "selections" => $select, "wrap" => false])'' cannot be parsed correct.
HTML code '$'$ui->get_fieldset_end()$ui->get_td_end()$ui->get_tr_end()'' cannot be parsed correct.
HTML code '$'$ui->get_tr_start()$ui->get_th_start()<label for="custom_supports">Custom "Supports"</label>'' cannot be parsed correct.
HTML code '$'$ui->get_p(sprintf(esc_html__("Use this input to register custom "supports" values, separated by commas. Learn about this at %s", "custom-post-type-ui"), "<a href="http://docs.pluginize.com/article/28-third-party-support-upon-registration" target="_blank" rel="noopener">" . esc_html__("Custom "Supports"", "custom-post-type-ui") . "</a>"))'' cannot be parsed correct.
HTML code '$'$ui->get_th_end()$ui->get_td_start()'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_custom_post_type", "name" => "custom_supports", "textvalue" => isset($current["custom_supports"])esc_attr($current["custom_supports"])"", "helptext" => esc_attr__("Provide custom support slugs here.", "custom-post-type-ui"), "helptext_after" => true, "wrap" => false])'' cannot be parsed correct.
HTML code '$'$ui->get_td_end()$ui->get_tr_end()'' cannot be parsed correct.
HTML code '$'$ui->get_tr_start()$ui->get_th_start()Taxonomies'' cannot be parsed correct.
HTML code '$'$ui->get_p(esc_html__("Add support for available registered taxonomies.", "custom-post-type-ui"))'' cannot be parsed correct.
HTML code '$'$ui->get_th_end()$ui->get_td_start()$ui->get_fieldset_start()'' cannot be parsed correct.
HTML code '$'$ui->get_legend_start()Taxonomy options$ui->get_legend_end()'' cannot be parsed correct.
HTML code '$'cptui-$tab'' cannot be parsed correct.
HTML code '$'cptui_get_post_form_action($ui)'' cannot be parsed correct.
HTML code '$'apply_filters("cptui_taxonomy_submit_select", esc_attr__("Select", "custom-post-type-ui"))'' cannot be parsed correct.
HTML code '$'cptui_get_post_form_action($ui)'' cannot be parsed correct.
HTML code '$'$ui->get_tr_start()$ui->get_th_start()'' cannot be parsed correct.
HTML code '$'$ui->get_label("name", esc_html__("Taxonomy Slug", "custom-post-type-ui"))$ui->get_required_span()'' cannot be parsed correct.
HTML code '$'<p id="slugchanged" class="hidemessage">Slug has changed<span class="dashicons dashicons-warning"></span></p>'' cannot be parsed correct.
HTML code '$'<p id="slugexists" class="hidemessage">Slug already exists<span class="dashicons dashicons-warning"></span></p>'' cannot be parsed correct.
HTML code '$'$ui->get_th_end()$ui->get_td_start()'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_custom_tax", "name" => "name", "textvalue" => isset($current["name"])esc_attr($current["name"])"", "maxlength" => "32", "helptext" => esc_attr__("The taxonomy name/slug. Used for various queries for taxonomy content.", "custom-post-type-ui"), "required" => true, "placeholder" => false, "wrap" => false])'' cannot be parsed correct.
HTML code '$'apply_filters("cptui_taxonomy_submit_delete", __("Delete Taxonomy", "custom-post-type-ui"))'' cannot be parsed correct.
HTML code '$'apply_filters("cptui_taxonomy_submit_add", esc_attr__("Add Taxonomy", "custom-post-type-ui"))'' cannot be parsed correct.
HTML code '$'null_name'' cannot be parsed correct.
HTML code '$'$tab'' cannot be parsed correct.
HTML code '$'$ui->get_textarea_input(["namearray" => "cpt_custom_tax", "name" => "description", "rows" => "4", "cols" => "40", "textvalue" => isset($current["description"])esc_textarea($current["description"])"", "labeltext" => esc_html__("Description", "custom-post-type-ui"), "helptext" => esc_attr__("Describe what your taxonomy is used for.", "custom-post-type-ui")])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_tax_labels", "name" => "menu_name", "textvalue" => isset($current["labels"]["menu_name"])esc_attr($current["labels"]["menu_name"])"", "aftertext" => esc_attr__("(e.g. Actors)", "custom-post-type-ui"), "labeltext" => esc_html__("Menu Name", "custom-post-type-ui"), "helptext" => esc_html__("Custom admin menu name for your taxonomy.", "custom-post-type-ui"), "data" => ["label" => "item", "plurality" => "plural"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_tax_labels", "name" => "all_items", "textvalue" => isset($current["labels"]["all_items"])esc_attr($current["labels"]["all_items"])"", "aftertext" => esc_attr__("(e.g. All Actors)", "custom-post-type-ui"), "labeltext" => esc_html__("All Items", "custom-post-type-ui"), "helptext" => esc_html__("Used as tab text when showing all terms for hierarchical taxonomy while editing post.", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("All %s", "custom-post-type-ui"), "item"), "plurality" => "plural"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_tax_labels", "name" => "edit_item", "textvalue" => isset($current["labels"]["edit_item"])esc_attr($current["labels"]["edit_item"])"", "aftertext" => esc_attr__("(e.g. Edit Actor)", "custom-post-type-ui"), "labeltext" => esc_html__("Edit Item", "custom-post-type-ui"), "helptext" => esc_html__("Used at the top of the term editor screen for an existing taxonomy term.", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("Edit %s", "custom-post-type-ui"), "item"), "plurality" => "singular"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_tax_labels", "name" => "view_item", "textvalue" => isset($current["labels"]["view_item"])esc_attr($current["labels"]["view_item"])"", "aftertext" => esc_attr__("(e.g. View Actor)", "custom-post-type-ui"), "labeltext" => esc_html__("View Item", "custom-post-type-ui"), "helptext" => esc_html__("Used in the admin bar when viewing editor screen for an existing taxonomy term.", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("View %s", "custom-post-type-ui"), "item"), "plurality" => "singular"]])'' cannot be parsed correct.
HTML code '$'$ui->get_check_input(["checkvalue" => "update_taxonomy", "checked" => "false", "name" => "update_taxonomy", "namearray" => "update_taxonomy", "labeltext" => esc_html__("Migrate terms to newly renamed taxonomy?", "custom-post-type-ui"), "helptext" => "", "default" => false, "wrap" => false])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_custom_tax", "name" => "label", "textvalue" => isset($current["label"])esc_attr($current["label"])"", "aftertext" => esc_html__("(e.g. Actors)", "custom-post-type-ui"), "labeltext" => esc_html__("Plural Label", "custom-post-type-ui"), "helptext" => esc_attr__("Used for the taxonomy admin menu item.", "custom-post-type-ui"), "required" => true])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_custom_tax", "name" => "singular_label", "textvalue" => isset($current["singular_label"])esc_attr($current["singular_label"])"", "aftertext" => esc_html__("(e.g. Actor)", "custom-post-type-ui"), "labeltext" => esc_html__("Singular Label", "custom-post-type-ui"), "helptext" => esc_attr__("Used when a singular label is needed.", "custom-post-type-ui"), "required" => true])'' cannot be parsed correct.
HTML code '$'$ui->get_td_end()$ui->get_tr_end()'' cannot be parsed correct.
HTML code '$'$ui->get_tr_end()'' cannot be parsed correct.
HTML code '$'$ui->get_th_start()Auto-populate labels$ui->get_th_end()'' cannot be parsed correct.
HTML code '$'$ui->get_td_start()'' cannot be parsed correct.
HTML code '$'$link_text'' cannot be parsed correct.
HTML code '$'$ui->get_td_end()$ui->get_tr_end()'' cannot be parsed correct.
HTML code '$'$ui->get_tr_start()$ui->get_th_start()Attach to Post Type$ui->get_required_span()'' cannot be parsed correct.
HTML code '$'$ui->get_p(esc_html__("Add support for available registered post types. At least one is required. Only public post types listed by default.", "custom-post-type-ui"))'' cannot be parsed correct.
HTML code '$'$ui->get_th_end()$ui->get_td_start()$ui->get_fieldset_start()'' cannot be parsed correct.
HTML code '$'$ui->get_legend_start()Post type options$ui->get_legend_end()'' cannot be parsed correct.
HTML code '$'$ui->get_check_input(["checkvalue" => $post_type->name, "checked" => !empty($current["object_types"]) && is_array($current["object_types"]) && in_array($post_type->name, $current["object_types"], true)"true""false", "name" => $post_type->name, "namearray" => "cpt_post_types", "textvalue" => $post_type->name, "labeltext" => $post_type->label" "$core_label, "wrap" => false])'' cannot be parsed correct.
HTML code '$'$ui->get_fieldset_end()$ui->get_td_end()$ui->get_tr_end()'' cannot be parsed correct.
HTML code '$'apply_filters("cptui_taxonomy_submit_edit", esc_attr__("Save Taxonomy", "custom-post-type-ui"))'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_tax_labels", "name" => "separate_items_with_commas", "textvalue" => isset($current["labels"]["separate_items_with_commas"])esc_attr($current["labels"]["separate_items_with_commas"])null, "aftertext" => esc_attr__("(e.g. Separate Actors with commas)", "custom-post-type-ui"), "labeltext" => esc_html__("Separate Items with Commas", "custom-post-type-ui"), "helptext" => esc_html__("Custom taxonomy label. Used in the admin menu for displaying taxonomies.", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("Separate %s with commas", "custom-post-type-ui"), "item"), "plurality" => "plural"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_tax_labels", "name" => "add_or_remove_items", "textvalue" => isset($current["labels"]["add_or_remove_items"])esc_attr($current["labels"]["add_or_remove_items"])null, "aftertext" => esc_attr__("(e.g. Add or remove Actors)", "custom-post-type-ui"), "labeltext" => esc_html__("Add or Remove Items", "custom-post-type-ui"), "helptext" => esc_html__("Custom taxonomy label. Used in the admin menu for displaying taxonomies.", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("Add or remove %s", "custom-post-type-ui"), "item"), "plurality" => "plural"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_tax_labels", "name" => "choose_from_most_used", "textvalue" => isset($current["labels"]["choose_from_most_used"])esc_attr($current["labels"]["choose_from_most_used"])null, "aftertext" => esc_attr__("(e.g. Choose from the most used Actors)", "custom-post-type-ui"), "labeltext" => esc_html__("Choose From Most Used", "custom-post-type-ui"), "helptext" => esc_attr__("The text displayed via clicking âChoose from the most used itemsâ in the taxonomy meta box when no items are available.", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("Choose from the most used %s", "custom-post-type-ui"), "item"), "plurality" => "plural"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_tax_labels", "name" => "not_found", "textvalue" => isset($current["labels"]["not_found"])esc_attr($current["labels"]["not_found"])null, "aftertext" => esc_attr__("(e.g. No Actors found)", "custom-post-type-ui"), "labeltext" => esc_html__("Not found", "custom-post-type-ui"), "helptext" => esc_html__("Used when indicating that there are no terms in the given taxonomy within the meta box and taxonomy list table.", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("No %s found", "custom-post-type-ui"), "item"), "plurality" => "plural"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_tax_labels", "name" => "no_terms", "textvalue" => isset($current["labels"]["no_terms"])esc_attr($current["labels"]["no_terms"])null, "aftertext" => esc_html__("(e.g. No actors)", "custom-post-type-ui"), "labeltext" => esc_html__("No terms", "custom-post-type-ui"), "helptext" => esc_attr__("Used when indicating that there are no terms in the given taxonomy associated with an object.", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("No %s", "custom-post-type-ui"), "item"), "plurality" => "plural"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_tax_labels", "name" => "items_list_navigation", "textvalue" => isset($current["labels"]["items_list_navigation"])esc_attr($current["labels"]["items_list_navigation"])null, "aftertext" => esc_html__("(e.g. Actors list navigation)", "custom-post-type-ui"), "labeltext" => esc_html__("Items List Navigation", "custom-post-type-ui"), "helptext" => esc_attr__("Screen reader text for the pagination heading on the term listing screen.", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("%s list navigation", "custom-post-type-ui"), "item"), "plurality" => "plural"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_tax_labels", "name" => "update_item", "textvalue" => isset($current["labels"]["update_item"])esc_attr($current["labels"]["update_item"])"", "aftertext" => esc_attr__("(e.g. Update Actor Name)", "custom-post-type-ui"), "labeltext" => esc_html__("Update Item Name", "custom-post-type-ui"), "helptext" => esc_html__("Custom taxonomy label. Used in the admin menu for displaying taxonomies.", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("Update %s name", "custom-post-type-ui"), "item"), "plurality" => "singular"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_tax_labels", "name" => "add_new_item", "textvalue" => isset($current["labels"]["add_new_item"])esc_attr($current["labels"]["add_new_item"])"", "aftertext" => esc_attr__("(e.g. Add New Actor)", "custom-post-type-ui"), "labeltext" => esc_html__("Add New Item", "custom-post-type-ui"), "helptext" => esc_html__("Used at the top of the term editor screen and button text for a new taxonomy term.", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("Add new %s", "custom-post-type-ui"), "item"), "plurality" => "singular"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_tax_labels", "name" => "new_item_name", "textvalue" => isset($current["labels"]["new_item_name"])esc_attr($current["labels"]["new_item_name"])"", "aftertext" => esc_attr__("(e.g. New Actor Name)", "custom-post-type-ui"), "labeltext" => esc_html__("New Item Name", "custom-post-type-ui"), "helptext" => esc_html__("Custom taxonomy label. Used in the admin menu for displaying taxonomies.", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("New %s name", "custom-post-type-ui"), "item"), "plurality" => "singular"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_tax_labels", "name" => "parent_item", "textvalue" => isset($current["labels"]["parent_item"])esc_attr($current["labels"]["parent_item"])"", "aftertext" => esc_attr__("(e.g. Parent Actor)", "custom-post-type-ui"), "labeltext" => esc_html__("Parent Item", "custom-post-type-ui"), "helptext" => esc_html__("Custom taxonomy label. Used in the admin menu for displaying taxonomies.", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("Parent %s", "custom-post-type-ui"), "item"), "plurality" => "singular"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_tax_labels", "name" => "parent_item_colon", "textvalue" => isset($current["labels"]["parent_item_colon"])esc_attr($current["labels"]["parent_item_colon"])"", "aftertext" => esc_attr__("(e.g. Parent Actor:)", "custom-post-type-ui"), "labeltext" => esc_html__("Parent Item Colon", "custom-post-type-ui"), "helptext" => esc_html__("Custom taxonomy label. Used in the admin menu for displaying taxonomies.", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("Parent %s:", "custom-post-type-ui"), "item"), "plurality" => "singular"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_tax_labels", "name" => "search_items", "textvalue" => isset($current["labels"]["search_items"])esc_attr($current["labels"]["search_items"])"", "aftertext" => esc_attr__("(e.g. Search Actors)", "custom-post-type-ui"), "labeltext" => esc_html__("Search Items", "custom-post-type-ui"), "helptext" => esc_html__("Custom taxonomy label. Used in the admin menu for displaying taxonomies.", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("Search %s", "custom-post-type-ui"), "item"), "plurality" => "plural"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_tax_labels", "name" => "popular_items", "textvalue" => isset($current["labels"]["popular_items"])esc_attr($current["labels"]["popular_items"])null, "aftertext" => esc_attr__("(e.g. Popular Actors)", "custom-post-type-ui"), "labeltext" => esc_html__("Popular Items", "custom-post-type-ui"), "helptext" => esc_html__("Custom taxonomy label. Used in the admin menu for displaying taxonomies.", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("Popular %s", "custom-post-type-ui"), "item"), "plurality" => "plural"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_tax_labels", "name" => "items_list", "textvalue" => isset($current["labels"]["items_list"])esc_attr($current["labels"]["items_list"])null, "aftertext" => esc_html__("(e.g. Actors list)", "custom-post-type-ui"), "labeltext" => esc_html__("Items List", "custom-post-type-ui"), "helptext" => esc_attr__("Screen reader text for the items list heading on the term listing screen.", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("%s list", "custom-post-type-ui"), "item"), "plurality" => "plural"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_tax_labels", "name" => "back_to_items", "textvalue" => isset($current["labels"]["back_to_items"])esc_attr($current["labels"]["back_to_items"])null, "aftertext" => esc_html__("(e.g. &larr; Back to actors", "custom-post-type-ui"), "labeltext" => esc_html__("Back to Items", "custom-post-type-ui"), "helptext" => esc_attr__("The text displayed after a term has been updated for a link back to main index.", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("Back to %s", "custom-post-type-ui"), "item"), "plurality" => "plural"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_tax_labels", "name" => "name_field_description", "textvalue" => isset($current["labels"]["name_field_description"])esc_attr($current["labels"]["name_field_description"])null, "aftertext" => esc_html__("(e.g. "The name is how it appears on your site."", "custom-post-type-ui"), "labeltext" => esc_html__("Term Name Field Description", "custom-post-type-ui"), "helptext" => esc_attr__("Description for the Name field on Edit Tags screen.", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("The name is how it appears on your site.", "custom-post-type-ui"), "item"), "plurality" => "singular"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_tax_labels", "name" => "parent_field_description", "textvalue" => isset($current["labels"]["parent_field_description"])esc_attr($current["labels"]["parent_field_description"])null, "aftertext" => esc_html__("(e.g. "Assign a parent term to create a hierarchy. The term Jazz, for example, would be the parent of Bebop and Big Band."", "custom-post-type-ui"), "labeltext" => esc_html__("Term Parent Field Description", "custom-post-type-ui"), "helptext" => esc_attr__("Description for the Parent field on Edit Tags screen.", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("Assign a parent term to create a hierarchy. The term Jazz, for example, would be the parent of Bebop and Big Band.", "custom-post-type-ui"), "item"), "plurality" => "singular"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_tax_labels", "name" => "slug_field_description", "textvalue" => isset($current["labels"]["slug_field_description"])esc_attr($current["labels"]["slug_field_description"])null, "aftertext" => esc_html__("(e.g. "The Â« slug Â» is the URL-friendly version of the name. It is usually all lowercase and contains only letters, numbers, and hyphens."", "custom-post-type-ui"), "labeltext" => esc_html__("Term Slug Field Description", "custom-post-type-ui"), "helptext" => esc_attr__("Description for the Slug field on Edit Tags screen. ", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("The "slug" is the URL-friendly version of the name. It is usually all lowercase and contains only letters, numbers, and hyphens.", "custom-post-type-ui"), "item"), "plurality" => "singular"]])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_tax_labels", "name" => "desc_field_description", "textvalue" => isset($current["labels"]["desc_field_description"])esc_attr($current["labels"]["desc_field_description"])null, "aftertext" => esc_html__("(e.g. "The description is not prominent by default; however, some themes may show it."", "custom-post-type-ui"), "labeltext" => esc_html__("Term Description Field Description", "custom-post-type-ui"), "helptext" => esc_attr__("Description for the Description field on Edit Tags screen.", "custom-post-type-ui"), "data" => ["label" => sprintf(esc_attr__("The description is not prominent by default; however, some themes may show it.", "custom-post-type-ui"), "item"), "plurality" => "plural"]])'' cannot be parsed correct.
HTML code '$'$ui->get_select_input(["namearray" => "cpt_custom_tax", "name" => "public", "labeltext" => esc_html__("Public", "custom-post-type-ui"), "aftertext" => esc_html__("(default: true) Whether a taxonomy is intended for use publicly either via the admin interface or by front-end users.", "custom-post-type-ui"), "selections" => $select])'' cannot be parsed correct.
HTML code '$'$ui->get_select_input(["namearray" => "cpt_custom_tax", "name" => "publicly_queryable", "labeltext" => esc_html__("Public Queryable", "custom-post-type-ui"), "aftertext" => esc_html__("(default: value of "public" setting) Whether or not the taxonomy should be publicly queryable.", "custom-post-type-ui"), "selections" => $select])'' cannot be parsed correct.
HTML code '$'$ui->get_select_input(["namearray" => "cpt_custom_tax", "name" => "hierarchical", "labeltext" => esc_html__("Hierarchical", "custom-post-type-ui"), "aftertext" => esc_html__("(default: false) Whether the taxonomy can have parent-child relationships. "True" gives checkboxes, "False" gives text input.", "custom-post-type-ui"), "selections" => $select])'' cannot be parsed correct.
HTML code '$'$ui->get_select_input(["namearray" => "cpt_custom_tax", "name" => "show_ui", "labeltext" => esc_html__("Show UI", "custom-post-type-ui"), "aftertext" => esc_html__("(default: true) Whether to generate a default UI for managing this custom taxonomy.", "custom-post-type-ui"), "selections" => $select])'' cannot be parsed correct.
HTML code '$'$ui->get_select_input(["namearray" => "cpt_custom_tax", "name" => "show_in_menu", "labeltext" => esc_html__("Show in menu", "custom-post-type-ui"), "aftertext" => esc_html__("(default: value of show_ui) Whether to show the taxonomy in the admin menu.", "custom-post-type-ui"), "selections" => $select])'' cannot be parsed correct.
HTML code '$'$ui->get_select_input(["namearray" => "cpt_custom_tax", "name" => "rewrite_hierarchical", "labeltext" => esc_html__("Rewrite Hierarchical", "custom-post-type-ui"), "aftertext" => esc_html__("(default: false) Should the permastruct allow hierarchical urls.", "custom-post-type-ui"), "selections" => $select])'' cannot be parsed correct.
HTML code '$'$ui->get_select_input(["namearray" => "cpt_custom_tax", "name" => "show_admin_column", "labeltext" => esc_html__("Show Admin Column", "custom-post-type-ui"), "aftertext" => esc_html__("(default: false) Whether to allow automatic creation of taxonomy columns on associated post-types.", "custom-post-type-ui"), "selections" => $select])'' cannot be parsed correct.
HTML code '$'$ui->get_select_input(["namearray" => "cpt_custom_tax", "name" => "show_in_rest", "labeltext" => esc_html__("Show in REST API", "custom-post-type-ui"), "aftertext" => esc_html__("(Custom Post Type UI default: true) Whether to show this taxonomy data in the WP REST API.", "custom-post-type-ui"), "selections" => $select])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_custom_tax", "name" => "rest_base", "labeltext" => esc_html__("REST API base slug", "custom-post-type-ui"), "helptext" => esc_attr__("Slug to use in REST API URLs.", "custom-post-type-ui"), "textvalue" => isset($current["rest_base"])esc_attr($current["rest_base"])""])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_custom_tax", "name" => "rest_controller_class", "labeltext" => esc_html__("REST API controller class", "custom-post-type-ui"), "aftertext" => esc_attr__("(default: WP_REST_Terms_Controller) Custom controller to use instead of WP_REST_Terms_Controller.", "custom-post-type-ui"), "textvalue" => isset($current["rest_controller_class"])esc_attr($current["rest_controller_class"])""])'' cannot be parsed correct.
HTML code '$'$ui->get_select_input(["namearray" => "cpt_custom_tax", "name" => "show_tagcloud", "labeltext" => esc_html__("Show in tag cloud.", "custom-post-type-ui"), "aftertext" => esc_html__("(default: inherited from "show_ui") Whether to list the taxonomy in the Tag Cloud Widget controls.", "custom-post-type-ui"), "selections" => $select])'' cannot be parsed correct.
HTML code '$'$ui->get_select_input(["namearray" => "cpt_custom_tax", "name" => "show_in_nav_menus", "labeltext" => esc_html__("Show in nav menus", "custom-post-type-ui"), "aftertext" => esc_html__("(default: value of public) Whether to make the taxonomy available for selection in navigation menus.", "custom-post-type-ui"), "selections" => $select])'' cannot be parsed correct.
HTML code '$'$ui->get_select_input(["namearray" => "cpt_custom_tax", "name" => "query_var", "labeltext" => esc_html__("Query Var", "custom-post-type-ui"), "aftertext" => esc_html__("(default: true) Sets the query_var key for this taxonomy.", "custom-post-type-ui"), "selections" => $select])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_custom_tax", "name" => "query_var_slug", "textvalue" => isset($current["query_var_slug"])esc_attr($current["query_var_slug"])"", "aftertext" => esc_attr__("(default: taxonomy slug). Query var needs to be true to use.", "custom-post-type-ui"), "labeltext" => esc_html__("Custom Query Var String", "custom-post-type-ui"), "helptext" => esc_html__("Sets a custom query_var slug for this taxonomy.", "custom-post-type-ui")])'' cannot be parsed correct.
HTML code '$'$ui->get_select_input(["namearray" => "cpt_custom_tax", "name" => "rewrite", "labeltext" => esc_html__("Rewrite", "custom-post-type-ui"), "aftertext" => esc_html__("(default: true) Whether or not WordPress should use rewrites for this taxonomy.", "custom-post-type-ui"), "selections" => $select])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_custom_tax", "name" => "rewrite_slug", "textvalue" => isset($current["rewrite_slug"])esc_attr($current["rewrite_slug"])"", "aftertext" => esc_attr__("(default: taxonomy name)", "custom-post-type-ui"), "labeltext" => esc_html__("Custom Rewrite Slug", "custom-post-type-ui"), "helptext" => esc_html__("Custom taxonomy rewrite slug.", "custom-post-type-ui")])'' cannot be parsed correct.
HTML code '$'$ui->get_select_input(["namearray" => "cpt_custom_tax", "name" => "rewrite_withfront", "labeltext" => esc_html__("Rewrite With Front", "custom-post-type-ui"), "aftertext" => esc_html__("(default: true) Should the permastruct be prepended with the front base.", "custom-post-type-ui"), "selections" => $select])'' cannot be parsed correct.
HTML code '$'$ui->get_select_input(["namearray" => "cpt_custom_tax", "name" => "show_in_quick_edit", "labeltext" => esc_html__("Show in quick/bulk edit panel.", "custom-post-type-ui"), "aftertext" => esc_html__("(default: false) Whether to show the taxonomy in the quick/bulk edit panel.", "custom-post-type-ui"), "selections" => $select])'' cannot be parsed correct.
HTML code '$'$ui->get_select_input(["namearray" => "cpt_custom_tax", "name" => "sort", "labeltext" => esc_html__("Sort", "custom-post-type-ui"), "aftertext" => esc_html__("Whether terms in this taxonomy should be sorted in the order they are provided to wp_set_object_terms()", "custom-post-type-ui"), "selections" => $select])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_custom_tax", "name" => "meta_box_cb", "textvalue" => isset($current["meta_box_cb"])esc_attr($current["meta_box_cb"])"", "labeltext" => esc_html__("Metabox callback", "custom-post-type-ui"), "helptext" => esc_html__("Sets a callback function name for the meta box display. Hierarchical default: post_categories_meta_box, non-hierarchical default: post_tags_meta_box. To remove the metabox completely, use "false".", "custom-post-type-ui")])'' cannot be parsed correct.
HTML code '$'$ui->get_text_input(["namearray" => "cpt_custom_tax", "name" => "default_term", "textvalue" => isset($current["default_term"])esc_attr($current["default_term"])"", "labeltext" => esc_html__("Default Term", "custom-post-type-ui"), "helptext" => esc_html__("Set a default term for the taxonomy. Able to set a name, slug, and description. Only a name is required if setting a default, others are optional. Set values in the following order, separated by comma. Example: name, slug, description", "custom-post-type-ui")])'' cannot be parsed correct.
HTML code '$'apply_filters("cptui_taxonomy_submit_edit", esc_attr__("Save Taxonomy", "custom-post-type-ui"))'' cannot be parsed correct.
HTML code '$'apply_filters("cptui_taxonomy_submit_delete", __("Delete Taxonomy", "custom-post-type-ui"))'' cannot be parsed correct.
HTML code '$'apply_filters("cptui_taxonomy_submit_add", esc_attr__("Add Taxonomy", "custom-post-type-ui"))'' cannot be parsed correct.
HTML code '$'null_name'' cannot be parsed correct.
HTML code '$'$tab'' cannot be parsed correct.
HTML code '$'$ui->get_select_input(["namearray" => "cptui_selected_taxonomy", "name" => "taxonomy", "selections" => $select, "wrap" => false])'' cannot be parsed correct.
HTML code '$'cptui_register_my_taxes_str_replace("-", "_", esc_html($cptui_taxonomies[$key]["name"]))'' cannot be parsed correct.
HTML code '$'cptui_get_single_taxonomy_registery($tax)'' cannot be parsed correct.
HTML code '$'cptui_register_my_taxes'' cannot be parsed correct.
HTML code '$'disp_boolean($taxonomy["rewrite"])'' cannot be parsed correct.
HTML code '$'$taxonomy_show_admin_column'' cannot be parsed correct.
HTML code '$'$show_in_rest'' cannot be parsed correct.
HTML code '$'$show_tagcloud'' cannot be parsed correct.
HTML code '$'$rest_base'' cannot be parsed correct.
HTML code '$'$rest_controller_class'' cannot be parsed correct.
HTML code '$'$show_in_quick_edit'' cannot be parsed correct.
HTML code '$'disp_boolean($taxonomy["sort"])'' cannot be parsed correct.
HTML code '$'disp_boolean($taxonomy["show_in_graphql"])'' cannot be parsed correct.
HTML code '$'$taxonomy_graphql_single_name'' cannot be parsed correct.
HTML code '$'$taxonomy_graphql_plural_name'' cannot be parsed correct.
HTML code '$'disp_boolean(false)'' cannot be parsed correct.
HTML code '$'$meta_box_cb'' cannot be parsed correct.
HTML code '$'[]'' cannot be parsed correct.
HTML code '$'$taxonomy_name'' cannot be parsed correct.
HTML code '$'\'\''' cannot be parsed correct.
HTML code '$'cptui_register_my_cpts'' cannot be parsed correct.
HTML code '$'cptui_get_single_post_type_registery($type)'' cannot be parsed correct.
HTML code '$'cptui_register_my_cpts'' cannot be parsed correct.
HTML code '$'$taxonomy_label'' cannot be parsed correct.
HTML code '$'$taxonomy_label'' cannot be parsed correct.
HTML code '$'custom-post-type-ui'' cannot be parsed correct.
HTML code '$'$taxonomy_singular_label'' cannot be parsed correct.
HTML code '$'$my_theme->get("TextDomain")'' cannot be parsed correct.
HTML code '$'		$key" => __( "$label", "$my_theme->get("TextDomain")" )
'' cannot be parsed correct.
HTML code '$'$taxonomy_label'' cannot be parsed correct.
HTML code '$'custom-post-type-ui'' cannot be parsed correct.
HTML code '$'$public'' cannot be parsed correct.
HTML code '$'$publicly_queryable'' cannot be parsed correct.
HTML code '$'$taxonomy_hierarchical'' cannot be parsed correct.
HTML code '$'disp_boolean($taxonomy["show_ui"])'' cannot be parsed correct.
HTML code '$'disp_boolean($taxonomy["show_ui"])'' cannot be parsed correct.
HTML code '$'$public'' cannot be parsed correct.
HTML code '$'disp_boolean($taxonomy["query_var"])'' cannot be parsed correct.
HTML code '$'$post_type_label'' cannot be parsed correct.
HTML code '$'$post_type_label'' cannot be parsed correct.
HTML code '$'$my_theme->get("TextDomain")'' cannot be parsed correct.
HTML code '$'$post_type_singular_label'' cannot be parsed correct.
HTML code '$'custom-post-type-ui'' cannot be parsed correct.
HTML code '$'		parent_item_colon" => __( "$label", "$my_theme->get("TextDomain")" )
'' cannot be parsed correct.
HTML code '$'		$key" => __( "$label", "custom-post-type-ui" )
'' cannot be parsed correct.
HTML code '$'$post_type_label'' cannot be parsed correct.
HTML code '$'custom-post-type-ui'' cannot be parsed correct.
HTML code '$'$post_type_description'' cannot be parsed correct.
HTML code '$'disp_boolean($post_type["public"])'' cannot be parsed correct.
HTML code '$'disp_boolean($post_type["publicly_queryable"])'' cannot be parsed correct.
HTML code '$'disp_boolean($post_type["show_ui"])'' cannot be parsed correct.
HTML code '$'disp_boolean($post_type["show_in_rest"])'' cannot be parsed correct.
HTML code '$'$post_type_rest_base'' cannot be parsed correct.
HTML code '$'$rest_controller_class'' cannot be parsed correct.
HTML code '$'$post_type_has_archive_string'' cannot be parsed correct.
HTML code '$'disp_boolean($post_type["show_in_menu"])'' cannot be parsed correct.
HTML code '$'$public'' cannot be parsed correct.
HTML code '$'disp_boolean($post_type["delete_with_user"])'' cannot be parsed correct.
HTML code '$'disp_boolean($post_type["exclude_from_search"])'' cannot be parsed correct.
HTML code '$'"post"'' cannot be parsed correct.
HTML code '$'disp_boolean($post_type["map_meta_cap"])'' cannot be parsed correct.
HTML code '$'disp_boolean($post_type["hierarchical"])'' cannot be parsed correct.
HTML code '$'disp_boolean($post_type["can_export"])'' cannot be parsed correct.
HTML code '$'disp_boolean($post_type["rewrite"])'' cannot be parsed correct.
HTML code '$'$post_type_query_var'' cannot be parsed correct.
HTML code '$'$post_type_menu_position'' cannot be parsed correct.
HTML code '$'$post_type_menu_icon'' cannot be parsed correct.
HTML code '$'disp_boolean($yarpp)'' cannot be parsed correct.
HTML code '$'disp_boolean($post_type["show_in_graphql"])'' cannot be parsed correct.
HTML code '$'$post_type_graphql_single_name'' cannot be parsed correct.
HTML code '$'$post_type_graphql_plural_name'' cannot be parsed correct.
HTML code '$'disp_boolean(false)'' cannot be parsed correct.
HTML code '$'$post_type_name'' cannot be parsed correct.
HTML code '$'json_encode($cptui_post_types)'' cannot be parsed correct.
HTML code '$'No taxonomies registered yet.'' cannot be parsed correct.
HTML code '$'$post_type_name'' cannot be parsed correct.
HTML code '$'$post_type_name'' cannot be parsed correct.
HTML code '$'$post_type_name'' cannot be parsed correct.
HTML code '$'$post_type_name'' cannot be parsed correct.
HTML code '$'$taxonomy_name'' cannot be parsed correct.
HTML code '$'$taxonomy_name'' cannot be parsed correct.
HTML code '$'$taxonomy_name'' cannot be parsed correct.
HTML code '$'$taxonomy_name'' cannot be parsed correct.
HTML code '$'<p><label for="cptui_debug_info_email">Please provide an email address to send debug information to: </label><input type="email" id="cptui_debug_info_email" name="cptui_debug_info_email" value="" /></p>'' cannot be parsed correct.
HTML code '$'<p><input type="submit" class="button-primary" name="cptui_send_debug_email" value="apply_filters("cptui_debug_email_submit_button", __("Send debug info", "custom-post-type-ui"))" /></p'' cannot be parsed correct.
HTML code '$'cptui_get_post_form_action($ui)'' cannot be parsed correct.
HTML code '$'cptui_admin_notices_helper(sprintf(esc_html__("%s has been successfully added", "custom-post-type-ui"), cptui_get_object_from_post_global()))'' cannot be parsed correct.
HTML code '$'cptui_admin_notices_helper(sprintf(esc_html__("%s has failed to be added", "custom-post-type-ui"), cptui_get_object_from_post_global()), false)'' cannot be parsed correct.
HTML code '$'cptui_admin_notices_helper(sprintf(esc_html__("%s has been successfully updated", "custom-post-type-ui"), cptui_get_object_from_post_global()))'' cannot be parsed correct.
HTML code '$'cptui_admin_notices_helper(sprintf(esc_html__("%s has failed to be updated", "custom-post-type-ui"), cptui_get_object_from_post_global()), false)'' cannot be parsed correct.
HTML code '$'cptui_admin_notices_helper(sprintf(esc_html__("%s has been successfully deleted", "custom-post-type-ui"), cptui_get_object_from_post_global()))'' cannot be parsed correct.
HTML code '$'cptui_admin_notices_helper(sprintf(esc_html__("%s has failed to be deleted", "custom-post-type-ui"), cptui_get_object_from_post_global()), false)'' cannot be parsed correct.
HTML code '$'cptui_admin_notices_helper(esc_html__("Successfully imported data.", "custom-post-type-ui"))'' cannot be parsed correct.
HTML code '$'cptui_admin_notices_helper(esc_html__("Invalid data provided", "custom-post-type-ui"), false)'' cannot be parsed correct.
HTML code '$'cptui_admin_notices_helper(esc_html__("Nonce failed verification", "custom-post-type-ui"), false)'' cannot be parsed correct.
HTML code '$'cptui_admin_notices_helper(apply_filters("cptui_custom_error_message", ""), false)'' cannot be parsed correct.
HTML code '$'
		SITE_URL:                 '' cannot be parsed correct.
HTML code '$'		Page On Front:            '' cannot be parsed correct.
HTML code '$'		Page For Posts:           '' cannot be parsed correct.
HTML code '$'
		WordPress Memory Limit:   '' cannot be parsed correct.
HTML code '$'
'' cannot be parsed correct.
HTML code '$'
'' cannot be parsed correct.
HTML code '$'		'' cannot be parsed correct.
HTML code '$'
'' cannot be parsed correct.
HTML code '$'
'' cannot be parsed correct.
HTML code '$'

'' cannot be parsed correct.
HTML code '$'
'' cannot be parsed correct.
HTML code '$'
'' cannot be parsed correct.
HTML code '$'<div class="wdspromos-about">'' cannot be parsed correct.
HTML code '$'<br/>'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'<br/>'' cannot be parsed correct.
HTML code '$'<p class="cptui-slug-details">'' cannot be parsed correct.
HTML code '$'</p>'' cannot be parsed correct.
HTML code '$'<p>'' cannot be parsed correct.
HTML code '$'</p>'' cannot be parsed correct.
HTML code '$'<div class="cptui-spacer">'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'<br/>'' cannot be parsed correct.
HTML code '$'<br/>'' cannot be parsed correct.
HTML code '$'<div class="cptui-spacer">'' cannot be parsed correct.
HTML code '$'<div class="cptui-spacer">'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'<div class="wrap cptui-support">'' cannot be parsed correct.
HTML code '$'<p class="cptui-slug-details">'' cannot be parsed correct.
HTML code '$'</p>'' cannot be parsed correct.
HTML code '$'<p>'' cannot be parsed correct.
HTML code '$'</p>'' cannot be parsed correct.
HTML code '$'<div class="cptui-spacer">'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'<div class="wrap">'' cannot be parsed correct.
HTML code '$'</div><!-- End .wrap -->'' cannot be parsed correct.
HTML code '$'<form id="cptui_debug_info" method="post">'' cannot be parsed correct.
HTML code '$'</form>'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'<div class="wdspromos">'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:46.338259.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.042654.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 115 do_action/apply_filters calls and 70 add_action/add_filter calls. Now connecting do-add pairs.
Added 34 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:06.259419.

34 PHP_REACHES edges created
34 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FileProDetector
### Start running FrontBaseDetector
### Finish running DbaseDetector
### Start running HashDetector
### Finish running DbplusDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running FrontBaseDetector
### Start running IngresDetector
### Finish running FirebirdInterBaseDetector
### Start running jQueryRequestDetector
### Finish running InformixDetector
### Start running maxdbDetector
### Finish running IngresDetector
### Start running MongoDbDetector
### Finish running IBMDb2Detector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running MsqlDetector
### Start running MySQLDetector
### Finish running MongoDbDetector
### Start running MySQLiDetector
### Finish running ArrayElementDetector
### Start running Oci8Detector
### Finish running MySQLDetector
### Start running OpenSSLDetector
### Finish running Oci8Detector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running HashDetector
### Start running PhpCurlDetector
### Finish running jQueryRequestDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PhpCurlDetector
### Start running PHPRetrievalDetector
### Finish running PasswordHashingDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPIncludedDetector
### Start running PhpVarDetector
### Finish running PhpVarDetector
### Start running PostgreSQLDetector
### Finish running OpenSSLDetector
### Start running PropertyDetector
### Finish running PHPRetrievalDetector
### Start running Sqlite3Detector
### Finish running PostgreSQLDetector
### Start running SqliteDetector
### Finish running PHPStorageDetector
### Start running SqlServerDetector
### Finish running SqliteDetector
### Start running SybaseDetector
### Finish running Sqlite3Detector
### Start running TokyoTyrantDetector
### Finish running PropertyDetector
### Start running UserInputDetector
### Finish running SybaseDetector
### Start running VariableDetector
### Finish running TokyoTyrantDetector
### Start running WordpressHashingFnDetector
### Finish running SqlServerDetector
### Start running WordPressRemoteDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRetrievalDetector
### Finish running WordPressRemoteDetector
### Start running WordPressStorageDetector
### Finish running UserInputDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running VariableDetector
### Start running GenericEncryptionDetector
### Finish running maxdbDetector
### Start running DeletionDetector
### Finish running GenericEncryptionDetector
### Start running UninstallDetector
### Finish running MySQLiDetector
### Finish running GenericDatabaseUsageDetector
### Finish running UninstallDetector
### Finish running WordPressRetrievalDetector
### Finish running WordPressStorageDetector
### Finish running DeletionDetector
### Finished running detectors
inc/tools.php:945
  - Request variable '$_POST["cptui_debug_info_email"]' of personal types {'email'} is found.
  - Data types: email
inc/tools.php:949
  - Request variable '$_POST["cptui_debug_info_email"]' of personal types {'email'} is found.
  - Data types: email 

inc/wp-cli.php:53
  - RETRIEVAL call to file_get_contents($this->assoc_args["data-path"]).
  - Data types: file 

inc/wp-cli.php:110
  - STORAGE call to file_put_contents($this->assoc_args["dest-path"], $content).
  - Data types: file 

inc/tools.php:948
  - variable '$email_args' of personal types {'email'} is found.
  - Data types: email
inc/tools.php:949
  - variable '$email_args' of personal types {'email'} is found.
  - Data types: email
inc/tools.php:950
  - variable '$email_args' of personal types {'email'} is found.
  - Data types: email 

classes/class.cptui_debug_info.php:60
  - RETRIEVAL call to get_option("permalink_structure") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
classes/class.cptui_debug_info.php:69
  - RETRIEVAL call to get_option("show_on_front") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
classes/class.cptui_debug_info.php:70
  - RETRIEVAL call to get_option("page_on_front") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
classes/class.cptui_debug_info.php:72
  - RETRIEVAL call to get_option("page_for_posts") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
classes/class.cptui_debug_info.php:95
  - RETRIEVAL call to get_option("active_plugins", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
custom-post-type-ui.php:73
  - RETRIEVAL call to get_transient("cptui_activation_redirect") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
custom-post-type-ui.php:257
  - RETRIEVAL call to get_option("cptui_post_types", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
custom-post-type-ui.php:553
  - RETRIEVAL call to get_option("cptui_taxonomies", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
custom-post-type-ui.php:843
  - RETRIEVAL call to get_option("cptui_post_types") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
custom-post-type-ui.php:843
  - RETRIEVAL call to get_option("cpt_custom_post_types") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
custom-post-type-ui.php:861
  - RETRIEVAL call to get_option("cptui_taxonomies") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
custom-post-type-ui.php:861
  - RETRIEVAL call to get_option("cpt_custom_tax_types") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/utility.php:156
  - RETRIEVAL call to get_transient("cptui_flush_rewrite_rules") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
inc/utility.php:188
  - RETRIEVAL call to get_option("cptui_post_types") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/utility.php:203
  - RETRIEVAL call to get_option("cptui_taxonomies") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/utility.php:262
  - RETRIEVAL call to get_option("cptui_post_types", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/utility.php:273
  - RETRIEVAL call to get_option("cptui_taxonomies", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/utility.php:840
  - RETRIEVAL call to get_option("cptui_new_install", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/utility.php:876
  - RETRIEVAL call to get_option("cptui_post_types", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/utility.php:893
  - RETRIEVAL call to get_option("cptui_taxonomies", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option 

custom-post-type-ui.php:62
  - STORAGE call to set_transient("cptui_activation_redirect", true, 30) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
custom-post-type-ui.php:77
  - STORAGE call to delete_transient("cptui_activation_redirect") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).
  - Data types: site
custom-post-type-ui.php:858
  - STORAGE call to update_option("cptui_post_types", $new_post_types) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
custom-post-type-ui.php:874
  - STORAGE call to update_option("cptui_taxonomies", $new_taxonomies) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/post-types.php:1606
  - STORAGE call to update_option("cptui_post_types", $post_types) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/post-types.php:1620
  - STORAGE call to set_transient("cptui_flush_rewrite_rules", "true", 5 * 60) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
inc/post-types.php:1811
  - STORAGE call to update_option("cptui_post_types", $post_types) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/post-types.php:1824
  - STORAGE call to set_transient("cptui_flush_rewrite_rules", "true", 5 * 60) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
inc/taxonomies.php:1401
  - STORAGE call to update_option("cptui_taxonomies", $taxonomies) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/taxonomies.php:1404
  - STORAGE call to delete_option("default_term_"$data["name"]) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/taxonomies.php:1416
  - STORAGE call to set_transient("cptui_flush_rewrite_rules", "true", 5 * 60) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
inc/taxonomies.php:1451
  - STORAGE call to delete_option("default_term_"$data["cpt_custom_tax"]["name"]) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/taxonomies.php:1587
  - STORAGE call to update_option("cptui_taxonomies", $taxonomies) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/taxonomies.php:1600
  - STORAGE call to set_transient("cptui_flush_rewrite_rules", "true", 5 * 60) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
inc/tools.php:683
  - STORAGE call to delete_option("cptui_post_types") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/tools.php:691
  - STORAGE call to delete_option("cptui_post_types") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/tools.php:704
  - STORAGE call to update_option("cptui_post_types", $settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/tools.php:708
  - STORAGE call to set_transient("cptui_flush_rewrite_rules", "true", 5 * 60) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
inc/tools.php:732
  - STORAGE call to delete_option("cptui_taxonomies") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/tools.php:740
  - STORAGE call to delete_option("cptui_taxonomies") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/tools.php:752
  - STORAGE call to update_option("cptui_taxonomies", $settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/tools.php:756
  - STORAGE call to set_transient("cptui_flush_rewrite_rules", "true", 5 * 60) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
inc/utility.php:159
  - STORAGE call to delete_transient("cptui_flush_rewrite_rules") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).
  - Data types: site
inc/utility.php:864
  - STORAGE call to update_option("cptui_new_install", "false") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option 

inc/taxonomies.php:1404
  - DELETION call to delete_option("default_term_"$data["name"]) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/taxonomies.php:1451
  - DELETION call to delete_option("default_term_"$data["cpt_custom_tax"]["name"]) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/tools.php:683
  - DELETION call to delete_option("cptui_post_types") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/tools.php:691
  - DELETION call to delete_option("cptui_post_types") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/tools.php:732
  - DELETION call to delete_option("cptui_taxonomies") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/tools.php:740
  - DELETION call to delete_option("cptui_taxonomies") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

By data type:
email
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
file
	PHPRetrievalDetector.file_get_contents($this->assoc_args["data-path"]) - {'file'}
	PHPStorageDetector.file_put_contents($this->assoc_args["dest-path"], $content) - {'file'}
option
	WordPressStorageDetector.delete_option("cptui_taxonomies") - {'option'}
	WordPressRetrievalDetector.get_option("cptui_post_types", []) - {'option'}
	WordPressStorageDetector.update_option("cptui_taxonomies", $taxonomies) - {'option'}
	DeletionDetector.delete_option("default_term_"$data["name"]) - {'option'}
	WordPressRetrievalDetector.get_option("cptui_taxonomies", []) - {'option'}
	WordPressStorageDetector.delete_option("default_term_"$data["cpt_custom_tax"]["name"]) - {'option'}
	WordPressRetrievalDetector.get_option("cptui_taxonomies", []) - {'option'}
	WordPressRetrievalDetector.get_option("cptui_taxonomies") - {'option'}
	WordPressRetrievalDetector.get_option("cpt_custom_post_types") - {'option'}
	WordPressRetrievalDetector.get_option("cptui_new_install", "") - {'option'}
	WordPressStorageDetector.update_option("cptui_post_types", $post_types) - {'option'}
	WordPressStorageDetector.update_option("cptui_taxonomies", $settings) - {'option'}
	WordPressStorageDetector.update_option("cptui_post_types", $new_post_types) - {'option'}
	DeletionDetector.delete_option("cptui_taxonomies") - {'option'}
	WordPressRetrievalDetector.get_option("cptui_post_types") - {'option'}
	WordPressRetrievalDetector.get_option("permalink_structure") - {'option'}
	WordPressRetrievalDetector.get_option("page_on_front") - {'option'}
	WordPressRetrievalDetector.get_option("cptui_taxonomies", []) - {'option'}
	WordPressStorageDetector.delete_option("cptui_post_types") - {'option'}
	DeletionDetector.delete_option("cptui_post_types") - {'option'}
	WordPressStorageDetector.update_option("cptui_post_types", $post_types) - {'option'}
	WordPressStorageDetector.update_option("cptui_post_types", $settings) - {'option'}
	WordPressRetrievalDetector.get_option("cptui_post_types", []) - {'option'}
	WordPressStorageDetector.delete_option("default_term_"$data["name"]) - {'option'}
	WordPressRetrievalDetector.get_option("cpt_custom_tax_types") - {'option'}
	WordPressRetrievalDetector.get_option("active_plugins", []) - {'option'}
	WordPressStorageDetector.update_option("cptui_taxonomies", $taxonomies) - {'option'}
	DeletionDetector.delete_option("default_term_"$data["cpt_custom_tax"]["name"]) - {'option'}
	DeletionDetector.delete_option("cptui_taxonomies") - {'option'}
	WordPressRetrievalDetector.get_option("cptui_post_types", []) - {'option'}
	WordPressStorageDetector.delete_option("cptui_post_types") - {'option'}
	WordPressStorageDetector.update_option("cptui_new_install", "false") - {'option'}
	WordPressRetrievalDetector.get_option("page_for_posts") - {'option'}
	WordPressRetrievalDetector.get_option("cptui_taxonomies") - {'option'}
	WordPressStorageDetector.update_option("cptui_taxonomies", $new_taxonomies) - {'option'}
	DeletionDetector.delete_option("cptui_post_types") - {'option'}
	WordPressStorageDetector.delete_option("cptui_taxonomies") - {'option'}
	WordPressRetrievalDetector.get_option("cptui_post_types") - {'option'}
	WordPressRetrievalDetector.get_option("show_on_front") - {'option'}
site
	WordPressRetrievalDetector.get_transient("cptui_activation_redirect") - {'site'}
	WordPressStorageDetector.set_transient("cptui_flush_rewrite_rules", "true", 5 * 60) - {'site'}
	WordPressStorageDetector.set_transient("cptui_flush_rewrite_rules", "true", 5 * 60) - {'site'}
	WordPressRetrievalDetector.get_transient("cptui_flush_rewrite_rules") - {'site'}
	WordPressStorageDetector.delete_transient("cptui_flush_rewrite_rules") - {'site'}
	WordPressStorageDetector.set_transient("cptui_flush_rewrite_rules", "true", 5 * 60) - {'site'}
	WordPressStorageDetector.set_transient("cptui_flush_rewrite_rules", "true", 5 * 60) - {'site'}
	WordPressStorageDetector.delete_transient("cptui_activation_redirect") - {'site'}
	WordPressStorageDetector.set_transient("cptui_flush_rewrite_rules", "true", 5 * 60) - {'site'}
	WordPressStorageDetector.set_transient("cptui_activation_redirect", true, 30) - {'site'}
	WordPressStorageDetector.set_transient("cptui_flush_rewrite_rules", "true", 5 * 60) - {'site'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:13.818163.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 289 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.307088.

289 STORE_REACHES edges created
289 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 27 nodes as PERSONAL
In total, tainted 27 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
In total, tainted 0 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:01.127927.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:02:34.302134!
Request variable '$_POST["cptui_debug_info_email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["cptui_debug_info_email"]' of personal types {'email'} is found.,,None
DELETION call to delete_option("default_term_"$data["name"]) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("default_term_"$data["cpt_custom_tax"]["name"]) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("cptui_post_types") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("cptui_post_types") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("cptui_taxonomies") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("cptui_taxonomies") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
RETRIEVAL call to file_get_contents($this->assoc_args["data-path"]).,None,None
STORAGE call to file_put_contents($this->assoc_args["dest-path"], $content).,None,None
variable '$email_args' of personal types {'email'} is found.,,None
variable '$email_args' of personal types {'email'} is found.,,None
variable '$email_args' of personal types {'email'} is found.,,None
RETRIEVAL call to get_option("permalink_structure") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("show_on_front") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("page_on_front") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("page_for_posts") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("active_plugins", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("cptui_post_types", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("cptui_taxonomies", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_transient("cptui_activation_redirect") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cpt_custom_post_types") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cptui_post_types") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cpt_custom_tax_types") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cptui_taxonomies") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_transient("cptui_flush_rewrite_rules") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cptui_post_types") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cptui_taxonomies") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cptui_post_types", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("cptui_taxonomies", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("cptui_new_install", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("cptui_post_types", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("cptui_taxonomies", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
STORAGE call to set_transient("cptui_activation_redirect", true, 30) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to delete_transient("cptui_activation_redirect") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).,None,None
STORAGE call to update_option("cptui_post_types", $new_post_types) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cptui_taxonomies", $new_taxonomies) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cptui_post_types", $post_types) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to set_transient("cptui_flush_rewrite_rules", "true", 5 * 60) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to update_option("cptui_post_types", $post_types) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to set_transient("cptui_flush_rewrite_rules", "true", 5 * 60) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to update_option("cptui_taxonomies", $taxonomies) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("default_term_"$data["name"]) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to set_transient("cptui_flush_rewrite_rules", "true", 5 * 60) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to delete_option("default_term_"$data["cpt_custom_tax"]["name"]) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("cptui_taxonomies", $taxonomies) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to set_transient("cptui_flush_rewrite_rules", "true", 5 * 60) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to delete_option("cptui_post_types") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("cptui_post_types") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("cptui_post_types", $settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to set_transient("cptui_flush_rewrite_rules", "true", 5 * 60) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to delete_option("cptui_taxonomies") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("cptui_taxonomies") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("cptui_taxonomies", $settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to set_transient("cptui_flush_rewrite_rules", "true", 5 * 60) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to delete_transient("cptui_flush_rewrite_rules") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).,None,None
STORAGE call to update_option("cptui_new_install", "false") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] Storage check is NONE 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['encryption', 'third_party'] 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? True 

No findings
