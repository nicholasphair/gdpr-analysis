Timeout in resolving values
Timeout in running neo4j query
Running Main.py on astra-sites

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:03.904805.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:02.101154.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 360 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:01.706656.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 15 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:01.128812.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 4900 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:02.670611.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 409 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:03.476071.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
Added 2 PHP_REACHES edges.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.084081.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 2099 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:02:01.539476.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 37641
Added 29856 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 111962
Added 74321 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:08.357708.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/astra-sites.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/admin/bsf-analytics/class-bsf-analytics-loader.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/admin/bsf-analytics/class-bsf-analytics.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/admin/bsf-analytics/class-bsf-analytics-stats.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/classes/class-astra-sites-admin.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/assets/js/dist/main.asset.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/classes/class-astra-sites-elementor-images.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/classes/class-astra-sites-elementor-pages.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/classes/class-astra-sites-error-handler.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/classes/class-astra-sites-image-processing.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/classes/class-astra-sites-importer-log.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/classes/class-astra-sites-importer.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/classes/class-astra-sites-page.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/classes/class-astra-sites.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/classes/class-astra-sites-white-label.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/classes/class-astra-sites-wp-cli.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/classes/functions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/classes/batch-import/class-astra-sites-batch-import.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/classes/batch-import/class-astra-sites-batch-site-import-batch.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/classes/batch-import/class-astra-sites-batch-site-import.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/classes/compatibility/class-astra-sites-compatibility.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/classes/compatibility/astra-pro/class-astra-sites-compatibility-astra-pro.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/classes/compatibility/beaver-builder/class-astra-sites-compatibility-bb.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/classes/compatibility/elementor/class-astra-sites-compatibility-elementor.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/classes/compatibility/learndash/class-astra-sites-compatibility-learndash.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/classes/compatibility/sfwd-lms/class-astra-sites-compatibility-sfwd-lms.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/classes/compatibility/uabb/class-astra-sites-compatibility-uabb.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/classes/compatibility/uag/class-astra-sites-compatibility-uag.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/classes/compatibility/woocommerce/class-astra-sites-compatibility-woocommerce.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/importers/class-astra-customizer-import.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/importers/class-astra-site-options-import.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/importers/class-astra-sites-helper.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/importers/class-astra-widget-importer.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/importers/batch-processing/class-astra-sites-batch-processing-beaver-builder.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/importers/batch-processing/class-astra-sites-batch-processing-brizy.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/importers/batch-processing/class-astra-sites-batch-processing-customizer.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/importers/batch-processing/class-astra-sites-batch-processing-elementor.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/importers/batch-processing/class-astra-sites-batch-processing-gutenberg.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/importers/batch-processing/class-astra-sites-batch-processing-importer.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/importers/batch-processing/class-astra-sites-batch-processing-misc.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/importers/batch-processing/class-astra-sites-batch-processing.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/importers/batch-processing/class-astra-sites-batch-processing-widgets.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/importers/batch-processing/helpers/class-astra-sites-image-importer.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/importers/batch-processing/helpers/class-wp-async-request.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/importers/batch-processing/helpers/class-wp-background-process-astra.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/importers/batch-processing/helpers/class-wp-background-process-astra-single.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/importers/batch-processing/helpers/class-wp-background-process-astra-site-importer.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/importers/batch-processing/helpers/class-wp-background-process.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/importers/wxr-importer/class-astra-wxr-importer.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/importers/wxr-importer/class-wp-importer-logger.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/importers/wxr-importer/class-wp-importer-logger-serversentevents.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/importers/wxr-importer/class-wxr-importer.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/importers/wxr-importer/class-wxr-import-info.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/includes/admin-page.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/includes/image-templates.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/includes/templates.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/includes/white-label.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/lib/class-astra-sites-ast-block-templates.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/lib/astra-notices/class-astra-notices.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/lib/bsf-quick-links/class-bsf-quick-links.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/lib/gutenberg-templates/ast-block-templates.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/lib/gutenberg-templates/classes/class-ast-block-templates-image-importer.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/lib/gutenberg-templates/classes/class-ast-block-templates.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/lib/gutenberg-templates/classes/class-ast-block-templates-sync-library.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/lib/gutenberg-templates/classes/class-ast-block-templates-sync-library-wp-cli.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/lib/gutenberg-templates/classes/functions.php' cannot be parsed correct.
Added new directory node for: dist
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/lib/gutenberg-templates/dist/index.html
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/lib/gutenberg-templates/dist/index.html' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/lib/onboarding/class-onboarding-loader.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/lib/onboarding/class-onboarding.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/lib/onboarding/assets/dist/main.asset.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/lib/onboarding/classes/class-astra-sites-onboarding-setup.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/astra-sites/inc/lib/onboarding/classes/class-astra-sites-reporting.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:06.131793.

3 Nodes Created
360 PHP_REACHES edges created
15 REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
4900 PHP_REACHES edges created
83 CALLS edges created
5 PHP_REACHES edges created
1 CALLS edges created
1 PHP_REACHES edges created
18 CALLS edges created
1 PHP_REACHES edges created
300 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
14000 PHP_REACHES edges created
15000 PHP_REACHES edges created
16000 PHP_REACHES edges created
17000 PHP_REACHES edges created
18000 PHP_REACHES edges created
19000 PHP_REACHES edges created
20000 PHP_REACHES edges created
21000 PHP_REACHES edges created
22000 PHP_REACHES edges created
23000 PHP_REACHES edges created
24000 PHP_REACHES edges created
25000 PHP_REACHES edges created
26000 PHP_REACHES edges created
27000 PHP_REACHES edges created
28000 PHP_REACHES edges created
29000 PHP_REACHES edges created
30000 PHP_REACHES edges created
31000 PHP_REACHES edges created
31957 PHP_REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
14000 PHP_REACHES edges created
15000 PHP_REACHES edges created
16000 PHP_REACHES edges created
17000 PHP_REACHES edges created
18000 PHP_REACHES edges created
19000 PHP_REACHES edges created
20000 PHP_REACHES edges created
21000 PHP_REACHES edges created
22000 PHP_REACHES edges created
23000 PHP_REACHES edges created
24000 PHP_REACHES edges created
25000 PHP_REACHES edges created
26000 PHP_REACHES edges created
27000 PHP_REACHES edges created
28000 PHP_REACHES edges created
29000 PHP_REACHES edges created
30000 PHP_REACHES edges created
31000 PHP_REACHES edges created
32000 PHP_REACHES edges created
33000 PHP_REACHES edges created
34000 PHP_REACHES edges created
35000 PHP_REACHES edges created
36000 PHP_REACHES edges created
37000 PHP_REACHES edges created
38000 PHP_REACHES edges created
39000 PHP_REACHES edges created
40000 PHP_REACHES edges created
41000 PHP_REACHES edges created
42000 PHP_REACHES edges created
43000 PHP_REACHES edges created
44000 PHP_REACHES edges created
45000 PHP_REACHES edges created
46000 PHP_REACHES edges created
47000 PHP_REACHES edges created
48000 PHP_REACHES edges created
49000 PHP_REACHES edges created
50000 PHP_REACHES edges created
51000 PHP_REACHES edges created
52000 PHP_REACHES edges created
53000 PHP_REACHES edges created
54000 PHP_REACHES edges created
55000 PHP_REACHES edges created
56000 PHP_REACHES edges created
57000 PHP_REACHES edges created
58000 PHP_REACHES edges created
59000 PHP_REACHES edges created
60000 PHP_REACHES edges created
61000 PHP_REACHES edges created
62000 PHP_REACHES edges created
63000 PHP_REACHES edges created
64000 PHP_REACHES edges created
65000 PHP_REACHES edges created
66000 PHP_REACHES edges created
67000 PHP_REACHES edges created
68000 PHP_REACHES edges created
69000 PHP_REACHES edges created
70000 PHP_REACHES edges created
71000 PHP_REACHES edges created
72000 PHP_REACHES edges created
73000 PHP_REACHES edges created
74000 PHP_REACHES edges created
74321 PHP_REACHES edges created
2 DIRECTORY_OF edges created
1 FILE_OF edges created
111965 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 14339 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:02.199934.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 1 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:25.576937.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 4738
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 5185
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 5233
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 5282
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 5310
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 5367
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 5410
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 5453
Added 617 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:32.184700.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 919 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.288327.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:07.867197.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 4738
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 5185
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 5233
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 5282
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 5310
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 5367
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 5410
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 5453
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:10.222095.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.094914.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.026058.

1 CALLS edges created
1000 PHP_REACHES edges created
1536 PHP_REACHES edges created
1537 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 1107 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.220964.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
12 SQL operations to process.
SELECT option_value
					FROM $wpdb
					WHERE option_name
					LIKE %_transient_timeout_astra-sites-import-check%
SELECT option_value
					FROM $wpdb
					WHERE option_name
					LIKE %_transient_timeout_astra-sites-import-check%
SQL command (SELECT option_value FROM $wpdb WHERE option_name LIKE %_transient_timeout_astra-sites-import-check%) cannot be parsed correct.
SELECT post_id FROM $wpdb WHERE meta_key='_astra_sites_imported_post'
SQL command (SELECT post_id FROM $wpdb WHERE meta_key='_astra_sites_imported_post') cannot be parsed correct.
SELECT post_id FROM $wpdb WHERE meta_key='_astra_sites_imported_wp_forms'
SQL command (SELECT post_id FROM $wpdb WHERE meta_key='_astra_sites_imported_wp_forms') cannot be parsed correct.
SELECT term_id FROM $wpdb WHERE meta_key='_astra_sites_imported_term'
SQL command (SELECT term_id FROM $wpdb WHERE meta_key='_astra_sites_imported_term') cannot be parsed correct.
SELECT t.term_id, tt.taxonomy, t.slug FROM $wpdb AS t
SQL command (SELECT t.term_id, tt.taxonomy, t.slug FROM $wpdb AS t) cannot be parsed correct.
SELECT ID, guid FROM $wpdb
SQL command (SELECT ID, guid FROM $wpdb) cannot be parsed correct.
SELECT comment_ID, comment_author, comment_date FROM $wpdb
SQL command (SELECT comment_ID, comment_author, comment_date FROM $wpdb) cannot be parsed correct.

			SELECT *
			FROM $wpdb
			WHERE meta_key LIKE $this_batch_%
			ORDER BY meta_id ASC
			LIMIT 1
		

			SELECT *
			FROM $wpdb
			WHERE meta_key LIKE $this_batch_%
			ORDER BY meta_id ASC
			LIMIT 1
		
SQL command ( SELECT * FROM $wpdb WHERE meta_key LIKE $this_batch_% ORDER BY meta_id ASC LIMIT 1 ) cannot be parsed correct.
UPDATE $wpdb SET post_content = REPLACE(post_content, $from_url, %s)
UPDATE $wpdb SET post_content = REPLACE(post_content, $from_url, $to_url)
UPDATE $wpdb SET post_content = REPLACE(post_content, $from_url, $to_url)
SQL command (UPDATE $wpdb SET post_content = REPLACE(post_content, $from_url, $to_url)) cannot be parsed correct.
UPDATE $wpdb SET meta_value = REPLACE(meta_value, $from_url, %s) WHERE meta_key='enclosure'
UPDATE $wpdb SET meta_value = REPLACE(meta_value, $from_url, $to_url) WHERE meta_key='enclosure'
UPDATE $wpdb SET meta_value = REPLACE(meta_value, $from_url, $to_url) WHERE meta_key='enclosure'
SQL command (UPDATE $wpdb SET meta_value = REPLACE(meta_value, $from_url, $to_url) WHERE meta_key='enclosure') cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [8103, 30379, 30407, 30435, 55230, 54794, 54987, 41326, 35644, 39086, 54597, 54626]
Added 0 SQL nodes. 0 out of 12 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:03.255838.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'$args_label_for'' cannot be parsed correct.
HTML code '$'$args_id'' cannot be parsed correct.
HTML code '$'$args_name'' cannot be parsed correct.
HTML code '$'Allow %s products to track non-sensitive usage tracking data.'' cannot be parsed correct.
HTML code '$'<a href="%1s" target="_blank" rel="noreferrer noopener">%2s</a>'' cannot be parsed correct.
HTML code '$'<div class="astra-sites-custom-cta-wrap">'' cannot be parsed correct.
HTML code '$'$upload_dir_path'' cannot be parsed correct.
HTML code '$'str_replace($upload_dir["path"], $upload_dir["url"], $file)'' cannot be parsed correct.
HTML code '$'basename($file)'' cannot be parsed correct.
HTML code '$'str_replace($upload_dir["path"], $upload_dir["url"], $file)'' cannot be parsed correct.
HTML code '$'basename($file)'' cannot be parsed correct.
HTML code '$'get_site_option("astra-sites-batch-status-string", "")'' cannot be parsed correct.
HTML code '$'Transient: Not Expired! Recheck in human_time_diff(time(), $older_date)'' cannot be parsed correct.
HTML code '$'Astra_Sites_Batch_Site_Import->get_instance()->get_status()'' cannot be parsed correct.
HTML code '$'ASTRA_SITES_URIinc/assets/images/logo.svg'' cannot be parsed correct.
HTML code '$'Astra_Sites_White_Label->get_instance()->get_white_label_name()'' cannot be parsed correct.
HTML code '$'site_url()'' cannot be parsed correct.
HTML code '$'$value_slug'' cannot be parsed correct.
HTML code '$'$value_name'' cannot be parsed correct.
HTML code '$'Template library refreshed!'' cannot be parsed correct.
HTML code '$':str_repeat(" ", 2048)

'' cannot be parsed correct.
HTML code '$'data: wp_json_encode($data)

'' cannot be parsed correct.
HTML code '$':str_repeat(" ", 2048)

'' cannot be parsed correct.
HTML code '$'data: wp_json_encode($data)

'' cannot be parsed correct.
HTML code '$'data: wp_json_encode($data)

'' cannot be parsed correct.
HTML code '$'$global_cpt_meta_cpt_slug'' cannot be parsed correct.
HTML code '$'network_admin_url("update-core.php")'' cannot be parsed correct.
HTML code '$'ASTRA_SITES_URIinc/assets/images/empty-collection.svg'' cannot be parsed correct.
HTML code '$'ASTRA_SITES_URIinc/assets/images/empty-collection.svg'' cannot be parsed correct.
HTML code '$'ASTRA_SITES_URIinc/assets/images/arrow-blue.svg'' cannot be parsed correct.
HTML code '$'ASTRA_SITES_URIinc/assets/images/placeholder.png'' cannot be parsed correct.
HTML code '$'$white_label_class'' cannot be parsed correct.
HTML code '$'site_url()'' cannot be parsed correct.
HTML code '$'https://wpastra.com/starter-templates-support/?ip=$ip'' cannot be parsed correct.
HTML code '$'Please report this error <a href="#LINK" target="_blank">here</a> so we can fix it.'' cannot be parsed correct.
HTML code '$'Astra_Sites->get_instance()->should_display_subscription_form()'' cannot be parsed correct.
HTML code '$'Astra_Sites->get_instance()->get_theme_status()'' cannot be parsed correct.
HTML code '$'ASTRA_SITES_URIinc/assets/images/pixabay-logo.png'' cannot be parsed correct.
HTML code '$'$plugin_name'' cannot be parsed correct.
HTML code '$'$plugin_name'' cannot be parsed correct.
HTML code '$'Astra_Sites_White_Label->get_instance()->get_white_label_name()'' cannot be parsed correct.
HTML code '$'ASTRA_SITES_URIinc/assets/images/premium-crown.svg'' cannot be parsed correct.
HTML code '$'ASTRA_SITES_URIinc/assets/images/empty-collection.svg'' cannot be parsed correct.
HTML code '$'wp_parse_args($notice, $defaults)_message'' cannot be parsed correct.
HTML code '$'wp_parse_args($notice, $defaults)_id'' cannot be parsed correct.
HTML code '$'astra-notice-wrapper wp_parse_args($notice, $defaults)_classes'' cannot be parsed correct.
HTML code '$'wp_parse_args($notice, $defaults)_repeat-notice-after'' cannot be parsed correct.
HTML code '$'$this->get_links_html($data)'' cannot be parsed correct.
HTML code '$'$data_default_logo_url'' cannot be parsed correct.
HTML code '$'ob_get_clean()'' cannot be parsed correct.
HTML code '$'event: message
'' cannot be parsed correct.
HTML code '$'event: log
'' cannot be parsed correct.
HTML code '$'event: log
'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:05.452852.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.068233.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 142 do_action/apply_filters calls and 179 add_action/add_filter calls. Now connecting do-add pairs.
Added 39 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:14.708828.

39 PHP_REACHES edges created
39 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FileProDetector
### Start running FrontBaseDetector
### Finish running DbplusDetector
### Start running HashDetector
### Finish running ArrayElementDetector
### Start running IBMDb2Detector
### Finish running DbaseDetector
### Start running InformixDetector
### Finish running CubridDetector
### Start running IngresDetector
### Finish running IBMDb2Detector
### Start running jQueryRequestDetector
### Finish running FirebirdInterBaseDetector
### Start running maxdbDetector
### Finish running HashDetector
### Start running MongoDbDetector
### Finish running FrontBaseDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running InformixDetector
### Start running MySQLDetector
### Finish running MongoDbDetector
### Start running MySQLiDetector
### Finish running IngresDetector
### Start running Oci8Detector
72126
### Finish running MySQLDetector
### Start running OpenSSLDetector
### Finish running MsqlDetector
### Start running ParadoxDetector
[]
75063
### Finish running Oci8Detector
### Start running PasswordHashingDetector
[]
75185
### Finish running OpenSSLDetector
### Start running PhpCurlDetector
[]
75307
### Finish running ParadoxDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
[]
75431
### Finish running PhpCurlDetector
### Start running PHPRetrievalDetector
[]
74505
[]
74581
[]
75691
[]
75924
[]
77368
[]
78545
[]
78867
### Finish running PHPRetrievalDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PasswordHashingDetector
### Start running PhpVarDetector
[]
80041
[]
### Finish running PHPStorageDetector
### Start running PostgreSQLDetector
80197
[]
79603
### Finish running PostgreSQLDetector
### Start running PropertyDetector
[]
79879
[]
81445
### Finish running PropertyDetector
### Start running Sqlite3Detector
[]
81606
### Finish running Sqlite3Detector
### Start running SqliteDetector
### Finish running PhpVarDetector
### Start running SqlServerDetector
[]
81988
[]
83191
### Finish running SqlServerDetector
### Start running SybaseDetector
[]
82194
[]
82404
### Finish running SqliteDetector
### Start running TokyoTyrantDetector
[]
### Finish running TokyoTyrantDetector
### Start running UserInputDetector
83428
[]
83658
### Finish running SybaseDetector
### Start running VariableDetector
[]
84348
[]
85647
### Finish running UserInputDetector
### Start running WordpressHashingFnDetector
[]
86418
### Finish running WordpressHashingFnDetector
### Start running WordPressRemoteDetector
[]
87749
[]
88208
[]
88528
[]
88735
[]
88922
### Finish running VariableDetector
### Start running WordPressRetrievalDetector
### Finish running PHPIncludedDetector
### Start running WordPressStorageDetector
[]
90514
[]
93381
[]
95089
[]
95508
[]
95630
[]
95675
[]
95721
[]
95973
[]
96019
[]
96633
[]
96812
[]
99206
[]
98523
[]
99601
[]
101884
[]
103254
[]
123981
[]
124427
[]
124549
[]
125892
[]
126909
[]
215383
[]
68545
[]
93754
[]
### Finish running jQueryRequestDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running GenericDatabaseUsageDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
https://websitedemos.net/
https://pixabay.com/api/
### Finish running WordPressRemoteDetector
### Start running UninstallDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running maxdbDetector
### Finish running MySQLiDetector
### Finish running WordPressRetrievalDetector
### Finish running WordPressStorageDetector
### Finished running detectors
None:1
  - External request to possible URLs [].
  - Data types: remote
None:37
  - External request to possible URLs [].
  - Data types: remote
None:38
  - External request to possible URLs [].
  - Data types: remote
None:54
  - External request to possible URLs [].
  - Data types: remote
None:56
  - External request to possible URLs [].
  - Data types: remote
None:68
  - External request to possible URLs [].
  - Data types: remote
None:68
  - External request to possible URLs [].
  - Data types: remote
None:70
  - External request to possible URLs [].
  - Data types: remote
None:78
  - External request to possible URLs [].
  - Data types: remote
None:154
  - External request to possible URLs [].
  - Data types: remote
None:281
  - External request to possible URLs [].
  - Data types: remote
None:352
  - External request to possible URLs [].
  - Data types: remote
None:372
  - External request to possible URLs [].
  - Data types: remote
None:385
  - External request to possible URLs [].
  - Data types: remote
None:397
  - External request to possible URLs [].
  - Data types: remote
None:445
  - External request to possible URLs [].
  - Data types: remote
None:456
  - External request to possible URLs [].
  - Data types: remote
None:567
  - External request to possible URLs [].
  - Data types: remote
None:603
  - External request to possible URLs [].
  - Data types: remote
None:674
  - External request to possible URLs [].
  - Data types: remote
None:945
  - External request to possible URLs [].
  - Data types: remote
None:1066
  - External request to possible URLs [].
  - Data types: remote
None:1141
  - External request to possible URLs [].
  - Data types: remote
None:1143
  - External request to possible URLs [].
  - Data types: remote
None:1158
  - External request to possible URLs [].
  - Data types: remote
None:1246
  - External request to possible URLs [].
  - Data types: remote
None:1267
  - External request to possible URLs [].
  - Data types: remote
None:1288
  - External request to possible URLs [].
  - Data types: remote
None:1309
  - External request to possible URLs [].
  - Data types: remote
None:1359
  - External request to possible URLs [].
  - Data types: remote
None:1402
  - External request to possible URLs [].
  - Data types: remote
None:1539
  - External request to possible URLs [].
  - Data types: remote
None:1654
  - External request to possible URLs [].
  - Data types: remote
None:1771
  - External request to possible URLs [].
  - Data types: remote
None:1865
  - External request to possible URLs [].
  - Data types: remote
None:1918
  - External request to possible URLs [].
  - Data types: remote
None:2033
  - External request to possible URLs [].
  - Data types: remote
None:2090
  - External request to possible URLs [].
  - Data types: remote
None:2118
  - External request to possible URLs [].
  - Data types: remote
None:2145
  - External request to possible URLs [].
  - Data types: remote
None:2357
  - External request to possible URLs [].
  - Data types: remote
None:2393
  - External request to possible URLs [].
  - Data types: remote
None:2468
  - External request to possible URLs [].
  - Data types: remote
None:2511
  - External request to possible URLs [].
  - Data types: remote
None:2554
  - External request to possible URLs [].
  - Data types: remote
None:2699
  - External request to possible URLs [].
  - Data types: remote
None:2743
  - External request to possible URLs [].
  - Data types: remote
None:2788
  - External request to possible URLs [].
  - Data types: remote
None:2928
  - External request to possible URLs [].
  - Data types: remote
None:3215
  - External request to possible URLs [].
  - Data types: remote
None:3354
  - External request to possible URLs [].
  - Data types: remote
None:3589
  - External request to possible URLs [].
  - Data types: remote
None:3677
  - External request to possible URLs [].
  - Data types: remote
None:3751
  - External request to possible URLs [].
  - Data types: remote
None:3794
  - External request to possible URLs [].
  - Data types: remote
None:3832
  - External request to possible URLs [].
  - Data types: remote 

inc/importers/batch-processing/helpers/class-astra-sites-image-importer.php:99
  - SHA1 called with parameters [attachment_url]. Ignore if [attachment_url] does not contain personal information.
inc/importers/batch-processing/helpers/class-wp-background-process.php:153
  - MD5 called with parameters [microtime, wp_rand]. Ignore if [microtime, wp_rand] does not contain personal information.
inc/importers/wxr-importer/class-wxr-importer.php:1063
  - SHA1 called with parameters [:, term, slug, taxonomy]. Ignore if [:, term, slug, taxonomy] does not contain personal information.
inc/importers/wxr-importer/class-wxr-importer.php:1843
  - SHA1 called with parameters [:, slug, taxonomy, data]. Ignore if [:, slug, taxonomy, data] does not contain personal information.
inc/importers/wxr-importer/class-wxr-importer.php:2457
  - SHA1 called with parameters [:, comment_author, item, comment_date]. Ignore if [:, comment_author, item, comment_date] does not contain personal information.
inc/importers/wxr-importer/class-wxr-importer.php:2469
  - SHA1 called with parameters [:, comment_author, comment_date, data]. Ignore if [:, comment_author, comment_date, data] does not contain personal information.
inc/importers/wxr-importer/class-wxr-importer.php:2495
  - SHA1 called with parameters [:, comment_author, comment_date, data]. Ignore if [:, comment_author, comment_date, data] does not contain personal information.
inc/importers/wxr-importer/class-wxr-importer.php:2511
  - SHA1 called with parameters [:, item, slug, taxonomy]. Ignore if [:, item, slug, taxonomy] does not contain personal information.
inc/importers/wxr-importer/class-wxr-importer.php:2523
  - SHA1 called with parameters [:, slug, taxonomy, data]. Ignore if [:, slug, taxonomy, data] does not contain personal information.
inc/importers/wxr-importer/class-wxr-importer.php:2553
  - SHA1 called with parameters [:, slug, taxonomy, data]. Ignore if [:, slug, taxonomy, data] does not contain personal information.
inc/lib/gutenberg-templates/classes/class-ast-block-templates-image-importer.php:97
  - SHA1 called with parameters [attachment_url]. Ignore if [attachment_url] does not contain personal information. 

admin/bsf-analytics/class-bsf-analytics-loader.php:95
  - RETRIEVAL call to file_get_contents($data["path"] . "/version.json").
  - Data types: file
inc/lib/class-astra-sites-ast-block-templates.php:65
  - RETRIEVAL call to file_get_contents($file).
  - Data types: file 

inc/lib/onboarding/class-onboarding-loader.php:190
  - object property '$current_user->user_email' of personal types {'email'} is found.
  - Data types: email 

inc/importers/class-astra-sites-helper.php:350
  - variable '$ipaddress' of personal types {'ip', 'address'} is found.
  - Data types: ip, address
inc/importers/class-astra-sites-helper.php:352
  - variable '$ipaddress' of personal types {'ip', 'address'} is found.
  - Data types: ip, address
inc/importers/class-astra-sites-helper.php:354
  - variable '$ipaddress' of personal types {'ip', 'address'} is found.
  - Data types: ip, address
inc/importers/class-astra-sites-helper.php:356
  - variable '$ipaddress' of personal types {'ip', 'address'} is found.
  - Data types: ip, address
inc/importers/class-astra-sites-helper.php:358
  - variable '$ipaddress' of personal types {'ip', 'address'} is found.
  - Data types: ip, address
inc/importers/class-astra-sites-helper.php:360
  - variable '$ipaddress' of personal types {'ip', 'address'} is found.
  - Data types: ip, address
inc/importers/class-astra-sites-helper.php:362
  - variable '$ipaddress' of personal types {'ip', 'address'} is found.
  - Data types: ip, address
inc/importers/class-astra-sites-helper.php:364
  - variable '$ipaddress' of personal types {'ip', 'address'} is found.
  - Data types: ip, address
inc/importers/class-astra-sites-helper.php:366
  - variable '$ipaddress' of personal types {'ip', 'address'} is found.
  - Data types: ip, address 

admin/bsf-analytics/class-bsf-analytics.php:134
  - API call to wp_remote_post($this->get_api_url() . "wp-json/bsf-core/v1/analytics/", ["body" => BSF_Analytics_Stats->instance()->get_stats(), "timeout" => 5, "blocking" => false]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
inc/classes/class-astra-sites-importer.php:638
  - API call to wp_remote_get($demo_api_uri, $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
inc/classes/class-astra-sites-page.php:643
  - API call to wp_remote_post($cron_request["url"], $cron_request["args"]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
inc/classes/class-astra-sites-wp-cli.php:681
  - API call to wp_remote_get($url, $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
inc/classes/class-astra-sites-wp-cli.php:731
  - API call to wp_remote_get($url, $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
inc/classes/class-astra-sites.php:300
  - API call to wp_remote_post($url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
inc/classes/class-astra-sites.php:341
  - API call to wp_remote_post($this->search_analytics_url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
inc/classes/class-astra-sites.php:464
  - API call to wp_remote_get($api_url). Passed arguments: 0: $url (string). Returns (array|WP_Error).
  - Data types: remote
inc/classes/class-astra-sites.php:511
  - API call to wp_remote_get($api_url). Passed arguments: 0: $url (string). Returns (array|WP_Error).
  - Data types: remote
inc/classes/class-astra-sites.php:571
  - API call to wp_remote_get($api_url, $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
inc/classes/class-astra-sites.php:918
  - API call to wp_remote_get($api_url). Passed arguments: 0: $url (string). Returns (array|WP_Error).
  - Data types: remote
inc/importers/batch-processing/class-astra-sites-batch-processing-importer.php:61
  - API call to wp_remote_get(trailingslashit(Astra_Sites->get_instance()->get_api_domain()) . "wp-content/uploads/all-site-categories.json", $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
inc/importers/batch-processing/class-astra-sites-batch-processing-importer.php:96
  - API call to wp_remote_get(trailingslashit(Astra_Sites->get_instance()->get_api_domain()) . "wp-json/wp/v2/astra-sites-site-category/?hide_empty=true&_fields=id,name,slug&per_page=100", $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
inc/importers/batch-processing/class-astra-sites-batch-processing-importer.php:131
  - API call to wp_remote_get(trailingslashit(Astra_Sites->get_instance()->get_api_domain()) . "wp-json/wp/v2/astra-sites-site-category/?hide_empty=true&_fields=id,name,slug&per_page=100", $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
inc/importers/batch-processing/class-astra-sites-batch-processing-importer.php:166
  - API call to wp_remote_get(trailingslashit(Astra_Sites->get_instance()->get_api_domain()) . "wp-json/wp/v2/blocks-category/?_fields=id,name,slug&per_page=100&hide_empty=1", $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
inc/importers/batch-processing/class-astra-sites-batch-processing-importer.php:218
  - API call to wp_remote_get($url, $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
inc/importers/batch-processing/class-astra-sites-batch-processing-importer.php:264
  - API call to wp_remote_get(trailingslashit(Astra_Sites->get_instance()->get_api_domain()) . "wp-json/wp/v2/astra-site-page-builder/?_fields=id,name,slug&site_url=" . $site_url . "&purchase_key=" . $purchase_key, $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
inc/importers/batch-processing/class-astra-sites-batch-processing-importer.php:315
  - API call to wp_remote_get($api_url, $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
inc/importers/batch-processing/class-astra-sites-batch-processing-importer.php:370
  - API call to wp_remote_get($api_url, $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
inc/importers/batch-processing/class-astra-sites-batch-processing.php:334
  - API call to wp_remote_get(trailingslashit(Astra_Sites->get_instance()->get_api_domain()) . "wp-json/astra-sites/v1/get-last-export-checksums", $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
inc/importers/batch-processing/class-astra-sites-batch-processing.php:663
  - API call to wp_remote_get(trailingslashit(Astra_Sites->get_instance()->get_api_domain()) . "wp-json/astra-sites/v1/get-total-pages/?per_page=15", $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
inc/importers/batch-processing/class-astra-sites-batch-processing.php:704
  - API call to wp_remote_get($api_url, $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
inc/importers/batch-processing/helpers/class-wp-async-request.php:92
  - API call to wp_remote_post(esc_url_raw($url), $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
inc/importers/wxr-importer/class-wxr-importer.php:1972
  - API call to wp_remote_get($url, ["stream" => true, "filename" => $upload["file"]]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
inc/lib/gutenberg-templates/classes/class-ast-block-templates-sync-library.php:306
  - API call to wp_remote_get($api_url, $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
inc/lib/gutenberg-templates/classes/class-ast-block-templates-sync-library.php:510
  - API call to wp_remote_get($api_url, $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
inc/lib/gutenberg-templates/classes/class-ast-block-templates-sync-library.php:554
  - API call to wp_remote_get($api_url, $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
inc/lib/gutenberg-templates/classes/class-ast-block-templates-sync-library.php:599
  - API call to wp_remote_get($api_url, $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
inc/lib/gutenberg-templates/classes/class-ast-block-templates-sync-library.php:655
  - API call to wp_remote_get($api_url, $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
inc/lib/gutenberg-templates/classes/class-ast-block-templates-sync-library.php:716
  - API call to wp_remote_get($api_url, $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
inc/lib/gutenberg-templates/classes/class-ast-block-templates.php:342
  - API call to wp_remote_get($demo_api_uri, $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
inc/lib/onboarding/classes/class-astra-sites-onboarding-setup.php:125
  - API call to wp_remote_post($api_url, $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
inc/lib/onboarding/classes/class-astra-sites-reporting.php:128
  - API call to wp_remote_post(Astra_Sites->get_instance()->import_analytics_url, $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote 

admin/bsf-analytics/class-bsf-analytics-stats.php:239
  - RETRIEVAL call to get_option("timezone_string") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/bsf-analytics/class-bsf-analytics-stats.php:245
  - RETRIEVAL call to get_option("gmt_offset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
classes/class-astra-sites-admin.php:135
  - RETRIEVAL call to get_option("astra_sites_import_complete", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/classes/batch-import/class-astra-sites-batch-site-import.php:127
  - RETRIEVAL call to get_option("astra_sites_site_import_batch_status", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/classes/batch-import/class-astra-sites-batch-site-import.php:451
  - RETRIEVAL call to get_option("astra_sites_import_data", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/classes/batch-import/class-astra-sites-batch-site-import.php:553
  - RETRIEVAL call to get_option("astra_sites_import_data", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/classes/batch-import/class-astra-sites-batch-site-import.php:567
  - RETRIEVAL call to get_option("astra_sites_import_data", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/classes/batch-import/class-astra-sites-batch-site-import.php:580
  - RETRIEVAL call to get_option("astra_sites_import_data", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/classes/batch-import/class-astra-sites-batch-site-import.php:588
  - RETRIEVAL call to get_option("astra_sites_import_data", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/classes/batch-import/class-astra-sites-batch-site-import.php:601
  - RETRIEVAL call to get_option("astra_sites_import_data", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/classes/batch-import/class-astra-sites-batch-site-import.php:612
  - RETRIEVAL call to get_option("astra_sites_import_data", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/classes/class-astra-sites-elementor-pages.php:54
  - RETRIEVAL call to get_option("astra_sites_wpforms_ids_mapping", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/classes/class-astra-sites-elementor-pages.php:68
  - RETRIEVAL call to get_option("astra_sites_import_data", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/classes/class-astra-sites-image-processing.php:78
  - RETRIEVAL call to get_option("st_attachments", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/classes/class-astra-sites-importer-log.php:117
  - RETRIEVAL call to get_option("astra_sites_recent_import_log_file", self"log_file") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/classes/class-astra-sites-importer-log.php:229
  - RETRIEVAL call to get_option("astra_sites_recent_import_log_file", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/classes/class-astra-sites-importer-log.php:242
  - RETRIEVAL call to get_option("astra_sites_recent_import_log_file", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/classes/class-astra-sites-importer-log.php:243
  - RETRIEVAL call to get_option("astra_sites_recent_import_log_file", self"log_file") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/classes/class-astra-sites-importer-log.php:306
  - RETRIEVAL call to get_option("timezone_string") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/classes/class-astra-sites-importer-log.php:309
  - RETRIEVAL call to get_option("gmt_offset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/classes/class-astra-sites-importer.php:537
  - RETRIEVAL call to get_option("sidebars_widgets", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/classes/class-astra-sites-importer.php:573
  - RETRIEVAL call to get_option("astra_sites_import_data", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/classes/class-astra-sites-importer.php:749
  - RETRIEVAL call to get_option("astra-settings", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/classes/class-astra-sites-importer.php:777
  - RETRIEVAL call to get_option("_astra_sites_old_site_options", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/classes/class-astra-sites-importer.php:812
  - RETRIEVAL call to get_option("_astra_sites_old_widgets_data", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/classes/class-astra-sites-importer.php:821
  - RETRIEVAL call to get_option("sidebars_widgets", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/classes/class-astra-sites-page.php:79
  - RETRIEVAL call to get_option("_astra_sites_gettings_started", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/classes/class-astra-sites-page.php:189
  - RETRIEVAL call to get_option("astra_sites_settings", $defaults) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/classes/class-astra-sites-page.php:201
  - RETRIEVAL call to get_option("astra_sites_settings", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/classes/class-astra-sites-page.php:619
  - RETRIEVAL call to get_transient("astra-sites-cron-test-ok") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
inc/classes/class-astra-sites-wp-cli.php:583
  - RETRIEVAL call to $this->get_posts("astra-sites", $args, $force). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
inc/classes/class-astra-sites-wp-cli.php:673
  - RETRIEVAL call to get_transient("astra-sites-term-" . $term_slug) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
inc/classes/class-astra-sites-wp-cli.php:721
  - RETRIEVAL call to get_transient("astra-sites-post-" . $post_slug) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
inc/classes/class-astra-sites.php:405
  - RETRIEVAL call to get_option("astra-sites-saved-images", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/classes/class-astra-sites.php:406
  - RETRIEVAL call to get_post_meta($id, "astra-images", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/classes/class-astra-sites.php:696
  - RETRIEVAL call to get_option("astra-sites-favorites", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/classes/class-astra-sites.php:978
  - RETRIEVAL call to get_option("astra-sites-saved-images", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/classes/class-astra-sites.php:988
  - RETRIEVAL call to get_option("astra-sites-saved-images", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/classes/class-astra-sites.php:1345
  - RETRIEVAL call to get_option("astra-settings", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/classes/class-astra-sites.php:1474
  - RETRIEVAL call to get_option("astra-sites-saved-images", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/classes/class-astra-sites.php:1676
  - RETRIEVAL call to get_option("astra-sites-favorites") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/classes/class-astra-sites.php:1679
  - RETRIEVAL call to get_option("astra-sites-favorites") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/classes/class-astra-sites.php:1691
  - RETRIEVAL call to get_user_meta(get_current_user_ID(), "astra-sites-subscribed", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/classes/class-astra-sites.php:1724
  - RETRIEVAL call to Astra_Sites_White_Label->get_instance()->get_option("astra", "name", "Astra") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/classes/class-astra-sites.php:1733
  - RETRIEVAL call to get_option("astra-sites-all-site-categories", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/classes/class-astra-sites.php:1734
  - RETRIEVAL call to get_option("astra-sites-all-site-categories-and-tags", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/classes/class-astra-sites.php:1736
  - RETRIEVAL call to get_option("astra-sites-license-page-builder", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/classes/class-astra-sites.php:1754
  - RETRIEVAL call to get_option("astra_sites_import_complete") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/classes/class-astra-sites.php:1811
  - RETRIEVAL call to get_user_meta(get_current_user_ID(), "astra-sites-subscribed", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/classes/class-astra-sites.php:2515
  - RETRIEVAL call to get_transient("wpforms_activation_redirect") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
inc/classes/compatibility/astra-pro/class-astra-sites-compatibility-astra-pro.php:137
  - RETRIEVAL call to get_option("astra_sites_import_data", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/classes/compatibility/astra-pro/class-astra-sites-compatibility-astra-pro.php:186
  - RETRIEVAL call to get_post_meta($post_id, $meta_key, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/classes/compatibility/sfwd-lms/class-astra-sites-compatibility-sfwd-lms.php:59
  - RETRIEVAL call to get_option("astra_sites_import_data", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/classes/compatibility/sfwd-lms/class-astra-sites-compatibility-sfwd-lms.php:83
  - RETRIEVAL call to get_post_meta($course->ID, "_sfwd-courses", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/classes/functions.php:78
  - RETRIEVAL call to get_option("astra_sites_import_data", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/classes/functions.php:187
  - RETRIEVAL call to get_transient("astra_sites_import_started") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
inc/importers/batch-processing/class-astra-sites-batch-processing-beaver-builder.php:93
  - RETRIEVAL call to get_post_meta($post_id, "_fl_builder_enabled", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/importers/batch-processing/class-astra-sites-batch-processing-beaver-builder.php:100
  - RETRIEVAL call to get_post_meta($post_id, "_astra_sites_enable_for_batch", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/importers/batch-processing/class-astra-sites-batch-processing-beaver-builder.php:113
  - RETRIEVAL call to get_post_meta($post_id, "_fl_builder_data", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/importers/batch-processing/class-astra-sites-batch-processing-beaver-builder.php:175
  - RETRIEVAL call to get_option("astra_sites_wpforms_ids_mapping", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/importers/batch-processing/class-astra-sites-batch-processing-beaver-builder.php:213
  - RETRIEVAL call to get_option("astra_sites_wpforms_ids_mapping", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/importers/batch-processing/class-astra-sites-batch-processing-brizy.php:94
  - RETRIEVAL call to get_post_meta($post_id, "brizy_post_uid", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/importers/batch-processing/class-astra-sites-batch-processing-brizy.php:101
  - RETRIEVAL call to get_post_meta($post_id, "_astra_sites_enable_for_batch", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/importers/batch-processing/class-astra-sites-batch-processing-brizy.php:112
  - RETRIEVAL call to get_option("astra_sites_wpforms_ids_mapping", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/importers/batch-processing/class-astra-sites-batch-processing-customizer.php:67
  - RETRIEVAL call to get_option("astra-settings", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/importers/batch-processing/class-astra-sites-batch-processing-elementor.php:78
  - RETRIEVAL call to get_post_meta($post_id, "_elementor_version", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/importers/batch-processing/class-astra-sites-batch-processing-elementor.php:85
  - RETRIEVAL call to get_post_meta($post_id, "_astra_sites_enable_for_batch", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/importers/batch-processing/class-astra-sites-batch-processing-elementor.php:98
  - RETRIEVAL call to get_post_meta($post_id, "_elementor_data", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/importers/batch-processing/class-astra-sites-batch-processing-elementor.php:105
  - RETRIEVAL call to get_option("astra_sites_wpforms_ids_mapping", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/importers/batch-processing/class-astra-sites-batch-processing-elementor.php:129
  - RETRIEVAL call to get_option("astra_sites_import_data", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/importers/batch-processing/class-astra-sites-batch-processing-gutenberg.php:123
  - RETRIEVAL call to get_post_meta($post_id, "_astra_sites_enable_for_batch", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/importers/batch-processing/class-astra-sites-batch-processing-gutenberg.php:128
  - RETRIEVAL call to get_post_meta($post_id, "_elementor_version", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/importers/batch-processing/class-astra-sites-batch-processing-gutenberg.php:129
  - RETRIEVAL call to get_post_meta($post_id, "_fl_builder_enabled", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/importers/batch-processing/class-astra-sites-batch-processing-gutenberg.php:130
  - RETRIEVAL call to get_post_meta($post_id, "brizy_post_uid", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/importers/batch-processing/class-astra-sites-batch-processing-gutenberg.php:139
  - RETRIEVAL call to get_option("astra_sites_wpforms_ids_mapping", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/importers/batch-processing/class-astra-sites-batch-processing-gutenberg.php:142
  - RETRIEVAL call to get_post_field("post_content", $post_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $field (string), 1: $post (int|WP_Post). Returns (string).
  - Data types: post_meta, post, wp_post
inc/importers/batch-processing/class-astra-sites-batch-processing-gutenberg.php:154
  - RETRIEVAL call to get_option("astra_sites_import_data", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/importers/batch-processing/class-astra-sites-batch-processing-gutenberg.php:259
  - RETRIEVAL call to get_option("astra_sites_import_data", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/importers/batch-processing/class-astra-sites-batch-processing-misc.php:77
  - RETRIEVAL call to get_option("astra_sites_import_data", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/importers/batch-processing/class-astra-sites-batch-processing-misc.php:104
  - RETRIEVAL call to get_post_meta($post_id, "_menu_item_url", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/importers/batch-processing/class-astra-sites-batch-processing-misc.php:122
  - RETRIEVAL call to get_option("st_attachments", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/importers/batch-processing/class-astra-sites-batch-processing-widgets.php:68
  - RETRIEVAL call to get_option("astra_sites_wpforms_ids_mapping", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/importers/batch-processing/class-astra-sites-batch-processing-widgets.php:88
  - RETRIEVAL call to get_option("widget_wpforms-widget", null) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/importers/batch-processing/class-astra-sites-batch-processing-widgets.php:131
  - RETRIEVAL call to get_option("widget_text", null) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/importers/batch-processing/class-astra-sites-batch-processing-widgets.php:173
  - RETRIEVAL call to get_option("widget_media_image", null) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/importers/class-astra-site-options-import.php:221
  - RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
inc/importers/class-astra-widget-importer.php:112
  - RETRIEVAL call to get_option("widget_" . $widget_data["id_base"]) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/importers/class-astra-widget-importer.php:184
  - RETRIEVAL call to get_option("sidebars_widgets") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/importers/class-astra-widget-importer.php:208
  - RETRIEVAL call to get_option("widget_" . $id_base) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/importers/class-astra-widget-importer.php:237
  - RETRIEVAL call to get_option("sidebars_widgets") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/importers/wxr-importer/class-astra-wxr-importer.php:83
  - RETRIEVAL call to get_post_meta($post_id, "_elementor_version", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/importers/wxr-importer/class-wxr-importer.php:1115
  - RETRIEVAL call to get_post_meta($post_id, "_menu_item_type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/importers/wxr-importer/class-wxr-importer.php:1116
  - RETRIEVAL call to get_post_meta($post_id, "_menu_item_object_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/importers/wxr-importer/class-wxr-importer.php:1496
  - RETRIEVAL call to wp_insert_comment(wp_slash($comment)). Passed arguments: 0: $commentdata (array). Returns (int|false).
inc/importers/wxr-importer/class-wxr-importer.php:2060
  - RETRIEVAL call to get_post_meta($post_id, "_wxr_import_parent", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/importers/wxr-importer/class-wxr-importer.php:2085
  - RETRIEVAL call to get_post_meta($post_id, "_wxr_import_user_slug", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/importers/wxr-importer/class-wxr-importer.php:2110
  - RETRIEVAL call to get_post_meta($post_id, "_wxr_import_has_attachment_refs", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/importers/wxr-importer/class-wxr-importer.php:2112
  - RETRIEVAL call to get_post($post_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/importers/wxr-importer/class-wxr-importer.php:2171
  - RETRIEVAL call to get_post_meta($post_id, "_wxr_import_menu_item", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/importers/wxr-importer/class-wxr-importer.php:2177
  - RETRIEVAL call to get_post_meta($post_id, "_menu_item_type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/importers/wxr-importer/class-wxr-importer.php:2232
  - RETRIEVAL call to get_comment_meta($comment_id, "_wxr_import_parent", true) alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: comment_meta
inc/importers/wxr-importer/class-wxr-importer.php:2256
  - RETRIEVAL call to get_comment_meta($comment_id, "_wxr_import_user", true) alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: comment_meta
inc/importers/wxr-importer/class-wxr-importer.php:2287
  - RETRIEVAL call to wp_update_comment(wp_slash($data)). Passed arguments: 0: $commentarr (array). Returns (int|false|WP_Error).
inc/includes/admin-page.php:618
  - RETRIEVAL call to get_option("astra-sites-license-page-builder", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/lib/astra-notices/class-astra-notices.php:342
  - RETRIEVAL call to get_transient($notice["id"]) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
inc/lib/astra-notices/class-astra-notices.php:348
  - RETRIEVAL call to get_user_meta(get_current_user_id(), $notice["id"], true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/lib/astra-notices/class-astra-notices.php:349
  - RETRIEVAL call to get_user_meta(get_current_user_id(), $notice["id"], true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/lib/astra-notices/class-astra-notices.php:358
  - RETRIEVAL call to get_user_meta(get_current_user_id(), $notice["id"], true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/lib/gutenberg-templates/classes/class-ast-block-templates.php:157
  - RETRIEVAL call to get_option("ast_block_templates_wpforms_ids_mapping", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/lib/onboarding/class-onboarding-loader.php:174
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
inc/lib/onboarding/class-onboarding-loader.php:197
  - RETRIEVAL call to get_option("astra_sites_import_complete", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/lib/onboarding/class-onboarding-loader.php:199
  - RETRIEVAL call to get_option("st-brizy-builder-flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/lib/onboarding/class-onboarding-loader.php:264
  - RETRIEVAL call to get_option("st-brizy-builder-flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/lib/onboarding/classes/class-astra-sites-onboarding-setup.php:150
  - RETRIEVAL call to get_option("astra_sites_recent_import_log_file", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/lib/onboarding/classes/class-astra-sites-onboarding-setup.php:248
  - RETRIEVAL call to get_option("astra-color-palettes", Astra_Global_Palette->get_default_color_palette()) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/lib/onboarding/classes/class-astra-sites-reporting.php:54
  - RETRIEVAL call to get_option("astra_sites_has_sent_error_report", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/lib/onboarding/classes/class-astra-sites-reporting.php:69
  - RETRIEVAL call to get_option("astra_sites_cached_import_error", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option 

inc/classes/batch-import/class-astra-sites-batch-site-import.php:141
  - STORAGE call to update_option("astra_sites_site_import_batch_status", $args, "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/classes/batch-import/class-astra-sites-batch-site-import.php:708
  - STORAGE call to update_option("astra_sites_import_data", $this->current_site_data, "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/classes/class-astra-sites-elementor-pages.php:86
  - STORAGE call to update_metadata("post", $post_id, "_elementor_data", $data) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 2: $meta_key (string), 3: $meta_value (mixed). Returns (int|bool).
  - Data types: meta
inc/classes/class-astra-sites-image-processing.php:87
  - STORAGE call to update_option("st_attachments", $all_attachments, "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/classes/class-astra-sites-importer-log.php:230
  - STORAGE call to update_option("astra_sites_recent_import_log_file", self"log_file", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/classes/class-astra-sites-importer.php:99
  - STORAGE call to delete_transient("astra_sites_batch_process_started") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).
  - Data types: site
inc/classes/class-astra-sites-importer.php:100
  - STORAGE call to delete_option("astra_sites_import_data") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/classes/class-astra-sites-importer.php:243
  - STORAGE call to wp_insert_post(["post_title" => $title, "post_status" => "publish", "post_type" => "wpforms", "post_excerpt" => $desc]). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
inc/classes/class-astra-sites-importer.php:257
  - STORAGE call to update_post_meta($new_id, "_astra_sites_imported_wp_forms", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/classes/class-astra-sites-importer.php:267
  - STORAGE call to wp_update_post(["ID" => $new_id, "post_content" => wpforms_encode($form)]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
inc/classes/class-astra-sites-importer.php:287
  - STORAGE call to update_option("astra_sites_wpforms_ids_mapping", $ids_mapping, "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/classes/class-astra-sites-importer.php:378
  - STORAGE call to update_option("_astra_sites_old_customizer_data", $customizer_data, "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/classes/class-astra-sites-importer.php:452
  - STORAGE call to update_option("astra_sites_imported_wxr_id", $post_id, "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/classes/class-astra-sites-importer.php:490
  - STORAGE call to update_option("_astra_sites_old_site_options", $options_data, "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/classes/class-astra-sites-importer.php:538
  - STORAGE call to update_option("_astra_sites_old_widgets_data", $sidebars_widgets, "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/classes/class-astra-sites-importer.php:577
  - STORAGE call to update_option("astra_sites_import_complete", "yes", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/classes/class-astra-sites-importer.php:578
  - STORAGE call to delete_transient("astra_sites_import_started") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).
  - Data types: site
inc/classes/class-astra-sites-importer.php:690
  - STORAGE call to set_transient("astra_sites_import_started", "yes", HOUR_IN_SECONDS) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
inc/classes/class-astra-sites-importer.php:751
  - STORAGE call to delete_option("astra-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/classes/class-astra-sites-importer.php:783
  - STORAGE call to delete_option($option_key) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/classes/class-astra-sites-importer.php:845
  - STORAGE call to update_option("sidebars_widgets", $sidebars_widgets) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/classes/class-astra-sites-importer.php:889
  - STORAGE call to wp_delete_post($post_id, true) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post_meta, post, wp_post
inc/classes/class-astra-sites-importer.php:929
  - STORAGE call to wp_delete_post($post_id, true) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post_meta, post, wp_post
inc/classes/class-astra-sites-page.php:126
  - STORAGE call to update_option("astra_sites_settings", $data, "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/classes/class-astra-sites-page.php:205
  - STORAGE call to update_option("astra_sites_settings", $new_data, "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/classes/class-astra-sites-page.php:657
  - STORAGE call to set_transient("astra-sites-cron-test-ok", 1, 3600) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
inc/classes/class-astra-sites-wp-cli.php:536
  - STORAGE call to update_option("astra_sites_import_data", $this->current_site_data, "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/classes/class-astra-sites-wp-cli.php:691
  - STORAGE call to set_transient("astra-sites-term-" . $term_slug, $new_terms_data, WEEK_IN_SECONDS) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
inc/classes/class-astra-sites-wp-cli.php:737
  - STORAGE call to set_transient("astra-sites-post-" . $post_slug, $all_posts, WEEK_IN_SECONDS) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
inc/classes/class-astra-sites.php:307
  - STORAGE call to update_user_meta(get_current_user_ID(), "astra-sites-subscribed", "yes") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/classes/class-astra-sites.php:383
  - STORAGE call to delete_option("astra_sites_has_sent_error_report") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/classes/class-astra-sites.php:384
  - STORAGE call to delete_option("astra_sites_cached_import_error") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/classes/class-astra-sites.php:416
  - STORAGE call to update_option("astra-sites-saved-images", $saved_images, "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/classes/class-astra-sites.php:484
  - STORAGE call to update_option("elementor_load_fa4_shim", $data["astra-page-options-data"]["elementor_load_fa4_shim"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/classes/class-astra-sites.php:602
  - STORAGE call to update_option("astra_sites_import_data", $demo_data, "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/classes/class-astra-sites.php:713
  - STORAGE call to update_option("astra-sites-favorites", $new_favorites, "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/classes/class-astra-sites.php:765
  - STORAGE call to wp_insert_post($post_args). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
inc/classes/class-astra-sites.php:766
  - STORAGE call to update_post_meta($new_page_id, "_astra_sites_enable_for_batch", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/classes/class-astra-sites.php:774
  - STORAGE call to update_post_meta($new_page_id, "_elementor_template_type", "page") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/classes/class-astra-sites.php:777
  - STORAGE call to update_post_meta($new_page_id, "_elementor_template_type", "section") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/classes/class-astra-sites.php:781
  - STORAGE call to update_post_meta($new_page_id, "_wp_page_template", "elementor_header_footer") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/classes/class-astra-sites.php:819
  - STORAGE call to update_post_meta($downloaded_image["id"], $meta_key, $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/classes/class-astra-sites.php:846
  - STORAGE call to update_option("elementor_load_fa4_shim", $_POST["data"]["astra-page-options-data"]["elementor_load_fa4_shim"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/classes/class-astra-sites.php:868
  - STORAGE call to wp_insert_post($post_args). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
inc/classes/class-astra-sites.php:869
  - STORAGE call to update_post_meta($new_page_id, "_astra_sites_enable_for_batch", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/classes/class-astra-sites.php:880
  - STORAGE call to update_option($option, $value) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/classes/class-astra-sites.php:885
  - STORAGE call to update_post_meta($new_page_id, "_wp_page_template", "elementor_header_footer") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/classes/class-astra-sites.php:970
  - STORAGE call to update_post_meta($image, "_astra_sites_imported_post", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/classes/class-astra-sites.php:985
  - STORAGE call to update_option("astra-sites-saved-images", $saved_images, "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/classes/class-astra-sites.php:1031
  - STORAGE call to add_post_meta($id, "_source_url", $url) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: post_meta
inc/classes/class-astra-sites.php:1033
  - STORAGE call to update_post_meta($id, "astra-images", $photo_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/classes/class-astra-sites.php:1034
  - STORAGE call to update_post_meta($id, "_wp_attachment_image_alt", $name) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/classes/class-astra-sites.php:1076
  - STORAGE call to update_post_meta($post_id, $meta_key, $raw_data) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/classes/class-astra-sites.php:1118
  - STORAGE call to update_post_meta($post_id, $meta_key, $raw_data) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/classes/class-astra-sites.php:1137
  - STORAGE call to update_option("_astra_sites_gettings_started", "yes", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/classes/class-astra-sites.php:1216
  - STORAGE call to wp_delete_post($post_id, true) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post_meta, post, wp_post
inc/classes/class-astra-sites.php:1263
  - STORAGE call to wp_delete_post($post_id, true) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post_meta, post, wp_post
inc/classes/class-astra-sites.php:1272
  - STORAGE call to delete_option($tax"_children") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/classes/class-astra-sites.php:1353
  - STORAGE call to update_option("astra_sites_" . $file_name, $old_settings, "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/classes/class-astra-sites.php:2518
  - STORAGE call to delete_transient("wpforms_activation_redirect") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).
  - Data types: site
inc/classes/compatibility/astra-pro/class-astra-sites-compatibility-astra-pro.php:188
  - STORAGE call to update_post_meta($post_id, $meta_key, $headers_new) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/classes/compatibility/astra-pro/class-astra-sites-compatibility-astra-pro.php:204
  - STORAGE call to update_post_meta($post_id, $meta_key, $location_new) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/classes/compatibility/beaver-builder/class-astra-sites-compatibility-bb.php:54
  - STORAGE call to delete_transient("_fl_builder_activation_admin_notice") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).
  - Data types: site
inc/classes/compatibility/sfwd-lms/class-astra-sites-compatibility-sfwd-lms.php:87
  - STORAGE call to update_post_meta($course->ID, "_sfwd-courses", $ld_meta) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/classes/compatibility/uabb/class-astra-sites-compatibility-uabb.php:50
  - STORAGE call to update_option("uabb_lite_redirect", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/classes/compatibility/uag/class-astra-sites-compatibility-uag.php:50
  - STORAGE call to update_option("__uagb_do_redirect", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/classes/compatibility/woocommerce/class-astra-sites-compatibility-woocommerce.php:139
  - STORAGE call to delete_transient("wc_attribute_taxonomies") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).
  - Data types: site
inc/classes/functions.php:205
  - STORAGE call to wp_update_post(["ID" => $post_id, "post_excerpt" => ""]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
inc/importers/batch-processing/class-astra-sites-batch-processing-beaver-builder.php:135
  - STORAGE call to update_post_meta($post_id, "_fl_builder_data", $data) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/importers/batch-processing/class-astra-sites-batch-processing-beaver-builder.php:136
  - STORAGE call to update_post_meta($post_id, "_fl_builder_draft", $data) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/importers/batch-processing/class-astra-sites-batch-processing-customizer.php:84
  - STORAGE call to update_option("astra-settings", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/importers/batch-processing/class-astra-sites-batch-processing-elementor.php:144
  - STORAGE call to update_metadata("post", $post_id, "_elementor_data", $data) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 2: $meta_key (string), 3: $meta_value (mixed). Returns (int|bool).
  - Data types: meta
inc/importers/batch-processing/class-astra-sites-batch-processing-elementor.php:145
  - STORAGE call to update_metadata("post", $post_id, "_astra_sites_hotlink_imported", true) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 2: $meta_key (string), 3: $meta_value (mixed). Returns (int|bool).
  - Data types: meta
inc/importers/batch-processing/class-astra-sites-batch-processing-gutenberg.php:189
  - STORAGE call to wp_update_post(["ID" => $post_id, "post_content" => $content, "post_excerpt" => ""]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
inc/importers/batch-processing/class-astra-sites-batch-processing-importer.php:233
  - STORAGE call to update_option("astra-sites-license-page-builder", "elementor", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/importers/batch-processing/class-astra-sites-batch-processing-importer.php:236
  - STORAGE call to update_option("astra-sites-license-page-builder", "beaver-builder", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/importers/batch-processing/class-astra-sites-batch-processing-importer.php:239
  - STORAGE call to update_option("astra-sites-license-page-builder", "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/importers/batch-processing/class-astra-sites-batch-processing-misc.php:108
  - STORAGE call to update_post_meta($post_id, "_menu_item_url", $menu_url) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/importers/batch-processing/class-astra-sites-batch-processing-misc.php:134
  - STORAGE call to update_option("st_attachments", [], "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/importers/batch-processing/class-astra-sites-batch-processing-widgets.php:120
  - STORAGE call to update_option("widget_wpforms-widget", $data) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/importers/batch-processing/class-astra-sites-batch-processing-widgets.php:162
  - STORAGE call to update_option("widget_text", $data) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/importers/batch-processing/class-astra-sites-batch-processing-widgets.php:204
  - STORAGE call to update_option("widget_media_image", $data) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/importers/batch-processing/class-astra-sites-batch-processing.php:838
  - STORAGE call to set_transient("astra_sites_batch_process_started", "yes", HOUR_IN_SECONDS) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
inc/importers/batch-processing/class-astra-sites-batch-processing.php:850
  - STORAGE call to delete_option("astra_sites_imported_wxr_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/importers/batch-processing/helpers/class-astra-sites-image-importer.php:237
  - STORAGE call to update_post_meta($post_id, "_astra_sites_image_hash", $this->get_hash_image($attachment["url"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/importers/batch-processing/helpers/class-wp-background-process-astra.php:64
  - STORAGE call to delete_option("astra_sites_recent_import_log_file") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/importers/class-astra-customizer-import.php:54
  - STORAGE call to update_option("astra-settings", $options["astra-settings"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/importers/class-astra-site-options-import.php:187
  - STORAGE call to update_option($option_name, $option_value) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/importers/class-astra-site-options-import.php:223
  - STORAGE call to update_option("elementor_active_kit", $query[0]->ID) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/importers/class-astra-site-options-import.php:239
  - STORAGE call to update_option($option_name, $page->ID) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/importers/class-astra-widget-importer.php:234
  - STORAGE call to update_option("widget_" . $id_base, $single_widget_instances) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/importers/class-astra-widget-importer.php:247
  - STORAGE call to update_option("sidebars_widgets", $sidebars_widgets) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/importers/wxr-importer/class-astra-wxr-importer.php:78
  - STORAGE call to update_post_meta($post_id, "_astra_sites_imported_post", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/importers/wxr-importer/class-astra-wxr-importer.php:79
  - STORAGE call to update_post_meta($post_id, "_astra_sites_enable_for_batch", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/importers/wxr-importer/class-astra-wxr-importer.php:86
  - STORAGE call to update_post_meta($post_id, "_wp_page_template", "elementor_header_footer") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/importers/wxr-importer/class-astra-wxr-importer.php:92
  - STORAGE call to update_post_meta($post_id, "_astra_sites_image_hash", $attachment_hash_url) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/importers/wxr-importer/class-astra-wxr-importer.php:93
  - STORAGE call to update_post_meta($post_id, "_elementor_source_image_hash", $attachment_hash_url) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/importers/wxr-importer/class-wxr-importer.php:653
  - STORAGE call to delete_option($tax"_children") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/importers/wxr-importer/class-wxr-importer.php:999
  - STORAGE call to wp_insert_post($postdata, true). Passed arguments: 0: $postarr (array), 1: $wp_error (bool). Returns (int|WP_Error).
inc/importers/wxr-importer/class-wxr-importer.php:1127
  - STORAGE call to add_post_meta($post_id, "_wxr_import_menu_item", wp_slash($original_object_id)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: post_meta
inc/importers/wxr-importer/class-wxr-importer.php:1136
  - STORAGE call to add_post_meta($post_id, "_wxr_import_menu_item", wp_slash($original_object_id)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: post_meta
inc/importers/wxr-importer/class-wxr-importer.php:1163
  - STORAGE call to update_post_meta($post_id, "_menu_item_object_id", wp_slash($object_id)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/importers/wxr-importer/class-wxr-importer.php:1307
  - STORAGE call to add_post_meta($post_id, $key, $value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: post_meta
inc/importers/wxr-importer/class-wxr-importer.php:1516
  - STORAGE call to add_comment_meta($comment_id, wp_slash($meta_item["key"]), wp_slash($value)) alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: comment_meta
inc/importers/wxr-importer/class-wxr-importer.php:1701
  - STORAGE call to wp_insert_user(wp_slash($userdata)) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
inc/importers/wxr-importer/class-wxr-importer.php:2143
  - STORAGE call to wp_update_post($data, true). Passed arguments: 1: $wp_error (bool), 0: $postarr (array|object). Returns (int|WP_Error).
inc/importers/wxr-importer/class-wxr-importer.php:2158
  - STORAGE call to delete_post_meta($post_id, "_wxr_import_parent") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/importers/wxr-importer/class-wxr-importer.php:2159
  - STORAGE call to delete_post_meta($post_id, "_wxr_import_user_slug") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/importers/wxr-importer/class-wxr-importer.php:2160
  - STORAGE call to delete_post_meta($post_id, "_wxr_import_has_attachment_refs") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/importers/wxr-importer/class-wxr-importer.php:2197
  - STORAGE call to update_post_meta($post_id, "_menu_item_object_id", wp_slash($menu_object)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/importers/wxr-importer/class-wxr-importer.php:2218
  - STORAGE call to delete_post_meta($post_id, "_wxr_import_menu_item") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/importers/wxr-importer/class-wxr-importer.php:2300
  - STORAGE call to delete_comment_meta($comment_id, "_wxr_import_parent") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: comment_meta
inc/importers/wxr-importer/class-wxr-importer.php:2301
  - STORAGE call to delete_comment_meta($comment_id, "_wxr_import_user") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: comment_meta
inc/importers/wxr-importer/class-wxr-importer.php:2335
  - STORAGE call to update_post_meta($post_id, "_thumbnail_id", $new_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/lib/astra-notices/class-astra-notices.php:126
  - STORAGE call to set_transient($notice_id, true, $repeat_notice_after) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
inc/lib/astra-notices/class-astra-notices.php:128
  - STORAGE call to update_user_meta(get_current_user_id(), $notice_id, "notice-dismissed") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/lib/astra-notices/class-astra-notices.php:350
  - STORAGE call to set_transient($notice["id"], "delayed-notice", $notice["display-notice-after"]) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
inc/lib/astra-notices/class-astra-notices.php:351
  - STORAGE call to update_user_meta(get_current_user_id(), $notice["id"], "delayed-notice") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/lib/gutenberg-templates/classes/class-ast-block-templates-image-importer.php:229
  - STORAGE call to update_post_meta($post_id, "_ast_block_templates_image_hash", $this->get_hash_image($attachment["url"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/lib/gutenberg-templates/classes/class-ast-block-templates.php:110
  - STORAGE call to wp_insert_post(["post_title" => $title, "post_status" => "publish", "post_type" => "wpforms", "post_excerpt" => $desc]). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
inc/lib/gutenberg-templates/classes/class-ast-block-templates.php:128
  - STORAGE call to wp_update_post(["ID" => $new_id, "post_content" => wpforms_encode($form)]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
inc/lib/gutenberg-templates/classes/class-ast-block-templates.php:144
  - STORAGE call to update_option("ast_block_templates_wpforms_ids_mapping", $ids_mapping) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/lib/onboarding/classes/class-astra-sites-onboarding-setup.php:58
  - STORAGE call to update_option("astra_sites_cached_import_error", $posted_data, "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
inc/lib/onboarding/classes/class-astra-sites-onboarding-setup.php:68
  - STORAGE call to delete_transient("astra_sites_import_started") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).
  - Data types: site
inc/lib/onboarding/classes/class-astra-sites-onboarding-setup.php:202
  - STORAGE call to update_option("blogname", $business_name) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/lib/onboarding/classes/class-astra-sites-onboarding-setup.php:255
  - STORAGE call to update_option("astra-color-palettes", $color_palettes) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/lib/onboarding/classes/class-astra-sites-reporting.php:58
  - STORAGE call to update_option("astra_sites_has_sent_error_report", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/lib/onboarding/classes/class-astra-sites-reporting.php:93
  - STORAGE call to update_option("astra_sites_has_sent_error_report", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/lib/onboarding/classes/class-astra-sites-reporting.php:94
  - STORAGE call to delete_option("astra_sites_cached_import_error") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

inc/classes/class-astra-sites-importer-log.php:227
  - CRYPTOGRAPHY call to wp_hash("starter-templates-log"). Passed arguments: 0: $data (string). Returns (string).
inc/importers/batch-processing/helpers/class-astra-sites-image-importer.php:128
  - CRYPTOGRAPHY call to $this->get_hash_image($attachment["url"]).
inc/importers/batch-processing/helpers/class-astra-sites-image-importer.php:237
  - CRYPTOGRAPHY call to $this->get_hash_image($attachment["url"]).
inc/importers/wxr-importer/class-astra-wxr-importer.php:90
  - CRYPTOGRAPHY call to Astra_Sites_Image_Importer->get_instance()->get_hash_image($remote_url).
inc/lib/gutenberg-templates/classes/class-ast-block-templates-image-importer.php:126
  - CRYPTOGRAPHY call to $this->get_hash_image($attachment["url"]).
inc/lib/gutenberg-templates/classes/class-ast-block-templates-image-importer.php:229
  - CRYPTOGRAPHY call to $this->get_hash_image($attachment["url"]). 

inc/classes/class-astra-sites-importer.php:100
  - DELETION call to delete_option("astra_sites_import_data") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/classes/class-astra-sites-importer.php:751
  - DELETION call to delete_option("astra-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/classes/class-astra-sites-importer.php:783
  - DELETION call to delete_option($option_key) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/classes/class-astra-sites-importer.php:889
  - DELETION call to wp_delete_post($post_id, true) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post_meta, post, wp_post
inc/classes/class-astra-sites-importer.php:929
  - DELETION call to wp_delete_post($post_id, true) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post_meta, post, wp_post
inc/classes/class-astra-sites-importer.php:970
  - DELETION call to wp_delete_term($term_id, $term->taxonomy) alters data types {'term'}. Passed arguments: 0: $term (int), 1: $taxonomy (string). Returns (bool|int|WP_Error).
  - Data types: term
inc/classes/class-astra-sites.php:383
  - DELETION call to delete_option("astra_sites_has_sent_error_report") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/classes/class-astra-sites.php:384
  - DELETION call to delete_option("astra_sites_cached_import_error") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/classes/class-astra-sites.php:1199
  - DELETION call to wp_delete_term($term_id, $term->taxonomy) alters data types {'term'}. Passed arguments: 0: $term (int), 1: $taxonomy (string). Returns (bool|int|WP_Error).
  - Data types: term
inc/classes/class-astra-sites.php:1216
  - DELETION call to wp_delete_post($post_id, true) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post_meta, post, wp_post
inc/classes/class-astra-sites.php:1263
  - DELETION call to wp_delete_post($post_id, true) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post_meta, post, wp_post
inc/classes/class-astra-sites.php:1272
  - DELETION call to delete_option($tax"_children") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/importers/batch-processing/class-astra-sites-batch-processing.php:848
  - DELETION call to wp_delete_attachment($wxr_id, true) alters data types {'attachment_meta', 'attachment'}. Passed arguments: 0: $post_id (int), 1: $force_delete (bool). Returns (WP_Post|false|null).
  - Data types: attachment_meta, attachment
inc/importers/batch-processing/class-astra-sites-batch-processing.php:850
  - DELETION call to delete_option("astra_sites_imported_wxr_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/importers/batch-processing/helpers/class-wp-background-process-astra.php:64
  - DELETION call to delete_option("astra_sites_recent_import_log_file") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/importers/batch-processing/helpers/class-wp-background-process.php:259
  - DELETION call to delete_site_transient($this->identifier . "_process_lock"). Passed arguments: 0: $transient (string). Returns (bool).
inc/importers/wxr-importer/class-wxr-importer.php:653
  - DELETION call to delete_option($tax"_children") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/importers/wxr-importer/class-wxr-importer.php:2158
  - DELETION call to delete_post_meta($post_id, "_wxr_import_parent") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/importers/wxr-importer/class-wxr-importer.php:2159
  - DELETION call to delete_post_meta($post_id, "_wxr_import_user_slug") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/importers/wxr-importer/class-wxr-importer.php:2160
  - DELETION call to delete_post_meta($post_id, "_wxr_import_has_attachment_refs") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/importers/wxr-importer/class-wxr-importer.php:2218
  - DELETION call to delete_post_meta($post_id, "_wxr_import_menu_item") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/importers/wxr-importer/class-wxr-importer.php:2300
  - DELETION call to delete_comment_meta($comment_id, "_wxr_import_parent") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: comment_meta
inc/importers/wxr-importer/class-wxr-importer.php:2301
  - DELETION call to delete_comment_meta($comment_id, "_wxr_import_user") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: comment_meta
inc/lib/onboarding/classes/class-astra-sites-reporting.php:94
  - DELETION call to delete_option("astra_sites_cached_import_error") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

By data type:
address
	VariableDetector.(unknown) - {'ip', 'address'}
	VariableDetector.(unknown) - {'ip', 'address'}
	VariableDetector.(unknown) - {'ip', 'address'}
	VariableDetector.(unknown) - {'ip', 'address'}
	VariableDetector.(unknown) - {'ip', 'address'}
	VariableDetector.(unknown) - {'ip', 'address'}
	VariableDetector.(unknown) - {'ip', 'address'}
	VariableDetector.(unknown) - {'ip', 'address'}
	VariableDetector.(unknown) - {'ip', 'address'}
attachment
	DeletionDetector.wp_delete_attachment($wxr_id, true) - {'attachment_meta', 'attachment'}
attachment_meta
	DeletionDetector.wp_delete_attachment($wxr_id, true) - {'attachment_meta', 'attachment'}
comment_meta
	WordPressStorageDetector.delete_comment_meta($comment_id, "_wxr_import_user") - {'comment_meta'}
	WordPressStorageDetector.delete_comment_meta($comment_id, "_wxr_import_parent") - {'comment_meta'}
	WordPressStorageDetector.add_comment_meta($comment_id, wp_slash($meta_item["key"]), wp_slash($value)) - {'comment_meta'}
	DeletionDetector.delete_comment_meta($comment_id, "_wxr_import_parent") - {'comment_meta'}
	DeletionDetector.delete_comment_meta($comment_id, "_wxr_import_user") - {'comment_meta'}
	WordPressRetrievalDetector.get_comment_meta($comment_id, "_wxr_import_parent", true) - {'comment_meta'}
	WordPressRetrievalDetector.get_comment_meta($comment_id, "_wxr_import_user", true) - {'comment_meta'}
email
	PropertyDetector.(unknown) - {'email'}
file
	PHPRetrievalDetector.file_get_contents($data["path"] . "/version.json") - {'file'}
	PHPRetrievalDetector.file_get_contents($file) - {'file'}
ip
	VariableDetector.(unknown) - {'ip', 'address'}
	VariableDetector.(unknown) - {'ip', 'address'}
	VariableDetector.(unknown) - {'ip', 'address'}
	VariableDetector.(unknown) - {'ip', 'address'}
	VariableDetector.(unknown) - {'ip', 'address'}
	VariableDetector.(unknown) - {'ip', 'address'}
	VariableDetector.(unknown) - {'ip', 'address'}
	VariableDetector.(unknown) - {'ip', 'address'}
	VariableDetector.(unknown) - {'ip', 'address'}
meta
	WordPressStorageDetector.update_metadata("post", $post_id, "_elementor_data", $data) - {'meta'}
	WordPressStorageDetector.update_metadata("post", $post_id, "_astra_sites_hotlink_imported", true) - {'meta'}
	WordPressStorageDetector.update_metadata("post", $post_id, "_elementor_data", $data) - {'meta'}
none
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	DeletionDetector.delete_site_transient($this->identifier . "_process_lock") - set()
	PHPIncludedDetector.(unknown) - set()
	WordPressStorageDetector.wp_update_post($data, true) - set()
	PHPIncludedDetector.(unknown) - set()
	WordPressStorageDetector.wp_update_post(["ID" => $new_id, "post_content" => wpforms_encode($form)]) - set()
	PHPIncludedDetector.(unknown) - set()
	GenericEncryptionDetector.$this->get_hash_image($attachment["url"]) - set()
	WordPressRetrievalDetector.$this->get_posts("astra-sites", $args, $force) - set()
	WordPressRetrievalDetector.wp_update_comment(wp_slash($data)) - set()
	WordPressRetrievalDetector.get_posts($args) - set()
	WordPressStorageDetector.wp_insert_post($post_args) - set()
	WordPressStorageDetector.wp_insert_post(["post_title" => $title, "post_status" => "publish", "post_type" => "wpforms", "post_excerpt" => $desc]) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	WordPressStorageDetector.wp_insert_post($post_args) - set()
	WordPressStorageDetector.wp_update_post(["ID" => $new_id, "post_content" => wpforms_encode($form)]) - set()
	GenericEncryptionDetector.$this->get_hash_image($attachment["url"]) - set()
	WordPressStorageDetector.wp_update_post(["ID" => $post_id, "post_content" => $content, "post_excerpt" => ""]) - set()
	WordPressStorageDetector.wp_update_post(["ID" => $post_id, "post_excerpt" => ""]) - set()
	WordPressStorageDetector.wp_insert_post($postdata, true) - set()
	GenericEncryptionDetector.$this->get_hash_image($attachment["url"]) - set()
	WordPressRetrievalDetector.wp_insert_comment(wp_slash($comment)) - set()
	WordPressStorageDetector.wp_insert_post(["post_title" => $title, "post_status" => "publish", "post_type" => "wpforms", "post_excerpt" => $desc]) - set()
	GenericEncryptionDetector.Astra_Sites_Image_Importer->get_instance()->get_hash_image($remote_url) - set()
	GenericEncryptionDetector.wp_hash("starter-templates-log") - set()
	GenericEncryptionDetector.$this->get_hash_image($attachment["url"]) - set()
option
	WordPressRetrievalDetector.get_option("astra_sites_import_data", []) - {'option'}
	WordPressRetrievalDetector.get_option("_astra_sites_old_site_options", []) - {'option'}
	WordPressStorageDetector.delete_option("astra_sites_has_sent_error_report") - {'option'}
	WordPressRetrievalDetector.get_option("astra_sites_import_data", []) - {'option'}
	WordPressStorageDetector.update_option("astra-sites-license-page-builder", "", "no") - {'option'}
	WordPressStorageDetector.update_option("astra-sites-saved-images", $saved_images, "no") - {'option'}
	WordPressStorageDetector.update_option($option_name, $page->ID) - {'option'}
	WordPressRetrievalDetector.get_option("astra_sites_wpforms_ids_mapping", []) - {'option'}
	WordPressStorageDetector.update_option("elementor_load_fa4_shim", $data["astra-page-options-data"]["elementor_load_fa4_shim"]) - {'option'}
	WordPressStorageDetector.update_option("astra_sites_import_complete", "yes", "no") - {'option'}
	WordPressStorageDetector.update_option("widget_" . $id_base, $single_widget_instances) - {'option'}
	WordPressStorageDetector.update_option("astra_sites_import_data", $demo_data, "no") - {'option'}
	DeletionDetector.delete_option($option_key) - {'option'}
	WordPressStorageDetector.update_option("widget_text", $data) - {'option'}
	WordPressRetrievalDetector.get_option("astra_sites_import_data", []) - {'option'}
	DeletionDetector.delete_option("astra_sites_cached_import_error") - {'option'}
	WordPressStorageDetector.update_option("st_attachments", [], "no") - {'option'}
	DeletionDetector.delete_option($tax"_children") - {'option'}
	WordPressStorageDetector.update_option("astra_sites_settings", $data, "no") - {'option'}
	WordPressStorageDetector.update_option("sidebars_widgets", $sidebars_widgets) - {'option'}
	WordPressRetrievalDetector.get_option("astra_sites_wpforms_ids_mapping", []) - {'option'}
	WordPressStorageDetector.delete_option("astra_sites_cached_import_error") - {'option'}
	WordPressStorageDetector.update_option("widget_wpforms-widget", $data) - {'option'}
	WordPressRetrievalDetector.get_option("widget_" . $id_base) - {'option'}
	WordPressRetrievalDetector.get_option("sidebars_widgets") - {'option'}
	DeletionDetector.delete_option("astra_sites_recent_import_log_file") - {'option'}
	WordPressRetrievalDetector.get_option("st_attachments", []) - {'option'}
	WordPressStorageDetector.delete_option("astra-settings") - {'option'}
	WordPressRetrievalDetector.get_option("sidebars_widgets", []) - {'option'}
	WordPressStorageDetector.update_option("_astra_sites_old_site_options", $options_data, "no") - {'option'}
	WordPressRetrievalDetector.get_option("astra_sites_settings", $defaults) - {'option'}
	WordPressRetrievalDetector.get_option("astra_sites_recent_import_log_file", self"log_file") - {'option'}
	WordPressRetrievalDetector.get_option("astra_sites_import_data", []) - {'option'}
	WordPressStorageDetector.update_option("astra_sites_settings", $new_data, "no") - {'option'}
	WordPressRetrievalDetector.get_option("astra_sites_wpforms_ids_mapping", []) - {'option'}
	WordPressRetrievalDetector.get_option("gmt_offset") - {'option'}
	WordPressStorageDetector.update_option("astra_sites_import_data", $this->current_site_data, "no") - {'option'}
	WordPressRetrievalDetector.get_option("astra_sites_import_data", []) - {'option'}
	WordPressStorageDetector.update_option($option_name, $option_value) - {'option'}
	WordPressStorageDetector.update_option("_astra_sites_gettings_started", "yes", "no") - {'option'}
	WordPressRetrievalDetector.get_option("timezone_string") - {'option'}
	WordPressStorageDetector.update_option("widget_media_image", $data) - {'option'}
	WordPressRetrievalDetector.get_option("astra_sites_recent_import_log_file", false) - {'option'}
	WordPressRetrievalDetector.get_option("astra-sites-all-site-categories-and-tags", []) - {'option'}
	WordPressStorageDetector.update_option("astra-settings", $options["astra-settings"]) - {'option'}
	WordPressRetrievalDetector.get_option("astra-settings", []) - {'option'}
	WordPressRetrievalDetector.get_option("widget_text", null) - {'option'}
	WordPressStorageDetector.update_option("ast_block_templates_wpforms_ids_mapping", $ids_mapping) - {'option'}
	WordPressStorageDetector.delete_option($tax"_children") - {'option'}
	WordPressStorageDetector.update_option("blogname", $business_name) - {'option'}
	WordPressRetrievalDetector.get_option("astra-sites-license-page-builder", "") - {'option'}
	DeletionDetector.delete_option("astra_sites_cached_import_error") - {'option'}
	WordPressStorageDetector.update_option("astra-sites-license-page-builder", "elementor", "no") - {'option'}
	DeletionDetector.delete_option($tax"_children") - {'option'}
	DeletionDetector.delete_option("astra_sites_has_sent_error_report") - {'option'}
	WordPressRetrievalDetector.get_option("astra_sites_wpforms_ids_mapping", []) - {'option'}
	WordPressRetrievalDetector.get_option("astra_sites_import_data", []) - {'option'}
	WordPressStorageDetector.update_option("astra_sites_cached_import_error", $posted_data, "no") - {'option'}
	WordPressRetrievalDetector.get_option("widget_media_image", null) - {'option'}
	WordPressRetrievalDetector.get_option("ast_block_templates_wpforms_ids_mapping", []) - {'option'}
	WordPressRetrievalDetector.get_option("_astra_sites_gettings_started", "no") - {'option'}
	WordPressRetrievalDetector.get_option("gmt_offset") - {'option'}
	WordPressRetrievalDetector.get_option("astra_sites_import_data", []) - {'option'}
	WordPressRetrievalDetector.get_option("astra_sites_import_complete", "") - {'option'}
	WordPressRetrievalDetector.get_option("timezone_string") - {'option'}
	WordPressRetrievalDetector.get_option("astra_sites_recent_import_log_file", false) - {'option'}
	WordPressRetrievalDetector.get_option("astra_sites_import_data", []) - {'option'}
	WordPressStorageDetector.update_option("astra_sites_has_sent_error_report", "yes") - {'option'}
	WordPressRetrievalDetector.get_option("astra_sites_cached_import_error", false) - {'option'}
	WordPressRetrievalDetector.get_option("astra_sites_site_import_batch_status", []) - {'option'}
	WordPressStorageDetector.update_option("astra-sites-favorites", $new_favorites, "no") - {'option'}
	WordPressStorageDetector.update_option("elementor_active_kit", $query[0]->ID) - {'option'}
	WordPressRetrievalDetector.get_option("st-brizy-builder-flag") - {'option'}
	WordPressRetrievalDetector.get_option("st-brizy-builder-flag") - {'option'}
	WordPressRetrievalDetector.get_option("astra-sites-saved-images", []) - {'option'}
	WordPressRetrievalDetector.get_option("astra_sites_has_sent_error_report", "no") - {'option'}
	WordPressStorageDetector.delete_option($tax"_children") - {'option'}
	WordPressRetrievalDetector.get_option("astra-color-palettes", Astra_Global_Palette->get_default_color_palette()) - {'option'}
	WordPressStorageDetector.update_option("astra_sites_" . $file_name, $old_settings, "no") - {'option'}
	WordPressStorageDetector.delete_option($option_key) - {'option'}
	WordPressRetrievalDetector.get_option("astra_sites_recent_import_log_file", false) - {'option'}
	WordPressStorageDetector.update_option("elementor_load_fa4_shim", $_POST["data"]["astra-page-options-data"]["elementor_load_fa4_shim"]) - {'option'}
	WordPressRetrievalDetector.get_option("astra_sites_import_data", []) - {'option'}
	WordPressRetrievalDetector.get_option("widget_wpforms-widget", null) - {'option'}
	WordPressRetrievalDetector.get_option("astra_sites_wpforms_ids_mapping", []) - {'option'}
	WordPressStorageDetector.update_option("st_attachments", $all_attachments, "no") - {'option'}
	WordPressRetrievalDetector.get_option("astra-settings", []) - {'option'}
	WordPressRetrievalDetector.get_option("astra_sites_import_complete", false) - {'option'}
	WordPressStorageDetector.update_option($option, $value) - {'option'}
	WordPressStorageDetector.update_option("astra-sites-saved-images", $saved_images, "no") - {'option'}
	WordPressRetrievalDetector.get_option("astra_sites_wpforms_ids_mapping", []) - {'option'}
	WordPressRetrievalDetector.get_option("astra_sites_import_data", []) - {'option'}
	DeletionDetector.delete_option("astra_sites_imported_wxr_id") - {'option'}
	WordPressStorageDetector.update_option("uabb_lite_redirect", false) - {'option'}
	WordPressRetrievalDetector.get_option("astra_sites_import_data", []) - {'option'}
	WordPressStorageDetector.update_option("astra_sites_site_import_batch_status", $args, "no") - {'option'}
	WordPressRetrievalDetector.get_option("st_attachments", []) - {'option'}
	WordPressStorageDetector.update_option("astra_sites_import_data", $this->current_site_data, "no") - {'option'}
	WordPressRetrievalDetector.get_option("_astra_sites_old_widgets_data", []) - {'option'}
	WordPressStorageDetector.update_option("astra_sites_wpforms_ids_mapping", $ids_mapping, "no") - {'option'}
	WordPressRetrievalDetector.get_option("astra-settings", []) - {'option'}
	WordPressRetrievalDetector.get_option("astra_sites_wpforms_ids_mapping", []) - {'option'}
	WordPressRetrievalDetector.get_option("sidebars_widgets", []) - {'option'}
	WordPressStorageDetector.delete_option("astra_sites_recent_import_log_file") - {'option'}
	WordPressRetrievalDetector.get_option("astra_sites_import_data", []) - {'option'}
	WordPressStorageDetector.update_option("_astra_sites_old_customizer_data", $customizer_data, "no") - {'option'}
	WordPressRetrievalDetector.get_option("astra_sites_import_data", []) - {'option'}
	WordPressStorageDetector.update_option("sidebars_widgets", $sidebars_widgets) - {'option'}
	WordPressRetrievalDetector.get_option("astra_sites_import_data", []) - {'option'}
	WordPressRetrievalDetector.get_option("astra-sites-license-page-builder", "") - {'option'}
	WordPressRetrievalDetector.get_option("astra-sites-all-site-categories", []) - {'option'}
	WordPressRetrievalDetector.get_option("astra-sites-favorites") - {'option'}
	WordPressRetrievalDetector.get_option("astra-sites-saved-images", []) - {'option'}
	WordPressRetrievalDetector.Astra_Sites_White_Label->get_instance()->get_option("astra", "name", "Astra") - {'option'}
	WordPressRetrievalDetector.get_option("astra-sites-saved-images", []) - {'option'}
	WordPressRetrievalDetector.get_option("widget_" . $widget_data["id_base"]) - {'option'}
	WordPressRetrievalDetector.get_option("sidebars_widgets") - {'option'}
	WordPressRetrievalDetector.get_option("astra_sites_import_data", []) - {'option'}
	WordPressRetrievalDetector.get_option("astra-sites-favorites") - {'option'}
	WordPressRetrievalDetector.get_option("astra-sites-saved-images", []) - {'option'}
	WordPressRetrievalDetector.get_option("astra_sites_import_data", []) - {'option'}
	WordPressStorageDetector.delete_option("astra_sites_import_data") - {'option'}
	WordPressStorageDetector.update_option("astra-sites-license-page-builder", "beaver-builder", "no") - {'option'}
	WordPressRetrievalDetector.get_option("astra_sites_settings", []) - {'option'}
	WordPressRetrievalDetector.get_option("astra-sites-favorites", []) - {'option'}
	WordPressStorageDetector.update_option("__uagb_do_redirect", false) - {'option'}
	WordPressRetrievalDetector.get_option("astra_sites_recent_import_log_file", self"log_file") - {'option'}
	WordPressStorageDetector.delete_option("astra_sites_imported_wxr_id") - {'option'}
	WordPressStorageDetector.update_option("_astra_sites_old_widgets_data", $sidebars_widgets, "no") - {'option'}
	WordPressRetrievalDetector.get_option("astra_sites_import_complete") - {'option'}
	WordPressStorageDetector.update_option("astra_sites_imported_wxr_id", $post_id, "no") - {'option'}
	DeletionDetector.delete_option("astra_sites_import_data") - {'option'}
	WordPressStorageDetector.update_option("astra_sites_has_sent_error_report", "no") - {'option'}
	WordPressStorageDetector.update_option("astra-settings", $options) - {'option'}
	WordPressStorageDetector.update_option("astra_sites_recent_import_log_file", self"log_file", "no") - {'option'}
	WordPressStorageDetector.delete_option("astra_sites_cached_import_error") - {'option'}
	DeletionDetector.delete_option("astra-settings") - {'option'}
	WordPressStorageDetector.update_option("astra-color-palettes", $color_palettes) - {'option'}
post
	WordPressStorageDetector.wp_delete_post($post_id, true) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.wp_delete_post($post_id, true) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.wp_delete_post($post_id, true) - {'post_meta', 'post', 'wp_post'}
	DeletionDetector.wp_delete_post($post_id, true) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.wp_delete_post($post_id, true) - {'post_meta', 'post', 'wp_post'}
	DeletionDetector.wp_delete_post($post_id, true) - {'post_meta', 'post', 'wp_post'}
	DeletionDetector.wp_delete_post($post_id, true) - {'post_meta', 'post', 'wp_post'}
	DeletionDetector.wp_delete_post($post_id, true) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_field("post_content", $post_id) - {'post_meta', 'post', 'wp_post'}
post_meta
	WordPressRetrievalDetector.get_post_meta($post_id, "_elementor_data", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_menu_item_object_id", wp_slash($menu_object)) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post_id, "_wxr_import_parent") - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post_id, "_wxr_import_has_attachment_refs") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, $meta_key, true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($new_page_id, "_elementor_template_type", "page") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_menu_item_url", $menu_url) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "brizy_post_uid", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($new_page_id, "_elementor_template_type", "section") - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post_id, "_wxr_import_user_slug") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_menu_item_object_id", wp_slash($object_id)) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_astra_sites_image_hash", $this->get_hash_image($attachment["url"])) - {'post_meta'}
	WordPressStorageDetector.add_post_meta($post_id, $key, $value) - {'post_meta'}
	WordPressStorageDetector.wp_delete_post($post_id, true) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($new_page_id, "_astra_sites_enable_for_batch", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "_elementor_version", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($new_page_id, "_wp_page_template", "elementor_header_footer") - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post_id, "_wxr_import_menu_item") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "_astra_sites_enable_for_batch", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, $meta_key, $location_new) - {'post_meta'}
	WordPressStorageDetector.wp_delete_post($post_id, true) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($post_id, $meta_key, $headers_new) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($course->ID, "_sfwd-courses", $ld_meta) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_ast_block_templates_image_hash", $this->get_hash_image($attachment["url"])) - {'post_meta'}
	DeletionDetector.delete_post_meta($post_id, "_wxr_import_menu_item") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "_wxr_import_has_attachment_refs", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($post_id, "_astra_sites_enable_for_batch", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "_astra_sites_enable_for_batch", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_thumbnail_id", $new_id) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "_wxr_import_user_slug", true) - {'post_meta'}
	WordPressStorageDetector.wp_delete_post($post_id, true) - {'post_meta', 'post', 'wp_post'}
	DeletionDetector.wp_delete_post($post_id, true) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($post_id, $meta_key, $raw_data) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "_menu_item_type", true) - {'post_meta'}
	WordPressStorageDetector.wp_delete_post($post_id, true) - {'post_meta', 'post', 'wp_post'}
	DeletionDetector.wp_delete_post($post_id, true) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($post_id, "_wxr_import_parent", true) - {'post_meta'}
	DeletionDetector.wp_delete_post($post_id, true) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($post_id, "_elementor_source_image_hash", $attachment_hash_url) - {'post_meta'}
	DeletionDetector.wp_delete_post($post_id, true) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($new_page_id, "_wp_page_template", "elementor_header_footer") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($course->ID, "_sfwd-courses", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_astra_sites_imported_post", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_field("post_content", $post_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($post_id, "_fl_builder_enabled", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($downloaded_image["id"], $meta_key, $meta_value) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "_menu_item_url", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($new_page_id, "_astra_sites_enable_for_batch", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "_fl_builder_enabled", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, $meta_key, $raw_data) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "brizy_post_uid", true) - {'post_meta'}
	WordPressStorageDetector.add_post_meta($post_id, "_wxr_import_menu_item", wp_slash($original_object_id)) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "_astra_sites_enable_for_batch", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "_menu_item_object_id", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "_elementor_version", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_fl_builder_data", $data) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "_elementor_version", true) - {'post_meta'}
	WordPressStorageDetector.add_post_meta($id, "_source_url", $url) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($id, "_wp_attachment_image_alt", $name) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "_fl_builder_data", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($id, "astra-images", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "_menu_item_type", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($id, "astra-images", $photo_id) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "_astra_sites_enable_for_batch", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($new_id, "_astra_sites_imported_wp_forms", true) - {'post_meta'}
	DeletionDetector.delete_post_meta($post_id, "_wxr_import_user_slug") - {'post_meta'}
	WordPressStorageDetector.add_post_meta($post_id, "_wxr_import_menu_item", wp_slash($original_object_id)) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_wp_page_template", "elementor_header_footer") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_fl_builder_draft", $data) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_astra_sites_image_hash", $attachment_hash_url) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($image, "_astra_sites_imported_post", true) - {'post_meta'}
	DeletionDetector.delete_post_meta($post_id, "_wxr_import_has_attachment_refs") - {'post_meta'}
	DeletionDetector.delete_post_meta($post_id, "_wxr_import_parent") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "_wxr_import_menu_item", true) - {'post_meta'}
remote
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	jQueryRequestDetector.(unknown) - {'remote'}
site
	WordPressStorageDetector.delete_transient("astra_sites_import_started") - {'site'}
	WordPressStorageDetector.delete_transient("_fl_builder_activation_admin_notice") - {'site'}
	WordPressStorageDetector.set_transient("astra-sites-post-" . $post_slug, $all_posts, WEEK_IN_SECONDS) - {'site'}
	WordPressStorageDetector.set_transient("astra_sites_batch_process_started", "yes", HOUR_IN_SECONDS) - {'site'}
	WordPressRetrievalDetector.get_transient("astra-sites-cron-test-ok") - {'site'}
	WordPressStorageDetector.set_transient("astra-sites-cron-test-ok", 1, 3600) - {'site'}
	WordPressStorageDetector.set_transient($notice["id"], "delayed-notice", $notice["display-notice-after"]) - {'site'}
	WordPressStorageDetector.set_transient($notice_id, true, $repeat_notice_after) - {'site'}
	WordPressRetrievalDetector.get_transient("astra-sites-post-" . $post_slug) - {'site'}
	WordPressRetrievalDetector.get_transient("wpforms_activation_redirect") - {'site'}
	WordPressStorageDetector.delete_transient("astra_sites_batch_process_started") - {'site'}
	WordPressRetrievalDetector.get_transient("astra-sites-term-" . $term_slug) - {'site'}
	WordPressStorageDetector.delete_transient("wpforms_activation_redirect") - {'site'}
	WordPressStorageDetector.delete_transient("wc_attribute_taxonomies") - {'site'}
	WordPressStorageDetector.set_transient("astra-sites-term-" . $term_slug, $new_terms_data, WEEK_IN_SECONDS) - {'site'}
	WordPressRetrievalDetector.get_transient($notice["id"]) - {'site'}
	WordPressStorageDetector.set_transient("astra_sites_import_started", "yes", HOUR_IN_SECONDS) - {'site'}
	WordPressStorageDetector.delete_transient("astra_sites_import_started") - {'site'}
	WordPressRetrievalDetector.get_transient("astra_sites_import_started") - {'site'}
term
	DeletionDetector.wp_delete_term($term_id, $term->taxonomy) - {'term'}
	DeletionDetector.wp_delete_term($term_id, $term->taxonomy) - {'term'}
user
	WordPressStorageDetector.wp_insert_user(wp_slash($userdata)) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
user_meta
	WordPressStorageDetector.wp_insert_user(wp_slash($userdata)) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta(get_current_user_id(), $notice["id"], true) - {'user_meta'}
	WordPressStorageDetector.update_user_meta(get_current_user_ID(), "astra-sites-subscribed", "yes") - {'user_meta'}
	WordPressStorageDetector.update_user_meta(get_current_user_id(), $notice["id"], "delayed-notice") - {'user_meta'}
	WordPressStorageDetector.update_user_meta(get_current_user_id(), $notice_id, "notice-dismissed") - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta(get_current_user_ID(), "astra-sites-subscribed", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta(get_current_user_ID(), "astra-sites-subscribed", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta(get_current_user_id(), $notice["id"], true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta(get_current_user_id(), $notice["id"], true) - {'user_meta'}
wp_post
	WordPressStorageDetector.wp_delete_post($post_id, true) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.wp_delete_post($post_id, true) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.wp_delete_post($post_id, true) - {'post_meta', 'post', 'wp_post'}
	DeletionDetector.wp_delete_post($post_id, true) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.wp_delete_post($post_id, true) - {'post_meta', 'post', 'wp_post'}
	DeletionDetector.wp_delete_post($post_id, true) - {'post_meta', 'post', 'wp_post'}
	DeletionDetector.wp_delete_post($post_id, true) - {'post_meta', 'post', 'wp_post'}
	DeletionDetector.wp_delete_post($post_id, true) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_field("post_content", $post_id) - {'post_meta', 'post', 'wp_post'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:01:13.030635.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 5189 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:02.262544.

!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 65893
1000 STORE_REACHES edges created
2000 STORE_REACHES edges created
3000 STORE_REACHES edges created
4000 STORE_REACHES edges created
5000 STORE_REACHES edges created
5189 STORE_REACHES edges created
5189 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 84 nodes as PERSONAL
In total, tainted 84 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 1000 nodes as ENCRYPTED
Tainted 1469 nodes as ENCRYPTED
In total, tainted 1469 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:01:23.668899.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:08:37.165565!
DELETION call to delete_option("astra_sites_import_data") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("astra-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option($option_key) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to wp_delete_post($post_id, true) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
DELETION call to wp_delete_post($post_id, true) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
DELETION call to wp_delete_term($term_id, $term->taxonomy) alters data types {'term'}. Passed arguments: 0: $term (int), 1: $taxonomy (string). Returns (bool|int|WP_Error).,None,None
DELETION call to wp_delete_term($term_id, $term->taxonomy) alters data types {'term'}. Passed arguments: 0: $term (int), 1: $taxonomy (string). Returns (bool|int|WP_Error).,None,None
DELETION call to wp_delete_post($post_id, true) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
DELETION call to wp_delete_post($post_id, true) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
DELETION call to delete_option($tax"_children") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("astra_sites_has_sent_error_report") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("astra_sites_cached_import_error") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to wp_delete_attachment($wxr_id, true) alters data types {'attachment_meta', 'attachment'}. Passed arguments: 0: $post_id (int), 1: $force_delete (bool). Returns (WP_Post|false|null).,None,None
DELETION call to delete_option("astra_sites_imported_wxr_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("astra_sites_recent_import_log_file") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_site_transient($this->identifier . "_process_lock"). Passed arguments: 0: $transient (string). Returns (bool).,None,None
DELETION call to delete_post_meta($post_id, "_wxr_import_parent") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($post_id, "_wxr_import_user_slug") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($post_id, "_wxr_import_has_attachment_refs") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($post_id, "_wxr_import_menu_item") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_comment_meta($comment_id, "_wxr_import_parent") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_comment_meta($comment_id, "_wxr_import_user") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_option($tax"_children") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("astra_sites_cached_import_error") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
CRYPTOGRAPHY call to wp_hash("starter-templates-log"). Passed arguments: 0: $data (string). Returns (string).,None,None
CRYPTOGRAPHY call to $this->get_hash_image($attachment["url"]).,None,None
CRYPTOGRAPHY call to $this->get_hash_image($attachment["url"]).,None,None
CRYPTOGRAPHY call to Astra_Sites_Image_Importer->get_instance()->get_hash_image($remote_url).,None,None
CRYPTOGRAPHY call to $this->get_hash_image($attachment["url"]).,None,None
CRYPTOGRAPHY call to $this->get_hash_image($attachment["url"]).,None,None
SHA1 called with parameters [attachment_url]. Ignore if [attachment_url] does not contain personal information.,sha1,None
MD5 called with parameters [microtime, wp_rand]. Ignore if [microtime, wp_rand] does not contain personal information.,md5,None
SHA1 called with parameters [:, term, slug, taxonomy]. Ignore if [:, term, slug, taxonomy] does not contain personal information.,sha1,None
SHA1 called with parameters [:, slug, taxonomy, data]. Ignore if [:, slug, taxonomy, data] does not contain personal information.,sha1,None
SHA1 called with parameters [:, comment_author, item, comment_date]. Ignore if [:, comment_author, item, comment_date] does not contain personal information.,sha1,None
SHA1 called with parameters [:, comment_author, comment_date, data]. Ignore if [:, comment_author, comment_date, data] does not contain personal information.,sha1,None
SHA1 called with parameters [:, comment_author, comment_date, data]. Ignore if [:, comment_author, comment_date, data] does not contain personal information.,sha1,None
SHA1 called with parameters [:, item, slug, taxonomy]. Ignore if [:, item, slug, taxonomy] does not contain personal information.,sha1,None
SHA1 called with parameters [:, slug, taxonomy, data]. Ignore if [:, slug, taxonomy, data] does not contain personal information.,sha1,None
SHA1 called with parameters [:, slug, taxonomy, data]. Ignore if [:, slug, taxonomy, data] does not contain personal information.,sha1,None
SHA1 called with parameters [attachment_url]. Ignore if [attachment_url] does not contain personal information.,sha1,None
RETRIEVAL call to file_get_contents($data["path"] . "/version.json").,None,None
RETRIEVAL call to file_get_contents($file).,None,None
object property '$current_user->user_email' of personal types {'email'} is found.,,None
variable '$ipaddress' of personal types {'ip', 'address'} is found.,,None
variable '$ipaddress' of personal types {'ip', 'address'} is found.,,None
variable '$ipaddress' of personal types {'ip', 'address'} is found.,,None
variable '$ipaddress' of personal types {'ip', 'address'} is found.,,None
variable '$ipaddress' of personal types {'ip', 'address'} is found.,,None
variable '$ipaddress' of personal types {'ip', 'address'} is found.,,None
variable '$ipaddress' of personal types {'ip', 'address'} is found.,,None
variable '$ipaddress' of personal types {'ip', 'address'} is found.,,None
variable '$ipaddress' of personal types {'ip', 'address'} is found.,,None
API call to wp_remote_post($this->get_api_url() . "wp-json/bsf-core/v1/analytics/", ["body" => BSF_Analytics_Stats->instance()->get_stats(), "timeout" => 5, "blocking" => false]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_get($demo_api_uri, $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_post($cron_request["url"], $cron_request["args"]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_get($url, $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_get($url, $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_post($url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,['https://websitedemos.net/']
API call to wp_remote_post($this->search_analytics_url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_get($api_url). Passed arguments: 0: $url (string). Returns (array|WP_Error).,https,[]
API call to wp_remote_get($api_url). Passed arguments: 0: $url (string). Returns (array|WP_Error).,https,[]
API call to wp_remote_get($api_url, $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_get($api_url). Passed arguments: 0: $url (string). Returns (array|WP_Error).,https,['https://pixabay.com/api/']
API call to wp_remote_get(trailingslashit(Astra_Sites->get_instance()->get_api_domain()) . "wp-json/wp/v2/astra-sites-site-category/?hide_empty=true&_fields=id,name,slug&per_page=100", $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_get(trailingslashit(Astra_Sites->get_instance()->get_api_domain()) . "wp-json/wp/v2/blocks-category/?_fields=id,name,slug&per_page=100&hide_empty=1", $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_get($url, $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_get(trailingslashit(Astra_Sites->get_instance()->get_api_domain()) . "wp-json/wp/v2/astra-site-page-builder/?_fields=id,name,slug&site_url=" . $site_url . "&purchase_key=" . $purchase_key, $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_get($api_url, $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_get($api_url, $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_get(trailingslashit(Astra_Sites->get_instance()->get_api_domain()) . "wp-content/uploads/all-site-categories.json", $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_get(trailingslashit(Astra_Sites->get_instance()->get_api_domain()) . "wp-json/wp/v2/astra-sites-site-category/?hide_empty=true&_fields=id,name,slug&per_page=100", $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_get(trailingslashit(Astra_Sites->get_instance()->get_api_domain()) . "wp-json/astra-sites/v1/get-last-export-checksums", $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_get(trailingslashit(Astra_Sites->get_instance()->get_api_domain()) . "wp-json/astra-sites/v1/get-total-pages/?per_page=15", $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_get($api_url, $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_post(esc_url_raw($url), $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_get($url, ["stream" => true, "filename" => $upload["file"]]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_get($api_url, $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_get($api_url, $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_get($api_url, $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_get($api_url, $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_get($api_url, $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_get($api_url, $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_get($demo_api_uri, $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_post($api_url, $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_post(Astra_Sites->get_instance()->import_analytics_url, $api_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
RETRIEVAL call to get_option("timezone_string") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("gmt_offset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra_sites_import_complete", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra_sites_site_import_batch_status", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra_sites_import_data", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra_sites_import_data", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra_sites_import_data", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra_sites_import_data", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra_sites_import_data", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra_sites_import_data", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra_sites_import_data", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra_sites_wpforms_ids_mapping", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra_sites_import_data", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("st_attachments", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra_sites_recent_import_log_file", self"log_file") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra_sites_recent_import_log_file", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra_sites_recent_import_log_file", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra_sites_recent_import_log_file", self"log_file") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("timezone_string") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("gmt_offset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sidebars_widgets", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra_sites_import_data", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra-settings", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("_astra_sites_old_site_options", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("_astra_sites_old_widgets_data", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("sidebars_widgets", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra_sites_settings", $defaults) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra_sites_settings", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_transient("astra-sites-cron-test-ok") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("_astra_sites_gettings_started", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $this->get_posts("astra-sites", $args, $force). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_transient("astra-sites-term-" . $term_slug) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_transient("astra-sites-post-" . $post_slug) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra-settings", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra-sites-saved-images", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra-sites-favorites") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra-sites-favorites") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta(get_current_user_ID(), "astra-sites-subscribed", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to Astra_Sites_White_Label->get_instance()->get_option("astra", "name", "Astra") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra-sites-all-site-categories", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra-sites-all-site-categories-and-tags", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra-sites-license-page-builder", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra_sites_import_complete") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta(get_current_user_ID(), "astra-sites-subscribed", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_transient("wpforms_activation_redirect") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra-sites-saved-images", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($id, "astra-images", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra-sites-favorites", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra-sites-saved-images", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra-sites-saved-images", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra_sites_import_data", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, $meta_key, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra_sites_import_data", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($course->ID, "_sfwd-courses", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_transient("astra_sites_import_started") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra_sites_import_data", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "_astra_sites_enable_for_batch", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "_fl_builder_data", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra_sites_wpforms_ids_mapping", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra_sites_wpforms_ids_mapping", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "_fl_builder_enabled", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "_astra_sites_enable_for_batch", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra_sites_wpforms_ids_mapping", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "brizy_post_uid", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra-settings", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra_sites_wpforms_ids_mapping", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra_sites_import_data", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "_elementor_version", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "_astra_sites_enable_for_batch", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "_elementor_data", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "_astra_sites_enable_for_batch", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "_elementor_version", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "_fl_builder_enabled", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "brizy_post_uid", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra_sites_wpforms_ids_mapping", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_field("post_content", $post_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $field (string), 1: $post (int|WP_Post). Returns (string).,None,None
RETRIEVAL call to get_option("astra_sites_import_data", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra_sites_import_data", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "_menu_item_url", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("st_attachments", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra_sites_import_data", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("widget_text", null) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("widget_media_image", null) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra_sites_wpforms_ids_mapping", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("widget_wpforms-widget", null) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_option("widget_" . $widget_data["id_base"]) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sidebars_widgets") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("widget_" . $id_base) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("sidebars_widgets") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "_elementor_version", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "_menu_item_type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "_menu_item_object_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to wp_insert_comment(wp_slash($comment)). Passed arguments: 0: $commentdata (array). Returns (int|false).,None,None
RETRIEVAL call to get_post_meta($post_id, "_wxr_import_parent", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "_wxr_import_user_slug", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "_wxr_import_has_attachment_refs", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($post_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($post_id, "_wxr_import_menu_item", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "_menu_item_type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_comment_meta($comment_id, "_wxr_import_parent", true) alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_comment_meta($comment_id, "_wxr_import_user", true) alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to wp_update_comment(wp_slash($data)). Passed arguments: 0: $commentarr (array). Returns (int|false|WP_Error).,None,None
RETRIEVAL call to get_option("astra-sites-license-page-builder", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_transient($notice["id"]) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta(get_current_user_id(), $notice["id"], true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta(get_current_user_id(), $notice["id"], true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta(get_current_user_id(), $notice["id"], true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("ast_block_templates_wpforms_ids_mapping", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_option("astra_sites_import_complete", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("st-brizy-builder-flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("st-brizy-builder-flag") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra_sites_recent_import_log_file", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra-color-palettes", Astra_Global_Palette->get_default_color_palette()) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra_sites_has_sent_error_report", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("astra_sites_cached_import_error", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
STORAGE call to update_option("astra_sites_site_import_batch_status", $args, "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("astra_sites_import_data", $this->current_site_data, "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_metadata("post", $post_id, "_elementor_data", $data) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 2: $meta_key (string), 3: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("st_attachments", $all_attachments, "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("astra_sites_recent_import_log_file", self"log_file", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to delete_option("astra_sites_import_data") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to wp_insert_post(["post_title" => $title, "post_status" => "publish", "post_type" => "wpforms", "post_excerpt" => $desc]). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($new_id, "_astra_sites_imported_wp_forms", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_update_post(["ID" => $new_id, "post_content" => wpforms_encode($form)]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to update_option("astra_sites_wpforms_ids_mapping", $ids_mapping, "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("_astra_sites_old_customizer_data", $customizer_data, "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("astra_sites_imported_wxr_id", $post_id, "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("_astra_sites_old_site_options", $options_data, "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("_astra_sites_old_widgets_data", $sidebars_widgets, "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("astra_sites_import_complete", "yes", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to delete_transient("astra_sites_import_started") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).,None,None
STORAGE call to set_transient("astra_sites_import_started", "yes", HOUR_IN_SECONDS) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to delete_option("astra-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option($option_key) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("sidebars_widgets", $sidebars_widgets) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to wp_delete_post($post_id, true) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
STORAGE call to wp_delete_post($post_id, true) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
STORAGE call to delete_transient("astra_sites_batch_process_started") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).,None,None
STORAGE call to update_option("astra_sites_settings", $data, "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("astra_sites_settings", $new_data, "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to set_transient("astra-sites-cron-test-ok", 1, 3600) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to update_option("astra_sites_import_data", $this->current_site_data, "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to set_transient("astra-sites-term-" . $term_slug, $new_terms_data, WEEK_IN_SECONDS) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to set_transient("astra-sites-post-" . $post_slug, $all_posts, WEEK_IN_SECONDS) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to add_post_meta($id, "_source_url", $url) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to update_post_meta($id, "astra-images", $photo_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($id, "_wp_attachment_image_alt", $name) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, $meta_key, $raw_data) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, $meta_key, $raw_data) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("_astra_sites_gettings_started", "yes", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to wp_delete_post($post_id, true) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
STORAGE call to wp_delete_post($post_id, true) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
STORAGE call to delete_option($tax"_children") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("astra_sites_" . $file_name, $old_settings, "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to delete_transient("wpforms_activation_redirect") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).,None,None
STORAGE call to update_user_meta(get_current_user_ID(), "astra-sites-subscribed", "yes") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_option("astra_sites_has_sent_error_report") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("astra_sites_cached_import_error") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("astra-sites-saved-images", $saved_images, "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("elementor_load_fa4_shim", $data["astra-page-options-data"]["elementor_load_fa4_shim"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("astra_sites_import_data", $demo_data, "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("astra-sites-favorites", $new_favorites, "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to wp_insert_post($post_args). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($new_page_id, "_astra_sites_enable_for_batch", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($new_page_id, "_elementor_template_type", "page") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($new_page_id, "_elementor_template_type", "section") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($new_page_id, "_wp_page_template", "elementor_header_footer") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($downloaded_image["id"], $meta_key, $meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("elementor_load_fa4_shim", $_POST["data"]["astra-page-options-data"]["elementor_load_fa4_shim"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to wp_insert_post($post_args). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($new_page_id, "_astra_sites_enable_for_batch", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option($option, $value) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($new_page_id, "_wp_page_template", "elementor_header_footer") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($image, "_astra_sites_imported_post", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("astra-sites-saved-images", $saved_images, "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, $meta_key, $headers_new) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, $meta_key, $location_new) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_transient("_fl_builder_activation_admin_notice") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).,None,None
STORAGE call to update_post_meta($course->ID, "_sfwd-courses", $ld_meta) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("uabb_lite_redirect", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("__uagb_do_redirect", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_transient("wc_attribute_taxonomies") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).,None,None
STORAGE call to wp_update_post(["ID" => $post_id, "post_excerpt" => ""]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($post_id, "_fl_builder_data", $data) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_fl_builder_draft", $data) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("astra-settings", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_metadata("post", $post_id, "_elementor_data", $data) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 2: $meta_key (string), 3: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_metadata("post", $post_id, "_astra_sites_hotlink_imported", true) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 2: $meta_key (string), 3: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_update_post(["ID" => $post_id, "post_content" => $content, "post_excerpt" => ""]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to update_option("astra-sites-license-page-builder", "elementor", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("astra-sites-license-page-builder", "beaver-builder", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("astra-sites-license-page-builder", "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, "_menu_item_url", $menu_url) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("st_attachments", [], "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("widget_wpforms-widget", $data) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("widget_text", $data) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("widget_media_image", $data) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to set_transient("astra_sites_batch_process_started", "yes", HOUR_IN_SECONDS) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to delete_option("astra_sites_imported_wxr_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, "_astra_sites_image_hash", $this->get_hash_image($attachment["url"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_option("astra_sites_recent_import_log_file") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("astra-settings", $options["astra-settings"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option($option_name, $option_value) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("elementor_active_kit", $query[0]->ID) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option($option_name, $page->ID) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("widget_" . $id_base, $single_widget_instances) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("sidebars_widgets", $sidebars_widgets) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, "_astra_sites_imported_post", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_astra_sites_enable_for_batch", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_wp_page_template", "elementor_header_footer") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_astra_sites_image_hash", $attachment_hash_url) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_elementor_source_image_hash", $attachment_hash_url) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to add_post_meta($post_id, "_wxr_import_menu_item", wp_slash($original_object_id)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_post_meta($post_id, "_wxr_import_menu_item", wp_slash($original_object_id)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to update_post_meta($post_id, "_menu_item_object_id", wp_slash($object_id)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to add_post_meta($post_id, $key, $value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_comment_meta($comment_id, wp_slash($meta_item["key"]), wp_slash($value)) alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_insert_user(wp_slash($userdata)) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,None,None
STORAGE call to wp_update_post($data, true). Passed arguments: 1: $wp_error (bool), 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to delete_post_meta($post_id, "_wxr_import_parent") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_post_meta($post_id, "_wxr_import_user_slug") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_post_meta($post_id, "_wxr_import_has_attachment_refs") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, "_menu_item_object_id", wp_slash($menu_object)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($post_id, "_wxr_import_menu_item") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_comment_meta($comment_id, "_wxr_import_parent") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_comment_meta($comment_id, "_wxr_import_user") alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, "_thumbnail_id", $new_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_option($tax"_children") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to wp_insert_post($postdata, true). Passed arguments: 0: $postarr (array), 1: $wp_error (bool). Returns (int|WP_Error).,None,None
STORAGE call to set_transient($notice_id, true, $repeat_notice_after) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to update_user_meta(get_current_user_id(), $notice_id, "notice-dismissed") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to set_transient($notice["id"], "delayed-notice", $notice["display-notice-after"]) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to update_user_meta(get_current_user_id(), $notice["id"], "delayed-notice") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_ast_block_templates_image_hash", $this->get_hash_image($attachment["url"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_insert_post(["post_title" => $title, "post_status" => "publish", "post_type" => "wpforms", "post_excerpt" => $desc]). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to wp_update_post(["ID" => $new_id, "post_content" => wpforms_encode($form)]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to update_option("ast_block_templates_wpforms_ids_mapping", $ids_mapping) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("blogname", $business_name) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("astra-color-palettes", $color_palettes) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("astra_sites_cached_import_error", $posted_data, "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to delete_transient("astra_sites_import_started") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).,None,None
STORAGE call to update_option("astra_sites_has_sent_error_report", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("astra_sites_has_sent_error_report", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("astra_sites_cached_import_error") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
External request to possible URLs [].,https,[]
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] WP User info of types (['user', 'user_meta', 'email', 'ip', 'address']) stored through WordPress function "wp_insert_user(wp_slash($userdata))", found in file inc/importers/wxr-importer/class-wxr-importer.php at line 1701. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta(get_current_user_ID(), "astra-sites-subscribed", "yes")", found in file inc/classes/class-astra-sites.php at line 307. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta(get_current_user_id(), $notice["id"], "delayed-notice")", found in file inc/lib/astra-notices/class-astra-notices.php at line 351. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta(get_current_user_id(), $notice_id, "notice-dismissed")", found in file inc/lib/astra-notices/class-astra-notices.php at line 128. 

[has_storage] Storage check is WP 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta(get_current_user_ID(), "astra-sites-subscribed", "yes") does not have corresponding deletion method. Storage method found in file inc/classes/class-astra-sites.php at line 307. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta(get_current_user_id(), $notice["id"], "delayed-notice") does not have corresponding deletion method. Storage method found in file inc/lib/astra-notices/class-astra-notices.php at line 351. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta(get_current_user_id(), $notice_id, "notice-dismissed") does not have corresponding deletion method. Storage method found in file inc/lib/astra-notices/class-astra-notices.php at line 128. 

[Art.17, Right to erasure] Deletion access is NONE 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 18486. Found in file inc/classes/class-astra-sites.php at line 307 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 59250. Found in file inc/lib/astra-notices/class-astra-notices.php at line 351 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 58520. Found in file inc/lib/astra-notices/class-astra-notices.php at line 128 

[Art.15, Right to access] Data access is NONE_BUT_NOT_REQUIRED 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['access', 'deletion', 'encryption', 'third_party'] 

[main] Is deletion in violation? True 

[main] Is access in violation? False 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? False 


###########
### Q&A ###
###########

1. Why is my plugin in violation against GDPR?

GDPR (https://gdpr-info.eu/) aims to give citizens in the European Union (EU) control over their personal data. If a website collects or store user data, it is required to provide users functionalities to control their data, such as ones to erase or export their data. While a plugin do not directly interact with users, it may provide functionalities that collect or store personal data, which would make websites that deploy the plugin in violation against GDPR if the plugin does not provide corresponding functionalities to allow users control their personal data. Therefore, plugin developers are responsible to provide functions to manage the personal data they handle in accordance with GDPR. We list requirements by specific GDPR articles relevant to your plugin below.


[Art. 13, Information to be provided where personal data are collected from the data subject] If a plugin collects or handles personal data, it needs to provide privacy policy texts that explain what personal data is being collected and for what purpose. The texts are meant to be added to the privacy policy of the websites that deploy the plugin. 


            
        

2. How do I make my plugin compliant?

Please refer to the fix report below to see how you can make your plugin comply with GDPR.

        

##################
### Fix Report ###
##################

#############################
# Privacy Policy Fix Report #
#############################

This report suggests fixes to comply with the GDPR Art. 13 (https://gdpr-info.eu/art-13-gdpr/) through including a privacy notice. The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/suggesting-text-for-the-site-privacy-policy/ for more details.

1) Implement a function that includes the privacy policy for the plugin and provide it to wordpress through wp_add_privacy_policy_content(). Sample code:


/**
* Adds a privacy policy statement.
*/
function astra-sites_add_privacy_policy_content() {
    if ( ! function_exists( 'wp_add_privacy_policy_content' ) ) {
        return;
    }
    //TODO: modify the content below to include the privacy policy for the plugin.
    $content = '<p class="privacy-policy-tutorial">' . __( 'Some introductory content for the suggested text.', 'astra-sites' ) . '</p>'
            . '<strong class="privacy-policy-tutorial">' . __( 'Suggested Text:', 'astra-sites' ) . '</strong> '
            . sprintf(
                __( 'When you leave a comment on this site, we send your name, email address, IP address and comment text to example.com. Example.com does not retain your personal data. The example.com privacy policy is <a href="%1$s" target="_blank">here</a>.', 'astra-sites' ),
                'https://example.com/privacy-policy'
            );
    wp_add_privacy_policy_content( 'astra-sites', wp_kses_post( wpautop( $content, false ) ) );
}
        

2) Hook the privacy policy function to the Wordpress's admin initialization action.


add_action( 'admin_init', 'astra-sites_add_privacy_policy_content' );
        

        


Disclaimer: The sample code provided above is only for reference and does not guarantee GDPR compliance. The recommended list of data to delete/export may not be comprehensive. 
        
Done.
