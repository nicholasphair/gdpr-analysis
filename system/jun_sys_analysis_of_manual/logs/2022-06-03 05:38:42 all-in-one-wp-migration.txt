Timeout in resolving values
Timeout in running neo4j query
Running Main.py on all-in-one-wp-migration

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:01.438723.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.569616.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 162 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.686130.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 8 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.857567.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 8225 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:03.525485.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 274 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:02.041707.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.089201.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 1477 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:47.573271.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 35301
Added 25155 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 46197
Added 10896 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:03.841709.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/all-in-one-wp-migration.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/constants.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/deprecated.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/exceptions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/functions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/loader.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/uninstall.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/controller/class-ai1wm-backups-controller.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/controller/class-ai1wm-export-controller.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/controller/class-ai1wm-feedback-controller.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/controller/class-ai1wm-import-controller.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/controller/class-ai1wm-main-controller.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/controller/class-ai1wm-status-controller.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/controller/class-ai1wm-updater-controller.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/model/class-ai1wm-backups.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/model/class-ai1wm-compatibility.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/model/class-ai1wm-deprecated.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/model/class-ai1wm-extensions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/model/class-ai1wm-feedback.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/model/class-ai1wm-handler.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/model/class-ai1wm-log.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/model/class-ai1wm-message.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/model/class-ai1wm-notification.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/model/class-ai1wm-status.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/model/class-ai1wm-template.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/model/class-ai1wm-updater.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/model/export/class-ai1wm-export-archive.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/model/export/class-ai1wm-export-clean.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/model/export/class-ai1wm-export-compatibility.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/model/export/class-ai1wm-export-config-file.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/model/export/class-ai1wm-export-config.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/model/export/class-ai1wm-export-content.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/model/export/class-ai1wm-export-database-file.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/model/export/class-ai1wm-export-database.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/model/export/class-ai1wm-export-download.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/model/export/class-ai1wm-export-enumerate-content.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/model/export/class-ai1wm-export-enumerate-media.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/model/export/class-ai1wm-export-enumerate-plugins.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/model/export/class-ai1wm-export-enumerate-tables.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/model/export/class-ai1wm-export-enumerate-themes.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/model/export/class-ai1wm-export-init.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/model/export/class-ai1wm-export-media.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/model/export/class-ai1wm-export-plugins.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/model/export/class-ai1wm-export-themes.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/model/import/class-ai1wm-import-blogs.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/model/import/class-ai1wm-import-clean.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/model/import/class-ai1wm-import-compatibility.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/model/import/class-ai1wm-import-confirm.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/model/import/class-ai1wm-import-content.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/model/import/class-ai1wm-import-database.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/model/import/class-ai1wm-import-done.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/model/import/class-ai1wm-import-enumerate.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/model/import/class-ai1wm-import-mu-plugins.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/model/import/class-ai1wm-import-options.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/model/import/class-ai1wm-import-permalinks.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/model/import/class-ai1wm-import-upload.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/model/import/class-ai1wm-import-validate.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/vendor/bandar/bandar/lib/Bandar.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/vendor/bandar/bandar/lib/Exceptions/TemplateDoesNotExistException.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/vendor/servmask/archiver/class-ai1wm-archiver.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/vendor/servmask/archiver/class-ai1wm-compressor.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/vendor/servmask/archiver/class-ai1wm-extractor.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/vendor/servmask/command/class-ai1wm-wp-cli-command.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/vendor/servmask/cron/class-ai1wm-cron.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/vendor/servmask/database/class-ai1wm-database-mysqli.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/vendor/servmask/database/class-ai1wm-database-mysql.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/vendor/servmask/database/class-ai1wm-database.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/vendor/servmask/database/class-ai1wm-database-utility.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/vendor/servmask/filesystem/class-ai1wm-directory.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/vendor/servmask/filesystem/class-ai1wm-file-htaccess.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/vendor/servmask/filesystem/class-ai1wm-file-index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/vendor/servmask/filesystem/class-ai1wm-file.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/vendor/servmask/filesystem/class-ai1wm-file-robots.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/vendor/servmask/filesystem/class-ai1wm-file-webconfig.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/vendor/servmask/filter/class-ai1wm-recursive-exclude-filter.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/vendor/servmask/filter/class-ai1wm-recursive-extension-filter.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/vendor/servmask/iterator/class-ai1wm-recursive-directory-iterator.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/vendor/servmask/iterator/class-ai1wm-recursive-iterator-iterator.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/backups/backups-list.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/backups/backups-permissions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/backups/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/common/http-authentication.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/common/leave-feedback.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/common/maintenance-mode.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/common/report-problem.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/common/share-buttons.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/export/advanced-settings.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/export/button-azure-storage.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/export/button-b2.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/export/button-box.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/export/button-digitalocean.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/export/button-dropbox.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/export/button-file.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/export/button-ftp.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/export/button-gcloud-storage.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/export/button-gdrive.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/export/button-glacier.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/export/button-mega.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/export/button-onedrive.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/export/button-pcloud.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/export/button-s3-client.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/export/button-s3.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/export/button-webdav.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/export/export-buttons.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/export/export-permissions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/export/find-replace.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/export/help-section.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/export/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/import/avada.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/import/button-azure-storage.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/import/button-b2.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/import/button-box.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/import/button-digitalocean.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/import/button-dropbox.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/import/button-file.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/import/button-ftp.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/import/button-gcloud-storage.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/import/button-gdrive.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/import/button-glacier.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/import/button-mega.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/import/button-onedrive.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/import/button-pcloud.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/import/button-s3-client.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/import/button-s3.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/import/button-url.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/import/button-webdav.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/import/done.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/import/import-buttons.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/import/import-permissions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/import/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/import/oxygen.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/import/pro.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/main/admin-head.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/main/backups-htaccess-notice.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/main/backups-index-html-notice.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/main/backups-index-php-notice.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/main/backups-path-notice.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/main/backups.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/main/backups-robots-txt-notice.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/main/backups-webconfig-notice.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/main/contact-support.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/main/missing-role-capability-notice.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/main/multisite-notice.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/main/storage-index-html-notice.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/main/storage-index-php-notice.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/main/storage-path-notice.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/main/translate.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/main/wordpress-htaccess-notice.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/updater/check.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/updater/error.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/updater/modal.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/all-in-one-wp-migration/lib/view/updater/update.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:12.284973.

162 PHP_REACHES edges created
8 REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
8225 PHP_REACHES edges created
274 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
14000 PHP_REACHES edges created
15000 PHP_REACHES edges created
16000 PHP_REACHES edges created
17000 PHP_REACHES edges created
18000 PHP_REACHES edges created
19000 PHP_REACHES edges created
20000 PHP_REACHES edges created
21000 PHP_REACHES edges created
22000 PHP_REACHES edges created
23000 PHP_REACHES edges created
24000 PHP_REACHES edges created
25000 PHP_REACHES edges created
26000 PHP_REACHES edges created
26632 PHP_REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
10896 PHP_REACHES edges created
46197 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 11099 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:02.043543.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 68 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:13.346347.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 1282 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:37.155773.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 1542 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.328691.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:03.170038.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:15.464327.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.141960.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.027446.

68 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
2824 PHP_REACHES edges created
2892 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 1595 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.359189.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
26 SQL operations to process.
SELECT meta_value FROM `ai1wm_table_prefix("mainsite")sitemeta` WHERE meta_key = 'fs_accounts'
SQL command (SELECT meta_value FROM `ai1wm_table_prefix("mainsite")sitemeta` WHERE meta_key = 'fs_accounts') cannot be parsed correct.
sprintf("SHOW FULL TABLES FROM `%s` WHERE `Table_type` = \'VIEW\' AND (%s)", $this->wpdb->dbname, implode(" OR ", $where_query))
SQL command (sprintf("SHOW FULL TABLES FROM `%s` WHERE `Table_type` = \'VIEW\' AND (%s)", $this->wpdb->dbname, implode(" OR ", $where_query))) cannot be parsed correct.
sprintf("SHOW FULL TABLES FROM `%s` WHERE `Table_type` = \'BASE TABLE\' AND (%s)", $this->wpdb->dbname, implode(" OR ", $where_query))
SQL command (sprintf("SHOW FULL TABLES FROM `%s` WHERE `Table_type` = \'BASE TABLE\' AND (%s)", $this->wpdb->dbname, implode(" OR ", $where_query))) cannot be parsed correct.
sprintf("SELECT %s FROM `%s` WHERE %s ORDER BY %s LIMIT %d, %d", $select_columns, $table_name, $table_where, $table_keys, $table_offset, AI1WM_MAX_SELECT_RECORDS)
SQL command (sprintf("SELECT %s FROM `%s` WHERE %s ORDER BY %s LIMIT %d, %d", $select_columns, $table_name, $table_where, $table_keys, $table_offset, AI1WM_MAX_SELECT_RECORDS)) cannot be parsed correct.
sprintf("SELECT %s FROM `%s` AS t1 JOIN (SELECT %s FROM `%s` WHERE %s ORDER BY %s LIMIT %d, %d) AS t2 USING (%s)", $select_columns, $table_name, $table_keys, $table_name, $table_where, $table_keys, $table_offset, AI1WM_MAX_SELECT_RECORDS, $table_keys)
SQL command (sprintf("SELECT %s FROM `%s` AS t1 JOIN (SELECT %s FROM `%s` WHERE %s ORDER BY %s LIMIT %d, %d) AS t2 USING (%s)", $select_columns, $table_name, $table_keys, $table_name, $table_where, $table_keys, $table_offset, AI1WM_MAX_SELECT_RECORDS, $table_keys)) cannot be parsed correct.
SET SESSION sql_mode = ''
SQL command (SET SESSION sql_mode = '') cannot be parsed correct.
START TRANSACTION
SQL command (START TRANSACTION) cannot be parsed correct.
SET SESSION sql_mode = ''
SQL command (SET SESSION sql_mode = '') cannot be parsed correct.
$this->replace_raw_values($query)
SQL command ($this->replace_raw_values($query)) cannot be parsed correct.
$this->replace_table_engines($query)
SQL command ($this->replace_table_engines($query)) cannot be parsed correct.
$this->replace_table_row_format($query)
SQL command ($this->replace_table_row_format($query)) cannot be parsed correct.
$this->replace_table_fulltext_indexes($query)
SQL command ($this->replace_table_fulltext_indexes($query)) cannot be parsed correct.
COMMIT
SQL command (COMMIT) cannot be parsed correct.
DROP VIEW IF EXISTS `$table_name`
SQL command (DROP VIEW IF EXISTS `$table_name`) cannot be parsed correct.
DROP TABLE IF EXISTS `$table_name`
SQL command (DROP TABLE IF EXISTS `$table_name`) cannot be parsed correct.
SHOW VARIABLES LIKE 'version'
SQL command (SHOW VARIABLES LIKE 'version') cannot be parsed correct.
SHOW VARIABLES LIKE 'max_allowed_packet'
SQL command (SHOW VARIABLES LIKE 'max_allowed_packet') cannot be parsed correct.
SHOW VARIABLES LIKE 'lower_case_table_names'
SQL command (SHOW VARIABLES LIKE 'lower_case_table_names') cannot be parsed correct.
SHOW COLLATION LIKE '$collation_name'
SQL command (SHOW COLLATION LIKE '$collation_name') cannot be parsed correct.
SHOW CREATE VIEW `$this->get_tables()_0`
SQL command (SHOW CREATE VIEW `$this->get_tables()_0`) cannot be parsed correct.
SHOW CREATE TABLE `$this->get_tables()_0`
SQL command (SHOW CREATE TABLE `$this->get_tables()_0`) cannot be parsed correct.
REPAIR TABLE `$this->get_tables()_0`
SQL command (REPAIR TABLE `$this->get_tables()_0`) cannot be parsed correct.
SHOW KEYS FROM `$this->get_tables()_0` WHERE `Key_name` = 'PRIMARY'
SQL command (SHOW KEYS FROM `$this->get_tables()_0` WHERE `Key_name` = 'PRIMARY') cannot be parsed correct.
SHOW KEYS FROM `$table_name` WHERE `Non_unique` = 0
SQL command (SHOW KEYS FROM `$table_name` WHERE `Non_unique` = 0) cannot be parsed correct.
SHOW COLUMNS FROM `$this->get_tables()_0`
SQL command (SHOW COLUMNS FROM `$this->get_tables()_0`) cannot be parsed correct.
SHOW COLUMNS FROM `$table_name`
SQL command (SHOW COLUMNS FROM `$table_name`) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [39936, 48205, 48470, 49156, 49183, 49485, 49511, 48648, 49619, 49646, 49681, 49708, 49939, 49999, 50012, 50032, 50078, 50124, 50174, 50228, 50282, 50333, 50361, 50428, 50495, 50569]
Added 0 SQL nodes. 0 out of 26 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:06.873776.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'json_encode(["errors" => [$e->getMessage()]])'' cannot be parsed correct.
HTML code '$'json_encode(["errors" => []])'' cannot be parsed correct.
HTML code '$'json_encode(["errors" => [$e->getMessage()]])'' cannot be parsed correct.
HTML code '$'json_encode(["errors" => []])'' cannot be parsed correct.
HTML code '$'json_encode(["errors" => [["code" => $e->getCode(), "message" => $e->getMessage()]]])'' cannot be parsed correct.
HTML code '$'json_encode($params)'' cannot be parsed correct.
HTML code '$'json_encode(["errors" => [$e->getMessage()]])'' cannot be parsed correct.
HTML code '$'json_encode(["errors" => []])'' cannot be parsed correct.
HTML code '$'json_encode(["errors" => [["code" => $e->getCode(), "message" => $e->getMessage()]]])'' cannot be parsed correct.
HTML code '$'json_encode(["errors" => [["code" => $e->getCode(), "message" => $e->getMessage()]]])'' cannot be parsed correct.
HTML code '$'json_encode($params)'' cannot be parsed correct.
HTML code '$'json_encode(get_option(AI1WM_STATUS, []))'' cannot be parsed correct.
HTML code '$'json_encode(["errors" => []])'' cannot be parsed correct.
HTML code '$'realpath($template . ".php")'' cannot be parsed correct.
HTML code '$'$backup_path'' cannot be parsed correct.
HTML code '$'basename($backup["filename"])'' cannot be parsed correct.
HTML code '$'nullai1wm-backup-label-selected'' cannot be parsed correct.
HTML code '$'ai1wm-hidenull'' cannot be parsed correct.
HTML code '$'$labels_$backup_filename'' cannot be parsed correct.
HTML code '$'$backup_filename'' cannot be parsed correct.
HTML code '$'null$labels_$backup_filename'' cannot be parsed correct.
HTML code '$'null$labels_$backup_filename'' cannot be parsed correct.
HTML code '$'sprintf(__("%s ago", AI1WM_PLUGIN_NAME), human_time_diff($backup["mtime"]))'' cannot be parsed correct.
HTML code '$'$button'' cannot be parsed correct.
HTML code '$'<text>'' cannot be parsed correct.
HTML code '$'ai1wm_size_format($backup["size"], 2)'' cannot be parsed correct.
HTML code '$'ai1wm_backup_url(["archive" => $backup["filename"]])'' cannot be parsed correct.
HTML code '$'$backup_filename'' cannot be parsed correct.
HTML code '$'$backup_filename'' cannot be parsed correct.
HTML code '$'$backup_size'' cannot be parsed correct.
HTML code '$'$backup_filename'' cannot be parsed correct.
HTML code '$'nullai1wm-hide'' cannot be parsed correct.
HTML code '$'<another-text>'' cannot be parsed correct.
HTML code '$'$button'' cannot be parsed correct.
HTML code '$'apply_filters("ai1wm_pro", "")'' cannot be parsed correct.
HTML code '$'wp_make_link_relative(AI1WM_URL)'' cannot be parsed correct.
HTML code '$'AI1WM_VERSION'' cannot be parsed correct.
HTML code '$'wp_make_link_relative(AI1WM_URL)'' cannot be parsed correct.
HTML code '$'AI1WM_VERSION'' cannot be parsed correct.
HTML code '$'wp_make_link_relative(AI1WM_URL)'' cannot be parsed correct.
HTML code '$'AI1WM_VERSION'' cannot be parsed correct.
HTML code '$'wp_make_link_relative(AI1WM_URL)'' cannot be parsed correct.
HTML code '$'AI1WM_VERSION'' cannot be parsed correct.
HTML code '$'wp_make_link_relative(AI1WM_URL)'' cannot be parsed correct.
HTML code '$'AI1WM_VERSION'' cannot be parsed correct.
HTML code '$'wp_make_link_relative(AI1WM_URL)'' cannot be parsed correct.
HTML code '$'wp_make_link_relative(AI1WM_URL)'' cannot be parsed correct.
HTML code '$'$url'' cannot be parsed correct.
HTML code '$'$modal'' cannot be parsed correct.
HTML code '$'$url'' cannot be parsed correct.
HTML code '$'$modal'' cannot be parsed correct.
HTML code '$'$modal'' cannot be parsed correct.
HTML code '$'$message'' cannot be parsed correct.
HTML code '$'	</p>
</div>
'' cannot be parsed correct.
HTML code '$'	</p>
</div>
'' cannot be parsed correct.
HTML code '$'	</p>
</div>
'' cannot be parsed correct.
HTML code '$'	</p>
</div>
'' cannot be parsed correct.
HTML code '$'	</p>
</div>
'' cannot be parsed correct.
HTML code '$'	</p>
</div>
'' cannot be parsed correct.
HTML code '$'	</p>
</div>
'' cannot be parsed correct.
HTML code '$'	</p>
</div>
'' cannot be parsed correct.
HTML code '$'	</p>
</div>
'' cannot be parsed correct.
HTML code '$'	</p>
</div>
'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:05.582903.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.042969.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 114 do_action/apply_filters calls and 106 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:04.632419.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FileProDetector
### Start running FrontBaseDetector
### Finish running DbaseDetector
### Start running HashDetector
### Finish running DbplusDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running FirebirdInterBaseDetector
### Start running IngresDetector
### Finish running InformixDetector
### Start running maxdbDetector
### Finish running FrontBaseDetector
### Start running MongoDbDetector
### Finish running ArrayElementDetector
### Start running MongoDetector
### Finish running IBMDb2Detector
### Start running MsqlDetector
### Finish running MongoDetector
### Start running MySQLDetector
### Finish running IngresDetector
### Start running MySQLiDetector
### Finish running MongoDbDetector
### Start running Oci8Detector
### Finish running MySQLDetector
### Start running OpenSSLDetector
### Finish running MsqlDetector
### Start running ParadoxDetector
### Finish running Oci8Detector
### Start running PasswordHashingDetector
### Finish running ParadoxDetector
### Start running PhpCurlDetector
### Finish running PhpCurlDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running HashDetector
### Start running PHPRetrievalDetector
### Finish running PasswordHashingDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPIncludedDetector
### Start running PhpVarDetector
### Finish running OpenSSLDetector
### Start running PostgreSQLDetector
### Finish running PhpVarDetector
### Start running PropertyDetector
### Finish running PostgreSQLDetector
### Start running Sqlite3Detector
### Finish running PropertyDetector
### Start running SqliteDetector
### Finish running Sqlite3Detector
### Start running SqlServerDetector
### Finish running SqliteDetector
### Start running SybaseDetector
### Finish running SqlServerDetector
### Start running TokyoTyrantDetector
### Finish running SybaseDetector
### Start running UserInputDetector
### Finish running TokyoTyrantDetector
### Start running VariableDetector
### Finish running UserInputDetector
### Start running WordpressHashingFnDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRemoteDetector
### Finish running maxdbDetector
### Start running WordPressRetrievalDetector
### Finish running MySQLiDetector
### Start running WordPressStorageDetector
### Finish running VariableDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running PHPStorageDetector
### Start running GenericEncryptionDetector
### Finish running PHPRetrievalDetector
### Start running DeletionDetector
### Finish running GenericEncryptionDetector
### Start running UninstallDetector
Error in GenericDatabaseUsageDetector:
### Finish running WordPressRemoteDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running WordPressStorageDetector
### Finish running WordPressRetrievalDetector
### Finished running detectors
lib/vendor/servmask/cron/class-ai1wm-cron.php:103
  - MD5 called with parameters [serialize, args]. Ignore if [serialize, args] does not contain personal information.
lib/vendor/servmask/filesystem/class-ai1wm-file.php:54
  - MD5 called with parameters [content]. Ignore if [content] does not contain personal information. 

functions.php:1427
  - RETRIEVAL call to fread($handle, $length).
  - Data types: file
functions.php:1567
  - RETRIEVAL call to fgetc($file_handle).
  - Data types: file
functions.php:1859
  - RETRIEVAL call to file_get_contents(AI1WM_WORDPRESS_HTACCESS).
  - Data types: file
functions.php:1870
  - RETRIEVAL call to file_get_contents(AI1WM_WORDPRESS_WEBCONFIG).
  - Data types: file
lib/model/export/class-ai1wm-export-content.php:101
  - RETRIEVAL call to fgetcsv($content_list).
  - Data types: file
lib/model/export/class-ai1wm-export-database.php:86
  - RETRIEVAL call to fgetcsv($tables_list).
  - Data types: file
lib/model/export/class-ai1wm-export-media.php:101
  - RETRIEVAL call to fgetcsv($media_list).
  - Data types: file
lib/model/export/class-ai1wm-export-plugins.php:101
  - RETRIEVAL call to fgetcsv($plugins_list).
  - Data types: file
lib/model/export/class-ai1wm-export-themes.php:101
  - RETRIEVAL call to fgetcsv($themes_list).
  - Data types: file
lib/vendor/servmask/archiver/class-ai1wm-archiver.php:209
  - RETRIEVAL call to fread($this->file_handle, 4377).
  - Data types: file
lib/vendor/servmask/archiver/class-ai1wm-compressor.php:95
  - RETRIEVAL call to fread($file_handle, 512000).
  - Data types: file
lib/vendor/servmask/archiver/class-ai1wm-extractor.php:76
  - RETRIEVAL call to fread($this->file_handle, 4377).
  - Data types: file
lib/vendor/servmask/archiver/class-ai1wm-extractor.php:123
  - RETRIEVAL call to fread($this->file_handle, 4377).
  - Data types: file
lib/vendor/servmask/archiver/class-ai1wm-extractor.php:185
  - RETRIEVAL call to fread($this->file_handle, 4377).
  - Data types: file
lib/vendor/servmask/archiver/class-ai1wm-extractor.php:194
  - RETRIEVAL call to fgetc($this->file_handle).
  - Data types: file
lib/vendor/servmask/archiver/class-ai1wm-extractor.php:320
  - RETRIEVAL call to fread($this->file_handle, 4377).
  - Data types: file
lib/vendor/servmask/archiver/class-ai1wm-extractor.php:329
  - RETRIEVAL call to fgetc($this->file_handle).
  - Data types: file
lib/vendor/servmask/archiver/class-ai1wm-extractor.php:466
  - RETRIEVAL call to fread($this->file_handle, $chunk_size).
  - Data types: file
lib/vendor/servmask/database/class-ai1wm-database.php:1041
  - RETRIEVAL call to fgets($file_handler).
  - Data types: file 

functions.php:1401
  - STORAGE call to fwrite($handle, $content).
  - Data types: file
functions.php:1485
  - STORAGE call to fputcsv($handle, $fields).
  - Data types: file
functions.php:1523
  - STORAGE call to touch($file, $mtime).
  - Data types: file
lib/vendor/servmask/archiver/class-ai1wm-archiver.php:150
  - STORAGE call to fwrite($this->file_handle, $this->eof).
  - Data types: file
lib/vendor/servmask/archiver/class-ai1wm-compressor.php:79
  - STORAGE call to fwrite($this->file_handle, $block).
  - Data types: file
lib/vendor/servmask/archiver/class-ai1wm-compressor.php:96
  - STORAGE call to fwrite($this->file_handle, $file_content).
  - Data types: file
lib/vendor/servmask/archiver/class-ai1wm-compressor.php:130
  - STORAGE call to fwrite($this->file_handle, $block).
  - Data types: file
lib/vendor/servmask/archiver/class-ai1wm-extractor.php:474
  - STORAGE call to fwrite($file_handle, $file_content).
  - Data types: file
lib/vendor/servmask/archiver/class-ai1wm-extractor.php:500
  - STORAGE call to touch($file_name, $file_mtime).
  - Data types: file
lib/vendor/servmask/filesystem/class-ai1wm-file.php:45
  - STORAGE call to touch($path).
  - Data types: file
lib/vendor/servmask/filesystem/class-ai1wm-file.php:61
  - STORAGE call to fwrite($handle, $content).
  - Data types: file 

lib/controller/class-ai1wm-feedback-controller.php:53
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
lib/controller/class-ai1wm-feedback-controller.php:55
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
lib/controller/class-ai1wm-feedback-controller.php:92
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
lib/model/class-ai1wm-feedback.php:45
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
lib/model/class-ai1wm-feedback.php:70
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
lib/model/class-ai1wm-notification.php:39
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
lib/model/class-ai1wm-notification.php:55
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
lib/model/class-ai1wm-notification.php:66
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
lib/model/class-ai1wm-notification.php:82
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
lib/model/import/class-ai1wm-import-database.php:887
  - variable '$auth_password' of personal types {'password'} is found.
  - Data types: password
lib/model/import/class-ai1wm-import-database.php:1039
  - variable '$auth_password' of personal types {'password'} is found.
  - Data types: password 

lib/controller/class-ai1wm-export-controller.php:112
  - API call to wp_remote_request(apply_filters("ai1wm_http_export_url", add_query_arg(["ai1wm_import" => 1], admin_url("admin-ajax.php?action=ai1wm_export"))), ["method" => apply_filters("ai1wm_http_export_method", "POST"), "timeout" => apply_filters("ai1wm_http_export_timeout", 10), "blocking" => apply_filters("ai1wm_http_export_blocking", false), "sslverify" => apply_filters("ai1wm_http_export_sslverify", false), "headers" => apply_filters("ai1wm_http_export_headers", []), "body" => apply_filters("ai1wm_http_export_body", $params)]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
lib/controller/class-ai1wm-import-controller.php:120
  - API call to wp_remote_request(apply_filters("ai1wm_http_import_url", add_query_arg(["ai1wm_import" => 1], admin_url("admin-ajax.php?action=ai1wm_import"))), ["method" => apply_filters("ai1wm_http_import_method", "POST"), "timeout" => apply_filters("ai1wm_http_import_timeout", 10), "blocking" => apply_filters("ai1wm_http_import_blocking", false), "sslverify" => apply_filters("ai1wm_http_import_sslverify", false), "headers" => apply_filters("ai1wm_http_import_headers", []), "body" => apply_filters("ai1wm_http_import_body", $params)]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
lib/model/class-ai1wm-feedback.php:64
  - API call to wp_remote_post(AI1WM_FEEDBACK_URL, ["timeout" => 15, "body" => ["type" => $type, "email" => $email, "message" => $message, "purchases" => $purchases]]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
lib/model/class-ai1wm-updater.php:127
  - API call to wp_remote_get($extension["about"], ["timeout" => 15, "headers" => ["Accept" => "application/json"]]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
lib/model/class-ai1wm-updater.php:149
  - API call to wp_remote_get(add_query_arg(["site_url" => get_site_url(), "admin_email" => get_option("admin_email")], sprintf("%s/%s", $extension["check"], $purchase_id)), ["timeout" => 15, "headers" => ["Accept" => "application/json"]]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote 

functions.php:1016
  - RETRIEVAL call to get_option(AI1WM_ACTIVE_PLUGINS, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
functions.php:1045
  - RETRIEVAL call to get_option(AI1WM_ACTIVE_PLUGINS, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
functions.php:1063
  - RETRIEVAL call to get_option(AI1WM_ACTIVE_TEMPLATE) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
functions.php:1072
  - RETRIEVAL call to get_option(AI1WM_ACTIVE_STYLESHEET) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
functions.php:1122
  - RETRIEVAL call to get_option(AI1WM_ACTIVE_PLUGINS, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
functions.php:1141
  - RETRIEVAL call to get_option(AI1WM_JETPACK_ACTIVE_MODULES, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
functions.php:1160
  - RETRIEVAL call to get_option(AI1WM_SWIFT_OPTIMIZER_PLUGIN_ORGANIZER, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
functions.php:1236
  - RETRIEVAL call to get_option(AI1WM_DB_VERSION) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
functions.php:1237
  - RETRIEVAL call to get_option(AI1WM_INITIAL_DB_VERSION) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
functions.php:1350
  - RETRIEVAL call to get_option("woocommerce_force_ssl_checkout") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
functions.php:1602
  - RETRIEVAL call to get_option(AI1WM_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
functions.php:1671
  - RETRIEVAL call to get_option("timezone_string") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
functions.php:1675
  - RETRIEVAL call to get_option("gmt_offset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-ai1wm-backups-controller.php:38
  - RETRIEVAL call to get_option(AI1WM_AUTH_USER) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-ai1wm-backups-controller.php:39
  - RETRIEVAL call to get_option(AI1WM_AUTH_PASSWORD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-ai1wm-export-controller.php:254
  - RETRIEVAL call to get_option(AI1WM_AUTH_USER) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-ai1wm-export-controller.php:254
  - RETRIEVAL call to get_option(AI1WM_AUTH_PASSWORD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-ai1wm-feedback-controller.php:86
  - RETRIEVAL call to get_option($extension["key"]) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-ai1wm-import-controller.php:273
  - RETRIEVAL call to get_option(AI1WM_AUTH_USER) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-ai1wm-import-controller.php:273
  - RETRIEVAL call to get_option(AI1WM_AUTH_PASSWORD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-ai1wm-main-controller.php:294
  - RETRIEVAL call to get_option(AI1WM_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-ai1wm-main-controller.php:305
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
lib/controller/class-ai1wm-main-controller.php:743
  - RETRIEVAL call to get_option(AI1WM_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-ai1wm-main-controller.php:755
  - RETRIEVAL call to get_option(AI1WM_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-ai1wm-main-controller.php:757
  - RETRIEVAL call to get_option(AI1WM_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-ai1wm-main-controller.php:824
  - RETRIEVAL call to get_option(AI1WM_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-ai1wm-main-controller.php:836
  - RETRIEVAL call to get_option(AI1WM_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-ai1wm-main-controller.php:849
  - RETRIEVAL call to get_option(AI1WM_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-ai1wm-main-controller.php:851
  - RETRIEVAL call to get_option(AI1WM_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-ai1wm-main-controller.php:977
  - RETRIEVAL call to get_option(AI1WM_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-ai1wm-main-controller.php:989
  - RETRIEVAL call to get_option(AI1WM_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-ai1wm-main-controller.php:991
  - RETRIEVAL call to get_option(AI1WM_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-ai1wm-main-controller.php:1003
  - RETRIEVAL call to get_option(AI1WM_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-ai1wm-main-controller.php:1005
  - RETRIEVAL call to get_option(AI1WM_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-ai1wm-main-controller.php:1022
  - RETRIEVAL call to get_option(AI1WM_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-ai1wm-status-controller.php:53
  - RETRIEVAL call to get_option(AI1WM_STATUS, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/controller/class-ai1wm-updater-controller.php:70
  - RETRIEVAL call to get_option(AI1WM_UPDATER, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/model/class-ai1wm-backups.php:115
  - RETRIEVAL call to get_option(AI1WM_BACKUPS_LABELS, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/model/class-ai1wm-backups.php:126
  - RETRIEVAL call to get_option(AI1WM_BACKUPS_LABELS, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/model/class-ai1wm-backups.php:140
  - RETRIEVAL call to get_option(AI1WM_BACKUPS_LABELS, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/model/class-ai1wm-message.php:33
  - RETRIEVAL call to get_option(AI1WM_MESSAGES, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/model/class-ai1wm-message.php:41
  - RETRIEVAL call to get_option(AI1WM_MESSAGES, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/model/class-ai1wm-message.php:52
  - RETRIEVAL call to get_option(AI1WM_MESSAGES, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/model/class-ai1wm-notification.php:39
  - RETRIEVAL call to get_option("admin_email", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/model/class-ai1wm-notification.php:66
  - RETRIEVAL call to get_option("admin_email", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/model/class-ai1wm-updater.php:50
  - RETRIEVAL call to get_option(AI1WM_UPDATER, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/model/class-ai1wm-updater.php:79
  - RETRIEVAL call to get_option(AI1WM_UPDATER, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/model/class-ai1wm-updater.php:84
  - RETRIEVAL call to get_option($extensions[$slug]["key"]) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/model/class-ai1wm-updater.php:123
  - RETRIEVAL call to get_option(AI1WM_UPDATER, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/model/class-ai1wm-updater.php:148
  - RETRIEVAL call to get_option($extension["key"]) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/model/class-ai1wm-updater.php:150
  - RETRIEVAL call to get_option("admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/model/class-ai1wm-updater.php:187
  - RETRIEVAL call to get_option(AI1WM_UPDATER, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/model/class-ai1wm-updater.php:200
  - RETRIEVAL call to get_option($extension["key"]) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/model/export/class-ai1wm-export-config.php:153
  - RETRIEVAL call to get_option("upload_path") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/model/export/class-ai1wm-export-config.php:156
  - RETRIEVAL call to get_option("upload_url_path") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/model/import/class-ai1wm-import-blogs.php:126
  - RETRIEVAL call to get_option("upload_path") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/model/import/class-ai1wm-import-blogs.php:127
  - RETRIEVAL call to get_option("upload_url_path") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/model/import/class-ai1wm-import-database.php:875
  - RETRIEVAL call to get_option(AI1WM_SITE_URL) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/model/import/class-ai1wm-import-database.php:878
  - RETRIEVAL call to get_option(AI1WM_HOME_URL) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/model/import/class-ai1wm-import-database.php:881
  - RETRIEVAL call to get_option(AI1WM_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/model/import/class-ai1wm-import-database.php:884
  - RETRIEVAL call to get_option(AI1WM_AUTH_USER) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/model/import/class-ai1wm-import-database.php:887
  - RETRIEVAL call to get_option(AI1WM_AUTH_PASSWORD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/model/import/class-ai1wm-import-database.php:890
  - RETRIEVAL call to get_option(AI1WM_UPLOADS_PATH) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/model/import/class-ai1wm-import-database.php:893
  - RETRIEVAL call to get_option(AI1WM_UPLOADS_URL_PATH) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/model/import/class-ai1wm-import-database.php:896
  - RETRIEVAL call to get_option(AI1WM_BACKUPS_LABELS, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/model/import/class-ai1wm-import-database.php:899
  - RETRIEVAL call to get_option(AI1WM_SITES_LINKS, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/model/import/class-ai1wm-import-options.php:61
  - RETRIEVAL call to get_option("fs_accounts", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/vendor/servmask/cron/class-ai1wm-cron.php:65
  - RETRIEVAL call to get_option(AI1WM_CRON, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/vendor/servmask/cron/class-ai1wm-cron.php:92
  - RETRIEVAL call to get_option(AI1WM_CRON, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option 

functions.php:1054
  - STORAGE call to update_option(AI1WM_ACTIVE_PLUGINS, $current) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
functions.php:1082
  - STORAGE call to update_option(AI1WM_ACTIVE_TEMPLATE, $template) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
functions.php:1092
  - STORAGE call to update_option(AI1WM_ACTIVE_STYLESHEET, $stylesheet) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
functions.php:1131
  - STORAGE call to update_option(AI1WM_ACTIVE_PLUGINS, $current) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
functions.php:1150
  - STORAGE call to update_option(AI1WM_JETPACK_ACTIVE_MODULES, $current) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
functions.php:1167
  - STORAGE call to update_option(AI1WM_SWIFT_OPTIMIZER_PLUGIN_ORGANIZER, $current) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
functions.php:1237
  - STORAGE call to update_option(AI1WM_DB_VERSION, get_option(AI1WM_INITIAL_DB_VERSION)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
functions.php:1338
  - STORAGE call to delete_post_meta_by_key("_elementor_css") alters data types {'post_meta'}. Passed arguments: 0: $post_meta_key (string). Returns (bool).
  - Data types: post_meta
functions.php:1339
  - STORAGE call to delete_option("_elementor_global_css") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
functions.php:1340
  - STORAGE call to delete_option("elementor-custom-breakpoints-files") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
functions.php:1352
  - STORAGE call to update_option("woocommerce_force_ssl_checkout", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
functions.php:1354
  - STORAGE call to update_option("woocommerce_force_ssl_checkout", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/controller/class-ai1wm-main-controller.php:295
  - STORAGE call to update_option(AI1WM_SECRET_KEY, ai1wm_generate_random_string(12)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/controller/class-ai1wm-main-controller.php:1149
  - STORAGE call to update_option(AI1WM_AUTH_USER, $_SERVER["PHP_AUTH_USER"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/controller/class-ai1wm-main-controller.php:1151
  - STORAGE call to update_option(AI1WM_AUTH_USER, $_SERVER["REMOTE_USER"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/controller/class-ai1wm-main-controller.php:1156
  - STORAGE call to update_option(AI1WM_AUTH_PASSWORD, $_SERVER["PHP_AUTH_PW"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/controller/class-ai1wm-updater-controller.php:103
  - STORAGE call to update_option($extensions[$extension]["key"], $uuid) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/model/class-ai1wm-backups.php:130
  - STORAGE call to update_option(AI1WM_BACKUPS_LABELS, $labels) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/model/class-ai1wm-backups.php:144
  - STORAGE call to update_option(AI1WM_BACKUPS_LABELS, $labels) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/model/class-ai1wm-message.php:34
  - STORAGE call to update_option(AI1WM_MESSAGES, array_merge($messages, [$type => $message])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/model/class-ai1wm-message.php:58
  - STORAGE call to update_option(AI1WM_MESSAGES, $messages) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/model/class-ai1wm-status.php:66
  - STORAGE call to update_option(AI1WM_STATUS, $data) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/model/class-ai1wm-updater.php:173
  - STORAGE call to update_option(AI1WM_UPDATER, $updater) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/model/import/class-ai1wm-import-database.php:1021
  - STORAGE call to update_option(AI1WM_ACTIVE_PLUGINS, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/model/import/class-ai1wm-import-database.php:1027
  - STORAGE call to update_option(AI1WM_SITE_URL, $site_url) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/model/import/class-ai1wm-import-database.php:1030
  - STORAGE call to update_option(AI1WM_HOME_URL, $home_url) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/model/import/class-ai1wm-import-database.php:1033
  - STORAGE call to update_option(AI1WM_SECRET_KEY, $secret_key) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/model/import/class-ai1wm-import-database.php:1036
  - STORAGE call to update_option(AI1WM_AUTH_USER, $auth_user) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/model/import/class-ai1wm-import-database.php:1039
  - STORAGE call to update_option(AI1WM_AUTH_PASSWORD, $auth_password) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/model/import/class-ai1wm-import-database.php:1042
  - STORAGE call to update_option(AI1WM_UPLOADS_PATH, $uploads_path) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/model/import/class-ai1wm-import-database.php:1045
  - STORAGE call to update_option(AI1WM_UPLOADS_URL_PATH, $uploads_url_path) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/model/import/class-ai1wm-import-database.php:1048
  - STORAGE call to update_option(AI1WM_BACKUPS_LABELS, $backups_labels) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/model/import/class-ai1wm-import-database.php:1051
  - STORAGE call to update_option(AI1WM_SITES_LINKS, $sites_links) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/model/import/class-ai1wm-import-options.php:67
  - STORAGE call to update_option("fs_accounts", $fs_accounts) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/model/import/class-ai1wm-import-options.php:69
  - STORAGE call to delete_option("fs_accounts") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
lib/model/import/class-ai1wm-import-options.php:70
  - STORAGE call to delete_option("fs_dbg_accounts") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
lib/model/import/class-ai1wm-import-options.php:71
  - STORAGE call to delete_option("fs_active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
lib/model/import/class-ai1wm-import-options.php:72
  - STORAGE call to delete_option("fs_api_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
lib/model/import/class-ai1wm-import-options.php:73
  - STORAGE call to delete_option("fs_dbg_api_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
lib/model/import/class-ai1wm-import-options.php:74
  - STORAGE call to delete_option("fs_debug_mode") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
lib/vendor/servmask/cron/class-ai1wm-cron.php:81
  - STORAGE call to update_option(AI1WM_CRON, $cron) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
uninstall.php:50
  - STORAGE call to delete_option(AI1WM_STATUS) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:51
  - STORAGE call to delete_option(AI1WM_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:52
  - STORAGE call to delete_option(AI1WM_AUTH_USER) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:53
  - STORAGE call to delete_option(AI1WM_AUTH_PASSWORD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

lib/model/export/class-ai1wm-export-config.php:144
  - CRYPTOGRAPHY call to ai1wm_active_servmask_plugins().
lib/model/export/class-ai1wm-export-database.php:117
  - CRYPTOGRAPHY call to ai1wm_servmask_prefix().
lib/model/export/class-ai1wm-export-database.php:122
  - CRYPTOGRAPHY call to ai1wm_servmask_prefix().
lib/model/export/class-ai1wm-export-database.php:128
  - CRYPTOGRAPHY call to ai1wm_servmask_prefix().
lib/model/import/class-ai1wm-import-database.php:907
  - CRYPTOGRAPHY call to ai1wm_servmask_prefix($blog["Old"]["BlogID"]).
lib/model/import/class-ai1wm-import-database.php:914
  - CRYPTOGRAPHY call to ai1wm_servmask_prefix("mainsite").
lib/model/import/class-ai1wm-import-database.php:921
  - CRYPTOGRAPHY call to ai1wm_servmask_prefix("mainsite").
lib/model/import/class-ai1wm-import-database.php:929
  - CRYPTOGRAPHY call to ai1wm_servmask_prefix("basesite").
lib/model/import/class-ai1wm-import-database.php:937
  - CRYPTOGRAPHY call to ai1wm_servmask_prefix($blog["Old"]["BlogID"]).
lib/model/import/class-ai1wm-import-database.php:943
  - CRYPTOGRAPHY call to ai1wm_servmask_prefix().
lib/model/import/class-ai1wm-import-database.php:1024
  - CRYPTOGRAPHY call to ai1wm_active_servmask_plugins(). 

functions.php:1339
  - DELETION call to delete_option("_elementor_global_css") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
functions.php:1340
  - DELETION call to delete_option("elementor-custom-breakpoints-files") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
lib/model/import/class-ai1wm-import-options.php:69
  - DELETION call to delete_option("fs_accounts") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
lib/model/import/class-ai1wm-import-options.php:70
  - DELETION call to delete_option("fs_dbg_accounts") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
lib/model/import/class-ai1wm-import-options.php:71
  - DELETION call to delete_option("fs_active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
lib/model/import/class-ai1wm-import-options.php:72
  - DELETION call to delete_option("fs_api_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
lib/model/import/class-ai1wm-import-options.php:73
  - DELETION call to delete_option("fs_dbg_api_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
lib/model/import/class-ai1wm-import-options.php:74
  - DELETION call to delete_option("fs_debug_mode") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:50
  - DELETION call to delete_option(AI1WM_STATUS) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:51
  - DELETION call to delete_option(AI1WM_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:52
  - DELETION call to delete_option(AI1WM_AUTH_USER) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:53
  - DELETION call to delete_option(AI1WM_AUTH_PASSWORD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

uninstall.php:50
  - Uninstall deletion call: DELETION call to delete_option(AI1WM_STATUS) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:51
  - Uninstall deletion call: DELETION call to delete_option(AI1WM_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:52
  - Uninstall deletion call: DELETION call to delete_option(AI1WM_AUTH_USER) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:53
  - Uninstall deletion call: DELETION call to delete_option(AI1WM_AUTH_PASSWORD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

By data type:
email
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
file
	PHPRetrievalDetector.fgetc($this->file_handle) - {'file'}
	PHPStorageDetector.fwrite($this->file_handle, $block) - {'file'}
	PHPRetrievalDetector.fread($this->file_handle, 4377) - {'file'}
	PHPRetrievalDetector.file_get_contents(AI1WM_WORDPRESS_WEBCONFIG) - {'file'}
	PHPRetrievalDetector.fgetcsv($themes_list) - {'file'}
	PHPStorageDetector.touch($path) - {'file'}
	PHPRetrievalDetector.fgetcsv($content_list) - {'file'}
	PHPRetrievalDetector.fgets($file_handler) - {'file'}
	PHPRetrievalDetector.file_get_contents(AI1WM_WORDPRESS_HTACCESS) - {'file'}
	PHPRetrievalDetector.fread($this->file_handle, 4377) - {'file'}
	PHPRetrievalDetector.fread($handle, $length) - {'file'}
	PHPRetrievalDetector.fread($this->file_handle, $chunk_size) - {'file'}
	PHPStorageDetector.fwrite($handle, $content) - {'file'}
	PHPRetrievalDetector.fgetc($this->file_handle) - {'file'}
	PHPStorageDetector.fwrite($this->file_handle, $file_content) - {'file'}
	PHPStorageDetector.fwrite($this->file_handle, $this->eof) - {'file'}
	PHPStorageDetector.fwrite($this->file_handle, $block) - {'file'}
	PHPRetrievalDetector.fgetcsv($tables_list) - {'file'}
	PHPRetrievalDetector.fgetcsv($media_list) - {'file'}
	PHPRetrievalDetector.fread($file_handle, 512000) - {'file'}
	PHPRetrievalDetector.fread($this->file_handle, 4377) - {'file'}
	PHPRetrievalDetector.fread($this->file_handle, 4377) - {'file'}
	PHPStorageDetector.fputcsv($handle, $fields) - {'file'}
	PHPRetrievalDetector.fgetc($file_handle) - {'file'}
	PHPStorageDetector.fwrite($handle, $content) - {'file'}
	PHPRetrievalDetector.fread($this->file_handle, 4377) - {'file'}
	PHPStorageDetector.touch($file_name, $file_mtime) - {'file'}
	PHPRetrievalDetector.fgetcsv($plugins_list) - {'file'}
	PHPStorageDetector.touch($file, $mtime) - {'file'}
	PHPStorageDetector.fwrite($file_handle, $file_content) - {'file'}
none
	GenericEncryptionDetector.ai1wm_servmask_prefix("basesite") - set()
	PHPIncludedDetector.(unknown) - set()
	GenericEncryptionDetector.ai1wm_servmask_prefix() - set()
	GenericEncryptionDetector.ai1wm_servmask_prefix($blog["Old"]["BlogID"]) - set()
	GenericEncryptionDetector.ai1wm_servmask_prefix() - set()
	GenericEncryptionDetector.ai1wm_active_servmask_plugins() - set()
	GenericEncryptionDetector.ai1wm_servmask_prefix() - set()
	GenericEncryptionDetector.ai1wm_active_servmask_plugins() - set()
	PHPIncludedDetector.(unknown) - set()
	GenericEncryptionDetector.ai1wm_servmask_prefix("mainsite") - set()
	GenericEncryptionDetector.ai1wm_servmask_prefix("mainsite") - set()
	GenericEncryptionDetector.ai1wm_servmask_prefix() - set()
	GenericEncryptionDetector.ai1wm_servmask_prefix($blog["Old"]["BlogID"]) - set()
option
	WordPressStorageDetector.update_option(AI1WM_SITE_URL, $site_url) - {'option'}
	WordPressRetrievalDetector.get_option("admin_email", false) - {'option'}
	WordPressStorageDetector.delete_option("fs_dbg_accounts") - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_STATUS, []) - {'option'}
	WordPressRetrievalDetector.get_option($extensions[$slug]["key"]) - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_BACKUPS_LABELS, []) - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_AUTH_USER) - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_SECRET_KEY) - {'option'}
	WordPressStorageDetector.update_option("fs_accounts", $fs_accounts) - {'option'}
	WordPressStorageDetector.update_option(AI1WM_CRON, $cron) - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_UPDATER, []) - {'option'}
	DeletionDetector.delete_option(AI1WM_STATUS) - {'option'}
	WordPressRetrievalDetector.get_option("fs_accounts", []) - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_SECRET_KEY) - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_SECRET_KEY) - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_CRON, []) - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_AUTH_USER) - {'option'}
	WordPressStorageDetector.delete_option(AI1WM_STATUS) - {'option'}
	UninstallDetector.delete_option(AI1WM_STATUS) - {'option'}
	WordPressStorageDetector.update_option(AI1WM_SITES_LINKS, $sites_links) - {'option'}
	WordPressStorageDetector.update_option(AI1WM_SECRET_KEY, $secret_key) - {'option'}
	WordPressStorageDetector.update_option(AI1WM_UPLOADS_PATH, $uploads_path) - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_SECRET_KEY) - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_JETPACK_ACTIVE_MODULES, []) - {'option'}
	DeletionDetector.delete_option("elementor-custom-breakpoints-files") - {'option'}
	DeletionDetector.delete_option("fs_debug_mode") - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_AUTH_USER) - {'option'}
	WordPressRetrievalDetector.get_option("upload_url_path") - {'option'}
	WordPressStorageDetector.update_option(AI1WM_UPDATER, $updater) - {'option'}
	DeletionDetector.delete_option(AI1WM_AUTH_USER) - {'option'}
	WordPressStorageDetector.update_option(AI1WM_ACTIVE_PLUGINS, []) - {'option'}
	DeletionDetector.delete_option(AI1WM_SECRET_KEY) - {'option'}
	WordPressRetrievalDetector.get_option($extension["key"]) - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_SECRET_KEY) - {'option'}
	WordPressRetrievalDetector.get_option("upload_path") - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_SECRET_KEY) - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_CRON, []) - {'option'}
	WordPressStorageDetector.update_option(AI1WM_UPLOADS_URL_PATH, $uploads_url_path) - {'option'}
	WordPressStorageDetector.delete_option("fs_accounts") - {'option'}
	WordPressStorageDetector.update_option(AI1WM_JETPACK_ACTIVE_MODULES, $current) - {'option'}
	WordPressRetrievalDetector.get_option("gmt_offset") - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_HOME_URL) - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_force_ssl_checkout") - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_SECRET_KEY) - {'option'}
	WordPressStorageDetector.update_option("woocommerce_force_ssl_checkout", "no") - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_SECRET_KEY) - {'option'}
	WordPressRetrievalDetector.get_option($extension["key"]) - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_SWIFT_OPTIMIZER_PLUGIN_ORGANIZER, []) - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_BACKUPS_LABELS, []) - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_SITE_URL) - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_INITIAL_DB_VERSION) - {'option'}
	WordPressRetrievalDetector.get_option("admin_email") - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_SECRET_KEY) - {'option'}
	WordPressStorageDetector.delete_option("fs_active_plugins") - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_AUTH_USER) - {'option'}
	WordPressStorageDetector.delete_option(AI1WM_AUTH_USER) - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_DB_VERSION) - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_UPDATER, []) - {'option'}
	WordPressStorageDetector.delete_option(AI1WM_SECRET_KEY) - {'option'}
	WordPressStorageDetector.update_option(AI1WM_BACKUPS_LABELS, $backups_labels) - {'option'}
	DeletionDetector.delete_option(AI1WM_AUTH_PASSWORD) - {'option'}
	UninstallDetector.delete_option(AI1WM_AUTH_PASSWORD) - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_SECRET_KEY) - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_UPDATER, []) - {'option'}
	WordPressRetrievalDetector.get_option("upload_url_path") - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_SECRET_KEY) - {'option'}
	WordPressStorageDetector.update_option(AI1WM_AUTH_PASSWORD, $auth_password) - {'option'}
	WordPressStorageDetector.delete_option(AI1WM_AUTH_PASSWORD) - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_UPLOADS_URL_PATH) - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_BACKUPS_LABELS, []) - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_SITES_LINKS, []) - {'option'}
	UninstallDetector.delete_option(AI1WM_AUTH_USER) - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_MESSAGES, []) - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_AUTH_PASSWORD) - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_SECRET_KEY) - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_SECRET_KEY) - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_SECRET_KEY) - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_ACTIVE_PLUGINS, []) - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_MESSAGES, []) - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_UPDATER, []) - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_BACKUPS_LABELS, []) - {'option'}
	WordPressStorageDetector.delete_option("fs_api_cache") - {'option'}
	UninstallDetector.delete_option(AI1WM_SECRET_KEY) - {'option'}
	WordPressRetrievalDetector.get_option($extension["key"]) - {'option'}
	WordPressStorageDetector.update_option(AI1WM_HOME_URL, $home_url) - {'option'}
	WordPressStorageDetector.update_option(AI1WM_AUTH_USER, $auth_user) - {'option'}
	DeletionDetector.delete_option("fs_dbg_accounts") - {'option'}
	WordPressStorageDetector.update_option(AI1WM_MESSAGES, $messages) - {'option'}
	WordPressStorageDetector.update_option(AI1WM_ACTIVE_STYLESHEET, $stylesheet) - {'option'}
	DeletionDetector.delete_option("fs_dbg_api_cache") - {'option'}
	WordPressStorageDetector.update_option(AI1WM_AUTH_USER, $_SERVER["REMOTE_USER"]) - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_SECRET_KEY) - {'option'}
	WordPressStorageDetector.update_option(AI1WM_MESSAGES, array_merge($messages, [$type => $message])) - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_SECRET_KEY) - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_UPLOADS_PATH) - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_AUTH_PASSWORD) - {'option'}
	WordPressStorageDetector.update_option(AI1WM_DB_VERSION, get_option(AI1WM_INITIAL_DB_VERSION)) - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_ACTIVE_PLUGINS, []) - {'option'}
	WordPressStorageDetector.update_option(AI1WM_ACTIVE_PLUGINS, $current) - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_ACTIVE_TEMPLATE) - {'option'}
	WordPressStorageDetector.update_option($extensions[$extension]["key"], $uuid) - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_MESSAGES, []) - {'option'}
	WordPressRetrievalDetector.get_option("admin_email", false) - {'option'}
	WordPressStorageDetector.update_option(AI1WM_SWIFT_OPTIMIZER_PLUGIN_ORGANIZER, $current) - {'option'}
	DeletionDetector.delete_option("fs_accounts") - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_ACTIVE_STYLESHEET) - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_AUTH_PASSWORD) - {'option'}
	WordPressStorageDetector.update_option(AI1WM_ACTIVE_TEMPLATE, $template) - {'option'}
	WordPressStorageDetector.update_option(AI1WM_STATUS, $data) - {'option'}
	DeletionDetector.delete_option("fs_active_plugins") - {'option'}
	WordPressStorageDetector.update_option(AI1WM_ACTIVE_PLUGINS, $current) - {'option'}
	WordPressStorageDetector.delete_option("elementor-custom-breakpoints-files") - {'option'}
	WordPressStorageDetector.update_option(AI1WM_AUTH_PASSWORD, $_SERVER["PHP_AUTH_PW"]) - {'option'}
	WordPressStorageDetector.delete_option("fs_debug_mode") - {'option'}
	WordPressRetrievalDetector.get_option("upload_path") - {'option'}
	WordPressStorageDetector.update_option("woocommerce_force_ssl_checkout", "yes") - {'option'}
	WordPressStorageDetector.update_option(AI1WM_SECRET_KEY, ai1wm_generate_random_string(12)) - {'option'}
	WordPressStorageDetector.update_option(AI1WM_AUTH_USER, $_SERVER["PHP_AUTH_USER"]) - {'option'}
	WordPressStorageDetector.delete_option("_elementor_global_css") - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_ACTIVE_PLUGINS, []) - {'option'}
	WordPressRetrievalDetector.get_option("timezone_string") - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_UPDATER, []) - {'option'}
	WordPressStorageDetector.update_option(AI1WM_BACKUPS_LABELS, $labels) - {'option'}
	DeletionDetector.delete_option("_elementor_global_css") - {'option'}
	DeletionDetector.delete_option("fs_api_cache") - {'option'}
	WordPressStorageDetector.update_option(AI1WM_BACKUPS_LABELS, $labels) - {'option'}
	WordPressRetrievalDetector.get_option(AI1WM_AUTH_PASSWORD) - {'option'}
	WordPressStorageDetector.delete_option("fs_dbg_api_cache") - {'option'}
password
	VariableDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
post_meta
	WordPressStorageDetector.delete_post_meta_by_key("_elementor_css") - {'post_meta'}
remote
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
user
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
user_meta
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:27.831579.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 3206 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.834875.

1000 STORE_REACHES edges created
2000 STORE_REACHES edges created
3000 STORE_REACHES edges created
3206 STORE_REACHES edges created
3206 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 437 nodes as PERSONAL
In total, tainted 437 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 32 nodes as ENCRYPTED
In total, tainted 32 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:15.275213.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:04:11.507347!
DELETION call to delete_option("_elementor_global_css") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("elementor-custom-breakpoints-files") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("fs_accounts") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("fs_dbg_accounts") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("fs_active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("fs_api_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("fs_dbg_api_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("fs_debug_mode") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option(AI1WM_STATUS) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option(AI1WM_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option(AI1WM_AUTH_USER) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option(AI1WM_AUTH_PASSWORD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
CRYPTOGRAPHY call to ai1wm_active_servmask_plugins().,None,None
CRYPTOGRAPHY call to ai1wm_servmask_prefix().,None,None
CRYPTOGRAPHY call to ai1wm_servmask_prefix().,None,None
CRYPTOGRAPHY call to ai1wm_servmask_prefix().,None,None
CRYPTOGRAPHY call to ai1wm_active_servmask_plugins().,None,None
CRYPTOGRAPHY call to ai1wm_servmask_prefix($blog["Old"]["BlogID"]).,None,None
CRYPTOGRAPHY call to ai1wm_servmask_prefix("mainsite").,None,None
CRYPTOGRAPHY call to ai1wm_servmask_prefix("mainsite").,None,None
CRYPTOGRAPHY call to ai1wm_servmask_prefix("basesite").,None,None
CRYPTOGRAPHY call to ai1wm_servmask_prefix($blog["Old"]["BlogID"]).,None,None
CRYPTOGRAPHY call to ai1wm_servmask_prefix().,None,None
MD5 called with parameters [serialize, args]. Ignore if [serialize, args] does not contain personal information.,md5,None
MD5 called with parameters [content]. Ignore if [content] does not contain personal information.,md5,None
RETRIEVAL call to fread($handle, $length).,None,None
RETRIEVAL call to fgetc($file_handle).,None,None
RETRIEVAL call to file_get_contents(AI1WM_WORDPRESS_HTACCESS).,None,None
RETRIEVAL call to file_get_contents(AI1WM_WORDPRESS_WEBCONFIG).,None,None
RETRIEVAL call to fgetcsv($content_list).,None,None
RETRIEVAL call to fgetcsv($tables_list).,None,None
RETRIEVAL call to fgetcsv($media_list).,None,None
RETRIEVAL call to fgetcsv($plugins_list).,None,None
RETRIEVAL call to fgetcsv($themes_list).,None,None
RETRIEVAL call to fread($this->file_handle, 4377).,None,None
RETRIEVAL call to fread($file_handle, 512000).,None,None
RETRIEVAL call to fread($this->file_handle, 4377).,None,None
RETRIEVAL call to fread($this->file_handle, 4377).,None,None
RETRIEVAL call to fgetc($this->file_handle).,None,None
RETRIEVAL call to fread($this->file_handle, 4377).,None,None
RETRIEVAL call to fgetc($this->file_handle).,None,None
RETRIEVAL call to fread($this->file_handle, $chunk_size).,None,None
RETRIEVAL call to fread($this->file_handle, 4377).,None,None
RETRIEVAL call to fgets($file_handler).,None,None
STORAGE call to fwrite($handle, $content).,None,None
STORAGE call to fputcsv($handle, $fields).,None,None
STORAGE call to touch($file, $mtime).,None,None
STORAGE call to fwrite($this->file_handle, $this->eof).,None,None
STORAGE call to fwrite($this->file_handle, $block).,None,None
STORAGE call to fwrite($this->file_handle, $block).,None,None
STORAGE call to fwrite($this->file_handle, $file_content).,None,None
STORAGE call to fwrite($file_handle, $file_content).,None,None
STORAGE call to touch($file_name, $file_mtime).,None,None
STORAGE call to touch($path).,None,None
STORAGE call to fwrite($handle, $content).,None,None
Uninstall deletion call: DELETION call to delete_option(AI1WM_STATUS) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option(AI1WM_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option(AI1WM_AUTH_USER) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option(AI1WM_AUTH_PASSWORD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$auth_password' of personal types {'password'} is found.,,None
variable '$auth_password' of personal types {'password'} is found.,,None
API call to wp_remote_request(apply_filters("ai1wm_http_export_url", add_query_arg(["ai1wm_import" => 1], admin_url("admin-ajax.php?action=ai1wm_export"))), ["method" => apply_filters("ai1wm_http_export_method", "POST"), "timeout" => apply_filters("ai1wm_http_export_timeout", 10), "blocking" => apply_filters("ai1wm_http_export_blocking", false), "sslverify" => apply_filters("ai1wm_http_export_sslverify", false), "headers" => apply_filters("ai1wm_http_export_headers", []), "body" => apply_filters("ai1wm_http_export_body", $params)]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_request(apply_filters("ai1wm_http_import_url", add_query_arg(["ai1wm_import" => 1], admin_url("admin-ajax.php?action=ai1wm_import"))), ["method" => apply_filters("ai1wm_http_import_method", "POST"), "timeout" => apply_filters("ai1wm_http_import_timeout", 10), "blocking" => apply_filters("ai1wm_http_import_blocking", false), "sslverify" => apply_filters("ai1wm_http_import_sslverify", false), "headers" => apply_filters("ai1wm_http_import_headers", []), "body" => apply_filters("ai1wm_http_import_body", $params)]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_post(AI1WM_FEEDBACK_URL, ["timeout" => 15, "body" => ["type" => $type, "email" => $email, "message" => $message, "purchases" => $purchases]]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_get($extension["about"], ["timeout" => 15, "headers" => ["Accept" => "application/json"]]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_get(add_query_arg(["site_url" => get_site_url(), "admin_email" => get_option("admin_email")], sprintf("%s/%s", $extension["check"], $purchase_id)), ["timeout" => 15, "headers" => ["Accept" => "application/json"]]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
RETRIEVAL call to get_option(AI1WM_ACTIVE_PLUGINS, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_ACTIVE_PLUGINS, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_ACTIVE_TEMPLATE) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_ACTIVE_STYLESHEET) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_ACTIVE_PLUGINS, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_JETPACK_ACTIVE_MODULES, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_SWIFT_OPTIMIZER_PLUGIN_ORGANIZER, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_DB_VERSION) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_INITIAL_DB_VERSION) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_force_ssl_checkout") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("timezone_string") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("gmt_offset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_AUTH_USER) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_AUTH_PASSWORD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_AUTH_USER) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_AUTH_PASSWORD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($extension["key"]) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_AUTH_USER) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_AUTH_PASSWORD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_option(AI1WM_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_STATUS, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_UPDATER, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_BACKUPS_LABELS, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_BACKUPS_LABELS, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_BACKUPS_LABELS, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_MESSAGES, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_MESSAGES, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_MESSAGES, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("admin_email", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("admin_email", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_UPDATER, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option($extension["key"]) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_UPDATER, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option($extension["key"]) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_UPDATER, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_UPDATER, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option($extensions[$slug]["key"]) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("upload_path") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("upload_url_path") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("upload_path") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("upload_url_path") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_SITE_URL) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_HOME_URL) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_AUTH_USER) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_AUTH_PASSWORD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_UPLOADS_PATH) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_UPLOADS_URL_PATH) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_BACKUPS_LABELS, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_SITES_LINKS, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("fs_accounts", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_CRON, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option(AI1WM_CRON, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
STORAGE call to update_option(AI1WM_ACTIVE_PLUGINS, $current) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(AI1WM_ACTIVE_TEMPLATE, $template) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(AI1WM_ACTIVE_STYLESHEET, $stylesheet) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(AI1WM_ACTIVE_PLUGINS, $current) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(AI1WM_JETPACK_ACTIVE_MODULES, $current) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(AI1WM_SWIFT_OPTIMIZER_PLUGIN_ORGANIZER, $current) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(AI1WM_DB_VERSION, get_option(AI1WM_INITIAL_DB_VERSION)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_post_meta_by_key("_elementor_css") alters data types {'post_meta'}. Passed arguments: 0: $post_meta_key (string). Returns (bool).,None,None
STORAGE call to delete_option("_elementor_global_css") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("elementor-custom-breakpoints-files") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("woocommerce_force_ssl_checkout", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("woocommerce_force_ssl_checkout", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(AI1WM_AUTH_USER, $_SERVER["PHP_AUTH_USER"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(AI1WM_AUTH_USER, $_SERVER["REMOTE_USER"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(AI1WM_AUTH_PASSWORD, $_SERVER["PHP_AUTH_PW"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(AI1WM_SECRET_KEY, ai1wm_generate_random_string(12)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option($extensions[$extension]["key"], $uuid) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(AI1WM_BACKUPS_LABELS, $labels) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(AI1WM_BACKUPS_LABELS, $labels) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(AI1WM_MESSAGES, array_merge($messages, [$type => $message])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(AI1WM_MESSAGES, $messages) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(AI1WM_STATUS, $data) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(AI1WM_UPDATER, $updater) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(AI1WM_ACTIVE_PLUGINS, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(AI1WM_SITE_URL, $site_url) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(AI1WM_HOME_URL, $home_url) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(AI1WM_SECRET_KEY, $secret_key) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(AI1WM_AUTH_USER, $auth_user) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(AI1WM_AUTH_PASSWORD, $auth_password) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(AI1WM_UPLOADS_PATH, $uploads_path) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(AI1WM_UPLOADS_URL_PATH, $uploads_url_path) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(AI1WM_BACKUPS_LABELS, $backups_labels) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(AI1WM_SITES_LINKS, $sites_links) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("fs_accounts", $fs_accounts) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("fs_accounts") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("fs_dbg_accounts") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("fs_active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("fs_api_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("fs_dbg_api_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("fs_debug_mode") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option(AI1WM_CRON, $cron) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option(AI1WM_STATUS) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option(AI1WM_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option(AI1WM_AUTH_USER) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option(AI1WM_AUTH_PASSWORD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] PII of types (['email', 'password']) stored through WordPress function "update_option(AI1WM_SITE_URL, $site_url)", found in file lib/model/import/class-ai1wm-import-database.php at line 1027. 

[has_storage] PII of types (['email', 'password']) stored through WordPress function "update_option("fs_accounts", $fs_accounts)", found in file lib/model/import/class-ai1wm-import-options.php at line 67. 

[has_storage] PII of types (['email', 'password']) stored through WordPress function "update_option(AI1WM_CRON, $cron)", found in file lib/vendor/servmask/cron/class-ai1wm-cron.php at line 81. 

[has_storage] PII of types (['email', 'password']) stored through WordPress function "update_option(AI1WM_SITES_LINKS, $sites_links)", found in file lib/model/import/class-ai1wm-import-database.php at line 1051. 

[has_storage] PII of types (['email', 'password']) stored through WordPress function "update_option(AI1WM_SECRET_KEY, $secret_key)", found in file lib/model/import/class-ai1wm-import-database.php at line 1033. 

[has_storage] PII of types (['email', 'password']) stored through WordPress function "update_option(AI1WM_UPLOADS_PATH, $uploads_path)", found in file lib/model/import/class-ai1wm-import-database.php at line 1042. 

[has_storage] PII of types (['email', 'password']) stored through WordPress function "update_option(AI1WM_UPDATER, $updater)", found in file lib/model/class-ai1wm-updater.php at line 173. 

[has_storage] PII of types (['email', 'password']) stored through WordPress function "update_option(AI1WM_UPLOADS_URL_PATH, $uploads_url_path)", found in file lib/model/import/class-ai1wm-import-database.php at line 1045. 

[has_storage] PII of types (['email', 'password']) stored through WordPress function "update_option(AI1WM_JETPACK_ACTIVE_MODULES, $current)", found in file functions.php at line 1150. 

[has_storage] PII of types (['email', 'password']) stored through WordPress function "update_option(AI1WM_BACKUPS_LABELS, $backups_labels)", found in file lib/model/import/class-ai1wm-import-database.php at line 1048. 

[has_storage] PII of types (['email', 'password']) stored through WordPress function "update_option(AI1WM_AUTH_PASSWORD, $auth_password)", found in file lib/model/import/class-ai1wm-import-database.php at line 1039. 

[has_storage] PII of types (['email', 'password']) stored through WordPress function "update_option(AI1WM_HOME_URL, $home_url)", found in file lib/model/import/class-ai1wm-import-database.php at line 1030. 

[has_storage] PII of types (['email', 'password']) stored through WordPress function "update_option(AI1WM_AUTH_USER, $auth_user)", found in file lib/model/import/class-ai1wm-import-database.php at line 1036. 

[has_storage] PII of types (['email', 'password']) stored through WordPress function "update_option(AI1WM_MESSAGES, $messages)", found in file lib/model/class-ai1wm-message.php at line 58. 

[has_storage] PII of types (['email', 'password']) stored through WordPress function "update_option(AI1WM_MESSAGES, array_merge($messages, [$type => $message]))", found in file lib/model/class-ai1wm-message.php at line 34. 

[has_storage] PII of types (['email', 'password']) stored through WordPress function "update_option(AI1WM_DB_VERSION, get_option(AI1WM_INITIAL_DB_VERSION))", found in file functions.php at line 1237. 

[has_storage] PII of types (['email', 'password']) stored through WordPress function "update_option(AI1WM_ACTIVE_PLUGINS, $current)", found in file functions.php at line 1054. 

[has_storage] PII of types (['email', 'password']) stored through WordPress function "update_option(AI1WM_SWIFT_OPTIMIZER_PLUGIN_ORGANIZER, $current)", found in file functions.php at line 1167. 

[has_storage] PII of types (['email', 'password']) stored through WordPress function "update_option(AI1WM_ACTIVE_PLUGINS, $current)", found in file functions.php at line 1131. 

[has_storage] PII of types (['email', 'password']) stored through WordPress function "update_option(AI1WM_BACKUPS_LABELS, $labels)", found in file lib/model/class-ai1wm-backups.php at line 130. 

[has_storage] PII of types (['email', 'password']) stored through WordPress function "update_option(AI1WM_BACKUPS_LABELS, $labels)", found in file lib/model/class-ai1wm-backups.php at line 144. 

[has_storage] Storage check is WP 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SITE_URL, $site_url) has deletion method delete_option("_elementor_global_css"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1027. Deletion method found in file functions.php at line 1339. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SITE_URL, $site_url) has deletion method delete_option("elementor-custom-breakpoints-files"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1027. Deletion method found in file functions.php at line 1340. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SITE_URL, $site_url) has deletion method delete_option("fs_accounts"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1027. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 69. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SITE_URL, $site_url) has deletion method delete_option("fs_dbg_accounts"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1027. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 70. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SITE_URL, $site_url) has deletion method delete_option("fs_active_plugins"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1027. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 71. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SITE_URL, $site_url) has deletion method delete_option("fs_api_cache"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1027. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 72. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SITE_URL, $site_url) has deletion method delete_option("fs_dbg_api_cache"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1027. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 73. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SITE_URL, $site_url) has deletion method delete_option("fs_debug_mode"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1027. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 74. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SITE_URL, $site_url) has deletion method delete_option(AI1WM_STATUS). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1027. Deletion method found in file uninstall.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SITE_URL, $site_url) has deletion method delete_option(AI1WM_SECRET_KEY). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1027. Deletion method found in file uninstall.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SITE_URL, $site_url) has deletion method delete_option(AI1WM_AUTH_USER). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1027. Deletion method found in file uninstall.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SITE_URL, $site_url) has deletion method delete_option(AI1WM_AUTH_PASSWORD). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1027. Deletion method found in file uninstall.php at line 53. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fs_accounts", $fs_accounts) has deletion method delete_option("_elementor_global_css"). Storage method found in file lib/model/import/class-ai1wm-import-options.php at line 67. Deletion method found in file functions.php at line 1339. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fs_accounts", $fs_accounts) has deletion method delete_option("elementor-custom-breakpoints-files"). Storage method found in file lib/model/import/class-ai1wm-import-options.php at line 67. Deletion method found in file functions.php at line 1340. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fs_accounts", $fs_accounts) has deletion method delete_option("fs_accounts"). Storage method found in file lib/model/import/class-ai1wm-import-options.php at line 67. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 69. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fs_accounts", $fs_accounts) has deletion method delete_option("fs_dbg_accounts"). Storage method found in file lib/model/import/class-ai1wm-import-options.php at line 67. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 70. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fs_accounts", $fs_accounts) has deletion method delete_option("fs_active_plugins"). Storage method found in file lib/model/import/class-ai1wm-import-options.php at line 67. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 71. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fs_accounts", $fs_accounts) has deletion method delete_option("fs_api_cache"). Storage method found in file lib/model/import/class-ai1wm-import-options.php at line 67. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 72. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fs_accounts", $fs_accounts) has deletion method delete_option("fs_dbg_api_cache"). Storage method found in file lib/model/import/class-ai1wm-import-options.php at line 67. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 73. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fs_accounts", $fs_accounts) has deletion method delete_option("fs_debug_mode"). Storage method found in file lib/model/import/class-ai1wm-import-options.php at line 67. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 74. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fs_accounts", $fs_accounts) has deletion method delete_option(AI1WM_STATUS). Storage method found in file lib/model/import/class-ai1wm-import-options.php at line 67. Deletion method found in file uninstall.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fs_accounts", $fs_accounts) has deletion method delete_option(AI1WM_SECRET_KEY). Storage method found in file lib/model/import/class-ai1wm-import-options.php at line 67. Deletion method found in file uninstall.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fs_accounts", $fs_accounts) has deletion method delete_option(AI1WM_AUTH_USER). Storage method found in file lib/model/import/class-ai1wm-import-options.php at line 67. Deletion method found in file uninstall.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fs_accounts", $fs_accounts) has deletion method delete_option(AI1WM_AUTH_PASSWORD). Storage method found in file lib/model/import/class-ai1wm-import-options.php at line 67. Deletion method found in file uninstall.php at line 53. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_CRON, $cron) has deletion method delete_option("_elementor_global_css"). Storage method found in file lib/vendor/servmask/cron/class-ai1wm-cron.php at line 81. Deletion method found in file functions.php at line 1339. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_CRON, $cron) has deletion method delete_option("elementor-custom-breakpoints-files"). Storage method found in file lib/vendor/servmask/cron/class-ai1wm-cron.php at line 81. Deletion method found in file functions.php at line 1340. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_CRON, $cron) has deletion method delete_option("fs_accounts"). Storage method found in file lib/vendor/servmask/cron/class-ai1wm-cron.php at line 81. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 69. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_CRON, $cron) has deletion method delete_option("fs_dbg_accounts"). Storage method found in file lib/vendor/servmask/cron/class-ai1wm-cron.php at line 81. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 70. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_CRON, $cron) has deletion method delete_option("fs_active_plugins"). Storage method found in file lib/vendor/servmask/cron/class-ai1wm-cron.php at line 81. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 71. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_CRON, $cron) has deletion method delete_option("fs_api_cache"). Storage method found in file lib/vendor/servmask/cron/class-ai1wm-cron.php at line 81. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 72. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_CRON, $cron) has deletion method delete_option("fs_dbg_api_cache"). Storage method found in file lib/vendor/servmask/cron/class-ai1wm-cron.php at line 81. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 73. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_CRON, $cron) has deletion method delete_option("fs_debug_mode"). Storage method found in file lib/vendor/servmask/cron/class-ai1wm-cron.php at line 81. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 74. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_CRON, $cron) has deletion method delete_option(AI1WM_STATUS). Storage method found in file lib/vendor/servmask/cron/class-ai1wm-cron.php at line 81. Deletion method found in file uninstall.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_CRON, $cron) has deletion method delete_option(AI1WM_SECRET_KEY). Storage method found in file lib/vendor/servmask/cron/class-ai1wm-cron.php at line 81. Deletion method found in file uninstall.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_CRON, $cron) has deletion method delete_option(AI1WM_AUTH_USER). Storage method found in file lib/vendor/servmask/cron/class-ai1wm-cron.php at line 81. Deletion method found in file uninstall.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_CRON, $cron) has deletion method delete_option(AI1WM_AUTH_PASSWORD). Storage method found in file lib/vendor/servmask/cron/class-ai1wm-cron.php at line 81. Deletion method found in file uninstall.php at line 53. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SITES_LINKS, $sites_links) has deletion method delete_option("_elementor_global_css"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1051. Deletion method found in file functions.php at line 1339. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SITES_LINKS, $sites_links) has deletion method delete_option("elementor-custom-breakpoints-files"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1051. Deletion method found in file functions.php at line 1340. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SITES_LINKS, $sites_links) has deletion method delete_option("fs_accounts"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1051. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 69. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SITES_LINKS, $sites_links) has deletion method delete_option("fs_dbg_accounts"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1051. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 70. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SITES_LINKS, $sites_links) has deletion method delete_option("fs_active_plugins"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1051. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 71. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SITES_LINKS, $sites_links) has deletion method delete_option("fs_api_cache"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1051. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 72. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SITES_LINKS, $sites_links) has deletion method delete_option("fs_dbg_api_cache"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1051. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 73. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SITES_LINKS, $sites_links) has deletion method delete_option("fs_debug_mode"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1051. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 74. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SITES_LINKS, $sites_links) has deletion method delete_option(AI1WM_STATUS). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1051. Deletion method found in file uninstall.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SITES_LINKS, $sites_links) has deletion method delete_option(AI1WM_SECRET_KEY). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1051. Deletion method found in file uninstall.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SITES_LINKS, $sites_links) has deletion method delete_option(AI1WM_AUTH_USER). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1051. Deletion method found in file uninstall.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SITES_LINKS, $sites_links) has deletion method delete_option(AI1WM_AUTH_PASSWORD). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1051. Deletion method found in file uninstall.php at line 53. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SECRET_KEY, $secret_key) has deletion method delete_option("_elementor_global_css"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1033. Deletion method found in file functions.php at line 1339. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SECRET_KEY, $secret_key) has deletion method delete_option("elementor-custom-breakpoints-files"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1033. Deletion method found in file functions.php at line 1340. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SECRET_KEY, $secret_key) has deletion method delete_option("fs_accounts"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1033. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 69. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SECRET_KEY, $secret_key) has deletion method delete_option("fs_dbg_accounts"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1033. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 70. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SECRET_KEY, $secret_key) has deletion method delete_option("fs_active_plugins"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1033. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 71. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SECRET_KEY, $secret_key) has deletion method delete_option("fs_api_cache"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1033. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 72. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SECRET_KEY, $secret_key) has deletion method delete_option("fs_dbg_api_cache"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1033. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 73. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SECRET_KEY, $secret_key) has deletion method delete_option("fs_debug_mode"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1033. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 74. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SECRET_KEY, $secret_key) has deletion method delete_option(AI1WM_STATUS). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1033. Deletion method found in file uninstall.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SECRET_KEY, $secret_key) has deletion method delete_option(AI1WM_SECRET_KEY). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1033. Deletion method found in file uninstall.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SECRET_KEY, $secret_key) has deletion method delete_option(AI1WM_AUTH_USER). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1033. Deletion method found in file uninstall.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SECRET_KEY, $secret_key) has deletion method delete_option(AI1WM_AUTH_PASSWORD). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1033. Deletion method found in file uninstall.php at line 53. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_UPLOADS_PATH, $uploads_path) has deletion method delete_option("_elementor_global_css"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1042. Deletion method found in file functions.php at line 1339. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_UPLOADS_PATH, $uploads_path) has deletion method delete_option("elementor-custom-breakpoints-files"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1042. Deletion method found in file functions.php at line 1340. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_UPLOADS_PATH, $uploads_path) has deletion method delete_option("fs_accounts"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1042. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 69. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_UPLOADS_PATH, $uploads_path) has deletion method delete_option("fs_dbg_accounts"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1042. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 70. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_UPLOADS_PATH, $uploads_path) has deletion method delete_option("fs_active_plugins"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1042. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 71. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_UPLOADS_PATH, $uploads_path) has deletion method delete_option("fs_api_cache"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1042. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 72. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_UPLOADS_PATH, $uploads_path) has deletion method delete_option("fs_dbg_api_cache"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1042. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 73. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_UPLOADS_PATH, $uploads_path) has deletion method delete_option("fs_debug_mode"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1042. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 74. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_UPLOADS_PATH, $uploads_path) has deletion method delete_option(AI1WM_STATUS). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1042. Deletion method found in file uninstall.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_UPLOADS_PATH, $uploads_path) has deletion method delete_option(AI1WM_SECRET_KEY). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1042. Deletion method found in file uninstall.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_UPLOADS_PATH, $uploads_path) has deletion method delete_option(AI1WM_AUTH_USER). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1042. Deletion method found in file uninstall.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_UPLOADS_PATH, $uploads_path) has deletion method delete_option(AI1WM_AUTH_PASSWORD). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1042. Deletion method found in file uninstall.php at line 53. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_UPDATER, $updater) has deletion method delete_option("_elementor_global_css"). Storage method found in file lib/model/class-ai1wm-updater.php at line 173. Deletion method found in file functions.php at line 1339. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_UPDATER, $updater) has deletion method delete_option("elementor-custom-breakpoints-files"). Storage method found in file lib/model/class-ai1wm-updater.php at line 173. Deletion method found in file functions.php at line 1340. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_UPDATER, $updater) has deletion method delete_option("fs_accounts"). Storage method found in file lib/model/class-ai1wm-updater.php at line 173. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 69. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_UPDATER, $updater) has deletion method delete_option("fs_dbg_accounts"). Storage method found in file lib/model/class-ai1wm-updater.php at line 173. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 70. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_UPDATER, $updater) has deletion method delete_option("fs_active_plugins"). Storage method found in file lib/model/class-ai1wm-updater.php at line 173. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 71. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_UPDATER, $updater) has deletion method delete_option("fs_api_cache"). Storage method found in file lib/model/class-ai1wm-updater.php at line 173. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 72. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_UPDATER, $updater) has deletion method delete_option("fs_dbg_api_cache"). Storage method found in file lib/model/class-ai1wm-updater.php at line 173. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 73. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_UPDATER, $updater) has deletion method delete_option("fs_debug_mode"). Storage method found in file lib/model/class-ai1wm-updater.php at line 173. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 74. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_UPDATER, $updater) has deletion method delete_option(AI1WM_STATUS). Storage method found in file lib/model/class-ai1wm-updater.php at line 173. Deletion method found in file uninstall.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_UPDATER, $updater) has deletion method delete_option(AI1WM_SECRET_KEY). Storage method found in file lib/model/class-ai1wm-updater.php at line 173. Deletion method found in file uninstall.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_UPDATER, $updater) has deletion method delete_option(AI1WM_AUTH_USER). Storage method found in file lib/model/class-ai1wm-updater.php at line 173. Deletion method found in file uninstall.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_UPDATER, $updater) has deletion method delete_option(AI1WM_AUTH_PASSWORD). Storage method found in file lib/model/class-ai1wm-updater.php at line 173. Deletion method found in file uninstall.php at line 53. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_UPLOADS_URL_PATH, $uploads_url_path) has deletion method delete_option("_elementor_global_css"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1045. Deletion method found in file functions.php at line 1339. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_UPLOADS_URL_PATH, $uploads_url_path) has deletion method delete_option("elementor-custom-breakpoints-files"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1045. Deletion method found in file functions.php at line 1340. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_UPLOADS_URL_PATH, $uploads_url_path) has deletion method delete_option("fs_accounts"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1045. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 69. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_UPLOADS_URL_PATH, $uploads_url_path) has deletion method delete_option("fs_dbg_accounts"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1045. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 70. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_UPLOADS_URL_PATH, $uploads_url_path) has deletion method delete_option("fs_active_plugins"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1045. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 71. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_UPLOADS_URL_PATH, $uploads_url_path) has deletion method delete_option("fs_api_cache"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1045. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 72. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_UPLOADS_URL_PATH, $uploads_url_path) has deletion method delete_option("fs_dbg_api_cache"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1045. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 73. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_UPLOADS_URL_PATH, $uploads_url_path) has deletion method delete_option("fs_debug_mode"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1045. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 74. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_UPLOADS_URL_PATH, $uploads_url_path) has deletion method delete_option(AI1WM_STATUS). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1045. Deletion method found in file uninstall.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_UPLOADS_URL_PATH, $uploads_url_path) has deletion method delete_option(AI1WM_SECRET_KEY). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1045. Deletion method found in file uninstall.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_UPLOADS_URL_PATH, $uploads_url_path) has deletion method delete_option(AI1WM_AUTH_USER). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1045. Deletion method found in file uninstall.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_UPLOADS_URL_PATH, $uploads_url_path) has deletion method delete_option(AI1WM_AUTH_PASSWORD). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1045. Deletion method found in file uninstall.php at line 53. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_JETPACK_ACTIVE_MODULES, $current) has deletion method delete_option("_elementor_global_css"). Storage method found in file functions.php at line 1150. Deletion method found in file functions.php at line 1339. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_JETPACK_ACTIVE_MODULES, $current) has deletion method delete_option("elementor-custom-breakpoints-files"). Storage method found in file functions.php at line 1150. Deletion method found in file functions.php at line 1340. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_JETPACK_ACTIVE_MODULES, $current) has deletion method delete_option("fs_accounts"). Storage method found in file functions.php at line 1150. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 69. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_JETPACK_ACTIVE_MODULES, $current) has deletion method delete_option("fs_dbg_accounts"). Storage method found in file functions.php at line 1150. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 70. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_JETPACK_ACTIVE_MODULES, $current) has deletion method delete_option("fs_active_plugins"). Storage method found in file functions.php at line 1150. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 71. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_JETPACK_ACTIVE_MODULES, $current) has deletion method delete_option("fs_api_cache"). Storage method found in file functions.php at line 1150. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 72. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_JETPACK_ACTIVE_MODULES, $current) has deletion method delete_option("fs_dbg_api_cache"). Storage method found in file functions.php at line 1150. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 73. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_JETPACK_ACTIVE_MODULES, $current) has deletion method delete_option("fs_debug_mode"). Storage method found in file functions.php at line 1150. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 74. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_JETPACK_ACTIVE_MODULES, $current) has deletion method delete_option(AI1WM_STATUS). Storage method found in file functions.php at line 1150. Deletion method found in file uninstall.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_JETPACK_ACTIVE_MODULES, $current) has deletion method delete_option(AI1WM_SECRET_KEY). Storage method found in file functions.php at line 1150. Deletion method found in file uninstall.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_JETPACK_ACTIVE_MODULES, $current) has deletion method delete_option(AI1WM_AUTH_USER). Storage method found in file functions.php at line 1150. Deletion method found in file uninstall.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_JETPACK_ACTIVE_MODULES, $current) has deletion method delete_option(AI1WM_AUTH_PASSWORD). Storage method found in file functions.php at line 1150. Deletion method found in file uninstall.php at line 53. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_BACKUPS_LABELS, $backups_labels) has deletion method delete_option("_elementor_global_css"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1048. Deletion method found in file functions.php at line 1339. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_BACKUPS_LABELS, $backups_labels) has deletion method delete_option("elementor-custom-breakpoints-files"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1048. Deletion method found in file functions.php at line 1340. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_BACKUPS_LABELS, $backups_labels) has deletion method delete_option("fs_accounts"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1048. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 69. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_BACKUPS_LABELS, $backups_labels) has deletion method delete_option("fs_dbg_accounts"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1048. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 70. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_BACKUPS_LABELS, $backups_labels) has deletion method delete_option("fs_active_plugins"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1048. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 71. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_BACKUPS_LABELS, $backups_labels) has deletion method delete_option("fs_api_cache"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1048. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 72. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_BACKUPS_LABELS, $backups_labels) has deletion method delete_option("fs_dbg_api_cache"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1048. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 73. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_BACKUPS_LABELS, $backups_labels) has deletion method delete_option("fs_debug_mode"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1048. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 74. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_BACKUPS_LABELS, $backups_labels) has deletion method delete_option(AI1WM_STATUS). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1048. Deletion method found in file uninstall.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_BACKUPS_LABELS, $backups_labels) has deletion method delete_option(AI1WM_SECRET_KEY). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1048. Deletion method found in file uninstall.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_BACKUPS_LABELS, $backups_labels) has deletion method delete_option(AI1WM_AUTH_USER). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1048. Deletion method found in file uninstall.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_BACKUPS_LABELS, $backups_labels) has deletion method delete_option(AI1WM_AUTH_PASSWORD). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1048. Deletion method found in file uninstall.php at line 53. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_AUTH_PASSWORD, $auth_password) has deletion method delete_option("_elementor_global_css"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1039. Deletion method found in file functions.php at line 1339. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_AUTH_PASSWORD, $auth_password) has deletion method delete_option("elementor-custom-breakpoints-files"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1039. Deletion method found in file functions.php at line 1340. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_AUTH_PASSWORD, $auth_password) has deletion method delete_option("fs_accounts"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1039. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 69. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_AUTH_PASSWORD, $auth_password) has deletion method delete_option("fs_dbg_accounts"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1039. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 70. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_AUTH_PASSWORD, $auth_password) has deletion method delete_option("fs_active_plugins"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1039. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 71. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_AUTH_PASSWORD, $auth_password) has deletion method delete_option("fs_api_cache"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1039. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 72. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_AUTH_PASSWORD, $auth_password) has deletion method delete_option("fs_dbg_api_cache"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1039. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 73. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_AUTH_PASSWORD, $auth_password) has deletion method delete_option("fs_debug_mode"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1039. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 74. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_AUTH_PASSWORD, $auth_password) has deletion method delete_option(AI1WM_STATUS). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1039. Deletion method found in file uninstall.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_AUTH_PASSWORD, $auth_password) has deletion method delete_option(AI1WM_SECRET_KEY). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1039. Deletion method found in file uninstall.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_AUTH_PASSWORD, $auth_password) has deletion method delete_option(AI1WM_AUTH_USER). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1039. Deletion method found in file uninstall.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_AUTH_PASSWORD, $auth_password) has deletion method delete_option(AI1WM_AUTH_PASSWORD). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1039. Deletion method found in file uninstall.php at line 53. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_HOME_URL, $home_url) has deletion method delete_option("_elementor_global_css"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1030. Deletion method found in file functions.php at line 1339. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_HOME_URL, $home_url) has deletion method delete_option("elementor-custom-breakpoints-files"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1030. Deletion method found in file functions.php at line 1340. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_HOME_URL, $home_url) has deletion method delete_option("fs_accounts"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1030. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 69. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_HOME_URL, $home_url) has deletion method delete_option("fs_dbg_accounts"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1030. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 70. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_HOME_URL, $home_url) has deletion method delete_option("fs_active_plugins"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1030. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 71. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_HOME_URL, $home_url) has deletion method delete_option("fs_api_cache"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1030. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 72. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_HOME_URL, $home_url) has deletion method delete_option("fs_dbg_api_cache"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1030. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 73. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_HOME_URL, $home_url) has deletion method delete_option("fs_debug_mode"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1030. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 74. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_HOME_URL, $home_url) has deletion method delete_option(AI1WM_STATUS). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1030. Deletion method found in file uninstall.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_HOME_URL, $home_url) has deletion method delete_option(AI1WM_SECRET_KEY). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1030. Deletion method found in file uninstall.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_HOME_URL, $home_url) has deletion method delete_option(AI1WM_AUTH_USER). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1030. Deletion method found in file uninstall.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_HOME_URL, $home_url) has deletion method delete_option(AI1WM_AUTH_PASSWORD). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1030. Deletion method found in file uninstall.php at line 53. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_AUTH_USER, $auth_user) has deletion method delete_option("_elementor_global_css"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1036. Deletion method found in file functions.php at line 1339. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_AUTH_USER, $auth_user) has deletion method delete_option("elementor-custom-breakpoints-files"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1036. Deletion method found in file functions.php at line 1340. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_AUTH_USER, $auth_user) has deletion method delete_option("fs_accounts"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1036. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 69. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_AUTH_USER, $auth_user) has deletion method delete_option("fs_dbg_accounts"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1036. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 70. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_AUTH_USER, $auth_user) has deletion method delete_option("fs_active_plugins"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1036. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 71. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_AUTH_USER, $auth_user) has deletion method delete_option("fs_api_cache"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1036. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 72. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_AUTH_USER, $auth_user) has deletion method delete_option("fs_dbg_api_cache"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1036. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 73. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_AUTH_USER, $auth_user) has deletion method delete_option("fs_debug_mode"). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1036. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 74. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_AUTH_USER, $auth_user) has deletion method delete_option(AI1WM_STATUS). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1036. Deletion method found in file uninstall.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_AUTH_USER, $auth_user) has deletion method delete_option(AI1WM_SECRET_KEY). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1036. Deletion method found in file uninstall.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_AUTH_USER, $auth_user) has deletion method delete_option(AI1WM_AUTH_USER). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1036. Deletion method found in file uninstall.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_AUTH_USER, $auth_user) has deletion method delete_option(AI1WM_AUTH_PASSWORD). Storage method found in file lib/model/import/class-ai1wm-import-database.php at line 1036. Deletion method found in file uninstall.php at line 53. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_MESSAGES, $messages) has deletion method delete_option("_elementor_global_css"). Storage method found in file lib/model/class-ai1wm-message.php at line 58. Deletion method found in file functions.php at line 1339. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_MESSAGES, $messages) has deletion method delete_option("elementor-custom-breakpoints-files"). Storage method found in file lib/model/class-ai1wm-message.php at line 58. Deletion method found in file functions.php at line 1340. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_MESSAGES, $messages) has deletion method delete_option("fs_accounts"). Storage method found in file lib/model/class-ai1wm-message.php at line 58. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 69. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_MESSAGES, $messages) has deletion method delete_option("fs_dbg_accounts"). Storage method found in file lib/model/class-ai1wm-message.php at line 58. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 70. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_MESSAGES, $messages) has deletion method delete_option("fs_active_plugins"). Storage method found in file lib/model/class-ai1wm-message.php at line 58. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 71. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_MESSAGES, $messages) has deletion method delete_option("fs_api_cache"). Storage method found in file lib/model/class-ai1wm-message.php at line 58. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 72. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_MESSAGES, $messages) has deletion method delete_option("fs_dbg_api_cache"). Storage method found in file lib/model/class-ai1wm-message.php at line 58. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 73. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_MESSAGES, $messages) has deletion method delete_option("fs_debug_mode"). Storage method found in file lib/model/class-ai1wm-message.php at line 58. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 74. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_MESSAGES, $messages) has deletion method delete_option(AI1WM_STATUS). Storage method found in file lib/model/class-ai1wm-message.php at line 58. Deletion method found in file uninstall.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_MESSAGES, $messages) has deletion method delete_option(AI1WM_SECRET_KEY). Storage method found in file lib/model/class-ai1wm-message.php at line 58. Deletion method found in file uninstall.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_MESSAGES, $messages) has deletion method delete_option(AI1WM_AUTH_USER). Storage method found in file lib/model/class-ai1wm-message.php at line 58. Deletion method found in file uninstall.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_MESSAGES, $messages) has deletion method delete_option(AI1WM_AUTH_PASSWORD). Storage method found in file lib/model/class-ai1wm-message.php at line 58. Deletion method found in file uninstall.php at line 53. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_MESSAGES, array_merge($messages, [$type => $message])) has deletion method delete_option("_elementor_global_css"). Storage method found in file lib/model/class-ai1wm-message.php at line 34. Deletion method found in file functions.php at line 1339. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_MESSAGES, array_merge($messages, [$type => $message])) has deletion method delete_option("elementor-custom-breakpoints-files"). Storage method found in file lib/model/class-ai1wm-message.php at line 34. Deletion method found in file functions.php at line 1340. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_MESSAGES, array_merge($messages, [$type => $message])) has deletion method delete_option("fs_accounts"). Storage method found in file lib/model/class-ai1wm-message.php at line 34. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 69. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_MESSAGES, array_merge($messages, [$type => $message])) has deletion method delete_option("fs_dbg_accounts"). Storage method found in file lib/model/class-ai1wm-message.php at line 34. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 70. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_MESSAGES, array_merge($messages, [$type => $message])) has deletion method delete_option("fs_active_plugins"). Storage method found in file lib/model/class-ai1wm-message.php at line 34. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 71. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_MESSAGES, array_merge($messages, [$type => $message])) has deletion method delete_option("fs_api_cache"). Storage method found in file lib/model/class-ai1wm-message.php at line 34. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 72. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_MESSAGES, array_merge($messages, [$type => $message])) has deletion method delete_option("fs_dbg_api_cache"). Storage method found in file lib/model/class-ai1wm-message.php at line 34. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 73. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_MESSAGES, array_merge($messages, [$type => $message])) has deletion method delete_option("fs_debug_mode"). Storage method found in file lib/model/class-ai1wm-message.php at line 34. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 74. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_MESSAGES, array_merge($messages, [$type => $message])) has deletion method delete_option(AI1WM_STATUS). Storage method found in file lib/model/class-ai1wm-message.php at line 34. Deletion method found in file uninstall.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_MESSAGES, array_merge($messages, [$type => $message])) has deletion method delete_option(AI1WM_SECRET_KEY). Storage method found in file lib/model/class-ai1wm-message.php at line 34. Deletion method found in file uninstall.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_MESSAGES, array_merge($messages, [$type => $message])) has deletion method delete_option(AI1WM_AUTH_USER). Storage method found in file lib/model/class-ai1wm-message.php at line 34. Deletion method found in file uninstall.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_MESSAGES, array_merge($messages, [$type => $message])) has deletion method delete_option(AI1WM_AUTH_PASSWORD). Storage method found in file lib/model/class-ai1wm-message.php at line 34. Deletion method found in file uninstall.php at line 53. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_DB_VERSION, get_option(AI1WM_INITIAL_DB_VERSION)) has deletion method delete_option("_elementor_global_css"). Storage method found in file functions.php at line 1237. Deletion method found in file functions.php at line 1339. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_DB_VERSION, get_option(AI1WM_INITIAL_DB_VERSION)) has deletion method delete_option("elementor-custom-breakpoints-files"). Storage method found in file functions.php at line 1237. Deletion method found in file functions.php at line 1340. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_DB_VERSION, get_option(AI1WM_INITIAL_DB_VERSION)) has deletion method delete_option("fs_accounts"). Storage method found in file functions.php at line 1237. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 69. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_DB_VERSION, get_option(AI1WM_INITIAL_DB_VERSION)) has deletion method delete_option("fs_dbg_accounts"). Storage method found in file functions.php at line 1237. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 70. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_DB_VERSION, get_option(AI1WM_INITIAL_DB_VERSION)) has deletion method delete_option("fs_active_plugins"). Storage method found in file functions.php at line 1237. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 71. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_DB_VERSION, get_option(AI1WM_INITIAL_DB_VERSION)) has deletion method delete_option("fs_api_cache"). Storage method found in file functions.php at line 1237. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 72. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_DB_VERSION, get_option(AI1WM_INITIAL_DB_VERSION)) has deletion method delete_option("fs_dbg_api_cache"). Storage method found in file functions.php at line 1237. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 73. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_DB_VERSION, get_option(AI1WM_INITIAL_DB_VERSION)) has deletion method delete_option("fs_debug_mode"). Storage method found in file functions.php at line 1237. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 74. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_DB_VERSION, get_option(AI1WM_INITIAL_DB_VERSION)) has deletion method delete_option(AI1WM_STATUS). Storage method found in file functions.php at line 1237. Deletion method found in file uninstall.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_DB_VERSION, get_option(AI1WM_INITIAL_DB_VERSION)) has deletion method delete_option(AI1WM_SECRET_KEY). Storage method found in file functions.php at line 1237. Deletion method found in file uninstall.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_DB_VERSION, get_option(AI1WM_INITIAL_DB_VERSION)) has deletion method delete_option(AI1WM_AUTH_USER). Storage method found in file functions.php at line 1237. Deletion method found in file uninstall.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_DB_VERSION, get_option(AI1WM_INITIAL_DB_VERSION)) has deletion method delete_option(AI1WM_AUTH_PASSWORD). Storage method found in file functions.php at line 1237. Deletion method found in file uninstall.php at line 53. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_ACTIVE_PLUGINS, $current) has deletion method delete_option("_elementor_global_css"). Storage method found in file functions.php at line 1054. Deletion method found in file functions.php at line 1339. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_ACTIVE_PLUGINS, $current) has deletion method delete_option("elementor-custom-breakpoints-files"). Storage method found in file functions.php at line 1054. Deletion method found in file functions.php at line 1340. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_ACTIVE_PLUGINS, $current) has deletion method delete_option("fs_accounts"). Storage method found in file functions.php at line 1054. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 69. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_ACTIVE_PLUGINS, $current) has deletion method delete_option("fs_dbg_accounts"). Storage method found in file functions.php at line 1054. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 70. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_ACTIVE_PLUGINS, $current) has deletion method delete_option("fs_active_plugins"). Storage method found in file functions.php at line 1054. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 71. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_ACTIVE_PLUGINS, $current) has deletion method delete_option("fs_api_cache"). Storage method found in file functions.php at line 1054. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 72. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_ACTIVE_PLUGINS, $current) has deletion method delete_option("fs_dbg_api_cache"). Storage method found in file functions.php at line 1054. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 73. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_ACTIVE_PLUGINS, $current) has deletion method delete_option("fs_debug_mode"). Storage method found in file functions.php at line 1054. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 74. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_ACTIVE_PLUGINS, $current) has deletion method delete_option(AI1WM_STATUS). Storage method found in file functions.php at line 1054. Deletion method found in file uninstall.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_ACTIVE_PLUGINS, $current) has deletion method delete_option(AI1WM_SECRET_KEY). Storage method found in file functions.php at line 1054. Deletion method found in file uninstall.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_ACTIVE_PLUGINS, $current) has deletion method delete_option(AI1WM_AUTH_USER). Storage method found in file functions.php at line 1054. Deletion method found in file uninstall.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_ACTIVE_PLUGINS, $current) has deletion method delete_option(AI1WM_AUTH_PASSWORD). Storage method found in file functions.php at line 1054. Deletion method found in file uninstall.php at line 53. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SWIFT_OPTIMIZER_PLUGIN_ORGANIZER, $current) has deletion method delete_option("_elementor_global_css"). Storage method found in file functions.php at line 1167. Deletion method found in file functions.php at line 1339. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SWIFT_OPTIMIZER_PLUGIN_ORGANIZER, $current) has deletion method delete_option("elementor-custom-breakpoints-files"). Storage method found in file functions.php at line 1167. Deletion method found in file functions.php at line 1340. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SWIFT_OPTIMIZER_PLUGIN_ORGANIZER, $current) has deletion method delete_option("fs_accounts"). Storage method found in file functions.php at line 1167. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 69. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SWIFT_OPTIMIZER_PLUGIN_ORGANIZER, $current) has deletion method delete_option("fs_dbg_accounts"). Storage method found in file functions.php at line 1167. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 70. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SWIFT_OPTIMIZER_PLUGIN_ORGANIZER, $current) has deletion method delete_option("fs_active_plugins"). Storage method found in file functions.php at line 1167. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 71. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SWIFT_OPTIMIZER_PLUGIN_ORGANIZER, $current) has deletion method delete_option("fs_api_cache"). Storage method found in file functions.php at line 1167. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 72. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SWIFT_OPTIMIZER_PLUGIN_ORGANIZER, $current) has deletion method delete_option("fs_dbg_api_cache"). Storage method found in file functions.php at line 1167. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 73. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SWIFT_OPTIMIZER_PLUGIN_ORGANIZER, $current) has deletion method delete_option("fs_debug_mode"). Storage method found in file functions.php at line 1167. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 74. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SWIFT_OPTIMIZER_PLUGIN_ORGANIZER, $current) has deletion method delete_option(AI1WM_STATUS). Storage method found in file functions.php at line 1167. Deletion method found in file uninstall.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SWIFT_OPTIMIZER_PLUGIN_ORGANIZER, $current) has deletion method delete_option(AI1WM_SECRET_KEY). Storage method found in file functions.php at line 1167. Deletion method found in file uninstall.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SWIFT_OPTIMIZER_PLUGIN_ORGANIZER, $current) has deletion method delete_option(AI1WM_AUTH_USER). Storage method found in file functions.php at line 1167. Deletion method found in file uninstall.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_SWIFT_OPTIMIZER_PLUGIN_ORGANIZER, $current) has deletion method delete_option(AI1WM_AUTH_PASSWORD). Storage method found in file functions.php at line 1167. Deletion method found in file uninstall.php at line 53. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_ACTIVE_PLUGINS, $current) has deletion method delete_option("_elementor_global_css"). Storage method found in file functions.php at line 1131. Deletion method found in file functions.php at line 1339. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_ACTIVE_PLUGINS, $current) has deletion method delete_option("elementor-custom-breakpoints-files"). Storage method found in file functions.php at line 1131. Deletion method found in file functions.php at line 1340. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_ACTIVE_PLUGINS, $current) has deletion method delete_option("fs_accounts"). Storage method found in file functions.php at line 1131. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 69. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_ACTIVE_PLUGINS, $current) has deletion method delete_option("fs_dbg_accounts"). Storage method found in file functions.php at line 1131. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 70. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_ACTIVE_PLUGINS, $current) has deletion method delete_option("fs_active_plugins"). Storage method found in file functions.php at line 1131. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 71. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_ACTIVE_PLUGINS, $current) has deletion method delete_option("fs_api_cache"). Storage method found in file functions.php at line 1131. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 72. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_ACTIVE_PLUGINS, $current) has deletion method delete_option("fs_dbg_api_cache"). Storage method found in file functions.php at line 1131. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 73. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_ACTIVE_PLUGINS, $current) has deletion method delete_option("fs_debug_mode"). Storage method found in file functions.php at line 1131. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 74. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_ACTIVE_PLUGINS, $current) has deletion method delete_option(AI1WM_STATUS). Storage method found in file functions.php at line 1131. Deletion method found in file uninstall.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_ACTIVE_PLUGINS, $current) has deletion method delete_option(AI1WM_SECRET_KEY). Storage method found in file functions.php at line 1131. Deletion method found in file uninstall.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_ACTIVE_PLUGINS, $current) has deletion method delete_option(AI1WM_AUTH_USER). Storage method found in file functions.php at line 1131. Deletion method found in file uninstall.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_ACTIVE_PLUGINS, $current) has deletion method delete_option(AI1WM_AUTH_PASSWORD). Storage method found in file functions.php at line 1131. Deletion method found in file uninstall.php at line 53. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_BACKUPS_LABELS, $labels) has deletion method delete_option("_elementor_global_css"). Storage method found in file lib/model/class-ai1wm-backups.php at line 130. Deletion method found in file functions.php at line 1339. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_BACKUPS_LABELS, $labels) has deletion method delete_option("elementor-custom-breakpoints-files"). Storage method found in file lib/model/class-ai1wm-backups.php at line 130. Deletion method found in file functions.php at line 1340. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_BACKUPS_LABELS, $labels) has deletion method delete_option("fs_accounts"). Storage method found in file lib/model/class-ai1wm-backups.php at line 130. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 69. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_BACKUPS_LABELS, $labels) has deletion method delete_option("fs_dbg_accounts"). Storage method found in file lib/model/class-ai1wm-backups.php at line 130. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 70. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_BACKUPS_LABELS, $labels) has deletion method delete_option("fs_active_plugins"). Storage method found in file lib/model/class-ai1wm-backups.php at line 130. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 71. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_BACKUPS_LABELS, $labels) has deletion method delete_option("fs_api_cache"). Storage method found in file lib/model/class-ai1wm-backups.php at line 130. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 72. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_BACKUPS_LABELS, $labels) has deletion method delete_option("fs_dbg_api_cache"). Storage method found in file lib/model/class-ai1wm-backups.php at line 130. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 73. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_BACKUPS_LABELS, $labels) has deletion method delete_option("fs_debug_mode"). Storage method found in file lib/model/class-ai1wm-backups.php at line 130. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 74. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_BACKUPS_LABELS, $labels) has deletion method delete_option(AI1WM_STATUS). Storage method found in file lib/model/class-ai1wm-backups.php at line 130. Deletion method found in file uninstall.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_BACKUPS_LABELS, $labels) has deletion method delete_option(AI1WM_SECRET_KEY). Storage method found in file lib/model/class-ai1wm-backups.php at line 130. Deletion method found in file uninstall.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_BACKUPS_LABELS, $labels) has deletion method delete_option(AI1WM_AUTH_USER). Storage method found in file lib/model/class-ai1wm-backups.php at line 130. Deletion method found in file uninstall.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_BACKUPS_LABELS, $labels) has deletion method delete_option(AI1WM_AUTH_PASSWORD). Storage method found in file lib/model/class-ai1wm-backups.php at line 130. Deletion method found in file uninstall.php at line 53. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_BACKUPS_LABELS, $labels) has deletion method delete_option("_elementor_global_css"). Storage method found in file lib/model/class-ai1wm-backups.php at line 144. Deletion method found in file functions.php at line 1339. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_BACKUPS_LABELS, $labels) has deletion method delete_option("elementor-custom-breakpoints-files"). Storage method found in file lib/model/class-ai1wm-backups.php at line 144. Deletion method found in file functions.php at line 1340. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_BACKUPS_LABELS, $labels) has deletion method delete_option("fs_accounts"). Storage method found in file lib/model/class-ai1wm-backups.php at line 144. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 69. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_BACKUPS_LABELS, $labels) has deletion method delete_option("fs_dbg_accounts"). Storage method found in file lib/model/class-ai1wm-backups.php at line 144. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 70. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_BACKUPS_LABELS, $labels) has deletion method delete_option("fs_active_plugins"). Storage method found in file lib/model/class-ai1wm-backups.php at line 144. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 71. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_BACKUPS_LABELS, $labels) has deletion method delete_option("fs_api_cache"). Storage method found in file lib/model/class-ai1wm-backups.php at line 144. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 72. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_BACKUPS_LABELS, $labels) has deletion method delete_option("fs_dbg_api_cache"). Storage method found in file lib/model/class-ai1wm-backups.php at line 144. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 73. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_BACKUPS_LABELS, $labels) has deletion method delete_option("fs_debug_mode"). Storage method found in file lib/model/class-ai1wm-backups.php at line 144. Deletion method found in file lib/model/import/class-ai1wm-import-options.php at line 74. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_BACKUPS_LABELS, $labels) has deletion method delete_option(AI1WM_STATUS). Storage method found in file lib/model/class-ai1wm-backups.php at line 144. Deletion method found in file uninstall.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_BACKUPS_LABELS, $labels) has deletion method delete_option(AI1WM_SECRET_KEY). Storage method found in file lib/model/class-ai1wm-backups.php at line 144. Deletion method found in file uninstall.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_BACKUPS_LABELS, $labels) has deletion method delete_option(AI1WM_AUTH_USER). Storage method found in file lib/model/class-ai1wm-backups.php at line 144. Deletion method found in file uninstall.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(AI1WM_BACKUPS_LABELS, $labels) has deletion method delete_option(AI1WM_AUTH_PASSWORD). Storage method found in file lib/model/class-ai1wm-backups.php at line 144. Deletion method found in file uninstall.php at line 53. 

[Art.17, Right to erasure] Deletion access is NONE_BUT_NOT_REQUIRED 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 37783. Found in file lib/model/import/class-ai1wm-import-database.php at line 1027 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 40007. Found in file lib/model/import/class-ai1wm-import-options.php at line 67 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 45714. Found in file lib/vendor/servmask/cron/class-ai1wm-cron.php at line 81 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 37855. Found in file lib/model/import/class-ai1wm-import-database.php at line 1051 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 37801. Found in file lib/model/import/class-ai1wm-import-database.php at line 1033 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 37828. Found in file lib/model/import/class-ai1wm-import-database.php at line 1042 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 21447. Found in file lib/model/class-ai1wm-updater.php at line 173 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 37837. Found in file lib/model/import/class-ai1wm-import-database.php at line 1045 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 6934. Found in file functions.php at line 1150 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 37846. Found in file lib/model/import/class-ai1wm-import-database.php at line 1048 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 37819. Found in file lib/model/import/class-ai1wm-import-database.php at line 1039 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 37792. Found in file lib/model/import/class-ai1wm-import-database.php at line 1030 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 37810. Found in file lib/model/import/class-ai1wm-import-database.php at line 1036 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 20147. Found in file lib/model/class-ai1wm-message.php at line 58 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 20027. Found in file lib/model/class-ai1wm-message.php at line 34 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 7351. Found in file functions.php at line 1237 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 6682. Found in file functions.php at line 1054 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 6981. Found in file functions.php at line 1167 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 6871. Found in file functions.php at line 1131 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 18003. Found in file lib/model/class-ai1wm-backups.php at line 130 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 18048. Found in file lib/model/class-ai1wm-backups.php at line 144 

[Art.15, Right to access] Data access is NONE_BUT_NOT_REQUIRED 

[third_party] Third party usage is NONE for data types [] 

[encryption] API call that sends PII to unknown url uses unknown protocol. PII is insecurely encrypted with []. Found in file lib/model/class-ai1wm-updater.php at line 149 

[encryption] API call that sends PII to unknown url uses unknown protocol. PII is insecurely encrypted with []. Found in file lib/model/class-ai1wm-feedback.php at line 64 

[main] Applicable GDPR requirements: ['access', 'deletion', 'encryption', 'third_party'] 

[main] Is deletion in violation? False 

[main] Is access in violation? False 

[main] Is third_party in violation? False 

[main] Is encryption in violation? True 

[main] Complaint? False 


###########
### Q&A ###
###########

1. Why is my plugin in violation against GDPR?

GDPR (https://gdpr-info.eu/) aims to give citizens in the European Union (EU) control over their personal data. If a website collects or store user data, it is required to provide users functionalities to control their data, such as ones to erase or export their data. While a plugin do not directly interact with users, it may provide functionalities that collect or store personal data, which would make websites that deploy the plugin in violation against GDPR if the plugin does not provide corresponding functionalities to allow users control their personal data. Therefore, plugin developers are responsible to provide functions to manage the personal data they handle in accordance with GDPR. We list requirements by specific GDPR articles relevant to your plugin below.


[Art. 13, Information to be provided where personal data are collected from the data subject] If a plugin collects or handles personal data, it needs to provide privacy policy texts that explain what personal data is being collected and for what purpose. The texts are meant to be added to the privacy policy of the websites that deploy the plugin. 


            
[Art.17, Right to erasure] If a plugin stores personal data in a custom database they create or manage, or through Wordpress's native storage functions (e.g., update_user_meta), it needs to provide methods for users to erase the data upon request. Note that deleting data for all users upon uninstallation does not satisfy the requirement. 


            
        

2. How do I make my plugin compliant?

Please refer to the fix report below to see how you can make your plugin comply with GDPR.

        

##################
### Fix Report ###
##################

############################
# Data Deletion Fix Report #
############################

This report suggests fixes to comply with the GDPR Art. 17, Right to erasure (https://gdpr-info.eu/art-17-gdpr/). The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/adding-the-personal-data-eraser-to-your-plugin/ for more details.

1) Implement a function that deletes all the user data collected in the plugin. Sample code:


/**
* Removes all collected data of a user.
*
* @param string $email_address   email address to manipulate
* @param int    $page            pagination
*
* @return array
*/
function all-in-one-wp-migration_remove_data( $email_address, $page = 1 ) {
    
    $page = (int) $page;


    //TODO: Delete the user data that was stored using Wordpress functions

    //Below is the sample code for deleting user meta and may need to be modified to suit the plugin.
    $user_id = get_user_by('email', $email_address)
    $key = 'email' //Sample user meta key
    if ( $customer->user_id > 0 ) {
        //Delete user meta data by $key
        delete_user_meta( $user_id, $key );
    }
        



    // Tell core if we have more data to delete still
    $done = true;
    return array(
        'items_removed'  => $items_removed, // true if collected data of a user is being deleted
        'items_retained' => $items_retained, // true if certain data needs to be retained
        'messages'       => sprintf( __( 'Data of user with email %s successfully deleted.', 'all-in-one-wp-migration' ), $email_address ), // Put messages for data removal
        'done'           => $done, // true if all the removal processes are done (all data of the user is removed)
    );
}
        

2) Hook the deletion function to the Wordpress's Personal Data Removal tool


/**
* Registers all data erasers.
*
* @param array $exporters
*
* @return mixed
*/
function all-in-one-wp-migration_register_privacy_erasers( $erasers ) {
    $erasers['my-plugin-slug'] = array(
        'eraser_friendly_name' => __( '<eraser name>', 'all-in-one-wp-migration' ),
        'callback'             => 'all-in-one-wp-migration_remove_data',
    );
    return $erasers;
}
        

add_filter( 'wp_privacy_personal_data_erasers', 'all-in-one-wp-migration_register_privacy_erasers' );
        

        

#############################
# Privacy Policy Fix Report #
#############################

This report suggests fixes to comply with the GDPR Art. 13 (https://gdpr-info.eu/art-13-gdpr/) through including a privacy notice. The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/suggesting-text-for-the-site-privacy-policy/ for more details.

1) Implement a function that includes the privacy policy for the plugin and provide it to wordpress through wp_add_privacy_policy_content(). Sample code:


/**
* Adds a privacy policy statement.
*/
function all-in-one-wp-migration_add_privacy_policy_content() {
    if ( ! function_exists( 'wp_add_privacy_policy_content' ) ) {
        return;
    }
    //TODO: modify the content below to include the privacy policy for the plugin.
    $content = '<p class="privacy-policy-tutorial">' . __( 'Some introductory content for the suggested text.', 'all-in-one-wp-migration' ) . '</p>'
            . '<strong class="privacy-policy-tutorial">' . __( 'Suggested Text:', 'all-in-one-wp-migration' ) . '</strong> '
            . sprintf(
                __( 'When you leave a comment on this site, we send your name, email address, IP address and comment text to example.com. Example.com does not retain your personal data. The example.com privacy policy is <a href="%1$s" target="_blank">here</a>.', 'all-in-one-wp-migration' ),
                'https://example.com/privacy-policy'
            );
    wp_add_privacy_policy_content( 'all-in-one-wp-migration', wp_kses_post( wpautop( $content, false ) ) );
}
        

2) Hook the privacy policy function to the Wordpress's admin initialization action.


add_action( 'admin_init', 'all-in-one-wp-migration_add_privacy_policy_content' );
        

        


Disclaimer: The sample code provided above is only for reference and does not guarantee GDPR compliance. The recommended list of data to delete/export may not be comprehensive. 
        
Done.
