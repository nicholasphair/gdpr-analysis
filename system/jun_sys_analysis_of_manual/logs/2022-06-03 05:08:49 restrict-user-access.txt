Timeout in resolving values
Timeout in running neo4j query
Running Main.py on restrict-user-access

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:01.733923.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:02.767908.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 3032 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:04.202765.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 10 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:01.304980.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 18690 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:06.302118.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 894 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:21.120598.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
Added 55 PHP_REACHES edges.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.087009.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 6051 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:06:03.507049.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 120825
Added 92093 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 145480
Added 24655 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:09.604216.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/app.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/db_updates.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/freemius.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/level.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/list-capabilities.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/list-members.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/restrict-user-access.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/admin/admin.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/admin/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/admin/level-edit.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/admin/level-list-table.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/admin/level-overview.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/admin/nav-menu.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/admin/settings.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/admin/walker-nav-menu.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/api/deprecated.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/api/functions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/api/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/assets/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/assets/css/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/assets/img/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/assets/js/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/automators/base.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/automators/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/automators/login.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/automators/user_role.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/automators/woo_product.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/helpers/collection.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/helpers/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/interfaces/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/interfaces/level.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/interfaces/user_level.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/interfaces/user.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/config.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/require.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/start.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/assets/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/assets/css/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/assets/css/admin/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/assets/img/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/assets/js/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/class-freemius-abstract.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/class-freemius.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/class-fs-admin-notices.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/class-fs-api.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/class-fs-logger.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/class-fs-options.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/class-fs-plugin-updater.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/class-fs-security.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/class-fs-storage.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/class-fs-user-lock.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/fs-core-functions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/fs-essential-functions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/fs-plugin-info-dialog.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/i18n.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/l10n.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/customizer/class-fs-customizer-support-section.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/customizer/class-fs-customizer-upsell-control.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/customizer/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/debug/class-fs-debug-bar-panel.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/debug/debug-bar-start.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/debug/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/entities/class-fs-affiliate.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/entities/class-fs-affiliate-terms.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/entities/class-fs-billing.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/entities/class-fs-entity.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/entities/class-fs-payment.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/entities/class-fs-plugin-info.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/entities/class-fs-plugin-license.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/entities/class-fs-plugin.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/entities/class-fs-plugin-plan.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/entities/class-fs-plugin-tag.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/entities/class-fs-pricing.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/entities/class-fs-scope-entity.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/entities/class-fs-site.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/entities/class-fs-subscription.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/entities/class-fs-user.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/entities/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/managers/class-fs-admin-menu-manager.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/managers/class-fs-admin-notice-manager.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/managers/class-fs-cache-manager.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/managers/class-fs-gdpr-manager.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/managers/class-fs-key-value-storage.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/managers/class-fs-license-manager.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/managers/class-fs-option-manager.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/managers/class-fs-plan-manager.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/managers/class-fs-plugin-manager.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/managers/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/sdk/FreemiusBase.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/sdk/FreemiusWordPress.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/sdk/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/sdk/Exceptions/ArgumentNotExistException.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/sdk/Exceptions/EmptyArgumentException.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/sdk/Exceptions/Exception.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/sdk/Exceptions/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/sdk/Exceptions/InvalidArgumentException.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/sdk/Exceptions/OAuthException.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/supplements/fs-essential-functions-1.1.7.1.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/supplements/fs-essential-functions-2.2.1.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/includes/supplements/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/languages/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/account.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/add-ons.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/add-trial-to-pricing.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/admin-notice.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/ajax-loader.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/auto-installation.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/checkout.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/connect.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/contact.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/debug.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/email.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/firewall-issues-js.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/gdpr-optin-js.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/plugin-icon.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/powered-by.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/pricing.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/secure-https-header.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/sticky-admin-notice-js.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/tabs-capture-js.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/tabs.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/account/billing.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/account/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/account/payments.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/account/partials/activate-license-button.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/account/partials/addon.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/account/partials/deactivate-license-button.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/account/partials/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/account/partials/site.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/debug/api-calls.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/debug/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/debug/logger.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/debug/plugins-themes-sync.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/debug/scheduled-crons.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/forms/affiliation.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/forms/data-debug-mode.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/forms/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/forms/license-activation.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/forms/optout.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/forms/premium-versions-upgrade-handler.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/forms/premium-versions-upgrade-metadata.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/forms/resend-key.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/forms/subscription-cancellation.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/forms/trial-start.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/forms/user-change.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/forms/deactivation/contact.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/forms/deactivation/form.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/forms/deactivation/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/forms/deactivation/retry-skip.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/js/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/js/jquery.content-change.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/js/open-license-activation.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/js/style-premium-theme.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/partials/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/partials/network-activation.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/plugin-info/description.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/plugin-info/features.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/plugin-info/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/freemius/templates/plugin-info/screenshots.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/wp-content-aware-engine/bootstrap.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/wp-content-aware-engine/core.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/wp-content-aware-engine/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/wp-content-aware-engine/meta.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/wp-content-aware-engine/modulemanager.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/wp-content-aware-engine/objectmanager.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/wp-content-aware-engine/typemanager.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/wp-content-aware-engine/view.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/wp-content-aware-engine/assets/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/wp-content-aware-engine/assets/css/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/wp-content-aware-engine/assets/js/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/wp-content-aware-engine/module/author.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/wp-content-aware-engine/module/base.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/wp-content-aware-engine/module/bbpress.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/wp-content-aware-engine/module/bp_member.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/wp-content-aware-engine/module/date.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/wp-content-aware-engine/module/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/wp-content-aware-engine/module/page_template.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/wp-content-aware-engine/module/pods.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/wp-content-aware-engine/module/polylang.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/wp-content-aware-engine/module/post_type.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/wp-content-aware-engine/module/qtranslate.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/wp-content-aware-engine/module/static.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/wp-content-aware-engine/module/taxonomy.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/wp-content-aware-engine/module/translatepress.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/wp-content-aware-engine/module/transposh.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/wp-content-aware-engine/module/wpml.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/wp-content-aware-engine/view/condition_options.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/wp-content-aware-engine/view/condition_template.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/wp-content-aware-engine/view/group_template.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/wp-content-aware-engine/view/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/wp-content-aware-engine/view/meta_box.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/wp-db-updater/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/lib/wp-db-updater/wp-db-updater.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/models/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/models/level.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/models/user_level.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/models/user.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/view/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/view/meta_box_caps.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/view/meta_box_members.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/view/meta_box_member_triggers.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/view/meta_box_options.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/view/meta_box_publish.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/view/meta_box_support.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/restrict-user-access/view/top_bar.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:16.895708.

1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
3032 PHP_REACHES edges created
10 REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
14000 PHP_REACHES edges created
15000 PHP_REACHES edges created
16000 PHP_REACHES edges created
17000 PHP_REACHES edges created
18000 PHP_REACHES edges created
18690 PHP_REACHES edges created
441 CALLS edges created
201 PHP_REACHES edges created
2 CALLS edges created
1 PHP_REACHES edges created
249 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
14000 PHP_REACHES edges created
15000 PHP_REACHES edges created
16000 PHP_REACHES edges created
17000 PHP_REACHES edges created
18000 PHP_REACHES edges created
19000 PHP_REACHES edges created
20000 PHP_REACHES edges created
21000 PHP_REACHES edges created
22000 PHP_REACHES edges created
23000 PHP_REACHES edges created
24000 PHP_REACHES edges created
25000 PHP_REACHES edges created
26000 PHP_REACHES edges created
27000 PHP_REACHES edges created
28000 PHP_REACHES edges created
29000 PHP_REACHES edges created
30000 PHP_REACHES edges created
31000 PHP_REACHES edges created
32000 PHP_REACHES edges created
33000 PHP_REACHES edges created
34000 PHP_REACHES edges created
35000 PHP_REACHES edges created
36000 PHP_REACHES edges created
37000 PHP_REACHES edges created
38000 PHP_REACHES edges created
39000 PHP_REACHES edges created
40000 PHP_REACHES edges created
41000 PHP_REACHES edges created
42000 PHP_REACHES edges created
43000 PHP_REACHES edges created
44000 PHP_REACHES edges created
45000 PHP_REACHES edges created
46000 PHP_REACHES edges created
47000 PHP_REACHES edges created
48000 PHP_REACHES edges created
49000 PHP_REACHES edges created
50000 PHP_REACHES edges created
51000 PHP_REACHES edges created
52000 PHP_REACHES edges created
53000 PHP_REACHES edges created
54000 PHP_REACHES edges created
55000 PHP_REACHES edges created
56000 PHP_REACHES edges created
57000 PHP_REACHES edges created
58000 PHP_REACHES edges created
59000 PHP_REACHES edges created
60000 PHP_REACHES edges created
61000 PHP_REACHES edges created
62000 PHP_REACHES edges created
63000 PHP_REACHES edges created
64000 PHP_REACHES edges created
65000 PHP_REACHES edges created
66000 PHP_REACHES edges created
67000 PHP_REACHES edges created
68000 PHP_REACHES edges created
69000 PHP_REACHES edges created
70000 PHP_REACHES edges created
71000 PHP_REACHES edges created
72000 PHP_REACHES edges created
73000 PHP_REACHES edges created
74000 PHP_REACHES edges created
75000 PHP_REACHES edges created
76000 PHP_REACHES edges created
77000 PHP_REACHES edges created
78000 PHP_REACHES edges created
79000 PHP_REACHES edges created
80000 PHP_REACHES edges created
81000 PHP_REACHES edges created
82000 PHP_REACHES edges created
83000 PHP_REACHES edges created
84000 PHP_REACHES edges created
85000 PHP_REACHES edges created
86000 PHP_REACHES edges created
87000 PHP_REACHES edges created
88000 PHP_REACHES edges created
89000 PHP_REACHES edges created
90000 PHP_REACHES edges created
91000 PHP_REACHES edges created
92000 PHP_REACHES edges created
93000 PHP_REACHES edges created
94000 PHP_REACHES edges created
95000 PHP_REACHES edges created
96000 PHP_REACHES edges created
97000 PHP_REACHES edges created
98000 PHP_REACHES edges created
98199 PHP_REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
14000 PHP_REACHES edges created
15000 PHP_REACHES edges created
16000 PHP_REACHES edges created
17000 PHP_REACHES edges created
18000 PHP_REACHES edges created
19000 PHP_REACHES edges created
20000 PHP_REACHES edges created
21000 PHP_REACHES edges created
22000 PHP_REACHES edges created
23000 PHP_REACHES edges created
24000 PHP_REACHES edges created
24655 PHP_REACHES edges created
145480 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 44676 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:04.970559.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 439 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:01:13.323705.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 7502 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:04:01.310792.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 7314 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.755420.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:22.624017.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:02:03.361937.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.569958.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.033090.

439 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
14000 PHP_REACHES edges created
14816 PHP_REACHES edges created
15255 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 12358 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.833443.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
30 SQL operations to process.
SELECT ID FROM $wpdb WHERE post_type="placeholder_0" AND post_status = %s
SELECT ID FROM $wpdb WHERE post_type="placeholder_0" AND post_status = trash
SELECT ID FROM $wpdb WHERE post_type="placeholder_0" AND post_status = trash
SQL command (SELECT ID FROM $wpdb WHERE post_type="placeholder_0" AND post_status = trash) cannot be parsed correct.
meta_query
SQL command (meta_query) cannot be parsed correct.
DELETE FROM $wpdb
			 WHERE
			 (meta_key = level AND meta_value = %d)
			 OR
			 meta_key = %s
DELETE FROM $wpdb
			 WHERE
			 (meta_key = level AND meta_value = $post_id)
			 OR
			 meta_key = %s
DELETE FROM $wpdb
			 WHERE
			 (meta_keylevel_$post_id level AND meta_value = $post_id)
			 OR
			 meta_key = %s
DELETE FROM $wpdb
			 WHERE
			 (meta_keylevel_$post_id level AND meta_value = $post_id)
			 OR
			 meta_key = %s
SQL command (DELETE FROM $wpdb WHERE (meta_keylevel_$post_id level AND meta_value = $post_id) OR meta_key = %s) cannot be parsed correct.
DELETE FROM $wpdb
			 WHERE
			 meta_key = _menu_item_level AND meta_value = %d
DELETE FROM $wpdb
			 WHERE
			 meta_key = _menu_item_level AND meta_value = $post_id
DELETE FROM $wpdb
			 WHERE
			 meta_key = _menu_item_level AND meta_value = $post_id
SQL command (DELETE FROM $wpdb WHERE meta_key = _menu_item_level AND meta_value = $post_id) cannot be parsed correct.

        SELECT p.ID FROM $wpdb p
        INNER JOIN $wpdb r ON r.object_id = p.ID
        INNER JOIN $wpdb t ON t.term_taxonomy_id = r.term_taxonomy_id
        WHERE p.post_type = 'condition_group'
        AND t.taxonomy IN (implode(",", $taxonomies))
    
SQL command ( SELECT p.ID FROM $wpdb p INNER JOIN $wpdb r ON r.object_id = p.ID INNER JOIN $wpdb t ON t.term_taxonomy_id = r.term_taxonomy_id WHERE p.post_type = 'condition_group' AND t.taxonomy IN (implode(",", $taxonomies)) ) cannot be parsed correct.

        SELECT p.post_type FROM $wpdb p
        INNER JOIN $wpdb c on p.ID = c.post_parent
        INNER JOIN $wpdb m on c.ID = m.post_id
        WHERE c.post_type = 'condition_group' AND m.meta_key = '_ca_date'
    
SQL command ( SELECT p.post_type FROM $wpdb p INNER JOIN $wpdb c on p.ID = c.post_parent INNER JOIN $wpdb m on c.ID = m.post_id WHERE c.post_type = 'condition_group' AND m.meta_key = '_ca_date' ) cannot be parsed correct.

        SELECT p.post_type FROM $wpdb p
        INNER JOIN $wpdb c on p.ID = c.post_parent
        WHERE c.post_type = 'condition_group' AND c.post_status = 'negated'
    
SQL command ( SELECT p.post_type FROM $wpdb p INNER JOIN $wpdb c on p.ID = c.post_parent WHERE c.post_type = 'condition_group' AND c.post_status = 'negated' ) cannot be parsed correct.

        DELETE FROM $wpdb
        WHERE meta_key = '_ca_role' AND meta_value = '-1'
    
SQL command ( DELETE FROM $wpdb WHERE meta_key = '_ca_role' AND meta_value = '-1' ) cannot be parsed correct.

        DELETE FROM $wpdb
        WHERE meta_value LIKE '_ca_sub_%'
    
SQL command ( DELETE FROM $wpdb WHERE meta_value LIKE '_ca_sub_%' ) cannot be parsed correct.
SELECT post_id FROM $wpdb WHERE meta_value LIKE '_ca_sub_%'
SQL command (SELECT post_id FROM $wpdb WHERE meta_value LIKE '_ca_sub_%') cannot be parsed correct.

        UPDATE $wpdb AS c
        INNER JOIN $wpdb AS s ON s.ID = c.post_parent
        INNER JOIN $wpdb AS e ON e.post_id = s.ID
        SET c.menu_order = e.meta_value
        WHERE c.post_type = 'condition_group'
        AND e.meta_key = '_ca_exposure'
    
SQL command ( UPDATE $wpdb AS c INNER JOIN $wpdb AS s ON s.ID = c.post_parent INNER JOIN $wpdb AS e ON e.post_id = s.ID SET c.menu_order = e.meta_value WHERE c.post_type = 'condition_group' AND e.meta_key = '_ca_exposure' ) cannot be parsed correct.

        DELETE FROM $wpdb
        WHERE meta_key = '_ca_exposure'
    
SQL command ( DELETE FROM $wpdb WHERE meta_key = '_ca_exposure' ) cannot be parsed correct.
SELECT umeta_id,meta_value FROM $wpdb WHERE meta_key = '_ca_level'
SQL command (SELECT umeta_id,meta_value FROM $wpdb WHERE meta_key = '_ca_level') cannot be parsed correct.
SELECT user_id,meta_key,meta_value FROM $wpdb WHERE meta_key LIKE '_ca_level_%'
SQL command (SELECT user_id,meta_key,meta_value FROM $wpdb WHERE meta_key LIKE '_ca_level_%') cannot be parsed correct.
SELECT * FROM $wpdb WHERE blog_id = $blog_id
SELECT * FROM $wpdb WHERE blog_id = $blog_id
SQL command (SELECT * FROM $wpdb WHERE blog_id = $blog_id) cannot be parsed correct.
dbDelta
SQL command (dbDelta) cannot be parsed correct.
CREATE TABLE $wpdbfs_logger (
`id` BIGINT(20) UNSIGNED NOT NULL AUTO_INCREMENT,
`process_id` INT UNSIGNED NOT NULL,
`user_name` VARCHAR(64) NOT NULL,
`logger` VARCHAR(128) NOT NULL,
`log_order` INT UNSIGNED NOT NULL,
`type` ENUM('log','info','warn','error') NOT NULL DEFAULT 'log',
`message` TEXT NOT NULL,
`file` VARCHAR(256) NOT NULL,
`line` INT UNSIGNED NOT NULL,
`function` VARCHAR(256) NOT NULL,
`request_type` ENUM('call','ajax','cron') NOT NULL DEFAULT 'call',
`request_url` VARCHAR(1024) NOT NULL,
`created` DECIMAL(16, 6) NOT NULL,
PRIMARY KEY (`id`),
KEY `process_id` (`process_id` ASC),
KEY `process_logger` (`process_id` ASC, `logger` ASC),
KEY `function` (`function` ASC),
KEY `type` (`type` ASC))
SQL command (CREATE TABLE $wpdbfs_logger ( `id` BIGINT(20) UNSIGNED NOT NULL AUTO_INCREMENT, `process_id` INT UNSIGNED NOT NULL, `user_name` VARCHAR(64) NOT NULL, `logger` VARCHAR(128) NOT NULL, `log_order` INT UNSIGNED NOT NULL, `type` ENUM('log','info','warn','error') NOT NULL DEFAULT 'log', `message` TEXT NOT NULL, `file` VARCHAR(256) NOT NULL, `line` INT UNSIGNED NOT NULL, `function` VARCHAR(256) NOT NULL, `request_type` ENUM('call','ajax','cron') NOT NULL DEFAULT 'call', `request_url` VARCHAR(1024) NOT NULL, `created` DECIMAL(16, 6) NOT NULL, PRIMARY KEY (`id`), KEY `process_id` (`process_id` ASC), KEY `process_logger` (`process_id` ASC, `logger` ASC), KEY `function` (`function` ASC), KEY `type` (`type` ASC))) cannot be parsed correct.
DROP TABLE IF EXISTS $wpdbfs_logger;
SQL command (DROP TABLE IF EXISTS $wpdbfs_logger;) cannot be parsed correct.
$query
SQL command ($query) cannot be parsed correct.
SELECT  UNION ALL $query
SQL command (SELECT UNION ALL $query) cannot be parsed correct.

SELECT p.post_type, m.meta_key
FROM $wpdb p
INNER JOIN $wpdb c ON c.post_parent = p.ID
INNER JOIN $wpdb m ON m.post_id = c.ID
WHERE p.post_type IN ()
AND m.meta_key IN ()
GROUP BY p.post_type, m.meta_key

SQL command ( SELECT p.post_type, m.meta_key FROM $wpdb p INNER JOIN $wpdb c ON c.post_parent = p.ID INNER JOIN $wpdb m ON m.post_id = c.ID WHERE p.post_type IN () AND m.meta_key IN () GROUP BY p.post_type, m.meta_key ) cannot be parsed correct.
SELECT ID FROM $wpdb WHERE post_parent = '$parent_id'
SELECT ID FROM $wpdb WHERE post_parent = '$parent_id'
SQL command (SELECT ID FROM $wpdb WHERE post_parent = '$parent_id') cannot be parsed correct.
SET SESSION OPTION SQL_BIG_SELECTS = 1
SQL command (SET SESSION OPTION SQL_BIG_SELECTS = 1) cannot be parsed correct.
SELECT p.ID, p.post_parent, p.post_status FROM $wpdb p implode(" ", $join)
                            WHERE
                            implode(" AND ", $wheres[$i])
                            AND implode(" AND ", $where2) AND p.id IN (implode(",", $group_ids))
SQL command (SELECT p.ID, p.post_parent, p.post_status FROM $wpdb p implode(" ", $join) WHERE implode(" AND ", $wheres[$i]) AND implode(" AND ", $where2) AND p.id IN (implode(",", $group_ids))) cannot be parsed correct.
SELECT p.ID FROM $wpdb p implode(" ", $join)
                        WHERE
                        implode(" AND ", $wheres[$i])
                        AND implode(" AND ", $where2)
SQL command (SELECT p.ID FROM $wpdb p implode(" ", $join) WHERE implode(" AND ", $wheres[$i]) AND implode(" AND ", $where2)) cannot be parsed correct.
SELECT p.ID, p.post_parent FROM $wpdb p WHERE p.post_type = '"placeholder_0"' AND p.post_status = '%s' 
SELECT p.ID, p.post_parent FROM $wpdb p WHERE p.post_type = '"placeholder_0"' AND p.post_status = '"placeholder_1"' 
SELECT p.ID, p.post_parent FROM $wpdb p WHERE p.post_type = '"placeholder_0"' AND p.post_status = '"placeholder_1"' 
SQL command (SELECT p.ID, p.post_parent FROM $wpdb p WHERE p.post_type = '"placeholder_0"' AND p.post_status = '"placeholder_1"' ) cannot be parsed correct.

				SELECT ID, post_title, post_type, post_parent, post_status, post_password
                FROM $wpdb
                WHERE (implode(" OR ", $where))
                AND post_status IN('implode("\',\'", $args["post_status"])')
                AND post_type = 'array_merge($values, [$args["post_type"], $start, $args["posts_per_page"]])'
                 AND ID NOT IN (implode(",", $args["post__not_in"]))
				ORDER BY post_title ASC
				LIMIT %d,%d
				
None
The following function calls could not successfully be analyzed for SQL content: [812, 7101, 8093, 11460, 11494, 13063, 13155, 13187, 13365, 13391, 13420, 13464, 13486, 13519, 13559, 64539, 100411, 101406, 101422, 102430, 102614, 176205, 176582, 177121, 177258, 177335, 177392, 181289, 184249, 192845]
Added 0 SQL nodes. 0 out of 30 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:06.350431.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'<label>Unlock Time for new members'' cannot be parsed correct.
HTML code '$'<div class="wpca-pull-right"><input class="small-text" data-vm="value:integer(_ca_opt_drip)" type="number" min="0" step="1" /> days'' cannot be parsed correct.
HTML code '$'<label class=$class"<strong>$setting->get_title()</strong>'' cannot be parsed correct.
HTML code '$'<>'' cannot be parsed correct.
HTML code '$'<select name=$id" class="js-rua-$id rua-input-md"
'' cannot be parsed correct.
HTML code '$'<option value=$keyselected($current, $key, false)>$value</option>
'' cannot be parsed correct.
HTML code '$'</select>
'' cannot be parsed correct.
HTML code '$'<input type="checkbox" name="$id" value="1" checked="checked" />'' cannot be parsed correct.
HTML code '$'<div><select style="width:250px;" class="js-rua-$id" multiple="multiple"  name="$id[]" data-value="implode(",", $current)"></select></div'' cannot be parsed correct.
HTML code '$'<input style="width:200px;" type="text" name="$id" value="$setting->get_data(get_the_ID(), true, $setting->get_input_type() != "multi")" /
'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'$title'' cannot be parsed correct.
HTML code '$' <a href=admin_url("admin.php?page=wprua-level")" class="page-title-action add-new-h2">$post</a>'' cannot be parsed correct.
HTML code '$'<div id="message" class="updated notice notice-success is-dismissible"><p>$this->updated_messages($post)_$_GET_message</p></div>'' cannot be parsed correct.
HTML code '$'<input type="hidden" id="user-id" name="user_ID" value="" /'' cannot be parsed correct.
HTML code '$'<input type="hidden" id="post_author" name="post_author" value="$post_post_author" /'' cannot be parsed correct.
HTML code '$'<input type="hidden" id="original_post_status" name="original_post_status" value="$post_post_status" /'' cannot be parsed correct.
HTML code '$'<input type="hidden" id="referredby" name="referredby" value="wp_get_referer()" /'' cannot be parsed correct.
HTML code '$'<input type="hidden" id="post_ID" name="post" value="$post" /'' cannot be parsed correct.
HTML code '$'<input type="hidden" id="active_post_lock" value="implode(":", $active_post_lock)" /'' cannot be parsed correct.
HTML code '$'<label class="screen-reader-text" id="title-prompt-text" for="title">Enter title here</label>'' cannot be parsed correct.
HTML code '$'<input type="text" name="post_title" size="30" value="$post_post_title" id="title" spellcheck="true" autocomplete="off" />'' cannot be parsed correct.
HTML code '$'<a class="js-nav-link nav-tab" href="#top#section-$id"$label</a>'' cannot be parsed correct.
HTML code '$'<div id=section-$id" class="rua-section">'' cannot be parsed correct.
HTML code '$'$this_restrict_post_type_labels_not_found_in_trash'' cannot be parsed correct.
HTML code '$'$this_restrict_post_type_labels_not_found'' cannot be parsed correct.
HTML code '$'$this->_get_duration_text($data["count"], $data["unit"])'' cannot be parsed correct.
HTML code '$'Permit: {"0": "0", "1": "0"}_1<br>Deny: {"0": "0", "1": "0"}_0'' cannot be parsed correct.
HTML code '$'<td class=$classes page-title"'' cannot be parsed correct.
HTML code '$'$data'' cannot be parsed correct.
HTML code '$'$this->column_title($post)'' cannot be parsed correct.
HTML code '$'_draft_or_post_title($post)'' cannot be parsed correct.
HTML code '$'<em>sprintf("extends %s", $this->extended_levels[$post->post_parent]->post_title)</em>'' cannot be parsed correct.
HTML code '$'<div class="locked-info"><span class="locked-avatar"></span> <span class="locked-text"></span></div>
'' cannot be parsed correct.
HTML code '$'$this->handle_row_actions($post, "title", "title")'' cannot be parsed correct.
HTML code '$'<code></code>'' cannot be parsed correct.
HTML code '$'$metadata->get_list_data($post->ID, false)'' cannot be parsed correct.
HTML code '$'<span style="color:red;">Not Set</span>'' cannot be parsed correct.
HTML code '$'$metadata->get_list_data($post->ID)'' cannot be parsed correct.
HTML code '$'<tr class="active">'' cannot be parsed correct.
HTML code '$'<div id="message" class="updated notice is-dismissible"><p>join(" ", $messages)</p></div>'' cannot be parsed correct.
HTML code '$'TYPE_RESTRICT'' cannot be parsed correct.
HTML code '$' <a href=admin_url("admin.php?page=wprua-level")" class="add-new-h2 page-title-action">TYPE_RESTRICT</a>'' cannot be parsed correct.
HTML code '$'<a class="add-new-h2 page-title-action" href="rua_fs()->addon_url("")"Add-Ons</a>'' cannot be parsed correct.
HTML code '$'<input type="hidden" name="post_status" class="post_status_page" value="$_REQUEST_post_statusall" /'' cannot be parsed correct.
HTML code '$'<option value=$level"selected($level->ID, get_option($this->prefix . "registration-level"), false)>$level</option>'' cannot be parsed correct.
HTML code '$'<input type="checkbox" name="$args_label_for" value="1" checked($option, 1, 0)/>'' cannot be parsed correct.
HTML code '$'$args_option'' cannot be parsed correct.
HTML code '$'<p class="description">sprintf(__("Setting can be changed in %s", "restrict-user-access"), "<a href=" . admin_url($args["url"]) . """ . $args["title"] . "</a>")</p>'' cannot be parsed correct.
HTML code '$'$id'' cannot be parsed correct.
HTML code '$'$id'' cannot be parsed correct.
HTML code '$'$id'' cannot be parsed correct.
HTML code '$'implode(",", $levels)'' cannot be parsed correct.
HTML code '$'get_admin_page_title()'' cannot be parsed correct.
HTML code '$'<select name=$this_prefixregistration-level" id="$this_prefixregistration-level"'' cannot be parsed correct.
HTML code '$'<option value="0">-- None --</option>'' cannot be parsed correct.
HTML code '$'implode(",", $user_levels)'' cannot be parsed correct.
HTML code '$'$admin_param'' cannot be parsed correct.
HTML code '$'$admin_param'' cannot be parsed correct.
HTML code '$'json_encode($slug_basename_map)'' cannot be parsed correct.
HTML code '$'json_encode($beta_data)'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'$this->get_after_plugin_activation_redirect_url()'' cannot be parsed correct.
HTML code '$'$this->get_after_plugin_activation_redirect_url()'' cannot be parsed correct.
HTML code '$'$this->apply_filters("optin_pointer_element", "$("#non_existing_element");")'' cannot be parsed correct.
HTML code '$'json_encode($pointer_content)'' cannot be parsed correct.
HTML code '$'$this->apply_filters("optin_pointer_options_json", "{}")'' cannot be parsed correct.
HTML code '$'$this->apply_filters("optin_pointer_execute", "

							optin.pointer(\\'open\\');

							// Tag the opt-in pointer with custom class.
							$(\\'.wp-pointer #fs_connect\\')
								.parents(\\'.wp-pointer.wp-pointer-top\\')
								.addClass(\\'fs-opt-in-pointer\\');

							", "element", "optin")'' cannot be parsed correct.
HTML code '$'json_encode($result)'' cannot be parsed correct.
HTML code '$'json_encode($result)'' cannot be parsed correct.
HTML code '$'json_encode($licenses)'' cannot be parsed correct.
HTML code '$'$this->apply_filters("/forms/affiliation.php", fs_get_template("/forms/affiliation.php", $vars))'' cannot be parsed correct.
HTML code '$'$this->apply_filters("templates/"$template, fs_get_template($template, $vars))'' cannot be parsed correct.
HTML code '$'$this->apply_filters("templates/connect.php", fs_get_template("connect.php", $vars))'' cannot be parsed correct.
HTML code '$'$this->apply_filters("templates/add-ons.php", fs_get_template("add-ons.php", $vars))'' cannot be parsed correct.
HTML code '$'$this->apply_filters("templates/checkout.php", fs_get_template("checkout.php", $vars))'' cannot be parsed correct.
HTML code '$'$this->apply_filters("templates/pricing.php", fs_get_template("pricing.php", $vars))'' cannot be parsed correct.
HTML code '$'$this->apply_filters("templates/contact.php", fs_get_template("contact.php", $vars))'' cannot be parsed correct.
HTML code '$'substr(trim($this->get_tabs_html()), 0, -6)'' cannot be parsed correct.
HTML code '$'
'' cannot be parsed correct.
HTML code '$'console.$log_log_type(json_encode(self->format($log, false)))
'' cannot be parsed correct.
HTML code '$'ob_get_clean()'' cannot be parsed correct.
HTML code '$'ob_get_clean()'' cannot be parsed correct.
HTML code '$'preg_replace("/(\\<div.+>)(.+)(\\<a.+href="([^\\s]+)"([^\\<]+)\\>.+\\<a.+)(\\<\\/div\\>)/is", "$1" . sprintf(fs_text_inline("There is a %s of %s available.", "new-version-available", $this->_fs->get_slug()), sprintf("<a href="$4"%s>%s</a>", "$5", $has_beta_updatefs_text_inline("new Beta version", "new-beta-version", $this->_fs->get_slug())fs_text_inline("new version", "new-version", $this->_fs->get_slug())), $this->_fs->get_plugin_title()) . " " . $this->_fs->version_upgrade_checkout_link($r->new_version) . "$6", $plugin_update_row)'' cannot be parsed correct.
HTML code '$'fs_ui_get_action_button($module_id, $page, $action, $title, $button_class, $params, $is_primary, $is_small, $icon_class, $confirmation, $method)'' cannot be parsed correct.
HTML code '$'wp_nonce_url(freemius($module_id)->_get_admin_page_url($page, array_merge($params, ["fs_action" => $action])), $action)'' cannot be parsed correct.
HTML code '$'$title'' cannot be parsed correct.
HTML code '$'fs_text($key, $slug)'' cannot be parsed correct.
HTML code '$'_fs_text_inline($text, $key, $slug)'' cannot be parsed correct.
HTML code '$'esc_js(_fs_text_x_inline($text, $context, $key, $slug))'' cannot be parsed correct.
HTML code '$'esc_js(fs_text($key, $slug))'' cannot be parsed correct.
HTML code '$'esc_js(_fs_text_inline($text, $key, $slug))'' cannot be parsed correct.
HTML code '$'json_encode(fs_text($key, $slug))'' cannot be parsed correct.
HTML code '$'json_encode(_fs_text_inline($text, $key, $slug))'' cannot be parsed correct.
HTML code '$'_fs_text_x_inline($text, $context, $key, $slug)'' cannot be parsed correct.
HTML code '$'fs_text($key, $slug)'' cannot be parsed correct.
HTML code '$'_fs_text_inline($text, $key, $slug)'' cannot be parsed correct.
HTML code '$'fs_text($key, $slug)'' cannot be parsed correct.
HTML code '$'_fs_text_inline($text, $key, $slug)'' cannot be parsed correct.
HTML code '$'_fs_text_x_inline($text, $context, $key, $slug)'' cannot be parsed correct.
HTML code '$'$this_actions_0'' cannot be parsed correct.
HTML code '$'str_replace("button button-primary", "", $actions[$i])'' cannot be parsed correct.
HTML code '$'apply_filters("fs_plugins_api", false, "plugin_information", $args)'' cannot be parsed correct.
HTML code '$'apply_filters("fs_plugins_api", false, "plugin_information", $args)'' cannot be parsed correct.
HTML code '$'<div id=\'$tab-title\' class=\'with-banner\'><div class=\'vignette\'></div><h2>apply_filters("fs_plugins_api", false, "plugin_information", $args)_name</h2></div>'' cannot be parsed correct.
HTML code '$'<div id=\'$tab-tabs\' class=\'\'>
'' cannot be parsed correct.
HTML code '$'	<a name=\'$section_name\' href=\'add_query_arg(["tab" => $tab, "section" => $section_name])\' array_shift($section_titles)>$plugins_section_titles_$section_name</a>
'' cannot be parsed correct.
HTML code '$'$tab'' cannot be parsed correct.
HTML code '$'with-banner'' cannot be parsed correct.
HTML code '$'$plan'' cannot be parsed correct.
HTML code '$'$plan'' cannot be parsed correct.
HTML code '$'sprintf(fs_text_x_inline("%s Plan", "e.g. Professional Plan", "x-plan", $api->slug), $plan->title)'' cannot be parsed correct.
HTML code '$'remove_query_arg("billing_cycle", add_query_arg(["plugin_id" => $plan->plugin_id], $api->checkout_link))'' cannot be parsed correct.
HTML code '$'$cycle'' cannot be parsed correct.
HTML code '$'json_encode($prices)'' cannot be parsed correct.
HTML code '$'apply_filters("fs_plugins_api", false, "plugin_information", $args)_slug'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'sprintf(fs_text_inline("Click to see reviews that provided a rating of %s", "click-to-reviews", $api->slug), $stars_label)'' cannot be parsed correct.
HTML code '$'sprintf(1 == $keyfs_text_inline("%s star", "x-star", $api->slug)fs_text_inline("%s stars", "x-stars", $api->slug), number_format_i18n($key))'' cannot be parsed correct.
HTML code '$'absint(92 * $_rating)'' cannot be parsed correct.
HTML code '$'number_format_i18n($ratecount)'' cannot be parsed correct.
HTML code '$'<li><img src=\'https://wordpress.org/grav-redirect.php?user=sanitize_user($contrib_username)&amp;s=36\' width=\'18\' height=\'18\' />sanitize_user($contrib_username)</li>'' cannot be parsed correct.
HTML code '$'<li><a href=\'$contrib_profile\' target=\'_blank\' rel=\'noopener noreferrer\'><img src=\'https://wordpress.org/grav-redirect.php?user=sanitize_user($contrib_username)&amp;s=36\' width=\'18\' height=\'18\' />sanitize_user($contrib_username)</a></li>'' cannot be parsed correct.
HTML code '$'apply_filters("fs_plugins_api", false, "plugin_information", $args)_donate_link'' cannot be parsed correct.
HTML code '$'<div class="notice notice-warning"><p><strong>fs_text_inline("Warning", "warning", $api->slug):</strong> fs_text_inline("This plugin has not been tested with your current version of WordPress.", "not-tested-warning", $api->slug)</p></div>'' cannot be parsed correct.
HTML code '$'<div class="notice notice-warning"><p><strong>fs_text_inline("Warning", "warning", $api->slug):</strong> fs_text_inline("This plugin has not been marked as compatible with your version of WordPress.", "not-compatible-warning", $api->slug)</p></div>'' cannot be parsed correct.
HTML code '$'	<div id=\'section-$section_name\' class=\'section\' style=\'display: array_shift($section_titles);\'>
'' cannot be parsed correct.
HTML code '$'links_add_target($content, "_blank")'' cannot be parsed correct.
HTML code '$'<div id=\'$tab-footer\'>
'' cannot be parsed correct.
HTML code '$'$this->get_cta($this->status["is_premium_installed"]esc_html(sprintf(fs_text_inline("Newer Version (%s) Installed", "newer-installed", $api->slug), $this->status["version"]))esc_html(sprintf(fs_text_inline("Newer Free Version (%s) Installed", "newer-free-installed", $api->slug), $this->status["version"])), false, true)'' cannot be parsed correct.
HTML code '$'$this->get_cta($this->status["is_premium_installed"]fs_esc_html_inline("Latest Version Installed", "latest-installed", $api->slug)fs_esc_html_inline("Latest Free Version Installed", "latest-free-installed", $api->slug), false, true)'' cannot be parsed correct.
HTML code '$'$this->get_actions_dropdown($api, null)'' cannot be parsed correct.
HTML code '$'$plan'' cannot be parsed correct.
HTML code '$'fs_esc_attr_x_inline("Price", "noun", "price", $api->slug)'' cannot be parsed correct.
HTML code '$'$plan'' cannot be parsed correct.
HTML code '$'$this->get_actions_dropdown($api, $plan)'' cannot be parsed correct.
HTML code '$'sprintf(fs_text_inline("No commitment for %s - cancel anytime", "no-commitment-x", $api->slug), $trial_period)'' cannot be parsed correct.
HTML code '$'apply_filters("fs_plugins_api", false, "plugin_information", $args)_version'' cannot be parsed correct.
HTML code '$'links_add_target($api->author, "_blank")'' cannot be parsed correct.
HTML code '$'apply_filters("fs_plugins_api", false, "plugin_information", $args)_last_updated'' cannot be parsed correct.
HTML code '$'sprintf(fs_text_x_inline("%s ago", "x-ago", $api->slug), human_time_diff(strtotime($api->last_updated)))'' cannot be parsed correct.
HTML code '$'sprintf(fs_text_inline("%s or higher", "x-or-higher", $api->slug), $api->requires)'' cannot be parsed correct.
HTML code '$'apply_filters("fs_plugins_api", false, "plugin_information", $args)_tested'' cannot be parsed correct.
HTML code '$'sprintf(1 == $api->downloadedfs_text_inline("%s time", "x-time", $api->slug)fs_text_inline("%s times", "x-times", $api->slug), number_format_i18n($api->downloaded))'' cannot be parsed correct.
HTML code '$'apply_filters("fs_plugins_api", false, "plugin_information", $args)_slug'' cannot be parsed correct.
HTML code '$'apply_filters("fs_plugins_api", false, "plugin_information", $args)_homepage'' cannot be parsed correct.
HTML code '$'apply_filters("fs_plugins_api", false, "plugin_information", $args)_donate_link'' cannot be parsed correct.
HTML code '$'sprintf(fs_text_inline("based on %s", "based-on-x", $api->slug), sprintf(1 == $api->num_ratingsfs_text_inline("%s rating", "x-rating", $api->slug)fs_text_inline("%s ratings", "x-ratings", $api->slug), number_format_i18n($api->num_ratings)))'' cannot be parsed correct.
HTML code '$'$fs->_fetch_billing()_business_name'' cannot be parsed correct.
HTML code '$'$fs->_fetch_billing()_tax_id'' cannot be parsed correct.
HTML code '$'$billing_address_street'' cannot be parsed correct.
HTML code '$'$fs->_fetch_billing()_address_apt'' cannot be parsed correct.
HTML code '$'$fs->_fetch_billing()_address_city'' cannot be parsed correct.
HTML code '$'$fs->_fetch_billing()_address_zip'' cannot be parsed correct.
HTML code '$'$code'' cannot be parsed correct.
HTML code '$'$country'' cannot be parsed correct.
HTML code '$'$billing_address_state'' cannot be parsed correct.
HTML code '$'fs_text_x_inline("Edit", "verb", "edit", $slug)fs_text_x_inline("Update", "verb", "update", $slug)'' cannot be parsed correct.
HTML code '$'esc_js($update_text)'' cannot be parsed correct.
HTML code '$'esc_js($edit_text)'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_action("update_billing")'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_security("update_billing")'' cannot be parsed correct.
HTML code '$'$fs->get_id()'' cannot be parsed correct.
HTML code '$'esc_js($update_text)'' cannot be parsed correct.
HTML code '$'esc_js($edit_text)'' cannot be parsed correct.
HTML code '$'$fs->_get_admin_page_url("account")'' cannot be parsed correct.
HTML code '$'activate_license'' cannot be parsed correct.
HTML code '$'$install_id'' cannot be parsed correct.
HTML code '$'$blog_id'' cannot be parsed correct.
HTML code '$'$VARS'' cannot be parsed correct.
HTML code '$' $VARS_class'' cannot be parsed correct.
HTML code '$'sprintf($activate_plan_text . "%s", $premium_plan->title, $VARS["is_localhost"] && $available_license->is_free_localhost" [" . fs_text_inline("Localhost", "localhost", $slug) . "]"$available_license->is_single_site()""" [" . 1 < $available_license->left()sprintf(fs_text_x_inline("%s left", "as 5 licenses left", "x-left", $slug), $available_license->left())strtolower(fs_text_inline("Last license", "last-license", $slug)) . "]")'' cannot be parsed correct.
HTML code '$'$VARS_addon_info_title'' cannot be parsed correct.
HTML code '$'$fs_addon->get_site()_id'' cannot be parsed correct.
HTML code '$'$fs_addon->get_plugin_version()'' cannot be parsed correct.
HTML code '$'strtoupper(is_string($plan_name)$plan_title$free_text)'' cannot be parsed correct.
HTML code '$'fs_text_inline("Activate", "activate", $slug)'' cannot be parsed correct.
HTML code '$'wp_nonce_url(self_admin_url("update.php?" . isset($addon_info["has_paid_plan"]) && $addon_info["has_paid_plan"]"fs_allow_updater_and_dialog=true&""" . "action=install-plugin&plugin=" . $addon_info["slug"]), "install-plugin_" . $addon_info["slug"])'' cannot be parsed correct.
HTML code '$'$fs->_get_latest_download_local_url($addon_id)'' cannot be parsed correct.
HTML code '$'fs_text_x_inline("Download Latest", "as download latest version", "download-latest", $slug)'' cannot be parsed correct.
HTML code '$'$fs->_get_admin_page_url("account")'' cannot be parsed correct.
HTML code '$'deactivate_license'' cannot be parsed correct.
HTML code '$'$install_id'' cannot be parsed correct.
HTML code '$'$blog_id'' cannot be parsed correct.
HTML code '$' $VARS_class'' cannot be parsed correct.
HTML code '$'$VARS_site_blog_id'' cannot be parsed correct.
HTML code '$'$VARS'' cannot be parsed correct.
HTML code '$'$VARS'' cannot be parsed correct.
HTML code '$'$fs->_get_admin_page_url("account")'' cannot be parsed correct.
HTML code '$'opt_in'' cannot be parsed correct.
HTML code '$'$VARS_site_blog_id'' cannot be parsed correct.
HTML code '$'fs_strip_url_protocol($site["url"])'' cannot be parsed correct.
HTML code '$'$button'' cannot be parsed correct.
HTML code '$'54'' cannot be parsed correct.
HTML code '$'wp_nonce_url("plugins.php?action=activate&amp;plugin=" . $addon_file, "activate-plugin_" . $addon_file)'' cannot be parsed correct.
HTML code '$'$VARS_site_blog_id'' cannot be parsed correct.
HTML code '$'$fs->_get_admin_page_url("account")'' cannot be parsed correct.
HTML code '$'toggle_tracking'' cannot be parsed correct.
HTML code '$'$VARS'' cannot be parsed correct.
HTML code '$'$VARS_site_blog_id'' cannot be parsed correct.
HTML code '$'truefalse'' cannot be parsed correct.
HTML code '$'htmlspecialchars($user->get_name())'' cannot be parsed correct.
HTML code '$'htmlspecialchars($user->email)'' cannot be parsed correct.
HTML code '$'$user_id'' cannot be parsed correct.
HTML code '$'htmlspecialchars($install->public_key)'' cannot be parsed correct.
HTML code '$'htmlspecialchars($install->secret_key)'' cannot be parsed correct.
HTML code '$'$free_text'' cannot be parsed correct.
HTML code '$'$VARS'' cannot be parsed correct.
HTML code '$'sprintf($downgrade_x_confirm_text, $fs->is_only_premium()$cancelling_subscription_text$downgrading_plan_text, $plan->title, $human_readable_license_expiration) fs_text_inline("You can still enjoy all %s features but you will not have access to %s security & feature updates, nor support.", "after-downgrade-non-blocking", $slug) fs_text_inline("Please note that we will not be able to grandfather outdated pricing for renewals/new subscriptions after a cancellation. If you choose to renew the subscription manually in the future, after a price increase, which typically occurs once a year, you will be charged the updated price.", "pricing-increase-warning", $slug)'' cannot be parsed correct.
HTML code '$'fs_text_x_inline("Downgrade", "verb", "downgrade", $slug)'' cannot be parsed correct.
HTML code '$' class="alternate"'' cannot be parsed correct.
HTML code '$'$payment'' cannot be parsed correct.
HTML code '$'date("M j, Y", strtotime($payment->created))'' cannot be parsed correct.
HTML code '$'$payment->formatted_gross()'' cannot be parsed correct.
HTML code '$'$fs->_get_invoice_api_url($payment->id)'' cannot be parsed correct.
HTML code '$'$license->get_html_escaped_masked_secret_key()'' cannot be parsed correct.
HTML code '$'htmlspecialchars($license->secret_key)'' cannot be parsed correct.
HTML code '$'$fs->get_unique_affix()'' cannot be parsed correct.
HTML code '$'$fs->_get_subscription($license->id)_id'' cannot be parsed correct.
HTML code '$'_fs_text_inline("Annual", "annual", $slug)_fs_text_inline("Monthly", "monthly", $slug)'' cannot be parsed correct.
HTML code '$'sprintf($expires_in_text, human_time_diff(time(), strtotime($license->expiration)))'' cannot be parsed correct.
HTML code '$'sprintf($renews_in_text, human_time_diff(time(), strtotime($subscription->next_payment)))'' cannot be parsed correct.
HTML code '$'$fs->_get_admin_page_url("account")'' cannot be parsed correct.
HTML code '$'downgrade_account'' cannot be parsed correct.
HTML code '$'$VARS_site_blog_id'' cannot be parsed correct.
HTML code '$'$fs->get_account_url()'' cannot be parsed correct.
HTML code '$'$fs->_get_admin_page_url("addons")'' cannot be parsed correct.
HTML code '$'fs_text_inline("Add-Ons", "add-ons", $slug)'' cannot be parsed correct.
HTML code '$'$fs->get_upgrade_url()'' cannot be parsed correct.
HTML code '$'fs_text_x_inline("Upgrade", "verb", "upgrade", $slug)'' cannot be parsed correct.
HTML code '$'$fs->get_trial_url()'' cannot be parsed correct.
HTML code '$'editor-codecontrols-pause'' cannot be parsed correct.
HTML code '$'$fs->_get_admin_page_url("account")'' cannot be parsed correct.
HTML code '$'sprintf(fs_text_inline("Deleting the account will automatically deactivate your %s plan license so you can use it on other sites. If you want to terminate the recurring payments as well, click the "Cancel" button, and first "Downgrade" your account. Are you sure you would like to continue with the deletion?", "delete-account-x-confirm", $slug), $plan->title)'' cannot be parsed correct.
HTML code '$'sprintf(fs_text_inline("Deletion is not temporary. Only delete if you no longer want to use this %s anymore. Are you sure you would like to continue with the deletion?", "delete-account-confirm", $slug), $fs->get_module_label(true))'' cannot be parsed correct.
HTML code '$'$fs->_get_admin_page_url("account")'' cannot be parsed correct.
HTML code '$'$fs->_get_admin_page_url("account")'' cannot be parsed correct.
HTML code '$'sprintf($downgrade_x_confirm_text, $fs->is_only_premium()$cancelling_subscription_text$downgrading_plan_text, $plan->title, human_time_diff(time(), strtotime($license->expiration)))'' cannot be parsed correct.
HTML code '$'sprintf($after_downgrade_non_blocking_text, $plan->title, $fs->get_module_label(true))'' cannot be parsed correct.
HTML code '$'sprintf($after_downgrade_blocking_text, $plan->title)'' cannot be parsed correct.
HTML code '$'fs_text_inline("Please note that we will not be able to grandfather outdated pricing for renewals/new subscriptions after a cancellation. If you choose to renew the subscription manually in the future, after a price increase, which typically occurs once a year, you will be charged the updated price.", "pricing-increase-warning", $slug)'' cannot be parsed correct.
HTML code '$'fs_text_inline("Cancel Subscription", "cancel-subscription", $slug)fs_text_x_inline("Downgrade", "verb", "downgrade", $slug)'' cannot be parsed correct.
HTML code '$'$fs->get_upgrade_url()'' cannot be parsed correct.
HTML code '$'fs_text_inline("Change Plan", "change-plan", $slug)'' cannot be parsed correct.
HTML code '$'$fs->_get_admin_page_url("account")'' cannot be parsed correct.
HTML code '$'fs_text_inline("Cancel Trial", "cancel-trial", $slug)'' cannot be parsed correct.
HTML code '$'$fs->_get_admin_page_url("account")'' cannot be parsed correct.
HTML code '$'$fs->get_unique_affix()'' cannot be parsed correct.
HTML code '$'$p_id'' cannot be parsed correct.
HTML code '$'$p_title'' cannot be parsed correct.
HTML code '$':'' cannot be parsed correct.
HTML code '$'htmlspecialchars($p["value"])'' cannot be parsed correct.
HTML code '$'htmlspecialchars($p["value"])'' cannot be parsed correct.
HTML code '$'fs_text_x_inline("Trial", "trial period", "trial", $slug)'' cannot be parsed correct.
HTML code '$'$fs->_get_admin_page_url("account")'' cannot be parsed correct.
HTML code '$'$fs->get_unique_affix()'' cannot be parsed correct.
HTML code '$'fs_text_x_inline("Sync License", "as synchronize license", "sync-license", $slug)'' cannot be parsed correct.
HTML code '$'$fs->get_unique_affix()'' cannot be parsed correct.
HTML code '$'$fs->get_upgrade_url()'' cannot be parsed correct.
HTML code '$' button-primary fs-upgrade fs-change-plan'' cannot be parsed correct.
HTML code '$'fs_text_x_inline("Upgrade", "verb", "upgrade", $slug)fs_text_inline("Change Plan", "change-plan", $slug)'' cannot be parsed correct.
HTML code '$'sprintf($renews_in_text, human_time_diff(time(), strtotime($bundle_subscription->next_payment)))'' cannot be parsed correct.
HTML code '$'successwarn'' cannot be parsed correct.
HTML code '$'$fs->_get_admin_page_url("account")'' cannot be parsed correct.
HTML code '$'$fs->_get_latest_download_local_url()'' cannot be parsed correct.
HTML code '$'fs-errorfs-warn'' cannot be parsed correct.
HTML code '$'sprintf($is_license_expired$expired_ago_text$expires_in_text, human_time_diff(time(), strtotime($license->expiration)))'' cannot be parsed correct.
HTML code '$'sprintf($renews_in_text, human_time_diff(time(), strtotime($subscription->next_payment)))'' cannot be parsed correct.
HTML code '$'sprintf($expires_in_text, human_time_diff(time(), strtotime($site->trial_ends)))'' cannot be parsed correct.
HTML code '$' button-primary'' cannot be parsed correct.
HTML code '$'$fs->get_unique_affix()'' cannot be parsed correct.
HTML code '$'is_object($license)'' cannot be parsed correct.
HTML code '$'fs_text_inline("Add-Ons", "add-ons", $slug)'' cannot be parsed correct.
HTML code '$'fs_text_x_inline("Version", "product version", "version", $slug)'' cannot be parsed correct.
HTML code '$'fs_text_x_inline("Plan", "as product pricing plan", "plan", $slug)'' cannot be parsed correct.
HTML code '$'sprintf(fs_text_inline("Download %s Version", "download-x-version", $slug), $fs->is_trial()$trial_plan->title$plan->title)$this->get_all_updates()'' cannot be parsed correct.
HTML code '$'wp_nonce_url(self_admin_url("update.php?action=upgrade-"$module_type"&"$module_type"=" . $fs->get_plugin_basename()), "upgrade-"$module_type"_" . $fs->get_plugin_basename())'' cannot be parsed correct.
HTML code '$'fs_esc_html_inline("Install Update Now", "install-update-now", $slug) [$this->get_all_updates()_version]'' cannot be parsed correct.
HTML code '$'$fs->get_unique_affix()'' cannot be parsed correct.
HTML code '$'$fs->_get_admin_page_url("account")'' cannot be parsed correct.
HTML code '$'sprintf(fs_text_inline("What is your %s?", "what-is-your-x", $slug), $p["title"])'' cannot be parsed correct.
HTML code '$'$p_value'' cannot be parsed correct.
HTML code '$'$p_id'' cannot be parsed correct.
HTML code '$'$fs->get_unique_affix()'' cannot be parsed correct.
HTML code '$'$p_id'' cannot be parsed correct.
HTML code '$'$p_id'' cannot be parsed correct.
HTML code '$'$fs->get_unique_affix()'' cannot be parsed correct.
HTML code '$'fs_esc_attr_x_inline("Edit", "verb", "edit", $slug)'' cannot be parsed correct.
HTML code '$'fs_esc_attr_inline("Change User", "change-user", $slug)'' cannot be parsed correct.
HTML code '$'sprintf(fs_text_inline("Add Ons for %s", "add-ons-for-x", $slug), $fs->get_plugin_name())'' cannot be parsed correct.
HTML code '$'sprintf("%s... %s", fs_text_x_inline("Oops", "exclamation", "oops", $slug), fs_text_inline("We couldn\\'t load the add-ons list. It\\'s probably an issue on our side, please try to come back in few minutes.", "add-ons-missing", $slug))'' cannot be parsed correct.
HTML code '$'sprintf("%s %s", sprintf(fs_esc_attr_inline("Get updates for bleeding edge Beta versions of %s.", "get-beta-versions", $slug), $plugin_title), sprintf(fs_esc_attr_inline("An update to a Beta version will replace your installed version of %s with the latest Beta release - use with caution, and not on production sites. You have been warned.", "beta-version-update-caution", $slug), $plugin_title))'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_action("set_beta_mode")'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_security("set_beta_mode")'' cannot be parsed correct.
HTML code '$'$fs->get_id()'' cannot be parsed correct.
HTML code '$'fs_esc_js_inline("Processing", "processing")'' cannot be parsed correct.
HTML code '$'$fs->get_id()'' cannot be parsed correct.
HTML code '$'$fs->get_action_tag("subscription_cancellation_action")'' cannot be parsed correct.
HTML code '$'sprintf(fs_text_inline("Cancelling %s", "cancelling-x", $slug), fs_text_inline("trial", "trial", $slug))'' cannot be parsed correct.
HTML code '$'esc_js(sprintf(fs_text_inline("Cancelling %s...", "cancelling-x", $slug), $is_paid_trialfs_text_inline("trial", "trial", $slug)fs_text_inline("subscription", "subscription", $slug)))'' cannot be parsed correct.
HTML code '$'json_encode($cancel_trial_confirm_text)'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_action("toggle_whitelabel_mode")'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_security("toggle_whitelabel_mode")'' cannot be parsed correct.
HTML code '$'$fs->get_id()'' cannot be parsed correct.
HTML code '$'$fs->get_addon($addon_id)_slug'' cannot be parsed correct.
HTML code '$'sprintf($view_details_link, " fs-overlay", "")'' cannot be parsed correct.
HTML code '$'$fs->get_addon($addon_id)_info_card_banner_url'' cannot be parsed correct.
HTML code '$'sprintf("<span class="fs-badge fs-installed-addon-badge">%s</span>", esc_html($is_plugin_activefs_text_x_inline("Active", "active add-on", "active-addon", $slug)fs_text_x_inline("Installed", "installed add-on", "installed-addon", $slug)))'' cannot be parsed correct.
HTML code '$'$fs->get_addon($addon_id)_title'' cannot be parsed correct.
HTML code '$'implode(" - ", $descriptors)'' cannot be parsed correct.
HTML code '$'$fs->get_addon($addon_id)_info_short_descriptionSHORT DESCRIPTION'' cannot be parsed correct.
HTML code '$'fs_text_inline("View details", "view-details", $slug)'' cannot be parsed correct.
HTML code '$'sprintf("<a class="button button-primary" href="%s">%s</a>", wp_nonce_url(self_admin_url("update.php?" . $has_paid_plan!$addon->is_wp_org_compliant"fs_allow_updater_and_dialog=true&""" . "action=install-plugin&plugin=" . $addon->slug), "install-plugin_" . $addon->slug), fs_esc_html_inline("Install Now", "install-now", $slug))'' cannot be parsed correct.
HTML code '$'sprintf("<a class="button button-primary edit" href="%s" title="%s" target="_parent">%s</a>", wp_nonce_url("plugins.php?action=activate&amp;plugin=" . $basename, "activate-plugin_" . $basename), fs_esc_attr_inline("Activate this add-on", "activate-this-addon", $addon->slug), fs_text_inline("Activate", "activate", $addon->slug))'' cannot be parsed correct.
HTML code '$'false'' cannot be parsed correct.
HTML code '$'fs_text_x_inline("Download Latest", "as download latest version", "download-latest", $slug)'' cannot be parsed correct.
HTML code '$'false'' cannot be parsed correct.
HTML code '$'fs_text_x_inline("Download Latest", "as download latest version", "download-latest", $slug)'' cannot be parsed correct.
HTML code '$'sprintf($view_details_link, "", esc_html($view_details_text))'' cannot be parsed correct.
HTML code '$'fs_request_get("slug")'' cannot be parsed correct.
HTML code '$'$fs->get_unique_affix()'' cannot be parsed correct.
HTML code '$'$VARS_id'' cannot be parsed correct.
HTML code '$'$VARS_manager_id'' cannot be parsed correct.
HTML code '$'$VARS_manager_id'' cannot be parsed correct.
HTML code '$'explode(":", $slug)_1'' cannot be parsed correct.
HTML code '$' fs-slug-explode(":", $slug)_0'' cannot be parsed correct.
HTML code '$' fs-type-explode(":", $slug)_1'' cannot be parsed correct.
HTML code '$'$VARS_plugin'' cannot be parsed correct.
HTML code '$'esc_js(fs_text_inline("Automatic Installation", "auto-installation", $slug))'' cannot be parsed correct.
HTML code '$'ob_get_clean()'' cannot be parsed correct.
HTML code '$'sprintf(fs_esc_html_inline("An automated download and installation of %s (paid version) from %s will start in %s. If you would like to do it manually - click the cancellation button now.", "installing-in-n", $slug), $plugin_title, sprintf("<a href="%s" target="_blank" rel="noopener">%s</a>", "https://freemius.com", "freemius.com"), $countdown_html)'' cannot be parsed correct.
HTML code '$'sprintf(fs_esc_html_inline("The installation process has started and may take a few minutes to complete. Please wait until it is done - do not refresh this page.", "installing-module-x", $slug), $plugin_title)'' cannot be parsed correct.
HTML code '$'fs_get_template("ajax-loader.php", $params)'' cannot be parsed correct.
HTML code '$'sprintf(esc_js(fs_text_inline("%s sec", "x-sec", $slug)), sprintf("<span class="fs-countdown">%s</span>", $sec_countdown))'' cannot be parsed correct.
HTML code '$'json_encode($require_credentials)'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_action("install_premium_version")'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_security("install_premium_version")'' cannot be parsed correct.
HTML code '$'$VARS_slug'' cannot be parsed correct.
HTML code '$'$fs->get_id()'' cannot be parsed correct.
HTML code '$'$VARS_target_module_id'' cannot be parsed correct.
HTML code '$'$fs->get_account_url()'' cannot be parsed correct.
HTML code '$'30'' cannot be parsed correct.
HTML code '$'FS_CHECKOUT__ADDRESS'' cannot be parsed correct.
HTML code '$'http_build_query($query_params)'' cannot be parsed correct.
HTML code '$'fs_nonce_url($fs->_get_admin_page_url("account", ["fs_action" => $fs->get_unique_affix() . "_activate_new", "plugin_id" => $plugin_id]), $fs->get_unique_affix() . "_activate_new")'' cannot be parsed correct.
HTML code '$'fs_text_x_inline("Dismiss", "as close a window", "dismiss")'' cannot be parsed correct.
HTML code '$'fs_text_x_inline("Dismiss", "as close a window", "dismiss")'' cannot be parsed correct.
HTML code '$'$VARS_title'' cannot be parsed correct.
HTML code '$'$VARS_message'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'fs_nonce_url($fs->_get_admin_page_url("account", ["fs_action" => $fs->get_unique_affix() . "_activate_new", "plugin_id" => $plugin_id, "pending_activation" => true]), $fs->get_unique_affix() . "_activate_new")'' cannot be parsed correct.
HTML code '$'json_encode($install_data)'' cannot be parsed correct.
HTML code '$'$fs->apply_filters("checkout/purchaseCompleted", "function (data) {
						console.log("checkout", "purchaseCompleted");
					}")'' cannot be parsed correct.
HTML code '$'fs_text_inline("We\\'re excited to introduce the Freemius network-level integration.", "connect_message_network_upgrade", $slug) sprintf(fs_text_inline("During the update process we detected %s site(s) in the network that are still pending your attention.", "connect_message_network_upgrade-free", $slug), count($sites))<br><br>substr($message, strlen($hey_x_text . "<br>"))$fs->apply_filters("connect-message_on-premium", sprintf(fs_text_inline("Welcome to %s! To get started, please enter your license key:", "thanks-for-purchasing", $slug), "<b>" . $fs->get_plugin_name() . "</b>"), $first_name, $fs->get_plugin_name())'' cannot be parsed correct.
HTML code '$'$fs->apply_filters("license_key_maxlength", 32)'' cannot be parsed correct.
HTML code '$'$fs->get_unique_affix()'' cannot be parsed correct.
HTML code '$'sprintf("%s<span class="action-description"> - %s</span>", $fs->get_text_inline("Yes", "yes"), $fs->get_text_inline("send me security & feature updates, educational content and offers.", "send-updates"))'' cannot be parsed correct.
HTML code '$'sprintf("%s<span class="action-description"> - %s</span>", $fs->get_text_inline("No", "no"), sprintf($fs->get_text_inline("do %sNOT%s send me security & feature updates, educational content and offers.", "do-not-send-updates"), "<span class="underlined">", "</span>"))'' cannot be parsed correct.
HTML code '$'fs_get_template("partials/network-activation.php", $vars)'' cannot be parsed correct.
HTML code '$'fs_nonce_url($fs->_get_admin_page_url("", ["fs_action" => $fs->get_unique_affix() . "_skip_activation"], $is_network_level_activation), $fs->get_unique_affix() . "_skip_activation")'' cannot be parsed correct.
HTML code '$' rtl'' cannot be parsed correct.
HTML code '$'fs_nonce_url($fs->_get_admin_page_url("", ["fs_action" => $fs->get_unique_affix() . "_delegate_activation"]), $fs->get_unique_affix() . "_delegate_activation")'' cannot be parsed correct.
HTML code '$'$fs->get_unique_affix()'' cannot be parsed correct.
HTML code '$'fs_text_inline("Re-send activation email", "resend-activation-email", $slug)'' cannot be parsed correct.
HTML code '$'WP_FS__ADDRESS'' cannot be parsed correct.
HTML code '$'$name'' cannot be parsed correct.
HTML code '$'$value'' cannot be parsed correct.
HTML code '$' require-license-key'' cannot be parsed correct.
HTML code '$'fs_request_get("error")'' cannot be parsed correct.
HTML code '$'fs_text_inline("Allow & Continue", "opt-in-connect", $slug)'' cannot be parsed correct.
HTML code '$'$fs->apply_filters("known_license_issues_url", "https://freemius.com/help/documentation/wordpress-sdk/license-activation-issues/")'' cannot be parsed correct.
HTML code '$'sprintf(fs_esc_html_inline("The %1$s will periodically send %2$s to %3$s for security & feature updates delivery, and license management.", "license-sync-disclaimer", $slug), $fs->get_module_label(true), sprintf("<a class="fs-trigger" href="#" tabindex="1">%s</a>", fs_esc_html_inline("diagnostic data", "send-data")), "<a class="fs-tooltip-trigge" . is_rtl()" rtl""" . "" href="" . $freemius_site_url . "" target="_blank" rel="noopener" tabindex="1">freemius.com <i class="dashicons dashicons-editor-help" style="text-decoration: none;"><span class="fs-tooltip" style="width: 170px">" . $fs->get_text_inline("Freemius is our licensing and software updates engine", "permissions-extensions_desc") . "</span></i></a>")'' cannot be parsed correct.
HTML code '$'$id'' cannot be parsed correct.
HTML code '$'$id'' cannot be parsed correct.
HTML code '$'$permission_icon-class'' cannot be parsed correct.
HTML code '$'$method'' cannot be parsed correct.
HTML code '$'number_format($count)'' cannot be parsed correct.
HTML code '$'$log_id'' cannot be parsed correct.
HTML code '$'$log_method'' cannot be parsed correct.
HTML code '$'$log_code'' cannot be parsed correct.
HTML code '$'number_format(100 * $log["total"], 2) fs_text_x_inline("ms", "milliseconds")'' cannot be parsed correct.
HTML code '$'$log_backtrace_0_class$log_backtrace_0_type$log_backtrace_0_function'' cannot be parsed correct.
HTML code '$'substr($bt[$i]["file"], $root_path_len):$log_backtrace_0_line'' cannot be parsed correct.
HTML code '$'onoff'' cannot be parsed correct.
HTML code '$'$permission_label'' cannot be parsed correct.
HTML code '$'$permission_tooltip'' cannot be parsed correct.
HTML code '$'$permission_desc'' cannot be parsed correct.
HTML code '$'$fs->get_eula_url()$fs->get_usage_tracking_terms_url()'' cannot be parsed correct.
HTML code '$'html_entity_decode($previous_theme_activation_url)'' cannot be parsed correct.
HTML code '$'truefalse'' cannot be parsed correct.
HTML code '$'truefalse'' cannot be parsed correct.
HTML code '$'truefalse'' cannot be parsed correct.
HTML code '$'truefalse'' cannot be parsed correct.
HTML code '$'count($sites)'' cannot be parsed correct.
HTML code '$'truefalse'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_action("activate_license")'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_security("activate_license")'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_action("network_activate")'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_security("network_activate")'' cannot be parsed correct.
HTML code '$'$fs->get_id()'' cannot be parsed correct.
HTML code '$'esc_js($is_pending_activationfs_text_x_inline("Sending email", "as in the process of sending an email", "sending-email", $slug)fs_text_x_inline("Activating", "as activating plugin", "activating", $slug))'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_action("fetch_is_marketing_required_flag_value")'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_security("fetch_is_marketing_required_flag_value")'' cannot be parsed correct.
HTML code '$'$fs->get_id()'' cannot be parsed correct.
HTML code '$'$encode(json_decode($log["body"]), JSON_PRETTY_PRINT)'' cannot be parsed correct.
HTML code '$'$log_result'' cannot be parsed correct.
HTML code '$'number_format(100 * $log["start"] - WP_FS__SCRIPT_START_TIME, 2) fs_text_x_inline("ms", "milliseconds")'' cannot be parsed correct.
HTML code '$'number_format(100 * $log["end"] - WP_FS__SCRIPT_START_TIME, 2) fs_text_x_inline("ms", "milliseconds")'' cannot be parsed correct.
HTML code '$'$log_cnt'' cannot be parsed correct.
HTML code '$'$logger->get_id()'' cannot be parsed correct.
HTML code '$'$log_log_type'' cannot be parsed correct.
HTML code '$'$log_class$log_type$log_function'' cannot be parsed correct.
HTML code '$'$log_msg'' cannot be parsed correct.
HTML code '$'substr($log["file"], $logger->get_file()):$log_line'' cannot be parsed correct.
HTML code '$'number_format(100 * $log["timestamp"] - WP_FS__SCRIPT_START_TIME, 2) fs_text_x_inline("ms", "milliseconds")'' cannot be parsed correct.
HTML code '$'WP_FS__ADDRESS'' cannot be parsed correct.
HTML code '$'http_build_query($query_params)'' cannot be parsed correct.
HTML code '$'wp_create_nonce("fs_get_db_option")'' cannot be parsed correct.
HTML code '$'wp_create_nonce("fs_set_db_option")'' cannot be parsed correct.
HTML code '$'$p_key'' cannot be parsed correct.
HTML code '$'$p_val'' cannot be parsed correct.
HTML code '$'count($all_plugins->plugins)'' cannot be parsed correct.
HTML code '$'sprintf(WP_FS__SCRIPT_START_TIME < $all_plugins->timestamp$in_x_text$x_ago_text, $human_diff)'' cannot be parsed correct.
HTML code '$'count($all_themes->themes)'' cannot be parsed correct.
HTML code '$'sprintf(WP_FS__SCRIPT_START_TIME < $all_themes->timestamp$in_x_text$x_ago_text, $human_diff)'' cannot be parsed correct.
HTML code '$'$data'' cannot be parsed correct.
HTML code '$'$sdk_path'' cannot be parsed correct.
HTML code '$'$data'' cannot be parsed correct.
HTML code '$'ActiveInactive'' cannot be parsed correct.
HTML code '$'fs_text_inline("Plugins", "plugins")fs_text_inline("Themes", "themes")'' cannot be parsed correct.
HTML code '$'$module_type'' cannot be parsed correct.
HTML code '$'$data'' cannot be parsed correct.
HTML code '$'$slug'' cannot be parsed correct.
HTML code '$'$data'' cannot be parsed correct.
HTML code '$'$data'' cannot be parsed correct.
HTML code '$'fs_text_x_inline("Connected", "as connection was successful")fs_text_x_inline("Blocked", "as connection blocked")'' cannot be parsed correct.
HTML code '$'fs_text_x_inline("On", "as turned on")fs_text_x_inline("Off", "as turned off")'' cannot be parsed correct.
HTML code '$'$data'' cannot be parsed correct.
HTML code '$'$slug'' cannot be parsed correct.
HTML code '$'$cron_name'' cannot be parsed correct.
HTML code '$'$cron_module_type'' cannot be parsed correct.
HTML code '$'$cron_type'' cannot be parsed correct.
HTML code '$'sprintf(WP_FS__SCRIPT_START_TIME < $cron["last"]$in_x_text$x_ago_text, $human_diff)'' cannot be parsed correct.
HTML code '$'sprintf(WP_FS__SCRIPT_START_TIME < $cron["next"]$in_x_text$x_ago_text, $human_diff)'' cannot be parsed correct.
HTML code '$'fs_text_inline("Freemius Debug") - fs_text_inline("SDK") v.$fs_active_plugins'' cannot be parsed correct.
HTML code '$'fs-onfs-off'' cannot be parsed correct.
HTML code '$'sprintf(fs_text_inline("%s Installs", "module-installs"), WP_FS__MODULE_TYPE_PLUGIN === $module_typefs_text_inline("Plugin", "plugin")fs_text_inline("Theme", "theme"))'' cannot be parsed correct.
HTML code '$'$data'' cannot be parsed correct.
HTML code '$'$fs->get_network_install_blog_id()'' cannot be parsed correct.
HTML code '$'$fs->get_network_user()_email'' cannot be parsed correct.
HTML code '$'$fs->get_id()'' cannot be parsed correct.
HTML code '$'$fs->get_account_url()'' cannot be parsed correct.
HTML code '$'$fs->get_id()'' cannot be parsed correct.
HTML code '$'$module_type'' cannot be parsed correct.
HTML code '$'$license'' cannot be parsed correct.
HTML code '$'$license'' cannot be parsed correct.
HTML code '$'$license'' cannot be parsed correct.
HTML code '$'$license'' cannot be parsed correct.
HTML code '$'UnlimitedSingle Site$license'' cannot be parsed correct.
HTML code '$'$license'' cannot be parsed correct.
HTML code '$'BlockingFlexible'' cannot be parsed correct.
HTML code '$'WhitelabeledNormal'' cannot be parsed correct.
HTML code '$'$license->get_html_escaped_masked_secret_key()$license'' cannot be parsed correct.
HTML code '$'$license'' cannot be parsed correct.
HTML code '$'$module_type'' cannot be parsed correct.
HTML code '$'$site'' cannot be parsed correct.
HTML code '$'$site'' cannot be parsed correct.
HTML code '$'fs_strip_url_protocol($site->url)'' cannot be parsed correct.
HTML code '$'$slug'' cannot be parsed correct.
HTML code '$'$site'' cannot be parsed correct.
HTML code '$'$site'' cannot be parsed correct.
HTML code '$'$plan_name'' cannot be parsed correct.
HTML code '$'$site'' cannot be parsed correct.
HTML code '$'$site'' cannot be parsed correct.
HTML code '$'$site'' cannot be parsed correct.
HTML code '$'$site'' cannot be parsed correct.
HTML code '$'$module_type'' cannot be parsed correct.
HTML code '$'$slug'' cannot be parsed correct.
HTML code '$'sprintf(fs_text_inline("Add Ons of module %s", "addons-of-x"), $plugin_id)'' cannot be parsed correct.
HTML code '$'$addon'' cannot be parsed correct.
HTML code '$'$section_title'' cannot be parsed correct.
HTML code '$'$row_0'' cannot be parsed correct.
HTML code '$'$row_0'' cannot be parsed correct.
HTML code '$'$row_1'' cannot be parsed correct.
HTML code '$'$addon'' cannot be parsed correct.
HTML code '$'$addon'' cannot be parsed correct.
HTML code '$'$addon'' cannot be parsed correct.
HTML code '$'$addon'' cannot be parsed correct.
HTML code '$'$addon'' cannot be parsed correct.
HTML code '$'$user'' cannot be parsed correct.
HTML code '$'$user->get_name()'' cannot be parsed correct.
HTML code '$'$user'' cannot be parsed correct.
HTML code '$'$user'' cannot be parsed correct.
HTML code '$'json_encode($user->is_verified)'' cannot be parsed correct.
HTML code '$'$user'' cannot be parsed correct.
HTML code '$'$user'' cannot be parsed correct.
HTML code '$'$user'' cannot be parsed correct.
HTML code '$'sprintf(fs_text_inline("%s Licenses", "module-licenses"), WP_FS__MODULE_TYPE_PLUGIN === $module_typefs_text_inline("Plugin", "plugin")fs_text_inline("Theme", "theme"))'' cannot be parsed correct.
HTML code '$'json_encode($modal_content_html)'' cannot be parsed correct.
HTML code '$'$fs->get_unique_affix()'' cannot be parsed correct.
HTML code '$'esc_js($submit_button_text)'' cannot be parsed correct.
HTML code '$'truefalse'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_action("set_data_debug_mode")'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_security("set_data_debug_mode")'' cannot be parsed correct.
HTML code '$'$fs->get_id()'' cannot be parsed correct.
HTML code '$'fs_esc_js_inline("Processing", "processing", $slug)...'' cannot be parsed correct.
HTML code '$'fs_esc_js_inline("Processing", "processing", $slug)...'' cannot be parsed correct.
HTML code '$'json_encode(fs_text_inline("An unknown error has occurred.", "unknown-error", $slug))'' cannot be parsed correct.
HTML code '$'sprintf(fs_esc_html_inline("Your affiliate application for %s has been accepted! Log in to your affiliate area at: %s.", "affiliate-application-accepted", $slug), $plugin_title, sprintf("<a href="%s" target="_blank" rel="noopener">%s</a>", $members_dashboard_login_url, $members_dashboard_login_url))'' cannot be parsed correct.
HTML code '$'error'' cannot be parsed correct.
HTML code '$'fs_text_inline("Thank you for applying for our affiliate program, unfortunately, we\\'ve decided at this point to reject your application. Please try again in 30 days.", "affiliate-application-rejected", $slug)'' cannot be parsed correct.
HTML code '$'sprintf(fs_text_inline("Like the %s? Become our ambassador and earn cash ;-)", "become-an-ambassador", $slug), $module_type)'' cannot be parsed correct.
HTML code '$'sprintf(fs_text_inline("Refer new customers to our %s and earn %s commission on each successful sale you refer!", "refer-new-customers", $slug), $module_type, $commission)'' cannot be parsed correct.
HTML code '$'sprintf(fs_text_inline("%s commission when a customer purchases a new license.", "commission-on-new-license-purchase", $slug), $commission)'' cannot be parsed correct.
HTML code '$'sprintf(fs_text_inline("Get commission for automated subscription renewals.", "renewals-commission", $slug))'' cannot be parsed correct.
HTML code '$'sprintf(fs_text_inline("%s tracking cookie after the first visit to maximize earnings potential.", "affiliate-tracking", $slug), $affiliate_tracking)'' cannot be parsed correct.
HTML code '$'sprintf(fs_text_inline("%s minimum payout amount.", "minimum-payout-amount", $slug), "$100")'' cannot be parsed correct.
HTML code '$'style="display: none"'' cannot be parsed correct.
HTML code '$'wp_get_current_user()'' cannot be parsed correct.
HTML code '$'readonly'' cannot be parsed correct.
HTML code '$'trim($current_user->user_firstname . " " . $current_user->user_lastname)'' cannot be parsed correct.
HTML code '$'readonly'' cannot be parsed correct.
HTML code '$'$fs->get_affiliate()_paypal_email'' cannot be parsed correct.
HTML code '$'readonly'' cannot be parsed correct.
HTML code '$'sprintf(fs_text_inline("Where are you going to promote the %s?", "domain-field-label", $slug), $module_type)'' cannot be parsed correct.
HTML code '$'json_encode($submit_button_text)'' cannot be parsed correct.
HTML code '$'json_encode($debug_license_link_text)'' cannot be parsed correct.
HTML code '$'fs_text_inline("Sorry for the inconvenience and we are here to help if you give us a chance.", "contact-support-before-deactivation", $slug)sprintf(" <a href=\\'%s\\' class=\\'button button-small button-primary\\'>%s</a>", $fs->contact_url("technical_support"), fs_text_inline("Contact Support", "contact-support", $slug))'' cannot be parsed correct.
HTML code '$'json_encode($reasons_list_items_html)'' cannot be parsed correct.
HTML code '$' no-confirmation-message'' cannot be parsed correct.
HTML code '$'$VARS_uninstall_confirmation_message'' cannot be parsed correct.
HTML code '$'esc_js(sprintf(fs_text_inline("If you have a moment, please let us know why you are %s", "deactivation-share-reason", $slug), $fs->is_plugin()fs_text_inline("deactivating", "deactivating", $slug)fs_text_inline("switching", "switching", $slug)))'' cannot be parsed correct.
HTML code '$'sprintf("<label class="anonymous-feedback-label"><input type="checkbox" class="anonymous-feedback-checkbox"> %s</label>", fs_esc_html_inline("Anonymous feedback", "anonymous-feedback", $slug))'' cannot be parsed correct.
HTML code '$'truefalse'' cannot be parsed correct.
HTML code '$'truefalse'' cannot be parsed correct.
HTML code '$'$fs->get_id()'' cannot be parsed correct.
HTML code '$'truefalse'' cannot be parsed correct.
HTML code '$'$fs->get_action_tag("subscription_cancellation_action")'' cannot be parsed correct.
HTML code '$'fs_strip_url_protocol(get_site_url())'' cannot be parsed correct.
HTML code '$'readonly'' cannot be parsed correct.
HTML code '$'sprintf(fs_text_inline("Enter the domain of your website or other websites from where you plan to promote the %s.", "domain-field-desc", $slug), $module_type)'' cannot be parsed correct.
HTML code '$'style="display: none"'' cannot be parsed correct.
HTML code '$'$extra_domain'' cannot be parsed correct.
HTML code '$'readonly'' cannot be parsed correct.
HTML code '$'false'' cannot be parsed correct.
HTML code '$'$fs->get_affiliate_application_data()_stats_description'' cannot be parsed correct.
HTML code '$'false'' cannot be parsed correct.
HTML code '$'$fs->get_affiliate_application_data()_promotion_method_description'' cannot be parsed correct.
HTML code '$'sprintf(fs_text_inline("Please provide details on how you intend to promote %s (please be as specific as possible).", "promotion-method-desc-field-desc", $slug), $plugin_title)'' cannot be parsed correct.
HTML code '$'https://freemius.com/plugin/$fs->get_id()/$fs->get_slug()/legal/affiliate-program/'' cannot be parsed correct.
HTML code '$'fs_text_inline("Apply to become an affiliate", "apply-to-become-an-affiliate", $slug)'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_action("submit_affiliate_application")'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_security("submit_affiliate_application")'' cannot be parsed correct.
HTML code '$'$fs->get_id()'' cannot be parsed correct.
HTML code '$'esc_js($apply_to_become_affiliate_text)'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_action("cancel_subscription_or_trial")'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_security("cancel_subscription_or_trial")'' cannot be parsed correct.
HTML code '$'$fs->get_id()'' cannot be parsed correct.
HTML code '$'esc_js(sprintf(fs_text_inline("Cancelling %s...", "cancelling-x", $slug), $subscription_cancellation_context))'' cannot be parsed correct.
HTML code '$'json_encode(sprintf(fs_text_inline("Cancel %s & Proceed", "cancel-x-and-proceed", $slug), ucfirst($subscription_cancellation_context)))'' cannot be parsed correct.
HTML code '$'$fs->get_id()'' cannot be parsed correct.
HTML code '$'$fs->get_premium_slug()'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_action("delete_theme_update_data")'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_security("delete_theme_update_data")'' cannot be parsed correct.
HTML code '$'$fs->get_id()'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_action("submit_uninstall_reason")'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_security("submit_uninstall_reason")'' cannot be parsed correct.
HTML code '$'$fs->get_id()'' cannot be parsed correct.
HTML code '$'esc_js(sprintf(fs_text_inline("Submit & %s", "deactivation-modal-button-submit", $slug), $fs->is_plugin()$deactivate_textsprintf($activate_x_text, $theme_text)))'' cannot be parsed correct.
HTML code '$'esc_js(fs_text_inline("Kindly tell us the reason so we can improve.", "ask-for-reason-message", $slug))'' cannot be parsed correct.
HTML code '$'json_encode(sprintf(fs_text_inline("Yes - %s", "deactivation-modal-button-confirm", $slug), $fs->is_plugin()$deactivate_textsprintf($activate_x_text, $theme_text)))'' cannot be parsed correct.
HTML code '$'json_encode(sprintf(fs_text_inline("Skip & %s", "skip-and-x", $slug), $fs->is_plugin()$deactivate_textsprintf($activate_x_text, $theme_text)))'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_action("activate_license")'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_security("activate_license")'' cannot be parsed correct.
HTML code '$'$fs->get_id()'' cannot be parsed correct.
HTML code '$'json_encode($activate_button_text)'' cannot be parsed correct.
HTML code '$'sprintf(fs_text_inline("You might have missed it, but you don\\'t have to share any data and can just %s the opt-in.", "dont-have-to-share-any-data", $slug), "<a href=\\'"$skip_url"\\'>"$skip_text"</a>") <a href=\'fs_nonce_url($fs->_get_admin_page_url("", ["fs_action" => $fs->get_unique_affix() . "_skip_activation"]), $fs->get_unique_affix() . "_skip_activation")\' class=\'button button-small button-secondary\'>fs_text_inline("Click here to use the plugin anonymously", "click-here-to-use-plugin-anonymously", $slug)</a>'' cannot be parsed correct.
HTML code '$'json_encode($modal_content_html)'' cannot be parsed correct.
HTML code '$'esc_js($opt_out_text)'' cannot be parsed correct.
HTML code '$'button-primary warnbutton-secondary'' cannot be parsed correct.
HTML code '$'esc_js($opt_out_text)'' cannot be parsed correct.
HTML code '$'button-secondarybutton-primary'' cannot be parsed correct.
HTML code '$'esc_js($primary_cta_label)'' cannot be parsed correct.
HTML code '$'json_encode($admin_notice_html)'' cannot be parsed correct.
HTML code '$'freemius($VARS["id"])'' cannot be parsed correct.
HTML code '$'$fs->get_slug()'' cannot be parsed correct.
HTML code '$'$fs->get_id()'' cannot be parsed correct.
HTML code '$'json_encode($opt_out_text)'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_action("stop_tracking")'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_action("allow_tracking")'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_security("stop_tracking")'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_security("allow_tracking")'' cannot be parsed correct.
HTML code '$'$fs->current_page_url()'' cannot be parsed correct.
HTML code '$'esc_js($opt_out_text)'' cannot be parsed correct.
HTML code '$'esc_js($opt_in_text)'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_action("update_tracking_permission")'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_security("update_tracking_permission")'' cannot be parsed correct.
HTML code '$'$fs->current_page_url()'' cannot be parsed correct.
HTML code '$'esc_js(fs_text_inline("Saved", "saved", $slug))'' cannot be parsed correct.
HTML code '$'esc_js($opt_out_text)'' cannot be parsed correct.
HTML code '$'esc_js($opt_in_text)'' cannot be parsed correct.
HTML code '$'esc_js($reconnect_url)'' cannot be parsed correct.
HTML code '$'json_encode($modal_content_html)'' cannot be parsed correct.
HTML code '$'$fs->get_unique_affix()'' cannot be parsed correct.
HTML code '$'esc_js($header_title)'' cannot be parsed correct.
HTML code '$'esc_js(fs_text_x_inline("Dismiss", "as close a window", "dismiss", $slug))'' cannot be parsed correct.
HTML code '$'esc_js($activate_button_text)'' cannot be parsed correct.
HTML code '$'truefalse'' cannot be parsed correct.
HTML code '$'truefalse'' cannot be parsed correct.
HTML code '$'$fs->get_unique_affix()'' cannot be parsed correct.
HTML code '$'count($sites_details)'' cannot be parsed correct.
HTML code '$'json_encode($activate_button_text)'' cannot be parsed correct.
HTML code '$'$fs->get_user()_idnull'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_action("fetch_is_marketing_required_flag_value")'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_security("fetch_is_marketing_required_flag_value")'' cannot be parsed correct.
HTML code '$'$fs->get_id()'' cannot be parsed correct.
HTML code '$'$fs->get_unique_affix()'' cannot be parsed correct.
HTML code '$'$fs->get_unique_affix()'' cannot be parsed correct.
HTML code '$'$fs->pricing_url()'' cannot be parsed correct.
HTML code '$'esc_js($renew_license_button_text)'' cannot be parsed correct.
HTML code '$'truefalse'' cannot be parsed correct.
HTML code '$'json_encode($modal_content_html)'' cannot be parsed correct.
HTML code '$'esc_js($header_title)'' cannot be parsed correct.
HTML code '$'esc_js(fs_text_x_inline("Dismiss", "close a window", "dismiss", $slug))'' cannot be parsed correct.
HTML code '$'json_encode($prices_increase_text)'' cannot be parsed correct.
HTML code '$'json_encode($fs->get_action_tag("subscription_cancellation_action"))'' cannot be parsed correct.
HTML code '$'json_encode($subscription_cancellation_confirmation_message)'' cannot be parsed correct.
HTML code '$'json_encode(sprintf(fs_text_inline("Cancel %s & Proceed", "cancel-x-and-proceed", $slug), ucfirst($subscription_cancellation_context)))'' cannot be parsed correct.
HTML code '$'fs_json_encode_echo_inline("Proceed", "proceed", $slug)'' cannot be parsed correct.
HTML code '$'json_encode($modal_content_html)'' cannot be parsed correct.
HTML code '$'esc_js(fs_text_x_inline("Start free trial", "call to action", "start-free-trial", $slug))'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_action("start_trial")'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_security("start_trial")'' cannot be parsed correct.
HTML code '$'$fs->get_id()'' cannot be parsed correct.
HTML code '$'$fs->get_plugin_basename()'' cannot be parsed correct.
HTML code '$'json_encode($plugin_data["Name"])'' cannot be parsed correct.
HTML code '$'json_encode($purchase_url)'' cannot be parsed correct.
HTML code '$'json_encode($VARS["new_version"])'' cannot be parsed correct.
HTML code '$'json_encode($modal_content_html)'' cannot be parsed correct.
HTML code '$'fs-freemiumfs-premium'' cannot be parsed correct.
HTML code '$'esc_js($send_button_text)'' cannot be parsed correct.
HTML code '$'esc_js(fs_text_x_inline("Dismiss", "as close a window", "dismiss", $slug))'' cannot be parsed correct.
HTML code '$'json_encode($is_freemium)'' cannot be parsed correct.
HTML code '$'json_encode($email)'' cannot be parsed correct.
HTML code '$'$fs->get_id()'' cannot be parsed correct.
HTML code '$'$fs->get_unique_affix()'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_action("resend_license_key")'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_security("resend_license_key")'' cannot be parsed correct.
HTML code '$'json_encode($send_button_text)'' cannot be parsed correct.
HTML code '$'json_encode($modal_content_html)'' cannot be parsed correct.
HTML code '$'$fs->get_unique_affix()'' cannot be parsed correct.
HTML code '$'esc_js($header_title)'' cannot be parsed correct.
HTML code '$'esc_js(fs_text_x_inline("Dismiss", "close window", "dismiss", $slug))'' cannot be parsed correct.
HTML code '$'esc_js($user_change_button_text)'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_action("change_user")'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_security("change_user")'' cannot be parsed correct.
HTML code '$'$fs->get_id()'' cannot be parsed correct.
HTML code '$'json_encode($user_change_button_text)'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_action("gdpr_optin_action")'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_security("gdpr_optin_action")'' cannot be parsed correct.
HTML code '$'$fs->get_id()'' cannot be parsed correct.
HTML code '$'$VARS_license_id'' cannot be parsed correct.
HTML code '$'$fs->get_slug()'' cannot be parsed correct.
HTML code '$'$fs->get_slug()'' cannot be parsed correct.
HTML code '$'json_encode($fs->get_text_inline("Premium", "premium"))'' cannot be parsed correct.
HTML code '$'json_encode($fs->get_text_inline("Beta", "beta"))'' cannot be parsed correct.
HTML code '$'$fs->get_id()'' cannot be parsed correct.
HTML code '$'sprintf(fs_text_inline("Cancel %s?", "cancel-x", $slug), ucfirst($subscription_cancellation_context))'' cannot be parsed correct.
HTML code '$'json_encode($subscription_cancellation_html)'' cannot be parsed correct.
HTML code '$'<td>|</td>'' cannot be parsed correct.
HTML code '$'strtolower(fs_esc_html_inline("skip", "skip", $slug))'' cannot be parsed correct.
HTML code '$' data-license-id=$site_license_id'' cannot be parsed correct.
HTML code '$'$site_blog_id'' cannot be parsed correct.
HTML code '$'str_replace("http://", "", str_replace("https://", "", $site["url"]))'' cannot be parsed correct.
HTML code '$'$prop'' cannot be parsed correct.
HTML code '$'$site_$prop'' cannot be parsed correct.
HTML code '$'$VARS_require_license_key'' cannot be parsed correct.
HTML code '$'<td>|</td>'' cannot be parsed correct.
HTML code '$'oddeven'' cannot be parsed correct.
HTML code '$'ucfirst($data["feature"]->title)'' cannot be parsed correct.
HTML code '$'$data_plans_$plan_value'' cannot be parsed correct.
HTML code '$'https:$url'' cannot be parsed correct.
HTML code '$'sprintf(fs_text_inline("Click to view full-size screenshot %d", "view-full-size-x", $plugin->slug), $i)'' cannot be parsed correct.
HTML code '$'https:$url'' cannot be parsed correct.
HTML code '$'WP_FS__ADDRESS'' cannot be parsed correct.
HTML code '$'http_build_query($VARS)'' cannot be parsed correct.
HTML code '$'<td>|</td>'' cannot be parsed correct.
HTML code '$'<td>|</td>'' cannot be parsed correct.
HTML code '$'strtolower(fs_esc_html_inline("skip", "skip", $slug))'' cannot be parsed correct.
HTML code '$'$fs->get_local_icon_url()'' cannot be parsed correct.
HTML code '$'$VARS_selling_point_0'' cannot be parsed correct.
HTML code '$'wp_kses($plugin->info->description, ["a" => ["href" => [], "title" => [], "target" => []], "b" => [], "i" => [], "p" => [], "blockquote" => [], "h2" => [], "h3" => [], "ul" => [], "ol" => [], "li" => []])'' cannot be parsed correct.
HTML code '$'oddeven'' cannot be parsed correct.
HTML code '$'.fs-screenshot-0'' cannot be parsed correct.
HTML code '$'https:$url'' cannot be parsed correct.
HTML code '$'https:$url'' cannot be parsed correct.
HTML code '$'sprintf(fs_text_inline("Click to view full-size screenshot %d", "view-full-size-x", $plugin->slug), $i)'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'trailingslashit(dirname($pricing_js_url))'' cannot be parsed correct.
HTML code '$'WP_FS__ADDRESS'' cannot be parsed correct.
HTML code '$'http_build_query($query_params)'' cannot be parsed correct.
HTML code '$'$VARS_message'' cannot be parsed correct.
HTML code '$'sprintf($fs->get_text_inline("Secure HTTPS %s page, running from an external domain", "secure-x-page-header"), $VARS["page"]) - sprintf("<a class="fs-security-proof" href="%s" target="_blank" rel="noopener">%s</a>", "https://www.mcafeesecure.com/verify?host=" . WP_FS__ROOT_DOMAIN_PRODUCTION, "Freemius Inc. [US]")'' cannot be parsed correct.
HTML code '$'$plan'' cannot be parsed correct.
HTML code '$'$$pricing / fs_esc_html_x_inline("year", "as annual period", "year", $plugin->slug)'' cannot be parsed correct.
HTML code '$'$$pricing / fs_esc_html_x_inline("mo", "as monthly period", "mo", $plugin->slug)'' cannot be parsed correct.
HTML code '$'$$pricing'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_action("store_tabs")'' cannot be parsed correct.
HTML code '$'$fs->get_ajax_security("store_tabs")'' cannot be parsed correct.
HTML code '$'$fs->get_id()'' cannot be parsed correct.
HTML code '$'$fs->get_unique_affix()'' cannot be parsed correct.
HTML code '$'json_encode($tab["label"])'' cannot be parsed correct.
HTML code '$'$fs->get_support_forum_url(){"label": "$item_menu_title", "href": "$fs->_get_admin_page_url($item[\"menu_slug\"])", "slug": "$item_menu_slug"}_href'' cannot be parsed correct.
HTML code '$'{"label": "$item_menu_title", "href": "$fs->_get_admin_page_url($item[\"menu_slug\"])", "slug": "$item_menu_slug"}_slug'' cannot be parsed correct.
HTML code '$'esc_js($fs->main_menu_url())'' cannot be parsed correct.
HTML code '$'$nonce'' cannot be parsed correct.
HTML code '$'json_encode($conditions)'' cannot be parsed correct.
HTML code '$'$label'' cannot be parsed correct.
HTML code '$'$this->get_content()'' cannot be parsed correct.
HTML code '$'<a href="mailto$membership->user()->get_attribute($column_name)"$membership->user()->get_attribute($column_name)</a>'' cannot be parsed correct.
HTML code '$'<strong>$membership->user()->get_attribute("user_login")</strong>$this->row_actions($actions)'' cannot be parsed correct.
HTML code '$'$status'' cannot be parsed correct.
HTML code '$'<abbr title=date_i18n("Y-m-d H:i:s T", $time)"$m_time</abbr>'' cannot be parsed correct.
HTML code '$'Lifetime'' cannot be parsed correct.
HTML code '$'<abbr title=date_i18n("Y-m-d H:i:s T", $expiry)"sprintf(__("%s from now", "restrict-user-access"), human_time_diff($expiry))</abbr>'' cannot be parsed correct.
HTML code '$'$which'' cannot be parsed correct.
HTML code '$'$which'' cannot be parsed correct.
HTML code '$'</tr><tr>'' cannot be parsed correct.
HTML code '$'<th scope="col" class=\'implode(" ", $class)\'>Select All</th>'' cannot be parsed correct.
HTML code '$'<div data-no=0" class="rua-member-trigger">'' cannot be parsed correct.
HTML code '$'$automator->get_description() '' cannot be parsed correct.
HTML code '$'<input type="hidden" name="member_automations[0][name]" value="$automatorData_name" /'' cannot be parsed correct.
HTML code '$'<input type="hidden" name="member_automations[0][value]" value="$automatorData_value" /'' cannot be parsed correct.
HTML code '$'<span class="rua-member-trigger-value">$automator->get_content()_$automatorData_value</span>'' cannot be parsed correct.
HTML code '$'<optgroup label={"trigger": "Triggers", "trait": "Visitor Traits"}_$type"'' cannot be parsed correct.
HTML code '$'<option data-sentence=$automator->get_description()" data-content=json_encode($automator->get_content())\' value=$automator->get_name()"$automator->get_title()</option>'' cannot be parsed correct.
HTML code '$'wp_dropdown_pages(["post_type" => $post->post_type, "exclude_tree" => $post->ID, "selected" => $post->post_parent, "name" => "parent_id", "show_option_none" => __("Do not extend", "restrict-user-access"), "sort_column" => "menu_order, post_title", "echo" => 0, "class" => "rua-input-md"])'' cannot be parsed correct.
HTML code '$'<div><select name="page" class="js-rua-page" data-tags="1" data-rua-url="get_site_url()"'' cannot be parsed correct.
HTML code '$'<option value=get_post($action_page)_ID" selected="selected">get_post($action_page)_post_title</option>'' cannot be parsed correct.
HTML code '$'<option value=$metadata->get("page")->get_data($post->ID)" selected="selected">$metadata->get("page")->get_data($post->ID)</option>'' cannot be parsed correct.
HTML code '$'$duration->get_title()'' cannot be parsed correct.
HTML code '$'<input type="number" min="0" name="duration[count]" value="$duration->get_data($post->ID)" class="rua-input-sm" style="vertical-align:top;" />'' cannot be parsed correct.
HTML code '$'<select name=$duration->get_id()[unit]"
'' cannot be parsed correct.
HTML code '$'<option value=$keyselected($duration_val, $key, false)>$value</option>
'' cannot be parsed correct.
HTML code '$'</select>
'' cannot be parsed correct.
HTML code '$'$post'' cannot be parsed correct.
HTML code '$'$rua_fs->contact_url("feature_request")'' cannot be parsed correct.
HTML code '$'$rua_fs->addon_url("")'' cannot be parsed correct.
HTML code '$'$freemius->get_local_icon_url()'' cannot be parsed correct.
HTML code '$'<div style="overflow: hidden; padding: 2px 0px;">'' cannot be parsed correct.
HTML code '$'<div style="line-height:24px;">'' cannot be parsed correct.
HTML code '$'<span style="color:rgb(172, 23, 10);">â¤</span> '' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'<li class="js-rua-drip-option">'' cannot be parsed correct.
HTML code '$'</div></label>'' cannot be parsed correct.
HTML code '$'</li>'' cannot be parsed correct.
HTML code '$'<div class="cae-toggle-bar"></div>'' cannot be parsed correct.
HTML code '$'</label>'' cannot be parsed correct.
HTML code '$'<div class="wrap">'' cannot be parsed correct.
HTML code '$'<h1>'' cannot be parsed correct.
HTML code '$'</h1>'' cannot be parsed correct.
HTML code '$'<form name="post" action="admin.php?page=wprua-level" method="post" id="post">'' cannot be parsed correct.
HTML code '$'<input type="hidden" id="_rua_section" name="_rua_section" value="" />'' cannot be parsed correct.
HTML code '$'<input type="hidden" id="hiddenaction" name="action" value="editpost" />'' cannot be parsed correct.
HTML code '$'<div id="poststuff">'' cannot be parsed correct.
HTML code '$'<div id="post-body" class="metabox-holder rua-metabox-holder columns-2">'' cannot be parsed correct.
HTML code '$'<div id="post-body-content">'' cannot be parsed correct.
HTML code '$'<div id="titlediv">'' cannot be parsed correct.
HTML code '$'<div id="titlewrap">'' cannot be parsed correct.
HTML code '$'</div></div>'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'<br class="clear" />'' cannot be parsed correct.
HTML code '$'</div></form></div>'' cannot be parsed correct.
HTML code '$'<h2 class="nav-tab-wrapper js-rua-tabs hide-if-no-js " style="padding-bottom:0;">'' cannot be parsed correct.
HTML code '$'</h2>'' cannot be parsed correct.
HTML code '$'<div id="postbox-container-1" class="postbox-container">'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'<div id="postbox-container-2" class="postbox-container">'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'<div class="alignleft actions">'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'>'' cannot be parsed correct.
HTML code '$'</td>'' cannot be parsed correct.
HTML code '$'<b>'' cannot be parsed correct.
HTML code '$'</b>
'' cannot be parsed correct.
HTML code '$'</form></div>'' cannot be parsed correct.
HTML code '$'</tr>'' cannot be parsed correct.
HTML code '$'<div class="wrap">'' cannot be parsed correct.
HTML code '$'<h1>'' cannot be parsed correct.
HTML code '$'</h1>'' cannot be parsed correct.
HTML code '$'<form id="posts-filter" method="get">'' cannot be parsed correct.
HTML code '$'<input type="hidden" name="page" value="wprua" />'' cannot be parsed correct.
HTML code '$'</select>'' cannot be parsed correct.
HTML code '$'\' ) > 0 )
                        ) {
                            if (
                                \'string\' === typeof settings.data &&
                                settings.data.indexOf( \'action=heartbeat\' ) > 0
                            ) {
                                return;
                            }

                            if (settings.url.indexOf(\'?\') > 0) {
                                settings.url += \'&\';
                            } else {
                                settings.url += \'?\';
                            }

                            settings.url += \''' cannot be parsed correct.
HTML code '$'=true\';
                        }
                    });
                })(jQuery);
            </script>
            '' cannot be parsed correct.
HTML code '$';
                for ( var slug in slugBasenameMap ) {
                    var basename = slugBasenameMap[ slug ];

                    // Try to get the plugin rows if on the "Plugins" page.
                    var $pluginRows = $( \'.wp-list-table.plugins tr[data-plugin="\' + basename + \'"]\');

                    if ( 0 === $pluginRows.length ) {
                        // Try to get the plugin rows if on the "Updates" page.
                        var $pluginCheckbox = $( \'#update-plugins-table input[type="checkbox"][value="\' + basename + \'"]\' );
                        if ( 0 !== $pluginCheckbox.length ) {
                            $pluginRows = $pluginCheckbox.parents( \'tr:first\' );
                        }
                    }

                    if ( 0 === $pluginRows.length ) {
                        // No plugin rows found.
                        continue;
                    }

                    // Find the "View details" links and add the `fs_allow_updater_and_dialog` param to the URL.
                    $pluginRows.find( \'a[href*="plugin-install.php?tab=plugin-information"]\' ).each(function() {
                        var $this = $( this ),
                            href  = $this.attr( \'href\' ).replace( \'?tab=\', \'?fs_allow_updater_and_dialog=true&tab=\');

                        $this.attr( \'href\', href );
                    });
                }
            })( jQuery );
            </script>
            '' cannot be parsed correct.
HTML code '$';

                    for ( var pluginBasename in betaData ) {
                        if ( ! betaData.hasOwnProperty( pluginBasename ) ) {
                            continue;
                        }

                        if ( ! betaData[ pluginBasename ].is_installed_version_beta ) {
                            continue;
                        }

                        var $parentContainer = $( \'.wp-list-table.plugins tr[data-plugin="\' + pluginBasename + \'"]\' );
                        if ( 0 === $parentContainer.length ) {
                            continue;
                        }

                        $parentContainer.find( \'.plugin-title > strong:first-child\').append(
                            \'<span class="fs-tag fs-info">'' cannot be parsed correct.
HTML code '$'</span>\'
                        );
                    }

                    setTimeout( function() {
                        // Wait a little bit before adding the event handler, otherwise, it will be overridden by the core WP logic.
                        $( \'.plugins .update-message .update-link, .themes .theme .update-message\' ).on( \'click\', function() {
                            var $parentContainer = $( this ).parents( \'tr:first\' );
                            pluginBasename   = ( 0 !== $parentContainer.length ) ?
                                $parentContainer.data( \'plugin\' ) :
                                $( this ).parents( \'.theme:first\' ).data( \'slug\' );

                            if (
                                betaData[ pluginBasename ] &&
                                betaData[ pluginBasename ].beta_version_update_confirmation_message &&
                                ! confirm( betaData[ pluginBasename ].beta_version_update_confirmation_message )
                            ) {
                                return false;
                            }
                        } );
                    }, 20 );
                } )( jQuery );
            </script>
            '' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$';

                        if (element.length > 0) {
                            var optin = $(element).pointer($.extend(true, {}, {
                                content     : '' cannot be parsed correct.
HTML code '$',
                                position    : {
                                    edge : \'left\',
                                    align: \'center\'
                                },
                                buttons     : function () {
                                    // Don\'t show pointer buttons.
                                    return \'\';
                                },
                                pointerWidth: 482
                            }, '' cannot be parsed correct.
HTML code '$'));

                            '' cannot be parsed correct.
HTML code '$'                        }
                    }
                });
                // ]]></script>
            '' cannot be parsed correct.
HTML code '$'<style>#wpfooter { display: none !important; }</style>'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'				<br>
				'' cannot be parsed correct.
HTML code '$'				<br>
				'' cannot be parsed correct.
HTML code '$'				<br>
				'' cannot be parsed correct.
HTML code '$'			</div>
		'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</a>'' cannot be parsed correct.
HTML code '$'                    <div class="button button-primary fs-dropdown-arrow-button">
                        <span class="fs-dropdown-arrow"></span>
                        <ul class="fs-dropdown-list" style="display: none">
                            '' cannot be parsed correct.
HTML code '$'</li>
                            '' cannot be parsed correct.
HTML code '$'                        </ul>
                    </div>
                </div>
            </div>
            '' cannot be parsed correct.
HTML code '$'<div id="plugin-information-scrollable">'' cannot be parsed correct.
HTML code '$'</div>
'' cannot be parsed correct.
HTML code '$'                            '' cannot be parsed correct.
HTML code '$'                            <div class="fs-pla'' cannot be parsed correct.
HTML code '$' fs-single-cycle'' cannot be parsed correct.
HTML code '$'">
                                <h3 data-plan="'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</h3>
                                '' cannot be parsed correct.
HTML code '$'                                '' cannot be parsed correct.
HTML code '$'                                <div class="nav-tab-wrapper">
                                    '' cannot be parsed correct.
HTML code '$'                                                            &#9733;</label>
                                                    '' cannot be parsed correct.
HTML code '$'                                                    '' cannot be parsed correct.
HTML code '$'                                            '' cannot be parsed correct.
HTML code '$'                                    '' cannot be parsed correct.
HTML code '$'                                    <script type="text/javascript">
                                        (function ($, undef) {
                                            var
                                                _formatBillingFrequency = function (cycle) {
                                                    switch (cycle) {
                                                        case \'monthly\':
                                                            return \''' cannot be parsed correct.
HTML code '$'\';
                                                        case \'annual\':
                                                            return \''' cannot be parsed correct.
HTML code '$'\';
                                                        case \'lifetime\':
                                                            return \''' cannot be parsed correct.
HTML code '$'\';
                                                    }
                                                },
                                                _formatLicensesTitle    = function (pricing) {
                                                    switch (pricing.licenses) {
                                                        case 1:
                                                            return \''' cannot be parsed correct.
HTML code '$'\';
                                                        case null:
                                                            return \''' cannot be parsed correct.
HTML code '$'\';
                                                        default:
                                                            return \''' cannot be parsed correct.
HTML code '$'\'.replace(\'%s\', pricing.licenses);
                                                    }
                                                },
                                                _formatPrice            = function (pricing, cycle, multipleLicenses) {
                                                    if (undef === multipleLicenses)
                                                        multipleLicenses = true;

                                                    var priceCycle;
                                                    switch (cycle) {
                                                        case \'monthly\':
                                                            priceCycle = \' / '' cannot be parsed correct.
HTML code '$'\';
                                                            break;
                                                        case \'lifetime\':
                                                            priceCycle = \'\';
                                                            break;
                                                        case \'annual\':
                                                        default:
                                                            priceCycle = \' / '' cannot be parsed correct.
HTML code '$'\';
                                                            break;
                                                    }

                                                    if (!multipleLicenses && 1 == pricing.licenses) {
                                                        return \'$\' + pricing.price + priceCycle;
                                                    }

                                                    return _formatLicensesTitle(pricing) + \' - <var class="fs-price">$\' + pricing.price + priceCycle + \'</var>\';
                                                },
                                                _checkoutUrl            = function (plan, pricing, cycle) {
                                                    return \''' cannot be parsed correct.
HTML code '$'                                    '' cannot be parsed correct.
HTML code '$'                                                '' cannot be parsed correct.
HTML code '$'"
                                                   data-pricing="'' cannot be parsed correct.
HTML code '$'">
                                                   '' cannot be parsed correct.
HTML code '$')
                    </small>
                    '' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</a></span>
                                <span class="counter-back">
                                <span class="counter-bar" style="width: '' cannot be parsed correct.
HTML code '$'                                &#187;</a>
                        '' cannot be parsed correct.
HTML code '$'	</div>
'' cannot be parsed correct.
HTML code '$'</div>
'' cannot be parsed correct.
HTML code '$'</div>
'' cannot be parsed correct.
HTML code '$'</div>
'' cannot be parsed correct.
HTML code '$'</div>
'' cannot be parsed correct.
HTML code '$'\' +
                                                        \'&plan_id=\' + plan +
                                                        \'&pricing_id=\' + pricing +
                                                        \'&billing_cycle=\' + cycle'' cannot be parsed correct.
HTML code '$' + \'&trial=true\''' cannot be parsed correct.
HTML code '$']\');
                                                $plan.find(\'input[type=radio]\').on(\'click\', function () {
                                                    _updateCtaUrl(
                                                        $plan.attr(\'data-plan-id\'),
                                                        $(this).val(),
                                                        $plan.find(\'.nav-tab-active\').attr(\'data-billing-cycle\')
                                                    );

                                                    $plan.find(\'.fs-trial-terms .fs-price\').html(
                                                        $(this).parents(\'label\').find(\'.fs-price\').html()
                                                    );
                                                });

                                                $plan.find(\'.nav-tab\').click(function () {
                                                    if ($(this).hasClass(\'nav-tab-active\'))
                                                        return;

                                                    var $this        = $(this),
                                                        billingCycle = $this.attr(\'data-billing-cycle\'),
                                                        pricing      = JSON.parse($this.attr(\'data-pricing\')),
                                                        $pricesList  = $this.parents(\'.fs-plan\').find(\'.fs-pricing-body .fs-licenses\'),
                                                        html         = \'\';

                                                    // Un-select previously selected tab.
                                                    $plan.find(\'.nav-tab\').removeClass(\'nav-tab-active\');

                                                    // Select current tab.
                                                    $this.addClass(\'nav-tab-active\');

                                                    // Render licenses prices.
                                                    if (1 == pricing.length) {
                                                        html = \'<li><label>'' cannot be parsed correct.
HTML code '$': \' + _formatPrice(pricing[0], billingCycle, false) + \'</label></li>\';
                                                    } else {
                                                        for (var i = 0; i < pricing.length; i++) {
                                                            html += \'<li><label><input name="pricing'' cannot be parsed correct.
HTML code '$'" type="radio" value="\' + pricing[i].id + \'">\' + _formatPrice(pricing[i], billingCycle) + \'</label></li>\';
                                                        }
                                                    }
                                                    $pricesList.html(html);

                                                    if (1 < pricing.length) {
                                                        // Select first license option.
                                                        $pricesList.find(\'li:first input\').click();
                                                    }
                                                    else {
                                                        _updateCtaUrl(
                                                            $plan.attr(\'data-plan-id\'),
                                                            pricing[0].id,
                                                            billingCycle
                                                        );
                                                    }

                                                    // Update billing frequency.
                                                    $plan.find(\'.fs-billing-frequency\').html(_formatBillingFrequency(billingCycle));

                                                    if (\'annual\' === billingCycle) {
                                                        $plan.find(\'.fs-annual-discount\').show();
                                                    } else {
                                                        $plan.find(\'.fs-annual-discount\').hide();
                                                    }
                                                });

                                                '' cannot be parsed correct.
HTML code '$'                                            });
                                        }(jQuery));
                                    </script>
                                </div>
                                <div class="fs-pricing-body">
                                    <span class="fs-billing-frequency"></span>
                                    '' cannot be parsed correct.
HTML code '$'                                    '' cannot be parsed correct.
HTML code '$'</span>
                                    '' cannot be parsed correct.
HTML code '$'                                    <ul class="fs-licenses">
                                    </ul>
                                    '' cannot be parsed correct.
HTML code '$'                                    <div style="clear:both"></div>
                                    '' cannot be parsed correct.
HTML code '$'                                        <ul class="fs-trial-terms">
                                            <li>
                                                <i class="dashicons dashicons-yes"></i>'' cannot be parsed correct.
HTML code '$'                                            </li>
                                            <li>
                                                <i class="dashicons dashicons-yes"></i>'' cannot be parsed correct.
HTML code '$'                                            </li>
                                        </ul>
                                    '' cannot be parsed correct.
HTML code '$'                                </div>
                            </div>
                            </div>
                        '' cannot be parsed correct.
HTML code '$'                    '' cannot be parsed correct.
HTML code '$'                '' cannot be parsed correct.
HTML code '$'                <div>
                    <h3>'' cannot be parsed correct.
HTML code '$'</h3>
                    <ul>
                        '' cannot be parsed correct.
HTML code '$'			</span></li>
                                '' cannot be parsed correct.
HTML code '$'                                        :</strong> '' cannot be parsed correct.
HTML code '$'                                </li>
                                '' cannot be parsed correct.
HTML code '$'                                        :</strong> '' cannot be parsed correct.
HTML code '$'                                        &#187;</a>
                                </li>
                                '' cannot be parsed correct.
HTML code '$'                                        &#187;</a>
                                </li>
                                '' cannot be parsed correct.
HTML code '$'                                        &#187;</a>
                                </li>
                            '' cannot be parsed correct.
HTML code '$'</h3>
		<table id="fs_billing_address"'' cannot be parsed correct.
HTML code '$' class="fs-read-mode"'' cannot be parsed correct.
HTML code '$':</span> <input id="business_name" value="'' cannot be parsed correct.
HTML code '$'" placeholder="'' cannot be parsed correct.
HTML code '$'"></label></td>
				<td><label><span'' cannot be parsed correct.
HTML code '$':</span> <input id="tax_id" value="'' cannot be parsed correct.
HTML code '$'" placeholder="'' cannot be parsed correct.
HTML code '$'"></label></td>
			</tr>
			<tr>
				<td><label><span'' cannot be parsed correct.
HTML code '$':</span> <input id="address_street" value="'' cannot be parsed correct.
HTML code '$'" placeholder="'' cannot be parsed correct.
HTML code '$'"></label></td>
				<td><label><span'' cannot be parsed correct.
HTML code '$':</span> <input id="address_apt" value="'' cannot be parsed correct.
HTML code '$'" placeholder="'' cannot be parsed correct.
HTML code '$'"></label></td>
			</tr>
			<tr>
				<td><label><span'' cannot be parsed correct.
HTML code '$' / '' cannot be parsed correct.
HTML code '$':</span> <input id="address_city" value="'' cannot be parsed correct.
HTML code '$'" placeholder="'' cannot be parsed correct.
HTML code '$' / '' cannot be parsed correct.
HTML code '$'"></label></td>
				<td><label><span'' cannot be parsed correct.
HTML code '$':</span> <input id="address_zip" value="'' cannot be parsed correct.
HTML code '$'" placeholder="'' cannot be parsed correct.
HTML code '$'"></label></td>
			</tr>
			<tr>
			'' cannot be parsed correct.
HTML code '$'				<td><label><span>'' cannot be parsed correct.
HTML code '$':</span> <select id="address_country_code">
							'' cannot be parsed correct.
HTML code '$'</option>
							'' cannot be parsed correct.
HTML code '$'							'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'>'' cannot be parsed correct.
HTML code '$'</option>
							'' cannot be parsed correct.
HTML code '$'						</select></label></td>
				<td><label><span>'' cannot be parsed correct.
HTML code '$' / '' cannot be parsed correct.
HTML code '$':</span>
						<input id="address_state" value="'' cannot be parsed correct.
HTML code '$'" placeholder="'' cannot be parsed correct.
HTML code '$' / '' cannot be parsed correct.
HTML code '$'"></label></td>
			</tr>
			<tr>
				<td colspan="2">
					<button
						class="button">'' cannot be parsed correct.
HTML code '$'</button>
				</td>
			</tr>
		</table>
	</div>
</div>
<!--/ Billing -->
<script type="text/javascript">
	(function($){
		var $billingAddress = $(\'#fs_billing_address\'),
		    $billingInputs = $billingAddress.find(\'input, select\');

		var setPrevValues = function () {
			$billingInputs.each(function () {
				$(this).attr(\'data-val\', $(this).val());
			});
		};

		setPrevValues();

		var hasBillingChanged = function () {
			for (var i = 0, len = $billingInputs.length; i < len; i++){
				var $this = $($billingInputs[i]);
				if ($this.attr(\'data-val\') !== $this.val()) {
					return true;
				}
			}

			return false;
		};

		var isEditAllFieldsMode = false;

		$billingAddress.find(\'.button\').click(function(){
			$billingAddress.toggleClass(\'fs-read-mode\');

			var isEditMode = !$billingAddress.hasClass(\'fs-read-mode\');

			$(this)
				.html(isEditMode ? \''' cannot be parsed correct.
HTML code '$'\' : \''' cannot be parsed correct.
HTML code '$'\')
				.toggleClass(\'button-primary\');

			if (isEditMode) {
				$(\'#business_name\').focus().select();
				isEditAllFieldsMode = true;
			} else {
				isEditAllFieldsMode = false;

				if (!hasBillingChanged())
					return;

				var billing = {};

				$billingInputs.each(function(){
					if ($(this).attr(\'data-val\') !== $(this).val()) {
						billing[$(this).attr(\'id\')] = $(this).val();
					}
				});

				$.ajax({
					url    : ajaxurl,
					method : \'POST\',
					data   : {
						action   : \''' cannot be parsed correct.
HTML code '$'\',
						security : \''' cannot be parsed correct.
HTML code '$'\',
						module_id: \''' cannot be parsed correct.
HTML code '$'\',
						billing  : billing
					},
					success: function (resultObj) {
						if (resultObj.success) {
							setPrevValues();
						} else {
							alert(resultObj.error);
						}
					}
				});
			}
		});

		$billingInputs
		// Get into edit mode upon selection.
			.focus(function () {
				var isEditMode = !$billingAddress.hasClass(\'fs-read-mode\');

				if (isEditMode) {
					return;
				}

				$billingAddress.toggleClass(\'fs-read-mode\');
				$billingAddress.find(\'.button\')
					.html(\''' cannot be parsed correct.
HTML code '$'\')
					.toggleClass(\'button-primary\');
			})
			// If blured after editing only one field without changes, exit edit mode.
			.blur(function () {
				if (!isEditAllFieldsMode && !hasBillingChanged()) {
					$billingAddress.toggleClass(\'fs-read-mode\');
					$billingAddress.find(\'.button\')
						.html(\''' cannot be parsed correct.
HTML code '$'\')
						.toggleClass(\'button-primary\');
				}
			});
	})(jQuery);
</script>'' cannot be parsed correct.
HTML code '$'" method="POST">
    <input type="hidden" name="fs_action" value="'' cannot be parsed correct.
HTML code '$'">
   '' cannot be parsed correct.
HTML code '$'    <input type="hidden" name="install_id" value="'' cannot be parsed correct.
HTML code '$'">
    <input type="hidden" name="blog_id" value="'' cannot be parsed correct.
HTML code '$'">
    <input type="hidden" name="license_id" value="'' cannot be parsed correct.
HTML code '$'">
    <input type="submit" class="fs-activate-license button'' cannot be parsed correct.
HTML code '$'"
           value="'' cannot be parsed correct.
HTML code '$' ">
</form'' cannot be parsed correct.
HTML code '$'        </td>
        <!--/ Expiration -->

        '' cannot be parsed correct.
HTML code '$' class="alternate"'' cannot be parsed correct.
HTML code '$'    </td>
    '' cannot be parsed correct.
HTML code '$'</td>
        <!--/ ID -->

        <!-- Version -->
        <td>'' cannot be parsed correct.
HTML code '$'</td>
        <!--/ Version -->

        <!-- Plan Title -->
        <td>'' cannot be parsed correct.
HTML code '$'</td>
        <!--/ Plan Title -->

        <!-- Expiration -->
        <td>
        '' cannot be parsed correct.
HTML code '$'"
                   title="'' cannot be parsed correct.
HTML code '$'"
                   class="edit">'' cannot be parsed correct.
HTML code '$'</a>
                '' cannot be parsed correct.
HTML code '$'            '' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</a>
                '' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</a>
                '' cannot be parsed correct.
HTML code '$'            '' cannot be parsed correct.
HTML code '$'        </td>
        <!--/ Action -->
    '' cannot be parsed correct.
HTML code '$'    '' cannot be parsed correct.
HTML code '$'</tr>'' cannot be parsed correct.
HTML code '$'" method="POST">
    <input type="hidden" name="fs_action" value="'' cannot be parsed correct.
HTML code '$'">
   '' cannot be parsed correct.
HTML code '$'    <input type="hidden" name="install_id" value="'' cannot be parsed correct.
HTML code '$'">
    <input type="hidden" name="blog_id" value="'' cannot be parsed correct.
HTML code '$'">
    <button type="button" class="fs-deactivate-license button'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</button>
</form>'' cannot be parsed correct.
HTML code '$'>
        <!-- Install ID or Opt-in option -->
        <td>'' cannot be parsed correct.
HTML code '$'            '' cannot be parsed correct.
HTML code '$'                <form action='' cannot be parsed correct.
HTML code '$'" method="POST">
                    <input type="hidden" name="fs_action" value="'' cannot be parsed correct.
HTML code '$'">
                   '' cannot be parsed correct.
HTML code '$'                    <input type="hidden" name="blog_id" value="'' cannot be parsed correct.
HTML code '$'">
                    <button class="fs-opt-in button button-small">'' cannot be parsed correct.
HTML code '$'</button>
                </form>
            '' cannot be parsed correct.
HTML code '$'        </td>
        <!--/ Install ID or Opt-in option -->

        <!-- Site URL -->
        <td class="fs-field-url fs-main-column">'' cannot be parsed correct.
HTML code '$'</td>
        <!--/ Site URL -->

        <!-- License Activation / Deactivation -->
        <td>'' cannot be parsed correct.
HTML code '$'                '' cannot be parsed correct.
HTML code '$'</td>
        <!--/ Actions -->

    '' cannot be parsed correct.
HTML code '$'">
           '' cannot be parsed correct.
HTML code '$'                '' cannot be parsed correct.
HTML code '$'                <!-- Blog ID -->
                <tr '' cannot be parsed correct.
HTML code '$' class="alternate"'' cannot be parsed correct.
HTML code '$':</nobr>
                    </td>
                    <td><code>'' cannot be parsed correct.
HTML code '$'</code></td>
                    <td>'' cannot be parsed correct.
HTML code '$'                        <form action='' cannot be parsed correct.
HTML code '$'" method="POST">
                            <input type="hidden" name="fs_action" value="'' cannot be parsed correct.
HTML code '$'">
                           '' cannot be parsed correct.
HTML code '$'                            <input type="hidden" name="install_id" value="'' cannot be parsed correct.
HTML code '$'">
                            <input type="hidden" name="blog_id" value="'' cannot be parsed correct.
HTML code '$'">
                            <button class="fs-toggle-tracking button button-small'' cannot be parsed correct.
HTML code '$' button-primary'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</button>
                        </form>
                    <!--/ Toggle Usage Tracking -->
                    '' cannot be parsed correct.
HTML code '$'</td>
                </tr>
                '' cannot be parsed correct.
HTML code '$'                <!--/ Blog ID -->

                '' cannot be parsed correct.
HTML code '$'                    '' cannot be parsed correct.
HTML code '$' class="alternate"'' cannot be parsed correct.
HTML code '$':</nobr>
                            </td>
                            <td colspan="2"><code>'' cannot be parsed correct.
HTML code '$'</code></td>
                        </tr>
                        '' cannot be parsed correct.
HTML code '$'                        <!--/ User Name -->

                        <!-- User Email -->
                        <tr '' cannot be parsed correct.
HTML code '$' class="alternate"'' cannot be parsed correct.
HTML code '$':</nobr>
                            </td>
                            <td colspan="2"><code>'' cannot be parsed correct.
HTML code '$'</code></td>
                        </tr>
                        '' cannot be parsed correct.
HTML code '$'                        <!--/ User Email -->

                        <!-- User ID -->
                        <tr '' cannot be parsed correct.
HTML code '$' class="alternate"'' cannot be parsed correct.
HTML code '$':</nobr>
                            </td>
                            <td colspan="2"><code>'' cannot be parsed correct.
HTML code '$'</code></td>
                        </tr>
                        '' cannot be parsed correct.
HTML code '$'                        <!--/ User ID -->
                    '' cannot be parsed correct.
HTML code '$'                '' cannot be parsed correct.
HTML code '$'
                <!-- Public Key -->
                <tr '' cannot be parsed correct.
HTML code '$' class="alternate"'' cannot be parsed correct.
HTML code '$':</nobr>
                    </td>
                    <td colspan="2"><code>'' cannot be parsed correct.
HTML code '$'</code></td>
                </tr>
                '' cannot be parsed correct.
HTML code '$'                <!--/ Public Key -->

                <!-- Secret Key -->
                <tr '' cannot be parsed correct.
HTML code '$' class="alternate"'' cannot be parsed correct.
HTML code '$':</nobr>
                    </td>
                    <td>
                        <code>'' cannot be parsed correct.
HTML code '$'</code>
                        '' cannot be parsed correct.
HTML code '$'"
                               style="display: none" readonly/></td>
                        '' cannot be parsed correct.
HTML code '$'                    '' cannot be parsed correct.
HTML code '$'</button></td>
                    '' cannot be parsed correct.
HTML code '$'                </tr>
                '' cannot be parsed correct.
HTML code '$'</code>
            '' cannot be parsed correct.
HTML code '$'</td>
        <!--/ Plan -->

        <!-- More details button -->
        <td>'' cannot be parsed correct.
HTML code '$'</td>
        <!--/ More details button -->
    </tr>
'' cannot be parsed correct.
HTML code '$'" style="display: none">
        <td colspan="5">
            <table class="widefat fs-key-value-table">
                <tbody>
                '' cannot be parsed correct.
HTML code '$'">
                                        <button class="button button-small" onclick="if (confirm(\''' cannot be parsed correct.
HTML code '$'\')) { this.parentNode.submit(); } else { return false; }"'' cannot be parsed correct.
HTML code '$'</button>
                                    </form>
                                '' cannot be parsed correct.
HTML code '$'</td>
                            </tr>
                            '' cannot be parsed correct.
HTML code '$'                        '' cannot be parsed correct.
HTML code '$'                        <!--/ Subscription -->
                    '' cannot be parsed correct.
HTML code '$'                '' cannot be parsed correct.
HTML code '$'
                </tbody>
            </table>
        </td>
    </tr>
    <!--/ More details -->
'' cannot be parsed correct.
HTML code '$'</h3>

		<div class="inside">
			<table class="widefat">
				<thead>
				<tr>
					<th>'' cannot be parsed correct.
HTML code '$'</th>
					<th>'' cannot be parsed correct.
HTML code '$'</th>
					<th>'' cannot be parsed correct.
HTML code '$'</th>
					<th>'' cannot be parsed correct.
HTML code '$'</th>
				</tr>
				</thead>
				<tbody>
				'' cannot be parsed correct.
HTML code '$'				'' cannot be parsed correct.
HTML code '$'>
						<td>'' cannot be parsed correct.
HTML code '$'</td>
						<td>'' cannot be parsed correct.
HTML code '$'</td>
						<td>'' cannot be parsed correct.
HTML code '$'</td>
						<td>'' cannot be parsed correct.
HTML code '$'"
						       class="button button-small"
						       target="_blank" rel="noopener">'' cannot be parsed correct.
HTML code '$'</a>'' cannot be parsed correct.
HTML code '$'</td>
					</tr>
					'' cannot be parsed correct.
HTML code '$'                <!--/ Secret Key -->

                '' cannot be parsed correct.
HTML code '$' class="alternate"'' cannot be parsed correct.
HTML code '$':</nobr>
                        </td>
                        <td>
                            <code>'' cannot be parsed correct.
HTML code '$'</code>
                            '' cannot be parsed correct.
HTML code '$'"
                                   style="display: none" readonly/></td>
                            '' cannot be parsed correct.
HTML code '$'                        '' cannot be parsed correct.
HTML code '$'</button>
                            <button class="button button-small activate-license-trigger'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</button>
                        </td>
                        '' cannot be parsed correct.
HTML code '$'                    </tr>
                    '' cannot be parsed correct.
HTML code '$'                    <!--/ License Key -->

                    '' cannot be parsed correct.
HTML code '$'                        '' cannot be parsed correct.
HTML code '$' class="alternate"'' cannot be parsed correct.
HTML code '$':</nobr>
                                </td>
                                '' cannot be parsed correct.
HTML code '$' - '' cannot be parsed correct.
HTML code '$'</label>
                                    '' cannot be parsed correct.
HTML code '$'</label>
                                    '' cannot be parsed correct.
HTML code '$'                                </td>
                                <td>'' cannot be parsed correct.
HTML code '$'                                    <form id="fs_downgrade" action="'' cannot be parsed correct.
HTML code '$'" method="POST">
                                        <input type="hidden" name="fs_action" value="'' cannot be parsed correct.
HTML code '$'">
                                       '' cannot be parsed correct.
HTML code '$'				</tbody>
			</table>
		</div>
	</div>
</div>
'' cannot be parsed correct.
HTML code '$'                                        <input type="hidden" name="blog_id" value="'' cannot be parsed correct.
HTML code '$'"
			   class="nav-tab nav-tab-active">'' cannot be parsed correct.
HTML code '$'</a>
			'' cannot be parsed correct.
HTML code '$'"
				   class="nav-tab">'' cannot be parsed correct.
HTML code '$'</a>
			'' cannot be parsed correct.
HTML code '$'			'' cannot be parsed correct.
HTML code '$'" class="nav-tab">'' cannot be parsed correct.
HTML code '$'</a>
				'' cannot be parsed correct.
HTML code '$'" class="nav-tab">'' cannot be parsed correct.
HTML code '$'</a>
				'' cannot be parsed correct.
HTML code '$'			'' cannot be parsed correct.
HTML code '$'		</h2>
		'' cannot be parsed correct.
HTML code '$'
		<div id="poststuff">
			<div id="fs_account">
				<div class="has-sidebar has-right-sidebar">
					<div class="has-sidebar-content">
						<div class="postbox">
							<h3><span class="dashicons dashicons-businessman"></span> '' cannot be parsed correct.
HTML code '$'</h3>
							<div class="fs-header-actions">
								<ul>
                                    '' cannot be parsed correct.
HTML code '$'"></i> <span'' cannot be parsed correct.
HTML code '$'</a>
                                        </form>
                                    </li>
								</ul>
							</div>
							<div class="inside">
								<table id="fs_account_details" cellspacing="0" class="fs-key-value-table">
									'' cannot be parsed correct.
HTML code '$'									'' cannot be parsed correct.
HTML code '$'</li>
										<li>&nbsp;&bull;&nbsp;</li>
									'' cannot be parsed correct.
HTML code '$'                                    '' cannot be parsed correct.
HTML code '$'" method="POST">
                                                    <input type="hidden" name="fs_action" value="delete_account">
                                                    '' cannot be parsed correct.
HTML code '$'                                                    <a class="fs-delete-account" href="#" onclick="if (confirm(\''' cannot be parsed correct.
HTML code '$'</a>
                                                </form>
                                            </li>
                                            <li>&nbsp;&bull;&nbsp;</li>
                                        '' cannot be parsed correct.
HTML code '$'                                        '' cannot be parsed correct.
HTML code '$'" method="POST">
                                                    <input type="hidden" name="fs_action" value="deactivate_license">
                                                    '' cannot be parsed correct.
HTML code '$'                                                    <a href="#" class="fs-deactivate-license"><i
                                                            class="dashicons dashicons-admin-network"></i> '' cannot be parsed correct.
HTML code '$'                                                    </a>
                                                </form>
                                            </li>
                                            <li>&nbsp;&bull;&nbsp;</li>
                                            '' cannot be parsed correct.
HTML code '$'                                            '' cannot be parsed correct.
HTML code '$'" method="POST">
                                                        <input type="hidden" name="fs_action" value="downgrade_account">
                                                        '' cannot be parsed correct.
HTML code '$'                                                        <a href="#"
                                                           onclick="if ( confirm(\''' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$'\') ) this.parentNode.submit(); return false;"><i class="dashicons dashicons-download"></i> '' cannot be parsed correct.
HTML code '$'</a>
                                                    </form>
                                                </li>
                                                <li>&nbsp;&bull;&nbsp;</li>
                                            '' cannot be parsed correct.
HTML code '$'                                            '' cannot be parsed correct.
HTML code '$'"><i
                                                            class="dashicons dashicons-grid-view"></i> '' cannot be parsed correct.
HTML code '$'</a>
                                                </li>
                                                <li>&nbsp;&bull;&nbsp;</li>
                                            '' cannot be parsed correct.
HTML code '$'                                        '' cannot be parsed correct.
HTML code '$'" method="POST">
                                                    <input type="hidden" name="fs_action" value="cancel_trial">
                                                    '' cannot be parsed correct.
HTML code '$'                                                    <a href="#" class="fs-cancel-trial"><i
                                                            class="dashicons dashicons-download"></i> '' cannot be parsed correct.
HTML code '$'</a>
                                                </form>
                                            </li>
                                            <li>&nbsp;&bull;&nbsp;</li>
                                        '' cannot be parsed correct.
HTML code '$'                                    '' cannot be parsed correct.
HTML code '$'                                    <li>
                                        <form action='' cannot be parsed correct.
HTML code '$'" method="POST">
                                            <input type="hidden" name="fs_action" value="'' cannot be parsed correct.
HTML code '$'_sync_license">
                                           '' cannot be parsed correct.
HTML code '$'                                            <a href="#" onclick="this.parentNode.submit(); return false;"><i
                                                    class="dashicons dashicons-image-rotate"></i> '' cannot be parsed correct.
HTML code '$'</label>
														'' cannot be parsed correct.
HTML code '$'                                                        '' cannot be parsed correct.
HTML code '$'                                                            '' cannot be parsed correct.
HTML code '$'">
												<td>
													<nobr'' cannot be parsed correct.
HTML code '$'</nobr>
												</td>
												<td'' cannot be parsed correct.
HTML code '$' colspan="2"'' cannot be parsed correct.
HTML code '$'</code>
														'' cannot be parsed correct.
HTML code '$'" style="display: none"
														       readonly/>
                                                        '' cannot be parsed correct.
HTML code '$'                                                    '' cannot be parsed correct.
HTML code '$'/><span>'' cannot be parsed correct.
HTML code '$'</span></label>
													'' cannot be parsed correct.
HTML code '$'</code>
													'' cannot be parsed correct.
HTML code '$'													'' cannot be parsed correct.
HTML code '$'</label>
													'' cannot be parsed correct.
HTML code '$'													'' cannot be parsed correct.
HTML code '$'</label>
														'' cannot be parsed correct.
HTML code '$'														'' cannot be parsed correct.
HTML code '$'                                                                '' cannot be parsed correct.
HTML code '$'                                                                '' cannot be parsed correct.
HTML code '$'"
																      method="POST" class="button-group">
																	'' cannot be parsed correct.
HTML code '$'" href="#">'' cannot be parsed correct.
HTML code '$'</a>
																	'' cannot be parsed correct.
HTML code '$'																	<input type="submit" class="button"
																	       value="'' cannot be parsed correct.
HTML code '$'">
																	<input type="hidden" name="fs_action"
																	       value="'' cannot be parsed correct.
HTML code '$'_sync_license">
																'' cannot be parsed correct.
HTML code '$'																	'' cannot be parsed correct.
HTML code '$'"
																	   class="button'' cannot be parsed correct.
HTML code '$'</a>
																	'' cannot be parsed correct.
HTML code '$'																</form>
															'' cannot be parsed correct.
HTML code '$'														</div>
                                                        '' cannot be parsed correct.
HTML code '$'													'' cannot be parsed correct.
HTML code '$'</label>
															'' cannot be parsed correct.
HTML code '$'                                                        '' cannot be parsed correct.
HTML code '$'													'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</label>
															'' cannot be parsed correct.
HTML code '$'</label>
															'' cannot be parsed correct.
HTML code '$'														'' cannot be parsed correct.
HTML code '$'													'' cannot be parsed correct.
HTML code '$'												</td>
                                                '' cannot be parsed correct.
HTML code '$'" method="POST">
																<input type="hidden" name="fs_action" value="verify_email">
																'' cannot be parsed correct.
HTML code '$'																<input type="submit" class="button button-small"
																       value="'' cannot be parsed correct.
HTML code '$'">
															</form>
													'' cannot be parsed correct.
HTML code '$'														'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'																<label
																	class="fs-tag'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</label>
															'' cannot be parsed correct.
HTML code '$'</label>
															'' cannot be parsed correct.
HTML code '$'														'' cannot be parsed correct.
HTML code '$'                                    '' cannot be parsed correct.
HTML code '$' activate-license-trigger '' cannot be parsed correct.
HTML code '$'" href="#">'' cannot be parsed correct.
HTML code '$'</a>
                                    '' cannot be parsed correct.
HTML code '$'                                '' cannot be parsed correct.
HTML code '$'								<input class="fs-search" type="text" placeholder="'' cannot be parsed correct.
HTML code '$'..."><span class="dashicons dashicons-search"></span>
							</div>
							<div class="inside">
                                <div id="" class="fs-scrollable-table">
                                    <div class="fs-table-head">
                                        <table class="widefat">
                                            <thead>
                                            <tr>
                                                <td>'' cannot be parsed correct.
HTML code '$'</td>
                                                <td>'' cannot be parsed correct.
HTML code '$'</td>
                                                <td>'' cannot be parsed correct.
HTML code '$'</td>
                                                <td>'' cannot be parsed correct.
HTML code '$'</td>
                                                <td></td>
                                            </tr>
                                            </thead>
                                        </table>
                                    </div>
                                    <div class="fs-table-body">
                                        <table class="widefat">
                                            '' cannot be parsed correct.
HTML code '$'						'' cannot be parsed correct.
HTML code '$'</h3></th>
											<th>'' cannot be parsed correct.
HTML code '$'</th>
											<th>'' cannot be parsed correct.
HTML code '$'</th>
											<th>'' cannot be parsed correct.
HTML code '$'</th>
											<th>'' cannot be parsed correct.
HTML code '$'</th>
											<th></th>
											'' cannot be parsed correct.
HTML code '$'										</tr>
										</thead>
										<tbody>
										'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</a>
																		'' cannot be parsed correct.
HTML code '$'																	'' cannot be parsed correct.
HTML code '$'															'' cannot be parsed correct.
HTML code '$'</button>
                                                            '' cannot be parsed correct.
HTML code '$'                                                            '' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</button>
                                                            '' cannot be parsed correct.
HTML code '$'															'' cannot be parsed correct.
HTML code '$'" method="POST"
															      onsubmit="var val = prompt(\''' cannot be parsed correct.
HTML code '$'\', \''' cannot be parsed correct.
HTML code '$'\'); if (null == val || \'\' === val) return false; jQuery(\'input[name=fs_'' cannot be parsed correct.
HTML code '$'_'' cannot be parsed correct.
HTML code '$']\').val(val); return true;">
																<input type="hidden" name="fs_action" value="update_'' cannot be parsed correct.
HTML code '$'">
																<input type="hidden" name="fs_'' cannot be parsed correct.
HTML code '$'_'' cannot be parsed correct.
HTML code '$'"
																       value="">
																'' cannot be parsed correct.
HTML code '$'																<input type="submit" class="button button-small"
																       value="'' cannot be parsed correct.
HTML code '$'">
															</form>
                                                       '' cannot be parsed correct.
HTML code '$'">
													'' cannot be parsed correct.
HTML code '$'													</td>
												'' cannot be parsed correct.
HTML code '$'											</tr>
											'' cannot be parsed correct.
HTML code '$'								</table>
							</div>
						</div>
						'' cannot be parsed correct.
HTML code '$'</h3>
							<div class="fs-header-actions">
                                '' cannot be parsed correct.
HTML code '$'</h2>
		'' cannot be parsed correct.
HTML code '$'
		'' cannot be parsed correct.
HTML code '$'
		<div id="poststuff">
			'' cannot be parsed correct.
HTML code '$'
						'' cannot be parsed correct.
HTML code '$'
						'' cannot be parsed correct.
HTML code '$'\');
			        setTimeout(function () {
				        $input.select().focus();
			        }, 100);
		        }
		        else {
			        $this.html( \''' cannot be parsed correct.
HTML code '$'\' );
		        }
	        });

            $(\'.fs-toggle-tracking\').click(function () {
                setLoading(
                	$(this),
	                ($(this).data(\'is-disconnected\') ?
		                \''' cannot be parsed correct.
HTML code '$'\' :
		                \''' cannot be parsed correct.
HTML code '$'\') +
		                \'...\'
                );
            });

            '' cannot be parsed correct.
HTML code '$'\' ) ) {
                    $.ajax( {
                        url   : ajaxurl,
                        method: \'POST\',
                        data  : {
                            action   : \''' cannot be parsed correct.
HTML code '$'\',
                            security : \''' cannot be parsed correct.
HTML code '$'\',
                            is_beta  : isChecked,
                            module_id: '' cannot be parsed correct.
HTML code '$'                        },
                        beforeSend: function () {
                            $checkbox.prop( \'disabled\', true );
                            $checkbox.parent().find( \'span\' ).text( \''' cannot be parsed correct.
HTML code '$'\' + \'...\' );
                        },
                        complete: function () {
                            $checkbox.prop( \'disabled\', false );
                            $checkbox.parent().find( \'span\' ).text( \''' cannot be parsed correct.
HTML code '$'\' );
                        }
                    } );

                    return true;
                }

                return false;
            });

	        $(\'.fs-opt-in\').click(function () {
		        setLoading($(this), \''' cannot be parsed correct.
HTML code '$'...\');
	        });

	        $( \'#fs_downgrade\' ).submit(function( event ) {
                event.preventDefault();

		        setLoading( $( this ).find( \'.button\' ), \''' cannot be parsed correct.
HTML code '$'...\' );
	        });

            $(\'.fs-activate-license\').click(function () {
                setLoading($(this), \''' cannot be parsed correct.
HTML code '$'...\');
            });

            var $deactivateLicenseOrCancelTrial = $( \'.fs-deactivate-license, .fs-cancel-trial\' ),
                $subscriptionCancellationModal  = $( \'.fs-modal-subscription-cancellation-'' cannot be parsed correct.
HTML code '$'\' );

            if ( 0 !== $subscriptionCancellationModal.length ) {
                $subscriptionCancellationModal.on( \''' cannot be parsed correct.
HTML code '$'\', function( evt, cancelSubscription ) {
                    setLoading(
                        $deactivateLicenseOrCancelTrial,
                        ( ! $deactivateLicenseOrCancelTrial.hasClass( \'fs-cancel-trial\' ) ?
                            \''' cannot be parsed correct.
HTML code '$'\' :
                            \''' cannot be parsed correct.
HTML code '$'\' ) + \'...\'
                    );

                    $subscriptionCancellationModal.find( \'.fs-modal-footer .button\' ).addClass( \'disabled\' );
                    $deactivateLicenseOrCancelTrial.unbind( \'click\' );

                    if ( false === cancelSubscription || $deactivateLicenseOrCancelTrial.hasClass( \'fs-cancel-trial\' ) ) {
                        $subscriptionCancellationModal.find( \'.fs-modal-footer .button-primary\' ).text( $deactivateLicenseOrCancelTrial.text() );

                        $deactivateLicenseOrCancelTrial[0].parentNode.submit();
                    } else {
                        var $form = $( \'input[value="downgrade_account"],input[value="cancel_trial"]\' ).parent();
                        $form.prepend( \'<input type="hidden" name="deactivate_license" value="true" />\' );

                        $subscriptionCancellationModal.find( \'.fs-modal-footer .button-primary\' ).text( \''' cannot be parsed correct.
HTML code '$'\' );

                        $form.submit();
                    }
                });
            }

            $deactivateLicenseOrCancelTrial.click(function() {
                var $this = $( this );
                if ( $this.hasClass( \'fs-cancel-trial\' ) ) {
                    $subscriptionCancellationModal.find( \'.fs-modal-panel\' ).find( \'ul.subscription-actions, .fs-price-increase-warning\' ).remove();
                    $subscriptionCancellationModal.find( \'.fs-modal-panel > p\' ).text( '' cannot be parsed correct.
HTML code '$' );
                    $subscriptionCancellationModal.trigger( \'showModal\' );
                } else if (confirm(\''' cannot be parsed correct.
HTML code '$'\')) {
                    var $this = $(this);

                    if ( 0 !== $subscriptionCancellationModal.length ) {
                        $subscriptionCancellationModal.trigger( \'showModal\' );
                    } else {
                        setLoading( $this, \''' cannot be parsed correct.
HTML code '$'...\' );
                        $this[0].parentNode.submit();
                    }
                }

                return false;
            });

            var $sitesSection = $(\'#fs_sites\'),
                $sitesTable = $sitesSection.find(\'.fs-scrollable-table\'),
                $sitesTableRows = $sitesTable.find(\'.fs-site-details\');

            $(\'.fs-show-install-details\').click(function(){
                var installID = $(this).parents(\'.fs-site-details\').attr(\'data-install-id\');
                $sitesSection.find(\'.fs-install-details[data-install-id=\' + installID + \']\').toggle();
            });


            var adjustColumnWidth = function($table) {
                var $headerColumns = $table.find(\'.fs-table-head td\'),
                    $bodyColumns   = $table.find(\'.fs-table-body tr:first > td\');

                for (var i = 0, len = $headerColumns.length; i < len; i++) {
                    $($headerColumns[i]).width($($bodyColumns[i]).width());
                }
                for (i = 0, len = $headerColumns.length; i < len; i++) {
                    $($bodyColumns[i]).width($($headerColumns[i]).width());
                }
            };

            adjustColumnWidth($sitesTable);

            $sitesSection.find(\'.fs-search\').keyup(function(){
                var search = $(this).val().trim();

                if (\'\' === search){
                    // Show all.
                    $sitesTableRows.show();
                    return;
                }

                var url;

                $sitesTableRows.each(function(index){
                    url = $(this).find(\'.fs-field-url\').html();

                    if (-1 < url.indexOf(search)){
                        $(this).show();
                    } else {
                        $(this).hide();
                    }
                });
            });

            $( \'.fs-toggle-whitelabel-mode\' ).click( function () {
                var $toggleLink = $( this );

                $.ajax( {
                    url   : ajaxurl,
                    method: \'POST\',
                    data  : {
                        action   : \''' cannot be parsed correct.
HTML code '$'\',
                        security : \''' cannot be parsed correct.
HTML code '$'\',
                        module_id: '' cannot be parsed correct.
HTML code '$'                    },
                    beforeSend: function () {
                        $toggleLink.parent().text( \''' cannot be parsed correct.
HTML code '$'\' + \'...\' );
                    },
                    complete: function () {
                        location.reload();
                    }
                } );
            });
        })(jQuery);
    </script>
'' cannot be parsed correct.
HTML code '$'</h3>
			'' cannot be parsed correct.
HTML code '$'			<ul class="fs-cards-list">
				'' cannot be parsed correct.
HTML code '$'">
						'' cannot be parsed correct.
HTML code '$'\');"'' cannot be parsed correct.
HTML code '$'</li>
									<li class="fs-offer">
									<span
										class="fs-price">'' cannot be parsed correct.
HTML code '$'&nbsp;'' cannot be parsed correct.
HTML code '$'</li>
                                    '' cannot be parsed correct.
HTML code '$'</a></li>
                                    '' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</a>
                                            '' cannot be parsed correct.
HTML code '$'                                            <div class="button button-primary fs-dropdown-arrow-button"><span class="fs-dropdown-arrow"></span><ul class="fs-dropdown-list" style="display: none">
		                                            '' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</a></li>
		                                            '' cannot be parsed correct.
HTML code '$'		                                            <li>'' cannot be parsed correct.
HTML code '$'								</ul>
							</div>
						</li>
					'' cannot be parsed correct.
HTML code '$'				'' cannot be parsed correct.
HTML code '$'			</ul>
		</div>

		'' cannot be parsed correct.
HTML code '$'	</div>
	<script type="text/javascript">
		(function( $, undef ) {
			'' cannot be parsed correct.
HTML code '$'] a\').click();
				if ($(\'#TB_iframeContent\').length > 0) {
					clearInterval(interval);
					interval = null;
				}
			}, 200);

			'' cannot be parsed correct.
HTML code '$'
            var $dropdowns = $( \'.fs-dropdown\' );
            if ( 0 !== $dropdowns.length ) {
                $dropdowns.find( \'.fs-dropdown-arrow-button\' ).click(function() {
                    var $this     = $( this ),
                        $dropdown = $this.parents( \'.fs-dropdown\' );

                    toggleDropdown( $dropdown, ! $dropdown.hasClass( \'active\' ) );
                });
            }

            /**
             * Returns the default state of the dropdown arrow button and hides the dropdown list.
             *
             * @author Leo Fajardo (@leorw)
             * @since 2.2.4
             *
             * @param {(Object|undefined)}  [$dropdown]
             * @param {(Boolean|undefined)} [state]
             */
            function toggleDropdown( $dropdown, state ) {
                if ( undef === $dropdown ) {
                    var $activeDropdown = $dropdowns.find( \'.active\' );
                    if ( 0 !== $activeDropdown.length ) {
                        $dropdown = $activeDropdown;
                    }
                }

                if ( undef === $dropdown ) {
                    return;
                }

                if ( undef === state ) {
                    state = false;
                }

                $dropdown.toggleClass( \'active\', state );
                $dropdown.find( \'.fs-dropdown-list\' ).toggle( state );
                $dropdown.find( \'.fs-dropdown-arrow-button\' ).toggleClass( \'active\', state );
            }
		})( jQuery );
	</script>
'' cannot be parsed correct.
HTML code '$'.pricing\'),
				$pricingMenuLink = $pricingMenu.parents(\'a\');

			// Add trial querystring param.
			$pricingMenuLink.attr(\'href\', $pricingMenuLink.attr(\'href\') + \'&trial=true\');
		});
	})(jQuery);
</script>'' cannot be parsed correct.
HTML code '$'	class='' cannot be parsed correct.
HTML code '$'error form-invalid'' cannot be parsed correct.
HTML code '$'updated promotion'' cannot be parsed correct.
HTML code '$'updated success'' cannot be parsed correct.
HTML code '$' fs-sticky'' cannot be parsed correct.
HTML code '$' fs-has-title'' cannot be parsed correct.
HTML code '$'</label>
	'' cannot be parsed correct.
HTML code '$'	'' cannot be parsed correct.
HTML code '$'</h4>
		</div>
		<div class="fs-modal-body">
			<div class="fs-notice-error" style="display: none"><p></p></div>
			'' cannot be parsed correct.
HTML code '$'				</div>
			'' cannot be parsed correct.
HTML code '$'</p>
			'' cannot be parsed correct.
HTML code '$'			<p class="fs-installing"
			   style="display: none">'' cannot be parsed correct.
HTML code '$'</p>
		</div>
		<div class="fs-modal-footer">
			'' cannot be parsed correct.
HTML code '$'			<button
				class="button button-secondary button-cancel">'' cannot be parsed correct.
HTML code '$')'' cannot be parsed correct.
HTML code '$'</button>
			<button
				class="button button-primary">'' cannot be parsed correct.
HTML code '$'</button>
		</div>
	</div>
</div>\'

<script type="text/javascript">
	(function ($) {
		$(document).ready(function () {
			var $modal             = $(\'.fs-modal-auto-install\'),
			    $body              = $(\'body\'),
			    $countdown         = $modal.find(\'.fs-countdown\'),
			    requireCredentials = '' cannot be parsed correct.
HTML code '$',
			    $credentialsForm   = $(\'#request-filesystem-credentials-dialog\'),
			    $errorNotice       = $modal.find(\'.fs-notice-error\'),
			    installing         = false;

			$modal.appendTo($body);

			var startAutoInstall = function () {
				if (installing)
					return;

				installing = true;

				// Start auto-install.
				$modal.addClass(\'fs-warn\');
				if (requireCredentials) {
					$credentialsForm.hide();
				} else {
					$modal.find(\'.fs-installation-notice\').hide();
				}

				$errorNotice.hide();
				$modal.find(\'.fs-installing\').show();
				$modal.find(\'button\').hide();
				$modal.find(\'.fs-ajax-loader\').show();

				var data = {
					action          : \''' cannot be parsed correct.
HTML code '$'\',
					security        : \''' cannot be parsed correct.
HTML code '$'\',
					slug            : \''' cannot be parsed correct.
HTML code '$'\',
					module_id       : \''' cannot be parsed correct.
HTML code '$'\',
                    target_module_id: \''' cannot be parsed correct.
HTML code '$'\'
				};

				if (requireCredentials) {
					// Add filesystem credentials.
					data.hostname = $(\'#hostname\').val();
					data.username = $(\'#username\').val();
					data.password = $(\'#password\').val();
					data.connection_type = $(\'input[name="connection_type"]:checked\').val();
					data.public_key = $(\'#public_key\').val();
					data.private_key = $(\'#private_key\').val();
				}

				$.ajax({
					url    : ajaxurl,
					method : \'POST\',
					data   : data,
					success: function (resultObj) {
						var reloadAccount = false;

						if (resultObj.success) {
							// Reload account page to show new data.
							reloadAccount = true;
						} else {
							switch (resultObj.error.code) {
								case \'invalid_module_id\':
								case \'premium_installed\':
									reloadAccount = true;
									break;
								case \'invalid_license\':
								case \'premium_version_missing\':
								case \'unable_to_connect_to_filesystem\':
								default:
									$modal.removeClass(\'fs-warn\');
									$modal.find(\'.fs-installing\').hide();
									$modal.find(\'.fs-ajax-loader\').hide();
									$modal.find(\'.button-cancel\').html('' cannot be parsed correct.
HTML code '$');
									$modal.find(\'button\').show();

									$errorNotice.find(\'p\').text(resultObj.error.message);
									$errorNotice.addClass(\'notice notice-alt notice-error\').show();
									if (requireCredentials) {
										$credentialsForm.show();
									}
									break;
							}
						}

						if (reloadAccount) {
							window.location = \''' cannot be parsed correct.
HTML code '$'\';
						}

						installing = false;
					}
				});
			};

			var clearCountdown = function () {
				clearInterval(countdownInterval);
				countdownInterval = null;
			};

			var cancelAutoInstall = function () {
				$modal.fadeOut(function () {
					$modal.remove();
					$body.removeClass(\'has-fs-modal\');
				});
			};

			var countdown         = '' cannot be parsed correct.
HTML code '$',
			    countdownInterval = requireCredentials ? null : setInterval(function () {
				    $countdown.html(--countdown);
				    if (0 == countdown) {
					    clearCountdown();
					    startAutoInstall();
				    }
			    }, 1000);

			$modal.addClass(\'active\');
			$body.addClass(\'has-fs-modal\');

			$modal.find(\'.button-primary\').click(function () {
				clearCountdown();
				startAutoInstall();
			});

			$modal.find(\'.button-cancel\').click(function () {
				clearCountdown();
				cancelAutoInstall();
			});

			if (requireCredentials) {

			}
		});
	})(jQuery);
</script>
'' cannot be parsed correct.
HTML code '$'\',
						// Pass the parent page URL into the i-frame in a meaningful way (this URL could be
						// passed via query string or hard coded into the child page, it depends on your needs).
						src          = base_url + \'/?'' cannot be parsed correct.
HTML code '$'#\' + encodeURIComponent(document.location.href),
						// Append the i-frame into the DOM.
						frame        = $(\'<i\' + \'frame " src="\' + src + \'" width="100%" height="\' + frame_height + \'px" scrolling="no" frameborder="0" style="background: transparent; width: 1px; min-width: 100%;"><\/i\' + \'frame>\')
							.appendTo(\'#fs_frame\');

					FS.PostMessage.init(base_url, [frame[0]]);
					FS.PostMessage.receiveOnce(\'height\', function (data) {
						var h = data.height;
						if (!isNaN(h) && h > 0 && h != frame_height) {
							frame_height = h;
							frame.height(frame_height + \'px\');

							FS.PostMessage.postScroll(frame[0]);
						}
					});

					FS.PostMessage.receiveOnce(\'install\', function (data) {
						var requestData = {
							user_id           : data.user.id,
							user_secret_key   : data.user.secret_key,
							user_public_key   : data.user.public_key,
							install_id        : data.install.id,
							install_secret_key: data.install.secret_key,
							install_public_key: data.install.public_key
						};

						if (true === data.auto_install)
							requestData.auto_install = true;

						// Post data to activation URL.
						$.form(\''' cannot be parsed correct.
HTML code '$'"></i> <span'' cannot be parsed correct.
HTML code '$'</span>
		</div>
	'' cannot be parsed correct.
HTML code '$'	<div class="fs-notice-body">
		'' cannot be parsed correct.
HTML code '$'</b> '' cannot be parsed correct.
HTML code '$'		'' cannot be parsed correct.
HTML code '$'	</div>
</div>
'' cannot be parsed correct.
HTML code '$'\', requestData).submit();
					});

					FS.PostMessage.receiveOnce(\'pending_activation\', function (data) {
						var requestData = {
							user_email: data.user_email
						};

						if (true === data.auto_install)
							requestData.auto_install = true;

						$.form(\''' cannot be parsed correct.
HTML code '$'\', requestData).submit();
					});

					FS.PostMessage.receiveOnce(\'get_context\', function () {
						console.debug(\'receiveOnce\', \'get_context\');

						// If the user didn\'t connect his account with Freemius,
						// once he accepts the Terms of Service and Privacy Policy,
						// and then click the purchase button, the context information
						// of the user will be shared with Freemius in order to complete the
						// purchase workflow and activate the license for the right user.
						'' cannot be parsed correct.
HTML code '$'						FS.PostMessage.post(\'context\', '' cannot be parsed correct.
HTML code '$', frame[0]);
					});

					FS.PostMessage.receiveOnce(\'purchaseCompleted\', '' cannot be parsed correct.
HTML code '$');

					FS.PostMessage.receiveOnce(\'get_dimensions\', function (data) {
						console.debug(\'receiveOnce\', \'get_dimensions\');

						FS.PostMessage.post(\'dimensions\', {
							height   : $(document.body).height(),
							scrollTop: $(document).scrollTop()
						}, frame[0]);
					});

					var updateHeight = function () {
						frame.css(\'min-height\', $(document.body).height() + \'px\');
					};

					$(document).ready(updateHeight);

					$(window).resize(updateHeight);
				});
			})(jQuery);
		</script>
	</div>'' cannot be parsed correct.
HTML code '$'"
					       placeholder="'' cannot be parsed correct.
HTML code '$'" tabindex="1"/>
					<i class="dashicons dashicons-admin-network"></i>
					<a class="show-license-resend-modal show-license-resend-modal-'' cannot be parsed correct.
HTML code '$'"
					   href="#">'' cannot be parsed correct.
HTML code '$'</span>
                    <div class="fs-input-container">
                        <label>
                            <input type="radio" name="allow-marketing" value="true" tabindex="1" />
                            <span class="fs-input-label">'' cannot be parsed correct.
HTML code '$'</span>
                        </label>
                        <label>
                            <input type="radio" name="allow-marketing" value="false" tabindex="1" />
                            <span class="fs-input-label">'' cannot be parsed correct.
HTML code '$'</span>
                        </label>
                    </div>
                </div>
			'' cannot be parsed correct.
HTML code '$'			'' cannot be parsed correct.
HTML code '$'		</div>
		<div class="fs-actions">
			'' cannot be parsed correct.
HTML code '$'"
				   class="button button-secondary" tabindex="2">'' cannot be parsed correct.
HTML code '$'</a>
			'' cannot be parsed correct.
HTML code '$'			'' cannot be parsed correct.
HTML code '$'" href="'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'<span class="fs-tooltip">'' cannot be parsed correct.
HTML code '$'</span></a>
			'' cannot be parsed correct.
HTML code '$'			'' cannot be parsed correct.
HTML code '$'_activate_existing">
				'' cannot be parsed correct.
HTML code '$'					<input type="hidden" name="is_extensions_tracking_allowed" value="1">
					<button class="button button-primary" tabindex="1"
					        type="submit">'' cannot be parsed correct.
HTML code '$'</button>
				</form>
			'' cannot be parsed correct.
HTML code '$'/action/service/user/install/">
				'' cannot be parsed correct.
HTML code '$'" value="'' cannot be parsed correct.
HTML code '$' fs-anonymous-disabled'' cannot be parsed correct.
HTML code '$'">
		<div class="fs-visual">
			<b class="fs-site-icon"><i class="dashicons dashicons-wordpress"></i></b>
			<i class="dashicons dashicons-plus fs-first"></i>
			'' cannot be parsed correct.
HTML code '$'</p>
			'' cannot be parsed correct.
HTML code '$'			<p>'' cannot be parsed correct.
HTML code '$'">
				'' cannot be parsed correct.
HTML code '$'					<input type="hidden" name="is_extensions_tracking_allowed" value="1">
					<button class="button button-primary" tabindex="1"
					        type="submit"'' cannot be parsed correct.
HTML code '$' disabled="disabled"'' cannot be parsed correct.
HTML code '$'</button>
				</form>
			'' cannot be parsed correct.
HTML code '$'            '' cannot be parsed correct.
HTML code '$'" target="_blank">'' cannot be parsed correct.
HTML code '$'</a>
            '' cannot be parsed correct.
HTML code '$'		</div>'' cannot be parsed correct.
HTML code '$'</p>
					'' cannot be parsed correct.
HTML code '$'</a>
                    '' cannot be parsed correct.
HTML code '$'					<ul>'' cannot be parsed correct.
HTML code '$'</h1>

<h2><span>Total Time:</span>'' cannot be parsed correct.
HTML code '$'</h2>

<h2><span>Total Requests:</span>'' cannot be parsed correct.
HTML code '$'</h2>
'' cannot be parsed correct.
HTML code '$':</span>'' cannot be parsed correct.
HTML code '$'</h2>
'' cannot be parsed correct.
HTML code '$'<table class="widefat">
	<thead>
	<tr>
		<th>#</th>
		<th>'' cannot be parsed correct.
HTML code '$'</th>
		<th>'' cannot be parsed correct.
HTML code '$'</th>
		<th>'' cannot be parsed correct.
HTML code '$'</th>
		<th>'' cannot be parsed correct.
HTML code '$'</th>
		'' cannot be parsed correct.
HTML code '$'</th>
		'' cannot be parsed correct.
HTML code '$'		<th>'' cannot be parsed correct.
HTML code '$'</th>
		<th>'' cannot be parsed correct.
HTML code '$'</th>
		<th>'' cannot be parsed correct.
HTML code '$'</th>
	</tr>
	</thead>
	<tbody>
	'' cannot be parsed correct.
HTML code '$'.</td>
			<td>'' cannot be parsed correct.
HTML code '$'</td>
			<td>'' cannot be parsed correct.
HTML code '$'</td>
			<td>'' cannot be parsed correct.
HTML code '$'</td>
			<td>
				'' cannot be parsed correct.
HTML code '$'</td>
							<td>'' cannot be parsed correct.
HTML code '$'					</tbody>
				</table>
			</td>
			'' cannot be parsed correct.
HTML code '$'">
											<div class="fs-toggle"></div>
										</div>
									'' cannot be parsed correct.
HTML code '$'
									<div class="fs-permission-description">
										<span'' cannot be parsed correct.
HTML code '$'>'' cannot be parsed correct.
HTML code '$'</span></i>'' cannot be parsed correct.
HTML code '$'</span>

										<p>'' cannot be parsed correct.
HTML code '$'		'' cannot be parsed correct.
HTML code '$'						<a data-require-license="false" tabindex="1">'' cannot be parsed correct.
HTML code '$'</a>
					'' cannot be parsed correct.
HTML code '$'						<a data-require-license="true" tabindex="1">'' cannot be parsed correct.
HTML code '$'</a>
					'' cannot be parsed correct.
HTML code '$'				</p>
			</div>
		'' cannot be parsed correct.
HTML code '$'		<div class="fs-terms">
			<a href="https://freemius.com/privacy/" target="_blank" rel="noopener"
			   tabindex="1">'' cannot be parsed correct.
HTML code '$'</a>
			&nbsp;&nbsp;-&nbsp;&nbsp;
			<a href='' cannot be parsed correct.
HTML code '$'" target="_blank" rel="noopener" tabindex="1">'' cannot be parsed correct.
HTML code '$'</a>
		</div>
	</div>
	'' cannot be parsed correct.
HTML code '$',
		    requireLicenseKey    = '' cannot be parsed correct.
HTML code '$',
		    hasContextUser       = '' cannot be parsed correct.
HTML code '$',
		    isNetworkUpgradeMode = '' cannot be parsed correct.
HTML code '$',
		    $licenseSecret,
		    $licenseKeyInput     = $(\'#fs_license_key\'),
            pauseCtaLabelUpdate  = false,
            isNetworkDelegating  = false,
            /**
             * @author Leo Fajardo (@leorw)
             * @since 2.1.0
             */
            resetLoadingMode = function() {
                // Reset loading mode.
                $primaryCta.html(primaryCtaLabel);
                $primaryCta.prop(\'disabled\', false);
                $(document.body).css({\'cursor\': \'auto\'});
                $(\'.fs-loading\').removeClass(\'fs-loading\');

                console.log(\'resetLoadingMode - Primary button was enabled\');
            },
			setLoadingMode = function () {
				$(document.body).css({\'cursor\': \'wait\'});
			};

		$(\'.fs-actions .button\').on(\'click\', function () {
			setLoadingMode();

			var $this = $(this);

			setTimeout(function () {
			    if ( ! requireLicenseKey || ! $marketingOptin.hasClass( \'error\' ) ) {
                    $this.attr(\'disabled\', \'disabled\');
                }
			}, 200);
		});

		if ( isNetworkActive ) {
			var
				$multisiteOptionsContainer  = $( \'.fs-multisite-options-container\' ),
				$allSitesOptions            = $( \'.fs-all-sites-options\' ),
				$applyOnAllSites            = $( \'.fs-apply-on-all-sites-checkbox\' ),
				$sitesListContainer         = $( \'.fs-sites-list-container\' ),
				totalSites                  = '' cannot be parsed correct.
HTML code '$',
				maxSitesListHeight          = null,
				$skipActivationButton       = $( \'#skip_activation\' ),
				$delegateToSiteAdminsButton = $( \'#delegate_to_site_admins\' ),
                hasAnyInstall               = '' cannot be parsed correct.
HTML code '$';

			$applyOnAllSites.click(function() {
				var isChecked = $( this ).is( \':checked\' );

				if ( isChecked ) {
					$multisiteOptionsContainer.find( \'.action\' ).removeClass( \'selected\' );
					updatePrimaryCtaText( \'allow\' );
				}

				$multisiteOptionsContainer.find( \'.action-allow\' ).addClass( \'selected\' );

				$skipActivationButton.toggle();

				$delegateToSiteAdminsButton.toggle();

				$multisiteOptionsContainer.toggleClass( \'fs-apply-on-all-sites\', isChecked );

				$sitesListContainer.toggle( ! isChecked );
				if ( ! isChecked && null === maxSitesListHeight ) {
					/**
					 * Set the visible number of rows to 5 (5 * height of the first row).
					 *
					 * @author Leo Fajardo (@leorw)
					 */
					maxSitesListHeight = ( 5 * $sitesListContainer.find( \'tr:first\' ).height() );
					$sitesListContainer.css( \'max-height\', maxSitesListHeight );
				}
			});

			$allSitesOptions.find( \'.action\' ).click(function( evt ) {
				var actionType = $( evt.target ).data( \'action-type\' );

				$multisiteOptionsContainer.find( \'.action\' ).removeClass( \'selected\' );
				$multisiteOptionsContainer.find( \'.action-\' + actionType ).toggleClass( \'selected\' );

				updatePrimaryCtaText( actionType );
			});

			$sitesListContainer.delegate( \'.action\', \'click\', function( evt ) {
				var $this = $( evt.target );
				if ( $this.hasClass( \'selected\' ) ) {
					return false;
				}

				$this.parents( \'tr:first\' ).find( \'.action\' ).removeClass( \'selected\' );
				$this.toggleClass( \'selected\' );

				var
					singleSiteActionType = $this.data( \'action-type\' ),
					totalSelected        = $sitesListContainer.find( \'.action-\' + singleSiteActionType + \'.selected\' ).length;

				$allSitesOptions.find( \'.action.selected\' ).removeClass( \'selected\' );

				if ( totalSelected === totalSites ) {
					$allSitesOptions.find( \'.action-\' + singleSiteActionType ).addClass( \'selected\' );

					updatePrimaryCtaText( singleSiteActionType );
				} else {
					updatePrimaryCtaText( \'mixed\' );
				}
			});

            if ( isNetworkUpgradeMode || hasAnyInstall ) {
                $skipActivationButton.click(function(){
                    $delegateToSiteAdminsButton.hide();

                    $skipActivationButton.html(\''' cannot be parsed correct.
HTML code '$'...\');

                    pauseCtaLabelUpdate = true;

                    // Check all sites to be skipped.
                    $allSitesOptions.find(\'.action.action-skip\').click();

                    $form.submit();

                    pauseCtaLabelUpdate = false;

                    return false;
                });

                $delegateToSiteAdminsButton.click(function(){
                    $delegateToSiteAdminsButton.html(\''' cannot be parsed correct.
HTML code '$'...\');

                    pauseCtaLabelUpdate = true;

                    /**
                     * Set to true so that the form submission handler can differentiate delegation from license
                     * activation and the proper AJAX action will be used (when delegating, the action should be
                     * `network_activate` and not `activate_license`).
                     *
                     * @author Leo Fajardo (@leorw)
                     * @since 2.3.0
                     */
                    isNetworkDelegating = true;

                    // Check all sites to be skipped.
                    $allSitesOptions.find(\'.action.action-delegate\').click();

                    $form.submit();

                    pauseCtaLabelUpdate = false;

                    /**
                     * Set to false so that in case the previous AJAX request has failed, the form submission handler
                     * can differentiate license activation from delegation and the proper AJAX action will be used
                     * (when activating a license, the action should be `activate_license` and not `network_activate`).
                     *
                     * @author Leo Fajardo (@leorw)
                     * @since 2.3.0
                     */
                    isNetworkDelegating = false;

                    return false;
                });
            }
		}

		/**
		 * @author Leo Fajardo (@leorw)
		 */
		function updatePrimaryCtaText( actionType ) {
            if (pauseCtaLabelUpdate)
                return;

			var text = \''' cannot be parsed correct.
HTML code '$'\';

			switch ( actionType ) {
				case \'allow\':
					text = \''' cannot be parsed correct.
HTML code '$'\';
					break;
				case \'delegate\':
					text = \''' cannot be parsed correct.
HTML code '$'\';
					break;
				case \'skip\':
					text = \''' cannot be parsed correct.
HTML code '$'\';
					break;
			}

			$primaryCta.html( text );
		}

		var ajaxOptin = ( requireLicenseKey || isNetworkActive );

		$form.on(\'submit\', function () {
            var $extensionsPermission = $(\'#fs-permission-extensions .fs-switch\'),
                isExtensionsTrackingAllowed = ($extensionsPermission.length > 0) ?
                    $extensionsPermission.hasClass(\'fs-on\') :
                    null;

            if (null === isExtensionsTrackingAllowed) {
                $(\'input[name=is_extensions_tracking_allowed]\').remove();
            } else {
                $(\'input[name=is_extensions_tracking_allowed]\').val(isExtensionsTrackingAllowed ? 1 : 0);
            }

			/**
			 * @author Vova Feldman (@svovaf)
			 * @since 1.1.9
			 */
			if ( ajaxOptin ) {
				if (!hasContextUser || isNetworkUpgradeMode) {
				    var action   = null,
                        security = null;

				    if ( requireLicenseKey && ! isNetworkDelegating ) {
                        action   = \''' cannot be parsed correct.
HTML code '$'\';
                        security = \''' cannot be parsed correct.
HTML code '$'\';
                    } else {
                        action   = \''' cannot be parsed correct.
HTML code '$'\';
                        security = \''' cannot be parsed correct.
HTML code '$'\';
                    }

					$(\'.fs-error\').remove();

					var
                        licenseKey = $licenseKeyInput.val(),
                        data       = {
                            action     : action,
                            security   : security,
                            license_key: licenseKey,
                            module_id  : \''' cannot be parsed correct.
HTML code '$'\'
                        };

					if (
                        requireLicenseKey &&
                        ! isNetworkDelegating &&
                        isMarketingAllowedByLicense.hasOwnProperty(licenseKey)
                    ) {
                        var
                            isMarketingAllowed = null,
                            $isMarketingAllowed   = $marketingOptin.find( \'input[type="radio"][name="allow-marketing"]:checked\');


                        if ($isMarketingAllowed.length > 0)
                            isMarketingAllowed = (\'true\' == $isMarketingAllowed.val());

                        if ( null == isMarketingAllowedByLicense[ licenseKey ] &&
                            null == isMarketingAllowed
                        ) {
                            $marketingOptin.addClass( \'error\' ).show();
                            resetLoadingMode();
                            return false;
                        } else if ( null == isMarketingAllowed ) {
                            isMarketingAllowed = isMarketingAllowedByLicense[ licenseKey ];
                        }

                        data.is_marketing_allowed = isMarketingAllowed;

						data.is_extensions_tracking_allowed = isExtensionsTrackingAllowed;
                    }

                    $marketingOptin.removeClass( \'error\' );

					if ( isNetworkActive ) {
						var
							sites           = [],
							applyOnAllSites = $applyOnAllSites.is( \':checked\' );

						$sitesListContainer.find( \'tr\' ).each(function() {
							var
								$this       = $( this ),
								includeSite = ( ! requireLicenseKey || applyOnAllSites || $this.find( \'input\' ).is( \':checked\' ) );

							if ( ! includeSite )
								return;

							var site = {
								uid     : $this.find( \'.uid\' ).val(),
								url     : $this.find( \'.url\' ).val(),
								title   : $this.find( \'.title\' ).val(),
								language: $this.find( \'.language\' ).val(),
								charset : $this.find( \'.charset\' ).val(),
								blog_id : $this.find( \'.blog-id\' ).find( \'span\' ).text()
							};

							if ( ! requireLicenseKey) {
                                site.action = $this.find(\'.action.selected\').data(\'action-type\');
                            } else if ( isNetworkDelegating ) {
							    site.action = \'delegate\';
                            }

							sites.push( site );
						});

						data.sites = sites;

						if ( hasAnyInstall ) {
						    data.has_any_install = hasAnyInstall;
                        }
					}

					/**
					 * Use the AJAX opt-in when license key is required to potentially
					 * process the after install failure hook.
					 *
					 * @author Vova Feldman (@svovaf)
					 * @since 1.2.1.5
					 */
					$.ajax({
						url    : ajaxurl,
						method : \'POST\',
						data   : data,
						success: function (result) {
							var resultObj = $.parseJSON(result);
							if (resultObj.success) {
								// Redirect to the "Account" page and sync the license.
								window.location.href = resultObj.next_page;
							} else {
								resetLoadingMode();

								// Show error.
								$(\'.fs-content\').prepend(\'<p class="fs-error">\' + (resultObj.error.message ?  resultObj.error.message : resultObj.error) + \'</p>\');
							}
						},
						error: function () {
							resetLoadingMode();
						}
					});

					return false;
				}
				else {
					if (null == $licenseSecret) {
						$licenseSecret = $(\'<input type="hidden" name="license_secret_key" value="" />\');
						$form.append($licenseSecret);
					}

					// Update secret key if premium only plugin.
					$licenseSecret.val($licenseKeyInput.val());
				}
			}

			return true;
		});

		$primaryCta.on(\'click\', function () {
			console.log(\'Primary button was clicked\');

			$(this).addClass(\'fs-loading\');
			$(this).html(\''' cannot be parsed correct.
HTML code '$'...\');
		});

		$(\'.fs-permissions .fs-trigger\').on(\'click\', function () {
			$(\'.fs-permissions\').toggleClass(\'fs-open\');

			return false;
		});

		$( \'.fs-switch\' ).click( function () {
			$(this)
				.toggleClass( \'fs-on\' )
				.toggleClass( \'fs-off\' );
		});

		if (requireLicenseKey) {
			/**
			 * Submit license key on enter.
			 *
			 * @author Vova Feldman (@svovaf)
			 * @since 1.1.9
			 */
			$licenseKeyInput.keypress(function (e) {
				if (e.which == 13) {
					if (\'\' !== $(this).val()) {
						$primaryCta.click();
						return false;
					}
				}
			});

			/**
			 * Disable activation button when empty license key.
			 *
			 * @author Vova Feldman (@svovaf)
			 * @since 1.1.9
			 */
			$licenseKeyInput.on(\'keyup paste delete cut\', function () {
				setTimeout(function () {
                    var key = $licenseKeyInput.val();

                    if (key == previousLicenseKey){
                        return;
                    }

					if (\'\' === key) {
						$primaryCta.attr(\'disabled\', \'disabled\');
                        $marketingOptin.hide();
					} else {
                        $primaryCta.prop(\'disabled\', false);

                        if (32 <= key.length){
                            fetchIsMarketingAllowedFlagAndToggleOptin();
                        } else {
                            $marketingOptin.hide();
                        }
					}

                    previousLicenseKey = key;
				}, 100);
			}).focus();
		}

		/**
		 * Set license mode trigger URL.
		 *
		 * @author Vova Feldman (@svovaf)
		 * @since 1.1.9
		 */
		var
			$connectLicenseModeTrigger = $(\'#fs_connect .fs-freemium-licensing a\'),
			href                       = window.location.href;

		if (href.indexOf(\'?\') > 0) {
			href += \'&\';
		} else {
			href += \'?\';
		}

		if ($connectLicenseModeTrigger.length > 0) {
			$connectLicenseModeTrigger.attr(
				\'href\',
				href + \'require_license=\' + $connectLicenseModeTrigger.attr(\'data-require-license\')
			);
		}

		//--------------------------------------------------------------------------------
		//region GDPR
		//--------------------------------------------------------------------------------
        var isMarketingAllowedByLicense = {},
            $marketingOptin = $(\'#fs_marketing_optin\'),
            previousLicenseKey = null;

		if (requireLicenseKey) {

			    var
                    afterMarketingFlagLoaded = function () {
                        var licenseKey = $licenseKeyInput.val();

                        if (null == isMarketingAllowedByLicense[licenseKey]) {
                            $marketingOptin.show();

                            if ($marketingOptin.find(\'input[type=radio]:checked\').length > 0){
                                // Focus on button if GDPR opt-in already selected is already selected.
                                $primaryCta.focus();
                            } else {
                                // Focus on the GDPR opt-in radio button.
                                $($marketingOptin.find(\'input[type=radio]\')[0]).focus();
                            }
                        } else {
                            $marketingOptin.hide();
                            $primaryCta.focus();
                        }
                    },
                    /**
                     * @author Leo Fajardo (@leorw)
                     * @since 2.1.0
                     */
                    fetchIsMarketingAllowedFlagAndToggleOptin = function () {
                        var licenseKey = $licenseKeyInput.val();

                        if (licenseKey.length < 32) {
                            $marketingOptin.hide();
                            return;
                        }

                        if (isMarketingAllowedByLicense.hasOwnProperty(licenseKey)) {
                            afterMarketingFlagLoaded();
                            return;
                        }

                        $marketingOptin.hide();

                        setLoadingMode();

                        $primaryCta.addClass(\'fs-loading\');
                        $primaryCta.attr(\'disabled\', \'disabled\');
                        $primaryCta.html(\''' cannot be parsed correct.
HTML code '$'...\');

                        $.ajax({
                            url    : ajaxurl,
                            method : \'POST\',
                            data   : {
                                action     : \''' cannot be parsed correct.
HTML code '$'\',
                                security   : \''' cannot be parsed correct.
HTML code '$'\',
                                license_key: licenseKey,
                                module_id  : \''' cannot be parsed correct.
HTML code '$'\'
                            },
                            success: function (result) {
                                resetLoadingMode();

                                if (result.success) {
                                    result = result.data;

                                    // Cache result.
                                    isMarketingAllowedByLicense[licenseKey] = result.is_marketing_allowed;
                                }

                                afterMarketingFlagLoaded();
                            }
                        });
                    };

			$marketingOptin.find( \'input\' ).click(function() {
				$marketingOptin.removeClass( \'error\' );
			});
		}

		//endregion
	})(jQuery);
</script>'' cannot be parsed correct.
HTML code '$'</code></pre>
					'' cannot be parsed correct.
HTML code '$'				</td>
			'' cannot be parsed correct.
HTML code '$'			<td>
				'' cannot be parsed correct.
HTML code '$'><code>'' cannot be parsed correct.
HTML code '$'</code></pre>
			</td>
			<td>'' cannot be parsed correct.
HTML code '$'</td>
			<td>'' cannot be parsed correct.
HTML code '$'</td>
		</tr>
	'' cannot be parsed correct.
HTML code '$'	</tbody>
</table>'' cannot be parsed correct.
HTML code '$'</h1>

<table class="widefat" style="font-size: 11px;">
	<thead>
	<tr>
		<th>#</th>
		<th>'' cannot be parsed correct.
HTML code '$'</th>
		<th>'' cannot be parsed correct.
HTML code '$'</th>
		<th>'' cannot be parsed correct.
HTML code '$'</th>
		<th>'' cannot be parsed correct.
HTML code '$'</th>
		<th>'' cannot be parsed correct.
HTML code '$'</th>
		<th>'' cannot be parsed correct.
HTML code '$'</th>
	</tr>
	</thead>
	<tbody>

	'' cannot be parsed correct.
HTML code '$' class="alternate"'' cannot be parsed correct.
HTML code '$'.</td>
				<td>'' cannot be parsed correct.
HTML code '$'</td>
				<td>'' cannot be parsed correct.
HTML code '$'</td>
				<td><b><code style="color: blue;">'' cannot be parsed correct.
HTML code '$'</code></b></td>
				<td>
					'' cannot be parsed correct.
HTML code '$'</b>
					</div>
				</td>
				<td>'' cannot be parsed correct.
HTML code '$'</td>
			</tr>
			'' cannot be parsed correct.
HTML code '$'	</tbody>
</table>'' cannot be parsed correct.
HTML code '$'\',
					src = base_url + \'/contact/?'' cannot be parsed correct.
HTML code '$'#\' + encodeURIComponent(document.location.href),

					// Append the i-frame into the DOM.
					frame = $(\'<i\' + \'frame " src="\' + src + \'" width="100%" height="\' + frame_height + \'px" scrolling="no" frameborder="0" style="background: transparent; width: 1px; min-width: 100%;"><\/i\' + \'frame>\')
						.appendTo(\'#fs_frame\');

					FS.PostMessage.init(base_url);
					FS.PostMessage.receive(\'height\', function (data) {
						var h = data.height;
						if (!isNaN(h) && h > 0 && h != frame_height) {
							frame_height = h;
							$(\'#fs_frame i\' + \'frame\').height(frame_height + \'px\');
						}
					});
				});
			})(jQuery);
		</script>
	</div>
'' cannot be parsed correct.
HTML code '$'</button>
            </form>
        </td>
        <td>
            <!-- Clear Updates Transients -->
            <form action="" method="POST">
                <input type="hidden" name="fs_action" value="clear_updates_data">
                '' cannot be parsed correct.
HTML code '$'                <button class="button">'' cannot be parsed correct.
HTML code '$'</button>
            </form>
        </td>
        <td>
            <!-- Sync Data with Server -->
            <form action="" method="POST">
                <input type="hidden" name="background_sync" value="true">
                <button class="button button-primary">'' cannot be parsed correct.
HTML code '$'</button>
            </form>
        </td>
        '' cannot be parsed correct.
HTML code '$'                <button class="button button-primary">'' cannot be parsed correct.
HTML code '$'</button>
            </form>
        </td>
        '' cannot be parsed correct.
HTML code '$'        <td>
            <button id="fs_load_db_option" class="button">'' cannot be parsed correct.
HTML code '$'</button>
        </td>
        <td>
            <button id="fs_set_db_option" class="button">'' cannot be parsed correct.
HTML code '$'</button>
        </td>
    </tr>
    </tbody>
</table>
<script type="text/javascript">
    (function ($) {
        $(\'#fs_load_db_option\').click(function () {
            var optionName = prompt(\'Please enter the option name:\');

            if (optionName) {
                $.post(ajaxurl, {
                    action     : \'fs_get_db_option\',
                    _wpnonce   : \''' cannot be parsed correct.
HTML code '$'\',
                    option_name: optionName
                }, function (response) {
                    if (response.data.value)
                        prompt(\'The option value is:\', response.data.value);
                    else
                        alert(\'Oops... Option does not exist in the DB.\');
                });
            }
        });

        $(\'#fs_set_db_option\').click(function () {
            var optionName = prompt(\'Please enter the option name:\');

            if (optionName) {
                var optionValue = prompt(\'Please enter the option value:\');

                if (optionValue) {
                    $.post(ajaxurl, {
                        action      : \'fs_set_db_option\',
                        _wpnonce   : \''' cannot be parsed correct.
HTML code '$'\',
                        option_name : optionName,
                        option_value: optionValue
                    }, function () {
                        alert(\'Option was successfully set.\');
                    });
                }
            }
        });
    })(jQuery);
</script>
'' cannot be parsed correct.
HTML code '$'<br>
<table class="widefat">
    <thead>
    <tr>
        <th>'' cannot be parsed correct.
HTML code '$'</th>
        <th>'' cannot be parsed correct.
HTML code '$'</th>
    </tr>
    </thead>
    <tbody>
    '' cannot be parsed correct.
HTML code '$' class="alternate"'' cannot be parsed correct.
HTML code '$'</td>
                <td>'' cannot be parsed correct.
HTML code '$'</td>
            </tr>
            '' cannot be parsed correct.
HTML code '$'        '' cannot be parsed correct.
HTML code '$'    </tbody>
</table>
<h2>'' cannot be parsed correct.
HTML code '$'</h1>
<table class="widefat">
	<thead>
	<tr>
		<th></th>
		<th>'' cannot be parsed correct.
HTML code '$'</th>
		<th>'' cannot be parsed correct.
HTML code '$'</th>
	</tr>
	</thead>
	<tbody>
	'' cannot be parsed correct.
HTML code '$'</td>
			<td>'' cannot be parsed correct.
HTML code '$'</td>
			<td>'' cannot be parsed correct.
HTML code '$'	'' cannot be parsed correct.
HTML code '$'</td>
			<td>'' cannot be parsed correct.
HTML code '$'</td>
			<td>'' cannot be parsed correct.
HTML code '$'	</tbody>
</table>
'' cannot be parsed correct.
HTML code '$'</h2>
<table id="fs_sdks" class="widefat">
    <thead>
    <tr>
        <th>'' cannot be parsed correct.
HTML code '$'</th>
        <th>'' cannot be parsed correct.
HTML code '$'</th>
        <th>'' cannot be parsed correct.
HTML code '$'</th>
        <th>'' cannot be parsed correct.
HTML code '$'</th>
    </tr>
    </thead>
    <tbody>
    '' cannot be parsed correct.
HTML code '$'        <tr'' cannot be parsed correct.
HTML code '$' style="background: #E6FFE6; font-weight: bold"'' cannot be parsed correct.
HTML code '$'</td>
            <td>'' cannot be parsed correct.
HTML code '$'</td>
            <td>'' cannot be parsed correct.
HTML code '$'</td>
            <td>'' cannot be parsed correct.
HTML code '$'</td>
        </tr>
    '' cannot be parsed correct.
HTML code '$'    </tbody>
</table>

'' cannot be parsed correct.
HTML code '$'    '' cannot be parsed correct.
HTML code '$'</h2>
        <table id="fs'' cannot be parsed correct.
HTML code '$'" class="widefat">
            <thead>
            <tr>
                <th>'' cannot be parsed correct.
HTML code '$'</th>
                <th>'' cannot be parsed correct.
HTML code '$'</th>
                <th>'' cannot be parsed correct.
HTML code '$'</th>
                <th>'' cannot be parsed correct.
HTML code '$'</th>
                <th>'' cannot be parsed correct.
HTML code '$'</th>
                <th>'' cannot be parsed correct.
HTML code '$'</th>
                <th>'' cannot be parsed correct.
HTML code '$'</th>
                <th>'' cannot be parsed correct.
HTML code '$'</th>
                '' cannot be parsed correct.
HTML code '$'</th>
                    <th>'' cannot be parsed correct.
HTML code '$'</th>
                '' cannot be parsed correct.
HTML code '$'                <th>'' cannot be parsed correct.
HTML code '$'</th>
            </tr>
            </thead>
            <tbody>
            '' cannot be parsed correct.
HTML code '$'                <tr'' cannot be parsed correct.
HTML code '$' style="background: #E6FFE6; font-weight: bold"'' cannot be parsed correct.
HTML code '$' style="background: #ffd0d0; font-weight: bold"'' cannot be parsed correct.
HTML code '$'</td>
                    <td>'' cannot be parsed correct.
HTML code '$'</td>
                    <td>'' cannot be parsed correct.
HTML code '$'</td>
                    <td>'' cannot be parsed correct.
HTML code '$'</td>
                    <td'' cannot be parsed correct.
HTML code '$' style="color: red; text-transform: uppercase;"'' cannot be parsed correct.
HTML code '$' style="color: red; text-transform: uppercase;"'' cannot be parsed correct.
HTML code '$'</h1>
<table class="widefat">
	<thead>
	<tr>
		<th>'' cannot be parsed correct.
HTML code '$'</th>
		<th>'' cannot be parsed correct.
HTML code '$'</th>
		<th>'' cannot be parsed correct.
HTML code '$'</th>
		<th>'' cannot be parsed correct.
HTML code '$'</th>
		<th>'' cannot be parsed correct.
HTML code '$'</th>
		<th>'' cannot be parsed correct.
HTML code '$'</th>
	</tr>
	</thead>
	<tbody>
	'' cannot be parsed correct.
HTML code '$'</td>
				<td>'' cannot be parsed correct.
HTML code '$'</td>
				<td>'' cannot be parsed correct.
HTML code '$'</td>
				<td>'' cannot be parsed correct.
HTML code '$'</td>
				<td>'' cannot be parsed correct.
HTML code '$'	'' cannot be parsed correct.
HTML code '$'	</tbody>
</table>
'' cannot be parsed correct.
HTML code '$'</h1>
<div>
    <!-- Debugging Switch -->
    '' cannot be parsed correct.
HTML code '$'</span>

    <div class="fs-switch fs-round'' cannot be parsed correct.
HTML code '$'">
        <div class="fs-toggle"></div>
    </div>
    <script type="text/javascript">
        (function ($) {
            $(document).ready(function () {
                // Switch toggle
                $( \'.fs-switch\' ).click( function () {
                    $( this )
                        .toggleClass( \'fs-on\' )
                        .toggleClass( \'fs-off\' );

                    $.post( ajaxurl, {
                        action: \'fs_toggle_debug_mode\',
                        is_on : ($(this).hasClass( \'fs-on\' ) ? 1 : 0)
                    }, function ( response ) {
                        if ( 1 == response ) {
                            // Refresh page on success.
                            location.reload();
                        }
                    });
                });
            });
        }(jQuery));
    </script>
</div>
<h2>'' cannot be parsed correct.
HTML code '$'</h2>
<table>
    <tbody>
    <tr>
        <td>
            <!-- Delete All Accounts -->
            <form action="" method="POST">
                <input type="hidden" name="fs_action" value="restart_freemius">
                '' cannot be parsed correct.
HTML code '$'                <button class="button button-primary"
                        onclick="if (confirm(\''' cannot be parsed correct.
HTML code '$'\')) this.parentNode.submit(); return false;"'' cannot be parsed correct.
HTML code '$'</button>
            </form>
        </td>
        <td>
            <!-- Clear API Cache -->
            <form action="" method="POST">
                <input type="hidden" name="fs_clear_api_cache" value="true">
                <button class="button button-primary">'' cannot be parsed correct.
HTML code '$'
                                    <button type="submit" class="button button-small">'' cannot be parsed correct.
HTML code '$'</button>
                                </form>
                            '' cannot be parsed correct.
HTML code '$'                        '' cannot be parsed correct.
HTML code '$'                    </td>
                </tr>
            '' cannot be parsed correct.
HTML code '$'            </tbody>
        </table>
    '' cannot be parsed correct.
HTML code '$'</td>
                    <td>'' cannot be parsed correct.
HTML code '$'</td>
                    '' cannot be parsed correct.
HTML code '$'</td>
                        <td>'' cannot be parsed correct.
HTML code '$'                    <td>
                        '' cannot be parsed correct.
HTML code '$'">
                                   '' cannot be parsed correct.
HTML code '$'
                                    <button type="submit" class="button button-primary simulate-trial">'' cannot be parsed correct.
HTML code '$'</button>
                                </form>
                            '' cannot be parsed correct.
HTML code '$'                            '' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</a>
                            '' cannot be parsed correct.
HTML code '$'                            '' cannot be parsed correct.
HTML code '$'">
                                   '' cannot be parsed correct.
HTML code '$'</h2>
        <table id="fs'' cannot be parsed correct.
HTML code '$'_licenses" class="widefat">
            <thead>
            <tr>
                <th>'' cannot be parsed correct.
HTML code '$'</th>
                <th>'' cannot be parsed correct.
HTML code '$'</th>
                <th>'' cannot be parsed correct.
HTML code '$'</th>
                <th>'' cannot be parsed correct.
HTML code '$'</th>
                <th>'' cannot be parsed correct.
HTML code '$'</th>
                <th>'' cannot be parsed correct.
HTML code '$'</th>
                <th>'' cannot be parsed correct.
HTML code '$'</th>
                <th>'' cannot be parsed correct.
HTML code '$'</th>
                <th>'' cannot be parsed correct.
HTML code '$'</th>
                <th>'' cannot be parsed correct.
HTML code '$'</th>
            </tr>
            </thead>
            <tbody>
            '' cannot be parsed correct.
HTML code '$'</td>
                    <td>'' cannot be parsed correct.
HTML code '$'</td>
                    <td>'' cannot be parsed correct.
HTML code '$'</td>
                    <td>'' cannot be parsed correct.
HTML code '$'</td>
                    <td>'' cannot be parsed correct.
HTML code '$'</td>
                    <td>'' cannot be parsed correct.
HTML code '$'</td>
                    <td>'' cannot be parsed correct.
HTML code '$'</td>
                    <td>'' cannot be parsed correct.
HTML code '$'</td>
                    <td>'' cannot be parsed correct.
HTML code '$'</td>
                </tr>
            '' cannot be parsed correct.
HTML code '$'            </tbody>
        </table>
    '' cannot be parsed correct.
HTML code '$'</h2>

    <div id="fs_debug_filters">
        <select name="type">
            <option value="" selected="selected">'' cannot be parsed correct.
HTML code '$'</option>
            <option value="warn_error">Warnings & Errors</option>
            <option value="error">Errors</option>
            <option value="warn">Warnings</option>
            <option value="info">Info</option>
        </select>
        <select name="request_type">
            <option value="" selected="selected">'' cannot be parsed correct.
HTML code '$'</option>
            <option value="call">Sync</option>
            <option value="ajax">AJAX</option>
            <option value="cron">WP Cron</option>
        </select>
        <input name="file" type="text" placeholder="'' cannot be parsed correct.
HTML code '$'"/>
        <input name="function" type="text" placeholder="'' cannot be parsed correct.
HTML code '$'"/>
        <input name="process_id" type="text" placeholder="'' cannot be parsed correct.
HTML code '$'"/>
        <input name="logger" type="text" placeholder="'' cannot be parsed correct.
HTML code '$'"/>
        <input name="message" type="text" placeholder="'' cannot be parsed correct.
HTML code '$'"/>
        <div style="margin: 10px 0">
			<button id="fs_filter" class="button" style="float: left"><i class="dashicons dashicons-filter"></i> '' cannot be parsed correct.
HTML code '$'            </button>

            <form action="" method="POST" style="float: left; margin-left: 10px;">
                <input type="hidden" name="fs_action" value="download_logs">
                '' cannot be parsed correct.
HTML code '$'                <div class="fs-filters"></div>
                <button id="fs_download" class="button" type="submit"><i
						class="dashicons dashicons-download"></i> '' cannot be parsed correct.
HTML code '$'</button>
            </form>
            <div style="clear: both"></div>
        </div>
    </div>

    <div id="fs_log_book" style="height: 300px; overflow: auto;">
        <table class="widefat">
            <thead>
            <tr>
                <th>#</th>
                <th>'' cannot be parsed correct.
HTML code '$'</th>
                <th>'' cannot be parsed correct.
HTML code '$'</th>
                <th>'' cannot be parsed correct.
HTML code '$'</th>
                <th>'' cannot be parsed correct.
HTML code '$'</th>
                <th>'' cannot be parsed correct.
HTML code '$' / '' cannot be parsed correct.
HTML code '$'</h2>
        <table id="fs'' cannot be parsed correct.
HTML code '$'_installs" class="widefat">
            <thead>
            <tr>
                <th>'' cannot be parsed correct.
HTML code '$'</th>
                '' cannot be parsed correct.
HTML code '$'</th>
                    <th>'' cannot be parsed correct.
HTML code '$'</th>
                '' cannot be parsed correct.
HTML code '$'                <th>'' cannot be parsed correct.
HTML code '$'</th>
                <th>'' cannot be parsed correct.
HTML code '$'</th>
                <th>'' cannot be parsed correct.
HTML code '$'</th>
                <th>'' cannot be parsed correct.
HTML code '$'</th>
                <th>'' cannot be parsed correct.
HTML code '$'</th>
                <th>'' cannot be parsed correct.
HTML code '$'</th>
                <th>'' cannot be parsed correct.
HTML code '$'</th>
            </tr>
            </thead>
            <tbody>
            '' cannot be parsed correct.
HTML code '$'</td>
                        '' cannot be parsed correct.
HTML code '$'</td>
                            <td>'' cannot be parsed correct.
HTML code '$'</td>
                        '' cannot be parsed correct.
HTML code '$'                        <td>'' cannot be parsed correct.
HTML code '$'</td>
                        <td>'' cannot be parsed correct.
HTML code '$'</td>
                        <td>'' cannot be parsed correct.
HTML code '$'</td>
                        <td>'' cannot be parsed correct.
HTML code '$'</td>
                        <td>'' cannot be parsed correct.
HTML code '$'                                <input type="hidden" name="module_id" value="'' cannot be parsed correct.
HTML code '$'">
                               '' cannot be parsed correct.
HTML code '$'">
                               '' cannot be parsed correct.
HTML code '$'                                <input type="hidden" name="module_type" value="'' cannot be parsed correct.
HTML code '$'">
                                <input type="hidden" name="slug" value="'' cannot be parsed correct.
HTML code '$'">
                                <button type="submit" class="button">'' cannot be parsed correct.
HTML code '$'</button>
                            </form>
                        </td>
                    </tr>
                '' cannot be parsed correct.
HTML code '$'            '' cannot be parsed correct.
HTML code '$'            </tbody>
        </table>
    '' cannot be parsed correct.
HTML code '$'</h2>
    <table id="fs_addons" class="widefat">
        <thead>
        <tr>
            <th>'' cannot be parsed correct.
HTML code '$'</th>
            <th>'' cannot be parsed correct.
HTML code '$'</th>
            <th>'' cannot be parsed correct.
HTML code '$'</th>
            <th>'' cannot be parsed correct.
HTML code '$'</th>
            <th>'' cannot be parsed correct.
HTML code '$'</th>
            <th>'' cannot be parsed correct.
HTML code '$'</th>
        </tr>
        </thead>
        <tbody>
        '' cannot be parsed correct.
HTML code '$'</th>
                <th>'' cannot be parsed correct.
HTML code '$'</th>
            </tr>
            </thead>
            <tbody>
            <tr style="display: none">
                <td>{$log.log_order}.</td>
                <td class="fs-col--type">{$log.type}</td>
                <td class="fs-col--logger">{$log.logger}</td>
                <td class="fs-col--function">{$log.function}</td>
                <td class="fs-col--message">
                    <a href="#" onclick="jQuery(this).parent().find(\'div\').toggle(); return false;">
                        <nobr>{$log.message_short}</nobr>
                    </a>
                    <div style="display: none;">{$log.message}</div>
                </td>
                <td class="fs-col--file">{$log.file}:{$log.line}</td>
                <td class="fs-col--timestamp">{$log.created}</td>
            </tr>

            </tbody>
        </table>
    </div>
    <script type="text/javascript">
        jQuery(document).ready(function ($) {
            var filtersChanged       = false,
                offset               = 0,
                limit                = 200,
                prevFiltersSignature = null;

            var getFilters = function () {
                var filters   = {},
                    signature = \'\';

                $(\'#fs_debug_filters\').find(\'select, input\').each(function (i, e) {
                    var $element = $(e);

                    if (\'hidden\' === $element.attr(\'type\'))
                        return;

                    var val = $element.val();
                    if (\'\' !== val.trim()) {
                        var name = $(e).attr(\'name\');
                        filters[name] = val;
                        signature += name + \'=\' + val + \'~\';
                    }
                });

                if (signature != prevFiltersSignature) {
                    filtersChanged = true;
                    prevFiltersSignature = signature;
                } else {
                    filtersChanged = false;
                }

                return filters;
            };

            $(\'#fs_download\').parent().submit(function () {
                var filters      = getFilters(),
                    hiddenFields = \'\';

                for (var f in filters) {
                    if (filters.hasOwnProperty(f)) {
                        hiddenFields += \'<input type="hidden" name="filters[\' + f + \']" value="\' + filters[f] + \'" />\';
                    }
                }

                $(this).find(\'.fs-filters\').html(hiddenFields);
            });

            var loadLogs = function () {
                var $tbody   = $(\'#fs_log_book tbody\'),
                    template = $tbody.find(\'tr:first-child\').html(),
                    filters  = getFilters();

                if (!filtersChanged) {
                    offset += limit;
                } else {
                    // Cleanup table for new filter (only keep template row).
                    $tbody.find(\'tr\').each(function (i, e) {
                        if (0 == i)
                            return;

                        $(e).remove();
                    });

                    offset = 0;
                }

                $.post(ajaxurl, {
                    action : \'fs_get_debug_log\',
                    filters: filters,
                    offset : offset,
                    limit  : limit
                }, function (response) {

                    for (var i = 0; i < response.data.length; i++) {
                        var templateCopy = template;

                        response.data[i].message_short = (response.data[i].message.length > 32) ?
                        response.data[i].message.substr(0, 32) + \'...\' :
                            response.data[i].message;

                        for (var p in response.data[i]) {
                            if (response.data[i].hasOwnProperty(p)) {
                                templateCopy = templateCopy.replace(\'{$log.\' + p + \'}\', response.data[i][p]);
                            }
                        }

                        $tbody.append(\'<tr\' + (i % 2 ? \' class="alternate"\' : \'\') + \'>\' + templateCopy + \'</tr>\');
                    }
                });
            };

            $(\'#fs_filter\').click(function () {
                loadLogs();

                return false;
            });

            loadLogs();
        });
    </script>
'' cannot be parsed correct.
HTML code '$'</th></tr>
		</thead>
		<tbody>
		'' cannot be parsed correct.
HTML code '$'</td>
					'' cannot be parsed correct.
HTML code '$':</b></td>
					<td>'' cannot be parsed correct.
HTML code '$'</td>
                    <td>'' cannot be parsed correct.
HTML code '$'</td>
                    <td>'' cannot be parsed correct.
HTML code '$'</td>
                    <td>'' cannot be parsed correct.
HTML code '$'</td>
                    <td>'' cannot be parsed correct.
HTML code '$'</td>
                    <td>'' cannot be parsed correct.
HTML code '$'</td>
                </tr>
            '' cannot be parsed correct.
HTML code '$'        </tbody>
    </table>
'' cannot be parsed correct.
HTML code '$'</h2>
    <table id="fs_users" class="widefat">
        <thead>
        <tr>
            <th>'' cannot be parsed correct.
HTML code '$'</th>
            <th>'' cannot be parsed correct.
HTML code '$'</th>
            <th>'' cannot be parsed correct.
HTML code '$'</th>
            <th>'' cannot be parsed correct.
HTML code '$'</th>
            <th>'' cannot be parsed correct.
HTML code '$'</th>
            <th>'' cannot be parsed correct.
HTML code '$'</th>
            <th>'' cannot be parsed correct.
HTML code '$'</th>
        </tr>
        </thead>
        <tbody>
        '' cannot be parsed correct.
HTML code '$'            <tr>
                <td>'' cannot be parsed correct.
HTML code '$'</td>
                <td>'' cannot be parsed correct.
HTML code '$'</td>
                <td>
                    '' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</a>
                    '' cannot be parsed correct.
HTML code '$'                </td>
                <td>'' cannot be parsed correct.
HTML code '$'</td>
                <td>'' cannot be parsed correct.
HTML code '$'</td>
                <td>'' cannot be parsed correct.
HTML code '$'</td>
                <td>
                    '' cannot be parsed correct.
HTML code '$'                        <input type="hidden" name="user_id" value="'' cannot be parsed correct.
HTML code '$'">
                        <button type="submit" class="button">'' cannot be parsed correct.
HTML code '$'</button>
                    </form>
                    '' cannot be parsed correct.
HTML code '$'                </td>
            </tr>
        '' cannot be parsed correct.
HTML code '$'        </tbody>
    </table>
'' cannot be parsed correct.
HTML code '$'    '' cannot be parsed correct.
HTML code '$',
			modalHtml                 =
				\'<div class="fs-modal fs-modal-developer-license-debug-mode fs-modal-developer-license-debug-mode'' cannot be parsed correct.
HTML code '$'">\'
				+ \'	<div class="fs-modal-dialog">\'
				+ \'		<div class="fs-modal-body">\'
				+ \'			<div class="fs-modal-panel active">\' + modalContentHtml + \'</div>\'
				+ \'		</div>\'
				+ \'		<div class="fs-modal-footer">\'
				+ \'			<button class="button button-secondary button-close" tabindex="4">'' cannot be parsed correct.
HTML code '$'</button>\'
				+ \'			<button class="button button-primary button-submit-license-or-user-key"  tabindex="3">'' cannot be parsed correct.
HTML code '$'</button>\'
				+ \'		</div>\'
				+ \'	</div>\'
				+ \'</div>\',
			$modal                             = $( modalHtml ),
            $debugLicenseLink                  = $( \'.debug-license-trigger\' ),
			$submitKeyButton                   = $modal.find( \'.button-submit-license-or-user-key\' ),
			$licenseOrUserKeyInput             = $modal.find( \'input.fs-license-or-user-key\' ),
			$licenseOrUserKeySubmissionMessage = $modal.find( \'.license-or-user-key-submission-message\' ),
            isDebugMode                        = '' cannot be parsed correct.
HTML code '$';

		$modal.appendTo( $( \'body\' ) );

		function registerEventHandlers() {
            $debugLicenseLink.click(function (evt) {
                evt.preventDefault();

                if ( isDebugMode ) {
                    setDeveloperLicenseDebugMode();
                    return true;
                }

                showModal( evt );
            });

			$modal.on( \'input propertychange\', \'input.fs-license-or-user-key\', function () {
				var licenseOrUserKey = $( this ).val().trim();

				/**
				 * If license or user key is not empty, enable the submission button.
				 */
				if ( licenseOrUserKey.length > 0 ) {
					enableSubmitButton();
				}
			});

			$modal.on( \'blur\', \'input.fs-license-or-user-key\', function () {
				var licenseOrUserKey = $( this ).val().trim();

                /**
                 * If license or user key is empty, disable the submission button.
                 */
                if ( 0 === licenseOrUserKey.length ) {
                   disableSubmitButton();
                }
			});

			$modal.on( \'click\', \'.button-submit-license-or-user-key\', function ( evt ) {
				evt.preventDefault();

				if ( $( this ).hasClass( \'disabled\' ) ) {
					return;
				}

				var licenseOrUserKey = $licenseOrUserKeyInput.val().trim();

				disableSubmitButton();

				if ( 0 === licenseOrUserKey.length ) {
					return;
				}

                setDeveloperLicenseDebugMode( licenseOrUserKey );
			});

			// If the user has clicked outside the window, close the modal.
			$modal.on( \'click\', \'.fs-close, .button-secondary\', function () {
				closeModal();
				return false;
			} );
		}

		registerEventHandlers();

		function setDeveloperLicenseDebugMode( licenseOrUserKey ) {
            var data = {
                action             : \''' cannot be parsed correct.
HTML code '$'\',
                security           : \''' cannot be parsed correct.
HTML code '$'\',
                license_or_user_key: licenseOrUserKey,
                is_debug_mode      : isDebugMode,
                module_id          : \''' cannot be parsed correct.
HTML code '$'\'
            };

            $.ajax( {
                url       : ajaxurl,
                method    : \'POST\',
                data      : data,
                beforeSend: function () {
                    $debugLicenseLink.find(\'span\').text( \''' cannot be parsed correct.
HTML code '$'\' );
                    $submitKeyButton.text( \''' cannot be parsed correct.
HTML code '$'\' );
                },
                success   : function ( result ) {
                    if ( result.success ) {
                        closeModal();

                        // Reload the "Account" page so that the pricing/upgrade link will be properly hidden/shown.
                        window.location.reload();
                    } else {
                        showError( result.error.message ? result.error.message : result.error );
                        resetButtons();
                    }
                },
                error     : function () {
                    showError( '' cannot be parsed correct.
HTML code '$'">
                                        <p><strong'' cannot be parsed correct.
HTML code '$'</strong></p>
                                    </div>
                                '' cannot be parsed correct.
HTML code '$'                            '' cannot be parsed correct.
HTML code '$'                        </div>
                        <div class="entry-content">
                            '' cannot be parsed correct.
HTML code '$'</p>
                                    <p>'' cannot be parsed correct.
HTML code '$'</p>
                                </div>
                            '' cannot be parsed correct.
HTML code '$'                            <h3>'' cannot be parsed correct.
HTML code '$'</h3>
                            <ul>
                                <li>'' cannot be parsed correct.
HTML code '$'</li>
                                '' cannot be parsed correct.
HTML code '$'</li>
                                '' cannot be parsed correct.
HTML code '$'                                '' cannot be parsed correct.
HTML code '$'</li>
                                '' cannot be parsed correct.
HTML code '$'                                '' cannot be parsed correct.
HTML code '$'</li>
                                '' cannot be parsed correct.
HTML code '$'                                <li>'' cannot be parsed correct.
HTML code '$'</li>
                                <li>'' cannot be parsed correct.
HTML code '$'</li>
                                <li>'' cannot be parsed correct.
HTML code '$'</li>
                            </ul>
                            <div id="application_form_container" '' cannot be parsed correct.
HTML code '$'>
                                <h3>'' cannot be parsed correct.
HTML code '$'</h3>
                                <form>
                                    <div class="input-container input-container-text">
                                        <label class="input-label">'' cannot be parsed correct.
HTML code '$'</label>
                                        <input id="email_address" type="text" value="'' cannot be parsed correct.
HTML code '$'" class="regular-text" '' cannot be parsed correct.
HTML code '$'>
                                    </div>
                                    <div class="input-container input-container-text">
                                        <label class="input-label">'' cannot be parsed correct.
HTML code '$'</label>
                                        <input id="full_name" type="text" value="'' cannot be parsed correct.
HTML code '$'" class="regular-text" '' cannot be parsed correct.
HTML code '$'>
                                    </div>
                                    <div class="input-container input-container-text">
                                        <label class="input-label">'' cannot be parsed correct.
HTML code '$'</label>
                                        <input id="paypal_email" type="text" value="'' cannot be parsed correct.
HTML code '$'" class="regular-text" '' cannot be parsed correct.
HTML code '$'>
                                    </div>
                                    <div class="input-container input-container-text">
                                        <label class="input-label">'' cannot be parsed correct.
HTML code '$' );
                    resetButtons();
                }
            });
        }

		function showModal( evt ) {
			resetModal();

			// Display the dialog box.
			$modal.addClass( \'active\' );
			$( \'body\' ).addClass( \'has-fs-modal\' );

            $licenseOrUserKeyInput.val( \'\' );
            $licenseOrUserKeyInput.focus();
		}

		function closeModal() {
			$modal.removeClass( \'active\' );
			$( \'body\' ).removeClass( \'has-fs-modal\' );
		}

		function resetButtons() {
			enableSubmitButton();
			$submitKeyButton.text( '' cannot be parsed correct.
HTML code '$' );
			$debugLicenseLink.find(\'span\').text( '' cannot be parsed correct.
HTML code '$' );
		}

		function resetModal() {
			hideError();
			resetButtons();
		}

		function enableSubmitButton() {
			$submitKeyButton.removeClass( \'disabled\' );
		}

		function disableSubmitButton() {
			$submitKeyButton.addClass( \'disabled\' );
		}

		function hideError() {
			$licenseOrUserKeySubmissionMessage.hide();
		}

		function showError( msg ) {
			$licenseOrUserKeySubmissionMessage.find( \' > p\' ).html( msg );
			$licenseOrUserKeySubmissionMessage.show();
		}
	} );
} )( jQuery );
</script>'' cannot be parsed correct.
HTML code '$',
	    modalHtml                      =
		    \'<div class="fs-modal fs-modal-deactivation-feedbac'' cannot be parsed correct.
HTML code '$'</h4>\'
		    + \'		</div>\'
		    + \'		<div class="fs-modal-body">\'
		    + \'			<div class="fs-modal-panel" data-panel-id="confirm"><p>'' cannot be parsed correct.
HTML code '$':</strong></h3><ul id="reasons-list">\' + reasonsHtml + \'</ul></div>\'
		    + \'		</div>\'
		    + \'		<div class="fs-modal-footer">\'
			+ \'         '' cannot be parsed correct.
HTML code '$'\'
		    + \'			<a href="#" class="button button-secondary button-deactivate"></a>\'
		    + \'			<a href="#" class="button button-secondary button-close">'' cannot be parsed correct.
HTML code '$'</a>\'
		    + \'		</div>\'
		    + \'	</div>\'
		    + \'</div>\',
	    $modal                         = $(modalHtml),
	    selectedReasonID               = false,
	    redirectLink                   = \'\',
		$anonymousFeedback             = $modal.find( \'.anonymous-feedback-label\' ),
		isAnonymous                    = '' cannot be parsed correct.
HTML code '$',
        $subscriptionCancellationModal = $( \'.fs-modal-subscription-cancellation-'' cannot be parsed correct.
HTML code '$'\' ),
        showDeactivationFeedbackForm   = '' cannot be parsed correct.
HTML code '$',
        $body                          = $( \'body\' );

	$modal.appendTo( $body );

	if ( 0 !== $subscriptionCancellationModal.length ) {
        $subscriptionCancellationModal.on( \''' cannot be parsed correct.
HTML code '$'\', function( evt, cancelSubscription ) {
            var shouldDeactivateModule = ( $modal.hasClass( \'no-confirmation-message\' ) && ! showDeactivationFeedbackForm );

            if ( false === cancelSubscription ) {
                if ( ! shouldDeactivateModule ) {
                    showModal();
                }

                $subscriptionCancellationModal.trigger( \'closeModal\' );

                if ( shouldDeactivateModule ) {
                    deactivateModule();
                }
            } else {
                var $errorMessage = $subscriptionCancellationModal.find( \'.notice-error\' );

                '' cannot be parsed correct.
HTML code '$'</label>
                                        <input id="domain" type="text" value="'' cannot be parsed correct.
HTML code '$'" class="domain regular-text" '' cannot be parsed correct.
HTML code '$'>
                                        <p class="description">'' cannot be parsed correct.
HTML code '$'</p>
                                        '' cannot be parsed correct.
HTML code '$'...</a>
                                        '' cannot be parsed correct.
HTML code '$'                                    </div>
                                    <div id="extra_domains_container" class="input-container input-container-text" '' cannot be parsed correct.
HTML code '$'>
                                        <label class="input-label">'' cannot be parsed correct.
HTML code '$'</label>
                                        <p class="description">'' cannot be parsed correct.
HTML code '$'</p>
                                        '' cannot be parsed correct.
HTML code '$'" class="domain regular-text" '' cannot be parsed correct.
HTML code '$'>
                                                </div>
                                            '' cannot be parsed correct.
HTML code '$'                                        '' cannot be parsed correct.
HTML code '$'                                    </div>
                                    <div class="input-container">
                                        <label class="input-label">'' cannot be parsed correct.
HTML code '$'</label>
                                        <div>
                                            <input id="promotion_method_social_media" type="checkbox" '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$'/>
                                            <label for="promotion_method_social_media">'' cannot be parsed correct.
HTML code '$'</label>
                                        </div>
                                        <div>
                                            <input id="promotion_method_mobile_apps" type="checkbox" '' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$'/>
                                            <label for="promotion_method_mobile_apps">'' cannot be parsed correct.
HTML code '$'</label>
                                        </div>
                                    </div>
                                    <div class="input-container input-container-text">
                                    <label class="input-label"><nobr>'' cannot be parsed correct.
HTML code '$'</nobr></label>
                                        <textarea id="statistics_information" rows="5" '' cannot be parsed correct.
HTML code '$' class="regular-text">'' cannot be parsed correct.
HTML code '$'</textarea>
                                        '' cannot be parsed correct.
HTML code '$'</p>
                                        '' cannot be parsed correct.
HTML code '$'                                    </div>
                                    <div class="input-container input-container-text">
                                        <label class="input-label">'' cannot be parsed correct.
HTML code '$'</label>
                                        <textarea id="promotion_method_description" rows="5" '' cannot be parsed correct.
HTML code '$' class="regular-text">'' cannot be parsed correct.
HTML code '$'</textarea>
                                        '' cannot be parsed correct.
HTML code '$'</p>
                                        '' cannot be parsed correct.
HTML code '$'                                    </div>
                                    '' cannot be parsed correct.
HTML code '$'" target="_blank" rel="noopener">Referrer Program</a>\'s terms & conditions.</label>
                                    </div>
                                    '' cannot be parsed correct.
HTML code '$'                                </form>
                            </div>
                            '' cannot be parsed correct.
HTML code '$'</a>
                                <a id="submit_button" class="button button-primary disabled" href="#" style="display: none">'' cannot be parsed correct.
HTML code '$'</a>
                                <a id="apply_button" class="button button-primary" href="#">'' cannot be parsed correct.
HTML code '$'</a>
                            '' cannot be parsed correct.
HTML code '$'                        </div>
                    </div>
                </div>
            </div>
        </form>
        <script type="text/javascript">
            jQuery(function ($) {
                var
                    $contentWrapper           = $(\'#fs_affiliation_content_wrapper\'),
                    $socialMedia              = $(\'#promotion_method_social_media\'),
                    $mobileApps               = $(\'#promotion_method_mobile_apps\'),
                    $applyButton              = $(\'#apply_button\'),
                    $submitButton             = $(\'#submit_button\'),
                    $cancelButton             = $(\'#cancel_button\'),
                    $applicationFormContainer = $(\'#application_form_container\'),
                    $errorMessageContainer    = $(\'#error_message\'),
                    $domain                   = $(\'#domain\'),
                    $addDomain                = $(\'#add_domain\'),
                    $extraDomainsContainer    = $(\'#extra_domains_container\'),
                    $legalConsentCheckbox     = $( \'#legal_consent_checkbox\' );

                $applyButton.click(function (evt) {
                    evt.preventDefault();

                    var $this = $(this);
                    $this.hide();

                    $applicationFormContainer.show();
                    $cancelButton.show();
                    $submitButton.show();

                    $contentWrapper.find(\'input[type="text"]:first\').focus();
                });

                $submitButton.click(function (evt) {
                    evt.preventDefault();

                    var $this = $(this);

                    if ($this.hasClass(\'disabled\')) {
                        return;
                    }

                    $errorMessageContainer.hide();

                    var
                        $emailAddress      = $(\'#email_address\'),
                        emailAddress       = null,
                        paypalEmailAddress = $(\'#paypal_email\').val().trim();

                    if (1 === $emailAddress.length) {
                        emailAddress = $emailAddress.val().trim();

                        if (0 === emailAddress.length) {
                            showErrorMessage(\''' cannot be parsed correct.
HTML code '$'\');
                            return;
                        }
                    }

                    if (0 === paypalEmailAddress.length) {
                        showErrorMessage(\''' cannot be parsed correct.
HTML code '$'\');
                        return;
                    }

                    var
                        $extraDomains = $extraDomainsContainer.find(\'.domain\'),
                        domain        = $domain.val().trim().toLowerCase(),
                        extraDomains  = [];

                    if (0 === domain.length) {
                        showErrorMessage(\''' cannot be parsed correct.
HTML code '$'\');
                        return;
                    } else if (\'freemius.com\' === domain) {
                        showErrorMessage(\''' cannot be parsed correct.
HTML code '$'\' + \' [\' + domain + \'].\');
                        return;
                    }

                    if ($extraDomains.length > 0) {
                        var hasError = false;

                        $extraDomains.each(function () {
                            var
                                $this       = $(this),
                                extraDomain = $this.val().trim().toLowerCase();
                            if (0 === extraDomain.length || extraDomain === domain) {
                                return true;
                            } else if (\'freemius.com\' === extraDomain) {
                                showErrorMessage(\''' cannot be parsed correct.
HTML code '$'\' + \' [\' + extraDomain + \'].\');
                                hasError = true;
                                return false;
                            }

                            extraDomains.push(extraDomain);
                        });

                        if (hasError) {
                            return;
                        }
                    }

                    var
                        promotionMethods           = [],
                        statisticsInformation      = $(\'#statistics_information\').val(),
                        promotionMethodDescription = $(\'#promotion_method_description\').val();

                    if ($socialMedia.attr(\'checked\')) {
                        promotionMethods.push(\'social_media\');
                    }

                    if ($mobileApps.attr(\'checked\')) {
                        promotionMethods.push(\'mobile_apps\');
                    }

                    var affiliate = {
                        full_name                   : $(\'#full_name\').val().trim(),
                        paypal_email                : paypalEmailAddress,
                        stats_description           : statisticsInformation,
                        promotion_method_description: promotionMethodDescription
                    };

                    if (null !== emailAddress) {
                        affiliate.email = emailAddress;
                    }

                    affiliate.domain = domain;
                    affiliate.additional_domains = extraDomains;

                    if (promotionMethods.length > 0) {
                        affiliate.promotion_methods = promotionMethods.join(\',\');
                    }

                    $.ajax({
                        url       : ajaxurl,
                        method    : \'POST\',
                        data      : {
                            action   : \''' cannot be parsed correct.
HTML code '$'\',
                            security : \''' cannot be parsed correct.
HTML code '$'\',
                            module_id: \''' cannot be parsed correct.
HTML code '$'\',
                            affiliate: affiliate
                        },
                        beforeSend: function () {
                            $cancelButton.addClass(\'disabled\');
                            $submitButton.addClass(\'disabled\');
                            $submitButton.text(\''' cannot be parsed correct.
HTML code '$'...\');
                        },
                        success   : function (result) {
                            if (result.success) {
                                location.reload();
                            } else {
                                if (result.error && result.error.length > 0) {
                                showErrorMessage(result.error);
                                }

                                $cancelButton.removeClass(\'disabled\');
                                $submitButton.removeClass(\'disabled\');
                                $submitButton.text(\''' cannot be parsed correct.
HTML code '$'\')
                            }
                        }
                    });
                });

                $cancelButton.click(function (evt) {
                    evt.preventDefault();

                    var $this = $(this);

                    if ($this.hasClass(\'disabled\')) {
                        return;
                    }

                    $applicationFormContainer.hide();
                    $this.hide();
                    $submitButton.hide();

                    $applyButton.show();

                    window.scrollTo(0, 0);
                });

                $domain.on(\'input propertychange\', onDomainChange);

                $addDomain.click(function (evt) {
                    evt.preventDefault();

                    var
                        $this  = $(this),
                        domain = $domain.val().trim();

                    if ($this.hasClass(\'disabled\') || 0 === domain.length) {
                        return;
                    }

                    $domain.off(\'input propertychange\');
                    $this.addClass(\'disabled\');

                    var
                        $extraDomainInputContainer = $(\'<div class="extra-domain-input-container"><input type="text" class="domain regular-text"/></div>\'),
                        $extraDomainInput          = $extraDomainInputContainer.find(\'input\'),
                        $removeDomain              = $(\'<a href="#" class="remove-domain"><i class="dashicons dashicons-no" title="'' cannot be parsed correct.
HTML code '$'"></i></a>\');

                    $extraDomainInputContainer.append($removeDomain);

                    $extraDomainInput.on(\'input propertychange\', onDomainChange);

                    $removeDomain.click(function (evt) {
                        evt.preventDefault();

                        var
                            $extraDomainInputs = $(\'.extra-domain-input-container .domain\');

                        if (1 === $extraDomainInputs.length)
                            $extraDomainInputs.val(\'\').focus();
                        else
                            $(this).parent().remove();
                    });

                    $extraDomainsContainer.show();

                    $extraDomainInputContainer.appendTo($extraDomainsContainer);
                    $extraDomainInput.focus();

                    $this.appendTo($extraDomainsContainer);
                });

                /**
                 * @author Leo Fajardo (@leorw)
                 */
                function onDomainChange() {
                    var
                        domain = $(this).val().trim();

                    if (domain.length > 0) {
                        $addDomain.removeClass(\'disabled\');
                    } else {
                        $addDomain.addClass(\'disabled\');
                    }
                }

                /**
                 * @author Leo Fajardo (@leorw)
                 *
                 * @param {String} message
                 */
                function showErrorMessage(message) {
                    $errorMessageContainer.find(\'strong\').text(message);
                    $errorMessageContainer.show();

                    window.scrollTo(0, 0);
                }

                /**
                 * @author Xiaheng Chen (@xhchen)
                 *
                 * @since 2.4.0
                 */
                $legalConsentCheckbox.click( function () {
                    if ( $( this ).prop( \'checked\' ) ) {
                        $submitButton.removeClass( \'disabled\' );
                    } else {
                        $submitButton.addClass( \'disabled\' );
                    }
                } );
            });
        </script>
    </div>'' cannot be parsed correct.
HTML code '$'\',
                        security : \''' cannot be parsed correct.
HTML code '$'\',
                        module_id: \''' cannot be parsed correct.
HTML code '$'\'
                    },
                    beforeSend: function() {
                        $errorMessage.hide();

                        $subscriptionCancellationModal.find( \'.fs-modal-footer .button\' ).addClass( \'disabled\' );
                        $subscriptionCancellationModal.find( \'.fs-modal-footer .button-primary\' ).text( \''' cannot be parsed correct.
HTML code '$'\' );
                    },
                    success: function( result ) {
                        if ( result.success ) {
                            $subscriptionCancellationModal.removeClass( \'has-subscription-actions\' );
                            $subscriptionCancellationModal.find( \'.fs-modal-footer .button-primary\' ).removeClass( \'warn\' );

                            $subscriptionCancellationModal.remove();

                            if ( ! shouldDeactivateModule ) {
                                showModal();
                            } else {
                                deactivateModule();
                            }
                        } else {
                            $errorMessage.find( \'> p\' ).html( result.error );
                            $errorMessage.show();

                            $subscriptionCancellationModal.find( \'.fs-modal-footer .button\' ).removeClass( \'disabled\' );
                            $subscriptionCancellationModal.find( \'.fs-modal-footer .button-primary\' ).html( '' cannot be parsed correct.
HTML code '$' );
                        }
                    }
                });
            }
        });
    }

	registerEventHandlers();

	function registerEventHandlers() {
		$body.on( \'click\', \'#the-list .deactivate > a\', function ( evt ) {
		    if ( 0 === $( this ).next( \'[data-module-id='' cannot be parsed correct.
HTML code '$'].fs-module-id\' ).length ) {
		        return true;
            }

			evt.preventDefault();

            redirectLink = $(this).attr(\'href\');

            if ( 0 == $subscriptionCancellationModal.length ) {
                showModal();
            } else {
                $subscriptionCancellationModal.trigger( \'showModal\' );
            }
		});

		'' cannot be parsed correct.
HTML code '$']) .theme-actions .button.activate\', function (evt) {
			evt.preventDefault();

			redirectLink = $(this).attr(\'href\');

            if ( 0 != $subscriptionCancellationModal.length ) {
                $subscriptionCancellationModal.trigger( \'showModal\' );
            } else {
                if ( $modal.hasClass( \'no-confirmation-message\' ) && ! showDeactivationFeedbackForm ) {
                    deactivateModule();
                } else {
                    showModal();
                }
            }
		});
		'' cannot be parsed correct.
HTML code '$'\',
                                security : \''' cannot be parsed correct.
HTML code '$'\',
                                module_id: \''' cannot be parsed correct.
HTML code '$'\'
                            },
                            beforeSend: function() {
                                _parent.find( \'.fs-modal-footer .button\' ).addClass( \'disabled\' );
                                _parent.find( \'.fs-modal-footer .button-secondary\' ).text( \'Processing...\' );
                            },
                            complete  : function() {
                                window.location.href = redirectLink;
                            }
                        });
                    }

					return;
				}

				var $selected_reason = $radio.parents(\'li:first\'),
				    $input = $selected_reason.find(\'textarea, input[type="text"]\'),
				    userReason = ( 0 !== $input.length ) ? $input.val().trim() : \'\';

				if (isOtherReasonSelected() && ( \'\' === userReason )) {
					return;
				}

				$.ajax({
					url       : ajaxurl,
					method    : \'POST\',
					data      : {
						action      : \''' cannot be parsed correct.
HTML code '$'\',
						security    : \''' cannot be parsed correct.
HTML code '$'\',
						module_id   : \''' cannot be parsed correct.
HTML code '$'\',
						reason_id   : $radio.val(),
						reason_info : userReason,
						is_anonymous: isAnonymousFeedback()
					},
					beforeSend: function () {
						_parent.find(\'.fs-modal-footer .button\').addClass(\'disabled\');
						_parent.find(\'.fs-modal-footer .button-secondary\').text(\'Processing...\');
					},
					complete  : function () {
						// Do not show the dialog box, deactivate the plugin.
						window.location.href = redirectLink;
					}
				});
			} else if (_this.hasClass(\'button-deactivate\')) {
				// Change the Deactivate button\'s text and show the reasons panel.
				_parent.find(\'.button-deactivate\').addClass(\'allow-deactivate\');

				if ( showDeactivationFeedbackForm ) {
                    showPanel(\'reasons\');
                } else {
				    deactivateModule();
                }
			}
		});

		$modal.on(\'click\', \'input[type="radio"]\', function () {
			var $selectedReasonOption = $( this );

			// If the selection has not changed, do not proceed.
			if (selectedReasonID === $selectedReasonOption.val())
				return;

			selectedReasonID = $selectedReasonOption.val();

			if ( isAnonymous ) {
				if ( isReasonSelected( dontShareDataReasonID ) ) {
					$anonymousFeedback.hide();
				} else {
					$anonymousFeedback.show();
				}
			}

			var _parent = $(this).parents(\'li:first\');

			$modal.find(\'.reason-input\').remove();
			$modal.find( \'.internal-message\' ).hide();
			$modal.find(\'.button-deactivate\').html(\''' cannot be parsed correct.
HTML code '$'\');

			enableDeactivateButton();

			if ( _parent.hasClass( \'has-internal-message\' ) ) {
				_parent.find( \'.internal-message\' ).show();
			}

			if (_parent.hasClass(\'has-input\')) {
				var inputType = _parent.data(\'input-type\'),
				    inputPlaceholder = _parent.data(\'input-placeholder\'),
				    reasonInputHtml = \'<div class="reason-input"><span class="message"></span>\' + ( ( \'textfield\' === inputType ) ? \'<input type="text" maxlength="128" />\' : \'<textarea rows="5" maxlength="128"></textarea>\' ) + \'</div>\';

				_parent.append($(reasonInputHtml));
				_parent.find(\'input, textarea\').attr(\'placeholder\', inputPlaceholder).focus();

				if (isOtherReasonSelected()) {
					showMessage(\''' cannot be parsed correct.
HTML code '$' );
		} else {
            $deactivateButton.html( '' cannot be parsed correct.
HTML code '$'\', function (evt) {
				evt.preventDefault();

				showModal( evt );
			});

            var licenseTimeout = null;

            /**
             * Disable activation button when license key is empty.
             *
             * @author Leo Fajardo (@leorw)
             * @since 2.3.2
             */
            $modal.on( \'keyup paste delete cut\', \'input.fs-license-key\', function () {
                clearTimeout(licenseTimeout);

                licenseTimeout = setTimeout( function () {
                    var licenseKey = $licenseKeyInput.val().trim();

                    if ( licenseKey == previousLicenseKey ) {
                        afterLicenseUserDataLoaded();
                        return;
                    }

                    if ( \'\' === licenseKey ) {
                        disableActivateLicenseButton();
                        $ownershipChangeOptionContainer.hide();
                    } else {
                        enableActivateLicenseButton();

                        if ( 32 <= licenseKey.length ) {
                            fetchLicenseUserData();
                        } else {
                            $ownershipChangeOptionContainer.hide();
                        }
                    }

                    previousLicenseKey = licenseKey;
                }, 200 );
            } ).focus();

			$modal.on(\'input propertychange\', \'input.fs-license-key\', function () {

				var licenseKey = $(this).val().trim();

				/**
				 * If license key is not empty, enable the license activation button.
				 */
				if ( licenseKey.length > 0 && ( $modal.hasClass( \'is-single-site-activation\' ) || ! isNetworkActivation || hasSelectedSite() ) ) {
					enableActivateLicenseButton();
				}
			});

			$modal.on( \'blur\', \'input.fs-license-key\', function( evt ) {
				var
                    licenseKey                  = $(this).val().trim(),
                    $focusedElement             = $( evt.relatedTarget ),
                    hasSelectedAvailableLicense = ( hasLicenseTypes && $focusedElement.parents( \'.fs-available-license-key-container\' ).length > 0 );

                /**
                 * If license key is empty, disable the license activation button.
                 */
                if ( ( 0 === licenseKey.length && ( ! hasLicenseTypes || ! hasSelectedAvailableLicense ) ) ||
                   ( isNetworkActivation && ! hasSelectedSite() )
                ) {
                   disableActivateLicenseButton();
                }
			});

			$modal.on(\'click\', \'.button-activate-license\', function (evt) {
				evt.preventDefault();

				if ($(this).hasClass(\'disabled\')) {
					return;
				}

				var
                    licenseKey = \'\';

				if ( hasLicenseTypes ) {
				    if ( isOtherLicenseKeySelected() ) {
				        licenseKey = $otherLicenseKey.val();
                    } else {
				        if ( ! hasLicensesDropdown ) {
                            licenseKey = $availableLicenseKey.data( \'license-key\' );
                        } else {
                            licenseKey = $licensesDropdown.val();
                        }
                    }
                } else {
                    licenseKey = $licenseKeyInput.val().trim();
                }

				disableActivateLicenseButton();

				if (0 === licenseKey.length) {
					return;
				}

                var data = {
                    action     : \''' cannot be parsed correct.
HTML code '$'\',
                    security   : \''' cannot be parsed correct.
HTML code '$'\',
                    license_key: licenseKey,
                    module_id  : \''' cannot be parsed correct.
HTML code '$'\'
                };

                if ( isNetworkActivation ) {
                    var
                        sites = [];

                    if ( null === singleBlogID ) {
                        var
                            applyOnAllSites = $applyOnAllSites.is( \':checked\' );

                        $sitesListContainer.find( \'tr\' ).each(function() {
                            var
                                $this       = $( this ),
                                includeSite = ( applyOnAllSites || $this.find( \'input\' ).is( \':checked\' ) );

                            if ( ! includeSite )
                                return;

                            var site = {
                                uid     : $this.find( \'.uid\' ).val(),
                                url     : $this.find( \'.url\' ).val(),
                                title   : $this.find( \'.title\' ).val(),
                                language: $this.find( \'.language\' ).val(),
                                charset : $this.find( \'.charset\' ).val(),
                                blog_id : $this.find( \'.blog-id\' ).find( \'span\' ).text()
                            };

                            sites.push( site );
                        });
                    } else {
                        data.blog_id = singleBlogID;
                    }

                    data.sites = sites;
                }

                if ( $ownershipChangeOptionContainer.find( \'input:checked\' ).length > 0 ) {
                    data.user_id = otherLicenseOwnerID;
                }

				$.ajax({
					url: ajaxurl,
					method: \'POST\',
                    data: data,
					beforeSend: function () {
						$activateLicenseButton.text( \''' cannot be parsed correct.
HTML code '$'...\' );
					},
					success: function( result ) {
						var resultObj = $.parseJSON( result );
						if ( resultObj.success ) {
							closeModal();

							// Redirect to the "Account" page and sync the license.
							window.location.href = resultObj.next_page;
						} else {
							showError( resultObj.error.message ? resultObj.error.message : resultObj.error );
							resetActivateLicenseButton();
						}
					}
				});
			});

			// If the user has clicked outside the window, close the modal.
			$modal.on(\'click\', \'.fs-close, .button-secondary\', function () {
				closeModal();
				return false;
			});
		}

		registerEventHandlers();

        $body.trigger(\'licenseActivationLoaded\');

        /**
         * @author Leo Fajardo (@leorw)
         * @since 2.0.0
         */
		function enableDisableSitesSelection() {
            var
                canApplyOnAllSites    = $applyOnAllSites.is( \':enabled\' ),
                disableSitesSelection = null;

            if ( ! canApplyOnAllSites ) {
                var
                    selectedSites         = $sitesListContainer.find( \'input[type="checkbox"]:checked\' ).length,
                    activationsLeft       = Math.max( 0, $activationsLeft.data( \'left\' ) - selectedSites );

                    disableSitesSelection = ( 0 === activationsLeft );

                    $activationsLeft.text( activationsLeft );
            } else {
                disableSitesSelection = false;
            }

            $sitesListContainer
                .find( \'input[type="checkbox"]:not(:checked)\' )
                .attr( \'disabled\', disableSitesSelection );
        }

        /**
         * @author Leo Fajardo (@leorw)
         * @since 2.0.0
         *
         * @returns {Boolean}
         */
        function isOtherLicenseKeySelected() {
            return ( hasLicenseTypes && \'other\' === $licenseTypes.filter( \':checked\' ).val() );
        }

        /**
         * @author Leo Fajardo (@leorw)
         * @since 2.0.0
         *
         * @returns {Boolean}
         */
        function hasValidLicenseKey() {
            var licenseKey = \'\';
            if ( hasLicenseTypes ) {
                if ( \'available\' === $licenseTypes.filter( \':checked\' ).val() ) {
                    return true;
                } else {
                    licenseKey = $otherLicenseKey.val();
                }
            } else {
                licenseKey = $modal.find( \'input.fs-license-key\' ).val();
            }

            return ( licenseKey.trim().length > 0 );
        }

        /**
         * @author Leo Fajardo (@leorw)
         * @since 2.0.0
         *
         * @returns {Boolean}
         */
        function hasSelectedSite() {
            return ( $applyOnAllSites.is( \':checked\' ) ||
                $sitesListContainer.find( \'input[type="checkbox"]:checked:not(:disabled)\' ).length > 0 );
        }

        /**
         * @author Leo Fajardo (@leorw)
         * @since 2.0.0
         */
        function toggleActivationOnAllSites() {
            var activationsLeft,
                licenseID;

            if (hasLicensesDropdown) {
                var $selectedOption = $licensesDropdown.find( \':selected\' );
                activationsLeft = $selectedOption.data(\'left\');
                licenseID = $selectedOption.data(\'id\');
            } else {
                activationsLeft = $availableLicenseKey.data(\'left\');
                licenseID = $availableLicenseKey.data(\'id\');
            }

            // Cleanup previously auto-selected site.
            $modal.find( \'.fs-sites-list-container input[type=checkbox]:disabled\' )
                .attr(\'disabled\', false)
                .attr(\'checked\', false);

            var $blogsWithActiveLicense = $modal.find( \'.fs-sites-list-container tr[data-license-id=\' + licenseID + \'] input[type=checkbox]\' );

            if ($blogsWithActiveLicense.length > 0) {
                $blogsWithActiveLicense.attr(\'checked\', true)
                    .attr(\'disabled\', true);

                activationsLeft += $blogsWithActiveLicense.length;
            }

            if ( activationsLeft >= totalSites ) {
                $applyOnAllSites.attr( \'disabled\', false );
                enableDisableSitesSelection();

                resetActivateLicenseCheckboxLabel();

                return;
            }

            $applyOnAllSites.attr( \'checked\', false );
            $applyOnAllSites.attr( \'disabled\', true );

            showSites( true );

            var
                activateLicenseCheckboxLabel = \''' cannot be parsed correct.
HTML code '$'\';

            activateLicenseCheckboxLabel = activateLicenseCheckboxLabel.replace( \'%s\', \'<span data-left="\' + activationsLeft + \'" class="activations-left">\' + activationsLeft + \'</span>\' );

            // Update the label of the "Activate license on all sites" checkbox.
            $applyOnAllSites.parent().find( \'span\' ).html( activateLicenseCheckboxLabel );
            $activationsLeft = $modal.find( \'.activations-left\' );

            if ( hasSelectedSite() ) {
                enableActivateLicenseButton();
                enableDisableSitesSelection();
            } else {
                disableActivateLicenseButton();
            }
        }

        /**
         * @author Leo Fajardo (@leorw)
         * @since 2.0.0
         */
        function resetActivateLicenseCheckboxLabel() {
            var activateLicenseCheckboxLabel = \''' cannot be parsed correct.
HTML code '$'\';
            $applyOnAllSites.parent().find( \'span\' ).text( activateLicenseCheckboxLabel );
        }

        /**
         * @author Leo Fajardo (@leorw)
         * @since 2.0.0
         *
         * @param {Boolean} show
         */
		function showSites( show ) {
            $sitesListContainer.toggle( show );
            if ( show && null === maxSitesListHeight ) {
                /**
                 * Set the visible number of rows to 5 (5 * height of the first row).
                 *
                 * @author Leo Fajardo (@leorw)
                 */
                maxSitesListHeight = ( 5 * $sitesListContainer.find( \'tr:first\' ).height() );
                $sitesListContainer.css( \'max-height\', maxSitesListHeight );
            }
        }

		function showModal( evt ) {
			resetModal();

			// Display the dialog box.
			$modal.addClass(\'active\');
			$body.addClass(\'has-fs-modal\');

            var
                $singleInstallDetails  = $( evt.target ).parents( \'tr.fs-install-details\' ),
                isSingleSiteActivation = ( $singleInstallDetails.length > 0 );

            $modal.toggleClass( \'is-single-site-activation\', isSingleSiteActivation );

            singleBlogID = isSingleSiteActivation ?
                $singleInstallDetails.prev().data( \'blog-id\' ) :
                null;

            '' cannot be parsed correct.
HTML code '$'
            if ( hasLicenseTypes ) {
                $licenseTypes.attr( \'checked\', false );

                if ( hasLicensesDropdown ) {
                    $licensesDropdown.find( \'option:first\' ).attr( \'selected\', true ).trigger( \'change\' );
                } else {
                    $licenseTypes.filter( \'[value="available"]\' ).click();
                }

                $otherLicenseKey.val( \'\' );
            } else {
                $licenseKeyInput.val( \'\' );
                $licenseKeyInput.focus();
            }
		}

		function closeModal() {
			$modal.removeClass(\'active\');
			$body.removeClass(\'has-fs-modal\');
		}

		function resetActivateLicenseButton() {
			enableActivateLicenseButton();
			$activateLicenseButton.text( '' cannot be parsed correct.
HTML code '$' );
		}

		function resetModal() {
			hideError();
			resetActivateLicenseButton();
		}

		function enableActivateLicenseButton() {
			$activateLicenseButton.removeClass( \'disabled\' );
		}

		function disableActivateLicenseButton() {
			$activateLicenseButton.addClass( \'disabled\' );
		}

		function hideError() {
			$licenseActivationMessage.hide();
		}

		function showError( msg ) {
			$licenseActivationMessage.find( \' > p\' ).html( msg );
			$licenseActivationMessage.show();
		}
	});
})( jQuery );
</script>'' cannot be parsed correct.
HTML code '$' );
		}
	}

	function getCurrentPanel() {
		return $modal.find(\'.fs-modal-panel.active\').attr(\'data-panel-id\');
	}

    /**
     * @author Leo Fajardo (@leorw)
     *
     * @since 2.3.0
     */
	function deactivateModule() {
	    window.location.href = redirectLink;
    }
})(jQuery);
</script>
'' cannot be parsed correct.
HTML code '$',
			    modalHtml =
				    \'<div class="fs-modal fs-modal-opt-out">\'
				    + \'	<div class="fs-modal-dialog">\'
				    + \'		<div class="fs-modal-header">\'
				    + \'		    <h4>'' cannot be parsed correct.
HTML code '$'</h4>\'
				    + \'		</div>\'
				    + \'		<div class="fs-modal-body">\'
				    + \'			<div class="fs-modal-panel active">\' + modalContentHtml + \'</div>\'
				    + \'		</div>\'
				    + \'		<div class="fs-modal-footer">\'
				    + \'			<button class="button '' cannot be parsed correct.
HTML code '$' button-opt-out" tabindex="1">'' cannot be parsed correct.
HTML code '$'</button>\'
				    + \'			<button class="button'' cannot be parsed correct.
HTML code '$' button-close" tabindex="2">'' cannot be parsed correct.
HTML code '$'</button>\'
				    + \'		</div>\'
				    + \'	</div>\'
				    + \'</div>\',
                $modal              = $(modalHtml),
                $adminNotice        = $( '' cannot be parsed correct.
HTML code '$' ),
                action              = \''' cannot be parsed correct.
HTML code '$'\',
                actionLinkSelector  = \'span.opt-in-or-opt-out.'' cannot be parsed correct.
HTML code '$' a\',
                $optOutButton       = $modal.find( \'.button-opt-out\' ),
                $optOutErrorMessage = $modal.find( \'.opt-out-error-message\' ),
                $extensionsTracking = $modal.find( \'.fs-permission-extensions\' ),
                $body               = $( \'body\' ),
                moduleID            = \''' cannot be parsed correct.
HTML code '$'\';

			$modal.data( \'action\', action );
			$modal.appendTo( $body );

			function registerActionLinkClick() {
                $body.on( \'click\', actionLinkSelector, function( evt ) {
					evt.preventDefault();

					if ( \'stop_tracking\' == $modal.data( \'action\' ) ) {
						showModal();
					} else {
						optIn();
					}

					return false;
				});
			}

			function registerEventHandlers() {
				registerActionLinkClick();

				$modal.on( \'click\', \'.button-opt-out\', function( evt ) {
					evt.preventDefault();

					if ( $( this ).hasClass( \'disabled\' ) ) {
						return;
					}

					disableOptOutButton();
					optOut();
				});

				// If the user has clicked outside the window, close the modal.
				$modal.on( \'click\', \'.fs-close, .button-close\', function() {
					closeModal();
					return false;
				});
			}

			'' cannot be parsed correct.
HTML code '$'
			function showModal() {
				resetModal();

				// Display the dialog box.
				$modal.addClass( \'active\' );
				$body.addClass( \'has-fs-modal\' );
			}

			function closeModal() {
				$modal.removeClass( \'active\' );
				$body.removeClass( \'has-fs-modal\' );
			}

			function resetOptOutButton() {
				enableOptOutButton();
				$optOutButton.text( '' cannot be parsed correct.
HTML code '$' );
			}

			function resetModal() {
				hideError();
				resetOptOutButton();
			}

			function optIn() {
				sendRequest();
			}

			function optOut() {
				sendRequest();
			}

			function sendRequest() {
			    var $actionLink = $( actionLinkSelector );

				$.ajax({
					url: ajaxurl,
					method: \'POST\',
					data: {
						action   : ( \'stop_tracking\' == action ?
								\''' cannot be parsed correct.
HTML code '$'\' :
								\''' cannot be parsed correct.
HTML code '$'\'
						),
						security : ( \'stop_tracking\' == action ?
								\''' cannot be parsed correct.
HTML code '$'\' :
								\''' cannot be parsed correct.
HTML code '$'\'
						),
						module_id: moduleID,
                        _wp_http_referer: \''' cannot be parsed correct.
HTML code '$'\'
					},
					beforeSend: function() {
						if ( \'allow_tracking\' == action ) {
							$actionLink.text( \''' cannot be parsed correct.
HTML code '$'...\' );
						} else {
							$optOutButton.text( \''' cannot be parsed correct.
HTML code '$'...\' );
						}
					},
					success: function( resultObj ) {
						if ( resultObj.success ) {
							if ( \'allow_tracking\' == action ) {
								action = \'stop_tracking\';
								$actionLink.text( \''' cannot be parsed correct.
HTML code '$'\' );
								showOptInAppreciationMessageAndScrollToTop();
							} else {
								action = \'allow_tracking\';
								$actionLink.text( \''' cannot be parsed correct.
HTML code '$'\' );
								closeModal();

								if ( $adminNotice.length > 0 ) {
									$adminNotice.remove();
								}
							}

							$modal.data( \'action\', action );
						} else {
							showError( resultObj.error );
							resetOptOutButton();
						}
					}
				});
			}

			var isUpdatingPermission = false;
            $extensionsTracking.on(\'click\', function() {
                if (isUpdatingPermission) {
                    return false;
                }

                isUpdatingPermission = true;

                var $switch         = $extensionsTracking.find( \'.fs-switch\' ),
                    $switchFeedback = $extensionsTracking.find( \'.fs-switch-feedback\' );

                $switch
                    .toggleClass( \'fs-on\' )
                    .toggleClass( \'fs-off\' );

                $switchFeedback.html( \'<i class="fs-ajax-spinner"></i>\' );

                $.ajax({
                    url: ajaxurl,
                    method: \'POST\',
                    data: {
                        action    : \''' cannot be parsed correct.
HTML code '$'\',
                        security  : \''' cannot be parsed correct.
HTML code '$'\',
                        module_id : moduleID,
                        _wp_http_referer: \''' cannot be parsed correct.
HTML code '$'\',
                        permission: \'extensions\',
                        is_enabled: $switch.hasClass(\'fs-on\')
                    },
                    success: function( resultObj ) {
                        if ( resultObj.success ) {
                            $switchFeedback.html( \'<i class="dashicons dashicons-yes"></i> '' cannot be parsed correct.
HTML code '$'\' )
                        } else {
                            $switch
                                .toggleClass( \'fs-on\' )
                                .toggleClass( \'fs-off\' );
                        }

	                    isUpdatingPermission = false;
                    }
                });
            });

			function enableOptOutButton() {
				$optOutButton.removeClass( \'disabled\' );
			}

			function disableOptOutButton() {
				$optOutButton.addClass( \'disabled\' );
			}

			function hideError() {
				$optOutErrorMessage.hide();
			}

			function showOptInAppreciationMessageAndScrollToTop() {
				$adminNotice.insertAfter( $( \'#wpbody-content\' ).find( \' > .wrap > h1\' ) );
				window.scrollTo(0, 0);
			}

			function showError( msg ) {
				$optOutErrorMessage.find( \' > p\' ).html( msg );
				$optOutErrorMessage.show();
			}

			'' cannot be parsed correct.
HTML code '$'\' :
				        \''' cannot be parsed correct.
HTML code '$'\'),
                    href = ((\'stop_tracking\' != action) ?
                        \''' cannot be parsed correct.
HTML code '$'\' :
                        \'\');

				var $actionLink = $(\'<a id="fs_theme_opt_in_out" href="\' + encodeURI(href) + \'" class="button">\' + label + \'</a>\');

				actionLinkSelector = \'#fs_theme_opt_in_out\';

				$modal.data( \'action\', action );

				$(\'.theme-wrap .theme-actions .active-theme\').append($actionLink);

				if (\'\' === href) {
					registerActionLinkClick();
				}
			});
			'' cannot be parsed correct.
HTML code '$'		});
	})( jQuery );
</script>
'' cannot be parsed correct.
HTML code '$'">\'
				+ \'	<div class="fs-modal-dialog">\'
				+ \'		<div class="fs-modal-header">\'
				+ \'		    <h4>'' cannot be parsed correct.
HTML code '$'</h4>\'
				+ \'         <a href="!#" class="fs-close"><i class="dashicons dashicons-no" title="'' cannot be parsed correct.
HTML code '$'"></i></a>\'
				+ \'		</div>\'
				+ \'		<div class="fs-modal-body">\'
				+ \'			<div class="fs-modal-panel active">\' + modalContentHtml + \'</div>\'
				+ \'		</div>\'
				+ \'		<div class="fs-modal-footer">\'
				+ \'			<button class="button button-secondary button-close" tabindex="4">'' cannot be parsed correct.
HTML code '$'</button>\'
				+ \'			<button class="button button-primary button-activate-license"  tabindex="3">'' cannot be parsed correct.
HTML code '$'</button>\'
				+ \'		</div>\'
				+ \'	</div>\'
				+ \'</div>\',
			$modal = $(modalHtml),
			$activateLicenseButton          = $modal.find(\'.button-activate-license\'),
			$licenseKeyInput                = $modal.find( \'input.fs-license-key\' ),
			$licenseActivationMessage       = $modal.find( \'.license-activation-message\' ),
            isNetworkActivation             = '' cannot be parsed correct.
HTML code '$',
            isUserChangeSupported           = '' cannot be parsed correct.
HTML code '$',
            isSingleSiteActivation          = false,
            $ownershipChangeOptionContainer = $modal.find( \'.ownership-change-option-container\' ),
            $body                           = $( \'body\' );

		$modal.appendTo( $body );

        var
            $licensesDropdown    = $modal.find( \'.fs-licenses\' ),
            $licenseTypes        = $modal.find( \'input[type="radio"][name="license_type"]\' ),
            $applyOnAllSites     = $modal.find( \'.fs-apply-on-all-sites-checkbox\' ),
            $sitesListContainer  = $modal.find( \'.fs-sites-list-container\' ),
            $availableLicenseKey = $modal.find( \'.fs-available-license-key\' ),
            $otherLicenseKey     = $modal.find( \'#other_license_key_'' cannot be parsed correct.
HTML code '$'\' ),
            $multisiteOptionsContainer = $modal.find( \'.fs-multisite-options-container\' ),
            $activationsLeft     = null,
            hasLicensesDropdown  = ( $licensesDropdown.length > 0 ),
            hasLicenseTypes      = ( $licenseTypes.length > 0 ),
            maxSitesListHeight   = null,
            totalSites           = '' cannot be parsed correct.
HTML code '$',
            singleBlogID         = null;

        var
            previousLicenseKey  = null,
            otherLicenseOwnerID = null,
            /**
             * @author Leo Fajardo (@leorw)
             * @since 2.3.2
             */
            resetLoadingMode = function () {
                // Reset loading mode.
                $activateLicenseButton.text( '' cannot be parsed correct.
HTML code '$' );
                $activateLicenseButton.prop( \'disabled\', false );
                $( document.body ).css( { \'cursor\': \'auto\' } );
                $( \'.fs-loading\' ).removeClass( \'fs-loading\' );

                console.log( \'resetLoadingMode - Primary button was enabled\' );
            },
            /**
             * @author Leo Fajardo (@leorw)
             * @since 2.3.2
             */
            setLoadingMode = function () {
                $( document.body ).css( { \'cursor\': \'wait\' } );
            },
            /**
             * @author Leo Fajardo (@leorw)
             * @since 2.3.2
             */
            afterLicenseUserDataLoaded = function () {
                if (
                    null !== otherLicenseOwnerID &&
                    otherLicenseOwnerID != '' cannot be parsed correct.
HTML code '$'                ) {
                    $ownershipChangeOptionContainer.show();
                } else {
                    $ownershipChangeOptionContainer.hide();
                    $activateLicenseButton.focus();
                }
            },
            /**
             * @author Leo Fajardo (@leorw)
             * @since 2.3.2
             */
            fetchLicenseUserData = function () {
                var hideAndUncheckUserChangeCheckbox = ( ! isUserChangeSupported ),
                    otherLicenseKeyIsSelected      = isOtherLicenseKeySelected();

                if ( ! hideAndUncheckUserChangeCheckbox ) {
                    // User change is supported only on the site level.
                    hideAndUncheckUserChangeCheckbox = ( isNetworkActivation || isSingleSiteActivation );
                }

                if ( ! hideAndUncheckUserChangeCheckbox ) {
                    hideAndUncheckUserChangeCheckbox = ( hasLicenseTypes && ! otherLicenseKeyIsSelected );
                }

                var licenseKey = $licenseKeyInput.val().trim();

                if ( ! hideAndUncheckUserChangeCheckbox && otherLicenseKeyIsSelected ) {
                    hideAndUncheckUserChangeCheckbox = ( licenseKey.length < 32 );
                }

                if ( licenseKey !== previousLicenseKey ) {
                    // If the license key has not been changed, keep the owner ID in order to prevent another API call.
                    otherLicenseOwnerID = null;
                }

                if ( hideAndUncheckUserChangeCheckbox ) {
                    $ownershipChangeOptionContainer.hide().find( \'input\' ).attr( \'checked\', false );

                    return;
                }

                if ( null !== otherLicenseOwnerID ) {
                    afterLicenseUserDataLoaded();
                    return;
                }

                setLoadingMode();

                $activateLicenseButton.addClass( \'fs-loading\' );
                $activateLicenseButton.attr( \'disabled\', \'disabled\' );
                $activateLicenseButton.html( \''' cannot be parsed correct.
HTML code '$'...\' );

                $.ajax( {
                    url    : ajaxurl,
                    method : \'POST\',
                    data   : {
                        action     : \''' cannot be parsed correct.
HTML code '$'\',
                        security   : \''' cannot be parsed correct.
HTML code '$'\',
                        license_key: licenseKey,
                        module_id  : \''' cannot be parsed correct.
HTML code '$'\'
                    },
                    success: function ( result ) {
                        resetLoadingMode();

                        if ( result.success ) {
                            result = result.data;

                            // Cache license owner\'s ID.
                            otherLicenseOwnerID = result.license_owner_id;
                        }

                        afterLicenseUserDataLoaded();
                    }
                } );
            };

		function registerEventHandlers() {
            var
                $otherLicenseKeyContainer = $modal.find( \'.fs-other-license-key-container\' );

            if ( isNetworkActivation ) {
                $applyOnAllSites.click(function() {
                    var applyOnAllSites = $( this ).is( \':checked\' );

                    $multisiteOptionsContainer.toggleClass( \'fs-apply-on-all-sites\', applyOnAllSites );

                    showSites( ! applyOnAllSites );

                    if ( hasValidLicenseKey() && ( applyOnAllSites || hasSelectedSite() ) ) {
                        enableActivateLicenseButton();
                    } else {
                        disableActivateLicenseButton();
                    }
                });

                $sitesListContainer.delegate( \'td:not(:first-child)\', \'click\', function() {
                    // If a site row is clicked, trigger a click on the checkbox.
                    $( this ).parent().find( \'td:first-child input\' ).click();
                });

                $sitesListContainer.delegate( \'input[type="checkbox"]\', \'click\', function() {
                    enableDisableSitesSelection();

                    if ( hasValidLicenseKey() && hasSelectedSite() ) {
                        enableActivateLicenseButton();
                    } else {
                        disableActivateLicenseButton();
                    }
                });
            }

            if ( hasLicensesDropdown ) {
                $licensesDropdown.change(function() {
                    // When a license is selected, select the associated radio button.
                    $licenseTypes.filter( \'[value="available"]\' ).attr( \'checked\', true );

                    if ( ! isNetworkActivation || $modal.hasClass( \'is-single-site-activation\' ) ) {
                        enableActivateLicenseButton();
                        return true;
                    }

                    toggleActivationOnAllSites();
                })
            }

            if ( hasLicenseTypes ) {
                $licenseTypes.change(function() {
                    var
                        licenseKey              = $modal.find( \'input.fs-license-key\' ).val().trim(),
                        otherLicenseKeySelected = isOtherLicenseKeySelected();

                    if ( ( licenseKey.length > 0 || ( hasLicenseTypes && ! otherLicenseKeySelected ) ) &&
                        ( $modal.hasClass( \'is-single-site-activation\' ) || ! isNetworkActivation || hasSelectedSite() )
                    ) {
                        /**
                         * If the "other" license is not empty or an available license is selected, enable the activate
                         * button.
                         *
                         * @author Leo Fajardo (@leorw)
                         */
                        enableActivateLicenseButton();
                    } else {
                        disableActivateLicenseButton();
                    }

                    if ( \'\' !== licenseKey ) {
                        fetchLicenseUserData();
                    }

                    if ( ! isNetworkActivation ) {
                        return;
                    }

                    if ( otherLicenseKeySelected ) {
                        $applyOnAllSites.attr( \'disabled\', false );
                        enableDisableSitesSelection();
                        resetActivateLicenseCheckboxLabel();
                    } else if ( ! $modal.hasClass( \'is-single-site-activation\' ) ) {
                        toggleActivationOnAllSites();
                    }
                });

                if ( ! hasLicensesDropdown ) {
                    $availableLicenseKey.click(function() {
                        $licenseTypes.filter( \'[value="available"]\' ).click();
                    });
                }

                $otherLicenseKeyContainer.click(function() {
                    $licenseTypes.filter( \'[value="other"]\' ).click();
                });
            }

            $body.on( \'click\', \'span.activate-license.'' cannot be parsed correct.
HTML code '$' a, .activate-license-trigger.'' cannot be parsed correct.
HTML code '$'"></i></a>\'
                + \'     </div>\'
                + \'     <div class="fs-modal-body">\'
                + \'         <div class="fs-modal-panel active">\' + modalContentHtml + \'</div>\'
                + \'     </div>\'
                + \'     <div class="fs-modal-footer">\'
                + \'         <a class="button button-primary button-renew-license" tabindex="3" href="'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</a>\'
                + \'         <button class="button button-secondary button-close" tabindex="4">'' cannot be parsed correct.
HTML code '$'</button>\'
                + \'     </div>\'
                + \' </div>\'
                + \'</div>\',
            $modal           = $( modalHtml ),
            isPluginsPage    = '' cannot be parsed correct.
HTML code '$';

        $modal.appendTo( $( \'body\' ) );

        function registerEventHandlers() {
            $( \'body\' ).on( \'click\', \'.license-expired\', function( evt ) {
                var $this = $( this );

                if ( ! $this.is( \':checked\' ) ||
                    (
                        isPluginsPage &&
                        \'update-selected\' !== $( \'#bulk-action-selector-top\' ).val() &&
                        \'update-selected\' !== $( \'#bulk-action-selector-bottom\' ).val()
                    )
                ) {
                    return true;
                }

                evt.preventDefault();
                evt.stopImmediatePropagation();

                showModal( $this );
            });

            // If the user has clicked outside the window, close the modal.
            $modal.on( \'click\', \'.fs-close, .button-secondary\', function() {
                closeModal();
                return false;
            });

            if ( isPluginsPage ) {
                $( \'body\' ).on( \'change\', \'select[id*="bulk-action-selector"]\', function() {
                    if ( \'update-selected\' === $( this ).val() ) {
                        setTimeout(function() {
                            $( \'.license-expired\' ).prop( \'checked\', false );
                            $( \'[id*="select-all"]\' ).prop( \'checked\', false );
                        }, 0);
                    }
                });
            }

            $( \'body\' ).on( \'click\', \'[id*="select-all"]\', function( evt ) {
                var $this = $( this );

                if ( ! $this.is( \':checked\' ) ) {
                    return true;
                }

                if ( isPluginsPage ) {
                    if ( \'update-selected\' !== $( \'#bulk-action-selector-top\' ).val() &&
                        \'update-selected\' !== $( \'#bulk-action-selector-bottom\' ).val() ) {
                        return true;
                    }
                }

                var $table                       = $this.closest( \'table\' ),
                    controlChecked               = $this.prop( \'checked\' ),
                    toggle                       = ( event.shiftKey || $this.data( \'wp-toggle\' ) ),
                    $modules                     = $table.children( \'tbody\' ).filter( \':visible\' ).children().children( \'.check-column\' ).find( \':checkbox\' ),
                    $modulesWithNonActiveLicense = $modules.filter( \'.license-expired\' );

                if ( 0 === $modulesWithNonActiveLicense.length ) {
                    /**
                     * It\'s possible that the context HTML table element doesn\'t have checkboxes with
                     * ".license-expired" class if for example only the themes table has such checkboxes and the user
                     * clicks on a "Select All" checkbox on the plugins table which has no such checkboxes.
                     *
                     * @author Leo Fajardo (@leorw)
                     */
                    return true;
                } else if ( 1 === $modulesWithNonActiveLicense.length ) {
                    showModal( $modulesWithNonActiveLicense );
                }

                /**
                 * Prevent the default WordPress handler from checking all checkboxes.
                 *
                 * @author Leo Fajardo (@leorw)
                 */
                evt.stopImmediatePropagation();

                $modules.filter( \':not(.license-expired)\' )
                    .prop( \'checked\', function() {
                        if ( $( this ).is( \':hidden,:disabled\' ) ) {
                            return false;
                        }

                        if ( toggle ) {
                            return ! $( this ).prop( \'checked\' );
                        } else if ( controlChecked ) {
                            return true;
                        }

                        return false;
                    });

                return false;
            });
        }

        registerEventHandlers();

        function showModal( $module ) {
            $modal.find( \'#plugin_name\' ).text( $module.data( \'plugin-name\' ) );
            $modal.find( \'#pricing_url\' ).attr( \'href\', $module.data( \'pricing-url\' ) );
            $modal.find( \'#new_version\' ).text( $module.data( \'new-version\' ) );

            // Display the dialog box.
            $modal.addClass( \'active\' );
            $( \'body\' ).addClass( \'has-fs-modal\' );
        }

        function closeModal() {
            $modal.removeClass( \'active\' );
            $( \'body\' ).removeClass( \'has-fs-modal\' );
        }
    });
})( jQuery );
</script>'' cannot be parsed correct.
HTML code '$',
            modalHtml        =
                \'<div class="fs-modal fs-modal-upgrade-premium-version">\'
                + \' <div class="fs-modal-dialog">\'
                + \'     <div class="fs-modal-header">\'
                + \'         <h4>'' cannot be parsed correct.
HTML code '$'</h4>\'
                + \'         <a href="!#" class="fs-close"><i class="dashicons dashicons-no" title="'' cannot be parsed correct.
HTML code '$' + \'<p class="fs-price-increase-warning" style="display: none;">\' + '' cannot be parsed correct.
HTML code '$' + \'</p></div>\'
            + \'		</div>\'
            + \'		<div class="fs-modal-footer">\'
            + \'			<a href="#" class="button button-secondary button-close">'' cannot be parsed correct.
HTML code '$'</a>\'
            + \'			<a href="#" class="button button-primary button-deactivate disabled">'' cannot be parsed correct.
HTML code '$'</a>\'
            + \'		</div>\'
            + \'	</div>\'
            + \'</div>\',
            $modal    = $(modalHtml);

        $modal.appendTo($(\'body\'));

        registerEventHandlers();

        function registerEventHandlers() {
            $modal.on( \'showModal\', function() {
                showModal();
            });

            $modal.on( \'closeModal\', function() {
                closeModal();
            });

            $modal.on(\'click\', \'.fs-modal-footer .button\', function (evt) {
                evt.preventDefault();

                if ($(this).hasClass(\'disabled\')) {
                    return;
                }

                var _this                                   = $(this),
                    subscriptionCancellationActionEventName = '' cannot be parsed correct.
HTML code '$';

                if ( _this.hasClass( \'button-primary\' ) ) {
                    if ( \'true\' !== $modal.find( \'input[name="cancel-subscription"]:checked\' ).val() ) {
                        $modal.trigger( subscriptionCancellationActionEventName, false );
                    } else {
                        if ( confirm( '' cannot be parsed correct.
HTML code '$' ) ) {
                            $modal.trigger( subscriptionCancellationActionEventName, true );
                        }
                    }
                }
            });

            $modal.on(\'click\', \'input[type="radio"]\', function () {
                var
                    $selectedOption = $( this ),
                    $primaryButton  = $modal.find( \'.button-primary\' ),
                    isSelected      = ( \'true\' === $selectedOption.val() );

                if ( isSelected ) {
                    $primaryButton.html( '' cannot be parsed correct.
HTML code '$' );

                    $modal.find(\'.fs-price-increase-warning\').show();
                } else {
                    $primaryButton.html( '' cannot be parsed correct.
HTML code '$' );
                    $modal.find(\'.fs-price-increase-warning\').hide();
                }

                $primaryButton.toggleClass( \'warn\', isSelected );
                $primaryButton.removeClass( \'disabled\' );
            });

            // If the user has clicked outside the window, cancel it.
            $modal.on(\'click\', function (evt) {
                var $target = $(evt.target);

                // If the user has clicked anywhere in the modal dialog, just return.
                if ($target.hasClass(\'fs-modal-body\') || $target.hasClass(\'fs-modal-footer\')) {
                    return;
                }

                // If the user has not clicked the close button and the clicked element is inside the modal dialog, just return.
                if (
                    ( ! $target.hasClass( \'button-close\' ) ) &&
                    ( $target.parents( \'.fs-modal-body\' ).length > 0 || $target.parents( \'.fs-modal-footer\' ).length > 0 )
                ) {
                    return;
                }

                closeModal();

                return false;
            });
        }

        function showModal() {
            resetModal();

            // Display the dialog box.
            $modal.addClass(\'active\');

            $(\'body\').addClass(\'has-fs-modal\');
        }

        function closeModal() {
            var activeModalsCount = $( \'.fs-modal.active\' ).length;

            $modal.removeClass(\'active\');

            // If child modal, do not remove the "has-fs-modal" class of the <body> element to keep its scrollbars hidden.
            if ( activeModalsCount > 1 ) {
                return;
            }

            $(\'body\').removeClass(\'has-fs-modal\');
        }

        function resetModal() {
            updateButtonLabels();

            if ( 0 === $modal.find( \'.subscription-actions\' ).length ) {
                $modal.find(\'.button-deactivate\').removeClass(\'disabled\');
            } else {
                $modal.find(\'.button-deactivate\').addClass(\'disabled\');
            }

            $modal.find(\'.fs-price-increase-warning\').hide();

            // Uncheck all radio buttons.
            $modal.find(\'input[type="radio"]\').prop(\'checked\', false);

            $modal.find(\'.message\').hide();
        }

        function showMessage(message) {
            $modal.find(\'.message\').text(message).show();
        }

        function updateButtonLabels() {
            $modal.find(\'.button-primary\').text( '' cannot be parsed correct.
HTML code '$' );

            $modal.find(\'.button-secondary\').text( '' cannot be parsed correct.
HTML code '$' );
        }
    })( jQuery );
</script>'' cannot be parsed correct.
HTML code '$'</h4>\'
				    + \'		</div>\'
				    + \'		<div class="fs-modal-body">\' + modalContentHtml + \'</div>\'
				    + \'		<div class="fs-modal-footer">\'
				    + \'			<button class="button button-secondary button-close">\' + '' cannot be parsed correct.
HTML code '$' +\'</button>\'
				    + \'			<button class="button button-primary button-connect">\' + '' cannot be parsed correct.
HTML code '$' +\'</button>\'
				    + \'		</div>\'
				    + \'	</div>\'
				    + \'</div>\',
			    $modal = $( modalHtml ),
			    trialData;

			$modal.appendTo($(\'body\'));

			var $errorNotice = $modal.find(\'.notice-error\');

			registerEventHandlers();

			function registerEventHandlers() {
				$modal.on(\'click\', \'.button-close\', function () {
					closeModal();
					return false;
				});

				$modal.on(\'click\', \'.button-connect\', function (evt) {
					evt.preventDefault();

					var $button = $(this);

					$.ajax({
						url       : ajaxurl,
						method    : \'POST\',
						data      : {
							action   : \''' cannot be parsed correct.
HTML code '$'\',
							security : \''' cannot be parsed correct.
HTML code '$'\',
							module_id: \''' cannot be parsed correct.
HTML code '$'\',
							trial    : trialData
						},
						beforeSend: function () {
							// Disable all buttons during trial activation.
							$modal.find(\'.button\').prop(\'disabled\', true);

							$button.text('' cannot be parsed correct.
HTML code '$' + \'...\');

							setLoadingMode();
						},
						success   : function (resultObj) {
							if (resultObj.success) {
								$button.text('' cannot be parsed correct.
HTML code '$' + \'...\');

								// Redirect to the "Account" page and sync the license.
								window.location.href = resultObj.data.next_page;
							} else {
								$button.text('' cannot be parsed correct.
HTML code '$');

								resetLoadingMode();
								showError(resultObj.error);
							}
						}
					});
				});
			}

			window.openTrialConfirmationModal = function showModal(data) {
				resetModal();

				// Display the dialog box.
				$modal.addClass(\'active\');

				trialData = data;

				var $modalBody = $modal.find(\'.fs-modal-body\'),
				    $var;

				for (var key in data) {
					if (data.hasOwnProperty(key)) {
						$var = $modalBody.find(\'.var-\' + key);

						if ($var.length > 0)
							$var.html(data[key]);
					}
				}

				$(\'body\').addClass(\'has-fs-modal\');
			};

			function closeModal() {
				$modal.removeClass(\'active\');

				$(\'body\').removeClass(\'has-fs-modal\');
			}

			function resetModal() {
				hideError();
			}

			function hideError() {
				$errorNotice.hide();
			}

			function setLoadingMode() {
				$modal.find(\'.button\')
				// Re-enable all buttons.
					.prop(\'disabled\', trialData)
					// Stop loading cursor.
					.css({\'cursor\': \'wait\'});

				// Stop loading cursor.
				$(document.body).css({\'cursor\': \'wait\'});
			}

			function resetLoadingMode() {
				$modal.find(\'.button\')
				// Re-enable all buttons.
					.prop(\'disabled\', false)
					// Stop loading cursor.
					.css({\'cursor\': \'initial\'});

				// Stop loading cursor.
				$(document.body).css({\'cursor\': \'initial\'});
			}

			function showError(msg) {
				$errorNotice.find(\' > p\').html(msg);
				$errorNotice.show();
			}
		});
	})(jQuery);
</script>
'' cannot be parsed correct.
HTML code '$'"]\' );

        $premiumVersionCheckbox.addClass( \'license-expired\' );
        $premiumVersionCheckbox.data( \'plugin-name\','' cannot be parsed correct.
HTML code '$' );
        $premiumVersionCheckbox.data( \'pricing-url\', '' cannot be parsed correct.
HTML code '$' );
        $premiumVersionCheckbox.data( \'new-version\', '' cannot be parsed correct.
HTML code '$' );
    });
})( jQuery );
</script>'' cannot be parsed correct.
HTML code '$'">\'
				    + \' <div class="fs-modal-dialog">\'
				    + \'     <div class="fs-modal-header">\'
				    + \'         <h4>'' cannot be parsed correct.
HTML code '$'</h4>\'
				    + \'         <a href="#!" class="fs-close" tabindex="3" title="Close"><i class="dashicons dashicons-no" title="'' cannot be parsed correct.
HTML code '$'"></i></a>\'
				    + \'     </div>\'
				    + \'     <div class="fs-modal-body">\'
				    + \'         <div class="fs-modal-panel active">\' + contentHtml + \'</div>\'
				    + \'     </div>\'
				    + \' </div>\'
				    + \'</div>\',
			    $modal           = $(modalHtml),
			    $sendButton      = $modal.find(\'.button-send-license-key\'),
			    $emailInput      = $modal.find(\'input.email-address\'),
			    $feedbackMessage = $modal.find(\'.license-resend-message\'),
			    isFreemium       = '' cannot be parsed correct.
HTML code '$',
			    userEmail        = '' cannot be parsed correct.
HTML code '$',
			    moduleID         = \''' cannot be parsed correct.
HTML code '$'\',
			    isChild          = false;


			$modal.appendTo($(\'body\'));

			function registerEventHandlers() {
				$(\'a.show-license-resend-modal-'' cannot be parsed correct.
HTML code '$'\').click(function (evt) {
					evt.preventDefault();

					showModal();
				});

				if (isFreemium) {
					$modal.on(\'change\', \'input[type=radio][name=email-address]\', function () {
						updateButtonState();
					});

					$modal.on(\'focus\', \'input.email-address\', function () {
						// Check custom email radio button on email input focus.
						$($modal.find(\'input[type=radio]\')[1]).prop(\'checked\', true);

						updateButtonState();
					});
				}

				$modal.on(\'input propertychange\', \'input.email-address\', function () {
					updateButtonState();
				});

				$modal.on(\'blur\', \'input.email-address\', function () {
					updateButtonState();
				});

				$modal.on(\'click\', \'.fs-close\', function (){
					closeModal();
					return false;
				});

				$modal.on(\'click\', \'.button\', function (evt) {
					evt.preventDefault();

					if ($(this).hasClass(\'disabled\')) {
						return;
					}

					var email = getEmail();

					disableButton();

					if (!(-1 < email.indexOf(\'@\'))) {
						return;
					}

					$.ajax({
						url       : ajaxurl,
						method    : \'POST\',
						data      : {
							action     : \''' cannot be parsed correct.
HTML code '$'\',
							security   : \''' cannot be parsed correct.
HTML code '$'\',
							module_id  : moduleID,
							email      : email
						},
						beforeSend: function () {
							$sendButton.text(\''' cannot be parsed correct.
HTML code '$'...\');
						},
						success   : function (result) {
							var resultObj = $.parseJSON(result);
							if (resultObj.success) {
								closeModal();
							} else {
								showError(resultObj.error);
								resetButton();
							}
						}
					});
				});
			}

			registerEventHandlers();

			resetButton();

			function showModal() {
				resetModal();

				// Display the dialog box.
				$modal.addClass(\'active\');

				if (!isFreemium)
					$emailInput.focus();

				var $body = $(\'body\');

				isChild = $body.hasClass(\'has-fs-modal\');
				if (isChild) {
					return;
				}

				$body.addClass(\'has-fs-modal\');
			}

			function closeModal() {
				$modal.removeClass(\'active\');

				// If child modal, do not remove the "has-fs-modal" class of the <body> element to keep its scrollbars hidden.
				if (isChild) {
					return;
				}

				$(\'body\').removeClass(\'has-fs-modal\');
			}

			function resetButton() {
				updateButtonState();
				$sendButton.text('' cannot be parsed correct.
HTML code '$');
			}

			function resetModal() {
				hideError();
				resetButton();
				$emailInput.val(\'\');
			}

			function getEmail() {
				var email = $emailInput.val().trim();

				if (isFreemium) {
					if (\'other\' != $modal.find(\'input[type=radio][name=email-address]:checked\').val()) {
						email = userEmail;
					}
				}

				return email;
			}

			function updateButtonState() {
				/**
				 * If email address is not empty, enable the send license key button.
				 */
				$sendButton.toggleClass(\'disabled\', !( -1 < getEmail().indexOf(\'@\') ));
			}

			function disableButton() {
				$sendButton.addClass(\'disabled\');
			}

			function hideError() {
				$feedbackMessage.hide();
			}

			function showError(msg) {
				$feedbackMessage.find(\' > p\').html(msg);
				$feedbackMessage.show();
			}
		});
	})(jQuery);
</script>
'' cannot be parsed correct.
HTML code '$',
            modalHtml                   =
                \'<div class="fs-modal fs-modal-change-user fs-modal-change-user'' cannot be parsed correct.
HTML code '$'">\'
                + \'	<div class="fs-modal-dialog">\'
                + \'		<div class="fs-modal-header">\'
                + \'		    <h4>'' cannot be parsed correct.
HTML code '$'</h4>\'
                + \'         <a href="!#" class="fs-close"><i class="dashicons dashicons-no" title="'' cannot be parsed correct.
HTML code '$'"></i></a>\'
                + \'		</div>\'
                + \'		<div class="fs-modal-body">\'
                + \'			<div class="fs-modal-panel active">\' + modalContentHtml + \'</div>\'
                + \'		</div>\'
                + \'		<div class="fs-modal-footer">\'
                + \'			<button class="button button-secondary button-close" tabindex="4">'' cannot be parsed correct.
HTML code '$'</button>\'
                + \'			<button class="button button-primary fs-user-change-button" tabindex="3">'' cannot be parsed correct.
HTML code '$'</button>\'
                + \'		</div>\'
                + \'	</div>\'
                + \'</div>\',
            $modal                      = $( modalHtml ),
            $userChangeButton           = $modal.find( \'.fs-user-change-button\' ),
            $otherEmailAddressRadio     = $modal.find( \'#fs_other_email_address_radio\' ),
            $changeUserResultMessage    = $modal.find( \'.fs-change-user-result-message\' ),
            $otherEmailAddressContainer = $modal.find( \'.fs-other-email-address-container\' ),
            $otherEmailAddressTextField = $modal.find( \'#fs_other_email_address_text_field\' ),
            $licenseOwners              = $modal.find( \'input[type="radio"][name="fs_email_address"]\' );

        $modal.appendTo( $( \'body\' ) );

        var previousEmailAddress = null;

        function registerEventHandlers() {
            $licenseOwners.change( function() {
                var otherEmailAddress           = $otherEmailAddressTextField.val().trim(),
                    otherEmailAddressIsSelected = isOtherEmailAddressSelected();

                if ( otherEmailAddressIsSelected ) {
                    $otherEmailAddressTextField.focus();
                }

                if ( otherEmailAddress.length > 0 || ! otherEmailAddressIsSelected ) {
                    enableUserChangeButton();
                } else {
                    disableUserChangeButton();
                }
            } );

            $otherEmailAddressContainer.click( function () {
                $otherEmailAddressRadio.click();
            } );

            // Handle for the "Change User" button on the "Account" page.
            $( \'#fs_change_user\' ).click( function ( evt ) {
                evt.preventDefault();

                showModal( evt );
            } );

            /**
             * Disables the "Change User" button when the email address is empty.
             */
            $modal.on( \'keyup paste delete cut\', \'input#fs_other_email_address_text_field\', function () {
                setTimeout( function () {
                    var emailAddress = $otherEmailAddressRadio.val().trim();

                    if ( emailAddress === previousEmailAddress ) {
                        return;
                    }

                    if ( \'\' === emailAddress ) {
                        disableUserChangeButton();
                    } else {
                        enableUserChangeButton();
                    }

                    previousEmailAddress = emailAddress;
                }, 100 );
            } ).focus();

            $modal.on( \'input propertychange\', \'input#fs_other_email_address_text_field\', function () {
                var emailAddress = $( this ).val().trim();

                /**
                 * If email address is not empty, enable the "Change User" button.
                 */
                if ( emailAddress.length > 0 ) {
                    enableUserChangeButton();
                }
            } );

            $modal.on( \'blur\', \'input#fs_other_email_address_text_field\', function( evt ) {
                var emailAddress = $( this ).val().trim();

                /**
                 * If email address is empty, disable the "Change User" button.
                 */
                if ( 0 === emailAddress.length ) {
                   disableUserChangeButton();
                }
            } );

            $modal.on( \'click\', \'.fs-user-change-button\', function ( evt ) {
                evt.preventDefault();

                if ( $( this ).hasClass( \'disabled\' ) ) {
                    return;
                }

                var emailAddress   = \'\',
                    licenseOwnerID = null;

                if ( ! isOtherEmailAddressSelected() ) {
                    licenseOwnerID = $licenseOwners.filter( \':checked\' ).val();
                } else {
                    emailAddress = $otherEmailAddressTextField.val().trim();

                    if ( 0 === emailAddress.length ) {
                        return;
                    }
                }

                disableUserChangeButton();

                $.ajax( {
                    url       : ajaxurl,
                    method    : \'POST\',
                    data      : {
                        action       : \''' cannot be parsed correct.
HTML code '$'\',
                        security     : \''' cannot be parsed correct.
HTML code '$'\',
                        email_address: emailAddress,
                        user_id      : licenseOwnerID,
                        module_id    : \''' cannot be parsed correct.
HTML code '$'\'
                    },
                    beforeSend: function () {
                        $userChangeButton
                            .text( \''' cannot be parsed correct.
HTML code '$'...\' )
                            .prepend(\'<i class="fs-ajax-spinner"></i>\');

                        $(document.body).css({\'cursor\': \'wait\'});
                    },
                    success   : function( result ) {
                        if ( result.success ) {
                            // Redirect to the "Account" page.
                            window.location.reload();
                        } else {
                            $(document.body).css({\'cursor\': \'auto\'});

                            showError( result.error.message ? result.error.message : result.error );
                            resetUserChangeButton();
                        }
                    },
                    error     : function () {
                        $(document.body).css({\'cursor\': \'auto\'});

                        showError( \''' cannot be parsed correct.
HTML code '$'\' );

                        resetUserChangeButton();
                    }
                } );
            } );

            // If the user has clicked outside the window, close the modal.
            $modal.on( \'click\', \'.fs-close, .button-secondary\', function () {
                closeModal();
                return false;
            } );
        }

        registerEventHandlers();

        /**
         * @returns {Boolean}
         */
        function isOtherEmailAddressSelected() {
            return ( \'other\' === $licenseOwners.filter( \':checked\' ).val() );
        }

        function showModal() {
            resetModal();

            // Display the dialog box.
            $modal.addClass( \'active\' );
            $( \'body\' ).addClass( \'has-fs-modal\' );

            // Select the first radio button.
            $licenseOwners.get( 0 ).click();

            $otherEmailAddressTextField.val( \'\' );
        }

        function closeModal() {
            $modal.removeClass( \'active\' );
            $( \'body\' ).removeClass( \'has-fs-modal\' );
        }

        function resetUserChangeButton() {
            enableUserChangeButton();
            $userChangeButton.text( '' cannot be parsed correct.
HTML code '$' );
        }

        function resetModal() {
            hideError();
            resetUserChangeButton();
        }

        function enableUserChangeButton() {
            $userChangeButton.removeClass( \'disabled\' );
        }

        function disableUserChangeButton() {
            $userChangeButton.addClass( \'disabled\' );
        }

        function hideError() {
            $changeUserResultMessage.hide();
        }

        function showError( msg ) {
            $changeUserResultMessage.find( \' > p\' ).html( msg );
            $changeUserResultMessage.show();
        }
    });
})( jQuery );
</script>
'' cannot be parsed correct.
HTML code '$'\',
                        security : \''' cannot be parsed correct.
HTML code '$'\',
                        module_id: \''' cannot be parsed correct.
HTML code '$'\'
                    }),
                    method    : \'POST\',
                    data      : {
                        is_marketing_allowed: allowMarketing,
                        plugin_ids          : pluginIDs
                    },
                    beforeSend: function() {
                        $this.text( '' cannot be parsed correct.
HTML code '$' + \'...\' );
                        $this.css({\'cursor\': \'wait\'});

                        $gdprOptinNotice.find( \'.button\' ).addClass( \'disabled\' );
                    },
                    complete  : function() {
                        $this.css({\'cursor\': cursor});

                        $gdprOptinNotice.remove();
                    }
                });
            });
        });
    })( jQuery );
</script>'' cannot be parsed correct.
HTML code '$']\')
                    .prop(\'selected\', true)
                    .change();
//            }, 100);

        };
        if ($(\'.fs-modal-license-activation\').length > 0) {
            prepareLicenseActivationDialog();
        } else {
            $(\'body\').on(\'licenseActivationLoaded\', function () {
                prepareLicenseActivationDialog();
            });
        }
    })(jQuery);
</script>'' cannot be parsed correct.
HTML code '$'-premium-name\').parents(\'.theme\'),
		    addPremiumMetadata = function (firstCall) {
			    if (!firstCall) {
				    // Seems like the original theme element is removed from the DOM,
				    // so we need to reselect the updated one.
				    $theme = $(\'#'' cannot be parsed correct.
HTML code '$'-premium-name\').parents(\'.theme\');
			    }

			    if (0 === $theme.find(\'.fs-premium-theme-badge-container\').length) {
				    $theme.addClass(\'fs-premium\');

				    var $themeBadgeContainer = $( \'<div class="fs-premium-theme-badge-container"></div>\' );

				    $themeBadgeContainer.append( \'<div class="fs-badge fs-premium-theme-badge">\' + '' cannot be parsed correct.
HTML code '$' + \'</div>\' );

				    '' cannot be parsed correct.
HTML code '$' + \'</div>\' );
                    '' cannot be parsed correct.
HTML code '$'
				    $theme.append( $themeBadgeContainer );
			    }
		    };

		addPremiumMetadata(true);

		$theme.contentChange(addPremiumMetadata);
	})(jQuery);
</script>'' cannot be parsed correct.
HTML code '$'<div class="fs-multisite-options-container fs-apply-on-all-sites"'' cannot be parsed correct.
HTML code '$' style="display: none;"'' cannot be parsed correct.
HTML code '$'>
    <table class="fs-all-sites-options">
        <tbody>
        <tr>
            <td width="600">
                <label>
                    '' cannot be parsed correct.
HTML code '$'">\'
            + \'	<div class="fs-modal-dialog">\'
            + \'		<div class="fs-modal-header">\'
            + \'		    <h4>'' cannot be parsed correct.
HTML code '$'</h4>\'
            + \'		</div>\'
            + \'		<div class="fs-modal-body">\'
            + \'			<div class="fs-modal-panel active">\' + '' cannot be parsed correct.
HTML code '$'</a></td>
                '' cannot be parsed correct.
HTML code '$'                '' cannot be parsed correct.
HTML code '$'                    <td><a class="action action-skip" data-action-type="skip" href="#">'' cannot be parsed correct.
HTML code '$'</a></td>
                '' cannot be parsed correct.
HTML code '$'            '' cannot be parsed correct.
HTML code '$'        </tr>
        </tbody>
    </table>
    <div class="fs-sites-list-container">
        <table cellspacing="0">
            <tbody>
            '' cannot be parsed correct.
HTML code '$'            '' cannot be parsed correct.
HTML code '$'                    <td class="blog-id"><span>'' cannot be parsed correct.
HTML code '$'</span>.</td>
                    <td width="600"><span>'' cannot be parsed correct.
HTML code '$'" type="hidden" value="'' cannot be parsed correct.
HTML code '$'" />
                       '' cannot be parsed correct.
HTML code '$'                    </td>
                    '' cannot be parsed correct.
HTML code '$'</span>
                </label>
            </td>
            '' cannot be parsed correct.
HTML code '$'</a></td>
                '' cannot be parsed correct.
HTML code '$'                '' cannot be parsed correct.
HTML code '$'		</tr>
		</thead>
		<tbody>
		'' cannot be parsed correct.
HTML code '$'">
					<td'' cannot be parsed correct.
HTML code '$'</td>
					'' cannot be parsed correct.
HTML code '$'</b>
								'' cannot be parsed correct.
HTML code '$'							'' cannot be parsed correct.
HTML code '$'						</td>
					'' cannot be parsed correct.
HTML code '$'				</tr>
				'' cannot be parsed correct.
HTML code '$'		</tbody>
	</table>
</div>'' cannot be parsed correct.
HTML code '$'" title="'' cannot be parsed correct.
HTML code '$'"><img src="'' cannot be parsed correct.
HTML code '$'"></a>
			</li>
		'' cannot be parsed correct.
HTML code '$'</ol>
'' cannot be parsed correct.
HTML code '$'\',
				pframe = $(\'<i\' + \'frame id="fs_promo_tab" src="\' + base_url + \'/promotional-tab/?'' cannot be parsed correct.
HTML code '$'#\' + encodeURIComponent(document.location.href) + \'" height="350" width="60" frameborder="0" style="  background: transparent; position: fixed; top: 20%; right: 0;" scrolling="no"></i\' + \'frame>\')
					.appendTo(\'#pframe\');

			FS.PostMessage.init(base_url);
			FS.PostMessage.receive(\'state\', function (state) {
				if (\'closed\' === state)
					$(\'#fs_promo_tab\').css(\'width\', \'60px\');
				else
					$(\'#fs_promo_tab\').css(\'width\', \'345px\');
			});
		});
	})(jQuery);
</script>
'' cannot be parsed correct.
HTML code '$'</a></td>
                        '' cannot be parsed correct.
HTML code '$'                        '' cannot be parsed correct.
HTML code '$'</a></td>
                        '' cannot be parsed correct.
HTML code '$'                        '' cannot be parsed correct.
HTML code '$'                            <td><a class="action action-skip" data-action-type="skip" href="#">'' cannot be parsed correct.
HTML code '$'</a></td>
                        '' cannot be parsed correct.
HTML code '$'                    '' cannot be parsed correct.
HTML code '$'                </tr>
            '' cannot be parsed correct.
HTML code '$'            </tbody>
        </table>
    </div>
</div>'' cannot be parsed correct.
HTML code '$'" width="80" height="80"/>
</div>'' cannot be parsed correct.
HTML code '$'</h3></li>
					'' cannot be parsed correct.
HTML code '$'				'' cannot be parsed correct.
HTML code '$'			</ul>
		</div>
	'' cannot be parsed correct.
HTML code '$'	<div>
		'' cannot be parsed correct.
HTML code '$'	<div class="fs-screenshots clearfix">
		<h2>'' cannot be parsed correct.
HTML code '$'</h2>
		<ul>
			'' cannot be parsed correct.
HTML code '$'">
						<style>
							#section-description .fs-screenshots'' cannot be parsed correct.
HTML code '$'							{
								background-image: url(\''' cannot be parsed correct.
HTML code '$'\');
							}
						</style>
						<a href='' cannot be parsed correct.
HTML code '$'"
						   title="'' cannot be parsed correct.
HTML code '$'"
						   class="fs-screenshot-'' cannot be parsed correct.
HTML code '$'"></a>
					</li>
				'' cannot be parsed correct.
HTML code '$'		</ul>
	</div>
'' cannot be parsed correct.
HTML code '$'"></div>
       '' cannot be parsed correct.
HTML code '$'\',
					// Pass the parent page URL into the i-frame in a meaningful way (this URL could be
					// passed via query string or hard coded into the child page, it depends on your needs).
					src          = base_url + \'/pricing/?'' cannot be parsed correct.
HTML code '$'#\' + encodeURIComponent(document.location.href),

					// Append the I-frame into the DOM.
					frame = $(\'<i\' + \'frame " src="\' + src + \'" width="100%" height="\' + frame_height + \'px" scrolling="no" frameborder="0" style="background: transparent; width: 1px; min-width: 100%;"><\/i\' + \'frame>\')
						.appendTo(\'#fs_frame\');

					FS.PostMessage.init(base_url, [frame[0]]);

					FS.PostMessage.receive(\'height\', function (data) {
						var h = data.height;
						if (!isNaN(h) && h > 0 && h != frame_height) {
							frame_height = h;
							frame.height(frame_height + \'px\');

							FS.PostMessage.postScroll(frame[0]);
						}
					});

					FS.PostMessage.receive(\'get_dimensions\', function (data) {
						FS.PostMessage.post(\'dimensions\', {
							height   : $(document.body).height(),
							scrollTop: $(document).scrollTop()
						}, frame[0]);
					});

					FS.PostMessage.receive(\'start_trial\', function (data) {
						openTrialConfirmationModal(data);
					});
				});
			})(jQuery);
		</script>
        '' cannot be parsed correct.
HTML code '$'	</div>
'' cannot be parsed correct.
HTML code '$'					<span class="fs-price">'' cannot be parsed correct.
HTML code '$'\',
							security : \''' cannot be parsed correct.
HTML code '$'\',
							module_id: \''' cannot be parsed correct.
HTML code '$'\'
						}),
						method     : \'POST\',
						data       : aboveTabsHtml + "\n" + tabsHtml + \'</div>\',
						dataType   : \'html\',
						// Avoid escaping the HTML.
						processData: false
					});
				}
			}
		});
	})(jQuery);
</script>'' cannot be parsed correct.
HTML code '$'\');

            var $tabClone = null;

            '' cannot be parsed correct.
HTML code '$'
            '' cannot be parsed correct.
HTML code '$'            // Add the Freemius tabs.
            $tabClone = $tab.clone();
            $tabClone.html('' cannot be parsed correct.
HTML code '$')
                .attr(\'href\', \''' cannot be parsed correct.
HTML code '$'\')
                .appendTo($tabsWrapper)
                // Remove any custom click events.
                .off(\'click\', \'**\')
                .addClass(\''' cannot be parsed correct.
HTML code '$'\')
                // Avoid tab click triggering parent events.
                .click(function (e) {
                    e.stopPropagation();
                });

            '' cannot be parsed correct.
HTML code '$'
            '' cannot be parsed correct.
HTML code '$'            // Select the relevant Freemius tab.
            $tabs.removeClass(\'nav-tab-active\');
            $tabClone.addClass(\'nav-tab-active\');

            '' cannot be parsed correct.
HTML code '$'
            // Fix URLs that are starting with a hashtag.
            $tabs.each(function (j, tab) {
                if (0 === $(tab).attr(\'href\').indexOf(\'#\')) {
                    $(tab).attr(\'href\', \''' cannot be parsed correct.
HTML code '$'\' + $(tab).attr(\'href\'));
                }
            });
            '' cannot be parsed correct.
HTML code '$'            '' cannot be parsed correct.
HTML code '$'
            var selectTab = function ($tab) {
                $(window).load(function () {
                    $tab.click();

                    // Scroll to the top since the browser will auto scroll to the anchor.
                    document.body.scrollTop = 0;
                    document.body.scrollLeft = 0;
//						window.scrollTo(0,0);
                });
            };

            // If the URL is loaded with a hashtag, find the context tab and select it.
            if (window.location.hash) {
                for (var j = 0; j < $tabs.length; j++) {
                    if (window.location.hash === $($tabs[j]).attr(\'href\')) {
                        selectTab($($tabs[j]));
                        break;
                    }
                }
            }

            '' cannot be parsed correct.
HTML code '$'            '' cannot be parsed correct.
HTML code '$'        });
    })(jQuery);
</script>'' cannot be parsed correct.
HTML code '$'</button>
        </div>
    </div>
    <ul class="cas-group-options hide-if-js">
        '' cannot be parsed correct.
HTML code '$'<input type="hidden" name="caps" value="" />'' cannot be parsed correct.
HTML code '$'<div class="js-rua-member-automations rua-member-automations">'' cannot be parsed correct.
HTML code '$'<span class="js-rua-member-trigger-remove wpca-condition-remove wpca-pull-right dashicons dashicons-trash"></span>'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'<select class="js-rua-add-member-automator">'' cannot be parsed correct.
HTML code '$'<option value="">Add</option>'' cannot be parsed correct.
HTML code '$'</optgroup>'' cannot be parsed correct.
HTML code '$'</select>'' cannot be parsed correct.
HTML code '$'<div style="background-color:#fcf0f1;padding: 8px 20px;border: 1px solid #c3c4c7;border-left-color: #d63638;border-left-width: 4px;">Synchronized Role option will be removed in a future version. Please use the Login State automation instead.</div>'' cannot be parsed correct.
HTML code '$'<select class="js-rua-user-suggest" multiple="multiple" name="users[]"></select>'' cannot be parsed correct.
HTML code '$'</td>
		<td>
			'' cannot be parsed correct.
HTML code '$'</td>
		<td>
'' cannot be parsed correct.
HTML code '$'</select></div>'' cannot be parsed correct.
HTML code '$'</td>
		<td>
			'' cannot be parsed correct.
HTML code '$'</td>
		<td>
			<input type="text" class="rua-input-md" name="post_name" value="'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:02:13.147780.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.038350.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 38 do_action/apply_filters calls and 153 add_action/add_filter calls. Now connecting do-add pairs.
Added 9 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:09.867362.

9 PHP_REACHES edges created
9 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running ArrayElementDetector
### Start running FrontBaseDetector
### Finish running FileProDetector
### Start running HashDetector
### Finish running DbaseDetector
### Start running IBMDb2Detector
### Finish running DbplusDetector
### Start running InformixDetector
### Finish running CubridDetector
### Start running IngresDetector
### Finish running FirebirdInterBaseDetector
### Start running maxdbDetector
### Finish running IBMDb2Detector
### Start running MongoDbDetector
### Finish running FrontBaseDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running InformixDetector
### Start running MySQLDetector
### Finish running MongoDbDetector
### Start running MySQLiDetector
### Finish running IngresDetector
### Start running Oci8Detector
### Finish running MySQLDetector
### Start running OpenSSLDetector
### Finish running MsqlDetector
### Start running ParadoxDetector
### Finish running Oci8Detector
### Start running PasswordHashingDetector
### Finish running ParadoxDetector
### Start running PhpCurlDetector
### Finish running PhpCurlDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PasswordHashingDetector
### Start running PHPRetrievalDetector
### Finish running HashDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPRetrievalDetector
### Start running PhpVarDetector
### Finish running PHPStorageDetector
### Start running PostgreSQLDetector
### Finish running PostgreSQLDetector
### Start running PropertyDetector
### Finish running PropertyDetector
### Start running Sqlite3Detector
### Finish running Sqlite3Detector
### Start running SqliteDetector
### Finish running OpenSSLDetector
### Start running SqlServerDetector
### Finish running MySQLiDetector
### Start running SybaseDetector
### Finish running maxdbDetector
### Start running TokyoTyrantDetector
### Finish running TokyoTyrantDetector
### Start running UserInputDetector
### Finish running PhpVarDetector
### Start running VariableDetector
### Finish running SqlServerDetector
### Start running WordpressHashingFnDetector
### Finish running SqliteDetector
### Start running WordPressRemoteDetector
### Finish running PHPIncludedDetector
### Start running WordPressRetrievalDetector
### Finish running SybaseDetector
### Start running WordPressStorageDetector
### Finish running UserInputDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running WordpressHashingFnDetector
### Start running GenericEncryptionDetector
### Finish running GenericDatabaseUsageDetector
### Start running DeletionDetector
### Finish running VariableDetector
### Start running UninstallDetector
### Finish running GenericEncryptionDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running WordPressStorageDetector
### Finish running WordPressRetrievalDetector
Error in WordPressRemoteDetector:
### Finished running detectors
lib/freemius/includes/sdk/FreemiusWordPress.php:259
  - hash_hmac called with approved hash algorithm sha256. 

lib/freemius/includes/class-freemius.php:2395
  - MD5 called with parameters [caller_file_path]. Ignore if [caller_file_path] does not contain personal information.
lib/freemius/includes/class-freemius.php:4056
  - MD5 called with parameters [microtime]. Ignore if [microtime] does not contain personal information.
lib/freemius/includes/class-freemius.php:4067
  - MD5 called with parameters [secure_auth, key]. Ignore if [secure_auth, key] does not contain personal information.
lib/freemius/includes/class-freemius.php:4115
  - MD5 called with parameters [siteurl]. Ignore if [siteurl] does not contain personal information.
lib/freemius/includes/class-freemius.php:8879
  - MD5 called with parameters [thumbprint]. Ignore if [thumbprint] does not contain personal information.
lib/freemius/includes/class-freemius.php:9142
  - MD5 called with parameters [themes_signature]. Ignore if [themes_signature] does not contain personal information.
lib/freemius/includes/class-freemius.php:9193
  - MD5 called with parameters [themes_signature]. Ignore if [themes_signature] does not contain personal information.
lib/freemius/includes/class-freemius.php:12374
  - MD5 called with parameters [secret_key, license]. Ignore if [secret_key, license] does not contain personal information.
lib/freemius/includes/class-freemius.php:12377
  - MD5 called with parameters [secret_key, license_user]. Ignore if [secret_key, license_user] does not contain personal information.
lib/freemius/includes/class-freemius.php:16569
  - MD5 called with parameters [rand, uniqid]. Ignore if [rand, uniqid] does not contain personal information.
lib/freemius/includes/class-freemius.php:16570
  - MD5 called with parameters [get_secret_key, salt, params, ts, this]. Ignore if [get_secret_key, salt, params, ts, this] does not contain personal information.
lib/freemius/includes/class-freemius.php:20053
  - MD5 called with parameters [license_or_user_key]. Ignore if [license_or_user_key] does not contain personal information.
lib/freemius/includes/class-freemius.php:23816
  - MD5 called with parameters [fs_strip_url_protocol, request, url, json_encode]. Ignore if [fs_strip_url_protocol, request, url, json_encode] does not contain personal information.
lib/freemius/includes/class-fs-api.php:87
  - MD5 called with parameters [, is_sandbox, id, public_key, secret_key, is_string, json_encode, slug, scope]. Ignore if [, is_sandbox, id, public_key, secret_key, is_string, json_encode, slug, scope] does not contain personal information.
lib/freemius/includes/class-fs-api.php:383
  - MD5 called with parameters [params, json_encode]. Ignore if [params, json_encode] does not contain personal information.
lib/freemius/includes/class-fs-security.php:57
  - MD5 called with parameters [id, public_key, secret_key, action, timestamp, entity]. Ignore if [id, public_key, secret_key, action, timestamp, entity] does not contain personal information.
lib/freemius/includes/fs-plugin-info-dialog.php:1508
  - MD5 called with parameters [microtime]. Ignore if [microtime] does not contain personal information.
lib/freemius/includes/managers/class-fs-admin-notice-manager.php:365
  - MD5 called with parameters [title, type,  , message]. Ignore if [title, type,  , message] does not contain personal information.
lib/freemius/includes/sdk/FreemiusWordPress.php:239
  - MD5 called with parameters [pPostParams]. Ignore if [pPostParams] does not contain personal information. 

lib/freemius/includes/class-freemius.php:577
  - object property '$current_wp_user->user_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:4216
  - object property '$current_user->user_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:4466
  - object property '$current_user->user_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:4714
  - object property '$current_user->user_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:4715
  - object property '$current_user->user_firstname' of personal types {'first_name', 'user_meta', 'user'} is found.
  - Data types: first_name, user_meta, user
lib/freemius/includes/class-freemius.php:4715
  - object property '$current_user->user_firstname' of personal types {'first_name', 'user_meta', 'user'} is found.
  - Data types: first_name, user_meta, user
lib/freemius/includes/class-freemius.php:4716
  - object property '$current_user->user_lastname' of personal types {'last_name', 'user_meta', 'user'} is found.
  - Data types: last_name, user_meta, user
lib/freemius/includes/class-freemius.php:4716
  - object property '$current_user->user_lastname' of personal types {'last_name', 'user_meta', 'user'} is found.
  - Data types: last_name, user_meta, user
lib/freemius/includes/class-freemius.php:7120
  - object property '$current_user->user_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:7924
  - object property '$parent_fs->get_current_or_network_user()->email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:7983
  - object property '$parent_fs->get_user()->email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:11128
  - object property '$user->email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:11131
  - object property '$user->email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:16187
  - object property '$user->email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:16234
  - object property '$user->email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:16510
  - object property '$current_user->user_firstname' of personal types {'first_name', 'user_meta', 'user'} is found.
  - Data types: first_name, user_meta, user
lib/freemius/includes/class-freemius.php:16510
  - object property '$current_user->user_firstname' of personal types {'first_name', 'user_meta', 'user'} is found.
  - Data types: first_name, user_meta, user
lib/freemius/includes/class-freemius.php:16511
  - object property '$current_user->user_lastname' of personal types {'last_name', 'user_meta', 'user'} is found.
  - Data types: last_name, user_meta, user
lib/freemius/includes/class-freemius.php:16511
  - object property '$current_user->user_lastname' of personal types {'last_name', 'user_meta', 'user'} is found.
  - Data types: last_name, user_meta, user
lib/freemius/includes/class-freemius.php:16512
  - object property '$current_user->user_nicename' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
lib/freemius/includes/class-freemius.php:16513
  - object property '$current_user->user_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:16617
  - object property '$current_user->user_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:16790
  - object property '$decoded->email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:16791
  - object property '$decoded->email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:17400
  - object property '$current_user->user_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:19538
  - object property '$this->_user->email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:19538
  - object property '$user->email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:19547
  - object property '$user->email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:21679
  - object property '$this->_user->email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:21679
  - object property '$user->email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:21904
  - object property '$this->_user->email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:21904
  - object property '$this->_user->email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:22226
  - object property '$this->_user->email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:22237
  - object property '$this->_user->email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:24967
  - object property '$current_wp_user->user_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:25016
  - object property '$current_fs_user->email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:25247
  - object property '$current_wp_user->user_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/entities/class-fs-plugin-plan.php:128
  - object property '$this->support_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/templates/account.php:379
  - object property '$user->email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/templates/account/billing.php:42
  - object property '$billing->address_street' of personal types {'address'} is found.
  - Data types: address
lib/freemius/templates/account/billing.php:43
  - object property '$billing->address_apt' of personal types {'address'} is found.
  - Data types: address
lib/freemius/templates/account/billing.php:46
  - object property '$billing->address_city' of personal types {'city', 'address'} is found.
  - Data types: city, address
lib/freemius/templates/account/billing.php:46
  - object property '$billing->address_city' of personal types {'city', 'address'} is found.
  - Data types: city, address
lib/freemius/templates/account/billing.php:47
  - object property '$billing->address_zip' of personal types {'address'} is found.
  - Data types: address
lib/freemius/templates/account/billing.php:303
  - object property '$billing->address_country_code' of personal types {'address', 'country'} is found.
  - Data types: address, country
lib/freemius/templates/account/billing.php:303
  - object property '$billing->address_country_code' of personal types {'address', 'country'} is found.
  - Data types: address, country
lib/freemius/templates/account/billing.php:308
  - object property '$billing->address_country_code' of personal types {'address', 'country'} is found.
  - Data types: address, country
lib/freemius/templates/account/billing.php:308
  - object property '$billing->address_country_code' of personal types {'address', 'country'} is found.
  - Data types: address, country
lib/freemius/templates/account/billing.php:312
  - object property '$billing->address_state' of personal types {'address', 'state'} is found.
  - Data types: address, state
lib/freemius/templates/account/billing.php:312
  - object property '$billing->address_state' of personal types {'address', 'state'} is found.
  - Data types: address, state
lib/freemius/templates/account/partials/site.php:203
  - object property '$user->email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/templates/checkout.php:124
  - object property '$current_user->user_firstname' of personal types {'first_name', 'user_meta', 'user'} is found.
  - Data types: first_name, user_meta, user
lib/freemius/templates/checkout.php:124
  - object property '$current_user->user_firstname' of personal types {'first_name', 'user_meta', 'user'} is found.
  - Data types: first_name, user_meta, user
lib/freemius/templates/checkout.php:125
  - object property '$current_user->user_lastname' of personal types {'last_name', 'user_meta', 'user'} is found.
  - Data types: last_name, user_meta, user
lib/freemius/templates/checkout.php:125
  - object property '$current_user->user_lastname' of personal types {'last_name', 'user_meta', 'user'} is found.
  - Data types: last_name, user_meta, user
lib/freemius/templates/checkout.php:126
  - object property '$current_user->user_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/templates/checkout.php:130
  - object property '$current_user->user_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/templates/connect.php:30
  - object property '$current_user->user_firstname' of personal types {'first_name', 'user_meta', 'user'} is found.
  - Data types: first_name, user_meta, user
lib/freemius/templates/connect.php:30
  - object property '$current_user->user_firstname' of personal types {'first_name', 'user_meta', 'user'} is found.
  - Data types: first_name, user_meta, user
lib/freemius/templates/connect.php:96
  - object property '$current_user->user_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/templates/connect.php:174
  - object property '$current_user->user_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/templates/debug.php:309
  - object property '$network_user->email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/templates/debug.php:521
  - object property '$user->email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/templates/debug.php:521
  - object property '$user->email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/templates/forms/affiliation.php:36
  - object property '$user->email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/templates/forms/affiliation.php:56
  - object property '$affiliate->paypal_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/templates/forms/affiliation.php:72
  - object property '$current_user->user_firstname' of personal types {'first_name', 'user_meta', 'user'} is found.
  - Data types: first_name, user_meta, user
lib/freemius/templates/forms/affiliation.php:72
  - object property '$current_user->user_lastname' of personal types {'last_name', 'user_meta', 'user'} is found.
  - Data types: last_name, user_meta, user
lib/freemius/templates/forms/affiliation.php:72
  - object property '$current_user->user_firstname' of personal types {'first_name', 'user_meta', 'user'} is found.
  - Data types: first_name, user_meta, user
lib/freemius/templates/forms/affiliation.php:72
  - object property '$current_user->user_lastname' of personal types {'last_name', 'user_meta', 'user'} is found.
  - Data types: last_name, user_meta, user
lib/freemius/templates/forms/affiliation.php:73
  - object property '$current_user->user_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/templates/forms/resend-key.php:38
  - object property '$current_user->user_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/templates/forms/user-change.php:42
  - object property '$license_owner->email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/templates/plugin-info/features.php:35
  - object property '$plan->support_email' of personal types {'email'} is found.
  - Data types: email
lib/wp-content-aware-engine/module/post_type.php:381
  - object property '$post->post_password' of personal types {'password'} is found.
  - Data types: password 

freemius.php:55
  - variable '$user_first_name' of personal types {'first_name', 'user_meta', 'user'} is found.
  - Data types: first_name, user_meta, user
freemius.php:55
  - variable '$user_first_name' of personal types {'first_name', 'user_meta', 'user'} is found.
  - Data types: first_name, user_meta, user
lib/freemius/includes/class-freemius.php:4161
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:4165
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:4216
  - variable '$admin_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:4275
  - variable '$admin_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:4275
  - variable '$admin_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:4306
  - variable '$admin_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:4306
  - variable '$admin_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:4337
  - variable '$admin_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:4337
  - variable '$admin_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:4413
  - variable '$admin_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:4413
  - variable '$admin_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:4466
  - variable '$admin_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:4482
  - variable '$custom_email_sections' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:4485
  - variable '$custom_email_sections' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:4499
  - variable '$custom_email_sections' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:4500
  - variable '$admin_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:4500
  - variable '$admin_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:4506
  - variable '$admin_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:4506
  - variable '$admin_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:4614
  - variable '$to_address' of personal types {'address'} is found.
  - Data types: address
lib/freemius/includes/class-freemius.php:7118
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:7120
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:7127
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:9665
  - variable '$address_to_blog_map' of personal types {'address'} is found.
  - Data types: address
lib/freemius/includes/class-freemius.php:9670
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
lib/freemius/includes/class-freemius.php:9671
  - variable '$address_to_blog_map' of personal types {'address'} is found.
  - Data types: address
lib/freemius/includes/class-freemius.php:9671
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
lib/freemius/includes/class-freemius.php:12220
  - variable '$address_to_blog_map' of personal types {'address'} is found.
  - Data types: address
lib/freemius/includes/class-freemius.php:12225
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
lib/freemius/includes/class-freemius.php:12226
  - variable '$address_to_blog_map' of personal types {'address'} is found.
  - Data types: address
lib/freemius/includes/class-freemius.php:12226
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
lib/freemius/includes/class-freemius.php:13335
  - variable '$new_email_address' of personal types {'email', 'address'} is found.
  - Data types: email, address
lib/freemius/includes/class-freemius.php:13335
  - variable '$new_email_address' of personal types {'email', 'address'} is found.
  - Data types: email, address
lib/freemius/includes/class-freemius.php:13338
  - variable '$new_email_address' of personal types {'email', 'address'} is found.
  - Data types: email, address
lib/freemius/includes/class-freemius.php:13338
  - variable '$new_email_address' of personal types {'email', 'address'} is found.
  - Data types: email, address
lib/freemius/includes/class-freemius.php:13344
  - variable '$new_email_address' of personal types {'email', 'address'} is found.
  - Data types: email, address
lib/freemius/includes/class-freemius.php:13344
  - variable '$new_email_address' of personal types {'email', 'address'} is found.
  - Data types: email, address
lib/freemius/includes/class-freemius.php:13345
  - variable '$new_email_address' of personal types {'email', 'address'} is found.
  - Data types: email, address
lib/freemius/includes/class-freemius.php:13345
  - variable '$new_email_address' of personal types {'email', 'address'} is found.
  - Data types: email, address
lib/freemius/includes/class-freemius.php:13370
  - variable '$new_email_address' of personal types {'email', 'address'} is found.
  - Data types: email, address
lib/freemius/includes/class-freemius.php:13370
  - variable '$new_email_address' of personal types {'email', 'address'} is found.
  - Data types: email, address
lib/freemius/includes/class-freemius.php:13375
  - variable '$new_email_address' of personal types {'email', 'address'} is found.
  - Data types: email, address
lib/freemius/includes/class-freemius.php:13375
  - variable '$new_email_address' of personal types {'email', 'address'} is found.
  - Data types: email, address
lib/freemius/includes/class-freemius.php:13395
  - variable '$new_email_address' of personal types {'email', 'address'} is found.
  - Data types: email, address
lib/freemius/includes/class-freemius.php:13395
  - variable '$new_email_address' of personal types {'email', 'address'} is found.
  - Data types: email, address
lib/freemius/includes/class-freemius.php:14077
  - variable '$email_address' of personal types {'email', 'address'} is found.
  - Data types: email, address
lib/freemius/includes/class-freemius.php:14077
  - variable '$email_address' of personal types {'email', 'address'} is found.
  - Data types: email, address
lib/freemius/includes/class-freemius.php:14079
  - variable '$email_address' of personal types {'email', 'address'} is found.
  - Data types: email, address
lib/freemius/includes/class-freemius.php:14079
  - variable '$email_address' of personal types {'email', 'address'} is found.
  - Data types: email, address
lib/freemius/includes/class-freemius.php:14088
  - variable '$email_address' of personal types {'email', 'address'} is found.
  - Data types: email, address
lib/freemius/includes/class-freemius.php:14088
  - variable '$email_address' of personal types {'email', 'address'} is found.
  - Data types: email, address
lib/freemius/includes/class-freemius.php:15230
  - variable '$address_to_blog_map' of personal types {'address'} is found.
  - Data types: address
lib/freemius/includes/class-freemius.php:15233
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
lib/freemius/includes/class-freemius.php:15234
  - variable '$address_to_blog_map' of personal types {'address'} is found.
  - Data types: address
lib/freemius/includes/class-freemius.php:15234
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
lib/freemius/includes/class-freemius.php:15237
  - variable '$address_to_blog_map' of personal types {'address'} is found.
  - Data types: address
lib/freemius/includes/class-freemius.php:16228
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:16228
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:16234
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:16615
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:16617
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:16629
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:16644
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:16645
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:16680
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:17327
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:17731
  - variable '$address_to_blog_map' of personal types {'address'} is found.
  - Data types: address
lib/freemius/includes/class-freemius.php:17736
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
lib/freemius/includes/class-freemius.php:17737
  - variable '$address_to_blog_map' of personal types {'address'} is found.
  - Data types: address
lib/freemius/includes/class-freemius.php:17737
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
lib/freemius/includes/class-freemius.php:17759
  - variable '$address_to_blog_map' of personal types {'address'} is found.
  - Data types: address
lib/freemius/includes/class-freemius.php:20438
  - variable '$address_to_blog_map' of personal types {'address'} is found.
  - Data types: address
lib/freemius/includes/class-freemius.php:20446
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
lib/freemius/includes/class-freemius.php:20447
  - variable '$address_to_blog_map' of personal types {'address'} is found.
  - Data types: address
lib/freemius/includes/class-freemius.php:20447
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
lib/freemius/includes/class-freemius.php:21671
  - variable '$new_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:21768
  - variable '$candidate_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:22223
  - variable '$candidate_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:22225
  - variable '$candidate_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:22230
  - variable '$candidate_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:22232
  - variable '$candidate_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:22252
  - variable '$new_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:22253
  - variable '$new_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:22260
  - variable '$new_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:22265
  - variable '$new_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:24885
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/class-freemius.php:24886
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/includes/fs-plugin-info-dialog.php:1462
  - variable '$contrib_username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
lib/freemius/includes/fs-plugin-info-dialog.php:1463
  - variable '$contrib_username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
lib/freemius/includes/fs-plugin-info-dialog.php:1466
  - variable '$contrib_username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
lib/freemius/includes/fs-plugin-info-dialog.php:1467
  - variable '$contrib_username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
lib/freemius/includes/fs-plugin-info-dialog.php:1469
  - variable '$contrib_username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
lib/freemius/includes/fs-plugin-info-dialog.php:1469
  - variable '$contrib_username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
lib/freemius/includes/fs-plugin-info-dialog.php:1471
  - variable '$contrib_username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
lib/freemius/includes/fs-plugin-info-dialog.php:1471
  - variable '$contrib_username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
lib/freemius/includes/fs-plugin-info-dialog.php:1473
  - variable '$contrib_username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
lib/freemius/includes/fs-plugin-info-dialog.php:1473
  - variable '$contrib_username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
lib/freemius/includes/sdk/FreemiusWordPress.php:109
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
lib/freemius/includes/sdk/FreemiusWordPress.php:111
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
lib/freemius/includes/sdk/FreemiusWordPress.php:112
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
lib/freemius/includes/sdk/FreemiusWordPress.php:112
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
lib/freemius/includes/sdk/FreemiusWordPress.php:115
  - variable '$address' of personal types {'address'} is found.
  - Data types: address
lib/freemius/templates/account/billing.php:306
  - variable '$country' of personal types {'country'} is found.
  - Data types: country
lib/freemius/templates/account/billing.php:308
  - variable '$country' of personal types {'country'} is found.
  - Data types: country
lib/freemius/templates/connect.php:30
  - variable '$first_name' of personal types {'first_name'} is found.
  - Data types: first_name
lib/freemius/templates/connect.php:31
  - variable '$first_name' of personal types {'first_name'} is found.
  - Data types: first_name
lib/freemius/templates/connect.php:32
  - variable '$first_name' of personal types {'first_name'} is found.
  - Data types: first_name
lib/freemius/templates/connect.php:112
  - variable '$first_name' of personal types {'first_name'} is found.
  - Data types: first_name
lib/freemius/templates/connect.php:172
  - variable '$first_name' of personal types {'first_name'} is found.
  - Data types: first_name
lib/freemius/templates/connect.php:185
  - variable '$first_name' of personal types {'first_name'} is found.
  - Data types: first_name
lib/freemius/templates/connect.php:223
  - variable '$first_name' of personal types {'first_name'} is found.
  - Data types: first_name
lib/freemius/templates/forms/affiliation.php:35
  - variable '$email_address' of personal types {'email', 'address'} is found.
  - Data types: email, address
lib/freemius/templates/forms/affiliation.php:35
  - variable '$email_address' of personal types {'email', 'address'} is found.
  - Data types: email, address
lib/freemius/templates/forms/affiliation.php:41
  - variable '$paypal_email_address' of personal types {'email', 'address'} is found.
  - Data types: email, address
lib/freemius/templates/forms/affiliation.php:41
  - variable '$paypal_email_address' of personal types {'email', 'address'} is found.
  - Data types: email, address
lib/freemius/templates/forms/affiliation.php:56
  - variable '$paypal_email_address' of personal types {'email', 'address'} is found.
  - Data types: email, address
lib/freemius/templates/forms/affiliation.php:56
  - variable '$paypal_email_address' of personal types {'email', 'address'} is found.
  - Data types: email, address
lib/freemius/templates/forms/affiliation.php:73
  - variable '$email_address' of personal types {'email', 'address'} is found.
  - Data types: email, address
lib/freemius/templates/forms/affiliation.php:73
  - variable '$email_address' of personal types {'email', 'address'} is found.
  - Data types: email, address
lib/freemius/templates/forms/affiliation.php:169
  - variable '$email_address' of personal types {'email', 'address'} is found.
  - Data types: email, address
lib/freemius/templates/forms/affiliation.php:169
  - variable '$email_address' of personal types {'email', 'address'} is found.
  - Data types: email, address
lib/freemius/templates/forms/affiliation.php:177
  - variable '$paypal_email_address' of personal types {'email', 'address'} is found.
  - Data types: email, address
lib/freemius/templates/forms/affiliation.php:177
  - variable '$paypal_email_address' of personal types {'email', 'address'} is found.
  - Data types: email, address
lib/freemius/templates/forms/resend-key.php:23
  - variable '$email_address_placeholder' of personal types {'email', 'address'} is found.
  - Data types: email, address
lib/freemius/templates/forms/resend-key.php:23
  - variable '$email_address_placeholder' of personal types {'email', 'address'} is found.
  - Data types: email, address
lib/freemius/templates/forms/resend-key.php:38
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/templates/forms/resend-key.php:39
  - variable '$esc_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/templates/forms/resend-key.php:39
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/templates/forms/resend-key.php:42
  - variable '$esc_email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/templates/forms/resend-key.php:42
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/templates/forms/resend-key.php:43
  - variable '$email_address_placeholder' of personal types {'email', 'address'} is found.
  - Data types: email, address
lib/freemius/templates/forms/resend-key.php:43
  - variable '$email_address_placeholder' of personal types {'email', 'address'} is found.
  - Data types: email, address
lib/freemius/templates/forms/resend-key.php:48
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/templates/forms/resend-key.php:52
  - variable '$email_address_placeholder' of personal types {'email', 'address'} is found.
  - Data types: email, address
lib/freemius/templates/forms/resend-key.php:52
  - variable '$email_address_placeholder' of personal types {'email', 'address'} is found.
  - Data types: email, address
lib/freemius/templates/forms/resend-key.php:89
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
lib/freemius/templates/forms/user-change.php:30
  - variable '$enter_email_address_placeholder_text' of personal types {'email', 'address'} is found.
  - Data types: email, address
lib/freemius/templates/forms/user-change.php:30
  - variable '$enter_email_address_placeholder_text' of personal types {'email', 'address'} is found.
  - Data types: email, address
lib/freemius/templates/forms/user-change.php:54
  - variable '$enter_email_address_placeholder_text' of personal types {'email', 'address'} is found.
  - Data types: email, address
lib/freemius/templates/forms/user-change.php:54
  - variable '$enter_email_address_placeholder_text' of personal types {'email', 'address'} is found.
  - Data types: email, address
lib/wp-content-aware-engine/module/post_type.php:379
  - variable '$post_states' of personal types {'state'} is found.
  - Data types: state
lib/wp-content-aware-engine/module/post_type.php:382
  - variable '$post_states' of personal types {'state'} is found.
  - Data types: state
lib/wp-content-aware-engine/module/post_type.php:386
  - variable '$post_states' of personal types {'state'} is found.
  - Data types: state
lib/wp-content-aware-engine/module/post_type.php:391
  - variable '$post_states' of personal types {'state'} is found.
  - Data types: state
lib/wp-content-aware-engine/module/post_type.php:394
  - variable '$post_states' of personal types {'state'} is found.
  - Data types: state
lib/wp-content-aware-engine/module/post_type.php:398
  - variable '$post_states' of personal types {'state'} is found.
  - Data types: state
lib/wp-content-aware-engine/module/post_type.php:401
  - variable '$post_states' of personal types {'state'} is found.
  - Data types: state
lib/wp-content-aware-engine/module/post_type.php:408
  - variable '$post_states' of personal types {'state'} is found.
  - Data types: state
lib/wp-content-aware-engine/module/post_type.php:408
  - variable '$post_states' of personal types {'state'} is found.
  - Data types: state
lib/wp-content-aware-engine/module/post_type.php:410
  - variable '$post_states' of personal types {'state'} is found.
  - Data types: state
lib/wp-content-aware-engine/module/post_type.php:410
  - variable '$post_states' of personal types {'state'} is found.
  - Data types: state 

admin/level-edit.php:79
  - RETRIEVAL call to get_user_meta($user->ID, RUA_App::"META_PREFIX" . "level", false) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
admin/level-edit.php:99
  - RETRIEVAL call to get_posts(["posts_per_page" => 20, "orderby" => "post_title", "order" => "ASC", "post_type" => "page", "post_status" => "publish", "s" => $_REQUEST["search"], "paged" => $_REQUEST["paged"], "update_post_term_cache" => false, "update_post_meta_cache" => false]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
admin/level-edit.php:360
  - RETRIEVAL call to get_users(["fields" => "ID", "number" => 2]) alters data types {'user_meta', 'user'}. Passed arguments: 0: $args (array). Returns (array).
  - Data types: user_meta, user
admin/level-edit.php:374
  - RETRIEVAL call to get_post($post_id, OBJECT, "edit") alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 2: $filter (string), 1: $output (string), 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, post_meta, wp_post
admin/level-edit.php:471
  - RETRIEVAL call to get_post($post_id) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, post_meta, wp_post
admin/level-edit.php:517
  - RETRIEVAL call to get_userdata($user_id) alters data types {'user_meta', 'user'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user_meta, user
admin/level-edit.php:709
  - RETRIEVAL call to get_post($post_ID) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, post_meta, wp_post
admin/level-edit.php:773
  - RETRIEVAL call to get_post($post_id) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, post_meta, wp_post
admin/level-edit.php:801
  - RETRIEVAL call to get_post($post_id) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, post_meta, wp_post
admin/level-list-table.php:477
  - RETRIEVAL call to get_userdata($lock_holder) alters data types {'user_meta', 'user'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user_meta, user
admin/level-list-table.php:525
  - RETRIEVAL call to get_users(["meta_key" => RUA_App::"META_PREFIX" . "level", "meta_value" => $post->ID, "fields" => "ID"]) alters data types {'user_meta', 'user'}. Passed arguments: 0: $args (array). Returns (array).
  - Data types: user_meta, user
admin/nav-menu.php:71
  - RETRIEVAL call to get_post_meta($item->ID, "_menu_item_level", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/nav-menu.php:136
  - RETRIEVAL call to get_post_meta($menu_item_db_id, $key, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/nav-menu.php:190
  - RETRIEVAL call to get_post_meta($id, "_menu_item_level", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/settings.php:154
  - RETRIEVAL call to get_option("default_role") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/settings.php:173
  - RETRIEVAL call to get_option("users_can_register") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/settings.php:216
  - RETRIEVAL call to get_post_meta($level->ID, RUA_App::"META_PREFIX" . "role", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $key (string), 2: $single (bool). Returns (mixed).
  - Data types: post_meta
admin/settings.php:218
  - RETRIEVAL call to get_option($this->prefix . "registration-level") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/settings.php:233
  - RETRIEVAL call to get_option($args["label_for"]) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
api/functions.php:17
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
app.php:447
  - RETRIEVAL call to get_posts(["numberposts" => -1, "post_type" => self::"TYPE_RESTRICT", "post_status" => [self::"STATUS_ACTIVE", self::"STATUS_INACTIVE", self::"STATUS_SCHEDULED"], "update_post_meta_cache" => true]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
app.php:481
  - RETRIEVAL call to get_post($post_id) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, post_meta, wp_post
app.php:557
  - RETRIEVAL call to get_post_meta($level->ID, self::"META_PREFIX" . "role", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
db_updates.php:111
  - RETRIEVAL call to get_option("rua-toolbar-hide", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
level.php:199
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
level.php:226
  - RETRIEVAL call to get_post($a["page"]) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, post_meta, wp_post
level.php:506
  - RETRIEVAL call to get_post_meta($condition, RUA_App::"META_PREFIX" . "opt_drip", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
level.php:606
  - RETRIEVAL call to get_post(self"page") alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, post_meta, wp_post
level.php:673
  - RETRIEVAL call to get_option("rua-registration-level", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/config.php:303
  - RETRIEVAL call to get_option("fs_debug_mode", null) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-freemius.php:1144
  - RETRIEVAL call to self"_accounts"->get_option("file_slug_map", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-freemius.php:1199
  - RETRIEVAL call to self"_accounts"->get_option("id_slug_type_path_map", [], $blog_id) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-freemius.php:1990
  - RETRIEVAL call to get_option("uninstall_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-freemius.php:2037
  - RETRIEVAL call to self"_accounts"->get_option("id_slug_type_path_map") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-freemius.php:2151
  - RETRIEVAL call to self"_accounts"->get_option("id_slug_type_path_map", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-freemius.php:2221
  - RETRIEVAL call to self"_accounts"->get_option("id_slug_type_path_map", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-freemius.php:3152
  - RETRIEVAL call to get_option("active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-freemius.php:3233
  - RETRIEVAL call to get_option("active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-freemius.php:3396
  - RETRIEVAL call to self"_accounts"->get_option("id_slug_type_path_map", null, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-freemius.php:3398
  - RETRIEVAL call to self"_accounts"->get_option("file_slug_map", null, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-freemius.php:3411
  - RETRIEVAL call to self"_accounts"->get_option("ms_migration_complete", false, true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-freemius.php:3412
  - RETRIEVAL call to self"_accounts"->get_option("file_slug_map", null, true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-freemius.php:3413
  - RETRIEVAL call to self"_accounts"->get_option("file_slug_map", null, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-freemius.php:3598
  - RETRIEVAL call to get_option($option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-freemius.php:4045
  - RETRIEVAL call to self"_accounts"->get_option("unique_id", null, $blog_id) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-freemius.php:4087
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
lib/freemius/includes/class-freemius.php:4919
  - RETRIEVAL call to $this->get_option($plugin_info, "parent_name", null) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-freemius.php:4922
  - RETRIEVAL call to $this->get_option($plugin_info["parent"], "name", null) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-freemius.php:5560
  - RETRIEVAL call to $this->get_option($plugin_info, "public_key", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-freemius.php:5561
  - RETRIEVAL call to $this->get_option($plugin_info, "secret_key", null) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-freemius.php:5563
  - RETRIEVAL call to $this->get_option($plugin_info, "parent_name", null) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-freemius.php:5605
  - RETRIEVAL call to $this->get_option($plugin_info, "premium_suffix", "(Premium)") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-freemius.php:5609
  - RETRIEVAL call to $this->get_option($plugin_info, "type", $this->_module_type) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-freemius.php:5612
  - RETRIEVAL call to $this->get_option($plugin_info, "premium_slug", $this->_slug"-premium") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-freemius.php:5620
  - RETRIEVAL call to $this->get_option($plugin_info, "has_affiliation") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-freemius.php:5621
  - RETRIEVAL call to $this->get_option($plugin_info, "bundle_id", null) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-freemius.php:5622
  - RETRIEVAL call to $this->get_option($plugin_info, "bundle_public_key", null) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-freemius.php:5682
  - RETRIEVAL call to $this->get_option($plugin_info, "permissions", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-freemius.php:5683
  - RETRIEVAL call to $this->get_option($plugin_info, "bundle_license_auto_activation", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-freemius.php:5696
  - RETRIEVAL call to $this->get_option($plugin_info, "navigation", $this->is_free_wp_org_theme()self::"NAVIGATION_TABS"self::"NAVIGATION_MENU") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-freemius.php:7146
  - RETRIEVAL call to get_transient("fs_"$this->_module_type"_"$this->_slug"_activated") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
lib/freemius/includes/class-freemius.php:8903
  - RETRIEVAL call to self"_accounts"->get_option($site_active_plugins_option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-freemius.php:8928
  - RETRIEVAL call to self"_accounts"->get_option($site_active_plugins_option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-freemius.php:8938
  - RETRIEVAL call to self"_accounts"->get_option($network_plugins_option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-freemius.php:9091
  - RETRIEVAL call to self"_accounts"->get_option($option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-freemius.php:9116
  - RETRIEVAL call to self"_accounts"->get_option($option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-freemius.php:10003
  - RETRIEVAL call to self"_accounts"->get_option("id_slug_type_path_map", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-freemius.php:10315
  - RETRIEVAL call to self"_accounts"->get_option("file_slug_map", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-freemius.php:10331
  - RETRIEVAL call to self"_accounts"->get_option("file_slug_map", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-freemius.php:10454
  - RETRIEVAL call to self"_accounts"->get_option($option_name, $default, $network_level_or_blog_id) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-freemius.php:10708
  - RETRIEVAL call to self"_accounts"->get_option("account_addons", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-freemius.php:11131
  - RETRIEVAL call to get_user_by("email", $user->email) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user_meta, user
lib/freemius/includes/class-freemius.php:14680
  - RETRIEVAL call to self"_accounts"->get_option("id_slug_type_path_map", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-freemius.php:20026
  - RETRIEVAL call to get_transient("fs_"$this->get_id()"_data_debug_mode") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
lib/freemius/includes/class-freemius.php:23819
  - RETRIEVAL call to get_transient($cache_key) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
lib/freemius/includes/class-fs-api.php:110
  - RETRIEVAL call to self"_options"->get_option("api_clock_diff", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-fs-api.php:113
  - RETRIEVAL call to self"_options"->get_option("api_force_http", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-fs-logger.php:91
  - RETRIEVAL call to get_option("fs_storage_logger", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-fs-logger.php:297
  - RETRIEVAL call to get_option("fs_storage_logger", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-fs-options.php:118
  - RETRIEVAL call to $this->_network_options->get_option($option, $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-fs-options.php:123
  - RETRIEVAL call to $site_options->get_option($option, $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-fs-options.php:263
  - RETRIEVAL call to $site_options->get_option($option) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-fs-options.php:272
  - RETRIEVAL call to $this->_network_options->get_option($option) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/freemius/includes/class-fs-plugin-updater.php:1204
  - RETRIEVAL call to get_option("active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/freemius/includes/fs-essential-functions.php:390
  - RETRIEVAL call to get_option("active_plugins", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/managers/class-fs-admin-menu-manager.php:183
  - RETRIEVAL call to $this->get_option($menu, "type", "page") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/managers/class-fs-admin-menu-manager.php:189
  - RETRIEVAL call to $this->get_option($menu["parent"], "slug") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/managers/class-fs-admin-menu-manager.php:191
  - RETRIEVAL call to $this->get_option($menu["parent"], "type", "page") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/managers/class-fs-admin-menu-manager.php:207
  - RETRIEVAL call to $this->get_option($menu, "first-path", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/managers/class-fs-cache-manager.php:104
  - RETRIEVAL call to $this->_options->get_option($key, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/managers/class-fs-cache-manager.php:124
  - RETRIEVAL call to $this->_options->get_option($key, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/managers/class-fs-cache-manager.php:163
  - RETRIEVAL call to $this->_options->get_option($key, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/managers/class-fs-cache-manager.php:187
  - RETRIEVAL call to $this->_options->get_option($key, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/managers/class-fs-cache-manager.php:233
  - RETRIEVAL call to $this->_options->get_option($key, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/managers/class-fs-cache-manager.php:274
  - RETRIEVAL call to $this->_options->get_option($key, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/managers/class-fs-cache-manager.php:299
  - RETRIEVAL call to $this->_options->get_option($key, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/managers/class-fs-gdpr-manager.php:65
  - RETRIEVAL call to $this->_storage->get_option($this->_option_name, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/managers/class-fs-key-value-storage.php:143
  - RETRIEVAL call to $this->get_option_manager()->get_option($this->_id, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/managers/class-fs-option-manager.php:193
  - RETRIEVAL call to get_option($option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/freemius/includes/managers/class-fs-plugin-manager.php:86
  - RETRIEVAL call to $option_manager->get_option($module_type . "s", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/managers/class-fs-plugin-manager.php:90
  - RETRIEVAL call to $option_manager->get_option(self::"OPTION_NAME_PLUGINS", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/includes/managers/class-fs-plugin-manager.php:91
  - RETRIEVAL call to $option_manager->get_option(self::"OPTION_NAME_THEMES", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/start.php:71
  - RETRIEVAL call to get_option("fs_active_plugins", stdClass()) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/templates/debug.php:87
  - RETRIEVAL call to $fs_options->get_option("ms_migration_complete", false, true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/templates/debug.php:230
  - RETRIEVAL call to $fs_options->get_option($module_type . "s") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/freemius/templates/debug.php:401
  - RETRIEVAL call to $fs_options->get_option($option_name, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/freemius/templates/debug/plugins-themes-sync.php:14
  - RETRIEVAL call to $fs_options->get_option("all_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/freemius/templates/debug/plugins-themes-sync.php:15
  - RETRIEVAL call to $fs_options->get_option("all_themes") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/freemius/templates/debug/scheduled-crons.php:22
  - RETRIEVAL call to $fs_options->get_option($module_type . "s") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/wp-content-aware-engine/core.php:633
  - RETRIEVAL call to get_post_meta($post_a->ID, "_ca_handle", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
lib/wp-content-aware-engine/core.php:634
  - RETRIEVAL call to get_post_meta($post_b->ID, "_ca_handle", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
lib/wp-content-aware-engine/core.php:653
  - RETRIEVAL call to get_post_meta($post->ID, "_ca_handle", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
lib/wp-content-aware-engine/core.php:732
  - RETRIEVAL call to get_post($post_id) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, post_meta, wp_post
lib/wp-content-aware-engine/core.php:762
  - RETRIEVAL call to get_post($post_id) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, post_meta, wp_post
lib/wp-content-aware-engine/core.php:766
  - RETRIEVAL call to get_posts(["posts_per_page" => -1, "post_type" => self::"TYPE_CONDITION_GROUP", "post_parent" => $post->ID, "post_status" => [self::"STATUS_PUBLISHED", self::"STATUS_NEGATED", self::"STATUS_EXCEPT", self::"STATUS_OR"], "order" => "ASC", "orderby" => "post_status"]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
lib/wp-content-aware-engine/core.php:873
  - RETRIEVAL call to get_post_meta($group_id, $key, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
lib/wp-content-aware-engine/core.php:940
  - RETRIEVAL call to get_post_meta($group->ID, $meta_key, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
lib/wp-content-aware-engine/core.php:1182
  - RETRIEVAL call to get_option(self::"OPTION_CONDITION_TYPE_CACHE", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/wp-content-aware-engine/core.php:1213
  - RETRIEVAL call to get_option(self::"OPTION_POST_TYPE_OPTIONS", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/wp-content-aware-engine/core.php:1238
  - RETRIEVAL call to get_option(self::"OPTION_POST_TYPE_OPTIONS", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/wp-content-aware-engine/meta.php:148
  - RETRIEVAL call to get_post_meta($post_id, WPCACore::"PREFIX" . $this->id, $single) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
lib/wp-content-aware-engine/module/base.php:190
  - RETRIEVAL call to get_post_meta($post_id, $meta_key, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
lib/wp-content-aware-engine/module/base.php:223
  - RETRIEVAL call to get_post_custom_values($this->get_data_key(), $post_id). Passed arguments: 1: $post_id (int), 0: $key (string). Returns (array|null).
lib/wp-content-aware-engine/module/base.php:273
  - RETRIEVAL call to get_post_custom_values($this->get_data_key(), $id). Passed arguments: 1: $post_id (int), 0: $key (string). Returns (array|null).
lib/wp-content-aware-engine/module/page_template.php:41
  - RETRIEVAL call to get_option("show_on_front") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/wp-content-aware-engine/module/page_template.php:41
  - RETRIEVAL call to get_option("page_on_front") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/wp-content-aware-engine/module/page_template.php:42
  - RETRIEVAL call to get_post_meta(get_the_ID(), "_wp_page_template", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
lib/wp-content-aware-engine/module/page_template.php:55
  - RETRIEVAL call to get_post_meta(get_the_ID(), "_wp_page_template", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
lib/wp-content-aware-engine/module/post_type.php:213
  - RETRIEVAL call to get_post_custom_values(WPCACore::"PREFIX" . $this->id, $post_id). Passed arguments: 1: $post_id (int), 0: $key (string). Returns (array|null).
lib/wp-content-aware-engine/module/post_type.php:300
  - RETRIEVAL call to get_option("show_on_front") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/wp-content-aware-engine/module/post_type.php:301
  - RETRIEVAL call to get_option("page_on_front") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/wp-content-aware-engine/module/post_type.php:302
  - RETRIEVAL call to get_option("page_for_posts") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/wp-content-aware-engine/module/post_type.php:419
  - RETRIEVAL call to get_post_meta($post_id, $meta_key, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
lib/wp-content-aware-engine/module/qtranslate.php:88
  - RETRIEVAL call to get_option("qtranslate_enabled_languages") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/wp-content-aware-engine/module/taxonomy.php:150
  - RETRIEVAL call to get_post_meta($condition_id, "_ca_taxonomy", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
lib/wp-content-aware-engine/module/taxonomy.php:326
  - RETRIEVAL call to get_post_custom_values(WPCACore::"PREFIX" . $this->id, $post_id). Passed arguments: 1: $post_id (int), 0: $key (string). Returns (array|null).
lib/wp-content-aware-engine/module/taxonomy.php:450
  - RETRIEVAL call to get_post_meta($post_id, $meta_key, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
lib/wp-content-aware-engine/module/transposh.php:76
  - RETRIEVAL call to get_option(TRANSPOSH_OPTIONS) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/wp-db-updater/wp-db-updater.php:163
  - RETRIEVAL call to get_option($this->version_key, "0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
models/user.php:73
  - RETRIEVAL call to get_user_meta($user_id, RUA_App::"META_PREFIX" . "level", false) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
models/user.php:79
  - RETRIEVAL call to get_post_meta($level->ID, RUA_App::"META_PREFIX" . "role", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
models/user_level.php:42
  - RETRIEVAL call to get_post_meta($level->get_id(), RUA_App::"META_PREFIX" . "role", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
view/meta_box_options.php:45
  - RETRIEVAL call to get_post($action_page) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, post_meta, wp_post 

admin/level-edit.php:556
  - STORAGE call to wp_delete_post($post_id, true) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post, post_meta, wp_post
admin/level-edit.php:733
  - STORAGE call to update_post_meta($post->ID, "_edit_last", $post_data["post_author"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/level-edit.php:734
  - STORAGE call to wp_update_post($post_data). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
admin/level-overview.php:227
  - STORAGE call to wp_delete_post($post_id) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post, post_meta, wp_post
admin/nav-menu.php:142
  - STORAGE call to add_post_meta($menu_item_db_id, $key, $level) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: post_meta
admin/nav-menu.php:146
  - STORAGE call to delete_post_meta($menu_item_db_id, $key, $level) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).
  - Data types: post_meta
db_updates.php:31
  - STORAGE call to update_option("_ca_condition_type_cache", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
db_updates.php:52
  - STORAGE call to add_post_meta($id, "_ca_taxonomy", "-1") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: post_meta
db_updates.php:113
  - STORAGE call to delete_option("rua-toolbar-hide") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
db_updates.php:181
  - STORAGE call to add_post_meta($group_id, "_ca_autoselect", 1, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).
  - Data types: post_meta
db_updates.php:242
  - STORAGE call to update_user_meta($level_date->user_id, "_ca_level_" . $levels_by_metaid[$level_date_metaid]->meta_value, $level_date->meta_value, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $prev_value (mixed). Returns (int|bool).
  - Data types: user_meta
db_updates.php:247
  - STORAGE call to delete_user_meta($level_date->user_id, $level_date->meta_key) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
lib/freemius/config.php:307
  - STORAGE call to add_option("fs_debug_mode", $debug_mode) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/freemius/includes/class-freemius.php:1994
  - STORAGE call to update_option("uninstall_plugins", $uninstallable_plugins) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/freemius/includes/class-freemius.php:3560
  - STORAGE call to update_option("fs_debug_mode", $is_on) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/freemius/includes/class-freemius.php:3633
  - STORAGE call to update_option($option_name, $option_value) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/freemius/includes/class-freemius.php:3664
  - STORAGE call to delete_option("fs_active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
lib/freemius/includes/class-freemius.php:7167
  - STORAGE call to delete_transient("fs_"$this->_module_type"_"$this->_slug"_activated") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).
  - Data types: site
lib/freemius/includes/class-freemius.php:7878
  - STORAGE call to set_transient("fs_"$this->_module_type"_"$this->_slug"_activated", true, 60) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
lib/freemius/includes/class-freemius.php:20072
  - STORAGE call to set_transient("fs_"$this->get_id()"_data_debug_mode", $transient_value, WP_FS__TIME_24_HOURS_IN_SEC / 24) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
lib/freemius/includes/class-freemius.php:23849
  - STORAGE call to set_transient($cache_key, $response, $response instanceof WP_Error$failure_cache_expiration$success_cache_expiration) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
lib/freemius/includes/class-fs-logger.php:358
  - STORAGE call to update_option("fs_storage_logger", $is_on10) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/freemius/includes/class-fs-plugin-updater.php:1220
  - STORAGE call to update_option("active_plugins", $active_plugins_basenames) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/freemius/includes/fs-essential-functions.php:366
  - STORAGE call to update_option("fs_active_plugins", $fs_active_plugins) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/freemius/includes/fs-essential-functions.php:417
  - STORAGE call to update_option("active_plugins", $updated_active_plugins) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/freemius/includes/fs-essential-functions.php:496
  - STORAGE call to update_option("fs_active_plugins", $fs_active_plugins) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/freemius/includes/managers/class-fs-gdpr-manager.php:107
  - STORAGE call to $this->update_option("required", $is_required) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/freemius/includes/managers/class-fs-gdpr-manager.php:141
  - STORAGE call to $this->update_option("show_opt_in_notice", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/freemius/includes/managers/class-fs-gdpr-manager.php:180
  - STORAGE call to $this->update_option("notice_shown_at", WP_FS__SCRIPT_START_TIME) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/freemius/includes/managers/class-fs-option-manager.php:264
  - STORAGE call to delete_blog_option($this->_blog_id, $option_name) alters data types {'option'}. Passed arguments: 0: $id (int), 1: $option (string). Returns (bool).
  - Data types: option
lib/freemius/includes/managers/class-fs-option-manager.php:266
  - STORAGE call to delete_option($option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
lib/freemius/includes/managers/class-fs-option-manager.php:437
  - STORAGE call to update_option($option_name, $this->_options, $this->_autoload) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
lib/freemius/start.php:129
  - STORAGE call to update_option("fs_active_plugins", $fs_active_plugins) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/freemius/start.php:220
  - STORAGE call to update_option("fs_active_plugins", $fs_active_plugins) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/freemius/start.php:265
  - STORAGE call to update_option("fs_active_plugins", $fs_active_plugins) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/freemius/start.php:426
  - STORAGE call to update_option("fs_active_plugins", $fs_active_plugins) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/freemius/start.php:470
  - STORAGE call to update_option("fs_active_plugins", $fs_active_plugins) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/wp-content-aware-engine/core.php:221
  - STORAGE call to update_option(self::"OPTION_CONDITION_TYPE_CACHE", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/wp-content-aware-engine/core.php:245
  - STORAGE call to update_option(self::"OPTION_CONDITION_TYPE_CACHE", $cache) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/wp-content-aware-engine/core.php:346
  - STORAGE call to wp_delete_post($group_id, true) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post, post_meta, wp_post
lib/wp-content-aware-engine/core.php:529
  - STORAGE call to update_meta_cache("post", array_keys($groups_in_context + $groups_negated)) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_ids (string|int[]). Returns (array|false).
  - Data types: meta
lib/wp-content-aware-engine/core.php:736
  - STORAGE call to wp_update_post(["ID" => $post->ID, "post_title" => "", "post_status" => "draft"]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
lib/wp-content-aware-engine/core.php:743
  - STORAGE call to wp_insert_post(["post_status" => self::"STATUS_OR", "menu_order" => self::"EXP_SINGULAR_ARCHIVE", "post_type" => self::"TYPE_CONDITION_GROUP", "post_author" => $post->post_author, "post_parent" => $post->ID]). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
lib/wp-content-aware-engine/core.php:805
  - STORAGE call to wp_delete_post(intval($_POST["id"]), true) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post, post_meta, wp_post
lib/wp-content-aware-engine/core.php:821
  - STORAGE call to wp_update_post(["ID" => $post_id, "post_status" => self->sanitize_status($_POST["status"]), "menu_order" => $_POST["exposure"]]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
lib/wp-content-aware-engine/core.php:828
  - STORAGE call to update_option(self::"OPTION_CONDITION_TYPE_CACHE", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/wp-content-aware-engine/core.php:872
  - STORAGE call to update_post_meta($group_id, $key, $value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
lib/wp-content-aware-engine/core.php:874
  - STORAGE call to delete_post_meta($group_id, $key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
lib/wp-content-aware-engine/core.php:1250
  - STORAGE call to update_option(self::"OPTION_POST_TYPE_OPTIONS", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/wp-content-aware-engine/meta.php:166
  - STORAGE call to update_post_meta($post_id, WPCACore::"PREFIX" . $this->id, $value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
lib/wp-content-aware-engine/meta.php:168
  - STORAGE call to add_post_meta($post_id, WPCACore::"PREFIX" . $this->id, $value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: post_meta
lib/wp-content-aware-engine/meta.php:182
  - STORAGE call to delete_post_meta($post_id, WPCACore::"PREFIX" . $this->id, $value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).
  - Data types: post_meta
lib/wp-content-aware-engine/module/base.php:200
  - STORAGE call to add_post_meta($post_id, $meta_key, $new_single) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: post_meta
lib/wp-content-aware-engine/module/base.php:205
  - STORAGE call to delete_post_meta($post_id, $meta_key, $old_key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).
  - Data types: post_meta
lib/wp-content-aware-engine/module/base.php:209
  - STORAGE call to delete_post_meta($post_id, $meta_key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
lib/wp-content-aware-engine/module/post_type.php:436
  - STORAGE call to add_post_meta($post_id, $meta_key, $new_single) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: post_meta
lib/wp-content-aware-engine/module/post_type.php:441
  - STORAGE call to delete_post_meta($post_id, $meta_key, $old_key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).
  - Data types: post_meta
lib/wp-content-aware-engine/module/post_type.php:445
  - STORAGE call to delete_post_meta($post_id, $meta_key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
lib/wp-content-aware-engine/module/post_type.php:523
  - STORAGE call to add_post_meta($condition->ID, WPCACore::"PREFIX" . $this->id, $post_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: post_meta
lib/wp-content-aware-engine/module/taxonomy.php:463
  - STORAGE call to delete_post_meta($post_id, $meta_key, $taxonomy->name) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).
  - Data types: post_meta
lib/wp-content-aware-engine/module/taxonomy.php:472
  - STORAGE call to add_post_meta($post_id, $meta_key, $taxonomy->name) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: post_meta
lib/wp-content-aware-engine/module/taxonomy.php:477
  - STORAGE call to delete_post_meta($post_id, $meta_key, $taxonomy->name) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).
  - Data types: post_meta
lib/wp-content-aware-engine/module/taxonomy.php:495
  - STORAGE call to add_post_meta($post_id, $meta_key, self::"VALUE_HAS_TERMS") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: post_meta
lib/wp-content-aware-engine/module/taxonomy.php:497
  - STORAGE call to delete_post_meta($post_id, $meta_key, self::"VALUE_HAS_TERMS") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).
  - Data types: post_meta
lib/wp-db-updater/wp-db-updater.php:186
  - STORAGE call to update_option($this->version_key, $this->installed_version) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
models/user.php:139
  - STORAGE call to add_user_meta($user_id, RUA_App::"META_PREFIX" . "level", $level_id, false) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).
  - Data types: user_meta
models/user.php:140
  - STORAGE call to add_user_meta($user_id, RUA_App::"META_PREFIX" . "level_" . $level_id, time(), true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).
  - Data types: user_meta
models/user.php:156
  - STORAGE call to delete_user_meta($user_id, RUA_App::"META_PREFIX" . "level", $level_id) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).
  - Data types: user_meta
models/user.php:158
  - STORAGE call to delete_user_meta($user_id, RUA_App::"META_PREFIX" . "level_" . $level_id) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
models/user.php:159
  - STORAGE call to delete_user_meta($user_id, RUA_App::"META_PREFIX" . "level_status_" . $level_id) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
models/user.php:160
  - STORAGE call to delete_user_meta($user_id, RUA_App::"META_PREFIX" . "level_expiry_" . $level_id) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
models/user_level.php:48
  - STORAGE call to $this->update_meta(self::"KEY_STATUS", self::"STATUS_EXPIRED") alters data types {'meta'}. Passed arguments: 0: $meta_id (int), 1: $meta_key (string), 2: $meta_value (string). Returns (bool).
  - Data types: meta
models/user_level.php:106
  - STORAGE call to $this->update_meta(self::"KEY_STATUS", $status) alters data types {'meta'}. Passed arguments: 0: $meta_id (int), 1: $meta_key (string), 2: $meta_value (string). Returns (bool).
  - Data types: meta
models/user_level.php:139
  - STORAGE call to $this->update_meta(self::"KEY_EXPIRY", $time) alters data types {'meta'}. Passed arguments: 0: $meta_id (int), 1: $meta_key (string), 2: $meta_value (string). Returns (bool).
  - Data types: meta
models/user_level.php:200
  - STORAGE call to update_user_meta($user_id, RUA_App::"META_PREFIX" . $key . "_" . $this->get_level_id(), $value) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta 

api/functions.php:21
  - WP_User object is created.
  - Data types: user_meta, user 

lib/freemius/includes/class-freemius.php:2491
  - CRYPTOGRAPHY call to $this->is_anonymous().
lib/freemius/includes/class-freemius.php:2618
  - CRYPTOGRAPHY call to $this->is_enable_anonymous().
lib/freemius/includes/class-freemius.php:3021
  - CRYPTOGRAPHY call to $this->is_enable_anonymous().
lib/freemius/includes/class-freemius.php:3022
  - CRYPTOGRAPHY call to $this->is_anonymous().
lib/freemius/includes/class-freemius.php:3059
  - CRYPTOGRAPHY call to $this->is_network_anonymous().
lib/freemius/includes/class-freemius.php:3901
  - CRYPTOGRAPHY call to $this->get_anonymous_id($blog_id).
lib/freemius/includes/class-freemius.php:4694
  - CRYPTOGRAPHY call to $this->get_anonymous_id().
lib/freemius/includes/class-freemius.php:4790
  - CRYPTOGRAPHY call to $this->is_anonymous().
lib/freemius/includes/class-freemius.php:5068
  - CRYPTOGRAPHY call to $this->is_anonymous().
lib/freemius/includes/class-freemius.php:5076
  - CRYPTOGRAPHY call to $this->is_anonymous().
lib/freemius/includes/class-freemius.php:6295
  - CRYPTOGRAPHY call to $this->is_network_anonymous().
lib/freemius/includes/class-freemius.php:6306
  - CRYPTOGRAPHY call to $this->set_anonymous_mode($this->_storage->is_anonymous).
lib/freemius/includes/class-freemius.php:6328
  - CRYPTOGRAPHY call to $this->is_network_anonymous().
lib/freemius/includes/class-freemius.php:7207
  - CRYPTOGRAPHY call to $this->is_anonymous().
lib/freemius/includes/class-freemius.php:7245
  - CRYPTOGRAPHY call to $this->_parent->is_anonymous().
lib/freemius/includes/class-freemius.php:7296
  - CRYPTOGRAPHY call to $this->_parent->is_anonymous().
lib/freemius/includes/class-freemius.php:7778
  - CRYPTOGRAPHY call to $this->is_anonymous().
lib/freemius/includes/class-freemius.php:7803
  - CRYPTOGRAPHY call to $this->reset_anonymous_mode($network).
lib/freemius/includes/class-freemius.php:7838
  - CRYPTOGRAPHY call to $this->is_anonymous().
lib/freemius/includes/class-freemius.php:8650
  - CRYPTOGRAPHY call to $this->is_network_anonymous().
lib/freemius/includes/class-freemius.php:8758
  - CRYPTOGRAPHY call to $this->is_anonymous().
lib/freemius/includes/class-freemius.php:8762
  - CRYPTOGRAPHY call to $this->reset_anonymous_mode(fs_is_network_admin()).
lib/freemius/includes/class-freemius.php:8784
  - CRYPTOGRAPHY call to $this->set_anonymous_mode(true, true).
lib/freemius/includes/class-freemius.php:8793
  - CRYPTOGRAPHY call to $this->set_anonymous_mode(true, true).
lib/freemius/includes/class-freemius.php:8799
  - CRYPTOGRAPHY call to $this->get_anonymous_id($blog_id).
lib/freemius/includes/class-freemius.php:8832
  - CRYPTOGRAPHY call to $this->set_anonymous_mode(true, $blog_id).
lib/freemius/includes/class-freemius.php:8836
  - CRYPTOGRAPHY call to $this->get_anonymous_id($blog_id).
lib/freemius/includes/class-freemius.php:9493
  - CRYPTOGRAPHY call to $this->get_anonymous_id().
lib/freemius/includes/class-freemius.php:9794
  - CRYPTOGRAPHY call to $this->get_anonymous_id().
lib/freemius/includes/class-freemius.php:12213
  - CRYPTOGRAPHY call to $this->reset_anonymous_mode().
lib/freemius/includes/class-freemius.php:12230
  - CRYPTOGRAPHY call to $this->reset_anonymous_mode($blog_id).
lib/freemius/includes/class-freemius.php:13776
  - CRYPTOGRAPHY call to $fs->is_anonymous_site($blog_id).
lib/freemius/includes/class-freemius.php:13785
  - CRYPTOGRAPHY call to $fs->is_enable_anonymous().
lib/freemius/includes/class-freemius.php:15485
  - CRYPTOGRAPHY call to $this->get_anonymous_id($blog_id).
lib/freemius/includes/class-freemius.php:16385
  - CRYPTOGRAPHY call to $this->get_anonymous_id().
lib/freemius/includes/class-freemius.php:16501
  - CRYPTOGRAPHY call to $this->is_anonymous().
lib/freemius/includes/class-freemius.php:16991
  - CRYPTOGRAPHY call to $this->is_anonymous().
lib/freemius/includes/class-freemius.php:17009
  - CRYPTOGRAPHY call to $this->is_anonymous().
lib/freemius/includes/class-freemius.php:17501
  - CRYPTOGRAPHY call to $this->get_anonymous_id().
lib/freemius/includes/class-freemius.php:17596
  - CRYPTOGRAPHY call to $this->get_anonymous_id().
lib/freemius/includes/class-freemius.php:17814
  - CRYPTOGRAPHY call to $parent_fs->get_anonymous_id().
lib/freemius/includes/class-freemius.php:17900
  - CRYPTOGRAPHY call to $this->is_anonymous().
lib/freemius/includes/class-freemius.php:17906
  - CRYPTOGRAPHY call to $this->is_enable_anonymous().
lib/freemius/includes/class-freemius.php:23432
  - CRYPTOGRAPHY call to $this->_parent->is_anonymous().
lib/freemius/includes/class-freemius.php:23453
  - CRYPTOGRAPHY call to $this->is_anonymous().
lib/freemius/includes/class-freemius.php:23477
  - CRYPTOGRAPHY call to $this->is_enable_anonymous().
lib/freemius/includes/class-freemius.php:23504
  - CRYPTOGRAPHY call to $this->is_anonymous().
lib/freemius/includes/class-freemius.php:23510
  - CRYPTOGRAPHY call to $this->is_anonymous().
lib/freemius/includes/class-freemius.php:23558
  - CRYPTOGRAPHY call to $this->is_network_anonymous().
lib/freemius/includes/sdk/FreemiusWordPress.php:259
  - CRYPTOGRAPHY call to hash_hmac("sha256", $string_to_sign, $this->_secret).
lib/freemius/templates/account/partials/site.php:263
  - CRYPTOGRAPHY call to $license->get_html_escaped_masked_secret_key().
lib/freemius/templates/connect.php:119
  - CRYPTOGRAPHY call to $fs->fetch_and_store_current_user_gdpr_anonymously().
lib/freemius/templates/connect.php:144
  - CRYPTOGRAPHY call to $fs->is_enable_anonymous().
lib/freemius/templates/connect.php:316
  - CRYPTOGRAPHY call to $fs->is_enable_anonymous().
lib/freemius/templates/debug.php:578
  - CRYPTOGRAPHY call to $license->get_html_escaped_masked_secret_key().
lib/freemius/templates/forms/license-activation.php:127
  - CRYPTOGRAPHY call to $license->get_html_escaped_masked_secret_key().
lib/freemius/templates/forms/license-activation.php:148
  - CRYPTOGRAPHY call to $available_license->get_html_escaped_masked_secret_key().
lib/freemius/templates/partials/network-activation.php:45
  - CRYPTOGRAPHY call to $fs->is_enable_anonymous().
lib/freemius/templates/partials/network-activation.php:79
  - CRYPTOGRAPHY call to $fs->is_enable_anonymous(). 

admin/level-edit.php:556
  - DELETION call to wp_delete_post($post_id, true) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post, post_meta, wp_post
admin/level-overview.php:227
  - DELETION call to wp_delete_post($post_id) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post, post_meta, wp_post
admin/nav-menu.php:146
  - DELETION call to delete_post_meta($menu_item_db_id, $key, $level) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).
  - Data types: post_meta
db_updates.php:113
  - DELETION call to delete_option("rua-toolbar-hide") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
db_updates.php:247
  - DELETION call to delete_user_meta($level_date->user_id, $level_date->meta_key) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
lib/freemius/includes/class-freemius.php:3664
  - DELETION call to delete_option("fs_active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
lib/freemius/includes/class-fs-user-lock.php:115
  - DELETION call to delete_site_transient("locked_"$this->_wp_user_id). Passed arguments: 0: $transient (string). Returns (bool).
lib/freemius/includes/managers/class-fs-option-manager.php:264
  - DELETION call to delete_blog_option($this->_blog_id, $option_name) alters data types {'option'}. Passed arguments: 0: $id (int), 1: $option (string). Returns (bool).
  - Data types: option
lib/freemius/includes/managers/class-fs-option-manager.php:266
  - DELETION call to delete_option($option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
lib/wp-content-aware-engine/core.php:346
  - DELETION call to wp_delete_post($group_id, true) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post, post_meta, wp_post
lib/wp-content-aware-engine/core.php:805
  - DELETION call to wp_delete_post(intval($_POST["id"]), true) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post, post_meta, wp_post
lib/wp-content-aware-engine/core.php:874
  - DELETION call to delete_post_meta($group_id, $key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
lib/wp-content-aware-engine/meta.php:182
  - DELETION call to delete_post_meta($post_id, WPCACore::"PREFIX" . $this->id, $value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).
  - Data types: post_meta
lib/wp-content-aware-engine/module/base.php:205
  - DELETION call to delete_post_meta($post_id, $meta_key, $old_key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).
  - Data types: post_meta
lib/wp-content-aware-engine/module/base.php:209
  - DELETION call to delete_post_meta($post_id, $meta_key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
lib/wp-content-aware-engine/module/post_type.php:441
  - DELETION call to delete_post_meta($post_id, $meta_key, $old_key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).
  - Data types: post_meta
lib/wp-content-aware-engine/module/post_type.php:445
  - DELETION call to delete_post_meta($post_id, $meta_key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
lib/wp-content-aware-engine/module/taxonomy.php:463
  - DELETION call to delete_post_meta($post_id, $meta_key, $taxonomy->name) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).
  - Data types: post_meta
lib/wp-content-aware-engine/module/taxonomy.php:477
  - DELETION call to delete_post_meta($post_id, $meta_key, $taxonomy->name) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).
  - Data types: post_meta
lib/wp-content-aware-engine/module/taxonomy.php:497
  - DELETION call to delete_post_meta($post_id, $meta_key, self::"VALUE_HAS_TERMS") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).
  - Data types: post_meta
models/user.php:156
  - DELETION call to delete_user_meta($user_id, RUA_App::"META_PREFIX" . "level", $level_id) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).
  - Data types: user_meta
models/user.php:158
  - DELETION call to delete_user_meta($user_id, RUA_App::"META_PREFIX" . "level_" . $level_id) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
models/user.php:159
  - DELETION call to delete_user_meta($user_id, RUA_App::"META_PREFIX" . "level_status_" . $level_id) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
models/user.php:160
  - DELETION call to delete_user_meta($user_id, RUA_App::"META_PREFIX" . "level_expiry_" . $level_id) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta 

By data type:
address
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	PropertyDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	PropertyDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	PropertyDetector.(unknown) - {'address', 'state'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'address'}
	PropertyDetector.(unknown) - {'address', 'state'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	PropertyDetector.(unknown) - {'address', 'country'}
	PropertyDetector.(unknown) - {'address', 'country'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	PropertyDetector.(unknown) - {'city', 'address'}
	PropertyDetector.(unknown) - {'address', 'country'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'address'}
	PropertyDetector.(unknown) - {'address', 'country'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	PropertyDetector.(unknown) - {'city', 'address'}
	PropertyDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'address'}
city
	PropertyDetector.(unknown) - {'city', 'address'}
	PropertyDetector.(unknown) - {'city', 'address'}
country
	PropertyDetector.(unknown) - {'address', 'country'}
	PropertyDetector.(unknown) - {'address', 'country'}
	PropertyDetector.(unknown) - {'address', 'country'}
	VariableDetector.(unknown) - {'country'}
	PropertyDetector.(unknown) - {'address', 'country'}
	VariableDetector.(unknown) - {'country'}
email
	VariableDetector.(unknown) - {'email', 'address'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email', 'address'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email', 'address'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email', 'address'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email', 'address'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email', 'address'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email', 'address'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email', 'address'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email', 'address'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email', 'address'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email', 'address'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email', 'address'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email', 'address'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email', 'address'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
first_name
	PropertyDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	PropertyDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	PropertyDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	PropertyDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	PropertyDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	PropertyDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	VariableDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	PropertyDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	VariableDetector.(unknown) - {'first_name'}
	VariableDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	VariableDetector.(unknown) - {'first_name'}
	VariableDetector.(unknown) - {'first_name'}
	VariableDetector.(unknown) - {'first_name'}
	PropertyDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	PropertyDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	VariableDetector.(unknown) - {'first_name'}
	VariableDetector.(unknown) - {'first_name'}
	PropertyDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	VariableDetector.(unknown) - {'first_name'}
last_name
	PropertyDetector.(unknown) - {'last_name', 'user_meta', 'user'}
	PropertyDetector.(unknown) - {'last_name', 'user_meta', 'user'}
	PropertyDetector.(unknown) - {'last_name', 'user_meta', 'user'}
	PropertyDetector.(unknown) - {'last_name', 'user_meta', 'user'}
	PropertyDetector.(unknown) - {'last_name', 'user_meta', 'user'}
	PropertyDetector.(unknown) - {'last_name', 'user_meta', 'user'}
	PropertyDetector.(unknown) - {'last_name', 'user_meta', 'user'}
	PropertyDetector.(unknown) - {'last_name', 'user_meta', 'user'}
meta
	WordPressStorageDetector.update_meta_cache("post", array_keys($groups_in_context + $groups_negated)) - {'meta'}
	WordPressStorageDetector.$this->update_meta(self::"KEY_STATUS", $status) - {'meta'}
	WordPressStorageDetector.$this->update_meta(self::"KEY_EXPIRY", $time) - {'meta'}
	WordPressStorageDetector.$this->update_meta(self::"KEY_STATUS", self::"STATUS_EXPIRED") - {'meta'}
none
	PHPIncludedDetector.(unknown) - set()
	GenericEncryptionDetector.$this->is_network_anonymous() - set()
	WordPressRetrievalDetector.get_posts(["numberposts" => -1, "post_type" => self::"TYPE_RESTRICT", "post_status" => [self::"STATUS_ACTIVE", self::"STATUS_INACTIVE", self::"STATUS_SCHEDULED"], "update_post_meta_cache" => true]) - set()
	PHPIncludedDetector.(unknown) - set()
	GenericEncryptionDetector.$this->get_anonymous_id($blog_id) - set()
	PHPIncludedDetector.(unknown) - set()
	GenericEncryptionDetector.$this->get_anonymous_id() - set()
	GenericEncryptionDetector.$parent_fs->get_anonymous_id() - set()
	GenericEncryptionDetector.$this->set_anonymous_mode(true, $blog_id) - set()
	GenericEncryptionDetector.$this->set_anonymous_mode(true, true) - set()
	PHPIncludedDetector.(unknown) - set()
	GenericEncryptionDetector.$fs->is_anonymous_site($blog_id) - set()
	GenericEncryptionDetector.$this->reset_anonymous_mode($blog_id) - set()
	GenericEncryptionDetector.$this->get_anonymous_id() - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	GenericEncryptionDetector.$fs->is_enable_anonymous() - set()
	PHPIncludedDetector.(unknown) - set()
	GenericEncryptionDetector.$license->get_html_escaped_masked_secret_key() - set()
	GenericEncryptionDetector.$license->get_html_escaped_masked_secret_key() - set()
	WordPressRetrievalDetector.get_posts(["posts_per_page" => 20, "orderby" => "post_title", "order" => "ASC", "post_type" => "page", "post_status" => "publish", "s" => $_REQUEST["search"], "paged" => $_REQUEST["paged"], "update_post_term_cache" => false, "update_post_meta_cache" => false]) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	GenericEncryptionDetector.hash_hmac("sha256", $string_to_sign, $this->_secret) - set()
	PHPIncludedDetector.(unknown) - set()
	WordPressRetrievalDetector.get_post_custom_values(WPCACore::"PREFIX" . $this->id, $post_id) - set()
	GenericEncryptionDetector.$available_license->get_html_escaped_masked_secret_key() - set()
	GenericEncryptionDetector.$this->is_anonymous() - set()
	GenericEncryptionDetector.$this->is_anonymous() - set()
	GenericEncryptionDetector.$this->is_anonymous() - set()
	GenericEncryptionDetector.$this->is_anonymous() - set()
	GenericEncryptionDetector.$this->_parent->is_anonymous() - set()
	GenericEncryptionDetector.$this->is_enable_anonymous() - set()
	GenericEncryptionDetector.$this->_parent->is_anonymous() - set()
	GenericEncryptionDetector.$license->get_html_escaped_masked_secret_key() - set()
	GenericEncryptionDetector.$this->_parent->is_anonymous() - set()
	GenericEncryptionDetector.$this->is_enable_anonymous() - set()
	GenericEncryptionDetector.$this->reset_anonymous_mode(fs_is_network_admin()) - set()
	GenericEncryptionDetector.$this->get_anonymous_id($blog_id) - set()
	GenericEncryptionDetector.$this->get_anonymous_id() - set()
	GenericEncryptionDetector.$fs->is_enable_anonymous() - set()
	GenericEncryptionDetector.$this->reset_anonymous_mode($network) - set()
	GenericEncryptionDetector.$this->is_anonymous() - set()
	GenericEncryptionDetector.$this->get_anonymous_id($blog_id) - set()
	GenericEncryptionDetector.$this->is_anonymous() - set()
	GenericEncryptionDetector.$this->get_anonymous_id() - set()
	WordPressRetrievalDetector.get_post_custom_values($this->get_data_key(), $id) - set()
	GenericEncryptionDetector.$this->is_anonymous() - set()
	GenericEncryptionDetector.$this->is_enable_anonymous() - set()
	GenericEncryptionDetector.$this->is_anonymous() - set()
	GenericEncryptionDetector.$this->get_anonymous_id() - set()
	DeletionDetector.delete_site_transient("locked_"$this->_wp_user_id) - set()
	PHPIncludedDetector.(unknown) - set()
	WordPressRetrievalDetector.get_posts(["posts_per_page" => -1, "post_type" => self::"TYPE_CONDITION_GROUP", "post_parent" => $post->ID, "post_status" => [self::"STATUS_PUBLISHED", self::"STATUS_NEGATED", self::"STATUS_EXCEPT", self::"STATUS_OR"], "order" => "ASC", "orderby" => "post_status"]) - set()
	GenericEncryptionDetector.$this->is_anonymous() - set()
	GenericEncryptionDetector.$this->is_anonymous() - set()
	WordPressStorageDetector.wp_insert_post(["post_status" => self::"STATUS_OR", "menu_order" => self::"EXP_SINGULAR_ARCHIVE", "post_type" => self::"TYPE_CONDITION_GROUP", "post_author" => $post->post_author, "post_parent" => $post->ID]) - set()
	GenericEncryptionDetector.$this->set_anonymous_mode(true, true) - set()
	GenericEncryptionDetector.$this->is_anonymous() - set()
	GenericEncryptionDetector.$this->is_anonymous() - set()
	GenericEncryptionDetector.$this->reset_anonymous_mode() - set()
	GenericEncryptionDetector.$this->is_anonymous() - set()
	GenericEncryptionDetector.$this->is_network_anonymous() - set()
	PHPIncludedDetector.(unknown) - set()
	GenericEncryptionDetector.$this->get_anonymous_id($blog_id) - set()
	PHPIncludedDetector.(unknown) - set()
	GenericEncryptionDetector.$this->is_network_anonymous() - set()
	GenericEncryptionDetector.$this->set_anonymous_mode($this->_storage->is_anonymous) - set()
	WordPressStorageDetector.wp_update_post(["ID" => $post->ID, "post_title" => "", "post_status" => "draft"]) - set()
	GenericEncryptionDetector.$this->is_anonymous() - set()
	GenericEncryptionDetector.$this->get_anonymous_id() - set()
	PHPIncludedDetector.(unknown) - set()
	HashDetector.(unknown) - set()
	WordPressStorageDetector.wp_update_post($post_data) - set()
	PHPIncludedDetector.(unknown) - set()
	GenericEncryptionDetector.$this->is_anonymous() - set()
	GenericEncryptionDetector.$this->is_network_anonymous() - set()
	PHPIncludedDetector.(unknown) - set()
	WordPressRetrievalDetector.get_post_custom_values(WPCACore::"PREFIX" . $this->id, $post_id) - set()
	GenericEncryptionDetector.$this->is_enable_anonymous() - set()
	PHPIncludedDetector.(unknown) - set()
	WordPressStorageDetector.wp_update_post(["ID" => $post_id, "post_status" => self->sanitize_status($_POST["status"]), "menu_order" => $_POST["exposure"]]) - set()
	GenericEncryptionDetector.$fs->is_enable_anonymous() - set()
	GenericEncryptionDetector.$fs->fetch_and_store_current_user_gdpr_anonymously() - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	GenericEncryptionDetector.$this->is_anonymous() - set()
	GenericEncryptionDetector.$this->is_network_anonymous() - set()
	WordPressRetrievalDetector.get_post_custom_values($this->get_data_key(), $post_id) - set()
	GenericEncryptionDetector.$fs->is_enable_anonymous() - set()
	GenericEncryptionDetector.$fs->is_enable_anonymous() - set()
option
	WordPressStorageDetector.delete_option("rua-toolbar-hide") - {'option'}
	WordPressRetrievalDetector.get_option($this->version_key, "0") - {'option'}
	WordPressRetrievalDetector.get_option(self::"OPTION_POST_TYPE_OPTIONS", []) - {'option'}
	WordPressStorageDetector.update_option("fs_active_plugins", $fs_active_plugins) - {'option'}
	WordPressRetrievalDetector.$fs_options->get_option($option_name, []) - {'option'}
	WordPressRetrievalDetector.$this->get_option($plugin_info, "has_affiliation") - {'option'}
	WordPressRetrievalDetector.$this->_network_options->get_option($option, $default) - {'option'}
	WordPressRetrievalDetector.get_option("active_plugins", []) - {'option'}
	WordPressRetrievalDetector.self"_accounts"->get_option("ms_migration_complete", false, true) - {'option'}
	WordPressRetrievalDetector.self"_accounts"->get_option("id_slug_type_path_map", []) - {'option'}
	WordPressRetrievalDetector.get_option("rua-toolbar-hide", false) - {'option'}
	WordPressRetrievalDetector.self"_options"->get_option("api_force_http", false) - {'option'}
	WordPressStorageDetector.update_option(self::"OPTION_POST_TYPE_OPTIONS", $options) - {'option'}
	WordPressRetrievalDetector.get_option(TRANSPOSH_OPTIONS) - {'option'}
	WordPressRetrievalDetector.get_option("fs_active_plugins", stdClass()) - {'option'}
	WordPressStorageDetector.update_option("_ca_condition_type_cache", []) - {'option'}
	WordPressRetrievalDetector.self"_accounts"->get_option("id_slug_type_path_map", []) - {'option'}
	WordPressStorageDetector.update_option(self::"OPTION_CONDITION_TYPE_CACHE", []) - {'option'}
	WordPressRetrievalDetector.get_option($option_name) - {'option'}
	WordPressRetrievalDetector.self"_options"->get_option("api_clock_diff", 0) - {'option'}
	WordPressStorageDetector.$this->update_option("show_opt_in_notice", false) - {'option'}
	WordPressRetrievalDetector.$this->_options->get_option($key, false) - {'option'}
	WordPressRetrievalDetector.self"_accounts"->get_option("id_slug_type_path_map", null, false) - {'option'}
	WordPressRetrievalDetector.$fs_options->get_option("ms_migration_complete", false, true) - {'option'}
	WordPressRetrievalDetector.$this->_options->get_option($key, false) - {'option'}
	WordPressRetrievalDetector.$fs_options->get_option($module_type . "s") - {'option'}
	WordPressRetrievalDetector.get_option("users_can_register") - {'option'}
	WordPressStorageDetector.delete_blog_option($this->_blog_id, $option_name) - {'option'}
	WordPressStorageDetector.update_option("fs_active_plugins", $fs_active_plugins) - {'option'}
	WordPressStorageDetector.update_option("active_plugins", $updated_active_plugins) - {'option'}
	WordPressRetrievalDetector.get_option("active_plugins") - {'option'}
	WordPressStorageDetector.add_option("fs_debug_mode", $debug_mode) - {'option'}
	WordPressStorageDetector.update_option("fs_storage_logger", $is_on10) - {'option'}
	WordPressRetrievalDetector.get_option("active_plugins") - {'option'}
	WordPressStorageDetector.update_option("uninstall_plugins", $uninstallable_plugins) - {'option'}
	WordPressRetrievalDetector.get_option("fs_storage_logger", 0) - {'option'}
	WordPressRetrievalDetector.get_option("qtranslate_enabled_languages") - {'option'}
	WordPressRetrievalDetector.get_option("page_for_posts") - {'option'}
	WordPressRetrievalDetector.get_option("active_plugins") - {'option'}
	WordPressRetrievalDetector.self"_accounts"->get_option("unique_id", null, $blog_id) - {'option'}
	WordPressRetrievalDetector.get_option($option_name) - {'option'}
	WordPressStorageDetector.update_option("fs_active_plugins", $fs_active_plugins) - {'option'}
	WordPressRetrievalDetector.get_option("uninstall_plugins") - {'option'}
	WordPressRetrievalDetector.$fs_options->get_option("all_themes") - {'option'}
	WordPressRetrievalDetector.$this->get_option($menu["parent"], "slug") - {'option'}
	WordPressRetrievalDetector.self"_accounts"->get_option($option_name) - {'option'}
	WordPressRetrievalDetector.$option_manager->get_option($module_type . "s", []) - {'option'}
	WordPressRetrievalDetector.self"_accounts"->get_option($option_name) - {'option'}
	WordPressRetrievalDetector.$this->_network_options->get_option($option) - {'option'}
	WordPressRetrievalDetector.$option_manager->get_option(self::"OPTION_NAME_PLUGINS", []) - {'option'}
	WordPressStorageDetector.$this->update_option("notice_shown_at", WP_FS__SCRIPT_START_TIME) - {'option'}
	WordPressRetrievalDetector.$this->_options->get_option($key, false) - {'option'}
	WordPressRetrievalDetector.$this->get_option($plugin_info, "type", $this->_module_type) - {'option'}
	WordPressRetrievalDetector.$this->_storage->get_option($this->_option_name, []) - {'option'}
	WordPressStorageDetector.update_option("active_plugins", $active_plugins_basenames) - {'option'}
	WordPressRetrievalDetector.$this->get_option_manager()->get_option($this->_id, []) - {'option'}
	WordPressRetrievalDetector.$this->get_option($menu, "type", "page") - {'option'}
	WordPressStorageDetector.update_option(self::"OPTION_CONDITION_TYPE_CACHE", []) - {'option'}
	WordPressRetrievalDetector.$this->_options->get_option($key, false) - {'option'}
	WordPressRetrievalDetector.get_option("fs_storage_logger", 0) - {'option'}
	WordPressRetrievalDetector.self"_accounts"->get_option("file_slug_map", []) - {'option'}
	WordPressRetrievalDetector.$this->get_option($menu["parent"], "type", "page") - {'option'}
	WordPressStorageDetector.update_option(self::"OPTION_CONDITION_TYPE_CACHE", $cache) - {'option'}
	WordPressRetrievalDetector.$this->_options->get_option($key, false) - {'option'}
	WordPressRetrievalDetector.$option_manager->get_option(self::"OPTION_NAME_THEMES", []) - {'option'}
	WordPressRetrievalDetector.$this->get_option($menu, "first-path", false) - {'option'}
	WordPressRetrievalDetector.$fs_options->get_option($module_type . "s") - {'option'}
	WordPressRetrievalDetector.$this->get_option($plugin_info, "secret_key", null) - {'option'}
	WordPressRetrievalDetector.get_option("rua-registration-level", 0) - {'option'}
	WordPressRetrievalDetector.self"_accounts"->get_option("file_slug_map", null, false) - {'option'}
	WordPressRetrievalDetector.$this->get_option($plugin_info, "navigation", $this->is_free_wp_org_theme()self::"NAVIGATION_TABS"self::"NAVIGATION_MENU") - {'option'}
	WordPressRetrievalDetector.self"_accounts"->get_option($option_name, $default, $network_level_or_blog_id) - {'option'}
	WordPressStorageDetector.update_option($this->version_key, $this->installed_version) - {'option'}
	WordPressRetrievalDetector.$this->get_option($plugin_info, "public_key", false) - {'option'}
	WordPressRetrievalDetector.self"_accounts"->get_option("id_slug_type_path_map", [], $blog_id) - {'option'}
	WordPressRetrievalDetector.$site_options->get_option($option, $default) - {'option'}
	WordPressRetrievalDetector.self"_accounts"->get_option("id_slug_type_path_map") - {'option'}
	WordPressRetrievalDetector.self"_accounts"->get_option("id_slug_type_path_map", []) - {'option'}
	WordPressRetrievalDetector.self"_accounts"->get_option($network_plugins_option_name) - {'option'}
	WordPressRetrievalDetector.get_option("default_role") - {'option'}
	WordPressRetrievalDetector.$this->get_option($plugin_info, "parent_name", null) - {'option'}
	WordPressStorageDetector.$this->update_option("required", $is_required) - {'option'}
	WordPressRetrievalDetector.get_option("page_on_front") - {'option'}
	WordPressRetrievalDetector.get_option("show_on_front") - {'option'}
	DeletionDetector.delete_blog_option($this->_blog_id, $option_name) - {'option'}
	WordPressRetrievalDetector.get_option($this->prefix . "registration-level") - {'option'}
	WordPressRetrievalDetector.get_option("show_on_front") - {'option'}
	WordPressRetrievalDetector.$site_options->get_option($option) - {'option'}
	WordPressRetrievalDetector.self"_accounts"->get_option("id_slug_type_path_map", []) - {'option'}
	WordPressRetrievalDetector.$this->get_option($plugin_info, "bundle_id", null) - {'option'}
	WordPressRetrievalDetector.self"_accounts"->get_option($site_active_plugins_option_name) - {'option'}
	WordPressRetrievalDetector.$this->get_option($plugin_info, "bundle_public_key", null) - {'option'}
	DeletionDetector.delete_option($option_name) - {'option'}
	WordPressRetrievalDetector.self"_accounts"->get_option("file_slug_map", []) - {'option'}
	DeletionDetector.delete_option("rua-toolbar-hide") - {'option'}
	WordPressRetrievalDetector.get_option("page_on_front") - {'option'}
	WordPressRetrievalDetector.$this->get_option($plugin_info, "premium_suffix", "(Premium)") - {'option'}
	WordPressRetrievalDetector.self"_accounts"->get_option($site_active_plugins_option_name) - {'option'}
	WordPressRetrievalDetector.self"_accounts"->get_option("account_addons", []) - {'option'}
	DeletionDetector.delete_option("fs_active_plugins") - {'option'}
	WordPressRetrievalDetector.get_option($args["label_for"]) - {'option'}
	WordPressStorageDetector.update_option("fs_active_plugins", $fs_active_plugins) - {'option'}
	WordPressRetrievalDetector.get_option("fs_debug_mode", null) - {'option'}
	WordPressRetrievalDetector.self"_accounts"->get_option("file_slug_map", []) - {'option'}
	WordPressStorageDetector.delete_option("fs_active_plugins") - {'option'}
	WordPressStorageDetector.update_option("fs_active_plugins", $fs_active_plugins) - {'option'}
	WordPressRetrievalDetector.get_option(self::"OPTION_POST_TYPE_OPTIONS", []) - {'option'}
	WordPressStorageDetector.update_option("fs_debug_mode", $is_on) - {'option'}
	WordPressRetrievalDetector.self"_accounts"->get_option("file_slug_map", null, false) - {'option'}
	WordPressRetrievalDetector.$this->get_option($plugin_info, "parent_name", null) - {'option'}
	WordPressRetrievalDetector.$this->get_option($plugin_info, "permissions", []) - {'option'}
	WordPressRetrievalDetector.$fs_options->get_option("all_plugins") - {'option'}
	WordPressStorageDetector.update_option($option_name, $option_value) - {'option'}
	WordPressStorageDetector.update_option("fs_active_plugins", $fs_active_plugins) - {'option'}
	WordPressRetrievalDetector.$this->get_option($plugin_info, "bundle_license_auto_activation", false) - {'option'}
	WordPressRetrievalDetector.self"_accounts"->get_option("file_slug_map", null, true) - {'option'}
	WordPressStorageDetector.update_option("fs_active_plugins", $fs_active_plugins) - {'option'}
	WordPressRetrievalDetector.$this->_options->get_option($key, false) - {'option'}
	WordPressRetrievalDetector.$this->get_option($plugin_info, "premium_slug", $this->_slug"-premium") - {'option'}
	WordPressStorageDetector.update_option($option_name, $this->_options, $this->_autoload) - {'option'}
	WordPressRetrievalDetector.$this->_options->get_option($key, false) - {'option'}
	WordPressRetrievalDetector.$this->get_option($plugin_info["parent"], "name", null) - {'option'}
	WordPressRetrievalDetector.get_option(self::"OPTION_CONDITION_TYPE_CACHE", []) - {'option'}
	WordPressStorageDetector.delete_option($option_name) - {'option'}
password
	PropertyDetector.(unknown) - {'password'}
post
	WordPressRetrievalDetector.get_post($post_id) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($post_id, OBJECT, "edit") - {'post', 'post_meta', 'wp_post'}
	DeletionDetector.wp_delete_post($group_id, true) - {'post', 'post_meta', 'wp_post'}
	DeletionDetector.wp_delete_post($post_id) - {'post', 'post_meta', 'wp_post'}
	DeletionDetector.wp_delete_post(intval($_POST["id"]), true) - {'post', 'post_meta', 'wp_post'}
	WordPressStorageDetector.wp_delete_post($post_id, true) - {'post', 'post_meta', 'wp_post'}
	WordPressStorageDetector.wp_delete_post($post_id) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($post_id) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($action_page) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($post_id) - {'post', 'post_meta', 'wp_post'}
	WordPressStorageDetector.wp_delete_post($group_id, true) - {'post', 'post_meta', 'wp_post'}
	WordPressStorageDetector.wp_delete_post(intval($_POST["id"]), true) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($post_ID) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($post_id) - {'post', 'post_meta', 'wp_post'}
	DeletionDetector.wp_delete_post($post_id, true) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($a["page"]) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($post_id) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post(self"page") - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($post_id) - {'post', 'post_meta', 'wp_post'}
post_meta
	WordPressRetrievalDetector.get_post($post_id) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($post_a->ID, "_ca_handle", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($level->ID, self::"META_PREFIX" . "role", true) - {'post_meta'}
	WordPressStorageDetector.add_post_meta($id, "_ca_taxonomy", "-1") - {'post_meta'}
	WordPressRetrievalDetector.get_post($post_id, OBJECT, "edit") - {'post', 'post_meta', 'wp_post'}
	DeletionDetector.delete_post_meta($menu_item_db_id, $key, $level) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, WPCACore::"PREFIX" . $this->id, $value) - {'post_meta'}
	DeletionDetector.wp_delete_post($group_id, true) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($level->get_id(), RUA_App::"META_PREFIX" . "role", true) - {'post_meta'}
	DeletionDetector.wp_delete_post($post_id) - {'post', 'post_meta', 'wp_post'}
	DeletionDetector.wp_delete_post(intval($_POST["id"]), true) - {'post', 'post_meta', 'wp_post'}
	WordPressStorageDetector.wp_delete_post($post_id, true) - {'post', 'post_meta', 'wp_post'}
	WordPressStorageDetector.wp_delete_post($post_id) - {'post', 'post_meta', 'wp_post'}
	DeletionDetector.delete_post_meta($group_id, $key) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($group_id, $key, $value) - {'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'post', 'post_meta', 'wp_post'}
	WordPressStorageDetector.update_post_meta($post->ID, "_edit_last", $post_data["post_author"]) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, $meta_key, false) - {'post_meta'}
	WordPressRetrievalDetector.get_post($action_page) - {'post', 'post_meta', 'wp_post'}
	WordPressStorageDetector.delete_post_meta($group_id, $key) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($level->ID, RUA_App::"META_PREFIX" . "role", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, $meta_key, false) - {'post_meta'}
	DeletionDetector.delete_post_meta($post_id, $meta_key, $old_key) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($menu_item_db_id, $key, $level) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($menu_item_db_id, $key, false) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($group_id, $key, true) - {'post_meta'}
	DeletionDetector.delete_post_meta($post_id, $meta_key) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($id, "_menu_item_level", false) - {'post_meta'}
	WordPressStorageDetector.add_post_meta($menu_item_db_id, $key, $level) - {'post_meta'}
	DeletionDetector.delete_post_meta($post_id, $meta_key, self::"VALUE_HAS_TERMS") - {'post_meta'}
	DeletionDetector.delete_post_meta($post_id, $meta_key) - {'post_meta'}
	DeletionDetector.delete_post_meta($post_id, $meta_key, $taxonomy->name) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "_wp_page_template", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, $meta_key, false) - {'post_meta'}
	WordPressStorageDetector.add_post_meta($post_id, $meta_key, $new_single) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($group->ID, $meta_key, true) - {'post_meta'}
	DeletionDetector.delete_post_meta($post_id, $meta_key, $taxonomy->name) - {'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($post_b->ID, "_ca_handle", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($condition_id, "_ca_taxonomy", false) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post_id, $meta_key) - {'post_meta'}
	WordPressStorageDetector.wp_delete_post($group_id, true) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "_ca_handle", true) - {'post_meta'}
	WordPressStorageDetector.add_post_meta($post_id, WPCACore::"PREFIX" . $this->id, $value) - {'post_meta'}
	WordPressStorageDetector.wp_delete_post(intval($_POST["id"]), true) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($post_ID) - {'post', 'post_meta', 'wp_post'}
	WordPressStorageDetector.delete_post_meta($post_id, $meta_key, self::"VALUE_HAS_TERMS") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($item->ID, "_menu_item_level", false) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post_id, $meta_key, $taxonomy->name) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post_id, $meta_key) - {'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'post', 'post_meta', 'wp_post'}
	DeletionDetector.wp_delete_post($post_id, true) - {'post', 'post_meta', 'wp_post'}
	DeletionDetector.delete_post_meta($post_id, WPCACore::"PREFIX" . $this->id, $value) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post_id, $meta_key, $old_key) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "_wp_page_template", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($a["page"]) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($post_id) - {'post', 'post_meta', 'wp_post'}
	WordPressStorageDetector.delete_post_meta($post_id, $meta_key, $taxonomy->name) - {'post_meta'}
	WordPressStorageDetector.add_post_meta($condition->ID, WPCACore::"PREFIX" . $this->id, $post_id) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($condition, RUA_App::"META_PREFIX" . "opt_drip", true) - {'post_meta'}
	WordPressStorageDetector.add_post_meta($post_id, $meta_key, $taxonomy->name) - {'post_meta'}
	WordPressStorageDetector.add_post_meta($group_id, "_ca_autoselect", 1, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($level->ID, RUA_App::"META_PREFIX" . "role", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post(self"page") - {'post', 'post_meta', 'wp_post'}
	WordPressStorageDetector.add_post_meta($post_id, $meta_key, $new_single) - {'post_meta'}
	WordPressStorageDetector.add_post_meta($post_id, $meta_key, self::"VALUE_HAS_TERMS") - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post_id, $meta_key, $old_key) - {'post_meta'}
	DeletionDetector.delete_post_meta($post_id, $meta_key, $old_key) - {'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($post_id, WPCACore::"PREFIX" . $this->id, $single) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post_id, WPCACore::"PREFIX" . $this->id, $value) - {'post_meta'}
site
	WordPressRetrievalDetector.get_transient("fs_"$this->_module_type"_"$this->_slug"_activated") - {'site'}
	WordPressRetrievalDetector.get_transient($cache_key) - {'site'}
	WordPressRetrievalDetector.get_transient("fs_"$this->get_id()"_data_debug_mode") - {'site'}
	WordPressStorageDetector.set_transient("fs_"$this->_module_type"_"$this->_slug"_activated", true, 60) - {'site'}
	WordPressStorageDetector.set_transient($cache_key, $response, $response instanceof WP_Error$failure_cache_expiration$success_cache_expiration) - {'site'}
	WordPressStorageDetector.set_transient("fs_"$this->get_id()"_data_debug_mode", $transient_value, WP_FS__TIME_24_HOURS_IN_SEC / 24) - {'site'}
	WordPressStorageDetector.delete_transient("fs_"$this->_module_type"_"$this->_slug"_activated") - {'site'}
state
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	PropertyDetector.(unknown) - {'address', 'state'}
	PropertyDetector.(unknown) - {'address', 'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
user
	VariableDetector.(unknown) - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_userdata($lock_holder) - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	WordPressRetrievalDetector.get_userdata($user_id) - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	PropertyDetector.(unknown) - {'last_name', 'user_meta', 'user'}
	PropertyDetector.(unknown) - {'last_name', 'user_meta', 'user'}
	PropertyDetector.(unknown) - {'last_name', 'user_meta', 'user'}
	WordPressRetrievalDetector.get_user_by("email", $user->email) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	PropertyDetector.(unknown) - {'last_name', 'user_meta', 'user'}
	PropertyDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	PropertyDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	PropertyDetector.(unknown) - {'last_name', 'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_users(["meta_key" => RUA_App::"META_PREFIX" . "level", "meta_value" => $post->ID, "fields" => "ID"]) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	PropertyDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	PropertyDetector.(unknown) - {'last_name', 'user_meta', 'user'}
	WP_UserDetector.WP_User($user) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'last_name', 'user_meta', 'user'}
	PropertyDetector.(unknown) - {'last_name', 'user_meta', 'user'}
	PropertyDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	PropertyDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	WordPressRetrievalDetector.get_users(["fields" => "ID", "number" => 2]) - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'first_name', 'user_meta', 'user'}
user_meta
	WordPressStorageDetector.delete_user_meta($user_id, RUA_App::"META_PREFIX" . "level_expiry_" . $level_id) - {'user_meta'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_userdata($lock_holder) - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	WordPressRetrievalDetector.get_userdata($user_id) - {'user_meta', 'user'}
	WordPressStorageDetector.delete_user_meta($level_date->user_id, $level_date->meta_key) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id, RUA_App::"META_PREFIX" . "level", false) - {'user_meta'}
	PropertyDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	WordPressStorageDetector.delete_user_meta($user_id, RUA_App::"META_PREFIX" . "level", $level_id) - {'user_meta'}
	PropertyDetector.(unknown) - {'last_name', 'user_meta', 'user'}
	PropertyDetector.(unknown) - {'last_name', 'user_meta', 'user'}
	WordPressRetrievalDetector.get_user_meta($user->ID, RUA_App::"META_PREFIX" . "level", false) - {'user_meta'}
	DeletionDetector.delete_user_meta($user_id, RUA_App::"META_PREFIX" . "level", $level_id) - {'user_meta'}
	DeletionDetector.delete_user_meta($level_date->user_id, $level_date->meta_key) - {'user_meta'}
	WordPressStorageDetector.delete_user_meta($user_id, RUA_App::"META_PREFIX" . "level_" . $level_id) - {'user_meta'}
	DeletionDetector.delete_user_meta($user_id, RUA_App::"META_PREFIX" . "level_status_" . $level_id) - {'user_meta'}
	PropertyDetector.(unknown) - {'last_name', 'user_meta', 'user'}
	WordPressRetrievalDetector.get_user_by("email", $user->email) - {'user_meta', 'user'}
	WordPressStorageDetector.delete_user_meta($user_id, RUA_App::"META_PREFIX" . "level_status_" . $level_id) - {'user_meta'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressStorageDetector.add_user_meta($user_id, RUA_App::"META_PREFIX" . "level_" . $level_id, time(), true) - {'user_meta'}
	DeletionDetector.delete_user_meta($user_id, RUA_App::"META_PREFIX" . "level_" . $level_id) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, RUA_App::"META_PREFIX" . $key . "_" . $this->get_level_id(), $value) - {'user_meta'}
	PropertyDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	PropertyDetector.(unknown) - {'last_name', 'user_meta', 'user'}
	PropertyDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	PropertyDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	PropertyDetector.(unknown) - {'last_name', 'user_meta', 'user'}
	DeletionDetector.delete_user_meta($user_id, RUA_App::"META_PREFIX" . "level_expiry_" . $level_id) - {'user_meta'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_users(["meta_key" => RUA_App::"META_PREFIX" . "level", "meta_value" => $post->ID, "fields" => "ID"]) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	PropertyDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	PropertyDetector.(unknown) - {'last_name', 'user_meta', 'user'}
	WP_UserDetector.WP_User($user) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	WordPressStorageDetector.add_user_meta($user_id, RUA_App::"META_PREFIX" . "level", $level_id, false) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($level_date->user_id, "_ca_level_" . $levels_by_metaid[$level_date_metaid]->meta_value, $level_date->meta_value, true) - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'last_name', 'user_meta', 'user'}
	PropertyDetector.(unknown) - {'last_name', 'user_meta', 'user'}
	PropertyDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	PropertyDetector.(unknown) - {'first_name', 'user_meta', 'user'}
	WordPressRetrievalDetector.get_users(["fields" => "ID", "number" => 2]) - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'first_name', 'user_meta', 'user'}
wp_post
	WordPressRetrievalDetector.get_post($post_id) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($post_id, OBJECT, "edit") - {'post', 'post_meta', 'wp_post'}
	DeletionDetector.wp_delete_post($group_id, true) - {'post', 'post_meta', 'wp_post'}
	DeletionDetector.wp_delete_post($post_id) - {'post', 'post_meta', 'wp_post'}
	DeletionDetector.wp_delete_post(intval($_POST["id"]), true) - {'post', 'post_meta', 'wp_post'}
	WordPressStorageDetector.wp_delete_post($post_id, true) - {'post', 'post_meta', 'wp_post'}
	WordPressStorageDetector.wp_delete_post($post_id) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($post_id) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($action_page) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($post_id) - {'post', 'post_meta', 'wp_post'}
	WordPressStorageDetector.wp_delete_post($group_id, true) - {'post', 'post_meta', 'wp_post'}
	WordPressStorageDetector.wp_delete_post(intval($_POST["id"]), true) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($post_ID) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($post_id) - {'post', 'post_meta', 'wp_post'}
	DeletionDetector.wp_delete_post($post_id, true) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($a["page"]) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($post_id) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post(self"page") - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($post_id) - {'post', 'post_meta', 'wp_post'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:16:05.000489.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 3484 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.991712.

!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 9690
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 15084
1000 STORE_REACHES edges created
2000 STORE_REACHES edges created
3000 STORE_REACHES edges created
3484 STORE_REACHES edges created
3484 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 1000 nodes as PERSONAL
Tainted 2000 nodes as PERSONAL
Tainted 3000 nodes as PERSONAL
Tainted 4000 nodes as PERSONAL
Tainted 5000 nodes as PERSONAL
Tainted 6000 nodes as PERSONAL
Tainted 7000 nodes as PERSONAL
Tainted 8000 nodes as PERSONAL
Tainted 8199 nodes as PERSONAL
In total, tainted 8199 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 1000 nodes as ENCRYPTED
Tainted 2000 nodes as ENCRYPTED
Tainted 3000 nodes as ENCRYPTED
Tainted 4000 nodes as ENCRYPTED
Tainted 5000 nodes as ENCRYPTED
Tainted 6000 nodes as ENCRYPTED
Tainted 7000 nodes as ENCRYPTED
Tainted 7715 nodes as ENCRYPTED
In total, tainted 7715 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:18:21.690665.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:56:56.604008!
DELETION call to wp_delete_post($post_id, true) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
DELETION call to wp_delete_post($post_id) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).,None,None
DELETION call to delete_post_meta($menu_item_db_id, $key, $level) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).,None,None
DELETION call to delete_option("rua-toolbar-hide") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_user_meta($level_date->user_id, $level_date->meta_key) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_option("fs_active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_site_transient("locked_"$this->_wp_user_id). Passed arguments: 0: $transient (string). Returns (bool).,None,None
DELETION call to delete_blog_option($this->_blog_id, $option_name) alters data types {'option'}. Passed arguments: 0: $id (int), 1: $option (string). Returns (bool).,None,None
DELETION call to delete_option($option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to wp_delete_post($group_id, true) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
DELETION call to wp_delete_post(intval($_POST["id"]), true) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
DELETION call to delete_post_meta($group_id, $key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($post_id, WPCACore::"PREFIX" . $this->id, $value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).,None,None
DELETION call to delete_post_meta($post_id, $meta_key, $old_key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).,None,None
DELETION call to delete_post_meta($post_id, $meta_key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($post_id, $meta_key, $old_key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).,None,None
DELETION call to delete_post_meta($post_id, $meta_key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($post_id, $meta_key, $taxonomy->name) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).,None,None
DELETION call to delete_post_meta($post_id, $meta_key, $taxonomy->name) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).,None,None
DELETION call to delete_post_meta($post_id, $meta_key, self::"VALUE_HAS_TERMS") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).,None,None
DELETION call to delete_user_meta($user_id, RUA_App::"META_PREFIX" . "level", $level_id) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).,None,None
DELETION call to delete_user_meta($user_id, RUA_App::"META_PREFIX" . "level_" . $level_id) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_user_meta($user_id, RUA_App::"META_PREFIX" . "level_status_" . $level_id) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_user_meta($user_id, RUA_App::"META_PREFIX" . "level_expiry_" . $level_id) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
CRYPTOGRAPHY call to $this->reset_anonymous_mode().,None,None
CRYPTOGRAPHY call to $this->reset_anonymous_mode($blog_id).,None,None
CRYPTOGRAPHY call to $fs->is_anonymous_site($blog_id).,None,None
CRYPTOGRAPHY call to $fs->is_enable_anonymous().,None,None
CRYPTOGRAPHY call to $this->get_anonymous_id($blog_id).,None,None
CRYPTOGRAPHY call to $this->get_anonymous_id().,None,None
CRYPTOGRAPHY call to $this->is_anonymous().,None,None
CRYPTOGRAPHY call to $this->is_anonymous().,None,None
CRYPTOGRAPHY call to $this->is_anonymous().,None,None
CRYPTOGRAPHY call to $this->get_anonymous_id().,None,None
CRYPTOGRAPHY call to $this->get_anonymous_id().,None,None
CRYPTOGRAPHY call to $parent_fs->get_anonymous_id().,None,None
CRYPTOGRAPHY call to $this->is_anonymous().,None,None
CRYPTOGRAPHY call to $this->is_enable_anonymous().,None,None
CRYPTOGRAPHY call to $this->_parent->is_anonymous().,None,None
CRYPTOGRAPHY call to $this->is_anonymous().,None,None
CRYPTOGRAPHY call to $this->is_enable_anonymous().,None,None
CRYPTOGRAPHY call to $this->is_anonymous().,None,None
CRYPTOGRAPHY call to $this->is_anonymous().,None,None
CRYPTOGRAPHY call to $this->is_network_anonymous().,None,None
CRYPTOGRAPHY call to $this->is_anonymous().,None,None
CRYPTOGRAPHY call to $this->is_enable_anonymous().,None,None
CRYPTOGRAPHY call to $this->is_enable_anonymous().,None,None
CRYPTOGRAPHY call to $this->is_anonymous().,None,None
CRYPTOGRAPHY call to $this->is_network_anonymous().,None,None
CRYPTOGRAPHY call to $this->get_anonymous_id($blog_id).,None,None
CRYPTOGRAPHY call to $this->get_anonymous_id().,None,None
CRYPTOGRAPHY call to $this->is_anonymous().,None,None
CRYPTOGRAPHY call to $this->is_anonymous().,None,None
CRYPTOGRAPHY call to $this->is_anonymous().,None,None
CRYPTOGRAPHY call to $this->is_network_anonymous().,None,None
CRYPTOGRAPHY call to $this->set_anonymous_mode($this->_storage->is_anonymous).,None,None
CRYPTOGRAPHY call to $this->is_network_anonymous().,None,None
CRYPTOGRAPHY call to $this->is_anonymous().,None,None
CRYPTOGRAPHY call to $this->_parent->is_anonymous().,None,None
CRYPTOGRAPHY call to $this->_parent->is_anonymous().,None,None
CRYPTOGRAPHY call to $this->is_anonymous().,None,None
CRYPTOGRAPHY call to $this->reset_anonymous_mode($network).,None,None
CRYPTOGRAPHY call to $this->is_anonymous().,None,None
CRYPTOGRAPHY call to $this->is_network_anonymous().,None,None
CRYPTOGRAPHY call to $this->is_anonymous().,None,None
CRYPTOGRAPHY call to $this->reset_anonymous_mode(fs_is_network_admin()).,None,None
CRYPTOGRAPHY call to $this->set_anonymous_mode(true, true).,None,None
CRYPTOGRAPHY call to $this->set_anonymous_mode(true, true).,None,None
CRYPTOGRAPHY call to $this->get_anonymous_id($blog_id).,None,None
CRYPTOGRAPHY call to $this->set_anonymous_mode(true, $blog_id).,None,None
CRYPTOGRAPHY call to $this->get_anonymous_id($blog_id).,None,None
CRYPTOGRAPHY call to $this->get_anonymous_id().,None,None
CRYPTOGRAPHY call to $this->get_anonymous_id().,None,None
CRYPTOGRAPHY call to hash_hmac("sha256", $string_to_sign, $this->_secret).,None,None
CRYPTOGRAPHY call to $license->get_html_escaped_masked_secret_key().,None,None
CRYPTOGRAPHY call to $fs->fetch_and_store_current_user_gdpr_anonymously().,None,None
CRYPTOGRAPHY call to $fs->is_enable_anonymous().,None,None
CRYPTOGRAPHY call to $fs->is_enable_anonymous().,None,None
CRYPTOGRAPHY call to $license->get_html_escaped_masked_secret_key().,None,None
CRYPTOGRAPHY call to $license->get_html_escaped_masked_secret_key().,None,None
CRYPTOGRAPHY call to $available_license->get_html_escaped_masked_secret_key().,None,None
CRYPTOGRAPHY call to $fs->is_enable_anonymous().,None,None
CRYPTOGRAPHY call to $fs->is_enable_anonymous().,None,None
hash_hmac called with approved hash algorithm sha256.,sha256,None
MD5 called with parameters [secret_key, license]. Ignore if [secret_key, license] does not contain personal information.,md5,None
MD5 called with parameters [secret_key, license_user]. Ignore if [secret_key, license_user] does not contain personal information.,md5,None
MD5 called with parameters [rand, uniqid]. Ignore if [rand, uniqid] does not contain personal information.,md5,None
MD5 called with parameters [get_secret_key, salt, params, ts, this]. Ignore if [get_secret_key, salt, params, ts, this] does not contain personal information.,md5,None
MD5 called with parameters [license_or_user_key]. Ignore if [license_or_user_key] does not contain personal information.,md5,None
MD5 called with parameters [fs_strip_url_protocol, request, url, json_encode]. Ignore if [fs_strip_url_protocol, request, url, json_encode] does not contain personal information.,md5,None
MD5 called with parameters [caller_file_path]. Ignore if [caller_file_path] does not contain personal information.,md5,None
MD5 called with parameters [microtime]. Ignore if [microtime] does not contain personal information.,md5,None
MD5 called with parameters [secure_auth, key]. Ignore if [secure_auth, key] does not contain personal information.,md5,None
MD5 called with parameters [siteurl]. Ignore if [siteurl] does not contain personal information.,md5,None
MD5 called with parameters [thumbprint]. Ignore if [thumbprint] does not contain personal information.,md5,None
MD5 called with parameters [themes_signature]. Ignore if [themes_signature] does not contain personal information.,md5,None
MD5 called with parameters [themes_signature]. Ignore if [themes_signature] does not contain personal information.,md5,None
MD5 called with parameters [params, json_encode]. Ignore if [params, json_encode] does not contain personal information.,md5,None
MD5 called with parameters [, is_sandbox, id, public_key, secret_key, is_string, json_encode, slug, scope]. Ignore if [, is_sandbox, id, public_key, secret_key, is_string, json_encode, slug, scope] does not contain personal information.,md5,None
MD5 called with parameters [id, public_key, secret_key, action, timestamp, entity]. Ignore if [id, public_key, secret_key, action, timestamp, entity] does not contain personal information.,md5,None
MD5 called with parameters [microtime]. Ignore if [microtime] does not contain personal information.,md5,None
MD5 called with parameters [title, type,  , message]. Ignore if [title, type,  , message] does not contain personal information.,md5,None
MD5 called with parameters [pPostParams]. Ignore if [pPostParams] does not contain personal information.,md5,None
object property '$user->email' of personal types {'email'} is found.,,None
object property '$user->email' of personal types {'email'} is found.,,None
object property '$user->email' of personal types {'email'} is found.,,None
object property '$user->email' of personal types {'email'} is found.,,None
object property '$current_user->user_firstname' of personal types {'first_name', 'user_meta', 'user'} is found.,,None
object property '$current_user->user_firstname' of personal types {'first_name', 'user_meta', 'user'} is found.,,None
object property '$current_user->user_lastname' of personal types {'last_name', 'user_meta', 'user'} is found.,,None
object property '$current_user->user_lastname' of personal types {'last_name', 'user_meta', 'user'} is found.,,None
object property '$current_user->user_nicename' of personal types {'user_meta', 'user'} is found.,,None
object property '$current_user->user_email' of personal types {'email'} is found.,,None
object property '$current_user->user_email' of personal types {'email'} is found.,,None
object property '$decoded->email' of personal types {'email'} is found.,,None
object property '$decoded->email' of personal types {'email'} is found.,,None
object property '$current_user->user_email' of personal types {'email'} is found.,,None
object property '$user->email' of personal types {'email'} is found.,,None
object property '$this->_user->email' of personal types {'email'} is found.,,None
object property '$user->email' of personal types {'email'} is found.,,None
object property '$user->email' of personal types {'email'} is found.,,None
object property '$this->_user->email' of personal types {'email'} is found.,,None
object property '$this->_user->email' of personal types {'email'} is found.,,None
object property '$this->_user->email' of personal types {'email'} is found.,,None
object property '$this->_user->email' of personal types {'email'} is found.,,None
object property '$this->_user->email' of personal types {'email'} is found.,,None
object property '$current_wp_user->user_email' of personal types {'email'} is found.,,None
object property '$current_fs_user->email' of personal types {'email'} is found.,,None
object property '$current_wp_user->user_email' of personal types {'email'} is found.,,None
object property '$current_user->user_email' of personal types {'email'} is found.,,None
object property '$current_user->user_email' of personal types {'email'} is found.,,None
object property '$current_user->user_email' of personal types {'email'} is found.,,None
object property '$current_user->user_firstname' of personal types {'first_name', 'user_meta', 'user'} is found.,,None
object property '$current_user->user_firstname' of personal types {'first_name', 'user_meta', 'user'} is found.,,None
object property '$current_user->user_lastname' of personal types {'last_name', 'user_meta', 'user'} is found.,,None
object property '$current_user->user_lastname' of personal types {'last_name', 'user_meta', 'user'} is found.,,None
object property '$current_wp_user->user_email' of personal types {'email'} is found.,,None
object property '$current_user->user_email' of personal types {'email'} is found.,,None
object property '$parent_fs->get_current_or_network_user()->email' of personal types {'email'} is found.,,None
object property '$parent_fs->get_user()->email' of personal types {'email'} is found.,,None
object property '$this->support_email' of personal types {'email'} is found.,,None
object property '$user->email' of personal types {'email'} is found.,,None
object property '$billing->address_country_code' of personal types {'address', 'country'} is found.,,None
object property '$billing->address_country_code' of personal types {'address', 'country'} is found.,,None
object property '$billing->address_country_code' of personal types {'address', 'country'} is found.,,None
object property '$billing->address_country_code' of personal types {'address', 'country'} is found.,,None
object property '$billing->address_state' of personal types {'address', 'state'} is found.,,None
object property '$billing->address_state' of personal types {'address', 'state'} is found.,,None
object property '$billing->address_street' of personal types {'address'} is found.,,None
object property '$billing->address_apt' of personal types {'address'} is found.,,None
object property '$billing->address_city' of personal types {'city', 'address'} is found.,,None
object property '$billing->address_city' of personal types {'city', 'address'} is found.,,None
object property '$billing->address_zip' of personal types {'address'} is found.,,None
object property '$user->email' of personal types {'email'} is found.,,None
object property '$current_user->user_firstname' of personal types {'first_name', 'user_meta', 'user'} is found.,,None
object property '$current_user->user_firstname' of personal types {'first_name', 'user_meta', 'user'} is found.,,None
object property '$current_user->user_lastname' of personal types {'last_name', 'user_meta', 'user'} is found.,,None
object property '$current_user->user_lastname' of personal types {'last_name', 'user_meta', 'user'} is found.,,None
object property '$current_user->user_email' of personal types {'email'} is found.,,None
object property '$current_user->user_email' of personal types {'email'} is found.,,None
object property '$current_user->user_email' of personal types {'email'} is found.,,None
object property '$current_user->user_firstname' of personal types {'first_name', 'user_meta', 'user'} is found.,,None
object property '$current_user->user_firstname' of personal types {'first_name', 'user_meta', 'user'} is found.,,None
object property '$current_user->user_email' of personal types {'email'} is found.,,None
object property '$network_user->email' of personal types {'email'} is found.,,None
object property '$user->email' of personal types {'email'} is found.,,None
object property '$user->email' of personal types {'email'} is found.,,None
object property '$user->email' of personal types {'email'} is found.,,None
object property '$affiliate->paypal_email' of personal types {'email'} is found.,,None
object property '$current_user->user_firstname' of personal types {'first_name', 'user_meta', 'user'} is found.,,None
object property '$current_user->user_lastname' of personal types {'last_name', 'user_meta', 'user'} is found.,,None
object property '$current_user->user_lastname' of personal types {'last_name', 'user_meta', 'user'} is found.,,None
object property '$current_user->user_firstname' of personal types {'first_name', 'user_meta', 'user'} is found.,,None
object property '$current_user->user_email' of personal types {'email'} is found.,,None
object property '$current_user->user_email' of personal types {'email'} is found.,,None
object property '$license_owner->email' of personal types {'email'} is found.,,None
object property '$plan->support_email' of personal types {'email'} is found.,,None
object property '$post->post_password' of personal types {'password'} is found.,,None
variable '$user_first_name' of personal types {'first_name', 'user_meta', 'user'} is found.,,None
variable '$user_first_name' of personal types {'first_name', 'user_meta', 'user'} is found.,,None
variable '$address_to_blog_map' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$address_to_blog_map' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$new_email_address' of personal types {'email', 'address'} is found.,,None
variable '$new_email_address' of personal types {'email', 'address'} is found.,,None
variable '$new_email_address' of personal types {'email', 'address'} is found.,,None
variable '$new_email_address' of personal types {'email', 'address'} is found.,,None
variable '$new_email_address' of personal types {'email', 'address'} is found.,,None
variable '$new_email_address' of personal types {'email', 'address'} is found.,,None
variable '$new_email_address' of personal types {'email', 'address'} is found.,,None
variable '$new_email_address' of personal types {'email', 'address'} is found.,,None
variable '$new_email_address' of personal types {'email', 'address'} is found.,,None
variable '$new_email_address' of personal types {'email', 'address'} is found.,,None
variable '$new_email_address' of personal types {'email', 'address'} is found.,,None
variable '$new_email_address' of personal types {'email', 'address'} is found.,,None
variable '$new_email_address' of personal types {'email', 'address'} is found.,,None
variable '$new_email_address' of personal types {'email', 'address'} is found.,,None
variable '$email_address' of personal types {'email', 'address'} is found.,,None
variable '$email_address' of personal types {'email', 'address'} is found.,,None
variable '$email_address' of personal types {'email', 'address'} is found.,,None
variable '$email_address' of personal types {'email', 'address'} is found.,,None
variable '$email_address' of personal types {'email', 'address'} is found.,,None
variable '$email_address' of personal types {'email', 'address'} is found.,,None
variable '$address_to_blog_map' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$address_to_blog_map' of personal types {'address'} is found.,,None
variable '$address_to_blog_map' of personal types {'address'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$address_to_blog_map' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$address_to_blog_map' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$address_to_blog_map' of personal types {'address'} is found.,,None
variable '$address_to_blog_map' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$address_to_blog_map' of personal types {'address'} is found.,,None
variable '$new_email' of personal types {'email'} is found.,,None
variable '$candidate_email' of personal types {'email'} is found.,,None
variable '$candidate_email' of personal types {'email'} is found.,,None
variable '$candidate_email' of personal types {'email'} is found.,,None
variable '$candidate_email' of personal types {'email'} is found.,,None
variable '$candidate_email' of personal types {'email'} is found.,,None
variable '$new_email' of personal types {'email'} is found.,,None
variable '$new_email' of personal types {'email'} is found.,,None
variable '$new_email' of personal types {'email'} is found.,,None
variable '$new_email' of personal types {'email'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$admin_email' of personal types {'email'} is found.,,None
variable '$admin_email' of personal types {'email'} is found.,,None
variable '$admin_email' of personal types {'email'} is found.,,None
variable '$admin_email' of personal types {'email'} is found.,,None
variable '$admin_email' of personal types {'email'} is found.,,None
variable '$admin_email' of personal types {'email'} is found.,,None
variable '$admin_email' of personal types {'email'} is found.,,None
variable '$admin_email' of personal types {'email'} is found.,,None
variable '$admin_email' of personal types {'email'} is found.,,None
variable '$admin_email' of personal types {'email'} is found.,,None
variable '$custom_email_sections' of personal types {'email'} is found.,,None
variable '$custom_email_sections' of personal types {'email'} is found.,,None
variable '$custom_email_sections' of personal types {'email'} is found.,,None
variable '$admin_email' of personal types {'email'} is found.,,None
variable '$admin_email' of personal types {'email'} is found.,,None
variable '$admin_email' of personal types {'email'} is found.,,None
variable '$admin_email' of personal types {'email'} is found.,,None
variable '$to_address' of personal types {'address'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$address_to_blog_map' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$address_to_blog_map' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$contrib_username' of personal types {'user_meta', 'user'} is found.,,None
variable '$contrib_username' of personal types {'user_meta', 'user'} is found.,,None
variable '$contrib_username' of personal types {'user_meta', 'user'} is found.,,None
variable '$contrib_username' of personal types {'user_meta', 'user'} is found.,,None
variable '$contrib_username' of personal types {'user_meta', 'user'} is found.,,None
variable '$contrib_username' of personal types {'user_meta', 'user'} is found.,,None
variable '$contrib_username' of personal types {'user_meta', 'user'} is found.,,None
variable '$contrib_username' of personal types {'user_meta', 'user'} is found.,,None
variable '$contrib_username' of personal types {'user_meta', 'user'} is found.,,None
variable '$contrib_username' of personal types {'user_meta', 'user'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$address' of personal types {'address'} is found.,,None
variable '$country' of personal types {'country'} is found.,,None
variable '$country' of personal types {'country'} is found.,,None
variable '$first_name' of personal types {'first_name'} is found.,,None
variable '$first_name' of personal types {'first_name'} is found.,,None
variable '$first_name' of personal types {'first_name'} is found.,,None
variable '$first_name' of personal types {'first_name'} is found.,,None
variable '$first_name' of personal types {'first_name'} is found.,,None
variable '$first_name' of personal types {'first_name'} is found.,,None
variable '$first_name' of personal types {'first_name'} is found.,,None
variable '$email_address' of personal types {'email', 'address'} is found.,,None
variable '$email_address' of personal types {'email', 'address'} is found.,,None
variable '$paypal_email_address' of personal types {'email', 'address'} is found.,,None
variable '$paypal_email_address' of personal types {'email', 'address'} is found.,,None
variable '$email_address' of personal types {'email', 'address'} is found.,,None
variable '$email_address' of personal types {'email', 'address'} is found.,,None
variable '$paypal_email_address' of personal types {'email', 'address'} is found.,,None
variable '$paypal_email_address' of personal types {'email', 'address'} is found.,,None
variable '$paypal_email_address' of personal types {'email', 'address'} is found.,,None
variable '$paypal_email_address' of personal types {'email', 'address'} is found.,,None
variable '$email_address' of personal types {'email', 'address'} is found.,,None
variable '$email_address' of personal types {'email', 'address'} is found.,,None
variable '$email_address_placeholder' of personal types {'email', 'address'} is found.,,None
variable '$email_address_placeholder' of personal types {'email', 'address'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$esc_email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$esc_email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email_address_placeholder' of personal types {'email', 'address'} is found.,,None
variable '$email_address_placeholder' of personal types {'email', 'address'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email_address_placeholder' of personal types {'email', 'address'} is found.,,None
variable '$email_address_placeholder' of personal types {'email', 'address'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$enter_email_address_placeholder_text' of personal types {'email', 'address'} is found.,,None
variable '$enter_email_address_placeholder_text' of personal types {'email', 'address'} is found.,,None
variable '$enter_email_address_placeholder_text' of personal types {'email', 'address'} is found.,,None
variable '$enter_email_address_placeholder_text' of personal types {'email', 'address'} is found.,,None
variable '$post_states' of personal types {'state'} is found.,,None
variable '$post_states' of personal types {'state'} is found.,,None
variable '$post_states' of personal types {'state'} is found.,,None
variable '$post_states' of personal types {'state'} is found.,,None
variable '$post_states' of personal types {'state'} is found.,,None
variable '$post_states' of personal types {'state'} is found.,,None
variable '$post_states' of personal types {'state'} is found.,,None
variable '$post_states' of personal types {'state'} is found.,,None
variable '$post_states' of personal types {'state'} is found.,,None
variable '$post_states' of personal types {'state'} is found.,,None
variable '$post_states' of personal types {'state'} is found.,,None
WP_User object is created.,,None
RETRIEVAL call to get_users(["fields" => "ID", "number" => 2]) alters data types {'user_meta', 'user'}. Passed arguments: 0: $args (array). Returns (array).,None,None
RETRIEVAL call to get_post($post_id, OBJECT, "edit") alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 2: $filter (string), 1: $output (string), 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($post_id) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_userdata($user_id) alters data types {'user_meta', 'user'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_post($post_ID) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($post_id) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_user_meta($user->ID, RUA_App::"META_PREFIX" . "level", false) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($post_id) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_posts(["posts_per_page" => 20, "orderby" => "post_title", "order" => "ASC", "post_type" => "page", "post_status" => "publish", "s" => $_REQUEST["search"], "paged" => $_REQUEST["paged"], "update_post_term_cache" => false, "update_post_meta_cache" => false]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_userdata($lock_holder) alters data types {'user_meta', 'user'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_users(["meta_key" => RUA_App::"META_PREFIX" . "level", "meta_value" => $post->ID, "fields" => "ID"]) alters data types {'user_meta', 'user'}. Passed arguments: 0: $args (array). Returns (array).,None,None
RETRIEVAL call to get_post_meta($menu_item_db_id, $key, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($id, "_menu_item_level", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($item->ID, "_menu_item_level", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("default_role") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("users_can_register") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($level->ID, RUA_App::"META_PREFIX" . "role", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $key (string), 2: $single (bool). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->prefix . "registration-level") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($args["label_for"]) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_posts(["numberposts" => -1, "post_type" => self::"TYPE_RESTRICT", "post_status" => [self::"STATUS_ACTIVE", self::"STATUS_INACTIVE", self::"STATUS_SCHEDULED"], "update_post_meta_cache" => true]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_post($post_id) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($level->ID, self::"META_PREFIX" . "role", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("rua-toolbar-hide", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_post($a["page"]) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($condition, RUA_App::"META_PREFIX" . "opt_drip", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post(self"page") alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("rua-registration-level", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("fs_debug_mode", null) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to self"_accounts"->get_option("id_slug_type_path_map", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to self"_accounts"->get_option("file_slug_map", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to self"_accounts"->get_option("file_slug_map", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to self"_accounts"->get_option($option_name, $default, $network_level_or_blog_id) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to self"_accounts"->get_option("account_addons", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_user_by("email", $user->email) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to self"_accounts"->get_option("file_slug_map", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to self"_accounts"->get_option("id_slug_type_path_map", [], $blog_id) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to self"_accounts"->get_option("id_slug_type_path_map", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("uninstall_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_transient("fs_"$this->get_id()"_data_debug_mode") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to self"_accounts"->get_option("id_slug_type_path_map") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to self"_accounts"->get_option("id_slug_type_path_map", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to self"_accounts"->get_option("id_slug_type_path_map", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_transient($cache_key) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to self"_accounts"->get_option("id_slug_type_path_map", null, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to self"_accounts"->get_option("file_slug_map", null, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to self"_accounts"->get_option("ms_migration_complete", false, true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to self"_accounts"->get_option("file_slug_map", null, true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to self"_accounts"->get_option("file_slug_map", null, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option($option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to self"_accounts"->get_option("unique_id", null, $blog_id) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to $this->get_option($plugin_info, "parent_name", null) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $this->get_option($plugin_info["parent"], "name", null) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $this->get_option($plugin_info, "public_key", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $this->get_option($plugin_info, "secret_key", null) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $this->get_option($plugin_info, "parent_name", null) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $this->get_option($plugin_info, "premium_suffix", "(Premium)") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $this->get_option($plugin_info, "type", $this->_module_type) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $this->get_option($plugin_info, "premium_slug", $this->_slug"-premium") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $this->get_option($plugin_info, "has_affiliation") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $this->get_option($plugin_info, "bundle_id", null) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $this->get_option($plugin_info, "bundle_public_key", null) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $this->get_option($plugin_info, "permissions", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $this->get_option($plugin_info, "bundle_license_auto_activation", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $this->get_option($plugin_info, "navigation", $this->is_free_wp_org_theme()self::"NAVIGATION_TABS"self::"NAVIGATION_MENU") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_transient("fs_"$this->_module_type"_"$this->_slug"_activated") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to self"_accounts"->get_option($site_active_plugins_option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to self"_accounts"->get_option($site_active_plugins_option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to self"_accounts"->get_option($network_plugins_option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to self"_accounts"->get_option($option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to self"_accounts"->get_option($option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to self"_options"->get_option("api_clock_diff", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to self"_options"->get_option("api_force_http", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("fs_storage_logger", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("fs_storage_logger", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $this->_network_options->get_option($option, $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $site_options->get_option($option, $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $site_options->get_option($option) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to $this->_network_options->get_option($option) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("active_plugins", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $this->get_option($menu, "type", "page") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $this->get_option($menu["parent"], "slug") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $this->get_option($menu["parent"], "type", "page") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $this->get_option($menu, "first-path", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $this->_options->get_option($key, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $this->_options->get_option($key, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $this->_options->get_option($key, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $this->_options->get_option($key, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $this->_options->get_option($key, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $this->_options->get_option($key, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $this->_options->get_option($key, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $this->_storage->get_option($this->_option_name, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $this->get_option_manager()->get_option($this->_id, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option($option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to $option_manager->get_option($module_type . "s", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $option_manager->get_option(self::"OPTION_NAME_PLUGINS", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $option_manager->get_option(self::"OPTION_NAME_THEMES", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("fs_active_plugins", stdClass()) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $fs_options->get_option($module_type . "s") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to $fs_options->get_option($option_name, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $fs_options->get_option("ms_migration_complete", false, true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $fs_options->get_option("all_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to $fs_options->get_option("all_themes") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to $fs_options->get_option($module_type . "s") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"OPTION_CONDITION_TYPE_CACHE", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"OPTION_POST_TYPE_OPTIONS", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"OPTION_POST_TYPE_OPTIONS", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_a->ID, "_ca_handle", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_b->ID, "_ca_handle", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "_ca_handle", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($post_id) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($post_id) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_posts(["posts_per_page" => -1, "post_type" => self::"TYPE_CONDITION_GROUP", "post_parent" => $post->ID, "post_status" => [self::"STATUS_PUBLISHED", self::"STATUS_NEGATED", self::"STATUS_EXCEPT", self::"STATUS_OR"], "order" => "ASC", "orderby" => "post_status"]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_post_meta($group_id, $key, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($group->ID, $meta_key, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, WPCACore::"PREFIX" . $this->id, $single) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, $meta_key, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_custom_values($this->get_data_key(), $post_id). Passed arguments: 1: $post_id (int), 0: $key (string). Returns (array|null).,None,None
RETRIEVAL call to get_post_custom_values($this->get_data_key(), $id). Passed arguments: 1: $post_id (int), 0: $key (string). Returns (array|null).,None,None
RETRIEVAL call to get_option("show_on_front") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("page_on_front") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "_wp_page_template", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "_wp_page_template", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_custom_values(WPCACore::"PREFIX" . $this->id, $post_id). Passed arguments: 1: $post_id (int), 0: $key (string). Returns (array|null).,None,None
RETRIEVAL call to get_option("show_on_front") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("page_on_front") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("page_for_posts") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, $meta_key, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("qtranslate_enabled_languages") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($condition_id, "_ca_taxonomy", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_custom_values(WPCACore::"PREFIX" . $this->id, $post_id). Passed arguments: 1: $post_id (int), 0: $key (string). Returns (array|null).,None,None
RETRIEVAL call to get_post_meta($post_id, $meta_key, false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(TRANSPOSH_OPTIONS) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->version_key, "0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user_id, RUA_App::"META_PREFIX" . "level", false) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($level->ID, RUA_App::"META_PREFIX" . "role", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($level->get_id(), RUA_App::"META_PREFIX" . "role", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($action_page) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
STORAGE call to wp_delete_post($post_id, true) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
STORAGE call to update_post_meta($post->ID, "_edit_last", $post_data["post_author"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_update_post($post_data). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to wp_delete_post($post_id) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).,None,None
STORAGE call to add_post_meta($menu_item_db_id, $key, $level) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to delete_post_meta($menu_item_db_id, $key, $level) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("rua-toolbar-hide") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to add_post_meta($group_id, "_ca_autoselect", 1, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).,None,None
STORAGE call to update_user_meta($level_date->user_id, "_ca_level_" . $levels_by_metaid[$level_date_metaid]->meta_value, $level_date->meta_value, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $prev_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_user_meta($level_date->user_id, $level_date->meta_key) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_option("_ca_condition_type_cache", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_post_meta($id, "_ca_taxonomy", "-1") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_option("fs_debug_mode", $debug_mode) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("uninstall_plugins", $uninstallable_plugins) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to set_transient("fs_"$this->get_id()"_data_debug_mode", $transient_value, WP_FS__TIME_24_HOURS_IN_SEC / 24) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to set_transient($cache_key, $response, $response instanceof WP_Error$failure_cache_expiration$success_cache_expiration) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to update_option("fs_debug_mode", $is_on) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option($option_name, $option_value) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("fs_active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_transient("fs_"$this->_module_type"_"$this->_slug"_activated") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).,None,None
STORAGE call to set_transient("fs_"$this->_module_type"_"$this->_slug"_activated", true, 60) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to update_option("fs_storage_logger", $is_on10) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("active_plugins", $active_plugins_basenames) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("fs_active_plugins", $fs_active_plugins) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("active_plugins", $updated_active_plugins) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("fs_active_plugins", $fs_active_plugins) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to $this->update_option("required", $is_required) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to $this->update_option("show_opt_in_notice", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to $this->update_option("notice_shown_at", WP_FS__SCRIPT_START_TIME) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_blog_option($this->_blog_id, $option_name) alters data types {'option'}. Passed arguments: 0: $id (int), 1: $option (string). Returns (bool).,None,None
STORAGE call to delete_option($option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option($option_name, $this->_options, $this->_autoload) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("fs_active_plugins", $fs_active_plugins) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("fs_active_plugins", $fs_active_plugins) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("fs_active_plugins", $fs_active_plugins) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("fs_active_plugins", $fs_active_plugins) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("fs_active_plugins", $fs_active_plugins) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(self::"OPTION_POST_TYPE_OPTIONS", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(self::"OPTION_CONDITION_TYPE_CACHE", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(self::"OPTION_CONDITION_TYPE_CACHE", $cache) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to wp_delete_post($group_id, true) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
STORAGE call to update_meta_cache("post", array_keys($groups_in_context + $groups_negated)) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_ids (string|int[]). Returns (array|false).,None,None
STORAGE call to wp_update_post(["ID" => $post->ID, "post_title" => "", "post_status" => "draft"]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to wp_insert_post(["post_status" => self::"STATUS_OR", "menu_order" => self::"EXP_SINGULAR_ARCHIVE", "post_type" => self::"TYPE_CONDITION_GROUP", "post_author" => $post->post_author, "post_parent" => $post->ID]). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to wp_delete_post(intval($_POST["id"]), true) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
STORAGE call to wp_update_post(["ID" => $post_id, "post_status" => self->sanitize_status($_POST["status"]), "menu_order" => $_POST["exposure"]]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to update_option(self::"OPTION_CONDITION_TYPE_CACHE", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($group_id, $key, $value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($group_id, $key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, WPCACore::"PREFIX" . $this->id, $value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to add_post_meta($post_id, WPCACore::"PREFIX" . $this->id, $value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to delete_post_meta($post_id, WPCACore::"PREFIX" . $this->id, $value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).,None,None
STORAGE call to add_post_meta($post_id, $meta_key, $new_single) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to delete_post_meta($post_id, $meta_key, $old_key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).,None,None
STORAGE call to delete_post_meta($post_id, $meta_key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to add_post_meta($post_id, $meta_key, $new_single) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to delete_post_meta($post_id, $meta_key, $old_key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).,None,None
STORAGE call to delete_post_meta($post_id, $meta_key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to add_post_meta($condition->ID, WPCACore::"PREFIX" . $this->id, $post_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to delete_post_meta($post_id, $meta_key, $taxonomy->name) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).,None,None
STORAGE call to add_post_meta($post_id, $meta_key, $taxonomy->name) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to delete_post_meta($post_id, $meta_key, $taxonomy->name) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).,None,None
STORAGE call to add_post_meta($post_id, $meta_key, self::"VALUE_HAS_TERMS") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to delete_post_meta($post_id, $meta_key, self::"VALUE_HAS_TERMS") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).,None,None
STORAGE call to update_option($this->version_key, $this->installed_version) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_user_meta($user_id, RUA_App::"META_PREFIX" . "level", $level_id, false) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, RUA_App::"META_PREFIX" . "level_" . $level_id, time(), true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).,None,None
STORAGE call to delete_user_meta($user_id, RUA_App::"META_PREFIX" . "level", $level_id) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).,None,None
STORAGE call to delete_user_meta($user_id, RUA_App::"META_PREFIX" . "level_" . $level_id) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_user_meta($user_id, RUA_App::"META_PREFIX" . "level_status_" . $level_id) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_user_meta($user_id, RUA_App::"META_PREFIX" . "level_expiry_" . $level_id) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to $this->update_meta(self::"KEY_STATUS", $status) alters data types {'meta'}. Passed arguments: 0: $meta_id (int), 1: $meta_key (string), 2: $meta_value (string). Returns (bool).,None,None
STORAGE call to $this->update_meta(self::"KEY_EXPIRY", $time) alters data types {'meta'}. Passed arguments: 0: $meta_id (int), 1: $meta_key (string), 2: $meta_value (string). Returns (bool).,None,None
STORAGE call to update_user_meta($user_id, RUA_App::"META_PREFIX" . $key . "_" . $this->get_level_id(), $value) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to $this->update_meta(self::"KEY_STATUS", self::"STATUS_EXPIRED") alters data types {'meta'}. Passed arguments: 0: $meta_id (int), 1: $meta_key (string), 2: $meta_value (string). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] PII of types (['user_meta', 'user']) stored through WordPress function "add_user_meta($user_id, RUA_App::"META_PREFIX" . "level_" . $level_id, time(), true)", found in file models/user.php at line 140. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user_id, RUA_App::"META_PREFIX" . $key . "_" . $this->get_level_id(), $value)", found in file models/user_level.php at line 200. 

[has_storage] PII of types (['email', 'address']) stored through WordPress function "set_transient($cache_key, $response, $response instanceof WP_Error$failure_cache_expiration$success_cache_expiration)", found in file lib/freemius/includes/class-freemius.php at line 23849. 

[has_storage] PII of types (['user_meta', 'user']) stored through WordPress function "add_user_meta($user_id, RUA_App::"META_PREFIX" . "level", $level_id, false)", found in file models/user.php at line 139. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($level_date->user_id, "_ca_level_" . $levels_by_metaid[$level_date_metaid]->meta_value, $level_date->meta_value, true)", found in file db_updates.php at line 242. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "$this->update_meta(self::"KEY_STATUS", $status)", found in file models/user_level.php at line 106. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "$this->update_meta(self::"KEY_EXPIRY", $time)", found in file models/user_level.php at line 139. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "$this->update_meta(self::"KEY_STATUS", self::"STATUS_EXPIRED")", found in file models/user_level.php at line 48. 

[has_storage] Storage check is WP 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, RUA_App::"META_PREFIX" . "level_" . $level_id, time(), true) has deletion method delete_user_meta($user_id, RUA_App::"META_PREFIX" . "level_" . $level_id). Storage method found in file models/user.php at line 140. Deletion method found in file models/user.php at line 158. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, RUA_App::"META_PREFIX" . $key . "_" . $this->get_level_id(), $value) does not have corresponding deletion method. Storage method found in file models/user_level.php at line 200. 

[Art.17, Right to erasure] Wordpress storage of PII through set_transient($cache_key, $response, $response instanceof WP_Error$failure_cache_expiration$success_cache_expiration) does not have corresponding deletion method. Storage method found in file lib/freemius/includes/class-freemius.php at line 23849. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, RUA_App::"META_PREFIX" . "level", $level_id, false) has deletion method delete_user_meta($user_id, RUA_App::"META_PREFIX" . "level", $level_id). Storage method found in file models/user.php at line 139. Deletion method found in file models/user.php at line 156. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($level_date->user_id, "_ca_level_" . $levels_by_metaid[$level_date_metaid]->meta_value, $level_date->meta_value, true) does not have corresponding deletion method. Storage method found in file db_updates.php at line 242. 

[Art.17, Right to erasure] Wordpress storage of PII through $this->update_meta(self::"KEY_STATUS", $status) does not have corresponding deletion method. Storage method found in file models/user_level.php at line 106. 

[Art.17, Right to erasure] Wordpress storage of PII through $this->update_meta(self::"KEY_EXPIRY", $time) does not have corresponding deletion method. Storage method found in file models/user_level.php at line 139. 

[Art.17, Right to erasure] Wordpress storage of PII through $this->update_meta(self::"KEY_STATUS", self::"STATUS_EXPIRED") does not have corresponding deletion method. Storage method found in file models/user_level.php at line 48. 

[Art.17, Right to erasure] Deletion access is NONE 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 193549. Found in file models/user.php at line 140 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 194676. Found in file models/user_level.php at line 200 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 92922. Found in file lib/freemius/includes/class-freemius.php at line 23849 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 193532. Found in file models/user.php at line 139 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 13600. Found in file db_updates.php at line 242 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 194344. Found in file models/user_level.php at line 106 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 194496. Found in file models/user_level.php at line 139 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 194197. Found in file models/user_level.php at line 48 

[Art.15, Right to access] Data access is NONE_BUT_NOT_REQUIRED 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['access', 'deletion', 'encryption', 'third_party'] 

[main] Is deletion in violation? True 

[main] Is access in violation? False 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? False 


###########
### Q&A ###
###########

1. Why is my plugin in violation against GDPR?

GDPR (https://gdpr-info.eu/) aims to give citizens in the European Union (EU) control over their personal data. If a website collects or store user data, it is required to provide users functionalities to control their data, such as ones to erase or export their data. While a plugin do not directly interact with users, it may provide functionalities that collect or store personal data, which would make websites that deploy the plugin in violation against GDPR if the plugin does not provide corresponding functionalities to allow users control their personal data. Therefore, plugin developers are responsible to provide functions to manage the personal data they handle in accordance with GDPR. We list requirements by specific GDPR articles relevant to your plugin below.


[Art. 13, Information to be provided where personal data are collected from the data subject] If a plugin collects or handles personal data, it needs to provide privacy policy texts that explain what personal data is being collected and for what purpose. The texts are meant to be added to the privacy policy of the websites that deploy the plugin. 


            
[Art.17, Right to erasure] If a plugin stores personal data in a custom database they create or manage, or through Wordpress's native storage functions (e.g., update_user_meta), it needs to provide methods for users to erase the data upon request. Note that deleting data for all users upon uninstallation does not satisfy the requirement. 


            
        

2. How do I make my plugin compliant?

Please refer to the fix report below to see how you can make your plugin comply with GDPR.

        

##################
### Fix Report ###
##################

############################
# Data Deletion Fix Report #
############################

This report suggests fixes to comply with the GDPR Art. 17, Right to erasure (https://gdpr-info.eu/art-17-gdpr/). The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/adding-the-personal-data-eraser-to-your-plugin/ for more details.

1) Implement a function that deletes all the user data collected in the plugin. Sample code:


/**
* Removes all collected data of a user.
*
* @param string $email_address   email address to manipulate
* @param int    $page            pagination
*
* @return array
*/
function restrict-user-access_remove_data( $email_address, $page = 1 ) {
    
    $page = (int) $page;


    //TODO: Delete the user data that was stored using Wordpress functions

    //Below is the sample code for deleting user meta and may need to be modified to suit the plugin.
    $user_id = get_user_by('email', $email_address)
    $key = 'email' //Sample user meta key
    if ( $customer->user_id > 0 ) {
        //Delete user meta data by $key
        delete_user_meta( $user_id, $key );
    }
        



    // Tell core if we have more data to delete still
    $done = true;
    return array(
        'items_removed'  => $items_removed, // true if collected data of a user is being deleted
        'items_retained' => $items_retained, // true if certain data needs to be retained
        'messages'       => sprintf( __( 'Data of user with email %s successfully deleted.', 'restrict-user-access' ), $email_address ), // Put messages for data removal
        'done'           => $done, // true if all the removal processes are done (all data of the user is removed)
    );
}
        

2) Hook the deletion function to the Wordpress's Personal Data Removal tool


/**
* Registers all data erasers.
*
* @param array $exporters
*
* @return mixed
*/
function restrict-user-access_register_privacy_erasers( $erasers ) {
    $erasers['my-plugin-slug'] = array(
        'eraser_friendly_name' => __( '<eraser name>', 'restrict-user-access' ),
        'callback'             => 'restrict-user-access_remove_data',
    );
    return $erasers;
}
        

add_filter( 'wp_privacy_personal_data_erasers', 'restrict-user-access_register_privacy_erasers' );
        

        

#############################
# Privacy Policy Fix Report #
#############################

This report suggests fixes to comply with the GDPR Art. 13 (https://gdpr-info.eu/art-13-gdpr/) through including a privacy notice. The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/suggesting-text-for-the-site-privacy-policy/ for more details.

1) Implement a function that includes the privacy policy for the plugin and provide it to wordpress through wp_add_privacy_policy_content(). Sample code:


/**
* Adds a privacy policy statement.
*/
function restrict-user-access_add_privacy_policy_content() {
    if ( ! function_exists( 'wp_add_privacy_policy_content' ) ) {
        return;
    }
    //TODO: modify the content below to include the privacy policy for the plugin.
    $content = '<p class="privacy-policy-tutorial">' . __( 'Some introductory content for the suggested text.', 'restrict-user-access' ) . '</p>'
            . '<strong class="privacy-policy-tutorial">' . __( 'Suggested Text:', 'restrict-user-access' ) . '</strong> '
            . sprintf(
                __( 'When you leave a comment on this site, we send your name, email address, IP address and comment text to example.com. Example.com does not retain your personal data. The example.com privacy policy is <a href="%1$s" target="_blank">here</a>.', 'restrict-user-access' ),
                'https://example.com/privacy-policy'
            );
    wp_add_privacy_policy_content( 'restrict-user-access', wp_kses_post( wpautop( $content, false ) ) );
}
        

2) Hook the privacy policy function to the Wordpress's admin initialization action.


add_action( 'admin_init', 'restrict-user-access_add_privacy_policy_content' );
        

        


Disclaimer: The sample code provided above is only for reference and does not guarantee GDPR compliance. The recommended list of data to delete/export may not be comprehensive. 
        
Done.
