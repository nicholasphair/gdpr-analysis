Timeout in resolving values
Timeout in running neo4j query
Running Main.py on ims-countdown

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:01.753078.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.313239.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 0 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.202907.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 0 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.502376.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 221 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:00.613978.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 0 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.582450.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.090816.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 157 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:04.541784.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 2201
Added 1823 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 24089
Added 21888 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:03.044805.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/ims-countdown/admin_settings.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/ims-countdown/config.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/ims-countdown/custom_fields.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/ims-countdown/imsCountdown.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/ims-countdown/shortcode/shortcode.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.810414.

1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
2201 PHP_REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
14000 PHP_REACHES edges created
15000 PHP_REACHES edges created
16000 PHP_REACHES edges created
17000 PHP_REACHES edges created
18000 PHP_REACHES edges created
19000 PHP_REACHES edges created
20000 PHP_REACHES edges created
21000 PHP_REACHES edges created
21888 PHP_REACHES edges created
24089 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 619 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:00.964848.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:01.039403.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 4 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.472100.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 8 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.149457.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.198190.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.088677.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.007363.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.038873.

12 PHP_REACHES edges created
12 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 4 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.122596.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
2 SQL operations to process.
The following function calls could not successfully be analyzed for SQL content: [2673, 2679]
Added 0 SQL nodes. 0 out of 2 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:00.267174.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'checked=\'checked\''' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "countdown_value", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "ds", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "hr", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "mn", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "sc", true)'' cannot be parsed correct.
HTML code '$'checked=\'checked\''' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "redirect_url", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "title_color", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "timer_color", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "timer_background", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "timer_border", true)'' cannot be parsed correct.
HTML code '$'<option value=\'$key\'>$value</option>'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "days", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "hours", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "minutes", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "seconds", true)'' cannot be parsed correct.
HTML code '$'<option  value=\'$value\'>$key</option>'' cannot be parsed correct.
HTML code '$'[displayCountdowns id=$id]'' cannot be parsed correct.
HTML code '$'ob_get_clean()'' cannot be parsed correct.
HTML code '$'<div class=\'countdownget_the_ID()\'>'' cannot be parsed correct.
HTML code '$'<p class=\'countDownTitle\'>get_the_title()</p>'' cannot be parsed correct.
HTML code '$'<div class=\'countdownget_the_ID()\'>'' cannot be parsed correct.
HTML code '$'<p class=\'countDownTitle\'>get_the_title()</p>'' cannot be parsed correct.
HTML code '$' class="labelvalue" type="radio" name="countdown_type" id="2" value="2" '' cannot be parsed correct.
HTML code '$'	" />
		        			<div class="clear"></div>
		        		</div>
	        		</div>
		    		<div class="dropdown">
		        		<label class="label" for="0" >Evergreen </label> <input class="labelvalue" type="radio" name="countdown_type" id="0" value="0" '' cannot be parsed correct.
HTML code '$'" placeholder="0" name="ds" >
		    				<div class="clear"></div>
		    				<label class="label" for="0" > Hours </label> <input class="labelvalue" type="number" min="0" value="'' cannot be parsed correct.
HTML code '$'" placeholder="0" name="hr" >
		    				<div class="clear"></div>
		    				<label class="label" for="0" > Minuts </label> <input class="labelvalue" type="number"	 min="0" value="'' cannot be parsed correct.
HTML code '$'" placeholder="0" name="mn" >
		    				<div class="clear"></div>
		    				<label class="label" for="0" > Seconds </label> <input class="labelvalue" type="number"	 min="0" value="'' cannot be parsed correct.
HTML code '$'" placeholder="0" name="sc" >
		    				<div class="clear"></div>
		    			</div>
	    			</div>
	        		<div class="clear"></div>
		    	</div>
		    </div>

		    <div class="option">
		    	<div class="option-heading">
	      			<h4 class="option-title">
		       		   	Countdown Expire Action
	      			</h4>
		    	</div>
		    	<div class="option-body">
	        		<label class="label" for="action-0" >Do Nothing </label> <input '' cannot be parsed correct.
HTML code '$' class="labelvalue" type="radio" name="expire_action" id="action-0" value="0" '' cannot be parsed correct.
HTML code '$'selected=\'selected\''' cannot be parsed correct.
HTML code '$'selected=\'selected\''' cannot be parsed correct.
HTML code '$'selected=\'selected\''' cannot be parsed correct.
HTML code '$'selected=\'selected\''' cannot be parsed correct.
HTML code '$'selected=\'selected\''' cannot be parsed correct.
HTML code '$'"]</label>
		        	<!--<button>Clear Cookie</button>-->
		        	<div class="clear"></div>
	        	</div>
		</div>
	    '' cannot be parsed correct.
HTML code '$' </div>	
						</div>
			'' cannot be parsed correct.
HTML code '$' </div>	
					</div>
					'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:05.264320.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.051301.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 0 do_action/apply_filters calls and 11 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.750064.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbplusDetector
### Start running FrontBaseDetector
### Finish running DbaseDetector
### Start running HashDetector
### Finish running FileProDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running FirebirdInterBaseDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running HashDetector
### Start running MsqlDetector
### Finish running MongoDetector
### Start running MySQLDetector
### Finish running IBMDb2Detector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running MsqlDetector
### Start running OpenSSLDetector
### Finish running MongoDbDetector
### Start running ParadoxDetector
### Finish running ArrayElementDetector
### Start running PasswordHashingDetector
### Finish running OpenSSLDetector
### Start running PhpCurlDetector
### Finish running Oci8Detector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running ParadoxDetector
### Start running PHPRetrievalDetector
### Finish running PhpCurlDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PasswordHashingDetector
### Start running PhpVarDetector
### Finish running PHPIncludedDetector
### Start running PostgreSQLDetector
### Finish running PHPRetrievalDetector
### Start running PropertyDetector
### Finish running PHPStorageDetector
### Start running Sqlite3Detector
### Finish running PhpVarDetector
### Start running SqliteDetector
### Finish running PostgreSQLDetector
### Start running SqlServerDetector
### Finish running Sqlite3Detector
### Start running SybaseDetector
### Finish running SqliteDetector
### Start running TokyoTyrantDetector
### Finish running PropertyDetector
### Start running UserInputDetector
### Finish running SybaseDetector
### Start running VariableDetector
### Finish running TokyoTyrantDetector
### Start running WordpressHashingFnDetector
### Finish running SqlServerDetector
### Start running WordPressRemoteDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRetrievalDetector
### Finish running WordPressRemoteDetector
### Start running WordPressStorageDetector
### Finish running VariableDetector
### Start running WP_UserDetector
### Finish running UserInputDetector
### Start running GenericDatabaseUsageDetector
### Finish running WP_UserDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running GenericDatabaseUsageDetector
### Start running UninstallDetector
### Finish running DeletionDetector
### Finish running UninstallDetector
### Finish running WordPressStorageDetector
### Finish running maxdbDetector
### Finish running MySQLiDetector
### Finish running WordPressRetrievalDetector
### Finished running detectors
admin_settings.php:30
  - RETRIEVAL call to get_option("imsc_timezone") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
custom_fields.php:23
  - RETRIEVAL call to get_post_meta($post->ID, "countdown_type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
custom_fields.php:24
  - RETRIEVAL call to get_post_meta($post->ID, "countdown_value", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
custom_fields.php:26
  - RETRIEVAL call to get_post_meta($post->ID, "ds", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
custom_fields.php:27
  - RETRIEVAL call to get_post_meta($post->ID, "hr", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
custom_fields.php:28
  - RETRIEVAL call to get_post_meta($post->ID, "mn", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
custom_fields.php:29
  - RETRIEVAL call to get_post_meta($post->ID, "sc", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
custom_fields.php:33
  - RETRIEVAL call to get_post_meta($post->ID, "expire_action", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
custom_fields.php:34
  - RETRIEVAL call to get_post_meta($post->ID, "redirect_url", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
custom_fields.php:37
  - RETRIEVAL call to get_post_meta($post->ID, "theme", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
custom_fields.php:38
  - RETRIEVAL call to get_post_meta($post->ID, "font_face", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
custom_fields.php:39
  - RETRIEVAL call to get_post_meta($post->ID, "title_color", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
custom_fields.php:40
  - RETRIEVAL call to get_post_meta($post->ID, "timer_color", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
custom_fields.php:41
  - RETRIEVAL call to get_post_meta($post->ID, "timer_background", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
custom_fields.php:42
  - RETRIEVAL call to get_post_meta($post->ID, "timer_border", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
custom_fields.php:43
  - RETRIEVAL call to get_post_meta($post->ID, "hide_title", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
custom_fields.php:46
  - RETRIEVAL call to get_post_meta($post->ID, "days", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
custom_fields.php:47
  - RETRIEVAL call to get_post_meta($post->ID, "hours", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
custom_fields.php:48
  - RETRIEVAL call to get_post_meta($post->ID, "minutes", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
custom_fields.php:49
  - RETRIEVAL call to get_post_meta($post->ID, "seconds", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
custom_fields.php:203
  - RETRIEVAL call to get_option("imsc_timezone") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
imsCountdown.php:107
  - RETRIEVAL call to get_option("imsc_timezone") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
shortcode/shortcode.php:2
  - RETRIEVAL call to get_option("imsc_timezone") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
shortcode/shortcode.php:18
  - RETRIEVAL call to get_post_meta(get_the_ID(), "countdown_type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
shortcode/shortcode.php:19
  - RETRIEVAL call to get_post_meta(get_the_ID(), "countdown_value", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
shortcode/shortcode.php:21
  - RETRIEVAL call to get_post_meta(get_the_ID(), "ds", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
shortcode/shortcode.php:22
  - RETRIEVAL call to get_post_meta(get_the_ID(), "hr", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
shortcode/shortcode.php:23
  - RETRIEVAL call to get_post_meta(get_the_ID(), "mn", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
shortcode/shortcode.php:24
  - RETRIEVAL call to get_post_meta(get_the_ID(), "sc", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
shortcode/shortcode.php:33
  - RETRIEVAL call to get_post_meta(get_the_ID(), "expire_action", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
shortcode/shortcode.php:34
  - RETRIEVAL call to get_post_meta(get_the_ID(), "redirect_url", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
shortcode/shortcode.php:37
  - RETRIEVAL call to get_post_meta(get_the_ID(), "theme", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
shortcode/shortcode.php:38
  - RETRIEVAL call to get_post_meta(get_the_ID(), "font_face", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
shortcode/shortcode.php:39
  - RETRIEVAL call to get_post_meta(get_the_ID(), "title_color", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
shortcode/shortcode.php:40
  - RETRIEVAL call to get_post_meta(get_the_ID(), "timer_color", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
shortcode/shortcode.php:41
  - RETRIEVAL call to get_post_meta(get_the_ID(), "timer_background", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
shortcode/shortcode.php:42
  - RETRIEVAL call to get_post_meta(get_the_ID(), "timer_border", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
shortcode/shortcode.php:43
  - RETRIEVAL call to get_post_meta(get_the_ID(), "hide_title", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
shortcode/shortcode.php:71
  - RETRIEVAL call to get_post_meta(get_the_ID(), "days", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
shortcode/shortcode.php:72
  - RETRIEVAL call to get_post_meta(get_the_ID(), "hours", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
shortcode/shortcode.php:73
  - RETRIEVAL call to get_post_meta(get_the_ID(), "minutes", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
shortcode/shortcode.php:74
  - RETRIEVAL call to get_post_meta(get_the_ID(), "seconds", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
shortcode/shortcode.php:121
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta 

custom_fields.php:275
  - STORAGE call to update_post_meta($post_id, "countdown_type", $new_meta_type) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
custom_fields.php:276
  - STORAGE call to update_post_meta($post_id, "countdown_value", $new_meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
custom_fields.php:278
  - STORAGE call to update_post_meta($post_id, "ds", $ds) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
custom_fields.php:279
  - STORAGE call to update_post_meta($post_id, "hr", $hr) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
custom_fields.php:280
  - STORAGE call to update_post_meta($post_id, "mn", $mn) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
custom_fields.php:281
  - STORAGE call to update_post_meta($post_id, "sc", $sc) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
custom_fields.php:283
  - STORAGE call to update_post_meta($post_id, "expire_action", $expire_action) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
custom_fields.php:284
  - STORAGE call to update_post_meta($post_id, "redirect_url", $redirect_url) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
custom_fields.php:287
  - STORAGE call to update_post_meta($post_id, "theme", $theme) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
custom_fields.php:288
  - STORAGE call to update_post_meta($post_id, "font_face", $font_face) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
custom_fields.php:289
  - STORAGE call to update_post_meta($post_id, "title_color", $title_color) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
custom_fields.php:290
  - STORAGE call to update_post_meta($post_id, "timer_color", $timer_color) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
custom_fields.php:291
  - STORAGE call to update_post_meta($post_id, "timer_background", $timer_background) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
custom_fields.php:292
  - STORAGE call to update_post_meta($post_id, "timer_border", $timer_border) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
custom_fields.php:293
  - STORAGE call to update_post_meta($post_id, "hide_title", $hide_title) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
custom_fields.php:295
  - STORAGE call to update_post_meta($post_id, "days", $days) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
custom_fields.php:296
  - STORAGE call to update_post_meta($post_id, "hours", $hours) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
custom_fields.php:297
  - STORAGE call to update_post_meta($post_id, "minutes", $minutes) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
custom_fields.php:298
  - STORAGE call to update_post_meta($post_id, "seconds", $seconds) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
imsCountdown.php:116
  - STORAGE call to add_option("imsc_timezone", "Asia/Kolkata", "", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).
  - Data types: option 

By data type:
option
	WordPressStorageDetector.add_option("imsc_timezone", "Asia/Kolkata", "", "yes") - {'option'}
	WordPressRetrievalDetector.get_option("imsc_timezone") - {'option'}
	WordPressRetrievalDetector.get_option("imsc_timezone") - {'option'}
	WordPressRetrievalDetector.get_option("imsc_timezone") - {'option'}
	WordPressRetrievalDetector.get_option("imsc_timezone") - {'option'}
post_meta
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "seconds", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "hr", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "mn", $mn) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "title_color", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "countdown_type", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "expire_action", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "countdown_type", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "countdown_value", $new_meta_value) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "ds", $ds) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "countdown_value", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "seconds", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "days", $days) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "timer_border", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "theme", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "theme", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "sc", $sc) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "hr", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "hr", $hr) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "expire_action", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "mn", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "days", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "minutes", $minutes) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "minutes", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "redirect_url", $redirect_url) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "seconds", $seconds) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "ds", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "redirect_url", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "timer_background", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "days", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "minutes", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "timer_border", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "mn", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "theme", $theme) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "countdown_value", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "hide_title", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "title_color", $title_color) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "hours", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "hours", $hours) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "redirect_url", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "font_face", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "timer_background", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "timer_color", $timer_color) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "timer_background", $timer_background) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "sc", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "countdown_type", $new_meta_type) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "sc", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "hide_title", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "hours", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "timer_color", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "expire_action", $expire_action) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "font_face", $font_face) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "hide_title", $hide_title) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "title_color", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "ds", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "font_face", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "timer_border", $timer_border) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "timer_color", true) - {'post_meta'}
user
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
user_meta
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:17.742703.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 726 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.434230.

!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 3308
726 STORE_REACHES edges created
726 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 4 nodes as PERSONAL
In total, tainted 4 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
In total, tainted 0 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:00.326766.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:00:51.969348!
RETRIEVAL call to get_option("imsc_timezone") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("imsc_timezone") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "countdown_type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "countdown_value", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "ds", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "hr", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "mn", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "sc", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "expire_action", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "redirect_url", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "theme", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "font_face", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "title_color", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "timer_color", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "timer_background", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "timer_border", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "hide_title", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "days", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "hours", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "minutes", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "seconds", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("imsc_timezone") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "countdown_type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "countdown_value", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("imsc_timezone") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "ds", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "hr", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "mn", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "sc", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "expire_action", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "redirect_url", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "theme", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "font_face", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "title_color", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "timer_color", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "timer_background", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "timer_border", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "hide_title", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "days", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "hours", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "minutes", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "seconds", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
STORAGE call to update_post_meta($post_id, "countdown_type", $new_meta_type) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "countdown_value", $new_meta_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "ds", $ds) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "hr", $hr) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "mn", $mn) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "sc", $sc) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "expire_action", $expire_action) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "redirect_url", $redirect_url) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "theme", $theme) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "font_face", $font_face) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "title_color", $title_color) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "timer_color", $timer_color) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "timer_background", $timer_background) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "timer_border", $timer_border) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "hide_title", $hide_title) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "days", $days) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "hours", $hours) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "minutes", $minutes) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "seconds", $seconds) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to add_option("imsc_timezone", "Asia/Kolkata", "", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] Storage check is NONE 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['encryption', 'third_party'] 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? True 

No findings
