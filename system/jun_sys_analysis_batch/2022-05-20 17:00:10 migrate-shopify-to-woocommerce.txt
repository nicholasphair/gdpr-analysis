Timeout in resolving values
Timeout in running neo4j query
Running Main.py on migrate-shopify-to-woocommerce

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:05.635549.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:02.995300.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 131 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.739209.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 2 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.970519.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 940 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:01.139137.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 8 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.867153.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.092736.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 547 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:41.552476.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 6969
Added 5341 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 162161
Added 155192 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:10.433238.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/migrate-shopify-to-woocommerce/class-plugin-deactivate-feedback.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/migrate-shopify-to-woocommerce/functions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/migrate-shopify-to-woocommerce/swm-shopify-to-wc-migration.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/migrate-shopify-to-woocommerce/admin/admin-pages.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/migrate-shopify-to-woocommerce/admin/class-plugin-action-links.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/migrate-shopify-to-woocommerce/admin/templates/main-admin-menu.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/migrate-shopify-to-woocommerce/admin/templates/system-status-sub-menu.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/migrate-shopify-to-woocommerce/includes/class-ajax.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/migrate-shopify-to-woocommerce/includes/class-background-process.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/migrate-shopify-to-woocommerce/includes/libs/background-processing/wp-async-request.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/migrate-shopify-to-woocommerce/includes/libs/background-processing/wp-background-process.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/migrate-shopify-to-woocommerce/includes/shopify/class-shopify-product-cat.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/migrate-shopify-to-woocommerce/includes/shopify/class-shopify-product.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/migrate-shopify-to-woocommerce/includes/wc/class-wc-product-cat.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/migrate-shopify-to-woocommerce/includes/wc/class-wc-product.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/migrate-shopify-to-woocommerce/support-page/class-support-page.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:01.401625.

131 PHP_REACHES edges created
2 REACHES edges created
940 PHP_REACHES edges created
8 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
5888 PHP_REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
14000 PHP_REACHES edges created
15000 PHP_REACHES edges created
16000 PHP_REACHES edges created
17000 PHP_REACHES edges created
18000 PHP_REACHES edges created
19000 PHP_REACHES edges created
20000 PHP_REACHES edges created
21000 PHP_REACHES edges created
22000 PHP_REACHES edges created
23000 PHP_REACHES edges created
24000 PHP_REACHES edges created
25000 PHP_REACHES edges created
26000 PHP_REACHES edges created
27000 PHP_REACHES edges created
28000 PHP_REACHES edges created
29000 PHP_REACHES edges created
30000 PHP_REACHES edges created
31000 PHP_REACHES edges created
32000 PHP_REACHES edges created
33000 PHP_REACHES edges created
34000 PHP_REACHES edges created
35000 PHP_REACHES edges created
36000 PHP_REACHES edges created
37000 PHP_REACHES edges created
38000 PHP_REACHES edges created
39000 PHP_REACHES edges created
40000 PHP_REACHES edges created
41000 PHP_REACHES edges created
42000 PHP_REACHES edges created
43000 PHP_REACHES edges created
44000 PHP_REACHES edges created
45000 PHP_REACHES edges created
46000 PHP_REACHES edges created
47000 PHP_REACHES edges created
48000 PHP_REACHES edges created
49000 PHP_REACHES edges created
50000 PHP_REACHES edges created
51000 PHP_REACHES edges created
52000 PHP_REACHES edges created
53000 PHP_REACHES edges created
54000 PHP_REACHES edges created
55000 PHP_REACHES edges created
56000 PHP_REACHES edges created
57000 PHP_REACHES edges created
58000 PHP_REACHES edges created
59000 PHP_REACHES edges created
60000 PHP_REACHES edges created
61000 PHP_REACHES edges created
62000 PHP_REACHES edges created
63000 PHP_REACHES edges created
64000 PHP_REACHES edges created
65000 PHP_REACHES edges created
66000 PHP_REACHES edges created
67000 PHP_REACHES edges created
68000 PHP_REACHES edges created
69000 PHP_REACHES edges created
70000 PHP_REACHES edges created
71000 PHP_REACHES edges created
72000 PHP_REACHES edges created
73000 PHP_REACHES edges created
74000 PHP_REACHES edges created
75000 PHP_REACHES edges created
76000 PHP_REACHES edges created
77000 PHP_REACHES edges created
78000 PHP_REACHES edges created
79000 PHP_REACHES edges created
80000 PHP_REACHES edges created
81000 PHP_REACHES edges created
82000 PHP_REACHES edges created
83000 PHP_REACHES edges created
84000 PHP_REACHES edges created
85000 PHP_REACHES edges created
86000 PHP_REACHES edges created
87000 PHP_REACHES edges created
88000 PHP_REACHES edges created
89000 PHP_REACHES edges created
90000 PHP_REACHES edges created
91000 PHP_REACHES edges created
92000 PHP_REACHES edges created
93000 PHP_REACHES edges created
94000 PHP_REACHES edges created
95000 PHP_REACHES edges created
96000 PHP_REACHES edges created
97000 PHP_REACHES edges created
98000 PHP_REACHES edges created
99000 PHP_REACHES edges created
100000 PHP_REACHES edges created
101000 PHP_REACHES edges created
102000 PHP_REACHES edges created
103000 PHP_REACHES edges created
104000 PHP_REACHES edges created
105000 PHP_REACHES edges created
106000 PHP_REACHES edges created
107000 PHP_REACHES edges created
108000 PHP_REACHES edges created
109000 PHP_REACHES edges created
110000 PHP_REACHES edges created
111000 PHP_REACHES edges created
112000 PHP_REACHES edges created
113000 PHP_REACHES edges created
114000 PHP_REACHES edges created
115000 PHP_REACHES edges created
116000 PHP_REACHES edges created
117000 PHP_REACHES edges created
118000 PHP_REACHES edges created
119000 PHP_REACHES edges created
120000 PHP_REACHES edges created
121000 PHP_REACHES edges created
122000 PHP_REACHES edges created
123000 PHP_REACHES edges created
124000 PHP_REACHES edges created
125000 PHP_REACHES edges created
126000 PHP_REACHES edges created
127000 PHP_REACHES edges created
128000 PHP_REACHES edges created
129000 PHP_REACHES edges created
130000 PHP_REACHES edges created
131000 PHP_REACHES edges created
132000 PHP_REACHES edges created
133000 PHP_REACHES edges created
134000 PHP_REACHES edges created
135000 PHP_REACHES edges created
136000 PHP_REACHES edges created
137000 PHP_REACHES edges created
138000 PHP_REACHES edges created
139000 PHP_REACHES edges created
140000 PHP_REACHES edges created
141000 PHP_REACHES edges created
142000 PHP_REACHES edges created
143000 PHP_REACHES edges created
144000 PHP_REACHES edges created
145000 PHP_REACHES edges created
146000 PHP_REACHES edges created
147000 PHP_REACHES edges created
148000 PHP_REACHES edges created
149000 PHP_REACHES edges created
150000 PHP_REACHES edges created
151000 PHP_REACHES edges created
152000 PHP_REACHES edges created
153000 PHP_REACHES edges created
154000 PHP_REACHES edges created
155000 PHP_REACHES edges created
155192 PHP_REACHES edges created
162161 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 2626 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.136396.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:04.709098.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 62 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:03.071940.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 115 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.181286.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.860550.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.657742.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.016941.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.033760.

177 PHP_REACHES edges created
177 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 128 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.111099.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
2 SQL operations to process.
DELETE FROM $wpdb WHERE option_name LIKE $wpdb->esc_like($this->identifier . "_batch_")%
DELETE FROM $wpdb WHERE option_name LIKE $wpdb->esc_like($this->identifier . "_batch_")%
SQL command (DELETE FROM $wpdb WHERE option_name LIKE $wpdb->esc_like($this->identifier . "_batch_")%) cannot be parsed correct.

			SELECT *
			FROM $wpdb
			WHERE option_name LIKE $wpdb->esc_like($this->identifier . "_batch_")%
			ORDER BY meta_id ASC
			LIMIT 1
		

			SELECT *
			FROM $wpdb
			WHERE option_name LIKE $wpdb->esc_like($this->identifier . "_batch_")%
			ORDER BY meta_id ASC
			LIMIT 1
		
SQL command ( SELECT * FROM $wpdb WHERE option_name LIKE $wpdb->esc_like($this->identifier . "_batch_")% ORDER BY meta_id ASC LIMIT 1 ) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [5247, 6226]
Added 0 SQL nodes. 0 out of 2 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:02.540874.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'$value'' cannot be parsed correct.
HTML code '$'$value'' cannot be parsed correct.
HTML code '$'$value'' cannot be parsed correct.
HTML code '$'$value'' cannot be parsed correct.
HTML code '$'$wb_swm_result_per_request'' cannot be parsed correct.
HTML code '$'checked($wb_swm_download_cat_images, "on")'' cannot be parsed correct.
HTML code '$'$wb_swm_cats_per_request'' cannot be parsed correct.
HTML code '$'WB_SWM_UPGRADE_TO_PRO'' cannot be parsed correct.
HTML code '$'WB_SWM_UPGRADE_TO_PRO'' cannot be parsed correct.
HTML code '$'WB_SWM_UPGRADE_TO_PRO'' cannot be parsed correct.
HTML code '$'WB_SWM_UPGRADE_TO_PRO'' cannot be parsed correct.
HTML code '$'$wb_swm_store_url'' cannot be parsed correct.
HTML code '$'$wb_swm_api_key'' cannot be parsed correct.
HTML code '$'$wb_swm_api_pwd'' cannot be parsed correct.
HTML code '$'$wb_swm_request_timeout'' cannot be parsed correct.
HTML code '$'selected($wb_swm_product_status, "publish")'' cannot be parsed correct.
HTML code '$'selected($wb_swm_product_status, "pending")'' cannot be parsed correct.
HTML code '$'selected($wb_swm_product_status, "draft")'' cannot be parsed correct.
HTML code '$'checked($wb_swm_download_images, "on")'' cannot be parsed correct.
HTML code '$'<mark class="yes">&#10004; <code class="private">SWM_CACHEswm-cache/</code></mark> '' cannot be parsed correct.
HTML code '$'$this_plugin_name'' cannot be parsed correct.
HTML code '$'$this_plugin_name'' cannot be parsed correct.
HTML code '$'$this_plugin_name'' cannot be parsed correct.
HTML code '$'$this_plugin_name'' cannot be parsed correct.
HTML code '$'<div class="wpb-goodbye-form-head"><strong>$this->form_filterable_text()_heading</strong></div>'' cannot be parsed correct.
HTML code '$'$this_plugin_name'' cannot be parsed correct.
HTML code '$'$this_plugin_name'' cannot be parsed correct.
HTML code '$'$this_plugin_name'' cannot be parsed correct.
HTML code '$'wp_create_nonce("swm_goodbye_form")'' cannot be parsed correct.
HTML code '$'$this_plugin_name'' cannot be parsed correct.
HTML code '$'<script type="text/javascript">
	           var ajaxurl = "admin_url("admin-ajax.php")";
	         </script'' cannot be parsed correct.
HTML code '$'json_encode($data)'' cannot be parsed correct.
HTML code '$'$this_relative_folder_url'' cannot be parsed correct.
HTML code '$'$this_plugin_namenot-set-via-instance'' cannot be parsed correct.
HTML code '$'
			<select name="swm_import_type">
				<option value="">Filter by Import Type</option>
				<option selected($swm_shopify_product, "swm_shopify_product", false) value="swm_shopify_product">Shopify</option>
			</select>
		'' cannot be parsed correct.
HTML code '$'
			<select name="swm_media_import_from">
				<option value="">Filter by Import Type</option>
				<option selected($swm_shopify_image, "swm_shopify_image", false) value="swm_shopify_image">Shopify</option>
			</select>
		'' cannot be parsed correct.
HTML code '$'selected="selected"'' cannot be parsed correct.
HTML code '$'selected="selected"'' cannot be parsed correct.
HTML code '$' </label>
							</td>
							<td class="forminp forminp-text field">
								<div class="ui toggle checkbox">
							      <input type="checkbox"  name="wb_swm_download_cat_images" value="on" id="wb-swm-enable-cat-images" '' cannot be parsed correct.
HTML code '$'</th>
						<th>'' cannot be parsed correct.
HTML code '$'</th>
						<th>'' cannot be parsed correct.
HTML code '$'</th>
					</tr>
				</thead>

				<tbody>
					<tr valign="top">
						<td scope="row" class="three wide titledesc">
							<label for="wb-swm-enable-product">Product </label>
						</td>
						<td class="forminp forminp-text three wide">
							<div class="swm-container" data-resource-type=\'product\'>
						       <div class="ui toggle checkbox">
							      <input type="checkbox" class="swm-switch-input" name="wb-swm-import-product" value="enable" id="wb-swm-enable-images" checked>
							    </div>
							</div>
						</td>
						<td id="wb-swm-product-download-status">
							<div class="ui indicating progress swm-hidden">
							  <div class="bar"></div>
							  <div class="label">'' cannot be parsed correct.
HTML code '$'</th>
        <th>'' cannot be parsed correct.
HTML code '$'</th>
        <th>'' cannot be parsed correct.
HTML code '$'</th>
    </tr>
    </thead>
    <tbody>
    <tr>
        <td data-export-label="file_get_contents">file_get_contents</td>
        <td>
			'' cannot be parsed correct.
HTML code '$'</td>
    </tr>
    <tr>
        <td data-export-label="file_put_contents">file_put_contents</td>
        <td>
			'' cannot be parsed correct.
HTML code '$'</td>
    </tr>
    <tr>
        <td data-export-label="mkdir">mkdir</td>
        <td>
			'' cannot be parsed correct.
HTML code '$'style="display: block;"'' cannot be parsed correct.
HTML code '$' </label>
							</td>
							<td class="forminp forminp-text field">
								<div class="ui toggle checkbox">
							      <input type="checkbox"  name="wb_swm_download_images" value="on" id="wb-swm-enable-images" '' cannot be parsed correct.
HTML code '$'</td>
    </tr>
    <tr>
        <td data-export-label='' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</td>
        <td>
			'' cannot be parsed correct.
HTML code '$'</td>
    </tr>
	'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</td>
        <td style='' cannot be parsed correct.
HTML code '$'</td>
    </tr>
    <tr>
        <td data-export-label='' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</td>

        <td style='' cannot be parsed correct.
HTML code '$'</td>
    </tr>
    <tr>
        <td data-export-label='' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</td>

        <td style='' cannot be parsed correct.
HTML code '$'</td>
    </tr>

    </tbody>
</table>'' cannot be parsed correct.
HTML code '$'success'' cannot be parsed correct.
HTML code '$'                </p>
                <p>
					'' cannot be parsed correct.
HTML code '$'                </p>
            </div>
			'' cannot be parsed correct.
HTML code '$'                </p>
            </div>
			'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:06.815639.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.043357.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 13 do_action/apply_filters calls and 26 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:03.288112.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FileProDetector
### Start running FrontBaseDetector
### Finish running DbaseDetector
### Start running HashDetector
### Finish running DbplusDetector
### Start running IBMDb2Detector
### Finish running IBMDb2Detector
### Start running InformixDetector
### Finish running HashDetector
### Start running IngresDetector
### Finish running ArrayElementDetector
### Start running maxdbDetector
### Finish running CubridDetector
### Start running MongoDbDetector
### Finish running MongoDbDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running FirebirdInterBaseDetector
### Start running MySQLDetector
### Finish running FrontBaseDetector
### Start running MySQLiDetector
### Finish running InformixDetector
### Start running Oci8Detector
### Finish running IngresDetector
### Start running OpenSSLDetector
### Finish running OpenSSLDetector
### Start running ParadoxDetector
### Finish running MySQLDetector
### Start running PasswordHashingDetector
### Finish running MsqlDetector
### Start running PhpCurlDetector
### Finish running PhpCurlDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running Oci8Detector
### Start running PHPRetrievalDetector
### Finish running ParadoxDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPRetrievalDetector
### Start running PhpVarDetector
### Finish running PHPStorageDetector
### Start running PostgreSQLDetector
### Finish running PostgreSQLDetector
### Start running PropertyDetector
### Finish running PasswordHashingDetector
### Start running Sqlite3Detector
### Finish running PhpVarDetector
### Start running SqliteDetector
### Finish running PropertyDetector
### Start running SqlServerDetector
### Finish running Sqlite3Detector
### Start running SybaseDetector
### Finish running SqlServerDetector
### Start running TokyoTyrantDetector
### Finish running TokyoTyrantDetector
### Start running UserInputDetector
### Finish running SqliteDetector
### Start running VariableDetector
### Finish running SybaseDetector
### Start running WordpressHashingFnDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRemoteDetector
### Finish running UserInputDetector
### Start running WordPressRetrievalDetector
### Finish running PHPIncludedDetector
### Start running WordPressStorageDetector
### Finish running VariableDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running GenericDatabaseUsageDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running DeletionDetector
### Start running UninstallDetector
### Finish running UninstallDetector
### Finish running WordPressRetrievalDetector
### Finish running WordPressStorageDetector
### Finish running maxdbDetector
### Finish running MySQLiDetector
### Finish running WordPressRemoteDetector
### Finished running detectors
class-plugin-deactivate-feedback.php:377
  - Request variable '$_POST["email"]' of personal types {'email'} is found.
  - Data types: email
class-plugin-deactivate-feedback.php:378
  - Request variable '$_POST["email"]' of personal types {'email'} is found.
  - Data types: email
support-page/class-support-page.php:36
  - Request variable '$_POST["post_email"]' of personal types {'email'} is found.
  - Data types: email 

includes/libs/background-processing/wp-background-process.php:149
  - MD5 called with parameters [microtime, rand]. Ignore if [microtime, rand] does not contain personal information. 

functions.php:141
  - RETRIEVAL call to file_get_contents($file_name).
  - Data types: file 

functions.php:146
  - STORAGE call to file_put_contents($file_name, $data).
  - Data types: file 

class-plugin-deactivate-feedback.php:121
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
class-plugin-deactivate-feedback.php:124
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
class-plugin-deactivate-feedback.php:378
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
class-plugin-deactivate-feedback.php:379
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
functions.php:31
  - variable '$api_password' of personal types {'password'} is found.
  - Data types: password
functions.php:33
  - variable '$api_password' of personal types {'password'} is found.
  - Data types: password
functions.php:40
  - variable '$api_password' of personal types {'password'} is found.
  - Data types: password
functions.php:45
  - variable '$api_password' of personal types {'password'} is found.
  - Data types: password
support-page/class-support-page.php:36
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
support-page/class-support-page.php:41
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
support-page/class-support-page.php:45
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
support-page/class-support-page.php:59
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
support-page/class-support-page.php:84
  - variable '$email' of personal types {'email'} is found.
  - Data types: email 

functions.php:49
  - API call to wp_remote_request($url, $wp_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
includes/libs/background-processing/wp-async-request.php:87
  - API call to wp_remote_post(esc_url_raw($url), $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote 

admin/templates/main-admin-menu.php:3
  - RETRIEVAL call to get_option("wb_swm_store_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/templates/main-admin-menu.php:3
  - RETRIEVAL call to get_option("wb_swm_store_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/templates/main-admin-menu.php:4
  - RETRIEVAL call to get_option("wb_swm_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/templates/main-admin-menu.php:4
  - RETRIEVAL call to get_option("wb_swm_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/templates/main-admin-menu.php:5
  - RETRIEVAL call to get_option("wb_swm_api_pwd") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/templates/main-admin-menu.php:5
  - RETRIEVAL call to get_option("wb_swm_api_pwd") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/templates/main-admin-menu.php:8
  - RETRIEVAL call to get_option("wb_swm_product_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/templates/main-admin-menu.php:8
  - RETRIEVAL call to get_option("wb_swm_product_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/templates/main-admin-menu.php:9
  - RETRIEVAL call to get_option("wb_swm_download_images") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/templates/main-admin-menu.php:9
  - RETRIEVAL call to get_option("wb_swm_download_images") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/templates/main-admin-menu.php:10
  - RETRIEVAL call to get_option("wb_swm_product_categories") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/templates/main-admin-menu.php:10
  - RETRIEVAL call to get_option("wb_swm_product_categories") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/templates/main-admin-menu.php:11
  - RETRIEVAL call to get_option("wb_swm_product_tags") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/templates/main-admin-menu.php:11
  - RETRIEVAL call to get_option("wb_swm_product_tags") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/templates/main-admin-menu.php:12
  - RETRIEVAL call to get_option("wb_swm_request_timeout") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/templates/main-admin-menu.php:12
  - RETRIEVAL call to get_option("wb_swm_request_timeout") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/templates/main-admin-menu.php:13
  - RETRIEVAL call to get_option("wb_swm_result_per_request") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/templates/main-admin-menu.php:13
  - RETRIEVAL call to get_option("wb_swm_result_per_request") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/templates/main-admin-menu.php:16
  - RETRIEVAL call to get_option("wb_swm_download_cat_images") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/templates/main-admin-menu.php:16
  - RETRIEVAL call to get_option("wb_swm_download_cat_images") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/templates/main-admin-menu.php:17
  - RETRIEVAL call to get_option("wb_swm_cats_per_request") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/templates/main-admin-menu.php:17
  - RETRIEVAL call to get_option("wb_swm_cats_per_request") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class-plugin-deactivate-feedback.php:194
  - RETRIEVAL call to get_option("admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class-plugin-deactivate-feedback.php:197
  - RETRIEVAL call to get_option("swm_deactivation_reason_" . $this->plugin_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class-plugin-deactivate-feedback.php:198
  - RETRIEVAL call to get_option("swm_deactivation_reason_" . $this->plugin_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class-plugin-deactivate-feedback.php:201
  - RETRIEVAL call to get_option("swm_deactivation_details_" . $this->plugin_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class-plugin-deactivate-feedback.php:202
  - RETRIEVAL call to get_option("swm_deactivation_details_" . $this->plugin_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class-plugin-deactivate-feedback.php:206
  - RETRIEVAL call to get_option("swm_deactivation_email_" . $this->plugin_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class-plugin-deactivate-feedback.php:207
  - RETRIEVAL call to get_option("swm_deactivation_email_" . $this->plugin_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class-plugin-deactivate-feedback.php:211
  - RETRIEVAL call to get_option("swm_deactivation_main_reason_" . $this->plugin_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class-plugin-deactivate-feedback.php:212
  - RETRIEVAL call to get_option("swm_deactivation_main_reason_" . $this->plugin_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class-plugin-deactivate-feedback.php:291
  - RETRIEVAL call to get_option("admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
functions.php:23
  - RETRIEVAL call to get_option($option) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
functions.php:205
  - RETRIEVAL call to get_option("active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/shopify/class-shopify-product-cat.php:23
  - RETRIEVAL call to get_option("wb_swm_cats_per_request") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/shopify/class-shopify-product-cat.php:23
  - RETRIEVAL call to get_option("wb_swm_cats_per_request") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/shopify/class-shopify-product-cat.php:46
  - RETRIEVAL call to get_option("swm_import_custom_collection_records", $import_records_options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/shopify/class-shopify-product-cat.php:77
  - RETRIEVAL call to get_option("swm_import_custom_collection_records", $import_records_options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/shopify/class-shopify-product.php:22
  - RETRIEVAL call to get_option("wb_swm_result_per_request") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/shopify/class-shopify-product.php:22
  - RETRIEVAL call to get_option("wb_swm_result_per_request") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/shopify/class-shopify-product.php:45
  - RETRIEVAL call to get_option("swm_import_records", $import_records_options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/shopify/class-shopify-product.php:78
  - RETRIEVAL call to get_option("swm_import_records", $import_records_options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/wc/class-wc-product-cat.php:25
  - RETRIEVAL call to get_option("wb_swm_download_cat_images") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/wc/class-wc-product-cat.php:25
  - RETRIEVAL call to get_option("wb_swm_download_cat_images") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/wc/class-wc-product.php:90
  - RETRIEVAL call to get_option("wb_swm_download_images") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/wc/class-wc-product.php:90
  - RETRIEVAL call to get_option("wb_swm_download_images") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/wc/class-wc-product.php:191
  - RETRIEVAL call to get_option("wb_swm_download_images") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/wc/class-wc-product.php:191
  - RETRIEVAL call to get_option("wb_swm_download_images") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
swm-shopify-to-wc-migration.php:121
  - RETRIEVAL call to get_option("wb_swm_request_timeout") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
swm-shopify-to-wc-migration.php:121
  - RETRIEVAL call to get_option("wb_swm_request_timeout") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
swm-shopify-to-wc-migration.php:122
  - RETRIEVAL call to get_option("wb_swm_result_per_request") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
swm-shopify-to-wc-migration.php:122
  - RETRIEVAL call to get_option("wb_swm_result_per_request") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
swm-shopify-to-wc-migration.php:123
  - RETRIEVAL call to get_option("wb_swm_cats_per_request") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
swm-shopify-to-wc-migration.php:123
  - RETRIEVAL call to get_option("wb_swm_cats_per_request") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
swm-shopify-to-wc-migration.php:154
  - RETRIEVAL call to get_transient("swm_background_img_downloading_complete") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
swm-shopify-to-wc-migration.php:167
  - RETRIEVAL call to get_option("wb_swm_download_images") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
swm-shopify-to-wc-migration.php:168
  - RETRIEVAL call to get_option("wb_swm_download_cat_images") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option 

class-plugin-deactivate-feedback.php:199
  - STORAGE call to delete_option("swm_deactivation_reason_" . $this->plugin_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
class-plugin-deactivate-feedback.php:203
  - STORAGE call to delete_option("swm_deactivation_details_" . $this->plugin_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
class-plugin-deactivate-feedback.php:208
  - STORAGE call to delete_option("swm_deactivation_email_" . $this->plugin_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
class-plugin-deactivate-feedback.php:213
  - STORAGE call to delete_option("swm_deactivation_main_reason_" . $this->plugin_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
class-plugin-deactivate-feedback.php:370
  - STORAGE call to update_option("swm_deactivation_reason_" . $this->plugin_name, $values) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
class-plugin-deactivate-feedback.php:374
  - STORAGE call to update_option("swm_deactivation_details_" . $this->plugin_name, $details) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
class-plugin-deactivate-feedback.php:379
  - STORAGE call to update_option("swm_deactivation_email_" . $this->plugin_name, $email) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
class-plugin-deactivate-feedback.php:384
  - STORAGE call to update_option("swm_deactivation_main_reason_" . $this->plugin_name, $main_reason) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-ajax.php:29
  - STORAGE call to delete_option("swm_import_records") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/class-ajax.php:45
  - STORAGE call to delete_option("swm_import_custom_collection_records") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/class-background-process.php:34
  - STORAGE call to update_post_meta($thumb_id, "swm_media_import_from", "swm_shopify_image") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-background-process.php:35
  - STORAGE call to update_post_meta($thumb_id, "swm_media_type", "swm_shopify_product_image") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-background-process.php:39
  - STORAGE call to update_post_meta($v_id, "_thumbnail_id", $thumb_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-background-process.php:44
  - STORAGE call to update_post_meta($thumb_id, "_wp_attachment_image_alt", $image["alt"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-background-process.php:52
  - STORAGE call to update_post_meta($product_id, "_product_image_gallery", implode(",", $gallery)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-background-process.php:62
  - STORAGE call to update_post_meta($thumb_id, "swm_media_import_from", "swm_shopify_image") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-background-process.php:63
  - STORAGE call to update_post_meta($thumb_id, "swm_media_type", "swm_shopify_collection_image") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-background-process.php:105
  - STORAGE call to set_transient("swm_background_img_downloading_complete", time()) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed). Returns (bool).
  - Data types: site
includes/shopify/class-shopify-product-cat.php:75
  - STORAGE call to update_option("swm_import_custom_collection_records", $swm_import_custom_collection_records) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/shopify/class-shopify-product.php:76
  - STORAGE call to update_option("swm_import_records", $swm_import_records) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/wc/class-wc-product.php:48
  - STORAGE call to wp_update_post($post_params). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
includes/wc/class-wc-product.php:51
  - STORAGE call to wp_insert_post($post_params). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
includes/wc/class-wc-product.php:56
  - STORAGE call to update_post_meta($post_id, "swm_import_type", "swm_shopify_product") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/wc/class-wc-product.php:129
  - STORAGE call to update_post_meta($post_id, "_visibility", "visible") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/wc/class-wc-product.php:130
  - STORAGE call to update_post_meta($post_id, "_stock_status", $stock_status) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/wc/class-wc-product.php:131
  - STORAGE call to update_post_meta($post_id, "total_sales", "0") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/wc/class-wc-product.php:132
  - STORAGE call to update_post_meta($post_id, "_downloadable", "no") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/wc/class-wc-product.php:133
  - STORAGE call to update_post_meta($post_id, "_virtual", $_virtual) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/wc/class-wc-product.php:134
  - STORAGE call to update_post_meta($post_id, "_regular_price", $regular_price) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/wc/class-wc-product.php:135
  - STORAGE call to update_post_meta($post_id, "_price", $regular_price) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/wc/class-wc-product.php:136
  - STORAGE call to update_post_meta($post_id, "_purchase_note", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/wc/class-wc-product.php:137
  - STORAGE call to update_post_meta($post_id, "_featured", "no") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/wc/class-wc-product.php:138
  - STORAGE call to update_post_meta($post_id, "_weight", floatval($variant["weight"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/wc/class-wc-product.php:139
  - STORAGE call to update_post_meta($post_id, "_length", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/wc/class-wc-product.php:140
  - STORAGE call to update_post_meta($post_id, "_width", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/wc/class-wc-product.php:141
  - STORAGE call to update_post_meta($post_id, "_height", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/wc/class-wc-product.php:142
  - STORAGE call to update_post_meta($post_id, "_sku", sanitize_text_field($variant["sku"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/wc/class-wc-product.php:143
  - STORAGE call to update_post_meta($post_id, "_product_attributes", []) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/wc/class-wc-product.php:144
  - STORAGE call to update_post_meta($post_id, "_sale_price_dates_from", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/wc/class-wc-product.php:145
  - STORAGE call to update_post_meta($post_id, "_sale_price_dates_to", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/wc/class-wc-product.php:146
  - STORAGE call to update_post_meta($post_id, "_sold_individually", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/wc/class-wc-product.php:147
  - STORAGE call to update_post_meta($post_id, "_manage_stock", $inventory_management) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/wc/class-wc-product.php:149
  - STORAGE call to update_post_meta($post_id, "_backorders", $_backorders) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/wc/class-wc-product.php:151
  - STORAGE call to update_post_meta($post_id, "_swm_shopify_product_id", $shopify_product["id"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/wc/class-wc-product.php:152
  - STORAGE call to update_post_meta($post_id, "_swm_shopify_variation_id", $variant["id"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/wc/class-wc-product.php:155
  - STORAGE call to update_post_meta($post_id, "_sale_price", $sale_price) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/wc/class-wc-product.php:156
  - STORAGE call to update_post_meta($post_id, "_price", $sale_price) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/wc/class-wc-product.php:225
  - STORAGE call to update_post_meta($post_id, "_visibility", "visible") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/wc/class-wc-product.php:227
  - STORAGE call to update_post_meta($post_id, "_product_attributes", $attr_data) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/wc/class-wc-product.php:229
  - STORAGE call to update_post_meta($post_id, "_swm_shopify_product_id", $shopify_product["id"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/wc/class-wc-product.php:301
  - STORAGE call to update_post_meta($variation_obj_id, "_swm_shopify_variation_id", $variation["id"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
swm-shopify-to-wc-migration.php:155
  - STORAGE call to delete_transient("swm_background_img_downloading_complete") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).
  - Data types: site
swm-shopify-to-wc-migration.php:171
  - STORAGE call to update_option("wb_swm_download_images", SWM_DEFAULT_IMAGE_DOWNLOAD_STATUS) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
swm-shopify-to-wc-migration.php:175
  - STORAGE call to update_option("wb_swm_download_cat_images", SWM_DEFAULT_IMAGE_DOWNLOAD_STATUS) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
swm-shopify-to-wc-migration.php:183
  - STORAGE call to delete_transient("swm_background_img_downloading_complete") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).
  - Data types: site
swm-shopify-to-wc-migration.php:289
  - STORAGE call to delete_option("swm_import_records") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
swm-shopify-to-wc-migration.php:290
  - STORAGE call to delete_option("swm_import_custom_collection_records") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

class-plugin-deactivate-feedback.php:199
  - DELETION call to delete_option("swm_deactivation_reason_" . $this->plugin_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
class-plugin-deactivate-feedback.php:203
  - DELETION call to delete_option("swm_deactivation_details_" . $this->plugin_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
class-plugin-deactivate-feedback.php:208
  - DELETION call to delete_option("swm_deactivation_email_" . $this->plugin_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
class-plugin-deactivate-feedback.php:213
  - DELETION call to delete_option("swm_deactivation_main_reason_" . $this->plugin_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/class-ajax.php:29
  - DELETION call to delete_option("swm_import_records") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/class-ajax.php:45
  - DELETION call to delete_option("swm_import_custom_collection_records") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/libs/background-processing/wp-background-process.php:248
  - DELETION call to delete_site_transient($this->identifier . "_process_lock"). Passed arguments: 0: $transient (string). Returns (bool).
swm-shopify-to-wc-migration.php:289
  - DELETION call to delete_option("swm_import_records") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
swm-shopify-to-wc-migration.php:290
  - DELETION call to delete_option("swm_import_custom_collection_records") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

By data type:
email
	VariableDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
file
	PHPStorageDetector.file_put_contents($file_name, $data) - {'file'}
	PHPRetrievalDetector.file_get_contents($file_name) - {'file'}
none
	WordPressStorageDetector.wp_insert_post($post_params) - set()
	DeletionDetector.delete_site_transient($this->identifier . "_process_lock") - set()
	WordPressStorageDetector.wp_update_post($post_params) - set()
	PHPIncludedDetector.(unknown) - set()
option
	WordPressRetrievalDetector.get_option("wb_swm_request_timeout") - {'option'}
	WordPressRetrievalDetector.get_option("wb_swm_product_tags") - {'option'}
	WordPressStorageDetector.delete_option("swm_import_records") - {'option'}
	WordPressStorageDetector.delete_option("swm_deactivation_details_" . $this->plugin_name) - {'option'}
	WordPressStorageDetector.delete_option("swm_deactivation_reason_" . $this->plugin_name) - {'option'}
	WordPressRetrievalDetector.get_option("wb_swm_download_images") - {'option'}
	WordPressRetrievalDetector.get_option($option) - {'option'}
	WordPressRetrievalDetector.get_option("wb_swm_request_timeout") - {'option'}
	WordPressRetrievalDetector.get_option("swm_deactivation_details_" . $this->plugin_name) - {'option'}
	WordPressRetrievalDetector.get_option("wb_swm_api_pwd") - {'option'}
	WordPressRetrievalDetector.get_option("admin_email") - {'option'}
	WordPressRetrievalDetector.get_option("wb_swm_cats_per_request") - {'option'}
	WordPressRetrievalDetector.get_option("wb_swm_api_key") - {'option'}
	WordPressRetrievalDetector.get_option("wb_swm_product_status") - {'option'}
	WordPressStorageDetector.delete_option("swm_import_custom_collection_records") - {'option'}
	WordPressRetrievalDetector.get_option("swm_deactivation_email_" . $this->plugin_name) - {'option'}
	WordPressRetrievalDetector.get_option("swm_deactivation_details_" . $this->plugin_name) - {'option'}
	WordPressRetrievalDetector.get_option("wb_swm_product_status") - {'option'}
	WordPressRetrievalDetector.get_option("wb_swm_download_cat_images") - {'option'}
	WordPressRetrievalDetector.get_option("wb_swm_download_images") - {'option'}
	DeletionDetector.delete_option("swm_import_records") - {'option'}
	WordPressRetrievalDetector.get_option("wb_swm_result_per_request") - {'option'}
	WordPressStorageDetector.update_option("swm_import_records", $swm_import_records) - {'option'}
	WordPressRetrievalDetector.get_option("admin_email") - {'option'}
	WordPressRetrievalDetector.get_option("wb_swm_download_cat_images") - {'option'}
	DeletionDetector.delete_option("swm_import_custom_collection_records") - {'option'}
	DeletionDetector.delete_option("swm_import_records") - {'option'}
	WordPressRetrievalDetector.get_option("swm_deactivation_reason_" . $this->plugin_name) - {'option'}
	WordPressRetrievalDetector.get_option("swm_deactivation_email_" . $this->plugin_name) - {'option'}
	WordPressRetrievalDetector.get_option("swm_import_records", $import_records_options) - {'option'}
	WordPressRetrievalDetector.get_option("wb_swm_cats_per_request") - {'option'}
	WordPressRetrievalDetector.get_option("swm_deactivation_main_reason_" . $this->plugin_name) - {'option'}
	WordPressStorageDetector.update_option("swm_import_custom_collection_records", $swm_import_custom_collection_records) - {'option'}
	WordPressStorageDetector.update_option("wb_swm_download_images", SWM_DEFAULT_IMAGE_DOWNLOAD_STATUS) - {'option'}
	WordPressRetrievalDetector.get_option("wb_swm_store_url") - {'option'}
	WordPressRetrievalDetector.get_option("wb_swm_download_images") - {'option'}
	WordPressRetrievalDetector.get_option("wb_swm_result_per_request") - {'option'}
	DeletionDetector.delete_option("swm_deactivation_main_reason_" . $this->plugin_name) - {'option'}
	WordPressRetrievalDetector.get_option("swm_deactivation_main_reason_" . $this->plugin_name) - {'option'}
	WordPressRetrievalDetector.get_option("swm_import_custom_collection_records", $import_records_options) - {'option'}
	WordPressRetrievalDetector.get_option("wb_swm_api_key") - {'option'}
	WordPressRetrievalDetector.get_option("wb_swm_download_cat_images") - {'option'}
	WordPressStorageDetector.update_option("swm_deactivation_reason_" . $this->plugin_name, $values) - {'option'}
	DeletionDetector.delete_option("swm_deactivation_reason_" . $this->plugin_name) - {'option'}
	WordPressRetrievalDetector.get_option("wb_swm_result_per_request") - {'option'}
	WordPressRetrievalDetector.get_option("wb_swm_product_tags") - {'option'}
	WordPressRetrievalDetector.get_option("wb_swm_cats_per_request") - {'option'}
	WordPressRetrievalDetector.get_option("swm_import_records", $import_records_options) - {'option'}
	WordPressRetrievalDetector.get_option("wb_swm_download_images") - {'option'}
	WordPressRetrievalDetector.get_option("wb_swm_result_per_request") - {'option'}
	WordPressRetrievalDetector.get_option("wb_swm_store_url") - {'option'}
	WordPressStorageDetector.update_option("swm_deactivation_main_reason_" . $this->plugin_name, $main_reason) - {'option'}
	WordPressStorageDetector.delete_option("swm_deactivation_main_reason_" . $this->plugin_name) - {'option'}
	WordPressRetrievalDetector.get_option("active_plugins") - {'option'}
	WordPressStorageDetector.delete_option("swm_import_records") - {'option'}
	WordPressStorageDetector.delete_option("swm_deactivation_email_" . $this->plugin_name) - {'option'}
	WordPressRetrievalDetector.get_option("wb_swm_product_categories") - {'option'}
	WordPressRetrievalDetector.get_option("swm_deactivation_reason_" . $this->plugin_name) - {'option'}
	WordPressStorageDetector.update_option("wb_swm_download_cat_images", SWM_DEFAULT_IMAGE_DOWNLOAD_STATUS) - {'option'}
	WordPressRetrievalDetector.get_option("wb_swm_api_pwd") - {'option'}
	WordPressRetrievalDetector.get_option("wb_swm_download_cat_images") - {'option'}
	WordPressRetrievalDetector.get_option("wb_swm_result_per_request") - {'option'}
	WordPressStorageDetector.delete_option("swm_import_custom_collection_records") - {'option'}
	WordPressRetrievalDetector.get_option("swm_import_custom_collection_records", $import_records_options) - {'option'}
	WordPressRetrievalDetector.get_option("wb_swm_cats_per_request") - {'option'}
	WordPressStorageDetector.update_option("swm_deactivation_email_" . $this->plugin_name, $email) - {'option'}
	DeletionDetector.delete_option("swm_import_custom_collection_records") - {'option'}
	WordPressRetrievalDetector.get_option("wb_swm_product_categories") - {'option'}
	WordPressRetrievalDetector.get_option("wb_swm_request_timeout") - {'option'}
	WordPressStorageDetector.update_option("swm_deactivation_details_" . $this->plugin_name, $details) - {'option'}
	DeletionDetector.delete_option("swm_deactivation_email_" . $this->plugin_name) - {'option'}
	WordPressRetrievalDetector.get_option("wb_swm_download_images") - {'option'}
	WordPressRetrievalDetector.get_option("wb_swm_download_cat_images") - {'option'}
	WordPressRetrievalDetector.get_option("wb_swm_download_images") - {'option'}
	WordPressRetrievalDetector.get_option("wb_swm_download_images") - {'option'}
	DeletionDetector.delete_option("swm_deactivation_details_" . $this->plugin_name) - {'option'}
	WordPressRetrievalDetector.get_option("wb_swm_request_timeout") - {'option'}
	WordPressRetrievalDetector.get_option("wb_swm_result_per_request") - {'option'}
	WordPressRetrievalDetector.get_option("wb_swm_cats_per_request") - {'option'}
	WordPressRetrievalDetector.get_option("wb_swm_cats_per_request") - {'option'}
password
	VariableDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
post_meta
	WordPressStorageDetector.update_post_meta($post_id, "_virtual", $_virtual) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_sale_price", $sale_price) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_sku", sanitize_text_field($variant["sku"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_swm_shopify_product_id", $shopify_product["id"]) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_weight", floatval($variant["weight"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_length", "") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($v_id, "_thumbnail_id", $thumb_id) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_visibility", "visible") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_sale_price_dates_from", "") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_height", "") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_swm_shopify_product_id", $shopify_product["id"]) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($thumb_id, "swm_media_import_from", "swm_shopify_image") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_regular_price", $regular_price) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_price", $regular_price) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_backorders", $_backorders) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($thumb_id, "_wp_attachment_image_alt", $image["alt"]) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_visibility", "visible") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_product_attributes", []) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_product_attributes", $attr_data) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_stock_status", $stock_status) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_price", $sale_price) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product_id, "_product_image_gallery", implode(",", $gallery)) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($thumb_id, "swm_media_import_from", "swm_shopify_image") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_sale_price_dates_to", "") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_purchase_note", "") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_swm_shopify_variation_id", $variant["id"]) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_downloadable", "no") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_width", "") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_manage_stock", $inventory_management) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "total_sales", "0") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($thumb_id, "swm_media_type", "swm_shopify_product_image") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($variation_obj_id, "_swm_shopify_variation_id", $variation["id"]) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_featured", "no") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "swm_import_type", "swm_shopify_product") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($thumb_id, "swm_media_type", "swm_shopify_collection_image") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_sold_individually", "") - {'post_meta'}
remote
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
site
	WordPressStorageDetector.set_transient("swm_background_img_downloading_complete", time()) - {'site'}
	WordPressRetrievalDetector.get_transient("swm_background_img_downloading_complete") - {'site'}
	WordPressStorageDetector.delete_transient("swm_background_img_downloading_complete") - {'site'}
	WordPressStorageDetector.delete_transient("swm_background_img_downloading_complete") - {'site'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:01:11.111514.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 900 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.781258.

900 STORE_REACHES edges created
900 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 820 nodes as PERSONAL
In total, tainted 820 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 1 nodes as ENCRYPTED
In total, tainted 1 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:01:06.744111.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:04:35.959380!
Request variable '$_POST["email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["post_email"]' of personal types {'email'} is found.,,None
DELETION call to delete_option("swm_deactivation_reason_" . $this->plugin_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("swm_deactivation_details_" . $this->plugin_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("swm_deactivation_email_" . $this->plugin_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("swm_deactivation_main_reason_" . $this->plugin_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("swm_import_records") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("swm_import_custom_collection_records") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_site_transient($this->identifier . "_process_lock"). Passed arguments: 0: $transient (string). Returns (bool).,None,None
DELETION call to delete_option("swm_import_records") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("swm_import_custom_collection_records") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
MD5 called with parameters [microtime, rand]. Ignore if [microtime, rand] does not contain personal information.,md5,None
RETRIEVAL call to file_get_contents($file_name).,None,None
STORAGE call to file_put_contents($file_name, $data).,None,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$api_password' of personal types {'password'} is found.,,None
variable '$api_password' of personal types {'password'} is found.,,None
variable '$api_password' of personal types {'password'} is found.,,None
variable '$api_password' of personal types {'password'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
API call to wp_remote_request($url, $wp_args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_post(esc_url_raw($url), $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
RETRIEVAL call to get_option("wb_swm_product_categories") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wb_swm_product_categories") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wb_swm_product_tags") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wb_swm_product_tags") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wb_swm_request_timeout") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wb_swm_request_timeout") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wb_swm_result_per_request") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wb_swm_result_per_request") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wb_swm_download_cat_images") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wb_swm_download_cat_images") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wb_swm_cats_per_request") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wb_swm_cats_per_request") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wb_swm_store_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wb_swm_store_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wb_swm_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wb_swm_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wb_swm_api_pwd") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wb_swm_api_pwd") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wb_swm_product_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wb_swm_product_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wb_swm_download_images") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wb_swm_download_images") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("swm_deactivation_reason_" . $this->plugin_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("swm_deactivation_reason_" . $this->plugin_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("swm_deactivation_details_" . $this->plugin_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("swm_deactivation_details_" . $this->plugin_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("swm_deactivation_email_" . $this->plugin_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("swm_deactivation_email_" . $this->plugin_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("swm_deactivation_main_reason_" . $this->plugin_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("swm_deactivation_main_reason_" . $this->plugin_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($option) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wb_swm_cats_per_request") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wb_swm_cats_per_request") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("swm_import_custom_collection_records", $import_records_options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("swm_import_custom_collection_records", $import_records_options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wb_swm_result_per_request") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wb_swm_result_per_request") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("swm_import_records", $import_records_options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("swm_import_records", $import_records_options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wb_swm_download_cat_images") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wb_swm_download_cat_images") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wb_swm_download_images") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wb_swm_download_images") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wb_swm_download_images") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wb_swm_download_images") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wb_swm_request_timeout") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wb_swm_request_timeout") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wb_swm_result_per_request") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wb_swm_result_per_request") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wb_swm_cats_per_request") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wb_swm_cats_per_request") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_transient("swm_background_img_downloading_complete") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wb_swm_download_images") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wb_swm_download_cat_images") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
STORAGE call to delete_option("swm_deactivation_reason_" . $this->plugin_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("swm_deactivation_details_" . $this->plugin_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("swm_deactivation_email_" . $this->plugin_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("swm_deactivation_main_reason_" . $this->plugin_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("swm_deactivation_reason_" . $this->plugin_name, $values) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("swm_deactivation_details_" . $this->plugin_name, $details) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("swm_deactivation_email_" . $this->plugin_name, $email) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("swm_deactivation_main_reason_" . $this->plugin_name, $main_reason) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("swm_import_records") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("swm_import_custom_collection_records") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to set_transient("swm_background_img_downloading_complete", time()) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($thumb_id, "swm_media_import_from", "swm_shopify_image") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($thumb_id, "swm_media_type", "swm_shopify_product_image") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($v_id, "_thumbnail_id", $thumb_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($thumb_id, "_wp_attachment_image_alt", $image["alt"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($product_id, "_product_image_gallery", implode(",", $gallery)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($thumb_id, "swm_media_import_from", "swm_shopify_image") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($thumb_id, "swm_media_type", "swm_shopify_collection_image") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("swm_import_custom_collection_records", $swm_import_custom_collection_records) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("swm_import_records", $swm_import_records) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, "_visibility", "visible") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_stock_status", $stock_status) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "total_sales", "0") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_downloadable", "no") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_virtual", $_virtual) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_regular_price", $regular_price) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_price", $regular_price) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_purchase_note", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_featured", "no") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_weight", floatval($variant["weight"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_length", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_width", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_height", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_sku", sanitize_text_field($variant["sku"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_product_attributes", []) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_sale_price_dates_from", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_sale_price_dates_to", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_sold_individually", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_manage_stock", $inventory_management) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_backorders", $_backorders) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_swm_shopify_product_id", $shopify_product["id"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_swm_shopify_variation_id", $variant["id"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_sale_price", $sale_price) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_price", $sale_price) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_visibility", "visible") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_product_attributes", $attr_data) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_swm_shopify_product_id", $shopify_product["id"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($variation_obj_id, "_swm_shopify_variation_id", $variation["id"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_update_post($post_params). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to wp_insert_post($post_params). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($post_id, "swm_import_type", "swm_shopify_product") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_transient("swm_background_img_downloading_complete") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).,None,None
STORAGE call to update_option("wb_swm_download_images", SWM_DEFAULT_IMAGE_DOWNLOAD_STATUS) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wb_swm_download_cat_images", SWM_DEFAULT_IMAGE_DOWNLOAD_STATUS) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_transient("swm_background_img_downloading_complete") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).,None,None
STORAGE call to delete_option("swm_import_records") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("swm_import_custom_collection_records") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
Data Deletion violation! The plugin has storage node that has no identifier and cannot be accessed!
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] PII of types (['password', 'email']) stored through WordPress function "update_post_meta($post_id, "_virtual", $_virtual)", found in file includes/wc/class-wc-product.php at line 133. 

[has_storage] Unstructured data storage of PII types (['password', 'email']) to files through function "file_put_contents", found in file functions.php at line 146. 

[has_storage] PII of types (['password', 'email']) stored through WordPress function "update_post_meta($post_id, "_sale_price", $sale_price)", found in file includes/wc/class-wc-product.php at line 155. 

[has_storage] PII of types (['password', 'email']) stored through WordPress function "update_post_meta($post_id, "_sku", sanitize_text_field($variant["sku"]))", found in file includes/wc/class-wc-product.php at line 142. 

[has_storage] PII of types (['password', 'email']) stored through WordPress function "update_post_meta($post_id, "_swm_shopify_product_id", $shopify_product["id"])", found in file includes/wc/class-wc-product.php at line 229. 

[has_storage] PII of types (['password', 'email']) stored through WordPress function "wp_insert_post($post_params)", found in file includes/wc/class-wc-product.php at line 51. 

[has_storage] PII of types (['password', 'email']) stored through WordPress function "update_post_meta($post_id, "_weight", floatval($variant["weight"]))", found in file includes/wc/class-wc-product.php at line 138. 

[has_storage] PII of types (['password', 'email']) stored through WordPress function "update_post_meta($post_id, "_length", "")", found in file includes/wc/class-wc-product.php at line 139. 

[has_storage] PII of types (['password', 'email']) stored through WordPress function "update_post_meta($post_id, "_visibility", "visible")", found in file includes/wc/class-wc-product.php at line 129. 

[has_storage] PII of types (['password', 'email']) stored through WordPress function "update_post_meta($post_id, "_sale_price_dates_from", "")", found in file includes/wc/class-wc-product.php at line 144. 

[has_storage] PII of types (['password', 'email']) stored through WordPress function "update_post_meta($post_id, "_height", "")", found in file includes/wc/class-wc-product.php at line 141. 

[has_storage] PII of types (['password', 'email']) stored through WordPress function "update_post_meta($post_id, "_swm_shopify_product_id", $shopify_product["id"])", found in file includes/wc/class-wc-product.php at line 151. 

[has_storage] PII of types (['password', 'email']) stored through WordPress function "update_post_meta($post_id, "_regular_price", $regular_price)", found in file includes/wc/class-wc-product.php at line 134. 

[has_storage] PII of types (['password', 'email']) stored through WordPress function "update_post_meta($post_id, "_price", $regular_price)", found in file includes/wc/class-wc-product.php at line 135. 

[has_storage] PII of types (['password', 'email']) stored through WordPress function "update_post_meta($post_id, "_backorders", $_backorders)", found in file includes/wc/class-wc-product.php at line 149. 

[has_storage] PII of types (['password', 'email']) stored through WordPress function "update_post_meta($post_id, "_visibility", "visible")", found in file includes/wc/class-wc-product.php at line 225. 

[has_storage] PII of types (['password', 'email']) stored through WordPress function "update_post_meta($post_id, "_product_attributes", [])", found in file includes/wc/class-wc-product.php at line 143. 

[has_storage] PII of types (['password', 'email']) stored through WordPress function "update_post_meta($post_id, "_product_attributes", $attr_data)", found in file includes/wc/class-wc-product.php at line 227. 

[has_storage] PII of types (['password', 'email']) stored through WordPress function "update_post_meta($post_id, "_stock_status", $stock_status)", found in file includes/wc/class-wc-product.php at line 130. 

[has_storage] PII of types (['password', 'email']) stored through WordPress function "update_post_meta($post_id, "_price", $sale_price)", found in file includes/wc/class-wc-product.php at line 156. 

[has_storage] PII of types (['password', 'email']) stored through WordPress function "update_option("swm_import_records", $swm_import_records)", found in file includes/shopify/class-shopify-product.php at line 76. 

[has_storage] PII of types (['password', 'email']) stored through WordPress function "update_post_meta($post_id, "_sale_price_dates_to", "")", found in file includes/wc/class-wc-product.php at line 145. 

[has_storage] PII of types (['password', 'email']) stored through WordPress function "update_post_meta($post_id, "_purchase_note", "")", found in file includes/wc/class-wc-product.php at line 136. 

[has_storage] PII of types (['password', 'email']) stored through WordPress function "update_option("swm_import_custom_collection_records", $swm_import_custom_collection_records)", found in file includes/shopify/class-shopify-product-cat.php at line 75. 

[has_storage] PII of types (['password', 'email']) stored through WordPress function "update_post_meta($post_id, "_swm_shopify_variation_id", $variant["id"])", found in file includes/wc/class-wc-product.php at line 152. 

[has_storage] PII of types (['password', 'email']) stored through WordPress function "update_post_meta($post_id, "_downloadable", "no")", found in file includes/wc/class-wc-product.php at line 132. 

[has_storage] PII of types (['password', 'email']) stored through WordPress function "update_post_meta($post_id, "_width", "")", found in file includes/wc/class-wc-product.php at line 140. 

[has_storage] PII of types (['password', 'email']) stored through WordPress function "update_post_meta($post_id, "_manage_stock", $inventory_management)", found in file includes/wc/class-wc-product.php at line 147. 

[has_storage] PII of types (['password', 'email']) stored through WordPress function "update_post_meta($post_id, "total_sales", "0")", found in file includes/wc/class-wc-product.php at line 131. 

[has_storage] PII of types (['password', 'email']) stored through WordPress function "update_option("swm_deactivation_email_" . $this->plugin_name, $email)", found in file class-plugin-deactivate-feedback.php at line 379. 

[has_storage] PII of types (['password', 'email']) stored through WordPress function "update_post_meta($post_id, "_featured", "no")", found in file includes/wc/class-wc-product.php at line 137. 

[has_storage] PII of types (['password', 'email']) stored through WordPress function "update_post_meta($post_id, "swm_import_type", "swm_shopify_product")", found in file includes/wc/class-wc-product.php at line 56. 

[has_storage] PII of types (['password', 'email']) stored through WordPress function "update_post_meta($post_id, "_sold_individually", "")", found in file includes/wc/class-wc-product.php at line 146. 

[has_storage] Storage check is CUSTOM_UNSTRUCTURED 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post_id, "_virtual", $_virtual) does not have corresponding deletion method. Storage method found in file includes/wc/class-wc-product.php at line 133. 

[Art.17, Right to erasure] Complete data deletion is required for storage at node ID 4097 , but is impossible due to custom storage of PII without identifiers. Found in file functions.php at line 146 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post_id, "_sale_price", $sale_price) does not have corresponding deletion method. Storage method found in file includes/wc/class-wc-product.php at line 155. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post_id, "_sku", sanitize_text_field($variant["sku"])) does not have corresponding deletion method. Storage method found in file includes/wc/class-wc-product.php at line 142. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post_id, "_swm_shopify_product_id", $shopify_product["id"]) does not have corresponding deletion method. Storage method found in file includes/wc/class-wc-product.php at line 229. 

[Art.17, Right to erasure] Wordpress storage of PII through wp_insert_post($post_params) has deletion method delete_site_transient($this->identifier . "_process_lock"). Storage method found in file includes/wc/class-wc-product.php at line 51. Deletion method found in file includes/libs/background-processing/wp-background-process.php at line 248. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post_id, "_weight", floatval($variant["weight"])) does not have corresponding deletion method. Storage method found in file includes/wc/class-wc-product.php at line 138. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post_id, "_length", "") does not have corresponding deletion method. Storage method found in file includes/wc/class-wc-product.php at line 139. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post_id, "_visibility", "visible") does not have corresponding deletion method. Storage method found in file includes/wc/class-wc-product.php at line 129. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post_id, "_sale_price_dates_from", "") does not have corresponding deletion method. Storage method found in file includes/wc/class-wc-product.php at line 144. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post_id, "_height", "") does not have corresponding deletion method. Storage method found in file includes/wc/class-wc-product.php at line 141. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post_id, "_swm_shopify_product_id", $shopify_product["id"]) does not have corresponding deletion method. Storage method found in file includes/wc/class-wc-product.php at line 151. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post_id, "_regular_price", $regular_price) does not have corresponding deletion method. Storage method found in file includes/wc/class-wc-product.php at line 134. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post_id, "_price", $regular_price) does not have corresponding deletion method. Storage method found in file includes/wc/class-wc-product.php at line 135. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post_id, "_backorders", $_backorders) does not have corresponding deletion method. Storage method found in file includes/wc/class-wc-product.php at line 149. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post_id, "_visibility", "visible") does not have corresponding deletion method. Storage method found in file includes/wc/class-wc-product.php at line 225. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post_id, "_product_attributes", []) does not have corresponding deletion method. Storage method found in file includes/wc/class-wc-product.php at line 143. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post_id, "_product_attributes", $attr_data) does not have corresponding deletion method. Storage method found in file includes/wc/class-wc-product.php at line 227. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post_id, "_stock_status", $stock_status) does not have corresponding deletion method. Storage method found in file includes/wc/class-wc-product.php at line 130. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post_id, "_price", $sale_price) does not have corresponding deletion method. Storage method found in file includes/wc/class-wc-product.php at line 156. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("swm_import_records", $swm_import_records) has deletion method delete_option("swm_deactivation_reason_" . $this->plugin_name). Storage method found in file includes/shopify/class-shopify-product.php at line 76. Deletion method found in file class-plugin-deactivate-feedback.php at line 199. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("swm_import_records", $swm_import_records) has deletion method delete_option("swm_deactivation_details_" . $this->plugin_name). Storage method found in file includes/shopify/class-shopify-product.php at line 76. Deletion method found in file class-plugin-deactivate-feedback.php at line 203. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("swm_import_records", $swm_import_records) has deletion method delete_option("swm_deactivation_email_" . $this->plugin_name). Storage method found in file includes/shopify/class-shopify-product.php at line 76. Deletion method found in file class-plugin-deactivate-feedback.php at line 208. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("swm_import_records", $swm_import_records) has deletion method delete_option("swm_deactivation_main_reason_" . $this->plugin_name). Storage method found in file includes/shopify/class-shopify-product.php at line 76. Deletion method found in file class-plugin-deactivate-feedback.php at line 213. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("swm_import_records", $swm_import_records) has deletion method delete_option("swm_import_records"). Storage method found in file includes/shopify/class-shopify-product.php at line 76. Deletion method found in file includes/class-ajax.php at line 29. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("swm_import_records", $swm_import_records) has deletion method delete_option("swm_import_custom_collection_records"). Storage method found in file includes/shopify/class-shopify-product.php at line 76. Deletion method found in file includes/class-ajax.php at line 45. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("swm_import_records", $swm_import_records) has deletion method delete_option("swm_import_records"). Storage method found in file includes/shopify/class-shopify-product.php at line 76. Deletion method found in file swm-shopify-to-wc-migration.php at line 289. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("swm_import_records", $swm_import_records) has deletion method delete_option("swm_import_custom_collection_records"). Storage method found in file includes/shopify/class-shopify-product.php at line 76. Deletion method found in file swm-shopify-to-wc-migration.php at line 290. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post_id, "_sale_price_dates_to", "") does not have corresponding deletion method. Storage method found in file includes/wc/class-wc-product.php at line 145. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post_id, "_purchase_note", "") does not have corresponding deletion method. Storage method found in file includes/wc/class-wc-product.php at line 136. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("swm_import_custom_collection_records", $swm_import_custom_collection_records) has deletion method delete_option("swm_deactivation_reason_" . $this->plugin_name). Storage method found in file includes/shopify/class-shopify-product-cat.php at line 75. Deletion method found in file class-plugin-deactivate-feedback.php at line 199. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("swm_import_custom_collection_records", $swm_import_custom_collection_records) has deletion method delete_option("swm_deactivation_details_" . $this->plugin_name). Storage method found in file includes/shopify/class-shopify-product-cat.php at line 75. Deletion method found in file class-plugin-deactivate-feedback.php at line 203. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("swm_import_custom_collection_records", $swm_import_custom_collection_records) has deletion method delete_option("swm_deactivation_email_" . $this->plugin_name). Storage method found in file includes/shopify/class-shopify-product-cat.php at line 75. Deletion method found in file class-plugin-deactivate-feedback.php at line 208. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("swm_import_custom_collection_records", $swm_import_custom_collection_records) has deletion method delete_option("swm_deactivation_main_reason_" . $this->plugin_name). Storage method found in file includes/shopify/class-shopify-product-cat.php at line 75. Deletion method found in file class-plugin-deactivate-feedback.php at line 213. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("swm_import_custom_collection_records", $swm_import_custom_collection_records) has deletion method delete_option("swm_import_records"). Storage method found in file includes/shopify/class-shopify-product-cat.php at line 75. Deletion method found in file includes/class-ajax.php at line 29. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("swm_import_custom_collection_records", $swm_import_custom_collection_records) has deletion method delete_option("swm_import_custom_collection_records"). Storage method found in file includes/shopify/class-shopify-product-cat.php at line 75. Deletion method found in file includes/class-ajax.php at line 45. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("swm_import_custom_collection_records", $swm_import_custom_collection_records) has deletion method delete_option("swm_import_records"). Storage method found in file includes/shopify/class-shopify-product-cat.php at line 75. Deletion method found in file swm-shopify-to-wc-migration.php at line 289. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("swm_import_custom_collection_records", $swm_import_custom_collection_records) has deletion method delete_option("swm_import_custom_collection_records"). Storage method found in file includes/shopify/class-shopify-product-cat.php at line 75. Deletion method found in file swm-shopify-to-wc-migration.php at line 290. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post_id, "_swm_shopify_variation_id", $variant["id"]) does not have corresponding deletion method. Storage method found in file includes/wc/class-wc-product.php at line 152. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post_id, "_downloadable", "no") does not have corresponding deletion method. Storage method found in file includes/wc/class-wc-product.php at line 132. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post_id, "_width", "") does not have corresponding deletion method. Storage method found in file includes/wc/class-wc-product.php at line 140. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post_id, "_manage_stock", $inventory_management) does not have corresponding deletion method. Storage method found in file includes/wc/class-wc-product.php at line 147. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post_id, "total_sales", "0") does not have corresponding deletion method. Storage method found in file includes/wc/class-wc-product.php at line 131. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("swm_deactivation_email_" . $this->plugin_name, $email) has deletion method delete_option("swm_deactivation_reason_" . $this->plugin_name). Storage method found in file class-plugin-deactivate-feedback.php at line 379. Deletion method found in file class-plugin-deactivate-feedback.php at line 199. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("swm_deactivation_email_" . $this->plugin_name, $email) has deletion method delete_option("swm_deactivation_details_" . $this->plugin_name). Storage method found in file class-plugin-deactivate-feedback.php at line 379. Deletion method found in file class-plugin-deactivate-feedback.php at line 203. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("swm_deactivation_email_" . $this->plugin_name, $email) has deletion method delete_option("swm_deactivation_email_" . $this->plugin_name). Storage method found in file class-plugin-deactivate-feedback.php at line 379. Deletion method found in file class-plugin-deactivate-feedback.php at line 208. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("swm_deactivation_email_" . $this->plugin_name, $email) has deletion method delete_option("swm_deactivation_main_reason_" . $this->plugin_name). Storage method found in file class-plugin-deactivate-feedback.php at line 379. Deletion method found in file class-plugin-deactivate-feedback.php at line 213. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("swm_deactivation_email_" . $this->plugin_name, $email) has deletion method delete_option("swm_import_records"). Storage method found in file class-plugin-deactivate-feedback.php at line 379. Deletion method found in file includes/class-ajax.php at line 29. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("swm_deactivation_email_" . $this->plugin_name, $email) has deletion method delete_option("swm_import_custom_collection_records"). Storage method found in file class-plugin-deactivate-feedback.php at line 379. Deletion method found in file includes/class-ajax.php at line 45. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("swm_deactivation_email_" . $this->plugin_name, $email) has deletion method delete_option("swm_import_records"). Storage method found in file class-plugin-deactivate-feedback.php at line 379. Deletion method found in file swm-shopify-to-wc-migration.php at line 289. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("swm_deactivation_email_" . $this->plugin_name, $email) has deletion method delete_option("swm_import_custom_collection_records"). Storage method found in file class-plugin-deactivate-feedback.php at line 379. Deletion method found in file swm-shopify-to-wc-migration.php at line 290. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post_id, "_featured", "no") does not have corresponding deletion method. Storage method found in file includes/wc/class-wc-product.php at line 137. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post_id, "swm_import_type", "swm_shopify_product") does not have corresponding deletion method. Storage method found in file includes/wc/class-wc-product.php at line 56. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post_id, "_sold_individually", "") does not have corresponding deletion method. Storage method found in file includes/wc/class-wc-product.php at line 146. 

[Art.17, Right to erasure] Deletion access is NONE 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9203. Found in file includes/wc/class-wc-product.php at line 133 

[Art.15, Right to access] Complete data access is required for storage at node ID 4097 , but is impossible due to custom storage of PII without identifiers. Found in file functions.php at line 146 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9391. Found in file includes/wc/class-wc-product.php at line 155 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9285. Found in file includes/wc/class-wc-product.php at line 142 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9745. Found in file includes/wc/class-wc-product.php at line 229 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 8756. Found in file includes/wc/class-wc-product.php at line 51 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9246. Found in file includes/wc/class-wc-product.php at line 138 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9261. Found in file includes/wc/class-wc-product.php at line 139 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9170. Found in file includes/wc/class-wc-product.php at line 129 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9308. Found in file includes/wc/class-wc-product.php at line 144 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9277. Found in file includes/wc/class-wc-product.php at line 141 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9364. Found in file includes/wc/class-wc-product.php at line 151 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9212. Found in file includes/wc/class-wc-product.php at line 134 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9221. Found in file includes/wc/class-wc-product.php at line 135 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9355. Found in file includes/wc/class-wc-product.php at line 149 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9728. Found in file includes/wc/class-wc-product.php at line 225 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9300. Found in file includes/wc/class-wc-product.php at line 143 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9736. Found in file includes/wc/class-wc-product.php at line 227 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9178. Found in file includes/wc/class-wc-product.php at line 130 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9400. Found in file includes/wc/class-wc-product.php at line 156 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 7692. Found in file includes/shopify/class-shopify-product.php at line 76 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9316. Found in file includes/wc/class-wc-product.php at line 145 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9230. Found in file includes/wc/class-wc-product.php at line 136 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 7263. Found in file includes/shopify/class-shopify-product-cat.php at line 75 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9375. Found in file includes/wc/class-wc-product.php at line 152 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9195. Found in file includes/wc/class-wc-product.php at line 132 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9269. Found in file includes/wc/class-wc-product.php at line 140 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9332. Found in file includes/wc/class-wc-product.php at line 147 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9187. Found in file includes/wc/class-wc-product.php at line 131 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3287. Found in file class-plugin-deactivate-feedback.php at line 379 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9238. Found in file includes/wc/class-wc-product.php at line 137 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 8775. Found in file includes/wc/class-wc-product.php at line 56 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 9324. Found in file includes/wc/class-wc-product.php at line 146 

[Art.15, Right to access] Data access is NONE 

[third_party] Third party usage is NONE for data types [] 

[encryption] API call that sends PII to unknown url uses unknown protocol. PII is insecurely encrypted with []. Found in file functions.php at line 49 

[main] Applicable GDPR requirements: ['access', 'deletion', 'encryption', 'third_party'] 

[main] Is deletion in violation? True 

[main] Is access in violation? True 

[main] Is third_party in violation? False 

[main] Is encryption in violation? True 

[main] Complaint? False 


###########
### Q&A ###
###########

1. Why is my plugin in violation against GDPR?

GDPR (https://gdpr-info.eu/) aims to give citizens in the European Union (EU) control over their personal data. If a website collects or store user data, it is required to provide users functionalities to control their data, such as ones to erase or export their data. While a plugin do not directly interact with users, it may provide functionalities that collect or store personal data, which would make websites that deploy the plugin in violation against GDPR if the plugin does not provide corresponding functionalities to allow users control their personal data. Therefore, plugin developers are responsible to provide functions to manage the personal data they handle in accordance with GDPR. We list requirements by specific GDPR articles relevant to your plugin below.


[Art. 13, Information to be provided where personal data are collected from the data subject] If a plugin collects or handles personal data, it needs to provide privacy policy texts that explain what personal data is being collected and for what purpose. The texts are meant to be added to the privacy policy of the websites that deploy the plugin. 


            
[Art.17, Right to erasure] If a plugin stores personal data in a custom database they create or manage, or through Wordpress's native storage functions (e.g., update_user_meta), it needs to provide methods for users to erase the data upon request. Note that deleting data for all users upon uninstallation does not satisfy the requirement. 


            
        

2. How do I make my plugin compliant?

Please refer to the fix report below to see how you can make your plugin comply with GDPR.

        
