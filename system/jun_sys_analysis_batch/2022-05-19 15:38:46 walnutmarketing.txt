Timeout in resolving values
Timeout in running neo4j query
Running Main.py on walnutmarketing

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.791049.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:00.962196.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 42 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.513032.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 2 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.610909.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 662 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:00.942687.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 17 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.619543.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.102166.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 388 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:06.330693.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 5253
Added 4142 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 8674
Added 3421 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.510543.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/walnutmarketing/class-SCCollector.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/walnutmarketing/landing-pages.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/walnutmarketing/linked-forms.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/walnutmarketing/settings.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/walnutmarketing/WalnutMarketing.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/walnutmarketing/partials/tinymce-editor.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.604025.

42 PHP_REACHES edges created
2 REACHES edges created
662 PHP_REACHES edges created
17 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
4530 PHP_REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
3421 PHP_REACHES edges created
8674 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 1704 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:00.966565.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:02.884806.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 69 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:02.375752.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 96 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.144140.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.463205.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.564513.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.018326.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.042421.

165 PHP_REACHES edges created
165 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 83 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.205517.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
1 SQL operations to process.
SELECT * FROM $wpdb WHERE meta_key=AD_CARTTIMEKEY
SELECT * FROM $wpdb WHERE meta_key=AD_CARTTIMEKEY
SQL command (SELECT * FROM $wpdb WHERE meta_key=AD_CARTTIMEKEY) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [2086]
Added 0 SQL nodes. 0 out of 1 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:01.565792.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'<!--mfunc W3TC_DYNAMIC_SECURITY echo \process_shortcodes_script() --<!--/mfunc W3TC_DYNAMIC_SECURITY -->'' cannot be parsed correct.
HTML code '$'<h4>PLUGIN_VENDOR Landing Page</h4>'' cannot be parsed correct.
HTML code '$'_activedemand_return_landing_page()'' cannot be parsed correct.
HTML code '$'activedemand_get_landing_html($lp_id)'' cannot be parsed correct.
HTML code '$'json_encode([$action => $id])'' cannot be parsed correct.
HTML code '$'json_encode($option)'' cannot be parsed correct.
HTML code '$'$linker->form_mapper($id, $action)'' cannot be parsed correct.
HTML code '$'$child'' cannot be parsed correct.
HTML code '$'$child'' cannot be parsed correct.
HTML code '$'$child'' cannot be parsed correct.
HTML code '$'PLUGIN_VENDOR'' cannot be parsed correct.
HTML code '$'PLUGIN_VENDOR_LINK'' cannot be parsed correct.
HTML code '$'PLUGIN_VENDOR'' cannot be parsed correct.
HTML code '$'PLUGIN_VENDOR'' cannot be parsed correct.
HTML code '$'PLUGIN_VENDOR'' cannot be parsed correct.
HTML code '$'PLUGIN_VENDOR_LINK'' cannot be parsed correct.
HTML code '$'PLUGIN_VENDOR'' cannot be parsed correct.
HTML code '$'get_base_url()'' cannot be parsed correct.
HTML code '$'PLUGIN_VENDOR'' cannot be parsed correct.
HTML code '$'PREFIX'' cannot be parsed correct.
HTML code '$'retrieve_activedemand_options()'' cannot be parsed correct.
HTML code '$'$child'' cannot be parsed correct.
HTML code '$'PLUGIN_VENDOR'' cannot be parsed correct.
HTML code '$'PREFIX_options_field[PREFIX_ignore_form_style]'' cannot be parsed correct.
HTML code '$'PLUGIN_VENDOR'' cannot be parsed correct.
HTML code '$'PREFIX_options_field[PREFIX_ignore_block_style]'' cannot be parsed correct.
HTML code '$'get_base_url()'' cannot be parsed correct.
HTML code '$'PREFIX'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'PREFIX'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'PREFIX'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'PLUGIN_VENDOR'' cannot be parsed correct.
HTML code '$'PLUGIN_VENDOR_LINK'' cannot be parsed correct.
HTML code '$'PLUGIN_VENDOR'' cannot be parsed correct.
HTML code '$'PLUGIN_VENDOR'' cannot be parsed correct.
HTML code '$'PLUGIN_VENDOR'' cannot be parsed correct.
HTML code '$'PLUGIN_VENDOR'' cannot be parsed correct.
HTML code '$'get_base_url()'' cannot be parsed correct.
HTML code '$'$child'' cannot be parsed correct.
HTML code '$'<td>[PREFIX_form id=\''' cannot be parsed correct.
HTML code '$'$child'' cannot be parsed correct.
HTML code '$'PLUGIN_VENDOR'' cannot be parsed correct.
HTML code '$'PLUGIN_VENDOR'' cannot be parsed correct.
HTML code '$'$child'' cannot be parsed correct.
HTML code '$'<td>[PREFIX_block id=\''' cannot be parsed correct.
HTML code '$'$child'' cannot be parsed correct.
HTML code '$'PLUGIN_VENDOR'' cannot be parsed correct.
HTML code '$'PLUGIN_VENDOR'' cannot be parsed correct.
HTML code '$'PLUGIN_VENDOR'' cannot be parsed correct.
HTML code '$'PLUGIN_VENDOR'' cannot be parsed correct.
HTML code '$'PREFIX_options_field[PREFIX_appkey]'' cannot be parsed correct.
HTML code '$'retrieve_activedemand_options()_PREFIX_appkey'' cannot be parsed correct.
HTML code '$'PREFIX_server_showpopups'' cannot be parsed correct.
HTML code '$'PREFIX_server_side'' cannot be parsed correct.
HTML code '$'PLUGIN_VENDOR'' cannot be parsed correct.
HTML code '$'PREFIX_show_gutenberg_blocks'' cannot be parsed correct.
HTML code '$'PLUGIN_VENDOR'' cannot be parsed correct.
HTML code '$'PREFIX_show_tinymce'' cannot be parsed correct.
HTML code '$'  <script type="text/javascript">
    jQuery(document).ready(function($){
      $(\'script[src$="ad.collect.min.js.jgz"]\').load(function(){
        AD.ready(function(){
            AD.flink();
          });
      });
    });
    </script>'' cannot be parsed correct.
HTML code '$'No Landing Pages Configured'' cannot be parsed correct.
HTML code '$'Form Deleted'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'\'/>'' cannot be parsed correct.
HTML code '$'<span>'' cannot be parsed correct.
HTML code '$'</span>'' cannot be parsed correct.
HTML code '$'</li>'' cannot be parsed correct.
HTML code '$'<li>'' cannot be parsed correct.
HTML code '$'<input type=\'radio\' name=\'form_id\' value=\''' cannot be parsed correct.
HTML code '$'[activedemand_block id='' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'\'/>'' cannot be parsed correct.
HTML code '$'<span>'' cannot be parsed correct.
HTML code '$'</span>'' cannot be parsed correct.
HTML code '$'</li>'' cannot be parsed correct.
HTML code '$' Account</h2><br/>
  You will require an <a href='' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</a> account to use this plugin. With an
  '' cannot be parsed correct.
HTML code '$' account you will be able
                                                                       to:<br/>
  <ul style="list-style-type:circle;  margin-left: 50px;">
      <li>Build Webforms for your pages, posts, sidebars, etc</li>
      <li>Build Dynamic Content Blocks for your pages, posts, sidebars, etc</li>
      <ul style="list-style-type:square;  margin-left: 50px;">
          <li>Dynamically swap content based on GEO-IP data</li>
          <li>Automatically change banners based on campaign duration</li>
          <li>Stop showing forms to people who have already subscribed</li>
      </ul>
      <li>Deploy Popups and Subscriber bars</li>
      <li>Automatically send emails to those who fill out your web forms</li>
      <li>Automatically send emails to you when a form is filled out</li>
      <li>Send email campaigns to your subscribers</li>
      <li>Build your individual blog posts and have them automatically be posted on a schedule</li>
      <li>Bulk import blog posts and have them post on a defined set of times and days</li>
  </ul>

  <div>
      <h3>To sign up for your '' cannot be parsed correct.
HTML code '$' account, click <a
                  href='' cannot be parsed correct.
HTML code '$'"><strong>here</strong></a>
      </h3>

      <p>
          You will need to enter your application key in order to enable the form shortcodes. Your can find
          your
         '' cannot be parsed correct.
HTML code '$' API key in your account settings:

      </p>

      <p>
          <img src='' cannot be parsed correct.
HTML code '$'/images/Screenshot2.png"/>
      </p>
  </div>
 '' cannot be parsed correct.
HTML code '$'<br/> after it has sat for:</th>
                    <td style="padding-left:8px;">
                    <input type="number" min="1"
                    name="'' cannot be parsed correct.
HTML code '$'_woocommerce_options_field[woocommerce_stalecart_hours]"
                    value="'' cannot be parsed correct.
HTML code '$'<li>'' cannot be parsed correct.
HTML code '$'<input type=\'radio\' name=\'form_id\' value=\''' cannot be parsed correct.
HTML code '$'[activedemand_form id='' cannot be parsed correct.
HTML code '$' Forms</th>
                        <td>
                            <input type="checkbox" name='' cannot be parsed correct.
HTML code '$' Dynamic Blocks</th>
                        <td>
                            <input type="checkbox" name='' cannot be parsed correct.
HTML code '$'/images/ActiveDEMAND-Transparent.png"/>
      '' cannot be parsed correct.
HTML code '$'_options" class="nav-tab '' cannot be parsed correct.
HTML code '$'">Options</a>
           '' cannot be parsed correct.
HTML code '$'_options&view=content" class="nav-tab '' cannot be parsed correct.
HTML code '$'">Content</a>
           '' cannot be parsed correct.
HTML code '$'_options&view=woo" class="nav-tab '' cannot be parsed correct.
HTML code '$'">WooCommerce</a>
           '' cannot be parsed correct.
HTML code '$' Web Forms and Dynamic Content Blocks</h2>

              <p> The <a href='' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</a> plugin adds a
                  tracking script to your
                  WordPress
                  pages. This plugin offers the ability to use web form and content block shortcodes on your pages,
                  posts, and
                  sidebars
                  that
                  will render an '' cannot be parsed correct.
HTML code '$' Web Form/Dynamic Content block. This allows you to maintain your dynamic
                  content, form styling, and
                  configuration
                  within
                  '' cannot be parsed correct.
HTML code '$'.
              </p>

              <p>
                  In your visual editor, look for the \'Insert '' cannot be parsed correct.
HTML code '$' Shortcode\' button:<br/>
                  <img
                          src='' cannot be parsed correct.
HTML code '$'/images/Screenshot3.png"/>.
              </p>


              <table>
                  <tr>
                      <td style="padding:15px;vertical-align: top;">
                          '' cannot be parsed correct.
HTML code '$'<tr><td>'' cannot be parsed correct.
HTML code '$'</td>'' cannot be parsed correct.
HTML code '$'\']</td>'' cannot be parsed correct.
HTML code '$' web form shortcodes, you will first have to add some Web
                                  Forms
                                  to
                                  your
                                  account in '' cannot be parsed correct.
HTML code '$'. Once you do have Web Forms configured, the available
                                  shortcodes
                                  will
                                  be
                                  displayed here.</p>

                          '' cannot be parsed correct.
HTML code '$'<tr><td>'' cannot be parsed correct.
HTML code '$'</td>'' cannot be parsed correct.
HTML code '$'\']</td>'' cannot be parsed correct.
HTML code '$' Dynamic Content Block shortcodes, you will first have to add
                                  some Dynamic Content Blocks
                                  to
                                  your
                                  account in '' cannot be parsed correct.
HTML code '$'. Once you do have Dynamic Blocks configured, the available
                                  shortcodes
                                  will
                                  be
                                  displayed here.</p>

                                '' cannot be parsed correct.
HTML code '$' Plugin Options</h3>
            <table class="form-table">
                <tr valign="top">
                    <th scope="row">'' cannot be parsed correct.
HTML code '$' API Key</th>
                    <td><input style="width:400px" type=\'text\' name='' cannot be parsed correct.
HTML code '$' Gutenberg Blocks ?</th>
                        <td>
              <input type="checkbox" name='' cannot be parsed correct.
HTML code '$'/>
                        </td>
          '' cannot be parsed correct.
HTML code '$' Button on Post/Page editors?</th>
                        <td>
              <input type="checkbox" name='' cannot be parsed correct.
HTML code '$'/>
                        </td>
          '' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:10.351705.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.048911.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 1 do_action/apply_filters calls and 36 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:01.171514.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FileProDetector
### Start running FrontBaseDetector
### Finish running DbaseDetector
### Start running HashDetector
### Finish running DbplusDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running FirebirdInterBaseDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running IBMDb2Detector
### Start running MsqlDetector
### Finish running MongoDetector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running MongoDbDetector
### Start running OpenSSLDetector
### Finish running Oci8Detector
### Start running ParadoxDetector
### Finish running ArrayElementDetector
### Start running PasswordHashingDetector
### Finish running ParadoxDetector
### Start running PhpCurlDetector
### Finish running HashDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PhpCurlDetector
### Start running PHPRetrievalDetector
### Finish running PasswordHashingDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running OpenSSLDetector
### Start running PhpVarDetector
### Finish running PhpVarDetector
### Start running PostgreSQLDetector
### Finish running PHPStorageDetector
### Start running PropertyDetector
### Finish running PHPRetrievalDetector
### Start running Sqlite3Detector
### Finish running PHPIncludedDetector
### Start running SqliteDetector
### Finish running PostgreSQLDetector
### Start running SqlServerDetector
### Finish running Sqlite3Detector
### Start running SybaseDetector
### Finish running SqliteDetector
### Start running TokyoTyrantDetector
### Finish running SybaseDetector
### Start running UserInputDetector
### Finish running TokyoTyrantDetector
### Start running VariableDetector
### Finish running SqlServerDetector
### Start running WordpressHashingFnDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRemoteDetector
### Finish running MySQLiDetector
### Start running WordPressRetrievalDetector
### Finish running maxdbDetector
### Start running WordPressStorageDetector
### Finish running PropertyDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running UserInputDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running VariableDetector
### Start running UninstallDetector
### Finish running GenericDatabaseUsageDetector
### Finish running UninstallDetector
### Finish running WordPressStorageDetector
### Finish running DeletionDetector
### Finish running WordPressRemoteDetector
### Finish running WordPressRetrievalDetector
### Finished running detectors
WalnutMarketing.php:336
  - MD5 called with parameters [uniqid, true, rand]. Ignore if [uniqid, true, rand] does not contain personal information. 

WalnutMarketing.php:647
  - object property '$order->billing_first_name' of personal types {'first_name'} is found.
  - Data types: first_name
WalnutMarketing.php:648
  - object property '$order->billing_last_name' of personal types {'last_name'} is found.
  - Data types: last_name
WalnutMarketing.php:649
  - object property '$order->billing_email' of personal types {'email'} is found.
  - Data types: email
WalnutMarketing.php:655
  - object property '$current_user->user_firstname' of personal types {'first_name', 'user', 'user_meta'} is found.
  - Data types: first_name, user, user_meta
WalnutMarketing.php:655
  - object property '$current_user->user_firstname' of personal types {'first_name', 'user', 'user_meta'} is found.
  - Data types: first_name, user, user_meta
WalnutMarketing.php:656
  - object property '$current_user->user_lastname' of personal types {'last_name', 'user', 'user_meta'} is found.
  - Data types: last_name, user, user_meta
WalnutMarketing.php:656
  - object property '$current_user->user_lastname' of personal types {'last_name', 'user', 'user_meta'} is found.
  - Data types: last_name, user, user_meta
WalnutMarketing.php:657
  - object property '$current_user->user_email' of personal types {'email'} is found.
  - Data types: email
linked-forms.php:123
  - object property '$user->username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
linked-forms.php:126
  - object property '$user->first_name' of personal types {'first_name', 'user', 'user_meta'} is found.
  - Data types: first_name, user, user_meta
linked-forms.php:129
  - object property '$user->last_name' of personal types {'last_name', 'user', 'user_meta'} is found.
  - Data types: last_name, user, user_meta
linked-forms.php:132
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email 

WalnutMarketing.php:647
  - variable '$first_name' of personal types {'first_name'} is found.
  - Data types: first_name
WalnutMarketing.php:648
  - variable '$last_name' of personal types {'last_name'} is found.
  - Data types: last_name
WalnutMarketing.php:649
  - variable '$email_address' of personal types {'address', 'email'} is found.
  - Data types: address, email
WalnutMarketing.php:649
  - variable '$email_address' of personal types {'address', 'email'} is found.
  - Data types: address, email
WalnutMarketing.php:655
  - variable '$first_name' of personal types {'first_name'} is found.
  - Data types: first_name
WalnutMarketing.php:656
  - variable '$last_name' of personal types {'last_name'} is found.
  - Data types: last_name
WalnutMarketing.php:657
  - variable '$email_address' of personal types {'address', 'email'} is found.
  - Data types: address, email
WalnutMarketing.php:657
  - variable '$email_address' of personal types {'address', 'email'} is found.
  - Data types: address, email
WalnutMarketing.php:662
  - variable '$email_address' of personal types {'address', 'email'} is found.
  - Data types: address, email
WalnutMarketing.php:662
  - variable '$email_address' of personal types {'address', 'email'} is found.
  - Data types: address, email
WalnutMarketing.php:680
  - variable '$first_name' of personal types {'first_name'} is found.
  - Data types: first_name
WalnutMarketing.php:683
  - variable '$last_name' of personal types {'last_name'} is found.
  - Data types: last_name
WalnutMarketing.php:686
  - variable '$email_address' of personal types {'address', 'email'} is found.
  - Data types: address, email
WalnutMarketing.php:686
  - variable '$email_address' of personal types {'address', 'email'} is found.
  - Data types: address, email 

WalnutMarketing.php:186
  - API call to wp_remote_get($url . "?" . $fields_string, ["timeout" => $timeout, "sslverify" => false]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
WalnutMarketing.php:204
  - API call to wp_remote_post($url, ["method" => "POST", "timeout" => $timeout, "body" => $fields_string, "sslverify" => false]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
WalnutMarketing.php:599
  - API call to wp_remote_post($url, ["body" => $data]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
linked-forms.php:193
  - API call to wp_remote_post($url, ["body" => $data]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
linked-forms.php:220
  - API call to wp_remote_post($url, ["body" => $data]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
partials/tinymce-editor.php:6
  - API call to wp_remote_get($url, ["timeout" => $timeout, "sslverify" => false]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote 

WalnutMarketing.php:32
  - RETRIEVAL call to get_option($key) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
WalnutMarketing.php:51
  - RETRIEVAL call to get_option(PREFIX . "_show_gutenberg_blocks", TRUE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
WalnutMarketing.php:303
  - RETRIEVAL call to get_option(PREFIX . "_server_side", TRUE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
WalnutMarketing.php:374
  - RETRIEVAL call to get_option(PREFIX . "_options_field") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
WalnutMarketing.php:374
  - RETRIEVAL call to get_option(PREFIX . "_options_field") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
WalnutMarketing.php:375
  - RETRIEVAL call to get_option(PREFIX . "_woocommerce_options_field") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
WalnutMarketing.php:375
  - RETRIEVAL call to get_option(PREFIX . "_woocommerce_options_field") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
WalnutMarketing.php:399
  - RETRIEVAL call to get_option(PREFIX . "_v2_script_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
WalnutMarketing.php:553
  - RETRIEVAL call to get_user_meta($cart->user_id, "_woocommerce_persistent_cart", TRUE) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
WalnutMarketing.php:654
  - RETRIEVAL call to get_userdata($user_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
WalnutMarketing.php:727
  - RETRIEVAL call to get_option("active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
WalnutMarketing.php:763
  - RETRIEVAL call to get_option(PREFIX . "_show_tinymce", TRUE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
class-SCCollector.php:33
  - RETRIEVAL call to get_option(PREFIX . "_server_showpopups") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
class-SCCollector.php:35
  - RETRIEVAL call to get_option(PREFIX . "_server_side", TRUE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
landing-pages.php:66
  - RETRIEVAL call to get_post_meta($post_id, LANDING_META, TRUE) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
landing-pages.php:140
  - RETRIEVAL call to get_post_meta($post->ID, LANDING_META, TRUE) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
linked-forms.php:71
  - RETRIEVAL call to get_option(PREFIX . "_wc_actions_forms") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
linked-forms.php:175
  - RETRIEVAL call to get_user_meta($customer_id, $arg) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $key (string). Returns (mixed).
  - Data types: user_meta
linked-forms.php:184
  - RETRIEVAL call to get_option(PREFIX . "_form_"$hook) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
linked-forms.php:190
  - RETRIEVAL call to get_userdata($customer_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
linked-forms.php:208
  - RETRIEVAL call to get_option(PREFIX . "_form_"$hook) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
linked-forms.php:217
  - RETRIEVAL call to get_userdata($user_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
linked-forms.php:322
  - RETRIEVAL call to get_option(PREFIX . "_form_"$action) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
linked-forms.php:322
  - RETRIEVAL call to get_option(PREFIX . "_form_"$action) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
linked-forms.php:414
  - RETRIEVAL call to get_option(PREFIX . "_form_"$action) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
partials/tinymce-editor.php:20
  - RETRIEVAL call to get_option("activedemand_options_field") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
settings.php:265
  - RETRIEVAL call to get_option(PREFIX . "_server_showpopups", FALSE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
settings.php:266
  - RETRIEVAL call to get_option(PREFIX . "_show_tinymce", TRUE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
settings.php:267
  - RETRIEVAL call to get_option(PREFIX . "_show_gutenberg_blocks", TRUE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
settings.php:274
  - RETRIEVAL call to get_option(PREFIX . "_server_side", TRUE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option 

WalnutMarketing.php:36
  - STORAGE call to update_option($key, ACTIVEDEMAND_VER) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
WalnutMarketing.php:404
  - STORAGE call to update_option(PREFIX . "_v2_script_url", $script_url) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
WalnutMarketing.php:513
  - STORAGE call to update_user_meta($user_id, AD_CARTTIMEKEY, time()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
WalnutMarketing.php:524
  - STORAGE call to delete_user_meta($user_id, AD_CARTTIMEKEY) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
WalnutMarketing.php:608
  - STORAGE call to delete_user_meta($user->ID, AD_CARTTIMEKEY) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
landing-pages.php:174
  - STORAGE call to update_post_meta($post_id, LANDING_META, $page_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
landing-pages.php:176
  - STORAGE call to delete_post_meta($post_id, LANDING_META) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
linked-forms.php:376
  - STORAGE call to delete_option(PREFIX . "_form_"$action) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
linked-forms.php:378
  - STORAGE call to update_option(PREFIX . "_form_"$action, ["id" => $id]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
linked-forms.php:401
  - STORAGE call to update_option(PREFIX . "_form_"$action, $option) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option 

WalnutMarketing.php:593
  - WP_User object is created.
  - Data types: user, user_meta 

WalnutMarketing.php:524
  - DELETION call to delete_user_meta($user_id, AD_CARTTIMEKEY) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
WalnutMarketing.php:608
  - DELETION call to delete_user_meta($user->ID, AD_CARTTIMEKEY) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
landing-pages.php:176
  - DELETION call to delete_post_meta($post_id, LANDING_META) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
linked-forms.php:376
  - DELETION call to delete_option(PREFIX . "_form_"$action) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

By data type:
address
	VariableDetector.(unknown) - {'address', 'email'}
	VariableDetector.(unknown) - {'address', 'email'}
	VariableDetector.(unknown) - {'address', 'email'}
	VariableDetector.(unknown) - {'address', 'email'}
	VariableDetector.(unknown) - {'address', 'email'}
	VariableDetector.(unknown) - {'address', 'email'}
	VariableDetector.(unknown) - {'address', 'email'}
	VariableDetector.(unknown) - {'address', 'email'}
email
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'address', 'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'address', 'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'address', 'email'}
	VariableDetector.(unknown) - {'address', 'email'}
	VariableDetector.(unknown) - {'address', 'email'}
	VariableDetector.(unknown) - {'address', 'email'}
	VariableDetector.(unknown) - {'address', 'email'}
	VariableDetector.(unknown) - {'address', 'email'}
first_name
	VariableDetector.(unknown) - {'first_name'}
	VariableDetector.(unknown) - {'first_name'}
	PropertyDetector.(unknown) - {'first_name'}
	PropertyDetector.(unknown) - {'first_name', 'user', 'user_meta'}
	PropertyDetector.(unknown) - {'first_name', 'user', 'user_meta'}
	VariableDetector.(unknown) - {'first_name'}
	PropertyDetector.(unknown) - {'first_name', 'user', 'user_meta'}
last_name
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	VariableDetector.(unknown) - {'last_name'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	VariableDetector.(unknown) - {'last_name'}
	VariableDetector.(unknown) - {'last_name'}
	PropertyDetector.(unknown) - {'last_name'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
none
	PHPIncludedDetector.(unknown) - set()
option
	WordPressRetrievalDetector.get_option(PREFIX . "_form_"$action) - {'option'}
	WordPressRetrievalDetector.get_option(PREFIX . "_form_"$hook) - {'option'}
	WordPressRetrievalDetector.get_option(PREFIX . "_form_"$hook) - {'option'}
	WordPressStorageDetector.update_option(PREFIX . "_form_"$action, $option) - {'option'}
	WordPressRetrievalDetector.get_option(PREFIX . "_server_side", TRUE) - {'option'}
	DeletionDetector.delete_option(PREFIX . "_form_"$action) - {'option'}
	WordPressStorageDetector.delete_option(PREFIX . "_form_"$action) - {'option'}
	WordPressRetrievalDetector.get_option(PREFIX . "_form_"$action) - {'option'}
	WordPressRetrievalDetector.get_option(PREFIX . "_show_tinymce", TRUE) - {'option'}
	WordPressRetrievalDetector.get_option(PREFIX . "_show_gutenberg_blocks", TRUE) - {'option'}
	WordPressRetrievalDetector.get_option(PREFIX . "_show_gutenberg_blocks", TRUE) - {'option'}
	WordPressStorageDetector.update_option(PREFIX . "_form_"$action, ["id" => $id]) - {'option'}
	WordPressRetrievalDetector.get_option(PREFIX . "_form_"$action) - {'option'}
	WordPressRetrievalDetector.get_option(PREFIX . "_v2_script_url") - {'option'}
	WordPressRetrievalDetector.get_option(PREFIX . "_options_field") - {'option'}
	WordPressRetrievalDetector.get_option(PREFIX . "_show_tinymce", TRUE) - {'option'}
	WordPressRetrievalDetector.get_option(PREFIX . "_server_side", TRUE) - {'option'}
	WordPressRetrievalDetector.get_option(PREFIX . "_server_showpopups", FALSE) - {'option'}
	WordPressStorageDetector.update_option($key, ACTIVEDEMAND_VER) - {'option'}
	WordPressRetrievalDetector.get_option(PREFIX . "_wc_actions_forms") - {'option'}
	WordPressRetrievalDetector.get_option($key) - {'option'}
	WordPressRetrievalDetector.get_option(PREFIX . "_server_showpopups") - {'option'}
	WordPressStorageDetector.update_option(PREFIX . "_v2_script_url", $script_url) - {'option'}
	WordPressRetrievalDetector.get_option(PREFIX . "_options_field") - {'option'}
	WordPressRetrievalDetector.get_option(PREFIX . "_woocommerce_options_field") - {'option'}
	WordPressRetrievalDetector.get_option(PREFIX . "_server_side", TRUE) - {'option'}
	WordPressRetrievalDetector.get_option("active_plugins") - {'option'}
	WordPressRetrievalDetector.get_option("activedemand_options_field") - {'option'}
	WordPressRetrievalDetector.get_option(PREFIX . "_woocommerce_options_field") - {'option'}
post_meta
	WordPressStorageDetector.update_post_meta($post_id, LANDING_META, $page_id) - {'post_meta'}
	DeletionDetector.delete_post_meta($post_id, LANDING_META) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, LANDING_META, TRUE) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post_id, LANDING_META) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, LANDING_META, TRUE) - {'post_meta'}
remote
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
user
	WordPressRetrievalDetector.get_userdata($user_id) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($user_id) - {'user', 'user_meta'}
	WP_UserDetector.WP_User($cart["user_id"]) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'first_name', 'user', 'user_meta'}
	PropertyDetector.(unknown) - {'first_name', 'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($customer_id) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'first_name', 'user', 'user_meta'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
user_meta
	WordPressRetrievalDetector.get_userdata($user_id) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, AD_CARTTIMEKEY, time()) - {'user_meta'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($user_id) - {'user', 'user_meta'}
	WP_UserDetector.WP_User($cart["user_id"]) - {'user', 'user_meta'}
	WordPressStorageDetector.delete_user_meta($user_id, AD_CARTTIMEKEY) - {'user_meta'}
	PropertyDetector.(unknown) - {'first_name', 'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($customer_id, $arg) - {'user_meta'}
	PropertyDetector.(unknown) - {'first_name', 'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($customer_id) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'first_name', 'user', 'user_meta'}
	DeletionDetector.delete_user_meta($user->ID, AD_CARTTIMEKEY) - {'user_meta'}
	DeletionDetector.delete_user_meta($user_id, AD_CARTTIMEKEY) - {'user_meta'}
	WordPressStorageDetector.delete_user_meta($user->ID, AD_CARTTIMEKEY) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($cart->user_id, "_woocommerce_persistent_cart", TRUE) - {'user_meta'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:13.071402.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 134 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.323330.

134 STORE_REACHES edges created
134 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 98 nodes as PERSONAL
In total, tainted 98 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 1 nodes as ENCRYPTED
In total, tainted 1 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:03.230434.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:01:01.353702!
DELETION call to delete_user_meta($user_id, AD_CARTTIMEKEY) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_user_meta($user->ID, AD_CARTTIMEKEY) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($post_id, LANDING_META) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_option(PREFIX . "_form_"$action) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
MD5 called with parameters [uniqid, true, rand]. Ignore if [uniqid, true, rand] does not contain personal information.,md5,None
object property '$order->billing_first_name' of personal types {'first_name'} is found.,,None
object property '$order->billing_last_name' of personal types {'last_name'} is found.,,None
object property '$order->billing_email' of personal types {'email'} is found.,,None
object property '$current_user->user_firstname' of personal types {'first_name', 'user', 'user_meta'} is found.,,None
object property '$current_user->user_firstname' of personal types {'first_name', 'user', 'user_meta'} is found.,,None
object property '$current_user->user_lastname' of personal types {'last_name', 'user', 'user_meta'} is found.,,None
object property '$current_user->user_lastname' of personal types {'last_name', 'user', 'user_meta'} is found.,,None
object property '$current_user->user_email' of personal types {'email'} is found.,,None
object property '$user->username' of personal types {'user', 'user_meta'} is found.,,None
object property '$user->first_name' of personal types {'first_name', 'user', 'user_meta'} is found.,,None
object property '$user->last_name' of personal types {'last_name', 'user', 'user_meta'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
variable '$first_name' of personal types {'first_name'} is found.,,None
variable '$last_name' of personal types {'last_name'} is found.,,None
variable '$email_address' of personal types {'address', 'email'} is found.,,None
variable '$email_address' of personal types {'address', 'email'} is found.,,None
variable '$first_name' of personal types {'first_name'} is found.,,None
variable '$last_name' of personal types {'last_name'} is found.,,None
variable '$email_address' of personal types {'address', 'email'} is found.,,None
variable '$email_address' of personal types {'address', 'email'} is found.,,None
variable '$email_address' of personal types {'address', 'email'} is found.,,None
variable '$email_address' of personal types {'address', 'email'} is found.,,None
variable '$first_name' of personal types {'first_name'} is found.,,None
variable '$last_name' of personal types {'last_name'} is found.,,None
variable '$email_address' of personal types {'address', 'email'} is found.,,None
variable '$email_address' of personal types {'address', 'email'} is found.,,None
WP_User object is created.,,None
API call to wp_remote_get($url . "?" . $fields_string, ["timeout" => $timeout, "sslverify" => false]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_post($url, ["method" => "POST", "timeout" => $timeout, "body" => $fields_string, "sslverify" => false]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,['https://api.activedemand.com/v1/forms/', 'https://api.activedemand.com/v1/smart_blocks/show_all']
API call to wp_remote_post($url, ["body" => $data]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,['https://submit.activedemand.com/submit/form/']
API call to wp_remote_post($url, ["body" => $data]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,['https://submit.activedemand.com/submit/form/']
API call to wp_remote_post($url, ["body" => $data]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,['https://submit.activedemand.com/submit/form/']
API call to wp_remote_get($url, ["timeout" => $timeout, "sslverify" => false]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,['https://api.activedemand.com/v1/smart_blocks.xml?api-key=', 'https://api.activedemand.com/v1/forms.xml?api-key=']
RETRIEVAL call to get_option(PREFIX . "_server_side", TRUE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option($key) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(PREFIX . "_options_field") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(PREFIX . "_options_field") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(PREFIX . "_woocommerce_options_field") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(PREFIX . "_woocommerce_options_field") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(PREFIX . "_v2_script_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(PREFIX . "_show_gutenberg_blocks", TRUE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($cart->user_id, "_woocommerce_persistent_cart", TRUE) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdata($user_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_option("active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(PREFIX . "_show_tinymce", TRUE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option(PREFIX . "_server_showpopups") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(PREFIX . "_server_side", TRUE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, LANDING_META, TRUE) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, LANDING_META, TRUE) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($customer_id, $arg) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(PREFIX . "_form_"$hook) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdata($customer_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_option(PREFIX . "_form_"$hook) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdata($user_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_option(PREFIX . "_form_"$action) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(PREFIX . "_form_"$action) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(PREFIX . "_form_"$action) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(PREFIX . "_wc_actions_forms") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("activedemand_options_field") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(PREFIX . "_server_showpopups", FALSE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option(PREFIX . "_show_tinymce", TRUE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option(PREFIX . "_show_gutenberg_blocks", TRUE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option(PREFIX . "_server_side", TRUE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
STORAGE call to update_option($key, ACTIVEDEMAND_VER) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(PREFIX . "_v2_script_url", $script_url) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_user_meta($user_id, AD_CARTTIMEKEY, time()) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_user_meta($user_id, AD_CARTTIMEKEY) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_user_meta($user->ID, AD_CARTTIMEKEY) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, LANDING_META, $page_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($post_id, LANDING_META) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_option(PREFIX . "_form_"$action) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option(PREFIX . "_form_"$action, ["id" => $id]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(PREFIX . "_form_"$action, $option) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] PII of types (['user', 'user_meta']) stored through WordPress function "update_user_meta($user_id, AD_CARTTIMEKEY, time())", found in file WalnutMarketing.php at line 513. 

[has_storage] Storage check is WP 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, AD_CARTTIMEKEY, time()) has deletion method delete_user_meta($user_id, AD_CARTTIMEKEY). Storage method found in file WalnutMarketing.php at line 513. Deletion method found in file WalnutMarketing.php at line 524. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, AD_CARTTIMEKEY, time()) has deletion method delete_user_meta($user->ID, AD_CARTTIMEKEY). Storage method found in file WalnutMarketing.php at line 513. Deletion method found in file WalnutMarketing.php at line 608. 

[Art.17, Right to erasure] Deletion access is NONE_BUT_NOT_REQUIRED 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1988. Found in file WalnutMarketing.php at line 513 

[Art.15, Right to access] Data access is NONE_BUT_NOT_REQUIRED 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['access', 'deletion', 'encryption', 'third_party'] 

[main] Is deletion in violation? False 

[main] Is access in violation? False 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? True 


###########
### Q&A ###
###########

1. Why is my plugin in violation against GDPR?

GDPR (https://gdpr-info.eu/) aims to give citizens in the European Union (EU) control over their personal data. If a website collects or store user data, it is required to provide users functionalities to control their data, such as ones to erase or export their data. While a plugin do not directly interact with users, it may provide functionalities that collect or store personal data, which would make websites that deploy the plugin in violation against GDPR if the plugin does not provide corresponding functionalities to allow users control their personal data. Therefore, plugin developers are responsible to provide functions to manage the personal data they handle in accordance with GDPR. We list requirements by specific GDPR articles relevant to your plugin below.


[Art. 13, Information to be provided where personal data are collected from the data subject] If a plugin collects or handles personal data, it needs to provide privacy policy texts that explain what personal data is being collected and for what purpose. The texts are meant to be added to the privacy policy of the websites that deploy the plugin. 


            
[Art.17, Right to erasure] If a plugin stores personal data in a custom database they create or manage, or through Wordpress's native storage functions (e.g., update_user_meta), it needs to provide methods for users to erase the data upon request. Note that deleting data for all users upon uninstallation does not satisfy the requirement. 


            
        

2. How do I make my plugin compliant?

Please refer to the fix report below to see how you can make your plugin comply with GDPR.

        

##################
### Fix Report ###
##################

############################
# Data Deletion Fix Report #
############################

This report suggests fixes to comply with the GDPR Art. 17, Right to erasure (https://gdpr-info.eu/art-17-gdpr/). The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/adding-the-personal-data-eraser-to-your-plugin/ for more details.

1) Implement a function that deletes all the user data collected in the plugin. Sample code:


/**
* Removes all collected data of a user.
*
* @param string $email_address   email address to manipulate
* @param int    $page            pagination
*
* @return array
*/
function walnutmarketing_remove_data( $email_address, $page = 1 ) {
    
    $page = (int) $page;


    //TODO: Delete the user data that was stored using Wordpress functions

    //Below is the sample code for deleting user meta and may need to be modified to suit the plugin.
    $user_id = get_user_by('email', $email_address)
    $key = 'email' //Sample user meta key
    if ( $customer->user_id > 0 ) {
        //Delete user meta data by $key
        delete_user_meta( $user_id, $key );
    }
        



    // Tell core if we have more data to delete still
    $done = true;
    return array(
        'items_removed'  => $items_removed, // true if collected data of a user is being deleted
        'items_retained' => $items_retained, // true if certain data needs to be retained
        'messages'       => sprintf( __( 'Data of user with email %s successfully deleted.', 'walnutmarketing' ), $email_address ), // Put messages for data removal
        'done'           => $done, // true if all the removal processes are done (all data of the user is removed)
    );
}
        

2) Hook the deletion function to the Wordpress's Personal Data Removal tool


/**
* Registers all data erasers.
*
* @param array $exporters
*
* @return mixed
*/
function walnutmarketing_register_privacy_erasers( $erasers ) {
    $erasers['my-plugin-slug'] = array(
        'eraser_friendly_name' => __( '<eraser name>', 'walnutmarketing' ),
        'callback'             => 'walnutmarketing_remove_data',
    );
    return $erasers;
}
        

add_filter( 'wp_privacy_personal_data_erasers', 'walnutmarketing_register_privacy_erasers' );
        

        

#############################
# Privacy Policy Fix Report #
#############################

This report suggests fixes to comply with the GDPR Art. 13 (https://gdpr-info.eu/art-13-gdpr/) through including a privacy notice. The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/suggesting-text-for-the-site-privacy-policy/ for more details.

1) Implement a function that includes the privacy policy for the plugin and provide it to wordpress through wp_add_privacy_policy_content(). Sample code:


/**
* Adds a privacy policy statement.
*/
function walnutmarketing_add_privacy_policy_content() {
    if ( ! function_exists( 'wp_add_privacy_policy_content' ) ) {
        return;
    }
    //TODO: modify the content below to include the privacy policy for the plugin.
    $content = '<p class="privacy-policy-tutorial">' . __( 'Some introductory content for the suggested text.', 'walnutmarketing' ) . '</p>'
            . '<strong class="privacy-policy-tutorial">' . __( 'Suggested Text:', 'walnutmarketing' ) . '</strong> '
            . sprintf(
                __( 'When you leave a comment on this site, we send your name, email address, IP address and comment text to example.com. Example.com does not retain your personal data. The example.com privacy policy is <a href="%1$s" target="_blank">here</a>.', 'walnutmarketing' ),
                'https://example.com/privacy-policy'
            );
    wp_add_privacy_policy_content( 'walnutmarketing', wp_kses_post( wpautop( $content, false ) ) );
}
        

2) Hook the privacy policy function to the Wordpress's admin initialization action.


add_action( 'admin_init', 'walnutmarketing_add_privacy_policy_content' );
        

        


Disclaimer: The sample code provided above is only for reference and does not guarantee GDPR compliance. The recommended list of data to delete/export may not be comprehensive. 
        
Done.
