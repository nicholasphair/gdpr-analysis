Timeout in resolving values
Timeout in running neo4j query
Running Main.py on laf-featured-posts

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.608545.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:00.867688.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 83 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.591559.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 0 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.504762.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 286 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:00.642988.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 11 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:01.454721.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
Added 3 PHP_REACHES edges.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.082792.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 154 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:02.312989.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 2661
Added 2124 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 3049
Added 388 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.087705.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/laf-featured-posts/laf-featured-posts.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/laf-featured-posts/uninstall.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/laf-featured-posts/admin/admin.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/laf-featured-posts/admin/includes/class-laffp-options-page.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/laf-featured-posts/admin/includes/meta-boxes/class-laffp-feature-meta-box.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/laf-featured-posts/admin/includes/meta-boxes/class-laffp-posts-order-meta-box.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/laf-featured-posts/admin/includes/meta-boxes/class-laffp-submit-meta-box.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/laf-featured-posts/admin/includes/meta-boxes/class-laffp-target-post-type-meta-box.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/laf-featured-posts/includes/class-laffp-capability.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/laf-featured-posts/includes/class-laffp-option.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/laf-featured-posts/includes/functions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/laf-featured-posts/includes/widgets/class-laffp-widget-posts.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:01.221231.

375 PHP_REACHES edges created
1 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
2285 PHP_REACHES edges created
388 PHP_REACHES edges created
3049 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 951 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:00.987092.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 5 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:01.565790.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 19 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:01.033640.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 17 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.198790.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.162796.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.190775.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.014921.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.039504.

5 CALLS edges created
36 PHP_REACHES edges created
41 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 35 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.123779.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
No SQL nodes to process.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:00.173922.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'get_delete_post_link($post->ID)'' cannot be parsed correct.
HTML code '$'Delete Permanently'' cannot be parsed correct.
HTML code '$'$args_before_widget'' cannot be parsed correct.
HTML code '$'$args_before_title$title$args_after_title'' cannot be parsed correct.
HTML code '$'get_the_date()'' cannot be parsed correct.
HTML code '$'$args_after_widget'' cannot be parsed correct.
HTML code '$'$this->get_field_id("title")'' cannot be parsed correct.
HTML code '$'$this->get_field_id("title")'' cannot be parsed correct.
HTML code '$'$this->get_field_name("title")'' cannot be parsed correct.
HTML code '$'$title'' cannot be parsed correct.
HTML code '$'$this->get_field_id("number")'' cannot be parsed correct.
HTML code '$'$this->get_field_id("number")'' cannot be parsed correct.
HTML code '$'$this->get_field_name("number")'' cannot be parsed correct.
HTML code '$'$number'' cannot be parsed correct.
HTML code '$'$this->get_field_id("show_date")'' cannot be parsed correct.
HTML code '$'$this->get_field_name("show_date")'' cannot be parsed correct.
HTML code '$'$this->get_field_id("show_date")'' cannot be parsed correct.
HTML code '$'$this->get_field_id("slug")'' cannot be parsed correct.
HTML code '$'$this->get_field_id("slug")'' cannot be parsed correct.
HTML code '$'$this->get_field_name("slug")'' cannot be parsed correct.
HTML code '$'" size="3" />
'' cannot be parsed correct.
HTML code '$'" />
				'' cannot be parsed correct.
HTML code '$'" />
				'' cannot be parsed correct.
HTML code '$'" />
				<input name="save" type="submit" class="button button-primary button-large" id="publish" value="'' cannot be parsed correct.
HTML code '$'" />
		'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:03.992056.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.055935.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 8 do_action/apply_filters calls and 14 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.661973.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbaseDetector
### Start running FrontBaseDetector
### Finish running FileProDetector
### Start running HashDetector
### Finish running FirebirdInterBaseDetector
### Start running IBMDb2Detector
### Finish running DbplusDetector
### Start running InformixDetector
### Finish running CubridDetector
### Start running IngresDetector
### Finish running InformixDetector
### Start running maxdbDetector
### Finish running IngresDetector
### Start running MongoDbDetector
### Finish running FrontBaseDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running MySQLDetector
### Start running MySQLiDetector
### Finish running MsqlDetector
### Start running Oci8Detector
### Finish running MongoDbDetector
### Start running OpenSSLDetector
### Finish running Oci8Detector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running ArrayElementDetector
### Start running PhpCurlDetector
### Finish running HashDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PasswordHashingDetector
### Start running PHPRetrievalDetector
### Finish running PhpCurlDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPIncludedDetector
### Start running PhpVarDetector
### Finish running OpenSSLDetector
### Start running PostgreSQLDetector
### Finish running PhpVarDetector
### Start running PropertyDetector
### Finish running PostgreSQLDetector
### Start running Sqlite3Detector
### Finish running PHPRetrievalDetector
### Start running SqliteDetector
### Finish running PHPStorageDetector
### Start running SqlServerDetector
### Finish running SqliteDetector
### Start running SybaseDetector
### Finish running Sqlite3Detector
### Start running TokyoTyrantDetector
### Finish running SybaseDetector
### Start running UserInputDetector
### Finish running PropertyDetector
### Start running VariableDetector
### Finish running TokyoTyrantDetector
### Start running WordpressHashingFnDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRemoteDetector
### Finish running maxdbDetector
### Start running WordPressRetrievalDetector
### Finish running MySQLiDetector
### Start running WordPressStorageDetector
### Finish running SqlServerDetector
### Start running WP_UserDetector
### Finish running WordPressRemoteDetector
### Start running GenericDatabaseUsageDetector
### Finish running WP_UserDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running VariableDetector
### Start running UninstallDetector
### Finish running GenericDatabaseUsageDetector
### Finish running UserInputDetector
### Finish running WordPressStorageDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running WordPressRetrievalDetector
### Finished running detectors
admin/admin.php:52
  - RETRIEVAL call to get_posts($group_args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
admin/includes/class-laffp-options-page.php:82
  - RETRIEVAL call to get_option($this->option->key) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/includes/class-laffp-options-page.php:98
  - RETRIEVAL call to $this->option->get_option("posts_per_page") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/includes/meta-boxes/class-laffp-feature-meta-box.php:21
  - RETRIEVAL call to get_post_meta($group->ID, "laffp_post_types") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/includes/meta-boxes/class-laffp-feature-meta-box.php:59
  - RETRIEVAL call to get_post_meta($post->ID, $this->meta_key, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/includes/meta-boxes/class-laffp-feature-meta-box.php:107
  - RETRIEVAL call to get_post_meta($post_id, $this->meta_key, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/includes/meta-boxes/class-laffp-posts-order-meta-box.php:145
  - RETRIEVAL call to get_post($post_id) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, wp_post, post
admin/includes/meta-boxes/class-laffp-target-post-type-meta-box.php:55
  - RETRIEVAL call to get_post_meta($post->ID, $this->meta_key, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-laffp-option.php:21
  - RETRIEVAL call to get_option(self::"OPTION_KEY", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-laffp-option.php:44
  - RETRIEVAL call to get_option(self::"OPTION_KEY", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/functions.php:28
  - RETRIEVAL call to $laffp_option->get_option("posts_per_page", 10) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/functions.php:32
  - RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
includes/widgets/class-laffp-widget-posts.php:51
  - RETRIEVAL call to $laffp_option->get_option("posts_per_page") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/widgets/class-laffp-widget-posts.php:105
  - RETRIEVAL call to get_posts($group_args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
laf-featured-posts.php:196
  - RETRIEVAL call to $laffp_option->get_option("version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
laf-featured-posts.php:240
  - RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
uninstall.php:41
  - RETRIEVAL call to get_option("laffp_caps", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
uninstall.php:59
  - RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]). 

admin/includes/meta-boxes/class-laffp-feature-meta-box.php:111
  - STORAGE call to update_post_meta($post_id, $this->meta_key, 0) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/includes/meta-boxes/class-laffp-feature-meta-box.php:113
  - STORAGE call to delete_post_meta($post_id, $this->meta_key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
admin/includes/meta-boxes/class-laffp-posts-order-meta-box.php:161
  - STORAGE call to delete_post_meta($post->ID, $order_meta_key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
admin/includes/meta-boxes/class-laffp-posts-order-meta-box.php:166
  - STORAGE call to update_post_meta($_post_id, $order_meta_key, $index + 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/includes/meta-boxes/class-laffp-target-post-type-meta-box.php:106
  - STORAGE call to update_post_meta($post_id, $this->meta_key, $post_types) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-laffp-option.php:46
  - STORAGE call to update_option(self::"OPTION_KEY", $option, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
laf-featured-posts.php:201
  - STORAGE call to $laffp_option->update_option("version", LAFFP_VERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
laf-featured-posts.php:244
  - STORAGE call to wp_insert_post(["post_type" => LAFFP_POST_TYPE, "post_status" => "publish", "post_title" => __("Featured Posts", LAFFP_TEXT_DOMAIN), "post_name" => "featured-posts", "post_content" => ""]). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
laf-featured-posts.php:253
  - STORAGE call to update_post_meta($post_id, "laffp_post_types", ["post"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
laf-featured-posts.php:270
  - STORAGE call to add_option("laffp_caps", $caps, "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).
  - Data types: option
uninstall.php:49
  - STORAGE call to delete_option("laffp_caps") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:66
  - STORAGE call to wp_delete_post($group->ID, true) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post_meta, wp_post, post
uninstall.php:89
  - STORAGE call to delete_option("laffp_option") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

admin/includes/meta-boxes/class-laffp-feature-meta-box.php:113
  - DELETION call to delete_post_meta($post_id, $this->meta_key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
admin/includes/meta-boxes/class-laffp-posts-order-meta-box.php:161
  - DELETION call to delete_post_meta($post->ID, $order_meta_key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
uninstall.php:49
  - DELETION call to delete_option("laffp_caps") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:66
  - DELETION call to wp_delete_post($group->ID, true) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post_meta, wp_post, post
uninstall.php:78
  - Data from table $wpdb deleted: "$wpdb->delete($wpdb->postmeta, $where, $format)"
uninstall.php:84
  - Data from table $wpdb deleted: "$wpdb->delete($wpdb->postmeta, $where, $format)"
uninstall.php:89
  - DELETION call to delete_option("laffp_option") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

uninstall.php:49
  - Uninstall deletion call: DELETION call to delete_option("laffp_caps") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:66
  - Uninstall deletion call: DELETION call to wp_delete_post($group->ID, true) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post_meta, wp_post, post
uninstall.php:89
  - Uninstall deletion call: DELETION call to delete_option("laffp_option") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

By data type:
none
	WordPressRetrievalDetector.get_posts($group_args) - set()
	DeletionDetector.$wpdb->delete($wpdb->postmeta, $where, $format) - set()
	WordPressRetrievalDetector.get_posts($group_args) - set()
	DeletionDetector.$wpdb->delete($wpdb->postmeta, $where, $format) - set()
	WordPressRetrievalDetector.get_posts($args) - set()
	WordPressStorageDetector.wp_insert_post(["post_type" => LAFFP_POST_TYPE, "post_status" => "publish", "post_title" => __("Featured Posts", LAFFP_TEXT_DOMAIN), "post_name" => "featured-posts", "post_content" => ""]) - set()
	WordPressRetrievalDetector.get_posts($args) - set()
	WordPressRetrievalDetector.get_posts($args) - set()
option
	WordPressRetrievalDetector.get_option(self::"OPTION_KEY", []) - {'option'}
	UninstallDetector.delete_option("laffp_option") - {'option'}
	DeletionDetector.delete_option("laffp_caps") - {'option'}
	WordPressRetrievalDetector.$this->option->get_option("posts_per_page") - {'option'}
	WordPressRetrievalDetector.get_option(self::"OPTION_KEY", []) - {'option'}
	WordPressStorageDetector.add_option("laffp_caps", $caps, "", "no") - {'option'}
	WordPressRetrievalDetector.get_option("laffp_caps", []) - {'option'}
	DeletionDetector.delete_option("laffp_option") - {'option'}
	WordPressStorageDetector.$laffp_option->update_option("version", LAFFP_VERSION) - {'option'}
	UninstallDetector.delete_option("laffp_caps") - {'option'}
	WordPressStorageDetector.delete_option("laffp_option") - {'option'}
	WordPressStorageDetector.update_option(self::"OPTION_KEY", $option, false) - {'option'}
	WordPressRetrievalDetector.$laffp_option->get_option("version") - {'option'}
	WordPressRetrievalDetector.$laffp_option->get_option("posts_per_page", 10) - {'option'}
	WordPressRetrievalDetector.$laffp_option->get_option("posts_per_page") - {'option'}
	WordPressStorageDetector.delete_option("laffp_caps") - {'option'}
	WordPressRetrievalDetector.get_option($this->option->key) - {'option'}
post
	UninstallDetector.wp_delete_post($group->ID, true) - {'post_meta', 'wp_post', 'post'}
	WordPressStorageDetector.wp_delete_post($group->ID, true) - {'post_meta', 'wp_post', 'post'}
	DeletionDetector.wp_delete_post($group->ID, true) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'wp_post', 'post'}
post_meta
	WordPressStorageDetector.update_post_meta($post_id, $this->meta_key, $post_types) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, $this->meta_key, 0) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "laffp_post_types", ["post"]) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post->ID, $order_meta_key) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($_post_id, $order_meta_key, $index + 1) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, $this->meta_key, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($group->ID, "laffp_post_types") - {'post_meta'}
	DeletionDetector.delete_post_meta($post_id, $this->meta_key) - {'post_meta'}
	DeletionDetector.delete_post_meta($post->ID, $order_meta_key) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, $this->meta_key, true) - {'post_meta'}
	UninstallDetector.wp_delete_post($group->ID, true) - {'post_meta', 'wp_post', 'post'}
	WordPressStorageDetector.wp_delete_post($group->ID, true) - {'post_meta', 'wp_post', 'post'}
	DeletionDetector.wp_delete_post($group->ID, true) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post_meta($post->ID, $this->meta_key, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'wp_post', 'post'}
	WordPressStorageDetector.delete_post_meta($post_id, $this->meta_key) - {'post_meta'}
wp_post
	UninstallDetector.wp_delete_post($group->ID, true) - {'post_meta', 'wp_post', 'post'}
	WordPressStorageDetector.wp_delete_post($group->ID, true) - {'post_meta', 'wp_post', 'post'}
	DeletionDetector.wp_delete_post($group->ID, true) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'wp_post', 'post'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:09.837895.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 75 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.245858.

75 STORE_REACHES edges created
75 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
In total, tainted 0 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
In total, tainted 0 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:00.005961.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:00:38.228515!
DELETION call to delete_post_meta($post_id, $this->meta_key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($post->ID, $order_meta_key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_option("laffp_caps") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to wp_delete_post($group->ID, true) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
Data from table $wpdb deleted: "$wpdb->delete($wpdb->postmeta, $where, $format)",None,None
Data from table $wpdb deleted: "$wpdb->delete($wpdb->postmeta, $where, $format)",None,None
DELETION call to delete_option("laffp_option") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("laffp_caps") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to wp_delete_post($group->ID, true) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
Uninstall deletion call: DELETION call to delete_option("laffp_option") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
RETRIEVAL call to get_posts($group_args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_option($this->option->key) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to $this->option->get_option("posts_per_page") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, $this->meta_key, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($group->ID, "laffp_post_types") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, $this->meta_key, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($post_id) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($post->ID, $this->meta_key, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"OPTION_KEY", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"OPTION_KEY", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $laffp_option->get_option("posts_per_page", 10) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_posts($group_args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to $laffp_option->get_option("posts_per_page") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to $laffp_option->get_option("version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_option("laffp_caps", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
STORAGE call to update_post_meta($post_id, $this->meta_key, 0) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($post_id, $this->meta_key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_post_meta($post->ID, $order_meta_key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($_post_id, $order_meta_key, $index + 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, $this->meta_key, $post_types) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option(self::"OPTION_KEY", $option, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to $laffp_option->update_option("version", LAFFP_VERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to wp_insert_post(["post_type" => LAFFP_POST_TYPE, "post_status" => "publish", "post_title" => __("Featured Posts", LAFFP_TEXT_DOMAIN), "post_name" => "featured-posts", "post_content" => ""]). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($post_id, "laffp_post_types", ["post"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to add_option("laffp_caps", $caps, "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("laffp_caps") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to wp_delete_post($group->ID, true) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
STORAGE call to delete_option("laffp_option") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found no personal data in the plugin. No analysis needed. 

[main] Complaint? True 

No findings
