Timeout in resolving values
Timeout in running neo4j query
Running Main.py on windows-azure-auto-scaling-plugin

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.380304.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:00.973311.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 0 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.191519.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 1 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.654535.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 237 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:00.741831.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 0 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.765445.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.119022.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 58 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:01.204114.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 1342
Added 1046 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 1342
Added 0 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.140457.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/windows-azure-auto-scaling-plugin/admin_settings_menu.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/windows-azure-auto-scaling-plugin/admin_triggers_menu.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/windows-azure-auto-scaling-plugin/deactivate.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/windows-azure-auto-scaling-plugin/wazscaler.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.421376.

1 REACHES edges created
1000 PHP_REACHES edges created
1341 PHP_REACHES edges created
1342 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 465 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.080385.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:01.295723.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 4 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.617394.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 3 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.161018.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.148137.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.078669.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.015777.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.048416.

7 PHP_REACHES edges created
7 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 4 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.145319.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
No SQL nodes to process.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:00.115242.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'$subscription_id'' cannot be parsed correct.
HTML code '$'$certificate'' cannot be parsed correct.
HTML code '$'$certificate_thumbprint'' cannot be parsed correct.
HTML code '$'$deployment_endpoint'' cannot be parsed correct.
HTML code '$'$deployment_slot'' cannot be parsed correct.
HTML code '$'$deployment_role_name'' cannot be parsed correct.
HTML code '$'$storage_endpoint'' cannot be parsed correct.
HTML code '$'$storage_key'' cannot be parsed correct.
HTML code '$'$max_instances'' cannot be parsed correct.
HTML code '$'$min_instances'' cannot be parsed correct.
HTML code '$'$memory_min'' cannot be parsed correct.
HTML code '$'$memory_max'' cannot be parsed correct.
HTML code '$'$cpu_min'' cannot be parsed correct.
HTML code '$'$cpu_max'' cannot be parsed correct.
HTML code '$'$connections_min'' cannot be parsed correct.
HTML code '$'$connections_max'' cannot be parsed correct.
HTML code '$'<p><strong>$message</strong></p></div>'' cannot be parsed correct.
HTML code '$'CHECKED'' cannot be parsed correct.
HTML code '$'CHECKED'' cannot be parsed correct.
HTML code '$'<div style="display: none;">'' cannot be parsed correct.
HTML code '$'<div>'' cannot be parsed correct.
HTML code '$'wazScale_admin_menu'' cannot be parsed correct.
HTML code '$'figure out how to create an alert box with the result wazscaler:48'' cannot be parsed correct.
HTML code '$'wazScale_admin_schedule_menu'' cannot be parsed correct.
HTML code '$'figure out how to create an alert box with the result wazscaler:wazScale_admin_settings_menu'' cannot be parsed correct.
HTML code '$'<pre>'' cannot be parsed correct.
HTML code '$'</pre>'' cannot be parsed correct.
HTML code '$'<div id="message" class="error">'' cannot be parsed correct.
HTML code '$'<div id="message" class="updated fade">'' cannot be parsed correct.
HTML code '$'<b>Cert found</b>'' cannot be parsed correct.
HTML code '$'<b>No cert file</b>'' cannot be parsed correct.
HTML code '$'<pre>'' cannot be parsed correct.
HTML code '$'</pre>'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:03.511400.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.051222.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 0 do_action/apply_filters calls and 6 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.464200.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FileProDetector
### Start running FrontBaseDetector
### Finish running DbplusDetector
### Start running HashDetector
### Finish running DbaseDetector
### Start running IBMDb2Detector
### Finish running FirebirdInterBaseDetector
### Start running InformixDetector
### Finish running CubridDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running Oci8Detector
### Start running OpenSSLDetector
### Finish running MongoDbDetector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running HashDetector
### Start running PhpCurlDetector
### Finish running OpenSSLDetector
### Start running PHPDataObjectDetector
### Finish running PasswordHashingDetector
### Start running PHPIncludedDetector
### Finish running PHPDataObjectDetector
### Start running PHPRetrievalDetector
### Finish running ArrayElementDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PhpCurlDetector
### Start running PhpVarDetector
### Finish running PHPIncludedDetector
### Start running PostgreSQLDetector
### Finish running PhpVarDetector
### Start running PropertyDetector
### Finish running PostgreSQLDetector
### Start running Sqlite3Detector
### Finish running PHPRetrievalDetector
### Start running SqliteDetector
### Finish running SqliteDetector
### Start running SqlServerDetector
### Finish running Sqlite3Detector
### Start running SybaseDetector
### Finish running SybaseDetector
### Start running TokyoTyrantDetector
### Finish running PropertyDetector
### Start running UserInputDetector
### Finish running TokyoTyrantDetector
### Start running VariableDetector
### Finish running SqlServerDetector
### Start running WordpressHashingFnDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRemoteDetector
### Finish running maxdbDetector
### Start running WordPressRetrievalDetector
### Finish running MySQLiDetector
### Start running WordPressStorageDetector
### Finish running PHPStorageDetector
### Start running WP_UserDetector
### Finish running VariableDetector
### Start running GenericDatabaseUsageDetector
### Finish running WordPressRemoteDetector
### Start running GenericEncryptionDetector
### Finish running WP_UserDetector
### Start running DeletionDetector
### Finish running GenericEncryptionDetector
### Start running UninstallDetector
### Finish running GenericDatabaseUsageDetector
### Finish running UserInputDetector
### Finish running DeletionDetector
### Finish running UninstallDetector
### Finish running WordPressRetrievalDetector
### Finish running WordPressStorageDetector
### Finished running detectors
wazscaler.php:186
  - STORAGE call to file_put_contents(sys_get_temp_dir() . "/tmpCert.pem", $settings["certificate"]).
  - Data types: file 

wazscaler.php:122
  - RETRIEVAL call to get_option(OP_TRIGGERS) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wazscaler.php:137
  - RETRIEVAL call to get_option(OP_SETTINGS) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wazscaler.php:174
  - RETRIEVAL call to get_option(OP_SETTINGS) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wazscaler.php:175
  - RETRIEVAL call to get_option(OP_TRIGGERS) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wazscaler.php:237
  - RETRIEVAL call to get_option(OP_TRIGGERS) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wazscaler.php:269
  - RETRIEVAL call to get_post_meta($p->ID, "Role", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wazscaler.php:270
  - RETRIEVAL call to get_post_meta($p->ID, "RoleInstance", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wazscaler.php:271
  - RETRIEVAL call to get_post_meta($p->ID, "CounterName", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wazscaler.php:272
  - RETRIEVAL call to get_post_meta($p->ID, "CounterValue", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wazscaler.php:374
  - RETRIEVAL call to get_option("wazScale_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wazscaler.php:479
  - RETRIEVAL call to get_option(OP_SETTINGS) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option 

wazscaler.php:118
  - STORAGE call to update_option(OP_TRIGGERS, $_POST) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
wazscaler.php:133
  - STORAGE call to update_option(OP_SETTINGS, ["deployment_slot" => $_POST["deployment_slot"], "deployment_endpoint" => $_POST["deployment_endpoint"], "deployment_role_name" => $_POST["deployment_role_name"], "storage_endpoint" => $_POST["storage_endpoint"], "storage_key" => $_POST["storage_key"], "subscription_id" => $_POST["subscription_id"], "certificate" => $_POST["certificate"], "certificate_thumbprint" => $_POST["certificate_thumbprint"]]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
wazscaler.php:397
  - STORAGE call to wp_insert_post($post_data). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
wazscaler.php:401
  - STORAGE call to update_post_meta($post_id, "Timestamp", $e->Timestamp) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wazscaler.php:402
  - STORAGE call to update_post_meta($post_id, "EventTickCount", $e->EventTickCount) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wazscaler.php:403
  - STORAGE call to update_post_meta($post_id, "DeploymentId", $e->DeploymentId) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wazscaler.php:404
  - STORAGE call to update_post_meta($post_id, "Role", $e->Role) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wazscaler.php:405
  - STORAGE call to update_post_meta($post_id, "RoleInstance", $e->RoleInstance) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wazscaler.php:406
  - STORAGE call to update_post_meta($post_id, "CounterName", $e->CounterName) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wazscaler.php:407
  - STORAGE call to update_post_meta($post_id, "CounterValue", $e->CounterValue) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta 

By data type:
file
	PHPStorageDetector.file_put_contents(sys_get_temp_dir() . "/tmpCert.pem", $settings["certificate"]) - {'file'}
none
	WordPressStorageDetector.wp_insert_post($post_data) - set()
option
	WordPressStorageDetector.update_option(OP_SETTINGS, ["deployment_slot" => $_POST["deployment_slot"], "deployment_endpoint" => $_POST["deployment_endpoint"], "deployment_role_name" => $_POST["deployment_role_name"], "storage_endpoint" => $_POST["storage_endpoint"], "storage_key" => $_POST["storage_key"], "subscription_id" => $_POST["subscription_id"], "certificate" => $_POST["certificate"], "certificate_thumbprint" => $_POST["certificate_thumbprint"]]) - {'option'}
	WordPressRetrievalDetector.get_option(OP_TRIGGERS) - {'option'}
	WordPressRetrievalDetector.get_option(OP_SETTINGS) - {'option'}
	WordPressRetrievalDetector.get_option("wazScale_settings") - {'option'}
	WordPressRetrievalDetector.get_option(OP_TRIGGERS) - {'option'}
	WordPressStorageDetector.update_option(OP_TRIGGERS, $_POST) - {'option'}
	WordPressRetrievalDetector.get_option(OP_TRIGGERS) - {'option'}
	WordPressRetrievalDetector.get_option(OP_SETTINGS) - {'option'}
	WordPressRetrievalDetector.get_option(OP_SETTINGS) - {'option'}
post_meta
	WordPressRetrievalDetector.get_post_meta($p->ID, "Role", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "CounterName", $e->CounterName) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($p->ID, "RoleInstance", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "RoleInstance", $e->RoleInstance) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "DeploymentId", $e->DeploymentId) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "EventTickCount", $e->EventTickCount) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "Role", $e->Role) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "CounterValue", $e->CounterValue) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($p->ID, "CounterValue", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($p->ID, "CounterName", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "Timestamp", $e->Timestamp) - {'post_meta'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:08.946708.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 42 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.221926.

42 STORE_REACHES edges created
42 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
In total, tainted 0 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
In total, tainted 0 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:00.005318.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:00:28.029949!
STORAGE call to file_put_contents(sys_get_temp_dir() . "/tmpCert.pem", $settings["certificate"]).,None,None
RETRIEVAL call to get_option(OP_TRIGGERS) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(OP_SETTINGS) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(OP_SETTINGS) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(OP_TRIGGERS) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(OP_TRIGGERS) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($p->ID, "Role", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($p->ID, "RoleInstance", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($p->ID, "CounterName", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($p->ID, "CounterValue", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wazScale_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(OP_SETTINGS) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
STORAGE call to update_option(OP_TRIGGERS, $_POST) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(OP_SETTINGS, ["deployment_slot" => $_POST["deployment_slot"], "deployment_endpoint" => $_POST["deployment_endpoint"], "deployment_role_name" => $_POST["deployment_role_name"], "storage_endpoint" => $_POST["storage_endpoint"], "storage_key" => $_POST["storage_key"], "subscription_id" => $_POST["subscription_id"], "certificate" => $_POST["certificate"], "certificate_thumbprint" => $_POST["certificate_thumbprint"]]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to wp_insert_post($post_data). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($post_id, "Timestamp", $e->Timestamp) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "EventTickCount", $e->EventTickCount) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "DeploymentId", $e->DeploymentId) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "Role", $e->Role) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "RoleInstance", $e->RoleInstance) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "CounterName", $e->CounterName) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "CounterValue", $e->CounterValue) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found no personal data in the plugin. No analysis needed. 

[main] Complaint? True 

No findings
