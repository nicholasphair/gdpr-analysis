Timeout in resolving values
Timeout in running neo4j query
Running Main.py on square-sync

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.301937.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:00.866041.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 0 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.270055.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 0 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.453941.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 99 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:00.631164.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 0 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.561192.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.102996.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 70 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:01.458222.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 1146
Added 977 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 1146
Added 0 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.030749.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/square-sync/square-sync.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.188839.

1000 PHP_REACHES edges created
1146 PHP_REACHES edges created
1146 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 417 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.031615.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.970645.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 3 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.621119.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 9 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.162537.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.105912.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.095446.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.011547.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.043896.

12 PHP_REACHES edges created
12 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 3 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.111987.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
No SQL nodes to process.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:00.133233.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'<div class="updated fade"><p><strong>Error clearing $file</strong></p></div>'' cannot be parsed correct.
HTML code '$'<div class="updated fade"><p><strong>No cache to clear!</strong></p></div>'' cannot be parsed correct.
HTML code '$'<div class="updated fade"><p><strong>Error clearing cache!, Check permissions on upload directory wp_upload_dir()_basedir/square</strong></p></div>'' cannot be parsed correct.
HTML code '$'<div class="updated fade"><p><strong>Cache Cleared Successfully</strong></p></div>'' cannot be parsed correct.
HTML code '$'<div class="updated fade"><p><strong>Validation Error: Invalid Access Token.</strong></p></div>'' cannot be parsed correct.
HTML code '$'<div class="updated fade"><p><strong>Validation Error: Crop width should be less than 800px and requires an integer.</strong></p></div>'' cannot be parsed correct.
HTML code '$'<div class="updated fade"><p><strong>Validation Error: Crop height should be less than 800px and requires an integer.</strong></p></div>'' cannot be parsed correct.
HTML code '$'<div class="updated fade"><p><strong>Cache couldn\'t be created.</strong></p></div>'' cannot be parsed correct.
HTML code '$'<div class="updated fade"><p><strong>Cache created.</strong></p></div>'' cannot be parsed correct.
HTML code '$'<div class="updated fade"><p><strong>Options saved.</strong></p></div>'' cannot be parsed correct.
HTML code '$'$_SERVER_REQUEST_URI'' cannot be parsed correct.
HTML code '$'get_option("square_sync_access_token")'' cannot be parsed correct.
HTML code '$'get_option("square_sync_crop_x")'' cannot be parsed correct.
HTML code '$'get_option("square_sync_crop_y")'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:02.815102.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.065142.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 0 do_action/apply_filters calls and 3 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.344645.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbplusDetector
### Start running FrontBaseDetector
### Finish running FileProDetector
### Start running HashDetector
### Finish running DbaseDetector
### Start running IBMDb2Detector
### Finish running FirebirdInterBaseDetector
### Start running InformixDetector
### Finish running CubridDetector
### Start running IngresDetector
### Finish running IngresDetector
### Start running maxdbDetector
### Finish running FrontBaseDetector
### Start running MongoDbDetector
### Finish running InformixDetector
### Start running MongoDetector
### Finish running IBMDb2Detector
### Start running MsqlDetector
### Finish running MongoDetector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running MongoDbDetector
### Start running OpenSSLDetector
### Finish running Oci8Detector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running HashDetector
### Start running PhpCurlDetector
### Finish running PasswordHashingDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PhpCurlDetector
### Start running PHPRetrievalDetector
### Finish running OpenSSLDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running ArrayElementDetector
### Start running PhpVarDetector
### Finish running PHPIncludedDetector
### Start running PostgreSQLDetector
### Finish running PhpVarDetector
### Start running PropertyDetector
### Finish running PostgreSQLDetector
### Start running Sqlite3Detector
### Finish running PHPRetrievalDetector
### Start running SqliteDetector
### Finish running PHPStorageDetector
### Start running SqlServerDetector
### Finish running SqliteDetector
### Start running SybaseDetector
### Finish running Sqlite3Detector
### Start running TokyoTyrantDetector
### Finish running SybaseDetector
### Start running UserInputDetector
### Finish running PropertyDetector
### Start running VariableDetector
### Finish running TokyoTyrantDetector
### Start running WordpressHashingFnDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRemoteDetector
### Finish running SqlServerDetector
### Start running WordPressRetrievalDetector
### Finish running VariableDetector
### Start running WordPressStorageDetector
### Finish running maxdbDetector
### Start running WP_UserDetector
### Finish running UserInputDetector
### Start running GenericDatabaseUsageDetector
### Finish running MySQLiDetector
### Start running GenericEncryptionDetector
### Finish running WP_UserDetector
### Start running DeletionDetector
### Finish running GenericEncryptionDetector
### Start running UninstallDetector
### Finish running GenericDatabaseUsageDetector
### Finish running WordPressRemoteDetector
### Finish running WordPressRetrievalDetector
### Finish running DeletionDetector
### Finish running UninstallDetector
### Finish running WordPressStorageDetector
### Finished running detectors
square-sync.php:342
  - API call to wp_remote_request($url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote 

square-sync.php:29
  - RETRIEVAL call to get_option("square_sync_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
square-sync.php:98
  - RETRIEVAL call to get_option("square_sync_link") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
square-sync.php:105
  - RETRIEVAL call to get_option("square_sync_set_category") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
square-sync.php:123
  - RETRIEVAL call to get_option("square_sync_use_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
square-sync.php:164
  - RETRIEVAL call to get_option("square_sync_image_x") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
square-sync.php:164
  - RETRIEVAL call to get_option("square_sync_image_y") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
square-sync.php:167
  - RETRIEVAL call to get_option("square_sync_crop_x") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
square-sync.php:167
  - RETRIEVAL call to get_option("square_sync_crop_y") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
square-sync.php:227
  - RETRIEVAL call to get_option("square_sync_link") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
square-sync.php:231
  - RETRIEVAL call to get_option("square_sync_experimental") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
square-sync.php:251
  - RETRIEVAL call to get_option("square_sync_set_category") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
square-sync.php:266
  - RETRIEVAL call to get_option("square_sync_set_category") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
square-sync.php:335
  - RETRIEVAL call to get_option("square_sync_access_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
square-sync.php:580
  - RETRIEVAL call to get_option("square_sync_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
square-sync.php:623
  - RETRIEVAL call to get_option("square_sync_access_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
square-sync.php:631
  - RETRIEVAL call to get_option("square_sync_set_category") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
square-sync.php:639
  - RETRIEVAL call to get_option("square_sync_use_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
square-sync.php:647
  - RETRIEVAL call to get_option("square_sync_crop_x") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
square-sync.php:648
  - RETRIEVAL call to get_option("square_sync_crop_y") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
square-sync.php:656
  - RETRIEVAL call to get_option("square_sync_link") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
square-sync.php:664
  - RETRIEVAL call to get_option("square_sync_experimental") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option 

square-sync.php:33
  - STORAGE call to update_option("square_sync_version", SQUARE_SYNC_VERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
square-sync.php:36
  - STORAGE call to update_option("square_sync_image_x", SQUARE_SYNC_IMAGE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
square-sync.php:37
  - STORAGE call to update_option("square_sync_image_y", SQUARE_SYNC_IMAGE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
square-sync.php:38
  - STORAGE call to update_option("square_sync_crop_x", SQUARE_SYNC_CROP) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
square-sync.php:39
  - STORAGE call to update_option("square_sync_crop_y", SQUARE_SYNC_CROP) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
square-sync.php:40
  - STORAGE call to update_option("square_sync_cache", FALSE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
square-sync.php:41
  - STORAGE call to update_option("square_sync_link", FALSE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
square-sync.php:42
  - STORAGE call to update_option("square_sync_experimental", FALSE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
square-sync.php:60
  - STORAGE call to delete_option("square_sync_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
square-sync.php:61
  - STORAGE call to delete_option("square_sync_access_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
square-sync.php:62
  - STORAGE call to delete_option("square_sync_use_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
square-sync.php:63
  - STORAGE call to delete_option("square_sync_image_x") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
square-sync.php:64
  - STORAGE call to delete_option("square_sync_image_y") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
square-sync.php:65
  - STORAGE call to delete_option("square_sync_crop_x") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
square-sync.php:66
  - STORAGE call to delete_option("square_sync_crop_y") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
square-sync.php:67
  - STORAGE call to delete_option("square_sync_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
square-sync.php:68
  - STORAGE call to delete_option("square_sync_set_category") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
square-sync.php:69
  - STORAGE call to delete_option("square_sync_link") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
square-sync.php:70
  - STORAGE call to delete_option("square_sync_experimental") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
square-sync.php:138
  - STORAGE call to update_option("square_sync_cache", FALSE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
square-sync.php:172
  - STORAGE call to update_option("square_sync_cache", TRUE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
square-sync.php:177
  - STORAGE call to update_option("square_sync_cache", FALSE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
square-sync.php:187
  - STORAGE call to update_option("square_sync_cache", TRUE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
square-sync.php:395
  - STORAGE call to update_option("square_sync_cache", FALSE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
square-sync.php:468
  - STORAGE call to update_option("square_sync_access_token", $square_sync_token) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
square-sync.php:482
  - STORAGE call to update_option("square_sync_use_image", TRUE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
square-sync.php:487
  - STORAGE call to update_option("square_sync_use_image", FALSE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
square-sync.php:495
  - STORAGE call to update_option("square_sync_set_category", TRUE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
square-sync.php:500
  - STORAGE call to update_option("square_sync_set_category", FALSE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
square-sync.php:512
  - STORAGE call to update_option("square_sync_crop_x", $square_sync_crop_x) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
square-sync.php:523
  - STORAGE call to update_option("square_sync_crop_x", 450) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
square-sync.php:535
  - STORAGE call to update_option("square_sync_crop_y", $square_sync_crop_y) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
square-sync.php:546
  - STORAGE call to update_option("square_sync_crop_y", 450) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
square-sync.php:554
  - STORAGE call to update_option("square_sync_link", TRUE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
square-sync.php:559
  - STORAGE call to update_option("square_sync_link", FALSE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
square-sync.php:567
  - STORAGE call to update_option("square_sync_experimental", TRUE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
square-sync.php:569
  - STORAGE call to update_option("square_sync_link", TRUE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
square-sync.php:574
  - STORAGE call to update_option("square_sync_experimental", FALSE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option 

square-sync.php:60
  - DELETION call to delete_option("square_sync_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
square-sync.php:61
  - DELETION call to delete_option("square_sync_access_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
square-sync.php:62
  - DELETION call to delete_option("square_sync_use_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
square-sync.php:63
  - DELETION call to delete_option("square_sync_image_x") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
square-sync.php:64
  - DELETION call to delete_option("square_sync_image_y") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
square-sync.php:65
  - DELETION call to delete_option("square_sync_crop_x") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
square-sync.php:66
  - DELETION call to delete_option("square_sync_crop_y") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
square-sync.php:67
  - DELETION call to delete_option("square_sync_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
square-sync.php:68
  - DELETION call to delete_option("square_sync_set_category") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
square-sync.php:69
  - DELETION call to delete_option("square_sync_link") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
square-sync.php:70
  - DELETION call to delete_option("square_sync_experimental") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

square-sync.php:60
  - Uninstall deletion call: DELETION call to delete_option("square_sync_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
square-sync.php:61
  - Uninstall deletion call: DELETION call to delete_option("square_sync_access_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
square-sync.php:62
  - Uninstall deletion call: DELETION call to delete_option("square_sync_use_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
square-sync.php:63
  - Uninstall deletion call: DELETION call to delete_option("square_sync_image_x") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
square-sync.php:64
  - Uninstall deletion call: DELETION call to delete_option("square_sync_image_y") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
square-sync.php:65
  - Uninstall deletion call: DELETION call to delete_option("square_sync_crop_x") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
square-sync.php:66
  - Uninstall deletion call: DELETION call to delete_option("square_sync_crop_y") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
square-sync.php:67
  - Uninstall deletion call: DELETION call to delete_option("square_sync_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
square-sync.php:68
  - Uninstall deletion call: DELETION call to delete_option("square_sync_set_category") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
square-sync.php:69
  - Uninstall deletion call: DELETION call to delete_option("square_sync_link") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
square-sync.php:70
  - Uninstall deletion call: DELETION call to delete_option("square_sync_experimental") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

By data type:
option
	WordPressStorageDetector.update_option("square_sync_cache", FALSE) - {'option'}
	UninstallDetector.delete_option("square_sync_cache") - {'option'}
	WordPressStorageDetector.delete_option("square_sync_crop_y") - {'option'}
	WordPressRetrievalDetector.get_option("square_sync_link") - {'option'}
	UninstallDetector.delete_option("square_sync_image_y") - {'option'}
	WordPressRetrievalDetector.get_option("square_sync_set_category") - {'option'}
	DeletionDetector.delete_option("square_sync_set_category") - {'option'}
	WordPressRetrievalDetector.get_option("square_sync_link") - {'option'}
	WordPressStorageDetector.update_option("square_sync_set_category", TRUE) - {'option'}
	WordPressStorageDetector.update_option("square_sync_access_token", $square_sync_token) - {'option'}
	WordPressStorageDetector.update_option("square_sync_use_image", FALSE) - {'option'}
	WordPressRetrievalDetector.get_option("square_sync_experimental") - {'option'}
	UninstallDetector.delete_option("square_sync_crop_y") - {'option'}
	WordPressStorageDetector.delete_option("square_sync_access_token") - {'option'}
	WordPressStorageDetector.update_option("square_sync_link", FALSE) - {'option'}
	WordPressStorageDetector.update_option("square_sync_cache", TRUE) - {'option'}
	WordPressStorageDetector.update_option("square_sync_cache", FALSE) - {'option'}
	WordPressStorageDetector.update_option("square_sync_cache", FALSE) - {'option'}
	WordPressRetrievalDetector.get_option("square_sync_crop_x") - {'option'}
	WordPressStorageDetector.update_option("square_sync_crop_x", 450) - {'option'}
	WordPressStorageDetector.delete_option("square_sync_set_category") - {'option'}
	WordPressRetrievalDetector.get_option("square_sync_crop_y") - {'option'}
	WordPressStorageDetector.delete_option("square_sync_use_image") - {'option'}
	WordPressStorageDetector.update_option("square_sync_set_category", FALSE) - {'option'}
	WordPressStorageDetector.delete_option("square_sync_experimental") - {'option'}
	WordPressStorageDetector.update_option("square_sync_cache", TRUE) - {'option'}
	WordPressRetrievalDetector.get_option("square_sync_set_category") - {'option'}
	WordPressStorageDetector.update_option("square_sync_link", FALSE) - {'option'}
	WordPressStorageDetector.delete_option("square_sync_link") - {'option'}
	WordPressStorageDetector.update_option("square_sync_link", TRUE) - {'option'}
	WordPressStorageDetector.update_option("square_sync_experimental", TRUE) - {'option'}
	WordPressStorageDetector.delete_option("square_sync_crop_x") - {'option'}
	DeletionDetector.delete_option("square_sync_link") - {'option'}
	WordPressStorageDetector.update_option("square_sync_crop_y", SQUARE_SYNC_CROP) - {'option'}
	DeletionDetector.delete_option("square_sync_cache") - {'option'}
	WordPressStorageDetector.delete_option("square_sync_image_x") - {'option'}
	WordPressRetrievalDetector.get_option("square_sync_crop_y") - {'option'}
	WordPressStorageDetector.update_option("square_sync_use_image", TRUE) - {'option'}
	WordPressStorageDetector.update_option("square_sync_image_x", SQUARE_SYNC_IMAGE) - {'option'}
	WordPressRetrievalDetector.get_option("square_sync_crop_x") - {'option'}
	DeletionDetector.delete_option("square_sync_experimental") - {'option'}
	DeletionDetector.delete_option("square_sync_access_token") - {'option'}
	UninstallDetector.delete_option("square_sync_access_token") - {'option'}
	DeletionDetector.delete_option("square_sync_image_x") - {'option'}
	WordPressStorageDetector.update_option("square_sync_crop_x", $square_sync_crop_x) - {'option'}
	WordPressStorageDetector.update_option("square_sync_crop_y", 450) - {'option'}
	DeletionDetector.delete_option("square_sync_crop_y") - {'option'}
	DeletionDetector.delete_option("square_sync_crop_x") - {'option'}
	WordPressRetrievalDetector.get_option("square_sync_image_x") - {'option'}
	UninstallDetector.delete_option("square_sync_crop_x") - {'option'}
	UninstallDetector.delete_option("square_sync_version") - {'option'}
	WordPressRetrievalDetector.get_option("square_sync_access_token") - {'option'}
	WordPressStorageDetector.delete_option("square_sync_cache") - {'option'}
	WordPressRetrievalDetector.get_option("square_sync_image_y") - {'option'}
	WordPressRetrievalDetector.get_option("square_sync_access_token") - {'option'}
	WordPressStorageDetector.update_option("square_sync_version", SQUARE_SYNC_VERSION) - {'option'}
	WordPressStorageDetector.delete_option("square_sync_version") - {'option'}
	WordPressStorageDetector.update_option("square_sync_link", TRUE) - {'option'}
	WordPressRetrievalDetector.get_option("square_sync_set_category") - {'option'}
	WordPressStorageDetector.update_option("square_sync_crop_y", $square_sync_crop_y) - {'option'}
	UninstallDetector.delete_option("square_sync_experimental") - {'option'}
	WordPressStorageDetector.delete_option("square_sync_image_y") - {'option'}
	DeletionDetector.delete_option("square_sync_image_y") - {'option'}
	WordPressRetrievalDetector.get_option("square_sync_use_image") - {'option'}
	WordPressStorageDetector.update_option("square_sync_experimental", FALSE) - {'option'}
	WordPressRetrievalDetector.get_option("square_sync_use_image") - {'option'}
	WordPressRetrievalDetector.get_option("square_sync_set_category") - {'option'}
	WordPressRetrievalDetector.get_option("square_sync_version") - {'option'}
	WordPressRetrievalDetector.get_option("square_sync_link") - {'option'}
	WordPressRetrievalDetector.get_option("square_sync_cache") - {'option'}
	DeletionDetector.delete_option("square_sync_use_image") - {'option'}
	UninstallDetector.delete_option("square_sync_use_image") - {'option'}
	UninstallDetector.delete_option("square_sync_set_category") - {'option'}
	WordPressStorageDetector.update_option("square_sync_experimental", FALSE) - {'option'}
	UninstallDetector.delete_option("square_sync_image_x") - {'option'}
	WordPressRetrievalDetector.get_option("square_sync_experimental") - {'option'}
	WordPressStorageDetector.update_option("square_sync_crop_x", SQUARE_SYNC_CROP) - {'option'}
	WordPressStorageDetector.update_option("square_sync_cache", FALSE) - {'option'}
	UninstallDetector.delete_option("square_sync_link") - {'option'}
	WordPressStorageDetector.update_option("square_sync_image_y", SQUARE_SYNC_IMAGE) - {'option'}
	DeletionDetector.delete_option("square_sync_version") - {'option'}
remote
	WordPressRemoteDetector.(unknown) - {'remote'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:12.448929.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 798 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.459793.

798 STORE_REACHES edges created
798 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
In total, tainted 0 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
In total, tainted 0 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:00.008106.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:00:29.451867!
DELETION call to delete_option("square_sync_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("square_sync_access_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("square_sync_use_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("square_sync_image_x") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("square_sync_image_y") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("square_sync_crop_x") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("square_sync_crop_y") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("square_sync_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("square_sync_set_category") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("square_sync_link") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("square_sync_experimental") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("square_sync_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("square_sync_access_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("square_sync_use_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("square_sync_image_x") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("square_sync_image_y") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("square_sync_crop_x") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("square_sync_crop_y") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("square_sync_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("square_sync_set_category") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("square_sync_link") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("square_sync_experimental") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
API call to wp_remote_request($url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,['https://connect.squareup.com/v1/me']
RETRIEVAL call to get_option("square_sync_set_category") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("square_sync_use_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("square_sync_image_x") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("square_sync_image_y") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("square_sync_crop_x") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("square_sync_crop_y") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("square_sync_link") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("square_sync_experimental") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("square_sync_set_category") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("square_sync_set_category") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("square_sync_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("square_sync_access_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("square_sync_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("square_sync_access_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("square_sync_set_category") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("square_sync_use_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("square_sync_crop_x") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("square_sync_crop_y") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("square_sync_link") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("square_sync_experimental") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("square_sync_link") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
STORAGE call to update_option("square_sync_cache", FALSE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("square_sync_cache", TRUE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("square_sync_cache", FALSE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("square_sync_cache", TRUE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("square_sync_version", SQUARE_SYNC_VERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("square_sync_image_x", SQUARE_SYNC_IMAGE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("square_sync_image_y", SQUARE_SYNC_IMAGE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("square_sync_crop_x", SQUARE_SYNC_CROP) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("square_sync_crop_y", SQUARE_SYNC_CROP) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("square_sync_cache", FALSE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("square_sync_cache", FALSE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("square_sync_link", FALSE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("square_sync_experimental", FALSE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("square_sync_access_token", $square_sync_token) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("square_sync_use_image", TRUE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("square_sync_use_image", FALSE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("square_sync_set_category", TRUE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("square_sync_set_category", FALSE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("square_sync_crop_x", $square_sync_crop_x) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("square_sync_crop_x", 450) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("square_sync_crop_y", $square_sync_crop_y) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("square_sync_crop_y", 450) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("square_sync_link", TRUE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("square_sync_link", FALSE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("square_sync_experimental", TRUE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("square_sync_link", TRUE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("square_sync_experimental", FALSE) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("square_sync_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("square_sync_access_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("square_sync_use_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("square_sync_image_x") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("square_sync_image_y") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("square_sync_crop_x") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("square_sync_crop_y") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("square_sync_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("square_sync_set_category") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("square_sync_link") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("square_sync_experimental") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found no personal data in the plugin. No analysis needed. 

[main] Complaint? True 

No findings
