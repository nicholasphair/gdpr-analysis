Timeout in resolving values
Timeout in running neo4j query
Running Main.py on awcode-toolkit

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.360215.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:00.977593.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 0 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.425636.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 1 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.868149.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 449 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:01.045863.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 0 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.682098.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.124449.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 186 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:03.943590.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 3325
Added 2689 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 3325
Added 0 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.400636.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/awcode-toolkit/aw-toolkit.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/awcode-toolkit/includes/class.awtoolkit-general.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/awcode-toolkit/includes/class.awtoolkit-setting.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/awcode-toolkit/includes/class.awtoolkit-woocommerce.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/awcode-toolkit/includes/class.awtoolkit-woo-product-suppliers.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/awcode-toolkit/includes/cloudflare-flexible-ssl.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/awcode-toolkit/includes/settings-template.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/awcode-toolkit/templete/supplier_add.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/awcode-toolkit/templete/supplier_list.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:01.036450.

1 REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
3324 PHP_REACHES edges created
3325 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 1262 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.225937.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:04.283747.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 50 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:01.964663.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 36 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.186214.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.576900.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.428215.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.014122.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.045126.

86 PHP_REACHES edges created
86 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 53 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.139289.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
12 SQL operations to process.
show tables
SQL command (show tables) cannot be parsed correct.
DESCRIBE esc_sql($table)
SQL command (DESCRIBE esc_sql($table)) cannot be parsed correct.
SELECT * FROM `esc_sql($table)`
SQL command (SELECT * FROM `esc_sql($table)`) cannot be parsed correct.
UPDATE esc_sql($table) SET implode(", ", $update_sql) WHERE implode(" AND ", array_filter($where_sql))
SQL command (UPDATE esc_sql($table) SET implode(", ", $update_sql) WHERE implode(" AND ", array_filter($where_sql))) cannot be parsed correct.
SELECT ID , post_title FROM $wpdb WHERE post_type='supplier' AND post_title='$_REQUEST__supplier'
SQL command (SELECT ID , post_title FROM $wpdb WHERE post_type='supplier' AND post_title='$_REQUEST__supplier') cannot be parsed correct.
SELECT ID , post_title FROM $wpdb WHERE post_type='supplier' AND post_title like '%$_POST__supplier%'
SQL command (SELECT ID , post_title FROM $wpdb WHERE post_type='supplier' AND post_title like '%$_POST__supplier%') cannot be parsed correct.
SELECT ID , post_title FROM $wpdb WHERE post_type='supplier' AND post_title='$_REQUEST__supplier'
SQL command (SELECT ID , post_title FROM $wpdb WHERE post_type='supplier' AND post_title='$_REQUEST__supplier') cannot be parsed correct.
SELECT ID , post_title FROM $wpdb WHERE post_type='supplier' AND post_title='$_REQUEST__supplier'
SQL command (SELECT ID , post_title FROM $wpdb WHERE post_type='supplier' AND post_title='$_REQUEST__supplier') cannot be parsed correct.

            SELECT DISTINCT pm.meta_value FROM $wpdb pm
            LEFT JOIN $wpdb p ON p.ID = pm.post_id
            WHERE pm.meta_key = '_supplier'
            AND p.post_status IN ('publish', 'draft')
            ORDER BY pm.meta_value

            SELECT DISTINCT pm.meta_value FROM $wpdb pm
            LEFT JOIN $wpdb p ON p.ID = pm.post_id
            WHERE pm.meta_key = '_supplier'
            AND p.post_status IN ('publish', 'draft')
            ORDER BY pm.meta_value
SQL command ( SELECT DISTINCT pm.meta_value FROM $wpdb pm LEFT JOIN $wpdb p ON p.ID = pm.post_id WHERE pm.meta_key = '_supplier' AND p.post_status IN ('publish', 'draft') ORDER BY pm.meta_value) cannot be parsed correct.
meta_query
SQL command (meta_query) cannot be parsed correct.
 SELECT SUM( order_item_meta_3.meta_value ) as val FROM $wpdbwoocommerce_order_items as order_items

	LEFT JOIN $wpdbwoocommerce_order_itemmeta as order_item_meta ON order_items.order_item_id = order_item_meta.order_item_id
	LEFT JOIN $wpdbwoocommerce_order_itemmeta as order_item_meta_2 ON order_items.order_item_id = order_item_meta_2.order_item_id
	LEFT JOIN $wpdbwoocommerce_order_itemmeta as order_item_meta_3 ON order_items.order_item_id = order_item_meta_3.order_item_id
	LEFT JOIN $wpdb AS posts ON order_items.order_id = posts.ID

	WHERE posts.post_type = 'shop_order'                   
	AND posts.post_status IN ( 'implode("\',\'", $post_status)' )
	AND order_items.order_item_type = 'line_item'
	AND order_item_meta.meta_key = '_qty'
	AND order_item_meta_2.meta_key = '_product_id'
	AND order_item_meta_2.meta_value = $product_id
	AND order_item_meta_3.meta_key = '_line_total'

	GROUP BY order_item_meta_2.meta_value
	
 SELECT SUM( order_item_meta_3.meta_value ) as val FROM $wpdbwoocommerce_order_items as order_items

	LEFT JOIN $wpdbwoocommerce_order_itemmeta as order_item_meta ON order_items.order_item_id = order_item_meta.order_item_id
	LEFT JOIN $wpdbwoocommerce_order_itemmeta as order_item_meta_2 ON order_items.order_item_id = order_item_meta_2.order_item_id
	LEFT JOIN $wpdbwoocommerce_order_itemmeta as order_item_meta_3 ON order_items.order_item_id = order_item_meta_3.order_item_id
	LEFT JOIN $wpdb AS posts ON order_items.order_id = posts.ID

	WHERE posts.post_type = 'shop_order'                   
	AND posts.post_status IN ( 'implode("\',\'", $post_status)' )
	AND order_items.order_item_type = 'line_item'
	AND order_item_meta.meta_key = '_qty'
	AND order_item_meta_2.meta_key = '_product_id'
	AND order_item_meta_2.meta_value = $product_id
	AND order_item_meta_3.meta_key = '_line_total'

	GROUP BY order_item_meta_2.meta_value
	
SQL command ( SELECT SUM( order_item_meta_3.meta_value ) as val FROM $wpdbwoocommerce_order_items as order_items LEFT JOIN $wpdbwoocommerce_order_itemmeta as order_item_meta ON order_items.order_item_id = order_item_meta.order_item_id LEFT JOIN $wpdbwoocommerce_order_itemmeta as order_item_meta_2 ON order_items.order_item_id = order_item_meta_2.order_item_id LEFT JOIN $wpdbwoocommerce_order_itemmeta as order_item_meta_3 ON order_items.order_item_id = order_item_meta_3.order_item_id LEFT JOIN $wpdb AS posts ON order_items.order_id = posts.ID WHERE posts.post_type = 'shop_order' AND posts.post_status IN ( 'implode("\',\'", $post_status)' ) AND order_items.order_item_type = 'line_item' AND order_item_meta.meta_key = '_qty' AND order_item_meta_2.meta_key = '_product_id' AND order_item_meta_2.meta_value = $product_id AND order_item_meta_3.meta_key = '_line_total' GROUP BY order_item_meta_2.meta_value ) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [817, 906, 971, 1215, 2151, 2446, 2804, 3473, 3690, 3854, 3956, 4568]
Added 0 SQL nodes. 0 out of 12 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:05.010891.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'get_option("aw_maint_title")'' cannot be parsed correct.
HTML code '$'get_option("aw_maint_title")'' cannot be parsed correct.
HTML code '$'get_option("aw_maint_message")'' cannot be parsed correct.
HTML code '$'supplier_get_template("templete", "supplier_list")'' cannot be parsed correct.
HTML code '$'supplier_get_template("templete", "supplier_add")'' cannot be parsed correct.
HTML code '$'ucfirst($text)'' cannot be parsed correct.
HTML code '$'$post_id'' cannot be parsed correct.
HTML code '$'get_post_meta($post_id, "_supplier", true)'' cannot be parsed correct.
HTML code '$'site_url()'' cannot be parsed correct.
HTML code '$'site_url()'' cannot be parsed correct.
HTML code '$'json_encode("")'' cannot be parsed correct.
HTML code '$'json_encode($result)'' cannot be parsed correct.
HTML code '$'json_encode("no_data")'' cannot be parsed correct.
HTML code '$'<h4 style=\'margin-bottom: 5px;\'>get_post_meta($item->get_product_id(), "_supplier", true)</h4>'' cannot be parsed correct.
HTML code '$'<li>$val</li>'' cannot be parsed correct.
HTML code '$'<option value=$key"$value</option>'' cannot be parsed correct.
HTML code '$'<option value="0">Filter by supplier </option>'' cannot be parsed correct.
HTML code '$'<option value=$supplier>$supplier </option>'' cannot be parsed correct.
HTML code '$'<option  value="unknown">Unknown </option>'' cannot be parsed correct.
HTML code '$'awtoolkit_get_total_sales_per_product($postid)'' cannot be parsed correct.
HTML code '$'awtoolkit_get_dimensions_per_product($postid)'' cannot be parsed correct.
HTML code '$' <span title=wc_get_customer_order_count($user_id) Total orders">wc_get_customer_order_count($user_id))</span>'' cannot be parsed correct.
HTML code '$'<br><small>UTM $k: $v</small>'' cannot be parsed correct.
HTML code '$'admin_url("options-general.php?page=awtoolbox")'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'get_option("aw_maint_title")Website coming soon!'' cannot be parsed correct.
HTML code '$'get_option("aw_maint_message")'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'<option name=array_values($v)_0"selected="selected">array_values($v)_0</option>'' cannot be parsed correct.
HTML code '$'$replace_msg'' cannot be parsed correct.
HTML code '$'site_url()'' cannot be parsed correct.
HTML code '$'$_GET_post_id'' cannot be parsed correct.
HTML code '$'wp_create_nonce("add-new-supplier")'' cannot be parsed correct.
HTML code '$'site_url()'' cannot be parsed correct.
HTML code '$'ucfirst($_GET["message"])'' cannot be parsed correct.
HTML code '$'site_url()'' cannot be parsed correct.
HTML code '$'get_the_ID()'' cannot be parsed correct.
HTML code '$'get_post_meta(get_the_ID(), "_supplier_info", false)_0'' cannot be parsed correct.
HTML code '$'site_url()'' cannot be parsed correct.
HTML code '$'get_the_ID()'' cannot be parsed correct.
HTML code '$'site_url()'' cannot be parsed correct.
HTML code '$'get_the_ID()'' cannot be parsed correct.
HTML code '$'<li style="float: left;"><a href="edit.php?post_type=product&page=manage-suppliers&paged=1" style="display: block;padding: 0 5px;">1</a></li>'' cannot be parsed correct.
HTML code '$'<li style="float: left;"><a href="#" style="display: block;padding: 0 5px;color: #000;">1</a></li>'' cannot be parsed correct.
HTML code '$'<html><head><title>'' cannot be parsed correct.
HTML code '$'</title></head><body style="text-align:center; padding-top:5em; font-family:arial;"><h1>'' cannot be parsed correct.
HTML code '$'</h1><p>'' cannot be parsed correct.
HTML code '$'</p></body></html>'' cannot be parsed correct.
HTML code '$'<script>window.location.href = "edit.php?post_type=product&page=manage-suppliers&message=deleted";</script>'' cannot be parsed correct.
HTML code '$'/wp-admin/admin-ajax.php\',
                data:{
                    \'action\': \'check_supplier\',
                    \'_supplier\': jQuery(this).val()
                },
                type: \'POST\', // POST
                dataType: \'json\',
                beforeSend:function(xhr){},
                success:function(data){
                    // console.log(jQuery(\'._supplier_field .auto-complete\').length);
                    if(jQuery(\'._supplier_field .auto-complete\').length > 0){
                        jQuery(\'._supplier_field .auto-complete\').remove();
                    }
                    if(jQuery(\'._supplier_field .alert-new-sup\').length > 0){
                        jQuery(\'._supplier_field .alert-new-sup\').remove();
                    }
                    if(jQuery(\'._supplier_field ._supplier_id\').length > 0){
                        jQuery(\'._supplier_field ._supplier_id\').val(\'\');
                    }
                    if(data == \'no_data\'){
                        if(jQuery(\'._supplier_field .auto-complete\').length > 0){
                            jQuery(\'._supplier_field .auto-complete\').remove();
                        }
                        if(jQuery(\'._supplier_field .alert-new-sup\').length > 0){
                            jQuery(\'._supplier_field .alert-new-sup\').remove();
                        }
                        if(jQuery(\'._supplier_field ._supplier_id\').length > 0){
                            jQuery(\'._supplier_field ._supplier_id\').val(\'\');
                        }
                    }else if(data != \'\' && data != \'no_data\'){
                        let list = \'\';
                        list += \'<ul class="auto-complete" style="width: 50%;max-height: 200px;overflow: auto;margin-block-start: 6px;clear: left;">\';
                        for (var i = 0; i < data.length; i++) {
                            list += \'<li style="padding: 5px;border: 1px solid #7e8993;padding: 0px 5px;margin-bottom: 0;cursor: pointer;" onclick="selectSupplier(\'+data[i].ID+\',\\'\'+data[i].post_title+\'\\')">\'+data[i].post_title+\'</li>\';
                        }
                        list += \'</ul>\';

                        jQuery(\'._supplier_field\').append(list);
                        if(jQuery(\'.custom_field_supplier ._supplier_field .auto-complete\').length > 0){
                            jQuery(\'.custom_field_supplier ._supplier_field .auto-complete\').css(\'width\',\'99%\');
                        }
                    }else{
                        jQuery(\'._supplier_field\').append(\'<div class="alert-new-sup" style="width: 50%;color: green;">New supplier</div>\');
                    }
                }
            });
        });

            jQuery(\'#_supplier_bulk\').on(\'keyup\',function(){
            
            jQuery.ajax({
                url: \''' cannot be parsed correct.
HTML code '$'/wp-admin/admin-ajax.php\',
                data:{
                    \'action\': \'check_supplier\',
                    \'_supplier\': jQuery(this).val()
                },
                type: \'POST\', // POST
                dataType: \'json\',
                beforeSend:function(xhr){},
                success:function(data){
                    // console.log(jQuery(\'._supplier_field .auto-complete\').length);
                    if(jQuery(\'._supplier_field_bulk .auto-complete\').length > 0){
                        jQuery(\'._supplier_field_bulk .auto-complete\').remove();
                    }
                    if(jQuery(\'._supplier_field_bulk .alert-new-sup\').length > 0){
                        jQuery(\'._supplier_field_bulk .alert-new-sup\').remove();
                    }
                    if(jQuery(\'._supplier_field_bulk ._supplier_id\').length > 0){
                        jQuery(\'._supplier_field_bulk ._supplier_id\').val(\'\');
                    }
                    if(data == \'no_data\'){
                        if(jQuery(\'._supplier_field_bulk .auto-complete\').length > 0){
                            jQuery(\'._supplier_field_bulk .auto-complete\').remove();
                        }
                        if(jQuery(\'._supplier_field_bulk .alert-new-sup\').length > 0){
                            jQuery(\'._supplier_field_bulk .alert-new-sup\').remove();
                        }
                        if(jQuery(\'._supplier_field_bulk ._supplier_id\').length > 0){
                            jQuery(\'._supplier_field_bulk ._supplier_id\').val(\'\');
                        }
                    }else if(data != \'\' && data != \'no_data\'){
                        let list = \'\';
                        list += \'<ul class="auto-complete" style="width: 50%;max-height: 200px;overflow: auto;margin-block-start: 6px;clear: left;margin-top: 0;">\';
                        for (var i = 0; i < data.length; i++) {
                            list += \'<li style="padding: 5px;border: 1px solid #7e8993;padding: 0px 5px;margin-bottom: 0;cursor: pointer;" onclick="selectSupplierBulk(\'+data[i].ID+\',\\'\'+data[i].post_title+\'\\')">\'+data[i].post_title+\'</li>\';
                        }
                        list += \'</ul>\';

                        jQuery(\'._supplier_field_bulk\').append(list);
                        if(jQuery(\'._supplier_field_bulk .auto-complete\').length > 0){
                            jQuery(\'._supplier_field_bulk .auto-complete\').css(\'width\',\'99%\');
                        }
                    }else{
                        jQuery(\'._supplier_field_bulk\').append(\'<div class="alert-new-sup" style="width: 50%;color: green;">New supplier</div>\');
                    }
                }
            });

            
        });

        function selectSupplier(id, name){
            jQuery(\'#_supplier\').val(name);
            if(jQuery(\'._supplier_field ._supplier_id\').length > 0){
                jQuery(\'._supplier_field ._supplier_id\').val(id);
            }else{
                jQuery(\'._supplier_field\').append(\'<input type="hidden" class="_supplier_id" name="_supplier_id" value="\'+id+\'">\');
            }
            jQuery(\'._supplier_field .auto-complete\').remove();
        }
        function selectSupplierBulk(id, name){
            jQuery(\'#_supplier_bulk\').val(name);
            if(jQuery(\'._supplier_field_bulk ._supplier_id\').length > 0){
                jQuery(\'._supplier_field_bulk ._supplier_id\').val(id);
            }else{
                jQuery(\'._supplier_field_bulk\').append(\'<input type="hidden" class="_supplier_id" name="_supplier_id" value="\'+id+\'">\');
            }
            jQuery(\'._supplier_field_bulk .auto-complete\').remove();
        }

    </script>
'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'<ul style="list-style: none;padding-left: 15px;margin-top: 5px;">'' cannot be parsed correct.
HTML code '$'</ul>'' cannot be parsed correct.
HTML code '$'<select id="supplier-filter" name="supplier">'' cannot be parsed correct.
HTML code '$'</select>'' cannot be parsed correct.
HTML code '$'success'' cannot be parsed correct.
HTML code '$'">
        <input type="hidden" name="action" value="updating-awtoolkit">
        '' cannot be parsed correct.
HTML code '$'>
                    <label for="aw_maint_mode">Hide your site content from non-admin users while work is in progress.</label>
                </p>
                <p>
                    <label for="aw_maint_title">Title</label>
                    <input type="text" name="aw_maint_title" id="aw_maint_title" value="'' cannot be parsed correct.
HTML code '$'">
                </p>
                <label for="aw_maint_message">Content</label>
                <textarea name="aw_maint_message" style="width:100%;">'' cannot be parsed correct.
HTML code '$'</textarea>
            </div>
            <div class="awbox">
                <h4>Woocommerce</h4>
                <p>
                    <input type="checkbox" name="aw_woo_prod_sales_count" id="aw_woo_prod_sales_count" '' cannot be parsed correct.
HTML code '$'>
                    <label for="aw_woo_prod_sales_count">Woocommerce product list will display total count of sales for each product</label>
                </p>
                <p>
                    <input type="checkbox" name="aw_woo_prod_dimensions" id="aw_woo_prod_dimensions" '' cannot be parsed correct.
HTML code '$'>
                    <label for="aw_woo_prod_dimensions">Woocommerce product list will display dimensions of each product</label>
                </p>
                <p>
                    <input type="checkbox" name="aw_woo_past_order_count" id="aw_woo_past_order_count" '' cannot be parsed correct.
HTML code '$'>
                    <label for="aw_woo_past_order_count">Woocommerce order list will display count of past orders for the customer</label>
                </p>
                <p>
                    <input type="checkbox" name="aw_woo_utm" id="aw_woo_utm" '' cannot be parsed correct.
HTML code '$' >
                    <label for="aw_woo_utm">Woocommerce orders will track UTM parameters from inbound links</label>
                </p>
                <p>
                    <input type="checkbox" name="aw_woo_msp" id="aw_woo_msp" '' cannot be parsed correct.
HTML code '$' >
                    <label for="aw_woo_msp">Manage suppliers per product</label>
                </p>
            </div>
            <div class="awbox">
                <h4>Cloudflare Flexible SSL</h4>
                <p>Prevent Cloudflare Flexible SSL from causing errors with a redirect loop.</p>
                <p>This works automatically if cloudflare is enabled for your site, no configuration necessary.</p>
                <p><a href="https://www.cloudflare.com" target="_blank">Cloudflare</a> can help speed up and secure your website as well as provide free SSL certificates.</p>
            </div>
            <div class="awbox">
                <h4>Database find and replace <span style="color:orange;"> - Warning, can damage website if used incorrectly, backup site first</span></h4>
                <p>Find and replace all instances of a word in specific database tables, safely handling serialized data.</p>
                <div class="postbox-container" style="width:31%; padding: 0 1%;">
                    <label for="replace_table">Database Table</label>
                    <select name="replace_table" id="replace_table" style="width:100%;">
                        '' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'/wp-admin/admin-ajax.php" method="POST">
			'' cannot be parsed correct.
HTML code '$'">
		'' cannot be parsed correct.
HTML code '$'">
			<input type="hidden" name="_wp_http_referer" value="'' cannot be parsed correct.
HTML code '$'/wp-admin/edit.php?post_type=product&page=manage-suppliers">
			<div class="form-group">
				<label>Name</label>
				<input type="text" name="name" class="form-control" required value="'' cannot be parsed correct.
HTML code '$'">
			</div>
			<div class="form-group">
				<label>Contact info</label>
				<textarea name="info" class="form-control" rows="4" cols="5">'' cannot be parsed correct.
HTML code '$'</textarea>
			</div>
			<div class="text-right">
				<input type="submit" class="btn btn-submit" name="submit" value="Save">
			</div>
		</form>
	</div>
</div>


<style type="text/css">
	.supplier .form-control{
		width: 100%;
		border-radius: 5px;
		border: 1px solid #d0d0d0;
	}
	.form-group{
		margin-bottom: 15px;
	}
	.text-center{
		text-align: center;
	}
	.text-right{
		text-align: right;
	}
	.text-left{
		text-align: left;
	}
	.supplier .btn.btn-submit{
		white-space: nowrap;
	    background: #007cba;
	    border: 1px solid #007cba;
	    color: #fff;
	    text-decoration: none;
	    text-shadow: none;
    	font-size: 13px;
    	cursor: pointer;
	    transition: box-shadow .1s linear;
	    height: 36px;
	    align-items: center;
	    box-sizing: border-box;
	    padding: 0 15px;
	    overflow: hidden;
	    border-radius: 3px;
	}
</style>

<script type="text/javascript">
	jQuery(\'#supplier_addnew\').on(\'submit\',function(e){
		e.preventDefault();
		let formData = new FormData(this);
		let url = jQuery(this).attr(\'action\');
	    jQuery.ajax({
	         type: \'POST\',
	         url: url,
	         data: formData,
	         processData: false,
	         contentType: false,
	         success: function(response) {
	         	if(response == \'success\'){
	         		window.location.href = jQuery(\'#supplier_addnew input[name="_wp_http_referer"]\').val();
	         	}else{
	         		alert("error.");
	         	}
	    		return false;
	         },
	        error: function() {
	            alert("There was an error submitting comment");
	    		return false;
	        }
	     });

	    return false;
	});
</script>'' cannot be parsed correct.
HTML code '$'</div>
	'' cannot be parsed correct.
HTML code '$'/wp-admin/edit.php?post_type=product&page=manage-suppliers&action=edit&post_id='' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</a>
						</strong>
					</div>
				</td>
				<td>'' cannot be parsed correct.
HTML code '$'/wp-admin/edit.php?post_type=product&page=manage-suppliers&action=edit&post_id='' cannot be parsed correct.
HTML code '$'">Edit</a> 
					<a class="page-title-action" href="'' cannot be parsed correct.
HTML code '$'/wp-admin/edit.php?post_type=product&page=manage-suppliers&action=delete&post_id='' cannot be parsed correct.
HTML code '$'" onclick="return confirmDelete()">Delete</a>
				</td>
			</tr>
		'' cannot be parsed correct.
HTML code '$'<ul style="list-style: none;float: right;">'' cannot be parsed correct.
HTML code '$'</ul>'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:07.573463.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.048729.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 1 do_action/apply_filters calls and 31 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:01.337483.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbaseDetector
### Start running FrontBaseDetector
### Finish running DbplusDetector
### Start running HashDetector
### Finish running FileProDetector
### Start running IBMDb2Detector
### Finish running FirebirdInterBaseDetector
### Start running InformixDetector
### Finish running CubridDetector
### Start running IngresDetector
### Finish running IngresDetector
### Start running maxdbDetector
### Finish running FrontBaseDetector
### Start running MongoDbDetector
### Finish running InformixDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running MySQLDetector
### Start running MySQLiDetector
### Finish running MsqlDetector
### Start running Oci8Detector
### Finish running MongoDbDetector
### Start running OpenSSLDetector
### Finish running Oci8Detector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running HashDetector
### Start running PhpCurlDetector
### Finish running ArrayElementDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PasswordHashingDetector
### Start running PHPRetrievalDetector
### Finish running PhpCurlDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPIncludedDetector
### Start running PhpVarDetector
### Finish running OpenSSLDetector
### Start running PostgreSQLDetector
### Finish running PostgreSQLDetector
### Start running PropertyDetector
### Finish running PHPStorageDetector
### Start running Sqlite3Detector
### Finish running PHPRetrievalDetector
### Start running SqliteDetector
### Finish running SqliteDetector
### Start running SqlServerDetector
### Finish running PropertyDetector
### Start running SybaseDetector
### Finish running SybaseDetector
### Start running TokyoTyrantDetector
### Finish running Sqlite3Detector
### Start running UserInputDetector
### Finish running TokyoTyrantDetector
### Start running VariableDetector
### Finish running MySQLiDetector
### Start running WordpressHashingFnDetector
### Finish running maxdbDetector
### Start running WordPressRemoteDetector
### Finish running SqlServerDetector
### Start running WordPressRetrievalDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressStorageDetector
### Finish running WordPressRemoteDetector
### Start running WP_UserDetector
### Finish running PhpVarDetector
### Start running GenericDatabaseUsageDetector
### Finish running WP_UserDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running VariableDetector
### Start running UninstallDetector
### Finish running GenericDatabaseUsageDetector
### Finish running UserInputDetector
### Finish running DeletionDetector
### Finish running UninstallDetector
### Finish running WordPressRetrievalDetector
### Finish running WordPressStorageDetector
### Finished running detectors
includes/class.awtoolkit-woocommerce.php:90
  - variable '$orderby_statement' of personal types {'state'} is found.
  - Data types: state
includes/class.awtoolkit-woocommerce.php:115
  - variable '$orderby_statement' of personal types {'state'} is found.
  - Data types: state 

aw-toolkit.php:39
  - RETRIEVAL call to get_option("active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
aw-toolkit.php:48
  - RETRIEVAL call to get_option("aw_maint_mode") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
aw-toolkit.php:50
  - RETRIEVAL call to get_option("aw_maint_title") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
aw-toolkit.php:52
  - RETRIEVAL call to get_option("aw_maint_title") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
aw-toolkit.php:54
  - RETRIEVAL call to get_option("aw_maint_message") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class.awtoolkit-general.php:24
  - RETRIEVAL call to get_option(is_multisite()"active_sitewide_plugins""active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class.awtoolkit-general.php:33
  - RETRIEVAL call to get_option("active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class.awtoolkit-general.php:37
  - RETRIEVAL call to get_option("active_sitewide_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class.awtoolkit-setting.php:124
  - RETRIEVAL call to get_option("aw_update_site_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class.awtoolkit-woo-product-suppliers.php:2
  - RETRIEVAL call to get_option("aw_woo_msp") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class.awtoolkit-woo-product-suppliers.php:6
  - RETRIEVAL call to get_option("aw_woo_msp") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class.awtoolkit-woo-product-suppliers.php:22
  - RETRIEVAL call to get_post_meta($_GET["post_id"], "_supplier_info", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class.awtoolkit-woo-product-suppliers.php:32
  - RETRIEVAL call to get_option("aw_woo_msp") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class.awtoolkit-woo-product-suppliers.php:46
  - RETRIEVAL call to get_option("aw_woo_msp") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class.awtoolkit-woo-product-suppliers.php:102
  - RETRIEVAL call to get_option("aw_woo_msp") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class.awtoolkit-woo-product-suppliers.php:149
  - RETRIEVAL call to get_option("aw_woo_msp") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class.awtoolkit-woo-product-suppliers.php:160
  - RETRIEVAL call to get_post_meta($post_id, "_supplier", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class.awtoolkit-woo-product-suppliers.php:445
  - RETRIEVAL call to get_post_meta($product_id, "_supplier", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class.awtoolkit-woo-product-suppliers.php:470
  - RETRIEVAL call to get_post_meta($item->get_product_id(), "_supplier", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class.awtoolkit-woocommerce.php:7
  - RETRIEVAL call to get_option("aw_woo_prod_sales_count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class.awtoolkit-woocommerce.php:16
  - RETRIEVAL call to get_option("aw_woo_prod_sales_count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class.awtoolkit-woocommerce.php:24
  - RETRIEVAL call to get_option("aw_woo_prod_sales_count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class.awtoolkit-woocommerce.php:34
  - RETRIEVAL call to get_option("aw_woo_prod_dimensions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class.awtoolkit-woocommerce.php:43
  - RETRIEVAL call to get_option("aw_woo_prod_dimensions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class.awtoolkit-woocommerce.php:51
  - RETRIEVAL call to get_option("aw_woo_prod_dimensions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class.awtoolkit-woocommerce.php:64
  - RETRIEVAL call to get_option("aw_woo_past_order_count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class.awtoolkit-woocommerce.php:66
  - RETRIEVAL call to get_post_meta($order_id, "_customer_user", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class.awtoolkit-woocommerce.php:72
  - RETRIEVAL call to get_option("aw_woo_utm") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class.awtoolkit-woocommerce.php:73
  - RETRIEVAL call to get_post_meta($order_id, "_utm", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class.awtoolkit-woocommerce.php:91
  - RETRIEVAL call to get_option("aw_woo_prod_sales_count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class.awtoolkit-woocommerce.php:91
  - RETRIEVAL call to get_option("aw_woo_prod_dimensions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class.awtoolkit-woocommerce.php:150
  - RETRIEVAL call to get_post_meta($product_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int). Returns (mixed).
  - Data types: post_meta
includes/class.awtoolkit-woocommerce.php:171
  - RETRIEVAL call to get_option("aw_woo_utm") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/settings-template.php:27
  - RETRIEVAL call to get_option("aw_maint_mode") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/settings-template.php:32
  - RETRIEVAL call to get_option("aw_maint_title") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/settings-template.php:32
  - RETRIEVAL call to get_option("aw_maint_title") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/settings-template.php:35
  - RETRIEVAL call to get_option("aw_maint_message") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/settings-template.php:40
  - RETRIEVAL call to get_option("aw_woo_prod_sales_count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/settings-template.php:44
  - RETRIEVAL call to get_option("aw_woo_prod_dimensions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/settings-template.php:48
  - RETRIEVAL call to get_option("aw_woo_past_order_count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/settings-template.php:52
  - RETRIEVAL call to get_option("aw_woo_utm") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/settings-template.php:56
  - RETRIEVAL call to get_option("aw_woo_msp") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
templete/supplier_add.php:15
  - RETRIEVAL call to get_post($_GET["post_id"]) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, post_meta, wp_post
templete/supplier_add.php:17
  - RETRIEVAL call to get_post_meta($_GET["post_id"], "_supplier_info", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
templete/supplier_list.php:62
  - RETRIEVAL call to get_post_meta(get_the_ID(), "_supplier_info", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta 

includes/class.awtoolkit-general.php:34
  - STORAGE call to update_option("active_plugins", $active_plugins) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class.awtoolkit-general.php:38
  - STORAGE call to update_option("active_sitewide_plugins", $active_plugins) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class.awtoolkit-setting.php:12
  - STORAGE call to update_option("aw_woo_prod_sales_count", isset($_POST["aw_woo_prod_sales_count"])$_POST["aw_woo_prod_sales_count"]"", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
includes/class.awtoolkit-setting.php:13
  - STORAGE call to update_option("aw_woo_prod_dimensions", isset($_POST["aw_woo_prod_dimensions"])$_POST["aw_woo_prod_dimensions"]"", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
includes/class.awtoolkit-setting.php:14
  - STORAGE call to update_option("aw_woo_past_order_count", isset($_POST["aw_woo_past_order_count"])$_POST["aw_woo_past_order_count"]"", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
includes/class.awtoolkit-setting.php:15
  - STORAGE call to update_option("aw_woo_utm", isset($_POST["aw_woo_utm"])$_POST["aw_woo_utm"]"", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
includes/class.awtoolkit-setting.php:16
  - STORAGE call to update_option("aw_woo_msp", isset($_POST["aw_woo_msp"])$_POST["aw_woo_msp"]"", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
includes/class.awtoolkit-setting.php:17
  - STORAGE call to update_option("aw_maint_mode", isset($_POST["aw_maint_mode"])$_POST["aw_maint_mode"]"", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
includes/class.awtoolkit-setting.php:18
  - STORAGE call to update_option("aw_maint_title", isset($_POST["aw_maint_title"])$_POST["aw_maint_title"]"Website coming soon!", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
includes/class.awtoolkit-setting.php:19
  - STORAGE call to update_option("aw_maint_message", isset($_POST["aw_maint_message"])$_POST["aw_maint_message"]"", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
includes/class.awtoolkit-setting.php:92
  - STORAGE call to update_option("aw_update_site_url", $edited_data) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class.awtoolkit-setting.php:125
  - STORAGE call to update_option("siteurl", $site_url) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class.awtoolkit-setting.php:126
  - STORAGE call to delete_option("aw_update_site_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/class.awtoolkit-woo-product-suppliers.php:23
  - STORAGE call to wp_delete_post($_GET["post_id"], true) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post, post_meta, wp_post
includes/class.awtoolkit-woo-product-suppliers.php:24
  - STORAGE call to delete_metadata("supplier", $_GET["post_id"], "_supplier_info", $meta_value) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 2: $meta_key (string), 3: $meta_value (mixed). Returns (bool).
  - Data types: meta
includes/class.awtoolkit-woo-product-suppliers.php:117
  - STORAGE call to update_post_meta($post_id, "_supplier_id", wc_clean($supplier_id)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class.awtoolkit-woo-product-suppliers.php:118
  - STORAGE call to update_post_meta($post_id, "_supplier", wc_clean($_supplier)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class.awtoolkit-woo-product-suppliers.php:124
  - STORAGE call to wp_insert_post(["post_type" => "supplier", "post_title" => $_REQUEST["_supplier"], "post_content" => "", "post_status" => "publish", "comment_status" => "closed", "ping_status" => "closed"]). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
includes/class.awtoolkit-woo-product-suppliers.php:133
  - STORAGE call to add_post_meta($supplier_id, "_supplier_info", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: post_meta
includes/class.awtoolkit-woo-product-suppliers.php:141
  - STORAGE call to update_post_meta($post_id, "_supplier_id", wc_clean($_supplier_id)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class.awtoolkit-woo-product-suppliers.php:142
  - STORAGE call to update_post_meta($post_id, "_supplier", wc_clean($_supplier)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class.awtoolkit-woo-product-suppliers.php:368
  - STORAGE call to wp_insert_post(["post_type" => "supplier", "post_title" => $_POST["name"], "post_content" => "", "post_status" => "publish", "comment_status" => "closed", "ping_status" => "closed"]). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
includes/class.awtoolkit-woo-product-suppliers.php:378
  - STORAGE call to add_post_meta($post_id, "_supplier_info", $_POST["info"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: post_meta
includes/class.awtoolkit-woo-product-suppliers.php:386
  - STORAGE call to wp_update_post($my_post). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
includes/class.awtoolkit-woo-product-suppliers.php:387
  - STORAGE call to update_post_meta($_POST["post_id"], "_supplier_info", $_POST["info"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class.awtoolkit-woo-product-suppliers.php:401
  - STORAGE call to update_post_meta($post_id, "_supplier_id", wc_clean($supplier_id)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class.awtoolkit-woo-product-suppliers.php:402
  - STORAGE call to update_post_meta($post_id, "_supplier", wc_clean($_supplier)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class.awtoolkit-woo-product-suppliers.php:408
  - STORAGE call to wp_insert_post(["post_type" => "supplier", "post_title" => $_REQUEST["_supplier"], "post_content" => "", "post_status" => "publish", "comment_status" => "closed", "ping_status" => "closed"]). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
includes/class.awtoolkit-woo-product-suppliers.php:417
  - STORAGE call to add_post_meta($supplier_id, "_supplier_info", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: post_meta
includes/class.awtoolkit-woo-product-suppliers.php:425
  - STORAGE call to update_post_meta($post_id, "_supplier_id", wc_clean($_supplier_id)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class.awtoolkit-woo-product-suppliers.php:426
  - STORAGE call to update_post_meta($post_id, "_supplier", wc_clean($_supplier)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class.awtoolkit-woo-product-suppliers.php:428
  - STORAGE call to update_post_meta($post_id, "_supplier_id", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class.awtoolkit-woo-product-suppliers.php:429
  - STORAGE call to update_post_meta($post_id, "_supplier", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class.awtoolkit-woo-product-suppliers.php:529
  - STORAGE call to update_post_meta($product_id, "_supplier_id", wc_clean($supplier_id)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class.awtoolkit-woo-product-suppliers.php:530
  - STORAGE call to update_post_meta($product_id, "_supplier", wc_clean($_supplier)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class.awtoolkit-woo-product-suppliers.php:537
  - STORAGE call to wp_insert_post(["post_type" => "supplier", "post_title" => $_REQUEST["_supplier"], "post_content" => "", "post_status" => "publish", "comment_status" => "closed", "ping_status" => "closed"]). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
includes/class.awtoolkit-woo-product-suppliers.php:546
  - STORAGE call to add_post_meta($supplier_id, "_supplier_info", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: post_meta
includes/class.awtoolkit-woo-product-suppliers.php:554
  - STORAGE call to update_post_meta($product_id, "_supplier_id", wc_clean($_supplier_id)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class.awtoolkit-woo-product-suppliers.php:555
  - STORAGE call to update_post_meta($product_id, "_supplier", wc_clean($_supplier)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class.awtoolkit-woo-product-suppliers.php:557
  - STORAGE call to update_post_meta($post_id, "_supplier_id", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class.awtoolkit-woo-product-suppliers.php:558
  - STORAGE call to update_post_meta($post_id, "_supplier", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta 

includes/class.awtoolkit-setting.php:126
  - DELETION call to delete_option("aw_update_site_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/class.awtoolkit-woo-product-suppliers.php:23
  - DELETION call to wp_delete_post($_GET["post_id"], true) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post, post_meta, wp_post 

By data type:
meta
	WordPressStorageDetector.delete_metadata("supplier", $_GET["post_id"], "_supplier_info", $meta_value) - {'meta'}
none
	WordPressStorageDetector.wp_insert_post(["post_type" => "supplier", "post_title" => $_REQUEST["_supplier"], "post_content" => "", "post_status" => "publish", "comment_status" => "closed", "ping_status" => "closed"]) - set()
	WordPressStorageDetector.wp_update_post($my_post) - set()
	WordPressStorageDetector.wp_insert_post(["post_type" => "supplier", "post_title" => $_REQUEST["_supplier"], "post_content" => "", "post_status" => "publish", "comment_status" => "closed", "ping_status" => "closed"]) - set()
	WordPressStorageDetector.wp_insert_post(["post_type" => "supplier", "post_title" => $_POST["name"], "post_content" => "", "post_status" => "publish", "comment_status" => "closed", "ping_status" => "closed"]) - set()
	WordPressStorageDetector.wp_insert_post(["post_type" => "supplier", "post_title" => $_REQUEST["_supplier"], "post_content" => "", "post_status" => "publish", "comment_status" => "closed", "ping_status" => "closed"]) - set()
option
	WordPressStorageDetector.update_option("aw_woo_prod_sales_count", isset($_POST["aw_woo_prod_sales_count"])$_POST["aw_woo_prod_sales_count"]"", "yes") - {'option'}
	WordPressStorageDetector.update_option("active_sitewide_plugins", $active_plugins) - {'option'}
	WordPressRetrievalDetector.get_option("aw_woo_prod_dimensions") - {'option'}
	WordPressStorageDetector.update_option("active_plugins", $active_plugins) - {'option'}
	WordPressRetrievalDetector.get_option("active_plugins") - {'option'}
	WordPressRetrievalDetector.get_option("active_plugins") - {'option'}
	WordPressStorageDetector.update_option("aw_woo_prod_dimensions", isset($_POST["aw_woo_prod_dimensions"])$_POST["aw_woo_prod_dimensions"]"", "yes") - {'option'}
	WordPressStorageDetector.update_option("aw_maint_mode", isset($_POST["aw_maint_mode"])$_POST["aw_maint_mode"]"", "yes") - {'option'}
	WordPressRetrievalDetector.get_option("aw_maint_title") - {'option'}
	WordPressRetrievalDetector.get_option("aw_update_site_url") - {'option'}
	WordPressRetrievalDetector.get_option("aw_woo_msp") - {'option'}
	WordPressStorageDetector.delete_option("aw_update_site_url") - {'option'}
	WordPressRetrievalDetector.get_option("aw_maint_message") - {'option'}
	WordPressStorageDetector.update_option("aw_maint_message", isset($_POST["aw_maint_message"])$_POST["aw_maint_message"]"", "yes") - {'option'}
	WordPressRetrievalDetector.get_option("aw_maint_title") - {'option'}
	WordPressRetrievalDetector.get_option("active_sitewide_plugins") - {'option'}
	WordPressRetrievalDetector.get_option("aw_woo_prod_sales_count") - {'option'}
	DeletionDetector.delete_option("aw_update_site_url") - {'option'}
	WordPressRetrievalDetector.get_option("aw_woo_msp") - {'option'}
	WordPressRetrievalDetector.get_option("aw_woo_msp") - {'option'}
	WordPressRetrievalDetector.get_option("aw_woo_past_order_count") - {'option'}
	WordPressRetrievalDetector.get_option("aw_maint_mode") - {'option'}
	WordPressStorageDetector.update_option("aw_maint_title", isset($_POST["aw_maint_title"])$_POST["aw_maint_title"]"Website coming soon!", "yes") - {'option'}
	WordPressRetrievalDetector.get_option(is_multisite()"active_sitewide_plugins""active_plugins") - {'option'}
	WordPressRetrievalDetector.get_option("aw_woo_msp") - {'option'}
	WordPressRetrievalDetector.get_option("aw_woo_msp") - {'option'}
	WordPressRetrievalDetector.get_option("aw_woo_prod_dimensions") - {'option'}
	WordPressRetrievalDetector.get_option("aw_woo_prod_sales_count") - {'option'}
	WordPressRetrievalDetector.get_option("aw_maint_message") - {'option'}
	WordPressRetrievalDetector.get_option("aw_woo_msp") - {'option'}
	WordPressRetrievalDetector.get_option("aw_maint_title") - {'option'}
	WordPressRetrievalDetector.get_option("aw_woo_prod_sales_count") - {'option'}
	WordPressRetrievalDetector.get_option("aw_woo_prod_sales_count") - {'option'}
	WordPressStorageDetector.update_option("aw_woo_msp", isset($_POST["aw_woo_msp"])$_POST["aw_woo_msp"]"", "yes") - {'option'}
	WordPressRetrievalDetector.get_option("aw_woo_prod_dimensions") - {'option'}
	WordPressStorageDetector.update_option("aw_update_site_url", $edited_data) - {'option'}
	WordPressRetrievalDetector.get_option("aw_woo_prod_sales_count") - {'option'}
	WordPressRetrievalDetector.get_option("aw_woo_utm") - {'option'}
	WordPressRetrievalDetector.get_option("aw_woo_utm") - {'option'}
	WordPressStorageDetector.update_option("aw_woo_utm", isset($_POST["aw_woo_utm"])$_POST["aw_woo_utm"]"", "yes") - {'option'}
	WordPressRetrievalDetector.get_option("aw_maint_mode") - {'option'}
	WordPressStorageDetector.update_option("aw_woo_past_order_count", isset($_POST["aw_woo_past_order_count"])$_POST["aw_woo_past_order_count"]"", "yes") - {'option'}
	WordPressRetrievalDetector.get_option("aw_woo_prod_dimensions") - {'option'}
	WordPressRetrievalDetector.get_option("aw_maint_title") - {'option'}
	WordPressRetrievalDetector.get_option("aw_woo_past_order_count") - {'option'}
	WordPressStorageDetector.update_option("siteurl", $site_url) - {'option'}
	WordPressRetrievalDetector.get_option("aw_woo_prod_dimensions") - {'option'}
	WordPressRetrievalDetector.get_option("aw_woo_utm") - {'option'}
	WordPressRetrievalDetector.get_option("aw_woo_msp") - {'option'}
post
	WordPressStorageDetector.wp_delete_post($_GET["post_id"], true) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($_GET["post_id"]) - {'post', 'post_meta', 'wp_post'}
	DeletionDetector.wp_delete_post($_GET["post_id"], true) - {'post', 'post_meta', 'wp_post'}
post_meta
	WordPressStorageDetector.update_post_meta($product_id, "_supplier", wc_clean($_supplier)) - {'post_meta'}
	WordPressStorageDetector.add_post_meta($supplier_id, "_supplier_info", "") - {'post_meta'}
	WordPressStorageDetector.wp_delete_post($_GET["post_id"], true) - {'post', 'post_meta', 'wp_post'}
	WordPressStorageDetector.update_post_meta($post_id, "_supplier_id", wc_clean($_supplier_id)) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_supplier", wc_clean($_supplier)) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product_id, "_supplier", wc_clean($_supplier)) - {'post_meta'}
	WordPressStorageDetector.add_post_meta($supplier_id, "_supplier_info", "") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_supplier_id", wc_clean($_supplier_id)) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product_id, "_supplier_id", wc_clean($supplier_id)) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_supplier", "") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product_id, "_supplier", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($_GET["post_id"], "_supplier_info", false) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product_id, "_supplier_id", wc_clean($_supplier_id)) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_supplier_id", "") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_supplier_id", wc_clean($supplier_id)) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_customer_user", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($_GET["post_id"], "_supplier_info", false) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_supplier_id", "") - {'post_meta'}
	WordPressRetrievalDetector.get_post($_GET["post_id"]) - {'post', 'post_meta', 'wp_post'}
	WordPressStorageDetector.update_post_meta($_POST["post_id"], "_supplier_info", $_POST["info"]) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($item->get_product_id(), "_supplier", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_supplier_id", wc_clean($supplier_id)) - {'post_meta'}
	DeletionDetector.wp_delete_post($_GET["post_id"], true) - {'post', 'post_meta', 'wp_post'}
	WordPressStorageDetector.add_post_meta($post_id, "_supplier_info", $_POST["info"]) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "_supplier_info", false) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_utm", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_supplier", wc_clean($_supplier)) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_supplier", "") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_supplier", wc_clean($_supplier)) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product_id) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "_supplier", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_supplier", wc_clean($_supplier)) - {'post_meta'}
	WordPressStorageDetector.add_post_meta($supplier_id, "_supplier_info", "") - {'post_meta'}
state
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
wp_post
	WordPressStorageDetector.wp_delete_post($_GET["post_id"], true) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($_GET["post_id"]) - {'post', 'post_meta', 'wp_post'}
	DeletionDetector.wp_delete_post($_GET["post_id"], true) - {'post', 'post_meta', 'wp_post'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:15.350277.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 675 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.604606.

675 STORE_REACHES edges created
675 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 4 nodes as PERSONAL
In total, tainted 4 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
In total, tainted 0 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:00.211996.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:00:58.759974!
DELETION call to delete_option("aw_update_site_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to wp_delete_post($_GET["post_id"], true) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
variable '$orderby_statement' of personal types {'state'} is found.,,None
variable '$orderby_statement' of personal types {'state'} is found.,,None
RETRIEVAL call to get_option("active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("aw_maint_mode") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("aw_maint_title") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("aw_maint_title") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("aw_maint_message") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(is_multisite()"active_sitewide_plugins""active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("active_sitewide_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("aw_update_site_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("aw_woo_msp") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("aw_woo_msp") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "_supplier", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("aw_woo_msp") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($_GET["post_id"], "_supplier_info", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("aw_woo_msp") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product_id, "_supplier", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("aw_woo_msp") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($item->get_product_id(), "_supplier", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("aw_woo_msp") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int). Returns (mixed).,None,None
RETRIEVAL call to get_option("aw_woo_prod_sales_count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("aw_woo_utm") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("aw_woo_prod_sales_count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("aw_woo_prod_dimensions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("aw_woo_prod_dimensions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("aw_woo_prod_dimensions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("aw_woo_past_order_count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_customer_user", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("aw_woo_prod_sales_count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("aw_woo_utm") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_utm", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("aw_woo_prod_dimensions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("aw_woo_prod_sales_count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("aw_maint_mode") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("aw_maint_title") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("aw_maint_title") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("aw_maint_message") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("aw_woo_prod_sales_count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("aw_woo_prod_dimensions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("aw_woo_past_order_count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("aw_woo_utm") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("aw_woo_msp") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($_GET["post_id"]) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($_GET["post_id"], "_supplier_info", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "_supplier_info", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
STORAGE call to update_option("active_plugins", $active_plugins) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("active_sitewide_plugins", $active_plugins) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("aw_woo_prod_sales_count", isset($_POST["aw_woo_prod_sales_count"])$_POST["aw_woo_prod_sales_count"]"", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("siteurl", $site_url) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("aw_update_site_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("aw_woo_prod_dimensions", isset($_POST["aw_woo_prod_dimensions"])$_POST["aw_woo_prod_dimensions"]"", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("aw_woo_past_order_count", isset($_POST["aw_woo_past_order_count"])$_POST["aw_woo_past_order_count"]"", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("aw_woo_utm", isset($_POST["aw_woo_utm"])$_POST["aw_woo_utm"]"", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("aw_woo_msp", isset($_POST["aw_woo_msp"])$_POST["aw_woo_msp"]"", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("aw_maint_mode", isset($_POST["aw_maint_mode"])$_POST["aw_maint_mode"]"", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("aw_maint_title", isset($_POST["aw_maint_title"])$_POST["aw_maint_title"]"Website coming soon!", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("aw_maint_message", isset($_POST["aw_maint_message"])$_POST["aw_maint_message"]"", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option("aw_update_site_url", $edited_data) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, "_supplier_id", wc_clean($supplier_id)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_supplier", wc_clean($_supplier)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_insert_post(["post_type" => "supplier", "post_title" => $_REQUEST["_supplier"], "post_content" => "", "post_status" => "publish", "comment_status" => "closed", "ping_status" => "closed"]). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to add_post_meta($supplier_id, "_supplier_info", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to update_post_meta($post_id, "_supplier_id", wc_clean($_supplier_id)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_supplier", wc_clean($_supplier)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_delete_post($_GET["post_id"], true) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
STORAGE call to delete_metadata("supplier", $_GET["post_id"], "_supplier_info", $meta_value) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 2: $meta_key (string), 3: $meta_value (mixed). Returns (bool).,None,None
STORAGE call to wp_insert_post(["post_type" => "supplier", "post_title" => $_POST["name"], "post_content" => "", "post_status" => "publish", "comment_status" => "closed", "ping_status" => "closed"]). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to add_post_meta($post_id, "_supplier_info", $_POST["info"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to wp_update_post($my_post). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($_POST["post_id"], "_supplier_info", $_POST["info"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_supplier_id", wc_clean($supplier_id)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_supplier", wc_clean($_supplier)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_insert_post(["post_type" => "supplier", "post_title" => $_REQUEST["_supplier"], "post_content" => "", "post_status" => "publish", "comment_status" => "closed", "ping_status" => "closed"]). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to add_post_meta($supplier_id, "_supplier_info", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to update_post_meta($post_id, "_supplier_id", wc_clean($_supplier_id)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_supplier", wc_clean($_supplier)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_supplier_id", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_supplier", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($product_id, "_supplier_id", wc_clean($supplier_id)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($product_id, "_supplier", wc_clean($_supplier)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_insert_post(["post_type" => "supplier", "post_title" => $_REQUEST["_supplier"], "post_content" => "", "post_status" => "publish", "comment_status" => "closed", "ping_status" => "closed"]). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to add_post_meta($supplier_id, "_supplier_info", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to update_post_meta($product_id, "_supplier_id", wc_clean($_supplier_id)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($product_id, "_supplier", wc_clean($_supplier)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_supplier_id", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_supplier", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] Storage check is NONE 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['encryption', 'third_party'] 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? True 

No findings
