Timeout in resolving values
Timeout in running neo4j query
Running Main.py on xo-event-calendar

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.765267.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:00.899251.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 19 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.287211.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 3 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.633240.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 1613 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:01.320654.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 16 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.729374.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.107677.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 599 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:09.450396.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 8650
Added 6400 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 9008
Added 358 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.540767.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/xo-event-calendar/uninstall.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/xo-event-calendar/xo-event-calendar.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/xo-event-calendar/inc/admin.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/xo-event-calendar/inc/class-xo-color.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/xo-event-calendar/inc/event-calendar-widget.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/xo-event-calendar/inc/main.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.892813.

19 PHP_REACHES edges created
3 REACHES edges created
1000 PHP_REACHES edges created
1613 PHP_REACHES edges created
16 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
6999 PHP_REACHES edges created
358 PHP_REACHES edges created
9008 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 2633 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.157086.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 7 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:01.967005.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 37 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:01.641658.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 37 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.130110.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.191636.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.410738.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.010674.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.035995.

7 CALLS edges created
74 PHP_REACHES edges created
81 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 68 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.131294.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
4 SQL operations to process.
SELECT blog_id FROM $wpdb
SQL command (SELECT blog_id FROM $wpdb) cannot be parsed correct.
SELECT blog_id FROM $wpdb
SQL command (SELECT blog_id FROM $wpdb) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [6977, 8364, 8373, 12161]
Added 0 SQL nodes. 0 out of 4 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:01.551927.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'</tr>
'' cannot be parsed correct.
HTML code '$'sprintf("%s %d:%02d", $d, $h, $m)'' cannot be parsed correct.
HTML code '$'date(get_option("date_format"), strtotime($d))'' cannot be parsed correct.
HTML code '$'sprintf("%s %d:%02d", $d, $h, $m)'' cannot be parsed correct.
HTML code '$'date(get_option("date_format"), strtotime($d))'' cannot be parsed correct.
HTML code '$'get_the_terms($post_id, XO_Event_Calendar->get_taxonomy_type())_0_name'' cannot be parsed correct.
HTML code '$'<label for="tag-category-color">Color</label>'' cannot be parsed correct.
HTML code '$'<input id="category_color" class="c-picker" type="text" name="cat_meta[category_color]" value="{"1": ["#33a02c"], "2": ["#4573b3"], "3": ["#cccc00"], "4": ["#9e49a1"], "5": ["#0099ca"], "6": ["#cc0000"], "7": ["#fe9f34"]}_0" /'' cannot be parsed correct.
HTML code '$'</div>
'' cannot be parsed correct.
HTML code '$'<th scope="row"><label for="category_color">Color</label></th>'' cannot be parsed correct.
HTML code '$'<td><input id="category_color" class="c-picker" type="text" name="cat_meta[category_color]" value="get_option("xo_event_calendar_cat_" . $term_id)" /'' cannot be parsed correct.
HTML code '$'<h1>Holiday Settings</h1>'' cannot be parsed correct.
HTML code '$'wp_kses($_message, $allowed_html)'' cannot be parsed correct.
HTML code '$' checked'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'$val_label$key'' cannot be parsed correct.
HTML code '$'$name'' cannot be parsed correct.
HTML code '$'appendupdate'' cannot be parsed correct.
HTML code '$'null'' cannot be parsed correct.
HTML code '$'$title'' cannot be parsed correct.
HTML code '$'null'' cannot be parsed correct.
HTML code '$'$name'' cannot be parsed correct.
HTML code '$'wp_nonce_url(add_query_arg(["action" => "delete", "selected-name" => $selected_name, "page" => "xo-event-holiday-settings", "post_type" => XO_Event_Calendar->get_post_type()]), "delete-history")'' cannot be parsed correct.
HTML code '$'$args_before_widget'' cannot be parsed correct.
HTML code '$'$args_before_titleapply_filters("widget_title", $instance["title"])$args_after_title'' cannot be parsed correct.
HTML code '$'esc_js($onclick)'' cannot be parsed correct.
HTML code '$'<h1>Option Settings</h1>'' cannot be parsed correct.
HTML code '$'<p><strong>Settings saved.</strong></p>'' cannot be parsed correct.
HTML code '$'<label for="disable_datepicker"><input id="disable_datepicker" name="xo_event_calendar_options[disable_datepicker]" type="checkbox" value="1" class="code" checked(1, $check, false) /> Do not use jQuery UI Datepicker</label>'' cannot be parsed correct.
HTML code '$'<label for="disable_dashicons"><input id="disable_dashicons" name="xo_event_calendar_options[disable_dashicons]" type="checkbox" value="1" class="code" checked(1, $disable_dashicons, false) /> Do not use Dashicons font</label>'' cannot be parsed correct.
HTML code '$'<label for="disable_event_link"><input id="disable_event_link" name="xo_event_calendar_options[disable_event_link]" type="checkbox" value="1" class="code" checked(1, $disable_event_link, false) /> Disable event link</label>'' cannot be parsed correct.
HTML code '$'<option value="9" selected="selected">9</option>'' cannot be parsed correct.
HTML code '$'<option value="10" selected="selected">10</option>'' cannot be parsed correct.
HTML code '$'<option value="11" selected="selected">11</option>'' cannot be parsed correct.
HTML code '$'<option value="12" selected="selected">12</option>'' cannot be parsed correct.
HTML code '$'</select> (month(s))'' cannot be parsed correct.
HTML code '$'<label for=$this->get_field_id("next")"Next month:</label> '' cannot be parsed correct.
HTML code '$'<select id=$this->get_field_id("next")" name="$this->get_field_name("next")"'' cannot be parsed correct.
HTML code '$'<option value="-1" selected="selected">No limit</option>'' cannot be parsed correct.
HTML code '$'<option value="0" selected="selected">0</option>'' cannot be parsed correct.
HTML code '$'<option value="1" selected="selected">1</option>'' cannot be parsed correct.
HTML code '$'<option value="2" selected="selected">2</option>'' cannot be parsed correct.
HTML code '$'<option value="3" selected="selected">3</option>'' cannot be parsed correct.
HTML code '$'<option value="4" selected="selected">4</option>'' cannot be parsed correct.
HTML code '$'<option value="5" selected="selected">5</option>'' cannot be parsed correct.
HTML code '$'<option value="6" selected="selected">6</option>'' cannot be parsed correct.
HTML code '$'<option value="7" selected="selected">7</option>'' cannot be parsed correct.
HTML code '$'<option value="8" selected="selected">8</option>'' cannot be parsed correct.
HTML code '$'<option value="9" selected="selected">9</option>'' cannot be parsed correct.
HTML code '$'<option value="10" selected="selected">10</option>'' cannot be parsed correct.
HTML code '$'<option value="11" selected="selected">11</option>'' cannot be parsed correct.
HTML code '$'wp_kses($xo_event_calendar->get_calendar(["id" => $args["widget_id"]"-calendar", "show_event" => $show_event, "categories_string" => $categories, "holidays_string" => $holidays, "prev_month_feed" => $prev, "next_month_feed" => $next, "start_of_week" => $start_of_week == -1get_option("start_of_week")$start_of_week, "months" => $months, "navigation" => true, "multiple_holiday_classs" => false]), $allowed_html)'' cannot be parsed correct.
HTML code '$'$args_after_widget'' cannot be parsed correct.
HTML code '$'<label for=$this->get_field_id("title")"Title:</label>'' cannot be parsed correct.
HTML code '$'<input class="widefat" id="$this->get_field_id("title")" name="$this->get_field_name("title")" type="text" value="$title" /'' cannot be parsed correct.
HTML code '$'</p>
'' cannot be parsed correct.
HTML code '$'<span>Categories:</span>'' cannot be parsed correct.
HTML code '$'<div id=" class="xo-event-cat-checklist">'' cannot be parsed correct.
HTML code '$'<input type="checkbox" value="$term" id="cats-$term" name="$this->get_field_name("cats[]")"checked(in_array($term->slug, $cats), true, false)/>$term'' cannot be parsed correct.
HTML code '$'<span>Holiday:</span>'' cannot be parsed correct.
HTML code '$'<input type="checkbox" value="$holiday" id="holidays-$holiday" name="$this->get_field_name("holidays[]")"checked(in_array($holiday, $holidays), true, false)/>get_option("xo_event_calendar_holiday_settings")_$holiday_title'' cannot be parsed correct.
HTML code '$'<span>Feed month:</span><br />'' cannot be parsed correct.
HTML code '$'<label for=$this->get_field_id("prev")"Previous month:</label> '' cannot be parsed correct.
HTML code '$'<select id=$this->get_field_id("prev")" name="$this->get_field_name("prev")"'' cannot be parsed correct.
HTML code '$'<option value="-1" selected="selected">No limit</option>'' cannot be parsed correct.
HTML code '$'<option value="0" selected="selected">0</option>'' cannot be parsed correct.
HTML code '$'<option value="1" selected="selected">1</option>'' cannot be parsed correct.
HTML code '$'<option value="2" selected="selected">2</option>'' cannot be parsed correct.
HTML code '$'<option value="3" selected="selected">3</option>'' cannot be parsed correct.
HTML code '$'<option value="4" selected="selected">4</option>'' cannot be parsed correct.
HTML code '$'<option value="5" selected="selected">5</option>'' cannot be parsed correct.
HTML code '$'<option value="6" selected="selected">6</option>'' cannot be parsed correct.
HTML code '$'<option value="7" selected="selected">7</option>'' cannot be parsed correct.
HTML code '$'<option value="8" selected="selected">8</option>'' cannot be parsed correct.
HTML code '$'<option value="12" selected="selected">12</option>'' cannot be parsed correct.
HTML code '$'</select> (month(s))'' cannot be parsed correct.
HTML code '$'</p>
'' cannot be parsed correct.
HTML code '$'<label for=$this->get_field_id("months")"Months to display:</label> '' cannot be parsed correct.
HTML code '$'<select id=$this->get_field_id("months")" name="$this->get_field_name("months")"'' cannot be parsed correct.
HTML code '$'<option value="1" selected="selected">1</option>'' cannot be parsed correct.
HTML code '$'<option value="2" selected="selected">2</option>'' cannot be parsed correct.
HTML code '$'<option value="3" selected="selected">3</option>'' cannot be parsed correct.
HTML code '$'<option value="4" selected="selected">4</option>'' cannot be parsed correct.
HTML code '$'<option value="5" selected="selected">5</option>'' cannot be parsed correct.
HTML code '$'<option value="6" selected="selected">6</option>'' cannot be parsed correct.
HTML code '$'<option value="7" selected="selected">7</option>'' cannot be parsed correct.
HTML code '$'<option value="8" selected="selected">8</option>'' cannot be parsed correct.
HTML code '$'<option value="9" selected="selected">9</option>'' cannot be parsed correct.
HTML code '$'<option value="10" selected="selected">10</option>'' cannot be parsed correct.
HTML code '$'<option value="11" selected="selected">11</option>'' cannot be parsed correct.
HTML code '$'<option value="12" selected="selected">12</option>'' cannot be parsed correct.
HTML code '$'</select> (month(s))'' cannot be parsed correct.
HTML code '$'</p>
'' cannot be parsed correct.
HTML code '$'<label for=$this->get_field_id("start_of_week")"Week Starts On:</label> '' cannot be parsed correct.
HTML code '$'<select id=$this->get_field_id("start_of_week")" name="$this->get_field_name("start_of_week")"'' cannot be parsed correct.
HTML code '$'<option value="-1" selected="selected">General Settings</option>'' cannot be parsed correct.
HTML code '$'<option value="0" selected="selected">Sunday</option>'' cannot be parsed correct.
HTML code '$'<option value="1" selected="selected">Monday</option>'' cannot be parsed correct.
HTML code '$'<option value="2" selected="selected">Tuesday</option>'' cannot be parsed correct.
HTML code '$'<option value="3" selected="selected">Wednesday</option>'' cannot be parsed correct.
HTML code '$'<option value="4" selected="selected">Thursday</option>'' cannot be parsed correct.
HTML code '$'<option value="5" selected="selected">Friday</option>'' cannot be parsed correct.
HTML code '$'<option value="6" selected="selected">Saturday</option>'' cannot be parsed correct.
HTML code '$'</p>
'' cannot be parsed correct.
HTML code '$'wp_kses($this->get_month_calendar(["id" => $id, "year" => $y, "month" => $m, "show_event" => $show_event, "categories_string" => $categories, "holidays_string" => $holidays, "prev_month_feed" => $prev, "next_month_feed" => $next, "start_of_week" => $start_of_week, "months" => $months, "navigation" => $navigation, "multiple_holiday_classs" => $mhc], $i), $allowed_html)'' cannot be parsed correct.
HTML code '$'<div class="form-field term-category-color-wrap">'' cannot be parsed correct.
HTML code '$'<tr class="form-field term-category-color-wrap">'' cannot be parsed correct.
HTML code '$'<div class="wrap">'' cannot be parsed correct.
HTML code '$'<style type="text/css">.media-frame select.attachment-filters { min-width: 102px; }</style>'' cannot be parsed correct.
HTML code '$'</option>
						'' cannot be parsed correct.
HTML code '$'" />
								</dd>
							</dl>
					'' cannot be parsed correct.
HTML code '$'<div class="wrap">'' cannot be parsed correct.
HTML code '$'<div id="setting-error-settings_updated" class="updated settings-error notice is-dismissible">'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'<div id="xo-event-option-settings">'' cannot be parsed correct.
HTML code '$'<form method="post" action="options.php">'' cannot be parsed correct.
HTML code '$'</form>'' cannot be parsed correct.
HTML code '$'</div>
'' cannot be parsed correct.
HTML code '$'<fieldset>'' cannot be parsed correct.
HTML code '$'</fieldset>'' cannot be parsed correct.
HTML code '$'<fieldset>'' cannot be parsed correct.
HTML code '$'<br />'' cannot be parsed correct.
HTML code '$'</fieldset>'' cannot be parsed correct.
HTML code '$'<br />'' cannot be parsed correct.
HTML code '$'<p>'' cannot be parsed correct.
HTML code '$'<ul>'' cannot be parsed correct.
HTML code '$'<li><label class="selectit">'' cannot be parsed correct.
HTML code '$'</label></li>'' cannot be parsed correct.
HTML code '$'</ul>'' cannot be parsed correct.
HTML code '$'</div>
'' cannot be parsed correct.
HTML code '$'<div id="xo_event_holiday" class="xo-event-cat-checklist">'' cannot be parsed correct.
HTML code '$'<ul>'' cannot be parsed correct.
HTML code '$'<li><span class="dashicons dashicons-menu"></span><label class="selectit"> '' cannot be parsed correct.
HTML code '$'</label></li>'' cannot be parsed correct.
HTML code '$'</ul>'' cannot be parsed correct.
HTML code '$'</div>
'' cannot be parsed correct.
HTML code '$'<p>'' cannot be parsed correct.
HTML code '$'<p>'' cannot be parsed correct.
HTML code '$'<p>'' cannot be parsed correct.
HTML code '$'</select>'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:16.897970.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.047955.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 11 do_action/apply_filters calls and 30 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:01.732949.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbaseDetector
### Start running FrontBaseDetector
### Finish running DbplusDetector
### Start running HashDetector
### Finish running FileProDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running FirebirdInterBaseDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running MongoDbDetector
### Start running OpenSSLDetector
### Finish running Oci8Detector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running ArrayElementDetector
### Start running PhpCurlDetector
### Finish running PhpCurlDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PasswordHashingDetector
### Start running PHPRetrievalDetector
### Finish running HashDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPIncludedDetector
### Start running PhpVarDetector
### Finish running OpenSSLDetector
### Start running PostgreSQLDetector
### Finish running PHPStorageDetector
### Start running PropertyDetector
### Finish running PHPRetrievalDetector
### Start running Sqlite3Detector
### Finish running PostgreSQLDetector
### Start running SqliteDetector
### Finish running SqliteDetector
### Start running SqlServerDetector
### Finish running Sqlite3Detector
### Start running SybaseDetector
### Finish running PhpVarDetector
### Start running TokyoTyrantDetector
### Finish running SybaseDetector
### Start running UserInputDetector
### Finish running PropertyDetector
### Start running VariableDetector
### Finish running TokyoTyrantDetector
### Start running WordpressHashingFnDetector
### Finish running maxdbDetector
### Start running WordPressRemoteDetector
### Finish running SqlServerDetector
### Start running WordPressRetrievalDetector
### Finish running MySQLiDetector
### Start running WordPressStorageDetector
### Finish running WordpressHashingFnDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running WordPressRemoteDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running GenericDatabaseUsageDetector
### Start running UninstallDetector
### Finish running UserInputDetector
### Finish running VariableDetector
### Finish running WordPressStorageDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running WordPressRetrievalDetector
### Finished running detectors
inc/admin.php:64
  - RETRIEVAL call to get_post() alters data types {'post_meta', 'post', 'wp_post'}. Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/admin.php:97
  - RETRIEVAL call to get_option("xo_event_calendar_cat_" . $term_id) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/admin.php:122
  - RETRIEVAL call to get_option("xo_event_calendar_cat_" . $term_id) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/admin.php:132
  - RETRIEVAL call to get_option("xo_event_calendar_cat_"$term_id, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/admin.php:191
  - RETRIEVAL call to get_post_meta($post_id, "event_start_date", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/admin.php:193
  - RETRIEVAL call to get_option("date_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/admin.php:194
  - RETRIEVAL call to get_post_meta($post_id, "event_all_day", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/admin.php:196
  - RETRIEVAL call to get_post_meta($post_id, "event_start_hour", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/admin.php:197
  - RETRIEVAL call to get_post_meta($post_id, "event_start_minute", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/admin.php:204
  - RETRIEVAL call to get_post_meta($post_id, "event_end_date", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/admin.php:206
  - RETRIEVAL call to get_option("date_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/admin.php:207
  - RETRIEVAL call to get_post_meta($post_id, "event_all_day", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/admin.php:209
  - RETRIEVAL call to get_post_meta($post_id, "event_end_hour", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/admin.php:210
  - RETRIEVAL call to get_post_meta($post_id, "event_end_minute", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/admin.php:237
  - RETRIEVAL call to get_post_custom($post->ID). Passed arguments: 0: $post_id (int). Returns (array).
inc/admin.php:409
  - RETRIEVAL call to get_option("xo_event_calendar_holiday_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/event-calendar-widget.php:52
  - RETRIEVAL call to get_option("start_of_week") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/event-calendar-widget.php:95
  - RETRIEVAL call to get_option("xo_event_calendar_holiday_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/main.php:10
  - RETRIEVAL call to get_option("xo_event_calendar_options", ["disable_datepicker" => false, "disable_dashicons" => false, "disable_event_link" => false]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/main.php:56
  - RETRIEVAL call to get_option("xo_event_calendar_holiday_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/main.php:258
  - RETRIEVAL call to get_option("xo_event_calendar_cat_" . intval($cate->term_id)) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/main.php:269
  - RETRIEVAL call to get_post_meta($post->ID, "event_start_date", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/main.php:270
  - RETRIEVAL call to get_post_meta($post->ID, "event_end_date", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/main.php:273
  - RETRIEVAL call to get_post_meta($post->ID, "short_title", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/main.php:356
  - RETRIEVAL call to get_option("xo_event_calendar_holiday_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/main.php:640
  - RETRIEVAL call to get_option("start_of_week") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/main.php:649
  - RETRIEVAL call to get_option("xo_event_calendar_holiday_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/main.php:701
  - RETRIEVAL call to get_option("xo_event_calendar_holiday_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/main.php:756
  - RETRIEVAL call to get_option("start_of_week") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/main.php:788
  - RETRIEVAL call to get_option("date_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/main.php:789
  - RETRIEVAL call to get_option("time_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/main.php:794
  - RETRIEVAL call to get_post_custom($post_id). Passed arguments: 0: $post_id (int). Returns (array).
inc/main.php:856
  - RETRIEVAL call to get_option("xo_event_calendar_cat_" . intval($cat->term_id)) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
uninstall.php:23
  - RETRIEVAL call to get_posts(["numberposts" => -1, "post_type" => $post_type, "post_status" => "any"]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]). 

inc/admin.php:134
  - STORAGE call to update_option("xo_event_calendar_cat_"$term_id, $cat_meta) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/admin.php:139
  - STORAGE call to delete_option("xo_event_calendar_cat_" . $term_id) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/admin.php:340
  - STORAGE call to update_post_meta($post_id, "event_start_date", $start_date) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/admin.php:341
  - STORAGE call to update_post_meta($post_id, "event_start_hour", $start_hour) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/admin.php:342
  - STORAGE call to update_post_meta($post_id, "event_start_minute", $start_minute) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/admin.php:343
  - STORAGE call to update_post_meta($post_id, "event_end_date", $end_date) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/admin.php:344
  - STORAGE call to update_post_meta($post_id, "event_end_hour", $end_hour) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/admin.php:345
  - STORAGE call to update_post_meta($post_id, "event_end_minute", $end_minute) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/admin.php:346
  - STORAGE call to update_post_meta($post_id, "event_all_day", $all_day) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/admin.php:347
  - STORAGE call to update_post_meta($post_id, "short_title", $short_title) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/admin.php:428
  - STORAGE call to update_option("xo_event_calendar_holiday_settings", $holiday_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/admin.php:451
  - STORAGE call to update_option("xo_event_calendar_holiday_settings", $holiday_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/admin.php:485
  - STORAGE call to update_option("xo_event_calendar_holiday_settings", $holiday_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/main.php:79
  - STORAGE call to update_option("xo_event_calendar_holiday_settings", $holiday_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
uninstall.php:16
  - STORAGE call to delete_option("xo_event_calendar_cat_" . $term_id) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:31
  - STORAGE call to wp_delete_post($post->ID, true) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post_meta, post, wp_post
uninstall.php:34
  - STORAGE call to delete_option("xo_event_calendar_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:35
  - STORAGE call to delete_option("xo_event_calendar_holiday_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

inc/admin.php:139
  - DELETION call to delete_option("xo_event_calendar_cat_" . $term_id) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:16
  - DELETION call to delete_option("xo_event_calendar_cat_" . $term_id) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:18
  - DELETION call to wp_delete_term($term_id, $term->taxonomy) alters data types {'term'}. Passed arguments: 0: $term (int), 1: $taxonomy (string). Returns (bool|int|WP_Error).
  - Data types: term
uninstall.php:31
  - DELETION call to wp_delete_post($post->ID, true) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post_meta, post, wp_post
uninstall.php:34
  - DELETION call to delete_option("xo_event_calendar_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:35
  - DELETION call to delete_option("xo_event_calendar_holiday_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:52
  - DELETION call to delete_site_transient("xo_event_calendar_uninstall_options"). Passed arguments: 0: $transient (string). Returns (bool).
uninstall.php:57
  - DELETION call to delete_site_transient("xo_event_calendar_uninstall_options"). Passed arguments: 0: $transient (string). Returns (bool). 

uninstall.php:16
  - Uninstall deletion call: DELETION call to delete_option("xo_event_calendar_cat_" . $term_id) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:17
  - Uninstall deletion call: DELETION call to delete_site_option("xo_event_calendar_cat_" . $term_id). Passed arguments: 0: $option (string). Returns (bool).
uninstall.php:18
  - Uninstall deletion call: DELETION call to wp_delete_term($term_id, $term->taxonomy) alters data types {'term'}. Passed arguments: 0: $term (int), 1: $taxonomy (string). Returns (bool|int|WP_Error).
  - Data types: term
uninstall.php:31
  - Uninstall deletion call: DELETION call to wp_delete_post($post->ID, true) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post_meta, post, wp_post
uninstall.php:34
  - Uninstall deletion call: DELETION call to delete_option("xo_event_calendar_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:35
  - Uninstall deletion call: DELETION call to delete_option("xo_event_calendar_holiday_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:52
  - Uninstall deletion call: DELETION call to delete_site_transient("xo_event_calendar_uninstall_options"). Passed arguments: 0: $transient (string). Returns (bool).
uninstall.php:57
  - Uninstall deletion call: DELETION call to delete_site_transient("xo_event_calendar_uninstall_options"). Passed arguments: 0: $transient (string). Returns (bool). 

By data type:
none
	DeletionDetector.delete_site_transient("xo_event_calendar_uninstall_options") - set()
	DeletionDetector.delete_site_transient("xo_event_calendar_uninstall_options") - set()
	UninstallDetector.delete_site_transient("xo_event_calendar_uninstall_options") - set()
	UninstallDetector.delete_site_transient("xo_event_calendar_uninstall_options") - set()
	WordPressRetrievalDetector.get_posts(["numberposts" => -1, "post_type" => $post_type, "post_status" => "any"]) - set()
	WordPressRetrievalDetector.get_post_custom($post->ID) - set()
	UninstallDetector.delete_site_option("xo_event_calendar_cat_" . $term_id) - set()
	WordPressRetrievalDetector.get_post_custom($post_id) - set()
option
	WordPressRetrievalDetector.get_option("xo_event_calendar_cat_" . intval($cat->term_id)) - {'option'}
	WordPressRetrievalDetector.get_option("xo_event_calendar_holiday_settings") - {'option'}
	WordPressStorageDetector.delete_option("xo_event_calendar_cat_" . $term_id) - {'option'}
	WordPressStorageDetector.update_option("xo_event_calendar_cat_"$term_id, $cat_meta) - {'option'}
	UninstallDetector.delete_option("xo_event_calendar_holiday_settings") - {'option'}
	WordPressRetrievalDetector.get_option("date_format") - {'option'}
	WordPressRetrievalDetector.get_option("xo_event_calendar_holiday_settings") - {'option'}
	WordPressRetrievalDetector.get_option("xo_event_calendar_cat_" . $term_id) - {'option'}
	WordPressRetrievalDetector.get_option("xo_event_calendar_holiday_settings") - {'option'}
	WordPressStorageDetector.delete_option("xo_event_calendar_holiday_settings") - {'option'}
	WordPressStorageDetector.delete_option("xo_event_calendar_options") - {'option'}
	UninstallDetector.delete_option("xo_event_calendar_options") - {'option'}
	WordPressStorageDetector.delete_option("xo_event_calendar_cat_" . $term_id) - {'option'}
	WordPressStorageDetector.update_option("xo_event_calendar_holiday_settings", $holiday_settings) - {'option'}
	WordPressRetrievalDetector.get_option("xo_event_calendar_cat_" . $term_id) - {'option'}
	WordPressRetrievalDetector.get_option("xo_event_calendar_holiday_settings") - {'option'}
	WordPressRetrievalDetector.get_option("xo_event_calendar_cat_" . intval($cate->term_id)) - {'option'}
	DeletionDetector.delete_option("xo_event_calendar_holiday_settings") - {'option'}
	UninstallDetector.delete_option("xo_event_calendar_cat_" . $term_id) - {'option'}
	WordPressRetrievalDetector.get_option("time_format") - {'option'}
	WordPressStorageDetector.update_option("xo_event_calendar_holiday_settings", $holiday_settings) - {'option'}
	WordPressRetrievalDetector.get_option("start_of_week") - {'option'}
	WordPressRetrievalDetector.get_option("xo_event_calendar_options", ["disable_datepicker" => false, "disable_dashicons" => false, "disable_event_link" => false]) - {'option'}
	WordPressRetrievalDetector.get_option("xo_event_calendar_holiday_settings") - {'option'}
	WordPressRetrievalDetector.get_option("date_format") - {'option'}
	WordPressRetrievalDetector.get_option("start_of_week") - {'option'}
	WordPressStorageDetector.update_option("xo_event_calendar_holiday_settings", $holiday_settings) - {'option'}
	DeletionDetector.delete_option("xo_event_calendar_cat_" . $term_id) - {'option'}
	DeletionDetector.delete_option("xo_event_calendar_cat_" . $term_id) - {'option'}
	DeletionDetector.delete_option("xo_event_calendar_options") - {'option'}
	WordPressRetrievalDetector.get_option("start_of_week") - {'option'}
	WordPressRetrievalDetector.get_option("xo_event_calendar_holiday_settings") - {'option'}
	WordPressRetrievalDetector.get_option("xo_event_calendar_cat_"$term_id, []) - {'option'}
	WordPressStorageDetector.update_option("xo_event_calendar_holiday_settings", $holiday_settings) - {'option'}
	WordPressRetrievalDetector.get_option("date_format") - {'option'}
post
	UninstallDetector.wp_delete_post($post->ID, true) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post() - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.wp_delete_post($post->ID, true) - {'post_meta', 'post', 'wp_post'}
	DeletionDetector.wp_delete_post($post->ID, true) - {'post_meta', 'post', 'wp_post'}
post_meta
	WordPressRetrievalDetector.get_post_meta($post_id, "event_start_date", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "event_all_day", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "event_end_hour", $end_hour) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "event_all_day", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "short_title", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "event_end_minute", $end_minute) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "event_start_minute", $start_minute) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "event_start_date", $start_date) - {'post_meta'}
	UninstallDetector.wp_delete_post($post->ID, true) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($post_id, "event_start_hour", $start_hour) - {'post_meta'}
	WordPressRetrievalDetector.get_post() - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($post_id, "event_end_date", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "short_title", $short_title) - {'post_meta'}
	WordPressStorageDetector.wp_delete_post($post->ID, true) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "event_start_date", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "event_end_hour", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "event_end_date", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "event_end_minute", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "event_start_hour", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "event_end_date", $end_date) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "event_start_minute", true) - {'post_meta'}
	DeletionDetector.wp_delete_post($post->ID, true) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($post_id, "event_all_day", $all_day) - {'post_meta'}
term
	UninstallDetector.wp_delete_term($term_id, $term->taxonomy) - {'term'}
	DeletionDetector.wp_delete_term($term_id, $term->taxonomy) - {'term'}
wp_post
	UninstallDetector.wp_delete_post($post->ID, true) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post() - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.wp_delete_post($post->ID, true) - {'post_meta', 'post', 'wp_post'}
	DeletionDetector.wp_delete_post($post->ID, true) - {'post_meta', 'post', 'wp_post'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:12.426002.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 279 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.343612.

279 STORE_REACHES edges created
279 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
In total, tainted 0 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
In total, tainted 0 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:00.005898.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:01:09.161778!
DELETION call to delete_option("xo_event_calendar_cat_" . $term_id) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("xo_event_calendar_cat_" . $term_id) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to wp_delete_term($term_id, $term->taxonomy) alters data types {'term'}. Passed arguments: 0: $term (int), 1: $taxonomy (string). Returns (bool|int|WP_Error).,None,None
DELETION call to wp_delete_post($post->ID, true) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
DELETION call to delete_option("xo_event_calendar_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("xo_event_calendar_holiday_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_site_transient("xo_event_calendar_uninstall_options"). Passed arguments: 0: $transient (string). Returns (bool).,None,None
DELETION call to delete_site_transient("xo_event_calendar_uninstall_options"). Passed arguments: 0: $transient (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("xo_event_calendar_cat_" . $term_id) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_site_option("xo_event_calendar_cat_" . $term_id). Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to wp_delete_term($term_id, $term->taxonomy) alters data types {'term'}. Passed arguments: 0: $term (int), 1: $taxonomy (string). Returns (bool|int|WP_Error).,None,None
Uninstall deletion call: DELETION call to wp_delete_post($post->ID, true) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
Uninstall deletion call: DELETION call to delete_option("xo_event_calendar_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("xo_event_calendar_holiday_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_site_transient("xo_event_calendar_uninstall_options"). Passed arguments: 0: $transient (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_site_transient("xo_event_calendar_uninstall_options"). Passed arguments: 0: $transient (string). Returns (bool).,None,None
RETRIEVAL call to get_option("xo_event_calendar_cat_" . $term_id) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("xo_event_calendar_cat_"$term_id, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "event_start_date", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("date_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "event_all_day", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "event_start_hour", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "event_start_minute", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "event_end_date", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("date_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "event_all_day", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "event_end_hour", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "event_end_minute", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_custom($post->ID). Passed arguments: 0: $post_id (int). Returns (array).,None,None
RETRIEVAL call to get_option("xo_event_calendar_holiday_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post() alters data types {'post_meta', 'post', 'wp_post'}. Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("xo_event_calendar_cat_" . $term_id) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("start_of_week") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("xo_event_calendar_holiday_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("xo_event_calendar_options", ["disable_datepicker" => false, "disable_dashicons" => false, "disable_event_link" => false]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("xo_event_calendar_cat_" . intval($cate->term_id)) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "event_start_date", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "event_end_date", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "short_title", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("xo_event_calendar_holiday_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("xo_event_calendar_holiday_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("start_of_week") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("xo_event_calendar_holiday_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("xo_event_calendar_holiday_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("start_of_week") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("date_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("time_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_custom($post_id). Passed arguments: 0: $post_id (int). Returns (array).,None,None
RETRIEVAL call to get_option("xo_event_calendar_cat_" . intval($cat->term_id)) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_posts(["numberposts" => -1, "post_type" => $post_type, "post_status" => "any"]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
STORAGE call to update_option("xo_event_calendar_cat_"$term_id, $cat_meta) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("xo_event_calendar_cat_" . $term_id) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, "event_start_date", $start_date) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "event_start_hour", $start_hour) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "event_start_minute", $start_minute) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "event_end_date", $end_date) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "event_end_hour", $end_hour) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "event_end_minute", $end_minute) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "event_all_day", $all_day) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "short_title", $short_title) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("xo_event_calendar_holiday_settings", $holiday_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("xo_event_calendar_holiday_settings", $holiday_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("xo_event_calendar_holiday_settings", $holiday_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("xo_event_calendar_holiday_settings", $holiday_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("xo_event_calendar_cat_" . $term_id) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to wp_delete_post($post->ID, true) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
STORAGE call to delete_option("xo_event_calendar_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("xo_event_calendar_holiday_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found no personal data in the plugin. No analysis needed. 

[main] Complaint? True 

No findings
