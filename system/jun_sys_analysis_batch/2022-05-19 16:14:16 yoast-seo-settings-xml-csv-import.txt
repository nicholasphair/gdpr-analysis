Timeout in resolving values
Timeout in running neo4j query
Running Main.py on yoast-seo-settings-xml-csv-import

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.348733.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:00.864732.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 166 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.506307.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 3 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.620065.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 787 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:00.959786.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 0 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.677401.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.113801.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 204 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:02.736703.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 5239
Added 4079 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 5239
Added 0 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.181624.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/yoast-seo-settings-xml-csv-import/rapid-addon.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/yoast-seo-settings-xml-csv-import/yoast-addon.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.232925.

166 PHP_REACHES edges created
3 REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
5070 PHP_REACHES edges created
5239 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 1825 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.153442.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:01.073210.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 228 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:04.581056.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 104 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.171266.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.098960.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:01.346468.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.023043.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.041502.

332 PHP_REACHES edges created
332 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 307 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.173404.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
2 SQL operations to process.
SELECT options FROM $wpdbpmxi_imports WHERE id = new
SELECT options FROM $wpdbpmxi_imports WHERE id = new
SQL command (SELECT options FROM $wpdbpmxi_imports WHERE id = new) cannot be parsed correct.
SELECT option_name, option_value FROM $wpdb WHERE option_name = _wpallimport_session_$_GET_id_
SELECT option_name, option_value FROM $wpdb WHERE option_name = _wpallimport_session_$_GET_id_
SQL command (SELECT option_name, option_value FROM $wpdb WHERE option_name = _wpallimport_session_$_GET_id_) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [7568, 7619]
Added 0 SQL nodes. 0 out of 2 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:02.198085.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'$this->helper_metabox_top($this->name)'' cannot be parsed correct.
HTML code '$'$this->helper_metabox_bottom()'' cannot be parsed correct.
HTML code '$'pmai_render_field($fieldData, !empty($current_values)$current_values[])'' cannot be parsed correct.
HTML code '$'$field_params_tooltip'' cannot be parsed correct.
HTML code '$'$field_params_name'' cannot be parsed correct.
HTML code '$'$field_params_name'' cannot be parsed correct.
HTML code '$'sanitize_key($this->slug)'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:01.000376.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.046714.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 2 do_action/apply_filters calls and 18 add_action/add_filter calls. Now connecting do-add pairs.
Added 2 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:01.028978.

2 PHP_REACHES edges created
2 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FileProDetector
### Start running FrontBaseDetector
### Finish running DbaseDetector
### Start running HashDetector
### Finish running FirebirdInterBaseDetector
### Start running IBMDb2Detector
### Finish running DbplusDetector
### Start running InformixDetector
### Finish running CubridDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running MySQLDetector
### Start running MySQLiDetector
### Finish running MsqlDetector
### Start running Oci8Detector
### Finish running MongoDbDetector
### Start running OpenSSLDetector
### Finish running Oci8Detector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running ArrayElementDetector
### Start running PhpCurlDetector
### Finish running PasswordHashingDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running HashDetector
### Start running PHPRetrievalDetector
### Finish running PHPIncludedDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PhpCurlDetector
### Start running PhpVarDetector
### Finish running PhpVarDetector
### Start running PostgreSQLDetector
### Finish running OpenSSLDetector
### Start running PropertyDetector
### Finish running PostgreSQLDetector
### Start running Sqlite3Detector
### Finish running PHPRetrievalDetector
### Start running SqliteDetector
### Finish running PHPStorageDetector
### Start running SqlServerDetector
### Finish running SqliteDetector
### Start running SybaseDetector
### Finish running SybaseDetector
### Start running TokyoTyrantDetector
### Finish running PropertyDetector
### Start running UserInputDetector
### Finish running Sqlite3Detector
### Start running VariableDetector
### Finish running TokyoTyrantDetector
### Start running WordpressHashingFnDetector
### Finish running SqlServerDetector
### Start running WordPressRemoteDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRetrievalDetector
### Finish running maxdbDetector
### Start running WordPressStorageDetector
### Finish running MySQLiDetector
### Start running WP_UserDetector
### Finish running WordPressRemoteDetector
### Start running GenericDatabaseUsageDetector
### Finish running WP_UserDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running GenericDatabaseUsageDetector
### Start running UninstallDetector
### Finish running VariableDetector
### Finish running UserInputDetector
### Finish running WordPressRetrievalDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running WordPressStorageDetector
### Finished running detectors
rapid-addon.php:211
  - RETRIEVAL call to get_posts(["posts_per_page" => -1, "post_type" => "acf-field", "post_parent" => $acf_group["ID"], "post_status" => "publish", "orderby" => "menu_order", "order" => "ASC"]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
rapid-addon.php:1082
  - RETRIEVAL call to get_option(sanitize_key($this->slug) . "_notice_ignore") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
yoast-addon.php:125
  - RETRIEVAL call to get_option("wpseo_taxonomy_meta") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
yoast-addon.php:359
  - RETRIEVAL call to get_post_meta($post_id, "_yoast_wpseo_primary_product_cat_can_update", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
yoast-addon.php:361
  - RETRIEVAL call to get_post_meta($post_id, "_yoast_wpseo_primary_category_can_update", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
yoast-addon.php:367
  - RETRIEVAL call to get_post_meta($post_id, "_yoast_wpseo_addon_category_slug", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta 

rapid-addon.php:908
  - STORAGE call to $this->add_option($section_slug . $option_slug, $value) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
rapid-addon.php:1069
  - STORAGE call to update_option($this->slug . "_ignore", "true") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
rapid-addon.php:1166
  - STORAGE call to $this->add_option("post_types_to_remove", $type) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
rapid-addon.php:1240
  - STORAGE call to $this->add_option("post_type_move", $move_rules) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
rapid-addon.php:1266
  - STORAGE call to $this->add_option("post_type_image", $post_type_image_rules) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
yoast-addon.php:151
  - STORAGE call to update_option("wpseo_taxonomy_meta", $meta) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
yoast-addon.php:284
  - STORAGE call to update_post_meta($post_id, "_yoast_wpseo_addon_category_slug", $cat_slug) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
yoast-addon.php:290
  - STORAGE call to update_post_meta($post_id, "_yoast_wpseo_primary_category_can_update", 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
yoast-addon.php:294
  - STORAGE call to update_post_meta($post_id, "_yoast_wpseo_primary_category_can_update", 0) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
yoast-addon.php:300
  - STORAGE call to update_post_meta($post_id, "_yoast_wpseo_primary_product_cat_can_update", 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
yoast-addon.php:304
  - STORAGE call to update_post_meta($post_id, "_yoast_wpseo_primary_product_cat_can_update", 0) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
yoast-addon.php:320
  - STORAGE call to update_post_meta($post_id, $field, $url) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
yoast-addon.php:328
  - STORAGE call to update_post_meta($post_id, $field, $data[$field]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
yoast-addon.php:329
  - STORAGE call to update_post_meta($post_id, "_yoast_wpseo_focuskw_text_input", $data[$field]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
yoast-addon.php:339
  - STORAGE call to delete_post_meta($post_id, "_yst_is_cornerstone") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
yoast-addon.php:345
  - STORAGE call to update_post_meta($post_id, $field, $data[$field]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
yoast-addon.php:383
  - STORAGE call to update_post_meta($post_id, "_yoast_wpseo_primary_product_cat", $cat_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
yoast-addon.php:398
  - STORAGE call to update_post_meta($post_id, "_yoast_wpseo_primary_category", $cat_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
yoast-addon.php:406
  - STORAGE call to delete_post_meta($post_id, "_yoast_wpseo_primary_category_can_update") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
yoast-addon.php:407
  - STORAGE call to delete_post_meta($post_id, "_yoast_wpseo_primary_product_cat_can_update") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
yoast-addon.php:408
  - STORAGE call to delete_post_meta($post_id, "_yoast_wpseo_addon_category_slug") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta 

yoast-addon.php:339
  - DELETION call to delete_post_meta($post_id, "_yst_is_cornerstone") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
yoast-addon.php:406
  - DELETION call to delete_post_meta($post_id, "_yoast_wpseo_primary_category_can_update") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
yoast-addon.php:407
  - DELETION call to delete_post_meta($post_id, "_yoast_wpseo_primary_product_cat_can_update") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
yoast-addon.php:408
  - DELETION call to delete_post_meta($post_id, "_yoast_wpseo_addon_category_slug") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta 

By data type:
none
	WordPressRetrievalDetector.get_posts(["posts_per_page" => -1, "post_type" => "acf-field", "post_parent" => $acf_group["ID"], "post_status" => "publish", "orderby" => "menu_order", "order" => "ASC"]) - set()
option
	WordPressStorageDetector.update_option($this->slug . "_ignore", "true") - {'option'}
	WordPressStorageDetector.$this->add_option("post_type_image", $post_type_image_rules) - {'option'}
	WordPressRetrievalDetector.get_option("wpseo_taxonomy_meta") - {'option'}
	WordPressRetrievalDetector.get_option(sanitize_key($this->slug) . "_notice_ignore") - {'option'}
	WordPressStorageDetector.$this->add_option("post_types_to_remove", $type) - {'option'}
	WordPressStorageDetector.update_option("wpseo_taxonomy_meta", $meta) - {'option'}
	WordPressStorageDetector.$this->add_option($section_slug . $option_slug, $value) - {'option'}
	WordPressStorageDetector.$this->add_option("post_type_move", $move_rules) - {'option'}
post_meta
	WordPressStorageDetector.update_post_meta($post_id, "_yoast_wpseo_primary_category_can_update", 0) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_yoast_wpseo_primary_product_cat_can_update", 0) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "_yoast_wpseo_addon_category_slug", true) - {'post_meta'}
	DeletionDetector.delete_post_meta($post_id, "_yoast_wpseo_primary_category_can_update") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_yoast_wpseo_addon_category_slug", $cat_slug) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post_id, "_yoast_wpseo_primary_category_can_update") - {'post_meta'}
	DeletionDetector.delete_post_meta($post_id, "_yoast_wpseo_primary_product_cat_can_update") - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post_id, "_yst_is_cornerstone") - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post_id, "_yoast_wpseo_addon_category_slug") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "_yoast_wpseo_primary_product_cat_can_update", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, $field, $data[$field]) - {'post_meta'}
	DeletionDetector.delete_post_meta($post_id, "_yst_is_cornerstone") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_yoast_wpseo_primary_product_cat", $cat_id) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_yoast_wpseo_primary_product_cat_can_update", 1) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "_yoast_wpseo_primary_category_can_update", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_yoast_wpseo_primary_category_can_update", 1) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, $field, $url) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, $field, $data[$field]) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_yoast_wpseo_primary_category", $cat_id) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post_id, "_yoast_wpseo_primary_product_cat_can_update") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_yoast_wpseo_focuskw_text_input", $data[$field]) - {'post_meta'}
	DeletionDetector.delete_post_meta($post_id, "_yoast_wpseo_addon_category_slug") - {'post_meta'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:09.138715.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 57 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.182299.

57 STORE_REACHES edges created
57 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
In total, tainted 0 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
In total, tainted 0 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:00.005813.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:00:49.811472!
DELETION call to delete_post_meta($post_id, "_yst_is_cornerstone") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($post_id, "_yoast_wpseo_primary_category_can_update") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($post_id, "_yoast_wpseo_primary_product_cat_can_update") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($post_id, "_yoast_wpseo_addon_category_slug") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
RETRIEVAL call to get_option(sanitize_key($this->slug) . "_notice_ignore") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_posts(["posts_per_page" => -1, "post_type" => "acf-field", "post_parent" => $acf_group["ID"], "post_status" => "publish", "orderby" => "menu_order", "order" => "ASC"]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_option("wpseo_taxonomy_meta") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "_yoast_wpseo_primary_product_cat_can_update", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "_yoast_wpseo_primary_category_can_update", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "_yoast_wpseo_addon_category_slug", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
STORAGE call to update_option($this->slug . "_ignore", "true") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to $this->add_option("post_types_to_remove", $type) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to $this->add_option("post_type_move", $move_rules) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to $this->add_option("post_type_image", $post_type_image_rules) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to $this->add_option($section_slug . $option_slug, $value) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wpseo_taxonomy_meta", $meta) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, "_yoast_wpseo_addon_category_slug", $cat_slug) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_yoast_wpseo_primary_category_can_update", 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_yoast_wpseo_primary_category_can_update", 0) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_yoast_wpseo_primary_product_cat_can_update", 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_yoast_wpseo_primary_product_cat_can_update", 0) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, $field, $url) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, $field, $data[$field]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_yoast_wpseo_focuskw_text_input", $data[$field]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($post_id, "_yst_is_cornerstone") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, $field, $data[$field]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_yoast_wpseo_primary_product_cat", $cat_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_yoast_wpseo_primary_category", $cat_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($post_id, "_yoast_wpseo_primary_category_can_update") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_post_meta($post_id, "_yoast_wpseo_primary_product_cat_can_update") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_post_meta($post_id, "_yoast_wpseo_addon_category_slug") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found no personal data in the plugin. No analysis needed. 

[main] Complaint? True 

No findings
