Timeout in resolving values
Timeout in running neo4j query
Running Main.py on gumroad

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.729739.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.069417.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 13 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.533976.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 0 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.462503.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 81 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:00.589421.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 1 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.627997.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.187902.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 27 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:00.628029.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 629
Added 507 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 1783
Added 1154 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.024228.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gumroad/class-gumroad.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gumroad/gumroad.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gumroad/includes/misc-functions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gumroad/includes/scanner.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gumroad/includes/shortcodes.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gumroad/src/init.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gumroad/views/admin.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:01.072144.

94 PHP_REACHES edges created
1 CALLS edges created
534 PHP_REACHES edges created
1000 PHP_REACHES edges created
1154 PHP_REACHES edges created
1783 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 208 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:00.755558.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 1 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.184203.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 7 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.852197.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 7 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.183122.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.007421.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.176793.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.016127.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.042183.

1 CALLS edges created
14 PHP_REACHES edges created
15 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 9 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.143756.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
No SQL nodes to process.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:00.100185.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'plugins_url()'' cannot be parsed correct.
HTML code '$'plugins_url()'' cannot be parsed correct.
HTML code '$'plugins_url()'' cannot be parsed correct.
HTML code '$'plugins_url()'' cannot be parsed correct.
HTML code '$'plugins_url()'' cannot be parsed correct.
HTML code '$'</h2>

	<h2>Guides:</h2>

  <h3>Using Gumroad blocks</h3>

  <p>Open the post editor and add a new Gumroad Block by searching for <em>gumroad</em> in the block inserter menu. Choose the Gumroad Block option. You can change the text of the Gumroad link directly. Before the link will work you\'ll need to add a URL to your Gumroad block; While editing the Link text click on the gear icon in the upper right corner to reveal the settings menu.</p>

  <p>In the settings menu you can add the link to your Gumroad product.</p>

  <p>
    <img src='' cannot be parsed correct.
HTML code '$'/gumroad/assets/images/gumroad-wp-004.gif" alt="">
  </p>

  <p>You may also change the appearance and behavior of your Gumroad link from the settings menu.</p>

  <p>
    <img src="'' cannot be parsed correct.
HTML code '$'/gumroad/assets/images/gumroad-wp-005.gif" alt="">
  </p>

  <p>It\'s also possible to change the link into an embedded product.</p>

  <p>
    <img src="'' cannot be parsed correct.
HTML code '$'/gumroad/assets/images/gumroad-wp-006.gif" alt="">
  </p>


	<h3>Using Shortcodes</h3>

	<h4>For WordPress version 5.0:</h4>

	<p>Open the Editor and either type <code>/</code> or click on the <em>plus</em> icon and then choose to add a shortcode.</p>

	<p>
		<img src="'' cannot be parsed correct.
HTML code '$'/gumroad/assets/images/gumroad-wp-001.png" alt="">
	</p>

	<p>With the Shortcode Block you can use shortcodes normally like you would in WordPress version <strong>4.9</strong>.</p>

	<p>
		<img src="'' cannot be parsed correct.
HTML code '$'/gumroad/assets/images/gumroad-wp-007.png" alt="">
	</p>

	<h4>For WordPress version 4.9.2 and lower:</h4>

	<p>Use the shortcode <code>[gumroad url="https://gumroad.com/l/DviQY"]</code> to add a normal link (anchor tag) to a Gumroad product with the text "I want this!". Clicking this link will not trigger the overlay.

	<p>Use the shortcode <code>[gumroad url="https://gumroad.com/l/DviQY" button="true"]</code> to add a button to a Gumroad product. This button will be purely cosmetic.

	<p>Use the shortcode <code>[gumroad url="https://gumroad.com/l/DviQY" type="overlay"]</code> to add a link to a Gumroad product that will open in an overlay.</p>

	<p>Use the shortcode <code>[gumroad url="https://gumroad.com/l/GAPdj" type="embed"]</code> to add an embedded Gumroad product.</p>

	<p>Similarly,</p>

	<p>Use the shortcode <code>[gumroad url="https://gumroad.com/a/919237747/llNDe" type="overlay"]</code> to add a link to an affiliated Gumroad product that will open in an overlay.</p>

	<p>Use the shortcode <code>[gumroad url="https://gumroad.com/a/919237747/llNDe" type="embed"]</code> to add an embedded affiliated Gumroad product.</p>

	<h4>Available attributes for a shortcode:</h4>

	<table class="widefat importers" cellspacing="0">
		<thead>
			<tr>
				<th>Attribute</th>
				<th>Required?</th>
				<th>Description</th>
				<th>Options</th>
				<th>Default</th>
			</tr>
		</thead>
		<tbody>
			<tr>
				<td><strong>url</strong></td>
				<td><strong>Yes</strong></td>
				<td>Gumroad product URL</td>
				<td>
					<ul class="ul-disc">
						<li>Any valid Gumroad regular product URL <small>(can be copied from <a href="https://gumroad.com/products" target="_blank">gumroad.com/products</a> while signed in)</small></li>
						<li>Or, an affiliated product URL <small>(can be copied from <a href="https://gumroad.com/products/affiliated" target="_blank">gumroad.com/products/affiliated</a> while signed in)</small></li>
					</ul>
				</td>
				<td>none</td>
			</tr>
			<tr>
				<td><strong>type</strong></td>
				<td>No</td>
				<td>The type of product link you want to show.</td>
				<td>none, overlay, embed</td>
				<td>none</td>
			</tr>
			<tr>
				<td><strong>text</strong></td>
				<td>No</td>
				<td>Text for the link or button (applies to overlay only).</td>
				<td>Any text</td>
				<td>I want this!</td>
			</tr>
			<tr>
				<td><strong>wanted</strong></td>
				<td>No</td>
				<td>If true, user will be sent directly to the checkout form (applies to overlay only).</td>
				<td>true if wanted, otherwise leave unspecified</td>
				<td>False</td>
			</tr>
			<tr>
				<td><strong>button</strong></td>
				<td>No</td>
				<td>An option to change the gumroad link into a Gumroad button.</td>
				<td>true, false</td>
				<td>False</td>
			</tr>
			<tr>
				<td><strong>class</strong></td>
				<td>No</td>
				<td>An optional class that you can add to gumroad buttons and links</td>
				<td>Text including letters, numbers, and dashes. A space separates multiple classes</td>
				<td>none</td>
			</tr>
		</tbody>
	</table>

	<h4>More examples</h4>

	<ul class="ul-disc">
		<li><code>[gumroad url="https://gumroad.com/l/DviQY" button="true" type="overlay" text="Purchase Item" wanted="true"]</code></li>
		<p><img src="https://s3.amazonaws.com/gumroad/assets/wordpress_docs/wantedoverlaydemo.gif"></p>
	</ul>

	<h3>Automatic linking and embeds</h3>

	<p>You can forego using shortcodes entirely, and links to Gumroad products will automatically trigger the overlay. Embed code copied from the <a href="https://gumroad.com/widgets" target="_blank">Gumroad product widget</a> will also work without including the script tag:</p>

	<p>
		<code>
		&lt;div class="gumroad-product-embed"&gt;&lt;a href="https://gumroad.com/l/DviQY"&gt;Loading...&lt;/a&gt;&lt;/div&gt;
		</code>
	</p>

	<hr>

	<p>We\'d love a super short review. Seriously, it means a lot.</p>

	<a href="https://wordpress.org/support/view/plugin-reviews/gumroad" class="button-primary" target="_blank">Submit a review</a>

	<p>Need some help? Have a feature request?</p>
	<p><a href="https://wordpress.org/support/plugin/gumroad" target="_blank">Visit our Community Support Forums</a></p>

	<hr>

</div><!-- .wrap -->
'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:01.278797.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.114967.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 3 do_action/apply_filters calls and 8 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.649108.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbplusDetector
### Start running FrontBaseDetector
### Finish running CubridDetector
### Start running HashDetector
### Finish running FileProDetector
### Start running IBMDb2Detector
### Finish running DbaseDetector
### Start running InformixDetector
### Finish running FirebirdInterBaseDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running HashDetector
### Start running OpenSSLDetector
### Finish running Oci8Detector
### Start running ParadoxDetector
### Finish running MongoDbDetector
### Start running PasswordHashingDetector
### Finish running ParadoxDetector
### Start running PhpCurlDetector
### Finish running OpenSSLDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PasswordHashingDetector
### Start running PHPRetrievalDetector
### Finish running PhpCurlDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPIncludedDetector
### Start running PhpVarDetector
### Finish running ArrayElementDetector
### Start running PostgreSQLDetector
### Finish running PhpVarDetector
### Start running PropertyDetector
### Finish running PostgreSQLDetector
### Start running Sqlite3Detector
### Finish running PHPStorageDetector
### Start running SqliteDetector
### Finish running PHPRetrievalDetector
### Start running SqlServerDetector
### Finish running SqliteDetector
### Start running SybaseDetector
### Finish running SybaseDetector
### Start running TokyoTyrantDetector
### Finish running PropertyDetector
### Start running UserInputDetector
### Finish running Sqlite3Detector
### Start running VariableDetector
### Finish running TokyoTyrantDetector
### Start running WordpressHashingFnDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRemoteDetector
### Finish running SqlServerDetector
### Start running WordPressRetrievalDetector
### Finish running WordPressRemoteDetector
### Start running WordPressStorageDetector
### Finish running WordPressStorageDetector
### Start running WP_UserDetector
### Finish running WordPressRetrievalDetector
### Start running GenericDatabaseUsageDetector
### Finish running VariableDetector
### Start running GenericEncryptionDetector
### Finish running WP_UserDetector
### Start running DeletionDetector
### Finish running GenericEncryptionDetector
### Start running UninstallDetector
### Finish running GenericDatabaseUsageDetector
### Finish running UserInputDetector
### Finish running maxdbDetector
### Finish running MySQLiDetector
### Finish running DeletionDetector
### Finish running UninstallDetector
### Finished running detectors
By data type:
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:05.503089.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 0 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.003854.

0 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
In total, tainted 0 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
In total, tainted 0 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:00.007705.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:00:23.559559!
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found no personal data in the plugin. No analysis needed. 

[main] Complaint? True 

No findings
