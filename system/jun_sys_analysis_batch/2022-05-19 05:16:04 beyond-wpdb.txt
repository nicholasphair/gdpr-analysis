Timeout in resolving values
Timeout in running neo4j query
Running Main.py on beyond-wpdb

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.655597.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:00.836386.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 47 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.508644.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 0 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.436157.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 1007 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:01.067040.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 6 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.697744.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.109699.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 374 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:05.611839.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 5427
Added 3993 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 6487
Added 1060 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.391827.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/beyond-wpdb/beyond-wpdb.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/beyond-wpdb/class/admin-ajax.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/beyond-wpdb/class/column.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/beyond-wpdb/class/information.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/beyond-wpdb/class/meta-query.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/beyond-wpdb/class/options.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/beyond-wpdb/class/register-hook.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/beyond-wpdb/class/register.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/beyond-wpdb/class/sql.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/beyond-wpdb/class/wp-orderby.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.968475.

1000 PHP_REACHES edges created
1054 PHP_REACHES edges created
6 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
4367 PHP_REACHES edges created
1000 PHP_REACHES edges created
1060 PHP_REACHES edges created
6487 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 1926 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.255720.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 5 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:03.596140.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 126 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:04.416193.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 86 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.172692.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.284133.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.831670.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.020899.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.035095.

5 CALLS edges created
212 PHP_REACHES edges created
217 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 203 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.158862.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
21 SQL operations to process.
ALTER TABLE esc_sql(constant(beyond_wpdb_get_define_table_name($primary))) ADD esc_sql($value) VARCHAR(255) GENERATED ALWAYS AS ( JSON_UNQUOTE( JSON_EXTRACT( json, '$.esc_sql($value)' ) ) )
SQL command (ALTER TABLE esc_sql(constant(beyond_wpdb_get_define_table_name($primary))) ADD esc_sql($value) VARCHAR(255) GENERATED ALWAYS AS ( JSON_UNQUOTE( JSON_EXTRACT( json, '$.esc_sql($value)' ) ) )) cannot be parsed correct.
ALTER TABLE esc_sql(constant(beyond_wpdb_get_define_table_name($primary))) ADD INDEX (esc_sql($value))
SQL command (ALTER TABLE esc_sql(constant(beyond_wpdb_get_define_table_name($primary))) ADD INDEX (esc_sql($value))) cannot be parsed correct.
ALTER TABLE esc_sql(constant(beyond_wpdb_get_define_table_name($primary))) DROP COLUMN $column
SQL command (ALTER TABLE esc_sql(constant(beyond_wpdb_get_define_table_name($primary))) DROP COLUMN $column) cannot be parsed correct.
show columns from esc_sql(constant(beyond_wpdb_get_define_table_name($primary))) where Field not in ('post_id', 'user_id', 'comment_id', 'json')
SQL command (show columns from esc_sql(constant(beyond_wpdb_get_define_table_name($primary))) where Field not in ('post_id', 'user_id', 'comment_id', 'json')) cannot be parsed correct.
SHOW TABLES LIKE 'esc_sql(constant(beyond_wpdb_get_define_table_name($primary)))'
SQL command (SHOW TABLES LIKE 'esc_sql(constant(beyond_wpdb_get_define_table_name($primary)))') cannot be parsed correct.
SHOW COLUMNS FROM esc_sql(constant(beyond_wpdb_get_define_table_name($primary))) WHERE Field NOT IN ('post_id', 'user_id', 'comment_id', 'json')
SQL command (SHOW COLUMNS FROM esc_sql(constant(beyond_wpdb_get_define_table_name($primary))) WHERE Field NOT IN ('post_id', 'user_id', 'comment_id', 'json')) cannot be parsed correct.
SHOW TABLES LIKE '%meta_beyond%'
SQL command (SHOW TABLES LIKE '%meta_beyond%') cannot be parsed correct.
SHOW TRIGGERS
SQL command (SHOW TRIGGERS) cannot be parsed correct.
SHOW GRANTS FOR 'explode("@", $wpdb->get_var("SELECT USER()"))_0'@'explode("@", $wpdb->get_var("SELECT USER()"))_1'
SQL command (SHOW GRANTS FOR 'explode("@", $wpdb->get_var("SELECT USER()"))_0'@'explode("@", $wpdb->get_var("SELECT USER()"))_1') cannot be parsed correct.
SELECT * FROM mysql.db WHERE Db = '$wpdb->get_var("SELECT DATABASE()")' AND User = 'explode("@", $wpdb->get_var("SELECT USER()"))_0'
SQL command (SELECT * FROM mysql.db WHERE Db = '$wpdb->get_var("SELECT DATABASE()")' AND User = 'explode("@", $wpdb->get_var("SELECT USER()"))_0') cannot be parsed correct.
CREATE TABLE esc_sql(constant(beyond_wpdb_get_define_table_name($primary))) (
		esc_sql($meta_table_key) INT NOT NULL,
		json JSON,
		PRIMARY KEY  (esc_sql($meta_table_key))
		)  $wpdb->get_charset_collate()
SQL command (CREATE TABLE esc_sql(constant(beyond_wpdb_get_define_table_name($primary))) ( esc_sql($meta_table_key) INT NOT NULL, json JSON, PRIMARY KEY (esc_sql($meta_table_key)) ) $wpdb->get_charset_collate()) cannot be parsed correct.
DROP TABLE esc_sql(constant(beyond_wpdb_get_define_table_name($primary)))
SQL command (DROP TABLE esc_sql(constant(beyond_wpdb_get_define_table_name($primary)))) cannot be parsed correct.
CREATE TRIGGER $this_$insert_trigger AFTER
				INSERT ON
				esc_sql($primaty_table_name)
				FOR
				EACH
				ROW
				INSERT INTO esc_sql(constant(beyond_wpdb_get_define_table_name($primary)))
					(esc_sql($meta_table_key), json)
				VALUES
					(NEW.esc_sql($primary_table_key), "{}" )
SQL command (CREATE TRIGGER $this_$insert_trigger AFTER INSERT ON esc_sql($primaty_table_name) FOR EACH ROW INSERT INTO esc_sql(constant(beyond_wpdb_get_define_table_name($primary))) (esc_sql($meta_table_key), json) VALUES (NEW.esc_sql($primary_table_key), "{}" )) cannot be parsed correct.
CREATE TRIGGER $this_$delete_trigger BEFORE
			DELETE ON
			esc_sql($primaty_table_name)
			FOR
			EACH
			ROW
			DELETE FROM esc_sql(constant(beyond_wpdb_get_define_table_name($primary)))
			WHERE esc_sql($meta_table_key) = OLD.esc_sql($primary_table_key)
SQL command (CREATE TRIGGER $this_$delete_trigger BEFORE DELETE ON esc_sql($primaty_table_name) FOR EACH ROW DELETE FROM esc_sql(constant(beyond_wpdb_get_define_table_name($primary))) WHERE esc_sql($meta_table_key) = OLD.esc_sql($primary_table_key)) cannot be parsed correct.
CREATE TRIGGER $this_$insert_meta_trigger AFTER
				INSERT ON
				esc_sql($meta_table_name)
				FOR
				EACH
				ROW
				UPDATE esc_sql(constant(beyond_wpdb_get_define_table_name($primary)))
				SET
				`json` = JSON_SET
				(`json`, CONCAT
				("$.",NEW.meta_key), NEW.meta_value) WHERE esc_sql($meta_table_key) = NEW.esc_sql($meta_table_key)
SQL command (CREATE TRIGGER $this_$insert_meta_trigger AFTER INSERT ON esc_sql($meta_table_name) FOR EACH ROW UPDATE esc_sql(constant(beyond_wpdb_get_define_table_name($primary))) SET `json` = JSON_SET (`json`, CONCAT ("$.",NEW.meta_key), NEW.meta_value) WHERE esc_sql($meta_table_key) = NEW.esc_sql($meta_table_key)) cannot be parsed correct.
CREATE TRIGGER $this_$update_meta_trigger AFTER
				UPDATE ON
				esc_sql($meta_table_name)
				FOR
				EACH
				ROW
				UPDATE esc_sql(constant(beyond_wpdb_get_define_table_name($primary)))
				SET
				`json` = JSON_SET
				(`json`, CONCAT
				("$.",NEW.meta_key), NEW.meta_value) WHERE esc_sql($meta_table_key) = NEW.esc_sql($meta_table_key)
SQL command (CREATE TRIGGER $this_$update_meta_trigger AFTER UPDATE ON esc_sql($meta_table_name) FOR EACH ROW UPDATE esc_sql(constant(beyond_wpdb_get_define_table_name($primary))) SET `json` = JSON_SET (`json`, CONCAT ("$.",NEW.meta_key), NEW.meta_value) WHERE esc_sql($meta_table_key) = NEW.esc_sql($meta_table_key)) cannot be parsed correct.
CREATE TRIGGER $this_$delete_meta_trigger AFTER
				DELETE ON
				esc_sql($meta_table_name)
				FOR
				EACH
				ROW
				UPDATE esc_sql(constant(beyond_wpdb_get_define_table_name($primary)))
				SET
				`json` = JSON_REMOVE(`json`, CONCAT
				("$.",OLD.meta_key)) WHERE esc_sql($meta_table_key) = OLD.esc_sql($meta_table_key)
SQL command (CREATE TRIGGER $this_$delete_meta_trigger AFTER DELETE ON esc_sql($meta_table_name) FOR EACH ROW UPDATE esc_sql(constant(beyond_wpdb_get_define_table_name($primary))) SET `json` = JSON_REMOVE(`json`, CONCAT ("$.",OLD.meta_key)) WHERE esc_sql($meta_table_key) = OLD.esc_sql($meta_table_key)) cannot be parsed correct.
DROP TRIGGER esc_sql($value)
SQL command (DROP TRIGGER esc_sql($value)) cannot be parsed correct.
SET SESSION group_concat_max_len = apply_filters("beyond_group_concat_max_len", $maxlen)
SQL command (SET SESSION group_concat_max_len = apply_filters("beyond_group_concat_max_len", $maxlen)) cannot be parsed correct.
INSERT INTO $table_name ($meta_table_key, json)
					SELECT $primary_table_name.$primary_table_key,
					CONCAT("{",(group_concat(CONCAT(JSON_QUOTE(meta_key), ":", JSON_QUOTE(meta_value)))), "}")
				FROM $primary_table_name
					INNER JOIN $meta_table_name
					ON $primary_table_name.esc_sql($primary_table_key) = esc_sql($meta_table_name).esc_sql($meta_table_key)
				GROUP BY esc_sql($primary_table_key)
				ON DUPLICATE
				KEY
				UPDATE json = VALUES(json)
SQL command (INSERT INTO $table_name ($meta_table_key, json) SELECT $primary_table_name.$primary_table_key, CONCAT("{",(group_concat(CONCAT(JSON_QUOTE(meta_key), ":", JSON_QUOTE(meta_value)))), "}") FROM $primary_table_name INNER JOIN $meta_table_name ON $primary_table_name.esc_sql($primary_table_key) = esc_sql($meta_table_name).esc_sql($meta_table_key) GROUP BY esc_sql($primary_table_key) ON DUPLICATE KEY UPDATE json = VALUES(json)) cannot be parsed correct.
DELETE FROM $table_name WHERE esc_sql(constant(beyond_wpdb_get_define_table_name($primary))).$primary_id NOT IN (SELECT esc_sql($primary_table_key) from esc_sql($primary_table_name))
SQL command (DELETE FROM $table_name WHERE esc_sql(constant(beyond_wpdb_get_define_table_name($primary))).$primary_id NOT IN (SELECT esc_sql($primary_table_key) from esc_sql($primary_table_name))) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [867, 885, 925, 1427, 1560, 1584, 1642, 1688, 4066, 4146, 5950, 6031, 6291, 6446, 6588, 6730, 6872, 6951, 7018, 7205, 7321]
Added 0 SQL nodes. 0 out of 21 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:08.219311.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'Speed up database loading by creating your own tables that aggregate meta information.<br>This is especially useful when you have a large number of records and for complex meta-query data calls.'' cannot be parsed correct.
HTML code '$'Settings'' cannot be parsed correct.
HTML code '$'True'' cannot be parsed correct.
HTML code '$'True'' cannot be parsed correct.
HTML code '$'NOTICE'' cannot be parsed correct.
HTML code '$'This plugin sets 4294967295 to group_concat_max_len when it createa an original table with JSON type column.<br>You can change the number by using filter \'beyond_group_concat_max_len\'.'' cannot be parsed correct.
HTML code '$'</h2>
			</div>
			<!-- data init -->
			<div class="data_init_section">
				'' cannot be parsed correct.
HTML code '$'</h2>
				<p>'' cannot be parsed correct.
HTML code '$'</p>
			</div>
		</div>
'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:01.052915.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.046088.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 1 do_action/apply_filters calls and 13 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.535655.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FileProDetector
### Start running FrontBaseDetector
### Finish running DbplusDetector
### Start running HashDetector
### Finish running DbaseDetector
### Start running IBMDb2Detector
### Finish running FirebirdInterBaseDetector
### Start running InformixDetector
### Finish running CubridDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running MongoDbDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running MsqlDetector
### Start running OpenSSLDetector
### Finish running Oci8Detector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running ArrayElementDetector
### Start running PhpCurlDetector
### Finish running HashDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PasswordHashingDetector
### Start running PHPRetrievalDetector
### Finish running PhpCurlDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPIncludedDetector
### Start running PhpVarDetector
### Finish running OpenSSLDetector
### Start running PostgreSQLDetector
### Finish running PhpVarDetector
### Start running PropertyDetector
### Finish running PostgreSQLDetector
### Start running Sqlite3Detector
### Finish running PHPStorageDetector
### Start running SqliteDetector
### Finish running PHPRetrievalDetector
### Start running SqlServerDetector
### Finish running SqliteDetector
### Start running SybaseDetector
### Finish running PropertyDetector
### Start running TokyoTyrantDetector
### Finish running SybaseDetector
### Start running UserInputDetector
### Finish running Sqlite3Detector
### Start running VariableDetector
### Finish running TokyoTyrantDetector
### Start running WordpressHashingFnDetector
### Finish running SqlServerDetector
### Start running WordPressRemoteDetector
### Finish running maxdbDetector
### Start running WordPressRetrievalDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressStorageDetector
### Finish running MySQLiDetector
### Start running WP_UserDetector
### Finish running WordPressRemoteDetector
### Start running GenericDatabaseUsageDetector
### Finish running WP_UserDetector
### Start running GenericEncryptionDetector
### Finish running WordPressStorageDetector
### Start running DeletionDetector
### Finish running GenericEncryptionDetector
### Start running UninstallDetector
### Finish running GenericDatabaseUsageDetector
### Finish running VariableDetector
### Finish running UserInputDetector
### Finish running WordPressRetrievalDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finished running detectors
class/sql.php:70
  - RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array). 

By data type:
none
	WordPressRetrievalDetector.dbDelta($sql) - set()
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:05.765791.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 0 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.023451.

0 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
In total, tainted 0 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
In total, tainted 0 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:00.008352.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:00:48.648228!
RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found no personal data in the plugin. No analysis needed. 

[main] Complaint? True 

No findings
