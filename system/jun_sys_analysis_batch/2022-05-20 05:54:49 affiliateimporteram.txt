Timeout in resolving values
Timeout in running neo4j query
Running Main.py on affiliateimporteram

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:01.245950.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.673750.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 351 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:01.290580.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 4 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.851050.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 3016 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:01.523580.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 101 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:01.121581.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.085771.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 1361 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:39.712664.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 23326
Added 18493 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 37566
Added 14240 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:03.520077.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/AffiliateImporterAm.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/autoload.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/include.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/install.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/schedule.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/screenoptions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/layout/backup_restore.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/layout/dashboard.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/layout/main.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/layout/settings.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/layout/shedule.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/layout/stats.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/layout/status.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/layout/toolbar.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/src/AIDN/Abstract/Account.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/src/AIDN/Abstract/Configurator.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/src/AIDN/Abstract/Loader.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/src/AIDN/Goods/Goods.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/src/AIDN/Log/Log.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/src/AIDN/Modules/amazon/AEIDN_AmazonAccount.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/src/AIDN/Modules/amazon/AEIDN_AmazonConfigurator.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/src/AIDN/Modules/amazon/AEIDN_AmazonLoader.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/src/AIDN/Modules/amazon/view/settings.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/src/AIDN/Pages/DashboardPage.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/src/AIDN/Pages/SettingsPage.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/src/AIDN/Prices/PriceFormula.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/src/AIDN/Utils/Ajax.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/src/AIDN/Utils/Utils.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/src/AIDN/WooCommerce/OrderList.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/src/AIDN/WooCommerce/ProductList.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/src/AIDN/WooCommerce/WooCommerce.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/src/Dnolbon/Aidn/ProductsList.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/src/Dnolbon/Aidn/Pages/BackupRestore.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/src/Dnolbon/Aidn/Pages/Dashboard.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/src/Dnolbon/Aidn/Pages/Shedule.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/src/Dnolbon/Aidn/Pages/Stats.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/src/Dnolbon/Aidn/Pages/Status.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/src/Dnolbon/Aidn/Pages/Support.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/src/Dnolbon/Aidn/Tables/BlacklistTable.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/src/Dnolbon/Aidn/Tables/SheduleTable.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/src/Dnolbon/Aidn/Tables/StatsTable.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/src/Dnolbon/Aidn/Wordpress/Frontend.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/src/Dnolbon/Aidn/Wordpress/WordpressDb.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/src/Dnolbon/Aidn/Wordpress/WordpressMenuFactory.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/src/Dnolbon/Aidn/Wordpress/WordpressMenu.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/src/Dnolbon/Aidn/Wordpress/WordpressStats.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/src/Dnolbon/Aidn/Wordpress/WordpressTranslates.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/src/Dnolbon/Aidn/Wordpress/WpListTable.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/src/Dnolbon/Aidn/Wordpress/Translates/BingAccessTokenAuthentication.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/src/Dnolbon/Aidn/Wordpress/Translates/BingHTTPTranslator.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/affiliateimporteram/src/Dnolbon/Aidn/Wordpress/Translates/BingTranslateService.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:04.676768.

351 PHP_REACHES edges created
4 REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
3016 PHP_REACHES edges created
101 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
14000 PHP_REACHES edges created
15000 PHP_REACHES edges created
16000 PHP_REACHES edges created
17000 PHP_REACHES edges created
18000 PHP_REACHES edges created
19000 PHP_REACHES edges created
19854 PHP_REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
14000 PHP_REACHES edges created
14240 PHP_REACHES edges created
37566 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 8334 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.532456.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 33 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:11.944950.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 364 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:14.695571.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 387 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.195355.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:04.705451.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:09.602798.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.071163.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.058769.

33 CALLS edges created
751 PHP_REACHES edges created
784 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 669 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.163169.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
34 SQL operations to process.
CREATE TABLE IF NOT EXISTS $table_name (`type` VARCHAR(50) NOT NULL,`external_id` VARCHAR(50) NOT NULL,`variation_id` VARCHAR(50) NOT NULL,`image` VARCHAR(1024) NULL DEFAULT NULL,`detail_url` VARCHAR(1024) NULL DEFAULT NULL,`seller_url` VARCHAR(1024) NULL DEFAULT NULL,`photos` TEXT NULL,`title` VARCHAR(1024) NULL DEFAULT NULL,`subtitle` VARCHAR(1024) NULL DEFAULT NULL,`description` MEDIUMTEXT NULL,`keywords` VARCHAR(1024) NULL DEFAULT NULL,`price` VARCHAR(50) NULL DEFAULT NULL,`regular_price` VARCHAR(50) NULL DEFAULT NULL,`curr` VARCHAR(50) NULL DEFAULT NULL,`category_id` INT NULL DEFAULT NULL,`category_name` VARCHAR(1024) NULL DEFAULT NULL,`link_category_id` INT NULL DEFAULT NULL,`additional_meta` TEXT NULL,`user_image` VARCHAR(1024) NULL DEFAULT NULL,`user_photos` TEXT NULL,`user_title` VARCHAR(1024) NULL DEFAULT NULL,`user_subtitle` VARCHAR(1024) NULL DEFAULT NULL,`user_description` MEDIUMTEXT NULL,`user_keywords` VARCHAR(1024) NULL DEFAULT NULL,`user_price` VARCHAR(1024) NULL DEFAULT NULL,`user_regular_price` VARCHAR(1024) NULL DEFAULT NULL,`user_schedule_time` DATETIME NULL DEFAULT NULL,PRIMARY KEY (`type`, `external_id`, `variation_id`)) DEFAULT CHARACTER SET $wpdb ENGINE=InnoDB;
SQL command (CREATE TABLE IF NOT EXISTS $table_name (`type` VARCHAR(50) NOT NULL,`external_id` VARCHAR(50) NOT NULL,`variation_id` VARCHAR(50) NOT NULL,`image` VARCHAR(1024) NULL DEFAULT NULL,`detail_url` VARCHAR(1024) NULL DEFAULT NULL,`seller_url` VARCHAR(1024) NULL DEFAULT NULL,`photos` TEXT NULL,`title` VARCHAR(1024) NULL DEFAULT NULL,`subtitle` VARCHAR(1024) NULL DEFAULT NULL,`description` MEDIUMTEXT NULL,`keywords` VARCHAR(1024) NULL DEFAULT NULL,`price` VARCHAR(50) NULL DEFAULT NULL,`regular_price` VARCHAR(50) NULL DEFAULT NULL,`curr` VARCHAR(50) NULL DEFAULT NULL,`category_id` INT NULL DEFAULT NULL,`category_name` VARCHAR(1024) NULL DEFAULT NULL,`link_category_id` INT NULL DEFAULT NULL,`additional_meta` TEXT NULL,`user_image` VARCHAR(1024) NULL DEFAULT NULL,`user_photos` TEXT NULL,`user_title` VARCHAR(1024) NULL DEFAULT NULL,`user_subtitle` VARCHAR(1024) NULL DEFAULT NULL,`user_description` MEDIUMTEXT NULL,`user_keywords` VARCHAR(1024) NULL DEFAULT NULL,`user_price` VARCHAR(1024) NULL DEFAULT NULL,`user_regular_price` VARCHAR(1024) NULL DEFAULT NULL,`user_schedule_time` DATETIME NULL DEFAULT NULL,PRIMARY KEY (`type`, `external_id`, `variation_id`)) DEFAULT CHARACTER SET $wpdb ENGINE=InnoDB;) cannot be parsed correct.
CREATE TABLE IF NOT EXISTS $table_name (`type` VARCHAR(50) NOT NULL,`external_id` VARCHAR(50) NOT NULL,`variation_id` VARCHAR(50) NOT NULL,`image` VARCHAR(1024) NULL DEFAULT NULL,`detail_url` VARCHAR(1024) NULL DEFAULT NULL,`seller_url` VARCHAR(1024) NULL DEFAULT NULL,`photos` TEXT NULL,`title` VARCHAR(1024) NULL DEFAULT NULL,`subtitle` VARCHAR(1024) NULL DEFAULT NULL,`description` MEDIUMTEXT NULL,`keywords` VARCHAR(1024) NULL DEFAULT NULL,`price` VARCHAR(50) NULL DEFAULT NULL,`regular_price` VARCHAR(50) NULL DEFAULT NULL,`curr` VARCHAR(50) NULL DEFAULT NULL,`category_id` INT NULL DEFAULT NULL,`category_name` VARCHAR(1024) NULL DEFAULT NULL,`link_category_id` INT NULL DEFAULT NULL,`additional_meta` TEXT NULL,`user_image` VARCHAR(1024) NULL DEFAULT NULL,`user_photos` TEXT NULL,`user_title` VARCHAR(1024) NULL DEFAULT NULL,`user_subtitle` VARCHAR(1024) NULL DEFAULT NULL,`user_description` MEDIUMTEXT NULL,`user_keywords` VARCHAR(1024) NULL DEFAULT NULL,`user_price` VARCHAR(1024) NULL DEFAULT NULL,`user_regular_price` VARCHAR(1024) NULL DEFAULT NULL,`user_schedule_time` DATETIME NULL DEFAULT NULL,PRIMARY KEY (`type`, `external_id`, `variation_id`))  ENGINE=InnoDB;
SQL command (CREATE TABLE IF NOT EXISTS $table_name (`type` VARCHAR(50) NOT NULL,`external_id` VARCHAR(50) NOT NULL,`variation_id` VARCHAR(50) NOT NULL,`image` VARCHAR(1024) NULL DEFAULT NULL,`detail_url` VARCHAR(1024) NULL DEFAULT NULL,`seller_url` VARCHAR(1024) NULL DEFAULT NULL,`photos` TEXT NULL,`title` VARCHAR(1024) NULL DEFAULT NULL,`subtitle` VARCHAR(1024) NULL DEFAULT NULL,`description` MEDIUMTEXT NULL,`keywords` VARCHAR(1024) NULL DEFAULT NULL,`price` VARCHAR(50) NULL DEFAULT NULL,`regular_price` VARCHAR(50) NULL DEFAULT NULL,`curr` VARCHAR(50) NULL DEFAULT NULL,`category_id` INT NULL DEFAULT NULL,`category_name` VARCHAR(1024) NULL DEFAULT NULL,`link_category_id` INT NULL DEFAULT NULL,`additional_meta` TEXT NULL,`user_image` VARCHAR(1024) NULL DEFAULT NULL,`user_photos` TEXT NULL,`user_title` VARCHAR(1024) NULL DEFAULT NULL,`user_subtitle` VARCHAR(1024) NULL DEFAULT NULL,`user_description` MEDIUMTEXT NULL,`user_keywords` VARCHAR(1024) NULL DEFAULT NULL,`user_price` VARCHAR(1024) NULL DEFAULT NULL,`user_regular_price` VARCHAR(1024) NULL DEFAULT NULL,`user_schedule_time` DATETIME NULL DEFAULT NULL,PRIMARY KEY (`type`, `external_id`, `variation_id`)) ENGINE=InnoDB;) cannot be parsed correct.
CREATE TABLE IF NOT EXISTS $wpdbAIDN_TABLE_ACCOUNT (`id` int(20) unsigned NOT NULL AUTO_INCREMENT,`name` VARCHAR(1024) NOT NULL,`data` text DEFAULT NULL,PRIMARY KEY (`id`)) DEFAULT CHARACTER SET $wpdb ENGINE=InnoDB;
SQL command (CREATE TABLE IF NOT EXISTS $wpdbAIDN_TABLE_ACCOUNT (`id` int(20) unsigned NOT NULL AUTO_INCREMENT,`name` VARCHAR(1024) NOT NULL,`data` text DEFAULT NULL,PRIMARY KEY (`id`)) DEFAULT CHARACTER SET $wpdb ENGINE=InnoDB;) cannot be parsed correct.
CREATE TABLE IF NOT EXISTS $wpdbAIDN_TABLE_PRICE_FORMULA (`id` int(20) unsigned NOT NULL AUTO_INCREMENT,`pos` INT(20) NOT NULL DEFAULT 0,`formula` TEXT NOT NULL,PRIMARY KEY (`id`)) DEFAULT CHARACTER SET $wpdb ENGINE=InnoDB;
SQL command (CREATE TABLE IF NOT EXISTS $wpdbAIDN_TABLE_PRICE_FORMULA (`id` int(20) unsigned NOT NULL AUTO_INCREMENT,`pos` INT(20) NOT NULL DEFAULT 0,`formula` TEXT NOT NULL,PRIMARY KEY (`id`)) DEFAULT CHARACTER SET $wpdb ENGINE=InnoDB;) cannot be parsed correct.
CREATE TABLE IF NOT EXISTS $wpdbAIDN_TABLE_LOG (`id` int(20) unsigned NOT NULL AUTO_INCREMENT,`text` VARCHAR(1024) NULL DEFAULT NULL,`type` VARCHAR(50) NOT NULL,`module` VARCHAR(50) NOT NULL,`time` DATETIME NULL DEFAULT NULL,PRIMARY KEY (`id`))  ENGINE=InnoDB;
SQL command (CREATE TABLE IF NOT EXISTS $wpdbAIDN_TABLE_LOG (`id` int(20) unsigned NOT NULL AUTO_INCREMENT,`text` VARCHAR(1024) NULL DEFAULT NULL,`type` VARCHAR(50) NOT NULL,`module` VARCHAR(50) NOT NULL,`time` DATETIME NULL DEFAULT NULL,PRIMARY KEY (`id`)) ENGINE=InnoDB;) cannot be parsed correct.
CREATE TABLE IF NOT EXISTS $wpdbAIDN_TABLE_BLACKLIST (`id` int(20) unsigned NOT NULL AUTO_INCREMENT,`external_id` varchar(50) NOT NULL,`source` VARCHAR(50) NOT NULL,PRIMARY KEY (`id`))  ENGINE=InnoDB;
SQL command (CREATE TABLE IF NOT EXISTS $wpdbAIDN_TABLE_BLACKLIST (`id` int(20) unsigned NOT NULL AUTO_INCREMENT,`external_id` varchar(50) NOT NULL,`source` VARCHAR(50) NOT NULL,PRIMARY KEY (`id`)) ENGINE=InnoDB;) cannot be parsed correct.
CREATE TABLE IF NOT EXISTS $wpdbAIDN_TABLE_STATS (`id` int(20) unsigned NOT NULL AUTO_INCREMENT,`product_id` varchar(50) NOT NULL,`date` DATE NOT NULL,`quantity` INT (11) NOT NULL DEFAULT 0,PRIMARY KEY (`id`))  ENGINE=InnoDB;
SQL command (CREATE TABLE IF NOT EXISTS $wpdbAIDN_TABLE_STATS (`id` int(20) unsigned NOT NULL AUTO_INCREMENT,`product_id` varchar(50) NOT NULL,`date` DATE NOT NULL,`quantity` INT (11) NOT NULL DEFAULT 0,PRIMARY KEY (`id`)) ENGINE=InnoDB;) cannot be parsed correct.
SELECT * FROM $wpdbAIDN_TABLE_ACCOUNT WHERE name='get_class($this)'
SQL command (SELECT * FROM $wpdbAIDN_TABLE_ACCOUNT WHERE name='get_class($this)') cannot be parsed correct.
SELECT * FROM $wpdbAIDN_TABLE_GOODS WHERE type='$this_type' and external_id='$this_external_id' and variation_id='$this_variation_id'
SQL command (SELECT * FROM $wpdbAIDN_TABLE_GOODS WHERE type='$this_type' and external_id='$this_external_id' and variation_id='$this_variation_id') cannot be parsed correct.
SELECT * FROM $wpdbAIDN_TABLE_LOG WHERE `module` = '$this_module' AND `type` IN (implode(",", $type)) AND `id` > $start_id
SQL command (SELECT * FROM $wpdbAIDN_TABLE_LOG WHERE `module` = '$this_module' AND `type` IN (implode(",", $type)) AND `id` > $start_id) cannot be parsed correct.
SELECT $wpdbAIDN_TABLE_GOODS.* FROM $wpdbAIDN_TABLE_GOODS left join $wpdbAIDN_TABLE_BLACKLIST on 
                $wpdbAIDN_TABLE_GOODS.external_id = $wpdbAIDN_TABLE_BLACKLIST.external_id $where AND $wpdbAIDN_TABLE_BLACKLIST.id is null  LIMIT , $per_page
SQL command (SELECT $wpdbAIDN_TABLE_GOODS.* FROM $wpdbAIDN_TABLE_GOODS left join $wpdbAIDN_TABLE_BLACKLIST on $wpdbAIDN_TABLE_GOODS.external_id = $wpdbAIDN_TABLE_BLACKLIST.external_id $where AND $wpdbAIDN_TABLE_BLACKLIST.id is null LIMIT , $per_page) cannot be parsed correct.
SELECT * FROM $wpdbAIDN_TABLE_PRICE_FORMULA ORDER BY pos
SQL command (SELECT * FROM $wpdbAIDN_TABLE_PRICE_FORMULA ORDER BY pos) cannot be parsed correct.
SELECT * FROM $wpdbAIDN_TABLE_PRICE_FORMULA WHERE id='$id'
SQL command (SELECT * FROM $wpdbAIDN_TABLE_PRICE_FORMULA WHERE id='$id') cannot be parsed correct.
SELECT id,user_nicename,user_email,user_registered,meta_value,user_status,display_name FROM
     $dbusers
          left join $dbusermeta on $dbusermeta.user_id = $wpdbusers.ID and
           $wpdbusermeta.meta_key = "wp_capabilities"
           limit filter_input(INPUT_GET, "limit"),50
           
SQL command (SELECT id,user_nicename,user_email,user_registered,meta_value,user_status,display_name FROM $dbusers left join $dbusermeta on $dbusermeta.user_id = $wpdbusers.ID and $wpdbusermeta.meta_key = "wp_capabilities" limit filter_input(INPUT_GET, "limit"),50 ) cannot be parsed correct.
SELECT * FROM
     $wpdbusermeta where $wpdbusermeta.user_id = $res
SQL command (SELECT * FROM $wpdbusermeta where $wpdbusermeta.user_id = $res) cannot be parsed correct.
SELECT * FROM $wpdboptions where option_name like "aidn%"
SQL command (SELECT * FROM $wpdboptions where option_name like "aidn%") cannot be parsed correct.
SELECT 
                     
                    sum((select count(*) from $dbAIDN_TABLE_STATS
                    where $db.ID = $dbAIDN_TABLE_STATS.product_id
                    and quantity = 0
                    and DATE_ADD(`date`, INTERVAL +$stats) > date(now()))) as hits,
                    sum(ifnull((select sum(quantity) from $dbAIDN_TABLE_STATS
                    where $db.ID = $dbAIDN_TABLE_STATS.product_id
                    and DATE_ADD(`date`, INTERVAL +$stats) > date(now())), 0)) as orders
                FROM $dbAIDN_TABLE_GOODS_ARCHIVE 
                    left join $db on $db.meta_key = "external_id" 
                    and $db.meta_value = concat("amazon#", $dbAIDN_TABLE_GOODS_ARCHIVE.external_id)
                    
                    left join $wpdb on $wpdb.ID = $wpdb.post_id
                     
                where $wpdb.meta_id is not null
                
SQL command (SELECT sum((select count(*) from $dbAIDN_TABLE_STATS where $db.ID = $dbAIDN_TABLE_STATS.product_id and quantity = 0 and DATE_ADD(`date`, INTERVAL +$stats) > date(now()))) as hits, sum(ifnull((select sum(quantity) from $dbAIDN_TABLE_STATS where $db.ID = $dbAIDN_TABLE_STATS.product_id and DATE_ADD(`date`, INTERVAL +$stats) > date(now())), 0)) as orders FROM $dbAIDN_TABLE_GOODS_ARCHIVE left join $db on $db.meta_key = "external_id" and $db.meta_value = concat("amazon#", $dbAIDN_TABLE_GOODS_ARCHIVE.external_id) left join $wpdb on $wpdb.ID = $wpdb.post_id where $wpdb.meta_id is not null ) cannot be parsed correct.
SELECT 
                    $dbAIDN_TABLE_GOODS_ARCHIVE.*, 
                    (select count(*) from $dbAIDN_TABLE_STATS
                    where $db.ID = $dbAIDN_TABLE_STATS.product_id
                    and quantity = 0
                    and DATE_ADD(`date`, INTERVAL +$stats)  > date(now())) as hits,
                    ifnull((select sum(quantity) from $dbAIDN_TABLE_STATS
                    where $db.ID = $dbAIDN_TABLE_STATS.product_id
                    and DATE_ADD(`date`, INTERVAL +$stats)  > date(now())), 0) as orders
                FROM $dbAIDN_TABLE_GOODS_ARCHIVE 
                    left join $db on $db.meta_key = "external_id" 
                    and $db.meta_value = concat("amazon#", $dbAIDN_TABLE_GOODS_ARCHIVE.external_id)
                    
                    left join $db on $wpdb.ID = $wpdb.post_id
                     
                where $wpdb.meta_id is not null
                
                order by hits desc
                    
                limit 0,$this->getLimit()
SQL command (SELECT $dbAIDN_TABLE_GOODS_ARCHIVE.*, (select count(*) from $dbAIDN_TABLE_STATS where $db.ID = $dbAIDN_TABLE_STATS.product_id and quantity = 0 and DATE_ADD(`date`, INTERVAL +$stats) > date(now())) as hits, ifnull((select sum(quantity) from $dbAIDN_TABLE_STATS where $db.ID = $dbAIDN_TABLE_STATS.product_id and DATE_ADD(`date`, INTERVAL +$stats) > date(now())), 0) as orders FROM $dbAIDN_TABLE_GOODS_ARCHIVE left join $db on $db.meta_key = "external_id" and $db.meta_value = concat("amazon#", $dbAIDN_TABLE_GOODS_ARCHIVE.external_id) left join $db on $wpdb.ID = $wpdb.post_id where $wpdb.meta_id is not null order by hits desc limit 0,$this->getLimit()) cannot be parsed correct.
SELECT 
                    $dbAIDN_TABLE_GOODS_ARCHIVE.*
                FROM $wpdbAIDN_TABLE_GOODS_ARCHIVE 
                     
                where user_schedule_time is not null and user_schedule_time <> "0000-00-00 00:00:00"
                
                order by $_GET_orderby $_GET_orderuser_schedule_time asc
                    
                limit ,20
SQL command (SELECT $dbAIDN_TABLE_GOODS_ARCHIVE.* FROM $wpdbAIDN_TABLE_GOODS_ARCHIVE where user_schedule_time is not null and user_schedule_time <> "0000-00-00 00:00:00" order by $_GET_orderby $_GET_orderuser_schedule_time asc limit ,20) cannot be parsed correct.
SELECT 
                    $dbAIDN_TABLE_GOODS_ARCHIVE.*
                FROM $dbAIDN_TABLE_GOODS_ARCHIVE 
                    inner join $dbAIDN_TABLE_BLACKLIST on 
                     $dbAIDN_TABLE_GOODS_ARCHIVE.external_id = $wpdbAIDN_TABLE_BLACKLIST.external_id
                     
                where 1 = 1                
                order by $_GET_orderby $_GET_ordertitle desc
                    
                limit ,20
SQL command (SELECT $dbAIDN_TABLE_GOODS_ARCHIVE.* FROM $dbAIDN_TABLE_GOODS_ARCHIVE inner join $dbAIDN_TABLE_BLACKLIST on $dbAIDN_TABLE_GOODS_ARCHIVE.external_id = $wpdbAIDN_TABLE_BLACKLIST.external_id where 1 = 1 order by $_GET_orderby $_GET_ordertitle desc limit ,20) cannot be parsed correct.
SELECT 
                    $dbAIDN_TABLE_GOODS_ARCHIVE.*, 
                    (select count(*) from $dbAIDN_TABLE_STATS
                    where $db.ID = $dbAIDN_TABLE_STATS.product_id
                    and quantity = 0) as hits,
                    ifnull((select sum(quantity) from $dbAIDN_TABLE_STATS
                    where $db.ID = $dbAIDN_TABLE_STATS.product_id), 0) as orders,
                    $db.post_date
                FROM $dbAIDN_TABLE_GOODS_ARCHIVE 
                    left join $db on $db.meta_key = "external_id" 
                    and $db.meta_value = concat("amazon#", $dbAIDN_TABLE_GOODS_ARCHIVE.external_id)
                    
                    left join $db on $db.ID = $wpdb.post_id
                     
                where $wpdb.meta_id is not null
                
                order by $_GET_orderby $_GET_orderpost_date desc
                    
                limit ,20
SQL command (SELECT $dbAIDN_TABLE_GOODS_ARCHIVE.*, (select count(*) from $dbAIDN_TABLE_STATS where $db.ID = $dbAIDN_TABLE_STATS.product_id and quantity = 0) as hits, ifnull((select sum(quantity) from $dbAIDN_TABLE_STATS where $db.ID = $dbAIDN_TABLE_STATS.product_id), 0) as orders, $db.post_date FROM $dbAIDN_TABLE_GOODS_ARCHIVE left join $db on $db.meta_key = "external_id" and $db.meta_value = concat("amazon#", $dbAIDN_TABLE_GOODS_ARCHIVE.external_id) left join $db on $db.ID = $wpdb.post_id where $wpdb.meta_id is not null order by $_GET_orderby $_GET_orderpost_date desc limit ,20) cannot be parsed correct.

			SELECT DISTINCT YEAR( post_date ) AS year, MONTH( post_date ) AS month
			FROM $wpdb
			WHERE post_type = $post_type
			AND post_status != 'auto-draft'
			ORDER BY post_date DESC
		

			SELECT DISTINCT YEAR( post_date ) AS year, MONTH( post_date ) AS month
			FROM $wpdb
			WHERE post_type = $post_type
			AND post_status != 'auto-draft'
			ORDER BY post_date DESC
		
SQL command ( SELECT DISTINCT YEAR( post_date ) AS year, MONTH( post_date ) AS month FROM $wpdb WHERE post_type = $post_type AND post_status != 'auto-draft' ORDER BY post_date DESC ) cannot be parsed correct.
DROP TABLE IF EXISTS $wpdbAIDN_TABLE_GOODS;
SQL command (DROP TABLE IF EXISTS $wpdbAIDN_TABLE_GOODS;) cannot be parsed correct.
DROP TABLE IF EXISTS $wpdbAIDN_TABLE_GOODS_ARCHIVE;
SQL command (DROP TABLE IF EXISTS $wpdbAIDN_TABLE_GOODS_ARCHIVE;) cannot be parsed correct.
DROP TABLE IF EXISTS $wpdbAIDN_TABLE_ACCOUNT;
SQL command (DROP TABLE IF EXISTS $wpdbAIDN_TABLE_ACCOUNT;) cannot be parsed correct.
DROP TABLE IF EXISTS $wpdbAIDN_TABLE_PRICE_FORMULA;
SQL command (DROP TABLE IF EXISTS $wpdbAIDN_TABLE_PRICE_FORMULA;) cannot be parsed correct.
DROP TABLE IF EXISTS $wpdbAIDN_TABLE_LOG;
SQL command (DROP TABLE IF EXISTS $wpdbAIDN_TABLE_LOG;) cannot be parsed correct.
DROP TABLE IF EXISTS $wpdbAIDN_TABLE_BLACKLIST;
SQL command (DROP TABLE IF EXISTS $wpdbAIDN_TABLE_BLACKLIST;) cannot be parsed correct.
DROP TABLE IF EXISTS $wpdbAIDN_TABLE_STATS;
SQL command (DROP TABLE IF EXISTS $wpdbAIDN_TABLE_STATS;) cannot be parsed correct.
TRUNCATE $wpdbAIDN_TABLE_GOODS
SQL command (TRUNCATE $wpdbAIDN_TABLE_GOODS) cannot be parsed correct.
DELETE FROM $wpdbAIDN_TABLE_GOODS WHERE NULLIF(NULLIF(user_schedule_time, '0000 - 00 - 00 00:00:00'), '') IS NULL
SQL command (DELETE FROM $wpdbAIDN_TABLE_GOODS WHERE NULLIF(NULLIF(user_schedule_time, '0000 - 00 - 00 00:00:00'), '') IS NULL) cannot be parsed correct.
delete from $wpdbAIDN_TABLE_GOODS_ARCHIVE where external_id in (
                    select external_id from $wpdbAIDN_TABLE_GOODS
                    )
SQL command (delete from $wpdbAIDN_TABLE_GOODS_ARCHIVE where external_id in ( select external_id from $wpdbAIDN_TABLE_GOODS )) cannot be parsed correct.
insert into $wpdbAIDN_TABLE_GOODS_ARCHIVE
                    select * from $wpdbAIDN_TABLE_GOODS
                    
SQL command (insert into $wpdbAIDN_TABLE_GOODS_ARCHIVE select * from $wpdbAIDN_TABLE_GOODS ) cannot be parsed correct.
UPDATE $wpdbAIDN_TABLE_PRICE_FORMULA dest, (SELECT @r:=@r+1 as new_pos, z.id from(select id from wp_aidn_price_formula order by pos) z, (select @r:=0)y) src SET dest.pos = src.new_pos where dest.id=src.id;
SQL command (UPDATE $wpdbAIDN_TABLE_PRICE_FORMULA dest, (SELECT @r:=@r+1 as new_pos, z.id from(select id from wp_aidn_price_formula order by pos) z, (select @r:=0)y) src SET dest.pos = src.new_pos where dest.id=src.id;) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [3711, 3798, 3837, 3876, 3919, 3958, 3999, 9137, 12457, 13386, 12698, 20491, 19970, 21348, 21410, 21523, 29285, 29486, 31100, 30795, 31774, 38439, 4175, 4197, 4219, 4241, 4263, 4285, 4307, 12859, 12877, 18868, 18896, 20271]
Added 0 SQL nodes. 0 out of 34 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:12.876967.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'$filter_name'' cannot be parsed correct.
HTML code '$'$filter_name'' cannot be parsed correct.
HTML code '$'$dashboard_$filter_name$filter_config_default'' cannot be parsed correct.
HTML code '$'$nn'' cannot be parsed correct.
HTML code '$'$filter_config_$nn_label'' cannot be parsed correct.
HTML code '$'$nn'' cannot be parsed correct.
HTML code '$'$nn'' cannot be parsed correct.
HTML code '$'$filter_config_$nn_placeholder'' cannot be parsed correct.
HTML code '$'resultsfilter_settings'' cannot be parsed correct.
HTML code '$'$dashboard'' cannot be parsed correct.
HTML code '$'$_GET_page'' cannot be parsed correct.
HTML code '$'reset($filter["name"])$filter_name'' cannot be parsed correct.
HTML code '$'$filter_config_label'' cannot be parsed correct.
HTML code '$'multiple'' cannot be parsed correct.
HTML code '$'$filter_name'' cannot be parsed correct.
HTML code '$'$filter_name'' cannot be parsed correct.
HTML code '$'[]'' cannot be parsed correct.
HTML code '$'$filter_config_class'' cannot be parsed correct.
HTML code '$'$filter_config_style'' cannot be parsed correct.
HTML code '$'$c_level'' cannot be parsed correct.
HTML code '$'$c_id'' cannot be parsed correct.
HTML code '$'$dashboard_$nn$filter_config_$nn_default'' cannot be parsed correct.
HTML code '$'$filter_name'' cannot be parsed correct.
HTML code '$'$filter_name'' cannot be parsed correct.
HTML code '$'$filter_config_placeholder'' cannot be parsed correct.
HTML code '$'$dashboard_$filter_name$filter_config_default'' cannot be parsed correct.
HTML code '$'$filter_config_description'' cannot be parsed correct.
HTML code '$'$filter_config_dop_row'' cannot be parsed correct.
HTML code '$'$c_term_id'' cannot be parsed correct.
HTML code '$'$c_name'' cannot be parsed correct.
HTML code '$'wp_create_nonce("upload_thumb")'' cannot be parsed correct.
HTML code '$' selected'' cannot be parsed correct.
HTML code '$' selected'' cannot be parsed correct.
HTML code '$' selected'' cannot be parsed correct.
HTML code '$' selected'' cannot be parsed correct.
HTML code '$' selected'' cannot be parsed correct.
HTML code '$' selected'' cannot be parsed correct.
HTML code '$'plugins_url("assets/img/main", AIDN_FILE_FULLNAME)/items.png'' cannot be parsed correct.
HTML code '$'$this->getTotalNumberProducts()'' cannot be parsed correct.
HTML code '$'plugins_url("assets/img/main", AIDN_FILE_FULLNAME)/views.png'' cannot be parsed correct.
HTML code '$'$this->getTotals()_0_hits'' cannot be parsed correct.
HTML code '$'plugins_url("assets/img/main", AIDN_FILE_FULLNAME)/litnk.png'' cannot be parsed correct.
HTML code '$'$this->getTotals()_0_orders'' cannot be parsed correct.
HTML code '$'$c_name'' cannot be parsed correct.
HTML code '$'$c_level'' cannot be parsed correct.
HTML code '$'$c_id'' cannot be parsed correct.
HTML code '$'$c_name'' cannot be parsed correct.
HTML code '$'$nn'' cannot be parsed correct.
HTML code '$'$filter_config_$nn_label'' cannot be parsed correct.
HTML code '$'$nn'' cannot be parsed correct.
HTML code '$'$nn'' cannot be parsed correct.
HTML code '$'$dashboard_$nn$filter_config_$nn_default'' cannot be parsed correct.
HTML code '$'$api->getType()'' cannot be parsed correct.
HTML code '$'$api->getType()'' cannot be parsed correct.
HTML code '$' selected'' cannot be parsed correct.
HTML code '$' selected'' cannot be parsed correct.
HTML code '$' selected'' cannot be parsed correct.
HTML code '$' selected'' cannot be parsed correct.
HTML code '$' selected'' cannot be parsed correct.
HTML code '$'{"1": ["yellow"], "2": ["silver"], "3": ["orange"], "4": ["pink"]}_'' cannot be parsed correct.
HTML code '$'$product'' cannot be parsed correct.
HTML code '$'$product'' cannot be parsed correct.
HTML code '$'$product'' cannot be parsed correct.
HTML code '$'$current_module'' cannot be parsed correct.
HTML code '$' nav-tab-active'' cannot be parsed correct.
HTML code '$' nav-tab-active'' cannot be parsed correct.
HTML code '$' nav-tab-active'' cannot be parsed correct.
HTML code '$'$api->getType()'' cannot be parsed correct.
HTML code '$'$api->getConfigValues("dashboard_title")'' cannot be parsed correct.
HTML code '$'get_option("aidn_currency_conversion_factor", "1")'' cannot be parsed correct.
HTML code '$'get_option("aidn_import_product_images_limit")'' cannot be parsed correct.
HTML code '$'get_option("aidn_min_product_quantity", 5)'' cannot be parsed correct.
HTML code '$'get_option("aidn_max_product_quantity", 10)'' cannot be parsed correct.
HTML code '$'get_option("aidn_proxies_list", "")'' cannot be parsed correct.
HTML code '$' checked'' cannot be parsed correct.
HTML code '$' disabled'' cannot be parsed correct.
HTML code '$' checked'' cannot be parsed correct.
HTML code '$' disabled'' cannot be parsed correct.
HTML code '$'unserialize($results)_appKey'' cannot be parsed correct.
HTML code '$'unserialize($results)_trackingId'' cannot be parsed correct.
HTML code '$'home_url()'' cannot be parsed correct.
HTML code '$'$_SERVER_SERVER_SOFTWARE'' cannot be parsed correct.
HTML code '$'phpversion()'' cannot be parsed correct.
HTML code '$'$this->checkMemoryLimit()'' cannot be parsed correct.
HTML code '$'size_format(wp_max_upload_size())'' cannot be parsed correct.
HTML code '$'size_format(woocommerce_let_to_num(ini_get("post_max_size")))'' cannot be parsed correct.
HTML code '$'ini_get("max_execution_time")'' cannot be parsed correct.
HTML code '$'$this->checkRemoteGet()'' cannot be parsed correct.
HTML code '$'$this->checkSoap()'' cannot be parsed correct.
HTML code '$'$this->checkSimpleXml()'' cannot be parsed correct.
HTML code '$'$this->getActivePlugins()'' cannot be parsed correct.
HTML code '$'YesNo'' cannot be parsed correct.
HTML code '$'$menuEl_class'' cannot be parsed correct.
HTML code '$'$menuEl_link'' cannot be parsed correct.
HTML code '$'$menuEl_exteral_linkadmin_url("admin.php?page=aidn" . $menuEl["link"]"-" . $menuEl["link"]"")'' cannot be parsed correct.
HTML code '$' class="active_page"'' cannot be parsed correct.
HTML code '$' target="_blank"'' cannot be parsed correct.
HTML code '$'plugins_url("assets/img/toolbar", AIDN_FILE_FULLNAME)/$menuEl_icon'' cannot be parsed correct.
HTML code '$'$menuEl_name'' cannot be parsed correct.
HTML code '$'$activePage'' cannot be parsed correct.
HTML code '$'get_option("aidn_update_per_schedule", 20)'' cannot be parsed correct.
HTML code '$'get_option("aidn_tr_amazon_bing_secret", "")'' cannot be parsed correct.
HTML code '$'get_option("aidn_tr_amazon_bing_client_id", "")'' cannot be parsed correct.
HTML code '$'$api->getType()'' cannot be parsed correct.
HTML code '$'$api->getType()'' cannot be parsed correct.
HTML code '$'$cat_term_id'' cannot be parsed correct.
HTML code '$'$cat_name'' cannot be parsed correct.
HTML code '$'$formula'' cannot be parsed correct.
HTML code '$'$formula'' cannot be parsed correct.
HTML code '$'$formula'' cannot be parsed correct.
HTML code '$'$formula'' cannot be parsed correct.
HTML code '$'<br/>TRACE (date("Y-m-d H:i:s", time())): posted schedule products<br/>'' cannot be parsed correct.
HTML code '$'TRACE (date("Y-m-d H:i:s", time())): check date $goods<br/>'' cannot be parsed correct.
HTML code '$'TRACE (date("Y-m-d H:i:s", time())): posted...<br/>'' cannot be parsed correct.
HTML code '$'TRACE (date("Y-m-d H:i:s", time())): ok<br/>'' cannot be parsed correct.
HTML code '$'TRACE (date("Y-m-d H:i:s", time())): loader not found<br/>'' cannot be parsed correct.
HTML code '$'$e->getMessage()<br/>'' cannot be parsed correct.
HTML code '$'TRACE (date("Y-m-d H:i:s", time())): products to post not found<br/>'' cannot be parsed correct.
HTML code '$'TRACE (date("Y-m-d H:i:s", time())): update stock availability<br/>'' cannot be parsed correct.
HTML code '$'products in work: get_option("aidn_update_per_schedule", 20)<br/>'' cannot be parsed correct.
HTML code '$'TRACE (date("Y-m-d H:i:s", time())):move to trash $post_id<br>'' cannot be parsed correct.
HTML code '$'$formula'' cannot be parsed correct.
HTML code '$'$formula'' cannot be parsed correct.
HTML code '$'$formulaPRICE $formula $formula'' cannot be parsed correct.
HTML code '$'$formula% &mdash; $formula%'' cannot be parsed correct.
HTML code '$'$formula% &mdash; $formula%'' cannot be parsed correct.
HTML code '$'$formula$formula%'' cannot be parsed correct.
HTML code '$'<td class="forminp forminp-text"><input type="text" id="$field_id" name="$field_name" value="$field_value"/></td'' cannot be parsed correct.
HTML code '$'TRACE (date("Y-m-d H:i:s", time())): product $post_id OK<br>'' cannot be parsed correct.
HTML code '$'TRACE (date("Y-m-d H:i:s", time())): product $post_id Update price error!<br>'' cannot be parsed correct.
HTML code '$'TRACE (date("Y-m-d H:i:s", time())): update regular price for $post_id: $loader->getDetailProc($goods->external_id, array_merge(["wc_product_id" => $post_id], is_array($filters)$filters[]))_goods_user_price<br>'' cannot be parsed correct.
HTML code '$'TRACE (date("Y-m-d H:i:s", time())): error while update price for $post_id: $loader->getDetailProc($goods->external_id, array_merge(["wc_product_id" => $post_id], is_array($filters)$filters[]))_message<br>'' cannot be parsed correct.
HTML code '$'$e->getMessage()<br/>'' cannot be parsed correct.
HTML code '$'<input type="hidden" id="$field_id" name="<?php echo $field["name"]; ?>" value="$field_value"/'' cannot be parsed correct.
HTML code '$'<h3>$this->getForm()_title</h3>'' cannot be parsed correct.
HTML code '$'<td scope="row" class="titledesc"><label for="$field_id"$field_title</label></td>'' cannot be parsed correct.
HTML code '$'<tr id=$item->getId()"'' cannot be parsed correct.
HTML code '$'json_encode($result)'' cannot be parsed correct.
HTML code '$'json_encode($result)'' cannot be parsed correct.
HTML code '$'json_encode($result)'' cannot be parsed correct.
HTML code '$'<input type="hidden" class="item_id" value="$goods->getId()"/'' cannot be parsed correct.
HTML code '$'<input type="hidden" class="editor_id" value="$goods->getId("-")"/'' cannot be parsed correct.
HTML code '$'json_encode($result)'' cannot be parsed correct.
HTML code '$'json_encode($result)'' cannot be parsed correct.
HTML code '$'json_encode($result)'' cannot be parsed correct.
HTML code '$'json_encode($result)'' cannot be parsed correct.
HTML code '$'json_encode($result)'' cannot be parsed correct.
HTML code '$'json_encode($result)'' cannot be parsed correct.
HTML code '$'json_encode(["state" => "error", "message" => "Uncknown price id"])'' cannot be parsed correct.
HTML code '$'json_encode(["state" => "error", "message" => "Price formula(" . sanitize_text_field($_POST["id"]) . ") not found"])'' cannot be parsed correct.
HTML code '$'json_encode(apply_filters("aidn_after_ajax_import_goods", $result))'' cannot be parsed correct.
HTML code '$'json_encode($result)'' cannot be parsed correct.
HTML code '$'json_encode(apply_filters("aidn_after_ajax_update_goods", $result))'' cannot be parsed correct.
HTML code '$'json_encode($result)'' cannot be parsed correct.
HTML code '$'json_encode(["state" => "ok", "formula" => $formula, "categories_tree" => $categories_tree_arr, "api_list" => $api_list_arr, "sign_list" => $sign_list_arr, "discount_list" => $discount_list_arr])'' cannot be parsed correct.
HTML code '$'json_encode($result)'' cannot be parsed correct.
HTML code '$'json_encode($result)'' cannot be parsed correct.
HTML code '$'json_encode($result)'' cannot be parsed correct.
HTML code '$'json_encode(["state" => "error", "message" => "Uncknown price id"])'' cannot be parsed correct.
HTML code '$'json_encode(["state" => "error", "message" => "Price formula(" . sanitize_text_field($_POST["id"]) . ") not found"])'' cannot be parsed correct.
HTML code '$'$action'' cannot be parsed correct.
HTML code '$'$action'' cannot be parsed correct.
HTML code '$'implode($actions, " | ")'' cannot be parsed correct.
HTML code '$'<div class="updated"><p>sprintf(_n("Product updated.", "%s products updated.", $_REQUEST["aidn_updated"]), number_format_i18n($_REQUEST["aidn_updated"]))</p></div>'' cannot be parsed correct.
HTML code '$'Exception-$e->getMessage()'' cannot be parsed correct.
HTML code '$'<label for="bulk-action-selector$which" class="screen-reader-text">Select bulk action</label>'' cannot be parsed correct.
HTML code '$'<select name="actio" id="bulk-action-selector-$which">'' cannot be parsed correct.
HTML code '$'<option value="-1">Bulk Actions</option>
'' cannot be parsed correct.
HTML code '$'	<option value=$name$class>$title</option>
'' cannot be parsed correct.
HTML code '$'<input type="hidden" name="orderby" value="$_REQUEST_orderby" /'' cannot be parsed correct.
HTML code '$'<input type="hidden" name="order" value="$_REQUEST_order" /'' cannot be parsed correct.
HTML code '$'<input type="hidden" name="post_mime_type" value="$_REQUEST_post_mime_type" /'' cannot be parsed correct.
HTML code '$'<input type="hidden" name="detached" value="$_REQUEST_detached" /'' cannot be parsed correct.
HTML code '$'$input_id'' cannot be parsed correct.
HTML code '$'$text'' cannot be parsed correct.
HTML code '$'$input_id'' cannot be parsed correct.
HTML code '$'implode(" |</li>
", $views)</li>
'' cannot be parsed correct.
HTML code '$'implode(" ", $this->get_table_classes())'' cannot be parsed correct.
HTML code '$' data-wp-lists=\'list:$this__args_singular\''' cannot be parsed correct.
HTML code '$'$which'' cannot be parsed correct.
HTML code '$'$this__pagination'' cannot be parsed correct.
HTML code '$'<$tag $scope $id {"1": ["manage-column"], "2": ["column-"]}><a href=add_query_arg(compact("orderby", "order"), $current_url)"><span$column_display_name</span><span class="sorting-indicator"></span></a></$tag>'' cannot be parsed correct.
HTML code '$'<tr class="no-items"><td class="colspanchange" colspan="$this->get_column_count()"'' cannot be parsed correct.
HTML code '$'<tr id=$this->getId($item)"'' cannot be parsed correct.
HTML code '$'$this->columnCb($item)'' cannot be parsed correct.
HTML code '$'<td class=\'$columnName column-$columnName\' data-colname=wp_strip_all_tags($column_display_name)>'' cannot be parsed correct.
HTML code '$'$this->"column" . ucfirst($columnName)($item)'' cannot be parsed correct.
HTML code '$'$this->handle_rowActions($item, $columnName, $primary)'' cannot be parsed correct.
HTML code '$'$current_mode'' cannot be parsed correct.
HTML code '$'<td class=\'$columnName column-$columnName\' data-colname=wp_strip_all_tags($column_display_name)>'' cannot be parsed correct.
HTML code '$'$this->columnDefault($item, $columnName)'' cannot be parsed correct.
HTML code '$'$this->handle_rowActions($item, $columnName, $primary)'' cannot be parsed correct.
HTML code '$'"
                                                      '' cannot be parsed correct.
HTML code '$'"
>
    <h2 class="nav-tab-wrapper">
        <a href="#" class="nav-tab nav-tab-active" rel="filter_settings">Filter</a>
        <a href="#" class="nav-tab nav-tab-active" rel="results">Results</a>
        <a href="#" class="nav-tab nav-tab-active" rel="blacklist">Blacklist</a>
    </h2>
    <div class="tab_content" rel="filter_settings">
        <form id="aidn-search-form" method="GET">
            <input type="hidden" name="is_results" value="1"/>

            <input type="hidden" name="type" value="'' cannot be parsed correct.
HTML code '$'"
                                                           class="small-text" type="text"/>
                                                '' cannot be parsed correct.
HTML code '$'"
                                                       class="regular-text" type="text"/>
                                            '' cannot be parsed correct.
HTML code '$'-'' cannot be parsed correct.
HTML code '$'<div class="aidn-reports">
    <div class="wrap light-tabs" default-rel="backup_settings">
    </div>
    <div class="tab_content" rel="backup_settings">
        <div class="separator"></div>
        <div class="text_content" style="margin-top: 15px">
            <span class="report_data title">
                Statistics for
                <select id="stats" onchange="buildLink()">
                    <option value="1 day"'' cannot be parsed correct.
HTML code '$'>Day</option>
                    <option value="3 day"'' cannot be parsed correct.
HTML code '$'>3 Days</option>
                    <option value="7 day"'' cannot be parsed correct.
HTML code '$'>7 days</option>
                    <option value="30 day"'' cannot be parsed correct.
HTML code '$'>30 days</option>
                    <option value="60 day"'' cannot be parsed correct.
HTML code '$'>60 days</option>
                    <option value="90 day"'' cannot be parsed correct.
HTML code '$'>90 days</option>
                </select>
            </span>
            '' cannot be parsed correct.
HTML code '$'">
                </span>
                <span class="fl-left">
                    <span class="report_number">'' cannot be parsed correct.
HTML code '$'</span>
                    <span class="report_title">Total Number of products</span>
                </span>
            </span>
            <span class="report_data">
                <span class="fl-left">
                <img src="'' cannot be parsed correct.
HTML code '$'">
                    </span>
                    <span class="fl-left">
                <span class="report_number">'' cannot be parsed correct.
HTML code '$'</span>
                <span class="report_title">Total products views</span>
                        </span>
            </span>
            <span class="report_data">
                <span class="fl-left">
                <img src="'' cannot be parsed correct.
HTML code '$'">
                    </span>
                    <span class="fl-left">
                <span class="report_number">'' cannot be parsed correct.
HTML code '$'</span>
                <span class="report_title">Total redirects to Amazon</span>
                </span>
            </span>
            <div style="clear: both"></div>
        </div>
        <div class="separator"></div>
        <div class="text_content" style="margin-top: 15px; margin-bottom: 15px;">
            <span class="report_data title">
                Top
                <select id="limit" onchange="buildLink()">
                    <option value="10"'' cannot be parsed correct.
HTML code '$'"
                                                          '' cannot be parsed correct.
HTML code '$'source %'' cannot be parsed correct.
HTML code '$'>10</option>
                    <option value="15"'' cannot be parsed correct.
HTML code '$'>15</option>
                    <option value="30"'' cannot be parsed correct.
HTML code '$'>30</option>
                    <option value="50"'' cannot be parsed correct.
HTML code '$'>50</option>
                    <option value="100"'' cannot be parsed correct.
HTML code '$'>100</option>
                </select>
                Amazon products
            </span>
            <div style="clear: both"></div>
        </div>
        <div class="separator"></div>
        '' cannot be parsed correct.
HTML code '$'">#'' cannot be parsed correct.
HTML code '$'</span>
                    <span class="image">
                        <img src="'' cannot be parsed correct.
HTML code '$'">
                    </span>
                    <span class="info">
                        <br>
                    Views: '' cannot be parsed correct.
HTML code '$'                        <div class="separator"></div>
                    Redirect to Amazon: '' cannot be parsed correct.
HTML code '$'                        <div class="separator"></div>
                </span>
                    <div style="clear: both"></div>
                </div>
                '' cannot be parsed correct.
HTML code '$'                            </td>
                        </tr>

                        <tr valign="top">
                            <td><label for="aidn_regular_price_auto_update">Auto Update
                                    Price</label></td>
                            <td><input type="checkbox" id="aidn_regular_price_auto_update"
                                       name="aidn_regular_price_auto_update" value="yes"
                                    '' cannot be parsed correct.
HTML code '$'                                    '' cannot be parsed correct.
HTML code '$'/>
                            </td>
                        </tr>

                        <tr valign="top">
                            <td>
                                <label for="aidn_not_available_product_status">Not available product status</label>
                            </td>
                            <td class="forminp forminp-select">
                                '' cannot be parsed correct.
HTML code '$'>
                                    <option value="trash"
                                            '' cannot be parsed correct.
HTML code '$'</td>
                </tr>
                <tr>
                    <td><label>Tracking ID</label></td>
                    <td>'' cannot be parsed correct.
HTML code '$'</td>
                </tr>
            </table>
        </div>
        <div class="separator"></div>
        <div class="text_content">
            <h3>Environment</h3>
            <table class="settings_table">
                <tr>
                    <td><label>Home URL</label></td>
                    <td>'' cannot be parsed correct.
HTML code '$'WPMU'' cannot be parsed correct.
HTML code '$'WP'' cannot be parsed correct.
HTML code '$'</td>
                </tr>
                <tr>
                    <td><label>WP Debug Mode</label></td>
                    <td>'' cannot be parsed correct.
HTML code '$'YES'' cannot be parsed correct.
HTML code '$'</td>
                </tr>
                <tr>
                    <td><label>SOAP Client</label></td>
                    <td>'' cannot be parsed correct.
HTML code '$'</td>
                </tr>
                <tr>
                    <td><label>SimpleXML library</label></td>
                    <td>'' cannot be parsed correct.
HTML code '$'</td>
                </tr>
            </table>
        </div>
        <div class="separator"></div>
        <div class="text_content">
            <h3>Plugins</h3>
            <table class="settings_table">
                <tr>
                    <td><label>Installed Plugins</label></td>
                    <td>'' cannot be parsed correct.
HTML code '$'</td>
                </tr>
            </table>
        </div>
        <div class="separator"></div>
        <div class="text_content">
            <h3>Settings</h3>
            <table class="settings_table">
                <tr>
                    <td><label>Force SSL</label></td>
                    <td>'' cannot be parsed correct.
HTML code '$'" data-rel="'' cannot be parsed correct.
HTML code '$'">
                <a href="'' cannot be parsed correct.
HTML code '$'>
                    <img src='' cannot be parsed correct.
HTML code '$'.png"/>
                    <span'' cannot be parsed correct.
HTML code '$'</span>
                </a>
            </li>
            '' cannot be parsed correct.
HTML code '$'\'] a"));
    });

    function setActivePage(object) {
        jQuery(".dnlb_menu a").removeClass(\'active\');
        jQuery(object).addClass(\'active\');

        var attr = jQuery(\'img\', object).attr(\'data-hover\');

        if (!(typeof attr !== typeof undefined && attr !== false)) {
            jQuery(\'img\', object).attr("data-hover", jQuery(\'img\', object).attr("src").replace(/.png/, \'_active.png\'));
        }
        jQuery(\'img\', object).attr("data-normal", jQuery(\'img\', object).attr("src"));
        jQuery(\'img\', object).attr("src", jQuery(\'img\', object).attr("data-hover"));
    }
</script> '' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$' - '' cannot be parsed correct.
HTML code '$'</option>
                                '' cannot be parsed correct.
HTML code '$'</tr>'' cannot be parsed correct.
HTML code '$'</table>'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'<div class="text_content">'' cannot be parsed correct.
HTML code '$'<table class="settings_table">'' cannot be parsed correct.
HTML code '$'<tr valign="top">'' cannot be parsed correct.
HTML code '$'</tr>'' cannot be parsed correct.
HTML code '$'<h3><font style="color:red;">Description not load yet! Click "load more details"</font></h3>'' cannot be parsed correct.
HTML code '$'<input type="button" class="save_description button" value="Save description"/>'' cannot be parsed correct.
HTML code '$'\').appendTo("select[name=\'action\']");
                            jQuery(\'<option>\').val(\''' cannot be parsed correct.
HTML code '$'\').appendTo("select[name=\'action2\']");
                        });
                    </script>
                    '' cannot be parsed correct.
HTML code '$'</select>
'' cannot be parsed correct.
HTML code '$'
'' cannot be parsed correct.
HTML code '$'<ul class=\'subsubsub\'>
'' cannot be parsed correct.
HTML code '$'</ul>'' cannot be parsed correct.
HTML code '$'</td></tr>'' cannot be parsed correct.
HTML code '$'</tr>'' cannot be parsed correct.
HTML code '$'<th scope="row" class="check-column">'' cannot be parsed correct.
HTML code '$'</th>'' cannot be parsed correct.
HTML code '$'</td>'' cannot be parsed correct.
HTML code '$'</td>'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:22.615372.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.037282.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 43 do_action/apply_filters calls and 60 add_action/add_filter calls. Now connecting do-add pairs.
Added 12 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:03.818303.

12 PHP_REACHES edges created
12 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbaseDetector
### Start running FrontBaseDetector
### Finish running FileProDetector
### Start running HashDetector
### Finish running DbplusDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running InformixDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running FirebirdInterBaseDetector
### Start running MongoDbDetector
### Finish running IBMDb2Detector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running ArrayElementDetector
### Start running MySQLDetector
### Finish running IngresDetector
### Start running MySQLiDetector
### Finish running MongoDbDetector
### Start running Oci8Detector
### Finish running MsqlDetector
### Start running OpenSSLDetector
### Finish running MySQLDetector
### Start running ParadoxDetector
### Finish running Oci8Detector
### Start running PasswordHashingDetector
### Finish running ParadoxDetector
### Start running PhpCurlDetector
### Finish running PasswordHashingDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running HashDetector
### Start running PHPRetrievalDetector
### Finish running PHPIncludedDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running OpenSSLDetector
### Start running PhpVarDetector
### Finish running PHPRetrievalDetector
### Start running PostgreSQLDetector
### Finish running PostgreSQLDetector
### Start running PropertyDetector
### Finish running PHPStorageDetector
### Start running Sqlite3Detector
### Finish running MySQLiDetector
### Start running SqliteDetector
### Finish running maxdbDetector
### Start running SqlServerDetector
### Finish running Sqlite3Detector
### Start running SybaseDetector
### Finish running PropertyDetector
### Start running TokyoTyrantDetector
### Finish running SqliteDetector
### Start running UserInputDetector
### Finish running TokyoTyrantDetector
### Start running VariableDetector
### Finish running SybaseDetector
### Start running WordpressHashingFnDetector
### Finish running SqlServerDetector
### Start running WordPressRemoteDetector
### Finish running PhpVarDetector
### Start running WordPressRetrievalDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressStorageDetector
### Finish running UserInputDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running PhpCurlDetector
### Start running GenericEncryptionDetector
### Finish running VariableDetector
### Start running DeletionDetector
### Finish running GenericEncryptionDetector
### Start running UninstallDetector
### Finish running GenericDatabaseUsageDetector
### Finish running WordPressRemoteDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running WordPressRetrievalDetector
### Finish running WordPressStorageDetector
### Finished running detectors
src/AIDN/Modules/amazon/AEIDN_AmazonLoader.php:399
  - hash_hmac called with approved hash algorithm sha256. 

src/AIDN/Utils/Ajax.php:53
  - MD5 called with parameters [laikinas, base64_encode]. Ignore if [laikinas, base64_encode] does not contain personal information. 

src/AIDN/Abstract/Account.php:81
  - RETRIEVAL call to file_get_contents($path).
  - Data types: file
src/AIDN/Utils/Ajax.php:40
  - RETRIEVAL call to file_get_contents("http://stat.trip-support.com/stats/add/" . get_bloginfo("name") . "/" . get_site_url() . "?v=" . get_bloginfo("version") . "&admin_email=" . get_bloginfo("admin_email")).
  - Data types: file
src/AIDN/Utils/Ajax.php:394
  - RETRIEVAL call to file_get_contents(AIDN_ROOT_PATH . "/data/aliexpress_categories.json").
  - Data types: file
src/Dnolbon/Aidn/Pages/BackupRestore.php:20
  - RETRIEVAL call to file($file["tmp_name"]).
  - Data types: file 

src/AIDN/Utils/Ajax.php:95
  - STORAGE call to fputcsv($outputBuffer, $val).
  - Data types: file
src/AIDN/WooCommerce/WooCommerce.php:191
  - STORAGE call to file_put_contents($dest_path, $response["body"]).
  - Data types: file 

include.php:465
  - API call to wp_remote_get($url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
src/Dnolbon/Aidn/Pages/Status.php:56
  - API call to wp_remote_get("http://gw.api.Amazon.com/", $params). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
src/Dnolbon/Aidn/Pages/Status.php:124
  - API call to wp_remote_get("http://dzv365zjfbd8v.cloudfront.net/changelogs/" . $dirname . "/changelog.txt"). Passed arguments: 0: $url (string). Returns (array|WP_Error).
  - Data types: remote 

AffiliateImporterAm.php:97
  - RETRIEVAL call to get_option("aidn_activate_redirect", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
include.php:366
  - RETRIEVAL call to get_post_meta($post_id, "external_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
include.php:398
  - RETRIEVAL call to get_posts(["post_type" => "product", "fields" => "ids", "numberposts" => $ids_count, "meta_query" => [["key" => "import_type", "value" => $api_type_list, "compare" => "IN"], ["key" => $sort_type, "compare" => "NOT EXISTS"]]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
include.php:420
  - RETRIEVAL call to get_posts(["post_type" => "product", "fields" => "ids", "numberposts" => $ids_count - count($result), "meta_query" => [["key" => "import_type", "value" => $api_type_list, "compare" => "IN"]], "order" => "ASC", "orderby" => "meta_value", "meta_key" => $sort_type, "suppress_filters" => false]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
include.php:500
  - RETRIEVAL call to get_option("aidn_use_proxy", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
include.php:501
  - RETRIEVAL call to get_option("aidn_proxies_list", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
install.php:20
  - RETRIEVAL call to get_option("aidn_db_version", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
install.php:51
  - RETRIEVAL call to get_option("aidn_price_auto_update", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
install.php:55
  - RETRIEVAL call to get_option("aidn_price_auto_update_period", "daily") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
install.php:128
  - RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).
install.php:161
  - RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).
install.php:171
  - RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).
install.php:180
  - RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).
install.php:191
  - RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).
install.php:200
  - RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).
install.php:211
  - RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).
layout/settings.php:41
  - RETRIEVAL call to get_option("aidn_currency_conversion_factor", "1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
layout/settings.php:50
  - RETRIEVAL call to get_option("aidn_default_type", "simple") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
layout/settings.php:71
  - RETRIEVAL call to get_option("aidn_default_status", "publish") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
layout/settings.php:96
  - RETRIEVAL call to get_option("aidn_remove_link_from_desc", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
layout/settings.php:105
  - RETRIEVAL call to get_option("aidn_remove_img_from_desc", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
layout/settings.php:115
  - RETRIEVAL call to get_option("aidn_import_product_images_limit") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
layout/settings.php:125
  - RETRIEVAL call to get_option("aidn_min_product_quantity", 5) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
layout/settings.php:128
  - RETRIEVAL call to get_option("aidn_max_product_quantity", 10) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
layout/settings.php:142
  - RETRIEVAL call to get_option("aidn_use_proxy", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
layout/settings.php:146
  - RETRIEVAL call to get_option("aidn_use_proxy", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
layout/settings.php:151
  - RETRIEVAL call to get_option("aidn_proxies_list", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
layout/settings.php:223
  - RETRIEVAL call to get_option("aidn_price_auto_update", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
layout/settings.php:232
  - RETRIEVAL call to get_option("aidn_price_auto_update", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
layout/settings.php:233
  - RETRIEVAL call to get_option("aidn_regular_price_auto_update", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
layout/settings.php:242
  - RETRIEVAL call to get_option("aidn_not_available_product_status", "trash") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
layout/settings.php:245
  - RETRIEVAL call to get_option("aidn_price_auto_update", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
layout/settings.php:267
  - RETRIEVAL call to get_option("aidn_price_auto_update_period", "daily") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
layout/settings.php:269
  - RETRIEVAL call to get_option("aidn_price_auto_update", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
layout/settings.php:298
  - RETRIEVAL call to get_option("aidn_update_per_schedule", 20) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
layout/settings.php:299
  - RETRIEVAL call to get_option("aidn_price_auto_update", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
layout/settings.php:320
  - RETRIEVAL call to get_option("aidn_tr_amazon_language", "en") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
layout/settings.php:400
  - RETRIEVAL call to get_option("aidn_tr_amazon_bing_secret", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
layout/settings.php:412
  - RETRIEVAL call to get_option("aidn_tr_amazon_bing_client_id", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
layout/settings.php:593
  - RETRIEVAL call to get_option("aidn_amazon_default_site", "com") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
layout/status.php:114
  - RETRIEVAL call to get_option("woocommerce_force_ssl_checkout") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
schedule.php:94
  - RETRIEVAL call to get_option("aidn_price_auto_update", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
schedule.php:97
  - RETRIEVAL call to get_option("aidn_regular_price_auto_update", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
schedule.php:109
  - RETRIEVAL call to get_option("aidn_update_per_schedule", 20) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
schedule.php:111
  - RETRIEVAL call to get_option("aidn_update_per_schedule", 20) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
schedule.php:115
  - RETRIEVAL call to get_option("aidn_not_available_product_status", "trash") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
schedule.php:118
  - RETRIEVAL call to get_post_meta($post_id, "external_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
schedule.php:125
  - RETRIEVAL call to get_post_meta($post_id, "_aidn_filters", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
schedule.php:150
  - RETRIEVAL call to get_option("aidn_min_product_quantity", 5) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
schedule.php:151
  - RETRIEVAL call to get_option("aidn_max_product_quantity", 10) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
src/AIDN/Goods/Goods.php:269
  - RETRIEVAL call to get_post_meta($post_id, $meta_key, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
src/AIDN/Modules/amazon/AEIDN_AmazonLoader.php:9
  - RETRIEVAL call to get_option("aidn_amazon_default_site", "com") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
src/AIDN/Modules/amazon/AEIDN_AmazonLoader.php:16
  - RETRIEVAL call to get_option("aidn_amazon_per_page", 10) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
src/AIDN/Modules/amazon/AEIDN_AmazonLoader.php:23
  - RETRIEVAL call to get_option("aidn_amazon_default_site", "com") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
src/AIDN/Modules/amazon/AEIDN_AmazonLoader.php:95
  - RETRIEVAL call to get_option("aidn_currency_conversion_factor", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
src/AIDN/Modules/amazon/AEIDN_AmazonLoader.php:148
  - RETRIEVAL call to get_option("aidn_amazon_default_site", "com") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
src/AIDN/Modules/amazon/AEIDN_AmazonLoader.php:158
  - RETRIEVAL call to get_option("aidn_currency_conversion_factor", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
src/AIDN/Modules/amazon/view/settings.php:7
  - RETRIEVAL call to get_option("aidn_amazon_default_site", "com") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
src/AIDN/Pages/SettingsPage.php:74
  - RETRIEVAL call to get_option("aidn_price_auto_update", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
src/AIDN/Pages/SettingsPage.php:78
  - RETRIEVAL call to get_option("aidn_price_auto_update_period", "daily") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
src/AIDN/Utils/Ajax.php:151
  - RETRIEVAL call to get_post_meta($post_id, "external_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
src/AIDN/Utils/Ajax.php:153
  - RETRIEVAL call to get_post_meta($post_id, "price_last_update", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
src/AIDN/Utils/Ajax.php:157
  - RETRIEVAL call to get_post_meta($post_id, "product_url", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
src/AIDN/Utils/Ajax.php:158
  - RETRIEVAL call to get_post_meta($post_id, "seller_url", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
src/AIDN/Utils/Ajax.php:205
  - RETRIEVAL call to get_post_meta($product_id, "product_url", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
src/AIDN/Utils/Ajax.php:206
  - RETRIEVAL call to get_post_meta($product_id, "seller_url", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
src/AIDN/Utils/Ajax.php:483
  - RETRIEVAL call to get_post_meta($post_id, "external_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
src/AIDN/Utils/Utils.php:19
  - RETRIEVAL call to get_option("aidn_remove_img_from_desc", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
src/AIDN/Utils/Utils.php:22
  - RETRIEVAL call to get_option("aidn_remove_link_from_desc", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
src/AIDN/WooCommerce/ProductList.php:35
  - RETRIEVAL call to get_option("aidn_price_auto_update", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
src/AIDN/WooCommerce/ProductList.php:38
  - RETRIEVAL call to get_option("aidn_regular_price_auto_update", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
src/AIDN/WooCommerce/ProductList.php:54
  - RETRIEVAL call to get_post_meta($post->ID, "external_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
src/AIDN/WooCommerce/ProductList.php:185
  - RETRIEVAL call to get_post_meta($post_id, "external_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
src/AIDN/WooCommerce/WooCommerce.php:29
  - RETRIEVAL call to get_option("aidn_default_status", "publish") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
src/AIDN/WooCommerce/WooCommerce.php:45
  - RETRIEVAL call to get_option("aidn_default_type", "simple") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
src/AIDN/WooCommerce/WooCommerce.php:68
  - RETRIEVAL call to get_option("aidn_min_product_quantity", 5) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
src/AIDN/WooCommerce/WooCommerce.php:69
  - RETRIEVAL call to get_option("aidn_max_product_quantity", 10) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
src/AIDN/WooCommerce/WooCommerce.php:113
  - RETRIEVAL call to get_option("aidn_import_product_images_limit") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
src/AIDN/WooCommerce/WooCommerce.php:203
  - RETRIEVAL call to get_option("aidn_import_extended_attribute", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
src/AIDN/WooCommerce/WooCommerce.php:272
  - RETRIEVAL call to get_option("aidn_min_product_quantity", 5) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
src/AIDN/WooCommerce/WooCommerce.php:273
  - RETRIEVAL call to get_option("aidn_max_product_quantity", 10) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
src/Dnolbon/Aidn/Pages/Status.php:106
  - RETRIEVAL call to get_option("active_plugins", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
src/Dnolbon/Aidn/Pages/Status.php:123
  - RETRIEVAL call to get_transient($plugin . "_version_data") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
src/Dnolbon/Aidn/Wordpress/WordpressTranslates.php:23
  - RETRIEVAL call to get_option("aidn_tr_amazon_language", "en") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
src/Dnolbon/Aidn/Wordpress/WordpressTranslates.php:28
  - RETRIEVAL call to get_option("aidn_tr_amazon_bing_client_id", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
src/Dnolbon/Aidn/Wordpress/WordpressTranslates.php:29
  - RETRIEVAL call to get_option("aidn_tr_amazon_bing_secret", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
src/Dnolbon/Aidn/Wordpress/WpListTable.php:1429
  - RETRIEVAL call to get_user_option($option) alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: user_meta 

AffiliateImporterAm.php:98
  - STORAGE call to delete_option("aidn_activate_redirect") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
AffiliateImporterAm.php:107
  - STORAGE call to add_option("aidn_activate_redirect", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
install.php:23
  - STORAGE call to update_option("aidn_db_version", AIDN_DB_VERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
install.php:33
  - STORAGE call to add_option("aidn_default_type", "external", "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).
  - Data types: option
install.php:34
  - STORAGE call to add_option("aidn_default_status", "publish", "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).
  - Data types: option
install.php:35
  - STORAGE call to add_option("aidn_price_auto_update", false, "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).
  - Data types: option
install.php:37
  - STORAGE call to add_option("aidn_regular_price_auto_update", false, "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).
  - Data types: option
install.php:39
  - STORAGE call to add_option("aidn_price_auto_update_period", "daily", "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).
  - Data types: option
install.php:40
  - STORAGE call to add_option("aidn_currency_conversion_factor", "1", "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).
  - Data types: option
install.php:41
  - STORAGE call to add_option("aidn_not_available_product_status", "trash", "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).
  - Data types: option
install.php:42
  - STORAGE call to add_option("aidn_remove_link_from_desc", false, "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).
  - Data types: option
install.php:43
  - STORAGE call to add_option("aidn_remove_img_from_desc", false, "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).
  - Data types: option
install.php:44
  - STORAGE call to add_option("aidn_update_per_schedule", 20, "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).
  - Data types: option
install.php:45
  - STORAGE call to add_option("aidn_import_product_images_limit", "", "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).
  - Data types: option
install.php:46
  - STORAGE call to add_option("aidn_min_product_quantity", 5, "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).
  - Data types: option
install.php:47
  - STORAGE call to add_option("aidn_max_product_quantity", 10, "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).
  - Data types: option
install.php:48
  - STORAGE call to add_option("aidn_use_proxy", false, "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).
  - Data types: option
install.php:49
  - STORAGE call to add_option("aidn_proxies_list", "", "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).
  - Data types: option
install.php:221
  - STORAGE call to delete_option("aidn_default_type") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
install.php:222
  - STORAGE call to delete_option("aidn_default_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
install.php:223
  - STORAGE call to delete_option("aidn_price_auto_update") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
install.php:225
  - STORAGE call to delete_option("aidn_regular_price_auto_update") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
install.php:227
  - STORAGE call to delete_option("aidn_price_auto_update_period") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
install.php:228
  - STORAGE call to delete_option("aidn_currency_conversion_factor") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
install.php:229
  - STORAGE call to delete_option("aidn_not_available_product_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
install.php:230
  - STORAGE call to delete_option("aidn_remove_link_from_desc") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
install.php:231
  - STORAGE call to delete_option("aidn_remove_img_from_desc") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
install.php:232
  - STORAGE call to delete_option("aidn_update_per_schedule") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
install.php:233
  - STORAGE call to delete_option("aidn_import_product_images_limit") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
install.php:234
  - STORAGE call to delete_option("aidn_min_product_quantity") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
install.php:235
  - STORAGE call to delete_option("aidn_max_product_quantity") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
install.php:236
  - STORAGE call to delete_option("aidn_use_proxy") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
install.php:237
  - STORAGE call to delete_option("aidn_proxies_list") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
schedule.php:138
  - STORAGE call to update_post_meta($post_id, "_manage_stock", "yes") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
schedule.php:139
  - STORAGE call to update_post_meta($post_id, "_stock_status", "outofstock") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
schedule.php:140
  - STORAGE call to update_post_meta($post_id, "_stock", 0) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
schedule.php:146
  - STORAGE call to update_post_meta($post_id, "_manage_stock", "yes") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
schedule.php:147
  - STORAGE call to update_post_meta($post_id, "_visibility", "visible") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
schedule.php:148
  - STORAGE call to update_post_meta($post_id, "_stock", $goods->additional_meta["quantity"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
schedule.php:156
  - STORAGE call to update_post_meta($post_id, "_stock", $quantity) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
schedule.php:157
  - STORAGE call to update_post_meta($post_id, "_manage_stock", "yes") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
schedule.php:158
  - STORAGE call to update_post_meta($post_id, "_stock_status", "instock") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
schedule.php:186
  - STORAGE call to update_post_meta($post_id, "price_last_update", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
src/AIDN/Abstract/Account.php:132
  - STORAGE call to update_option($form["use_default_account_option_key"], false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
src/AIDN/Modules/amazon/AEIDN_AmazonConfigurator.php:24
  - STORAGE call to update_option("aidn_amazon_default_site", $data["aidn_amazon_default_site"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
src/AIDN/Modules/amazon/AEIDN_AmazonConfigurator.php:126
  - STORAGE call to add_option("aidn_amazon_default_site", "com", "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).
  - Data types: option
src/AIDN/Modules/amazon/AEIDN_AmazonConfigurator.php:127
  - STORAGE call to add_option("aidn_amazon_per_page", 10, "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).
  - Data types: option
src/AIDN/Modules/amazon/AEIDN_AmazonConfigurator.php:131
  - STORAGE call to delete_option("aidn_amazon_default_site") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
src/AIDN/Modules/amazon/AEIDN_AmazonConfigurator.php:132
  - STORAGE call to delete_option("aidn_amazon_per_page") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
src/AIDN/Pages/SettingsPage.php:18
  - STORAGE call to update_option("aidn_currency_conversion_factor", isset($_POST["aidn_currency_conversion_factor"])$_POST["aidn_currency_conversion_factor"]1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
src/AIDN/Pages/SettingsPage.php:19
  - STORAGE call to update_option("aidn_per_page", isset($_POST["aidn_per_page"])$_POST["aidn_per_page"]1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
src/AIDN/Pages/SettingsPage.php:20
  - STORAGE call to update_option("aidn_default_type", isset($_POST["aidn_default_type"])$_POST["aidn_default_type"]1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
src/AIDN/Pages/SettingsPage.php:21
  - STORAGE call to update_option("aidn_import_attributes", isset($_POST["aidn_import_attributes"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
src/AIDN/Pages/SettingsPage.php:23
  - STORAGE call to update_option("aidn_remove_link_from_desc", isset($_POST["aidn_remove_link_from_desc"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
src/AIDN/Pages/SettingsPage.php:24
  - STORAGE call to update_option("aidn_remove_img_from_desc", isset($_POST["aidn_remove_img_from_desc"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
src/AIDN/Pages/SettingsPage.php:26
  - STORAGE call to update_option("aidn_import_product_images_limit", isset($_POST["aidn_import_product_images_limit"])sanitize_text_field($_POST["aidn_import_product_images_limit"])"") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
src/AIDN/Pages/SettingsPage.php:28
  - STORAGE call to update_option("aidn_min_product_quantity", isset($_POST["aidn_min_product_quantity"])$_POST["aidn_min_product_quantity"]5) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
src/AIDN/Pages/SettingsPage.php:29
  - STORAGE call to update_option("aidn_max_product_quantity", isset($_POST["aidn_max_product_quantity"])$_POST["aidn_max_product_quantity"]10) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
src/AIDN/Pages/SettingsPage.php:31
  - STORAGE call to update_option("aidn_use_proxy", isset($_POST["aidn_use_proxy"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
src/AIDN/Pages/SettingsPage.php:32
  - STORAGE call to update_option("aidn_proxies_list", isset($_POST["aidn_proxies_list"])sanitize_text_field($_POST["aidn_proxies_list"])"") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
src/AIDN/Pages/SettingsPage.php:35
  - STORAGE call to update_option("aidn_default_status", $_POST["aidn_default_status"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
src/AIDN/Pages/SettingsPage.php:54
  - STORAGE call to update_option("aidn_price_auto_update", isset($postData["aidn_price_auto_update"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
src/AIDN/Pages/SettingsPage.php:56
  - STORAGE call to update_option("aidn_regular_price_auto_update", isset($postData["aidn_regular_price_auto_update"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
src/AIDN/Pages/SettingsPage.php:59
  - STORAGE call to update_option("aidn_not_available_product_status", sanitize_text_field($postData["aidn_not_available_product_status"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
src/AIDN/Pages/SettingsPage.php:61
  - STORAGE call to update_option("aidn_not_available_product_status", "trash") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
src/AIDN/Pages/SettingsPage.php:65
  - STORAGE call to update_option("aidn_price_auto_update_period", sanitize_text_field($postData["aidn_price_auto_update_period"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
src/AIDN/Pages/SettingsPage.php:69
  - STORAGE call to update_option("aidn_update_per_schedule", $postData["aidn_update_per_schedule"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
src/AIDN/Pages/SettingsPage.php:71
  - STORAGE call to update_option("aidn_update_per_schedule", 20) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
src/AIDN/Pages/SettingsPage.php:86
  - STORAGE call to update_option("aidn_tr_amazon_language", sanitize_text_field($_POST["aidn_tr_amazon_language"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
src/AIDN/Pages/SettingsPage.php:88
  - STORAGE call to update_option("aidn_tr_amazon_bing_secret", sanitize_text_field($_POST["aidn_tr_amazon_bing_secret"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
src/AIDN/Pages/SettingsPage.php:90
  - STORAGE call to update_option("aidn_tr_amazon_bing_client_id", sanitize_text_field($_POST["aidn_tr_amazon_bing_client_id"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
src/AIDN/WooCommerce/WooCommerce.php:42
  - STORAGE call to wp_insert_post($post). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
src/AIDN/WooCommerce/WooCommerce.php:49
  - STORAGE call to update_post_meta($post_id, "_stock_status", "instock") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
src/AIDN/WooCommerce/WooCommerce.php:50
  - STORAGE call to update_post_meta($post_id, "_sku", $goods->external_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
src/AIDN/WooCommerce/WooCommerce.php:51
  - STORAGE call to update_post_meta($post_id, "_product_url", $goods->detail_url) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
src/AIDN/WooCommerce/WooCommerce.php:53
  - STORAGE call to update_post_meta($post_id, "import_type", $goods->type) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
src/AIDN/WooCommerce/WooCommerce.php:54
  - STORAGE call to update_post_meta($post_id, "external_id", $goods->getId()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
src/AIDN/WooCommerce/WooCommerce.php:55
  - STORAGE call to update_post_meta($post_id, "seller_url", $goods->seller_url) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
src/AIDN/WooCommerce/WooCommerce.php:56
  - STORAGE call to update_post_meta($post_id, "product_url", $goods->detail_url) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
src/AIDN/WooCommerce/WooCommerce.php:57
  - STORAGE call to update_post_meta($post_id, "aidn_import", 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
src/AIDN/WooCommerce/WooCommerce.php:64
  - STORAGE call to update_post_meta($post_id, "_manage_stock", "yes") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
src/AIDN/WooCommerce/WooCommerce.php:65
  - STORAGE call to update_post_meta($post_id, "_visibility", "visible") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
src/AIDN/WooCommerce/WooCommerce.php:66
  - STORAGE call to update_post_meta($post_id, "_stock", $additional_meta["quantity"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
src/AIDN/WooCommerce/WooCommerce.php:75
  - STORAGE call to update_post_meta($post_id, "_manage_stock", "yes") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
src/AIDN/WooCommerce/WooCommerce.php:76
  - STORAGE call to update_post_meta($post_id, "_stock", $quantity) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
src/AIDN/WooCommerce/WooCommerce.php:77
  - STORAGE call to update_post_meta($post_id, "_visibility", "visible") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
src/AIDN/WooCommerce/WooCommerce.php:82
  - STORAGE call to update_post_meta($post_id, "_aidn_filters", $additional_meta["filters"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
src/AIDN/WooCommerce/WooCommerce.php:86
  - STORAGE call to update_post_meta($post_id, "original_product_url", $additional_meta["detail_url"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
src/AIDN/WooCommerce/WooCommerce.php:90
  - STORAGE call to update_post_meta($post_id, "ship_price", $additional_meta["ship"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
src/AIDN/WooCommerce/WooCommerce.php:98
  - STORAGE call to update_post_meta($post_id, "discount_perc", $additional_meta["discount_perc"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
src/AIDN/WooCommerce/WooCommerce.php:129
  - STORAGE call to update_post_meta($post_id, "_product_image_gallery", $image_gallery_ids) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
src/AIDN/WooCommerce/WooCommerce.php:137
  - STORAGE call to update_post_meta($post_id, "_price", $goods->user_price) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
src/AIDN/WooCommerce/WooCommerce.php:138
  - STORAGE call to update_post_meta($post_id, "_regular_price", $goods->user_price) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
src/AIDN/WooCommerce/WooCommerce.php:139
  - STORAGE call to delete_post_meta($post_id, "_sale_price") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
src/AIDN/WooCommerce/WooCommerce.php:142
  - STORAGE call to update_post_meta($post_id, "_price", $goods->user_price) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
src/AIDN/WooCommerce/WooCommerce.php:143
  - STORAGE call to update_post_meta($post_id, "_regular_price", $goods->user_price) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
src/AIDN/WooCommerce/WooCommerce.php:144
  - STORAGE call to delete_post_meta($post_id, "_sale_price") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
src/AIDN/WooCommerce/WooCommerce.php:146
  - STORAGE call to update_post_meta($post_id, "_regular_price", $goods->user_regular_price) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
src/AIDN/WooCommerce/WooCommerce.php:147
  - STORAGE call to update_post_meta($post_id, "_sale_price", $goods->user_price) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
src/AIDN/WooCommerce/WooCommerce.php:148
  - STORAGE call to update_post_meta($post_id, "_price", $goods->user_price) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
src/AIDN/WooCommerce/WooCommerce.php:242
  - STORAGE call to update_post_meta($post_id, "_product_attributes", $product_attributes) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
src/AIDN/WooCommerce/WooCommerce.php:267
  - STORAGE call to delete_transient("wc_attribute_taxonomies") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).
  - Data types: site
src/Dnolbon/Aidn/Pages/BackupRestore.php:22
  - STORAGE call to update_option($line[0], $line[1]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
src/Dnolbon/Aidn/Pages/Status.php:134
  - STORAGE call to set_transient($plugin . "_version_data", $version_data, 60 * 60 * 12) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
src/Dnolbon/Aidn/Wordpress/WordpressTranslates.php:107
  - STORAGE call to add_option("aidn_tr_amazon_language", "en", "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).
  - Data types: option
src/Dnolbon/Aidn/Wordpress/WordpressTranslates.php:108
  - STORAGE call to add_option("aidn_tr_amazon_bing_secret", "", "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).
  - Data types: option
src/Dnolbon/Aidn/Wordpress/WordpressTranslates.php:109
  - STORAGE call to add_option("aidn_tr_amazon_bing_client_id", "", "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).
  - Data types: option
src/Dnolbon/Aidn/Wordpress/WordpressTranslates.php:116
  - STORAGE call to delete_option("aidn_tr_amazon_language") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
src/Dnolbon/Aidn/Wordpress/WordpressTranslates.php:117
  - STORAGE call to delete_option("aidn_tr_amazon_bing_secret") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
src/Dnolbon/Aidn/Wordpress/WordpressTranslates.php:118
  - STORAGE call to delete_option("aidn_tr_amazon_bing_client_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

src/AIDN/Modules/amazon/AEIDN_AmazonLoader.php:399
  - CRYPTOGRAPHY call to hash_hmac("sha256", $string_to_sign, $aws_secret_key, true). 

AffiliateImporterAm.php:98
  - DELETION call to delete_option("aidn_activate_redirect") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
install.php:221
  - DELETION call to delete_option("aidn_default_type") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
install.php:222
  - DELETION call to delete_option("aidn_default_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
install.php:223
  - DELETION call to delete_option("aidn_price_auto_update") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
install.php:225
  - DELETION call to delete_option("aidn_regular_price_auto_update") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
install.php:227
  - DELETION call to delete_option("aidn_price_auto_update_period") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
install.php:228
  - DELETION call to delete_option("aidn_currency_conversion_factor") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
install.php:229
  - DELETION call to delete_option("aidn_not_available_product_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
install.php:230
  - DELETION call to delete_option("aidn_remove_link_from_desc") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
install.php:231
  - DELETION call to delete_option("aidn_remove_img_from_desc") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
install.php:232
  - DELETION call to delete_option("aidn_update_per_schedule") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
install.php:233
  - DELETION call to delete_option("aidn_import_product_images_limit") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
install.php:234
  - DELETION call to delete_option("aidn_min_product_quantity") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
install.php:235
  - DELETION call to delete_option("aidn_max_product_quantity") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
install.php:236
  - DELETION call to delete_option("aidn_use_proxy") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
install.php:237
  - DELETION call to delete_option("aidn_proxies_list") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
src/AIDN/Log/Log.php:48
  - Data from table $wpdbAIDN_TABLE_LOG deleted: "$wpdb->delete($wpdb->prefix . AIDN_TABLE_LOG, ["module" => $this->module])"
src/AIDN/Modules/amazon/AEIDN_AmazonConfigurator.php:131
  - DELETION call to delete_option("aidn_amazon_default_site") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
src/AIDN/Modules/amazon/AEIDN_AmazonConfigurator.php:132
  - DELETION call to delete_option("aidn_amazon_per_page") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
src/AIDN/Prices/PriceFormula.php:95
  - Data from table $wpdbAIDN_TABLE_PRICE_FORMULA deleted: "$wpdb->delete($wpdb->prefix . AIDN_TABLE_PRICE_FORMULA, ["id" => $id])"
src/AIDN/WooCommerce/WooCommerce.php:139
  - DELETION call to delete_post_meta($post_id, "_sale_price") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
src/AIDN/WooCommerce/WooCommerce.php:144
  - DELETION call to delete_post_meta($post_id, "_sale_price") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
src/Dnolbon/Aidn/Wordpress/WordpressTranslates.php:116
  - DELETION call to delete_option("aidn_tr_amazon_language") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
src/Dnolbon/Aidn/Wordpress/WordpressTranslates.php:117
  - DELETION call to delete_option("aidn_tr_amazon_bing_secret") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
src/Dnolbon/Aidn/Wordpress/WordpressTranslates.php:118
  - DELETION call to delete_option("aidn_tr_amazon_bing_client_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

By data type:
file
	PHPStorageDetector.file_put_contents($dest_path, $response["body"]) - {'file'}
	PHPStorageDetector.fputcsv($outputBuffer, $val) - {'file'}
	PHPRetrievalDetector.file_get_contents("http://stat.trip-support.com/stats/add/" . get_bloginfo("name") . "/" . get_site_url() . "?v=" . get_bloginfo("version") . "&admin_email=" . get_bloginfo("admin_email")) - {'file'}
	PHPRetrievalDetector.file_get_contents($path) - {'file'}
	PHPRetrievalDetector.file_get_contents(AIDN_ROOT_PATH . "/data/aliexpress_categories.json") - {'file'}
	PHPRetrievalDetector.file($file["tmp_name"]) - {'file'}
none
	GenericEncryptionDetector.hash_hmac("sha256", $string_to_sign, $aws_secret_key, true) - set()
	HashDetector.(unknown) - set()
	WordPressStorageDetector.wp_insert_post($post) - set()
	WordPressRetrievalDetector.get_posts(["post_type" => "product", "fields" => "ids", "numberposts" => $ids_count - count($result), "meta_query" => [["key" => "import_type", "value" => $api_type_list, "compare" => "IN"]], "order" => "ASC", "orderby" => "meta_value", "meta_key" => $sort_type, "suppress_filters" => false]) - set()
	WordPressRetrievalDetector.get_posts(["post_type" => "product", "fields" => "ids", "numberposts" => $ids_count, "meta_query" => [["key" => "import_type", "value" => $api_type_list, "compare" => "IN"], ["key" => $sort_type, "compare" => "NOT EXISTS"]]]) - set()
	DeletionDetector.$wpdb->delete($wpdb->prefix . AIDN_TABLE_PRICE_FORMULA, ["id" => $id]) - set()
	DeletionDetector.$wpdb->delete($wpdb->prefix . AIDN_TABLE_LOG, ["module" => $this->module]) - set()
	WordPressRetrievalDetector.dbDelta($sql) - set()
	PHPIncludedDetector.(unknown) - set()
	WordPressRetrievalDetector.dbDelta($sql) - set()
	WordPressRetrievalDetector.dbDelta($sql) - set()
	WordPressRetrievalDetector.dbDelta($sql) - set()
	WordPressRetrievalDetector.dbDelta($sql) - set()
	WordPressRetrievalDetector.dbDelta($sql) - set()
	WordPressRetrievalDetector.dbDelta($sql) - set()
option
	WordPressStorageDetector.add_option("aidn_import_product_images_limit", "", "", "no") - {'option'}
	WordPressStorageDetector.update_option("aidn_remove_img_from_desc", isset($_POST["aidn_remove_img_from_desc"])) - {'option'}
	WordPressStorageDetector.update_option("aidn_price_auto_update_period", sanitize_text_field($postData["aidn_price_auto_update_period"])) - {'option'}
	WordPressStorageDetector.update_option("aidn_tr_amazon_bing_secret", sanitize_text_field($_POST["aidn_tr_amazon_bing_secret"])) - {'option'}
	WordPressStorageDetector.update_option("aidn_update_per_schedule", $postData["aidn_update_per_schedule"]) - {'option'}
	DeletionDetector.delete_option("aidn_min_product_quantity") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_regular_price_auto_update", false) - {'option'}
	WordPressStorageDetector.update_option("aidn_per_page", isset($_POST["aidn_per_page"])$_POST["aidn_per_page"]1) - {'option'}
	WordPressRetrievalDetector.get_option("aidn_remove_link_from_desc", false) - {'option'}
	WordPressStorageDetector.add_option("aidn_amazon_per_page", 10, "", "no") - {'option'}
	WordPressStorageDetector.add_option("aidn_price_auto_update_period", "daily", "", "no") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_default_type", "simple") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_import_product_images_limit") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_tr_amazon_bing_client_id", "") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_default_status", "publish") - {'option'}
	WordPressStorageDetector.delete_option("aidn_remove_link_from_desc") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_min_product_quantity", 5) - {'option'}
	WordPressStorageDetector.delete_option("aidn_default_status") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_currency_conversion_factor", "1") - {'option'}
	WordPressStorageDetector.add_option("aidn_update_per_schedule", 20, "", "no") - {'option'}
	WordPressStorageDetector.add_option("aidn_not_available_product_status", "trash", "", "no") - {'option'}
	WordPressStorageDetector.add_option("aidn_currency_conversion_factor", "1", "", "no") - {'option'}
	WordPressStorageDetector.delete_option("aidn_currency_conversion_factor") - {'option'}
	WordPressStorageDetector.update_option($form["use_default_account_option_key"], false) - {'option'}
	WordPressStorageDetector.delete_option("aidn_min_product_quantity") - {'option'}
	WordPressStorageDetector.update_option("aidn_min_product_quantity", isset($_POST["aidn_min_product_quantity"])$_POST["aidn_min_product_quantity"]5) - {'option'}
	WordPressRetrievalDetector.get_option("aidn_max_product_quantity", 10) - {'option'}
	WordPressStorageDetector.add_option("aidn_price_auto_update", false, "", "no") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_amazon_default_site", "com") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_remove_img_from_desc", false) - {'option'}
	DeletionDetector.delete_option("aidn_amazon_per_page") - {'option'}
	WordPressStorageDetector.update_option("aidn_not_available_product_status", sanitize_text_field($postData["aidn_not_available_product_status"])) - {'option'}
	DeletionDetector.delete_option("aidn_tr_amazon_bing_client_id") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_tr_amazon_language", "en") - {'option'}
	WordPressStorageDetector.update_option("aidn_remove_link_from_desc", isset($_POST["aidn_remove_link_from_desc"])) - {'option'}
	WordPressRetrievalDetector.get_option("aidn_not_available_product_status", "trash") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_min_product_quantity", 5) - {'option'}
	WordPressStorageDetector.delete_option("aidn_proxies_list") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_price_auto_update", false) - {'option'}
	WordPressStorageDetector.update_option("aidn_default_status", $_POST["aidn_default_status"]) - {'option'}
	WordPressStorageDetector.add_option("aidn_regular_price_auto_update", false, "", "no") - {'option'}
	WordPressStorageDetector.add_option("aidn_amazon_default_site", "com", "", "no") - {'option'}
	WordPressStorageDetector.add_option("aidn_min_product_quantity", 5, "", "no") - {'option'}
	DeletionDetector.delete_option("aidn_use_proxy") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_import_product_images_limit") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_update_per_schedule", 20) - {'option'}
	WordPressStorageDetector.add_option("aidn_default_type", "external", "", "no") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_price_auto_update_period", "daily") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_regular_price_auto_update", false) - {'option'}
	DeletionDetector.delete_option("aidn_tr_amazon_language") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_min_product_quantity", 5) - {'option'}
	WordPressRetrievalDetector.get_option("aidn_price_auto_update", false) - {'option'}
	WordPressRetrievalDetector.get_option("aidn_max_product_quantity", 10) - {'option'}
	WordPressStorageDetector.add_option("aidn_tr_amazon_bing_client_id", "", "", "no") - {'option'}
	WordPressStorageDetector.delete_option("aidn_amazon_per_page") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_min_product_quantity", 5) - {'option'}
	WordPressStorageDetector.update_option("aidn_proxies_list", isset($_POST["aidn_proxies_list"])sanitize_text_field($_POST["aidn_proxies_list"])"") - {'option'}
	WordPressStorageDetector.add_option("aidn_remove_img_from_desc", false, "", "no") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_price_auto_update_period", "daily") - {'option'}
	WordPressRetrievalDetector.get_option("active_plugins", []) - {'option'}
	WordPressStorageDetector.add_option("aidn_tr_amazon_bing_secret", "", "", "no") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_currency_conversion_factor", 1) - {'option'}
	WordPressRetrievalDetector.get_option("aidn_price_auto_update", false) - {'option'}
	WordPressStorageDetector.delete_option("aidn_update_per_schedule") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_update_per_schedule", 20) - {'option'}
	WordPressStorageDetector.update_option("aidn_currency_conversion_factor", isset($_POST["aidn_currency_conversion_factor"])$_POST["aidn_currency_conversion_factor"]1) - {'option'}
	WordPressRetrievalDetector.get_option("aidn_price_auto_update", false) - {'option'}
	WordPressRetrievalDetector.get_option("aidn_price_auto_update", false) - {'option'}
	WordPressStorageDetector.delete_option("aidn_remove_img_from_desc") - {'option'}
	WordPressStorageDetector.update_option("aidn_amazon_default_site", $data["aidn_amazon_default_site"]) - {'option'}
	WordPressStorageDetector.update_option("aidn_import_product_images_limit", isset($_POST["aidn_import_product_images_limit"])sanitize_text_field($_POST["aidn_import_product_images_limit"])"") - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_force_ssl_checkout") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_amazon_per_page", 10) - {'option'}
	WordPressStorageDetector.add_option("aidn_default_status", "publish", "", "no") - {'option'}
	WordPressStorageDetector.delete_option("aidn_import_product_images_limit") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_currency_conversion_factor", 1) - {'option'}
	WordPressStorageDetector.add_option("aidn_tr_amazon_language", "en", "", "no") - {'option'}
	DeletionDetector.delete_option("aidn_proxies_list") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_price_auto_update", false) - {'option'}
	WordPressRetrievalDetector.get_option("aidn_amazon_default_site", "com") - {'option'}
	WordPressStorageDetector.update_option("aidn_regular_price_auto_update", isset($postData["aidn_regular_price_auto_update"])) - {'option'}
	WordPressStorageDetector.delete_option("aidn_use_proxy") - {'option'}
	WordPressStorageDetector.delete_option("aidn_not_available_product_status") - {'option'}
	WordPressStorageDetector.add_option("aidn_remove_link_from_desc", false, "", "no") - {'option'}
	WordPressStorageDetector.update_option("aidn_update_per_schedule", 20) - {'option'}
	WordPressStorageDetector.delete_option("aidn_tr_amazon_bing_client_id") - {'option'}
	DeletionDetector.delete_option("aidn_tr_amazon_bing_secret") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_not_available_product_status", "trash") - {'option'}
	WordPressStorageDetector.update_option("aidn_price_auto_update", isset($postData["aidn_price_auto_update"])) - {'option'}
	DeletionDetector.delete_option("aidn_default_status") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_update_per_schedule", 20) - {'option'}
	DeletionDetector.delete_option("aidn_amazon_default_site") - {'option'}
	DeletionDetector.delete_option("aidn_import_product_images_limit") - {'option'}
	WordPressStorageDetector.delete_option("aidn_default_type") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_remove_link_from_desc", false) - {'option'}
	DeletionDetector.delete_option("aidn_remove_img_from_desc") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_activate_redirect", false) - {'option'}
	WordPressRetrievalDetector.get_option("aidn_amazon_default_site", "com") - {'option'}
	WordPressStorageDetector.delete_option("aidn_price_auto_update") - {'option'}
	DeletionDetector.delete_option("aidn_currency_conversion_factor") - {'option'}
	WordPressStorageDetector.add_option("aidn_max_product_quantity", 10, "", "no") - {'option'}
	DeletionDetector.delete_option("aidn_price_auto_update_period") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_use_proxy", false) - {'option'}
	WordPressStorageDetector.delete_option("aidn_activate_redirect") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_tr_amazon_bing_secret", "") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_use_proxy", false) - {'option'}
	WordPressRetrievalDetector.get_option("aidn_amazon_default_site", "com") - {'option'}
	DeletionDetector.delete_option("aidn_max_product_quantity") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_import_extended_attribute", false) - {'option'}
	WordPressRetrievalDetector.get_option("aidn_remove_img_from_desc", false) - {'option'}
	WordPressStorageDetector.update_option("aidn_tr_amazon_language", sanitize_text_field($_POST["aidn_tr_amazon_language"])) - {'option'}
	WordPressStorageDetector.update_option("aidn_use_proxy", isset($_POST["aidn_use_proxy"])) - {'option'}
	DeletionDetector.delete_option("aidn_regular_price_auto_update") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_proxies_list", "") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_price_auto_update", false) - {'option'}
	WordPressRetrievalDetector.get_option("aidn_price_auto_update", false) - {'option'}
	WordPressRetrievalDetector.get_option("aidn_max_product_quantity", 10) - {'option'}
	WordPressStorageDetector.update_option("aidn_import_attributes", isset($_POST["aidn_import_attributes"])) - {'option'}
	WordPressRetrievalDetector.get_option("aidn_use_proxy", false) - {'option'}
	WordPressStorageDetector.update_option("aidn_tr_amazon_bing_client_id", sanitize_text_field($_POST["aidn_tr_amazon_bing_client_id"])) - {'option'}
	DeletionDetector.delete_option("aidn_remove_link_from_desc") - {'option'}
	WordPressStorageDetector.update_option("aidn_db_version", AIDN_DB_VERSION) - {'option'}
	WordPressStorageDetector.add_option("aidn_activate_redirect", true) - {'option'}
	WordPressStorageDetector.add_option("aidn_use_proxy", false, "", "no") - {'option'}
	WordPressStorageDetector.add_option("aidn_proxies_list", "", "", "no") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_default_status", "publish") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_regular_price_auto_update", false) - {'option'}
	WordPressStorageDetector.delete_option("aidn_regular_price_auto_update") - {'option'}
	WordPressStorageDetector.update_option($line[0], $line[1]) - {'option'}
	DeletionDetector.delete_option("aidn_not_available_product_status") - {'option'}
	WordPressStorageDetector.update_option("aidn_not_available_product_status", "trash") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_db_version", 0) - {'option'}
	WordPressStorageDetector.update_option("aidn_default_type", isset($_POST["aidn_default_type"])$_POST["aidn_default_type"]1) - {'option'}
	WordPressRetrievalDetector.get_option("aidn_proxies_list", "") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_tr_amazon_language", "en") - {'option'}
	WordPressStorageDetector.delete_option("aidn_max_product_quantity") - {'option'}
	DeletionDetector.delete_option("aidn_activate_redirect") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_max_product_quantity", 10) - {'option'}
	DeletionDetector.delete_option("aidn_price_auto_update") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_amazon_default_site", "com") - {'option'}
	DeletionDetector.delete_option("aidn_update_per_schedule") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_price_auto_update", false) - {'option'}
	WordPressStorageDetector.update_option("aidn_max_product_quantity", isset($_POST["aidn_max_product_quantity"])$_POST["aidn_max_product_quantity"]10) - {'option'}
	WordPressRetrievalDetector.get_option("aidn_default_type", "simple") - {'option'}
	WordPressStorageDetector.delete_option("aidn_amazon_default_site") - {'option'}
	WordPressStorageDetector.delete_option("aidn_tr_amazon_language") - {'option'}
	WordPressStorageDetector.delete_option("aidn_tr_amazon_bing_secret") - {'option'}
	DeletionDetector.delete_option("aidn_default_type") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_price_auto_update_period", "daily") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_tr_amazon_bing_client_id", "") - {'option'}
	WordPressStorageDetector.delete_option("aidn_price_auto_update_period") - {'option'}
	WordPressRetrievalDetector.get_option("aidn_tr_amazon_bing_secret", "") - {'option'}
post_meta
	WordPressRetrievalDetector.get_post_meta($product_id, "product_url", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_manage_stock", "yes") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "price_last_update", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_stock_status", "instock") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "product_url", $goods->detail_url) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_product_image_gallery", $image_gallery_ids) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_regular_price", $goods->user_regular_price) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "external_id", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "import_type", $goods->type) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "discount_perc", $additional_meta["discount_perc"]) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_manage_stock", "yes") - {'post_meta'}
	DeletionDetector.delete_post_meta($post_id, "_sale_price") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_regular_price", $goods->user_price) - {'post_meta'}
	DeletionDetector.delete_post_meta($post_id, "_sale_price") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, $meta_key, true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_product_attributes", $product_attributes) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "external_id", $goods->getId()) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "external_id", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "external_id", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "original_product_url", $additional_meta["detail_url"]) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "external_id", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "_aidn_filters", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "external_id", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_price", $goods->user_price) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_manage_stock", "yes") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "product_url", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_price", $goods->user_price) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_stock_status", "instock") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_aidn_filters", $additional_meta["filters"]) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post_id, "_sale_price") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_sku", $goods->external_id) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "external_id", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_stock", $additional_meta["quantity"]) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_stock", $quantity) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post_id, "_sale_price") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_stock", 0) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product_id, "seller_url", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_price", $goods->user_price) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_sale_price", $goods->user_price) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_visibility", "visible") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_stock", $quantity) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_manage_stock", "yes") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "price_last_update", time()) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_stock", $goods->additional_meta["quantity"]) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "seller_url", $goods->seller_url) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "ship_price", $additional_meta["ship"]) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_product_url", $goods->detail_url) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_visibility", "visible") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_regular_price", $goods->user_price) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_visibility", "visible") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_manage_stock", "yes") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "aidn_import", 1) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_stock_status", "outofstock") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "seller_url", true) - {'post_meta'}
remote
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
site
	WordPressRetrievalDetector.get_transient($plugin . "_version_data") - {'site'}
	WordPressStorageDetector.set_transient($plugin . "_version_data", $version_data, 60 * 60 * 12) - {'site'}
	WordPressStorageDetector.delete_transient("wc_attribute_taxonomies") - {'site'}
user_meta
	WordPressRetrievalDetector.get_user_option($option) - {'user_meta'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:30.876031.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 4801 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.890980.

1000 STORE_REACHES edges created
2000 STORE_REACHES edges created
3000 STORE_REACHES edges created
4000 STORE_REACHES edges created
4801 STORE_REACHES edges created
4801 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 7 nodes as PERSONAL
In total, tainted 7 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 651 nodes as ENCRYPTED
In total, tainted 651 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:16.292502.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:03:47.383278!
DELETION call to delete_option("aidn_activate_redirect") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("aidn_default_type") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("aidn_default_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("aidn_price_auto_update") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("aidn_regular_price_auto_update") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("aidn_price_auto_update_period") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("aidn_currency_conversion_factor") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("aidn_not_available_product_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("aidn_remove_link_from_desc") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("aidn_remove_img_from_desc") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("aidn_update_per_schedule") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("aidn_import_product_images_limit") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("aidn_min_product_quantity") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("aidn_max_product_quantity") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("aidn_use_proxy") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("aidn_proxies_list") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Data from table $wpdbAIDN_TABLE_LOG deleted: "$wpdb->delete($wpdb->prefix . AIDN_TABLE_LOG, ["module" => $this->module])",None,None
DELETION call to delete_option("aidn_amazon_default_site") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("aidn_amazon_per_page") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Data from table $wpdbAIDN_TABLE_PRICE_FORMULA deleted: "$wpdb->delete($wpdb->prefix . AIDN_TABLE_PRICE_FORMULA, ["id" => $id])",None,None
DELETION call to delete_post_meta($post_id, "_sale_price") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($post_id, "_sale_price") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_option("aidn_tr_amazon_language") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("aidn_tr_amazon_bing_secret") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("aidn_tr_amazon_bing_client_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
CRYPTOGRAPHY call to hash_hmac("sha256", $string_to_sign, $aws_secret_key, true).,None,None
hash_hmac called with approved hash algorithm sha256.,sha256,None
MD5 called with parameters [laikinas, base64_encode]. Ignore if [laikinas, base64_encode] does not contain personal information.,md5,None
RETRIEVAL call to file_get_contents($path).,None,None
RETRIEVAL call to file_get_contents(AIDN_ROOT_PATH . "/data/aliexpress_categories.json").,None,None
RETRIEVAL call to file_get_contents("http://stat.trip-support.com/stats/add/" . get_bloginfo("name") . "/" . get_site_url() . "?v=" . get_bloginfo("version") . "&admin_email=" . get_bloginfo("admin_email")).,None,None
RETRIEVAL call to file($file["tmp_name"]).,None,None
STORAGE call to fputcsv($outputBuffer, $val).,None,None
STORAGE call to file_put_contents($dest_path, $response["body"]).,None,None
API call to wp_remote_get($url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_get("http://dzv365zjfbd8v.cloudfront.net/changelogs/" . $dirname . "/changelog.txt"). Passed arguments: 0: $url (string). Returns (array|WP_Error).,https,[]
API call to wp_remote_get("http://gw.api.Amazon.com/", $params). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,,['http://gw.api.Amazon.com/']
RETRIEVAL call to get_option("aidn_activate_redirect", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "external_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_posts(["post_type" => "product", "fields" => "ids", "numberposts" => $ids_count, "meta_query" => [["key" => "import_type", "value" => $api_type_list, "compare" => "IN"], ["key" => $sort_type, "compare" => "NOT EXISTS"]]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_posts(["post_type" => "product", "fields" => "ids", "numberposts" => $ids_count - count($result), "meta_query" => [["key" => "import_type", "value" => $api_type_list, "compare" => "IN"]], "order" => "ASC", "orderby" => "meta_value", "meta_key" => $sort_type, "suppress_filters" => false]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_option("aidn_use_proxy", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_proxies_list", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to get_option("aidn_db_version", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to get_option("aidn_price_auto_update", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_price_auto_update_period", "daily") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_remove_img_from_desc", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_import_product_images_limit") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_min_product_quantity", 5) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_max_product_quantity", 10) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_use_proxy", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_use_proxy", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_proxies_list", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_price_auto_update", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_price_auto_update", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_regular_price_auto_update", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_not_available_product_status", "trash") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_price_auto_update", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_price_auto_update_period", "daily") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_price_auto_update", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_update_per_schedule", 20) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_price_auto_update", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_tr_amazon_language", "en") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_tr_amazon_bing_secret", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_currency_conversion_factor", "1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_tr_amazon_bing_client_id", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_default_type", "simple") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_amazon_default_site", "com") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_default_status", "publish") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_remove_link_from_desc", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_force_ssl_checkout") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_update_per_schedule", 20) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_update_per_schedule", 20) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_not_available_product_status", "trash") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "external_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "_aidn_filters", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_min_product_quantity", 5) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_max_product_quantity", 10) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_price_auto_update", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_regular_price_auto_update", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, $meta_key, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_amazon_default_site", "com") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_currency_conversion_factor", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_amazon_per_page", 10) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_amazon_default_site", "com") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_amazon_default_site", "com") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_currency_conversion_factor", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_amazon_default_site", "com") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_price_auto_update", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_price_auto_update_period", "daily") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "external_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "price_last_update", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "product_url", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "seller_url", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product_id, "product_url", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product_id, "seller_url", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "external_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_remove_img_from_desc", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_remove_link_from_desc", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "external_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_price_auto_update", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_regular_price_auto_update", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "external_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_import_product_images_limit") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_import_extended_attribute", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_min_product_quantity", 5) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_max_product_quantity", 10) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_default_status", "publish") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_default_type", "simple") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_min_product_quantity", 5) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_max_product_quantity", 10) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("active_plugins", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_transient($plugin . "_version_data") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_tr_amazon_language", "en") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_tr_amazon_bing_client_id", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("aidn_tr_amazon_bing_secret", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_user_option($option) alters data types {'user_meta'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
STORAGE call to add_option("aidn_activate_redirect", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("aidn_activate_redirect") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("aidn_default_type") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("aidn_default_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("aidn_price_auto_update") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("aidn_regular_price_auto_update") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("aidn_price_auto_update_period") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("aidn_currency_conversion_factor") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("aidn_not_available_product_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("aidn_db_version", AIDN_DB_VERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("aidn_remove_link_from_desc") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("aidn_remove_img_from_desc") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("aidn_update_per_schedule") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("aidn_import_product_images_limit") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("aidn_min_product_quantity") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("aidn_max_product_quantity") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("aidn_use_proxy") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("aidn_proxies_list") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to add_option("aidn_default_type", "external", "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("aidn_default_status", "publish", "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("aidn_price_auto_update", false, "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("aidn_regular_price_auto_update", false, "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("aidn_price_auto_update_period", "daily", "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("aidn_currency_conversion_factor", "1", "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("aidn_not_available_product_status", "trash", "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("aidn_remove_link_from_desc", false, "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("aidn_remove_img_from_desc", false, "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("aidn_update_per_schedule", 20, "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("aidn_import_product_images_limit", "", "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("aidn_min_product_quantity", 5, "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("aidn_max_product_quantity", 10, "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("aidn_use_proxy", false, "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("aidn_proxies_list", "", "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, "_manage_stock", "yes") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_stock_status", "outofstock") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_stock", 0) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_manage_stock", "yes") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_visibility", "visible") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_stock", $goods->additional_meta["quantity"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_stock", $quantity) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_manage_stock", "yes") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_stock_status", "instock") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "price_last_update", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option($form["use_default_account_option_key"], false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("aidn_amazon_default_site", "com", "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("aidn_amazon_per_page", 10, "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("aidn_amazon_default_site") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("aidn_amazon_per_page") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("aidn_amazon_default_site", $data["aidn_amazon_default_site"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("aidn_currency_conversion_factor", isset($_POST["aidn_currency_conversion_factor"])$_POST["aidn_currency_conversion_factor"]1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("aidn_per_page", isset($_POST["aidn_per_page"])$_POST["aidn_per_page"]1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("aidn_default_type", isset($_POST["aidn_default_type"])$_POST["aidn_default_type"]1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("aidn_import_attributes", isset($_POST["aidn_import_attributes"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("aidn_remove_link_from_desc", isset($_POST["aidn_remove_link_from_desc"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("aidn_remove_img_from_desc", isset($_POST["aidn_remove_img_from_desc"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("aidn_import_product_images_limit", isset($_POST["aidn_import_product_images_limit"])sanitize_text_field($_POST["aidn_import_product_images_limit"])"") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("aidn_min_product_quantity", isset($_POST["aidn_min_product_quantity"])$_POST["aidn_min_product_quantity"]5) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("aidn_max_product_quantity", isset($_POST["aidn_max_product_quantity"])$_POST["aidn_max_product_quantity"]10) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("aidn_use_proxy", isset($_POST["aidn_use_proxy"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("aidn_proxies_list", isset($_POST["aidn_proxies_list"])sanitize_text_field($_POST["aidn_proxies_list"])"") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("aidn_default_status", $_POST["aidn_default_status"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("aidn_price_auto_update", isset($postData["aidn_price_auto_update"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("aidn_regular_price_auto_update", isset($postData["aidn_regular_price_auto_update"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("aidn_not_available_product_status", sanitize_text_field($postData["aidn_not_available_product_status"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("aidn_not_available_product_status", "trash") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("aidn_price_auto_update_period", sanitize_text_field($postData["aidn_price_auto_update_period"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("aidn_update_per_schedule", $postData["aidn_update_per_schedule"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("aidn_update_per_schedule", 20) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("aidn_tr_amazon_language", sanitize_text_field($_POST["aidn_tr_amazon_language"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("aidn_tr_amazon_bing_secret", sanitize_text_field($_POST["aidn_tr_amazon_bing_secret"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("aidn_tr_amazon_bing_client_id", sanitize_text_field($_POST["aidn_tr_amazon_bing_client_id"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, "_product_image_gallery", $image_gallery_ids) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_price", $goods->user_price) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_regular_price", $goods->user_price) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($post_id, "_sale_price") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, "_price", $goods->user_price) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_regular_price", $goods->user_price) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($post_id, "_sale_price") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, "_regular_price", $goods->user_regular_price) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_sale_price", $goods->user_price) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_price", $goods->user_price) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_product_attributes", $product_attributes) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_transient("wc_attribute_taxonomies") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).,None,None
STORAGE call to wp_insert_post($post). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($post_id, "_stock_status", "instock") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_sku", $goods->external_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_product_url", $goods->detail_url) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "import_type", $goods->type) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "external_id", $goods->getId()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "seller_url", $goods->seller_url) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "product_url", $goods->detail_url) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "aidn_import", 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_manage_stock", "yes") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_visibility", "visible") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_stock", $additional_meta["quantity"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_manage_stock", "yes") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_stock", $quantity) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_visibility", "visible") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_aidn_filters", $additional_meta["filters"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "original_product_url", $additional_meta["detail_url"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "ship_price", $additional_meta["ship"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "discount_perc", $additional_meta["discount_perc"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option($line[0], $line[1]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to set_transient($plugin . "_version_data", $version_data, 60 * 60 * 12) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to add_option("aidn_tr_amazon_language", "en", "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("aidn_tr_amazon_bing_secret", "", "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("aidn_tr_amazon_bing_client_id", "", "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("aidn_tr_amazon_language") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("aidn_tr_amazon_bing_secret") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("aidn_tr_amazon_bing_client_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] Storage check is NONE 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['encryption', 'third_party'] 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? True 

No findings
