Timeout in resolving values
Timeout in running neo4j query
Running Main.py on cookie-notify

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.339581.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.122422.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 0 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.299894.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 0 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.479996.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 42 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:00.603378.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 0 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.692592.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.091359.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 60 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:01.270850.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 2535
Added 2433 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 2535
Added 0 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.237001.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-notify/cookie-notify.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cookie-notify/index.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.239101.

1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
2535 PHP_REACHES edges created
2535 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 610 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.111274.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.170706.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 57 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:02.292674.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 22 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.187714.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.044166.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.572841.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.014622.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.098990.

79 PHP_REACHES edges created
79 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 57 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.128131.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
No SQL nodes to process.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:00.132320.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'<style type="text/css">htmlspecialchars_decode(stripslashes_deep(get_option("cnpl_css")))</style>'' cannot be parsed correct.
HTML code '$'<!-- COOKIE NOTIFY &copy; http://jakwylaczyccookie.pl/http://cookienotify.com/ Piotr Markowski -->'' cannot be parsed correct.
HTML code '$'htmlspecialchars_decode(stripslashes_deep(get_option("cnpl_html")))'' cannot be parsed correct.
HTML code '$'htmlspecialchars_decode(stripslashes_deep(get_option("cnpl_js")))'' cannot be parsed correct.
HTML code '$'
	<style type="text/css">
		
		.cnpl { /* wrapper */ 
			width:800px
		}
		.cnpl .inline {
			display:inline;
		}
		.cnpl .w60 {
			width:60px;
		}
		.w180 {
			width:180px;
		}
		.cnpl .wAll{
			width:100%;
		}
		.cnpl .h100{
			height:100px
		}
		.cnpl .h200{
			height:200px
		}
		.cnpl .p10 {
			padding:10px;
		}

		.cnpl .nodecoration{
			text-decoration:none;
		}
		.cnpl .text-center {
			text-align:center;
		}
		.cnpl .clear {
			clear:both
		}
		.cnpl .column180{
			display:inline; width:180px; float:left; margin-right:10px;
		}
		.cnpl .column180 a{
			text-decoration:none;
		}
	
		.cnpl .palette {
			margin-bottom:10px; height:60px; width:100%; 
		}
		.cnpl .paletteText {
			line-height:40px; font-size:10px;padding-left:10px; color:#000;
		}
		.cnpl .paletteTextWhite {
			line-height:40px; font-size:10px;padding-left:10px; color:#FFF;
		}
		.cnpl .paletteLink {
			line-height:40px; font-size:10px;padding-left:10px;
		}
		.cnpl .paletteButton {
			position:relative; float:right; margin-right:10px; margin-top:30px; text-align:center; width:30px; height:23px; font-size:9px;
		}
		.cnpl .plateEmpy {
			border:1px solid #7E57C2; height:60px; background-color:#EDE7F6;
		}
		.cnpl .noborder {
			border:0px
		}
		.cnpl .lbtn
		{
			text-decoration:none;
			outline: none;
			display:inline;
			margin:25px;
		}
		.cnpl .lbtn:hover
		{
			cursor:pointer;
		}
		.cnpl .lbtn img
		{
			outline: none;
		}
		.cnpl .lbtn:focus
		{
			outline: none;
		}   
		.cnpl .cnpl_container{
			border:1px solid #CCC;
			background-color:#FFF;
			margin-top:-1px;
			margin-bottom:0px;
			padding:7px;
		}
		.cnpl .menu_item{
			border:1px solid #CCC;
			background-color:#DDD;
			padding:10px;
			line-height:3em;
			text-decoration:none;
			border-bottom:0;
		}
		.cnpl .menu_item.active{
			border:1px solid #CCC;
			background-color:#FFF;
			border-bottom:1px solid #FFF;
		}
		.cnpl .menu_item i::before{
			margin-top:10px;
		}
		
		.cnpl .menu_item_bottom{
			border:1px solid #CCC;
			background-color:#DDD;
			padding:10px;
			line-height:3em;
			text-decoration:none;
		}
		.cnpl .menu_item_bottom.active{
			border:1px solid #CCC;
			background-color:#FFF;
			border-top:1px solid #FFF;
		}
		.cnpl .menu_item_bottom i::before{
			margin-top:10px;
		}
		
		
		.cnpl .panel{
			display:none;
		}
		.cnpl .panel.active{
			display:block;
		}
		.cnpl .panel_button{
			margin-bottom:-1px;
			margin-top:-1px;
		}
		.cnpl .cnpl_header,
		.cnpl .cnpl_footer{
			
		}
		.cnpl .panel_button:hover{
			cursor:pointer;
		}
		.cnpl select{
			color:#0073AA;
			font-weight:bold;
		}
		.cnpl blockquote h3{
			margin-top:0px;
		}
		.cnpl blockquote{
			padding:20px;
			background-color:#f3f3f3;
			border:1px solid #DDD;
		}
		.cnpl .panel_button_save{
			background-color:#DBFCCE;
			color:#0F2E03;
			float:right;
			line-height: 1.1em;
		}
		
		.cnpl .panel_button_save.blink,
		.cnpl .panel_button_save2.blink{
			margin-left:5px;
		}
		.cnpl .panel_button_save.menu_item_bottom,
		.cnpl .panel_button_turnoff.menu_item_bottom
		{
			margin-top:2px;
		}
		
		.cnpl .panel_button_turnoff{
			background-color:#F5B9B9;
			color:#C00;
			float:right;
			line-height: 1.1em;
			margin-left:5px;
		}
		
		.cnpl .panel_button_turnoff2{
			background-color:#F5B9B9;
			color:#C00;
			float:right;
			line-height: 1.1em;
			margin-left:5px;
			display:none;
		}
		
		.cnpl .panel_button_save2{
			background-color:#DBFCCE;
			color:#0F2E03;
			float:right;
			line-height: 1.1em;
			display:none;
		}
		.cnpl_facebook{
			position:absolute;
			margin-left:700px;
			margin-top:7px;
		}
		.cnpl div.error {
			margin:0px;
			padding-left:45px;
		}
		.cnpl div.error .dashicons-warning{
			font-size:36px;
			color:#C00;
			margin-left:-40px;
			position:absolute; 
			margin-top:10px
		}
		@media screen and (max-width: 900px) {
			.cnpl .panel{
				display:block;
			}
			.cnpl .cnpl_header,
			.cnpl .cnpl_footer{
				display:none; 
			}
			.cnpl {
				width:100%;
			}
			.cnpl .panel_button_save2,
			.cnpl .panel_button_turnoff2{
				display:block;
			}
			.cnpl .fb {
				display:none;
			}
			
		}
	</style>
	<div id="fb-root"></div>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/pl_PL/sdk.js#xfbml=1&version=v2.9&appId=228382620542919";
  fjs.parentNode.insertBefore(js, fjs);
}(document, "script", "facebook-jssdk"));</script>
	
	<div class="cnpl">
		<form id="cnpl_form" action="admin.php?page=cnpl_settings" method="post" name="options">
			wp_nonce_field("update-options-" . $hash)
			<!--<input type="hidden" name="action" value="updateUpdate" /> -->
			<input type="hidden" id="cnpl_last_active_panel" name="cnpl_last_active_panel" value="get_option("cnpl_last_active_panel")" />
			<input type="hidden" id="cnpl_text_panel_opened" name="cnpl_text_panel_opened" value="get_option("cnpl_text_panel_opened")" />
			
			<input type="hidden" id="remember_border" name="remember_border" value="get_option("cnpl_remember_border")" />
			<input type="hidden" id="remember_corners" name="remember_corners" value="get_option("cnpl_remember_corners")" />
			
			<input type="hidden" id="cnpl_position" name="cnpl_position" value="get_option("cnpl_position")" />
			<input type="hidden" id="cnpl_content_text" name="cnpl_content_text" value="get_option("cnpl_content_text")" />
			<input type="hidden" id="cnpl_content_link_regulation_br" name="cnpl_content_link_regulation_br" value="get_option("cnpl_content_link_regulation_br")" />
			<input type="hidden" id="cnpl_content_link_regulation_text" name="cnpl_content_link_regulation_text" value="get_option("cnpl_content_link_regulation_text")" />
			<input type="hidden" id="cnpl_content_link_regulation_url" name="cnpl_content_link_regulation_url" value="get_option("cnpl_content_link_regulation_url")" />
			<input type="hidden" id="cnpl_content_link_howto_br" name="cnpl_content_link_howto_br" value="get_option("cnpl_content_link_howto_br")" />
			<input type="hidden" id="cnpl_content_link_howto_text" name="cnpl_content_link_howto_text" value="get_option("cnpl_content_link_howto_text")" />
			<input type="hidden" id="cnpl_content_link_howto_url" name="cnpl_content_link_howto_url" value="get_option("cnpl_content_link_howto_url")" />
			<input type="hidden" id="cnpl_content_button_text" name="cnpl_content_button_text" value="get_option("cnpl_content_button_text")" />
			<input type="hidden" id="cnpl_theme_css_box_outer" name="cnpl_theme_css_box_outer" value="get_option("cnpl_theme_css_box_outer")" />
			<input type="hidden" id="cnpl_theme_css_box_inner" name="cnpl_theme_css_box_inner" value="get_option("cnpl_theme_css_box_inner")" />
			<input type="hidden" id="cnpl_theme_css_button" name="cnpl_theme_css_button" value="get_option("cnpl_theme_css_button")" />
			<input type="hidden" id="cnpl_theme_css_links" name="cnpl_theme_css_links" value="get_option("cnpl_theme_css_links")" />
			<input type="hidden" id="cnpl_theme_css_text" name="cnpl_theme_css_text" value="get_option("cnpl_theme_css_text")" />
			<input type="hidden" id="cnpl_settings_time" name="cnpl_settings_time" value="get_option("cnpl_settings_time")" />
			<input type="hidden" id="cnpl_on_off" name="cnpl_on_off" value="get_option("cnpl_on_off")" />
			
			<div class="cnpl_facebook"><div class="fb-like" data-href="https://facebook.com/jakwylaczyccookies/" data-layout="box_count" data-action="like" data-size="small" data-show-faces="true" data-share="true"></div></div>
			<br /><h1 style="margin-top:15px; margin-bottom:10px;">Cookie Notify</h1><br />
			<hr />
			<script>
	/* GLOBAL VALUES */
	var buttonStyle = 1;
	var buttonTextColor = \'\';
	/* FUNCTIONS */

	String.prototype.trim=function(){return this.replace(/^\s+|\s+$/g, \'\');};
	
	function komunikatTmpProcess(){
		updatePowiadomienieText(jQuery(\'#komunikatTmp\').val());
	}
	function komunikatLognerProcess(id){
		jQuery(\'#komunikatTmp\').val(jQuery(\'#cookie_message_proposal_\'+id).text());
		komunikatTmpProcess();
	}
	function komunikatProcess(){
		var selectedOption = jQuery(\'#komunikat\').val();
		jQuery(\'#komunikat :nth-child(1)\').prop(\'selected\', true);
		if(selectedOption!=\'\'){
			updatePowiadomienieText(selectedOption);
			jQuery(\'#komunikatTmp\').val(selectedOption);
		}
	}


	function buttonTmpProcess(){
		updateButtonText(jQuery(\'#buttonTmp\').val());
	}

	function buttonProcess(){
		var selectedOption = jQuery(\'#button\').val();
		jQuery(\'#button :nth-child(1)\').prop(\'selected\', true);
		if(selectedOption!=\'\'){
			updateButtonText(selectedOption);
			jQuery(\'#buttonTmp\').val(selectedOption);
		}
	}

	function cnpl_v01_create_cookie(a,b,c){
		jQuery(\'#cnpl_v01\').hide(\'fast\');
	}
	function update(){
		
		/*
			INFO: CREATES CODE AND UPDATES TEXTAREAS
		*/
		
		jQuery(\'#okbutton\').attr(\'href\',"javascript:cnpl_v01_create_cookie(\'cnpl_v01\',1,"+jQuery(\'#pc_wybor\').val()+");");

		/* CSS */
		
		jQuery(\'#cnpl_css_1\').val(jQuery(\'.cnpl_inner\').attr(\'style\'));
		jQuery(\'#cnpl_css_2\').val(jQuery(\'#cnpl_v01\').attr(\'style\'));
		jQuery(\'#cnpl_css_3\').val(jQuery(\'#jwc_hr1\').attr(\'style\'));
		jQuery(\'#cnpl_css_4\').val(jQuery(\'#okbutton\').attr(\'style\'));
		jQuery(\'#cnpl_css_5\').val(jQuery(\'#cnpl_v01_polityka\').attr(\'style\'));
		
		var css = \'.cnpl_inner{ \'+jQuery(\'#cnpl_css_1\').val()+\' }\';
		css += \'#cnpl_v01 {\'+jQuery(\'#cnpl_css_2\').val()+\'}\';
		css += \'#okbutton {\'+jQuery(\'#cnpl_css_4\').val()+\'} \';
		css += \'#cnpl_v01_polityka {\'+jQuery(\'#cnpl_css_5\').val()+\'} \';
		css += \'#cnpl_v01_info {\'+jQuery(\'#cnpl_css_5\').val()+\'} \';
		
		
		/* HTML */
		var html = 	\'<div id="cnpl_v01">\';
		html +=			\'<div class="cnpl_inner">\';
		html +=				\'<span id="cnpl_v01_powiadomienie">\'+jQuery(\'#cnpl_v01_powiadomienie\').text()+\'</span>\';
		html +=				\'<span id="br_pc_title_html">\'+jQuery(\'#br_pc_title_html\').html()+\'</span>\';
		html +=				\'<a id="cnpl_v01_polityka" href="\'+jQuery(\'#cnpl_v01_polityka\').attr(\'href\')+\'">\'+jQuery(\'#cnpl_v01_polityka\').text()+\'</a>\';
		html +=				\'<span id="br_pc2_title_html">\'+jQuery(\'#br_pc2_title_html\').html()+\'</span>\';
		html +=				\'<a id="cnpl_v01_info" href="\'+jQuery(\'#cnpl_v01_info\').attr(\'href\')+\'">\'+jQuery(\'#cnpl_v01_info\').text()+\'</a>\';
		html +=				\'<div id="jwc_hr1"></div>\';
		html +=				\'<a id="okbutton" href="javascript:cnpl_v01_create_cookie(\\'cnpl_v01\\',1,7);">\'+jQuery(\'#okbutton\').text()+\'</a>\';
		html +=				\'<div id="jwc_hr2"></div>\';
		html +=			\'</div>\';
		html +=		\'</div>\';
			
		
		/* JavaScript */
		var js = \'var galTable= new Array(); var galx = 0;\';
		
		js += 	\'function cnpl_v01_create_cookie(name,value,days) { \';
		js += 		\'if (days) { \';
		js += 			\'var date = new Date(); \';
		js += 			\'date.setTime(date.getTime()+(days*24*60*60*1000)); \';
		js += 			\'var expires = "; expires="+date.toGMTString(); \';
		js += 		\'} \';
		js += 		\'else { var expires = ""; } \';	
		js += 		\'document.cookie = name+"="+value+expires+"; path=\/"; \';
		js += 		\'document.getElementById("cnpl_v01").style.display = "none"; \';
		js += 	\'}\';
		
		js += 	\'function cnpl_v01_read_cookie(name) { \';
		js += 		\'var nameEQ = name + "="; \';
		js += 		\'var ca = document.cookie.split(";"); \';
		js += 		\'for(var i=0;i < ca.length;i++) { \';
		js += 			\'var c = ca[i]; \';
		js += 			\'while (c.charAt(0)==" ") c = c.substring(1,c.length); \';
		js += 			\'if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length); \';
		js += 		\'}\';
		js += 		\'return null;\';
		js += 	\'}\';
		
		js += 	\'var cnpl_v01_jest = cnpl_v01_read_cookie("cnpl_v01");\';
		js += 	\'if(cnpl_v01_jest==1){ document.getElementById("cnpl_v01").style.display = "none"; }\';
        
		/* Hack to prevent google chrome block POST data */
		html = html.replace(\'javascript:\',\'{{jasc}}\')
		
		document.getElementById(\'cnpl_js\').value =  js;
		document.getElementById(\'cnpl_html\').value =  html;
		document.getElementById(\'cnpl_css\').value =  css;
		
		
		/* SET VALUES TO SAVE*/
		jQuery(\'#cnpl_content_text\').val(jQuery(\'#komunikatTmp\').val());
		jQuery(\'#cnpl_content_link_regulation_br\').val(function(){if(jQuery(\'#br_pc_title\').prop(\'checked\')){return \'1\'; }else{ return \'0\';}});
		jQuery(\'#cnpl_content_link_regulation_text\').val(jQuery(\'#pc_title\').val());
		jQuery(\'#cnpl_content_link_regulation_url\').val(jQuery(\'#pc_url\').val());
		jQuery(\'#cnpl_content_link_howto_br\').val(function(){if(jQuery(\'#br_pc2_title\').prop(\'checked\')){return \'1\'; }else{ return \'0\';}});
		jQuery(\'#cnpl_content_link_howto_text\').val(jQuery(\'#pc2_title\').val());
		jQuery(\'#cnpl_content_link_howto_url\').val(jQuery(\'#pc2_url\').val());
		jQuery(\'#cnpl_content_button_text\').val(jQuery(\'#buttonTmp\').val());
		jQuery(\'#cnpl_theme_css_box_outer\').val(jQuery(\'#cnpl_v01\').attr(\'style\'));
		jQuery(\'#cnpl_theme_css_box_inner\').val(jQuery(\'.cnpl_inner\').attr(\'style\'));
		jQuery(\'#cnpl_theme_css_button\').val(jQuery(\'#okbutton\').attr(\'style\'));
		jQuery(\'#cnpl_theme_css_links\').val(jQuery(\'#cnpl_v01_polityka\').attr(\'style\'));
		jQuery(\'#cnpl_theme_css_text\').val(jQuery(\'#cnpl_v01_powiadomienie\').attr(\'style\'));
		
		
	}

	function addbreak(id){
		
		
		/*
			INFO: ADD BR DEPENDING ON USER CHOICE
		*/
		
		/* visability reload */
		jQuery(\'#cnpl_v01\').show(\'fast\');
		
		if(id==\'br_pc_title\'){
			if(jQuery(\'#br_pc_title\').prop(\'checked\')){
				jQuery(\'#br_pc_title_html\').html(\'<br />\');
			}
			else {  jQuery(\'#br_pc_title_html\').html(\' &nbsp;&nbsp; \'); }
		}

		else if(id=="br_pc2_title"){
			if(jQuery(\'#br_pc2_title\').prop(\'checked\')){
				jQuery(\'#br_pc2_title_html\').html(\'<br />\');
			}
			else {  jQuery(\'#br_pc2_title_html\').html(\' &nbsp;&nbsp; \'); }
		}
	}


	function setTextToInput(inputid, text){
		
		/*
			INFO: UNIVERSAL FUNCTION TO UPDATE INPUTS WITH PREDEFINED VALUES
		*/
		
		/* visability reload */
		jQuery(\'#cnpl_v01\').show(\'fast\');
		
		/* INPUT UPDATE */
		jQuery(\'#\'+inputid).val(text);
		
		/* PREVIEW AND CODE UPDATE */
		updatePolitykaText();
		updateInfoText();

	}


	function updateButtonText(text){
		
		/*
			INFO: UPDATE COOKIE NOTICE BUTTON TEXT
		*/
		
		/* visability reload */
		jQuery(\'#cnpl_v01\').show(\'fast\');
		
		jQuery(\'#okbutton\').html(text);
	}


	function updatePowiadomienieText(text){
		
		/*
			INFO: UPDATE COOKIE NOTICE STANDARD TEXT
		*/
		
		/* visability reload */
		jQuery(\'#cnpl_v01\').show(\'fast\');
		
		jQuery(\'#cnpl_v01_powiadomienie\').html(text);
		
	}

	function updatePolitykaText(){
		
		/*
			INFO: UPDATE COOKIE NOTICE REGULATIONS LINK
		*/
		
		/* visability reload */
		jQuery(\'#cnpl_v01\').show(\'fast\');
		
		
		jQuery(\'#cnpl_v01_polityka\').html(jQuery(\'#pc_title\').val());
		jQuery(\'#cnpl_v01_polityka\').attr(\'href\',jQuery(\'#pc_url\').val());
		
	}

	function updateInfoText(){
		
		/*
			INFO: UPDATE COOKIE NOTICE INFORMATION LINK
		*/
		
		/* visability reload */
		jQuery(\'#cnpl_v01\').show(\'fast\');
		
		
		jQuery(\'#cnpl_v01_info\').html(jQuery(\'#pc2_title\').val());
		jQuery(\'#cnpl_v01_info\').attr(\'href\',jQuery(\'#pc2_url\').val());

	}


	function noticebutton(bStyle){
		
		/*
			INFO: UPDATE COOKIE NOTICE BUTTON STYLE
		*/
		
		/* visability reload */
		jQuery(\'#cnpl_v01\').show(\'fast\');
		buttonStyle = bStyle;

		/* SAVING CURRENT COLOR PALETTE STYLE */
		var col1 = document.getElementById(\'cnpl_v01\').style.background;
		var col2 = document.getElementById(\'cnpl_v01\').style.borderColor;

		/* SAVING COOKIE NOTICE BUTTON STYLE */
		if(bStyle==1){
			  document.getElementById(\'okbutton\').style.background = ""+col2;
			  document.getElementById(\'okbutton\').style.border = "0px solid";
			  document.getElementById(\'okbutton\').style.borderColor = ""+rgbToHex(col1);
			  document.getElementById(\'okbutton\').style.borderRadius = \'0px\';
			  document.getElementById(\'okbutton\').style.color = buttonTextColor;
		}
		if(bStyle==2){
			  document.getElementById(\'okbutton\').style.background = ""+col2;
			  document.getElementById(\'okbutton\').style.border = "0px solid";
			  document.getElementById(\'okbutton\').style.borderColor = ""+rgbToHex(col1);
			  document.getElementById(\'okbutton\').style.borderRadius = \'5px\';
			  document.getElementById(\'okbutton\').style.color = buttonTextColor;
		}
		if(bStyle==3){
			  document.getElementById(\'okbutton\').style.background = "#FFF";
			  document.getElementById(\'okbutton\').style.border = "1px solid";
			  document.getElementById(\'okbutton\').style.borderRadius = \'0px\';
			  document.getElementById(\'okbutton\').style.borderColor = ""+rgbToHex(col2);
			  document.getElementById(\'okbutton\').style.color = ""+rgbToHex(col2);
		}
		if(bStyle==4){
			  document.getElementById(\'okbutton\').style.background = "#FFF";
			  document.getElementById(\'okbutton\').style.border = "1px solid";
			  document.getElementById(\'okbutton\').style.borderRadius = \'5px\';
			  document.getElementById(\'okbutton\').style.borderColor = ""+rgbToHex(col2);
			  document.getElementById(\'okbutton\').style.color = ""+rgbToHex(col2);
		}
		
		/* UPDATING CODE AND VIEW */
		
		jQuery(\'#cnpl_theme_css_button\').val(jQuery(\'#okbutton\').attr(\'style\'));
		update();
	}        


	function noticecorner(val){
		
		/*
			INFO: UPDATE COOKIE NOTICE CORNERS STYLE
		*/
		
		/* visability reload */
		jQuery(\'#cnpl_v01\').show(\'fast\');
		
		jQuery(\'#remember_corners\').val(val+\'px\');
		
		
		/* SETTING CORNER RADIUS */
		document.getElementById(\'cnpl_v01\').style.borderRadius=val+\'px\';
		
		/* UPDATING BUTTON STYLE (border colors mostly) */
		noticebutton(buttonStyle);
	}


	function noticeshadow(cien){

		/*
			INFO: UPDATE COOKIE NOTICE SHADOW
		*/
		
		/* visability reload */
		jQuery(\'#cnpl_v01\').show(\'fast\');
		
		
		/* SETTING SHADOW STYLE (whole style is placed on the show buttons) */
		document.getElementById(\'cnpl_v01\').style.boxShadow =cien;
		
		/* UPDATING BUTTON STYLE (border colors mostly) */
		noticebutton(buttonStyle );
	}


	function noticeborder(br){
		
		/*
			INFO: UPDATE COOKIE NOTICE BORDER
		*/
		
		/* save selection to tmp */
		jQuery(\'#remember_border\').val(br);
		
		
		/* visability reload */
		jQuery(\'#cnpl_v01\').show(\'fast\');
		
		var color = document.getElementById(\'cnpl_v01\').style.borderColor;
		var bottom = document.getElementById(\'cnpl_v01\').style.bottom;
		var top= document.getElementById(\'cnpl_v01\').style.top;
		
		var brs = br.split(\';\');
		var br1 = brs[0].split(\':\');
		var br2 = brs[1].split(\':\');
		if(br1[0]=="border"){
			
			if(bottom=="0"||bottom=="0px"){
				document.getElementById(\'cnpl_v01\').style.border="0";
				document.getElementById(\'cnpl_v01\').style.borderTop=br1[1]+" "+color;
			}
			else if(top=="0"||top=="0px"){
				document.getElementById(\'cnpl_v01\').style.border="0";
				document.getElementById(\'cnpl_v01\').style.borderBottom=br1[1]+" "+color;
			}
			else {
				document.getElementById(\'cnpl_v01\').style.border=br1[1]+" "+color;
			}
			document.getElementById(\'cnpl_v01\').style.borderTop=br2[1]+" "+color;
		}
		else {
			document.getElementById(\'cnpl_v01\').style.borderTop=br2[1]+" "+color;
			if(bottom=="0"||bottom=="0px"){
				document.getElementById(\'cnpl_v01\').style.border="0";
				document.getElementById(\'cnpl_v01\').style.borderTop=br2[1]+" "+color;
			}
			else if(top=="0"||top=="0px"){
				document.getElementById(\'cnpl_v01\').style.border="0";
				document.getElementById(\'cnpl_v01\').style.borderBottom=br2[1]+" "+color;
		 
			}
			else {
				document.getElementById(\'cnpl_v01\').style.border=br2[1]+" "+color;
			}
		}
		document.getElementById(\'cnpl_v01\').style.borderColor = color;
		noticebutton(buttonStyle );
	}
	function noticeposition(setposition){
		
		/* 
			INFO: SETS POSITION OF THE COOKIE NOTICE 
		*/
		
		/* visability reload */
		jQuery(\'#cnpl_v01\').show(\'fast\');
		
		/* SET POSITION TO SAVE*/
		jQuery(\'#cnpl_position\').val(setposition);
		
		/* RESET BREAK-LINES BETWEEN LINKS AND BUTTON */
		document.getElementById(\'jwc_hr1\').style.display=\'block\';
		document.getElementById(\'jwc_hr2\').style.display=\'block\';
		
		/* GET CURRENT COLOR PALLETE & CORNERS*/
		var color = document.getElementById(\'cnpl_v01\').style.borderColor;
		jQuery(\'#cnpl_v01\').attr(\'style\',jQuery(\'#cnpl_v01\').attr(\'style\')+\'; \'+jQuery(\'#remember_border\').val()+\'; \'+jQuery(\'#remember_corners\').val());
		var bt = document.getElementById(\'cnpl_v01\').style.borderTop;
		var bb = document.getElementById(\'cnpl_v01\').style.borderBottom;
		var bl = document.getElementById(\'cnpl_v01\').style.borderLeft;
		var br = document.getElementById(\'cnpl_v01\').style.borderRight;
		var bottom = document.getElementById(\'cnpl_v01\').style.bottom;
		var top= document.getElementById(\'cnpl_v01\').style.top;
		var corners = document.getElementById(\'cnpl_v01\').style.borderRadius;

		
		
		/* RESET POSITION SELECTION BACKGROUND */
		document.getElementById(\'cnpl_w_top\').style.background=\'\';
		document.getElementById(\'cnpl_w_topleft\').style.background=\'\';
		document.getElementById(\'cnpl_w_topright\').style.background=\'\';
		document.getElementById(\'cnpl_w_bottom\').style.background=\'\';
		document.getElementById(\'cnpl_w_bottomleft\').style.background=\'\';
		document.getElementById(\'cnpl_w_bottomright\').style.background=\'\';
		
		/* SET SELECTED POSITION BACKGROUND */
		document.getElementById(\'cnpl_w_\'+setposition).style.background=\'#D9EDF7\';

		/* SETTING POSITION */
		if(setposition==\'bottom\'){
			
			/* disabling break-lines */
			document.getElementById(\'jwc_hr1\').style.display=\'none\';
			document.getElementById(\'jwc_hr2\').style.display=\'none\';
			
			/* disabling corners*/
			document.getElementById(\'cnpl_v01\').style.borderRadius=\'0\';
			
			/* setting proper notice style */
			document.getElementById(\'cnpl_v01\').style.bottom = 0;
			document.getElementById(\'cnpl_v01\').style.left = 0;
			document.getElementById(\'cnpl_v01\').style.right = 0;
			document.getElementById(\'cnpl_v01\').style.top = \'\';
			document.getElementById(\'cnpl_v01\').style.width = \'100%\';
			document.getElementById(\'cnpl_v01\').style.borderTop = bt;
			document.getElementById(\'cnpl_v01\').style.borderBottom = \'\';
			document.getElementById(\'cnpl_v01\').style.borderLeft = \'\';
			document.getElementById(\'cnpl_v01\').style.borderRight = \'\';

			/* setting proper notice button style and position */
			document.getElementById(\'okbutton\').style.position = \'absolute\';
			document.getElementById(\'okbutton\').style.top = \'5px\';
			document.getElementById(\'okbutton\').style.right = \'5px\';
		}
		else  if(setposition==\'top\'){
			
			/* disabling break-lines */
			document.getElementById(\'jwc_hr1\').style.display=\'none\';
			document.getElementById(\'jwc_hr2\').style.display=\'none\';
			
			/* disabling corners*/
			document.getElementById(\'cnpl_v01\').style.borderRadius=\'0\';
			console.log(\'set border radius to 0\');
			
			/* setting proper notice style */
			document.getElementById(\'cnpl_v01\').style.bottom = \'\';
			document.getElementById(\'cnpl_v01\').style.left = 0;
			document.getElementById(\'cnpl_v01\').style.right = 0;
			document.getElementById(\'cnpl_v01\').style.top = 0;
			document.getElementById(\'cnpl_v01\').style.width = \'100%\';
			document.getElementById(\'cnpl_v01\').style.borderTop = \'\';
			document.getElementById(\'cnpl_v01\').style.borderBottom = bb;
			document.getElementById(\'cnpl_v01\').style.borderLeft = \'\';
			document.getElementById(\'cnpl_v01\').style.borderRight = \'\';

			/* setting proper notice button style and position */
			document.getElementById(\'okbutton\').style.position = \'absolute\';
			document.getElementById(\'okbutton\').style.top = \'5px\';
			document.getElementById(\'okbutton\').style.right = \'5px\';


		}
		else  if(setposition==\'topleft\'){
			
			/* break-lines setted at the beginning */
			
			/* enabling corners*/
			document.getElementById(\'cnpl_v01\').style.borderRadius=corners;
			
			/* setting proper notice style */
			document.getElementById(\'cnpl_v01\').style.bottom = \'\';
			document.getElementById(\'cnpl_v01\').style.left = \'10px\';
			document.getElementById(\'cnpl_v01\').style.right = \'\';
			document.getElementById(\'cnpl_v01\').style.top = \'10px\';
			document.getElementById(\'cnpl_v01\').style.width = \'300px\';
			document.getElementById(\'cnpl_v01\').style.borderTop = bt;
			document.getElementById(\'cnpl_v01\').style.borderBottom = bb;
			document.getElementById(\'cnpl_v01\').style.borderLeft = bl;
			document.getElementById(\'cnpl_v01\').style.borderRight = br;

			/* setting proper notice button style and position */
			document.getElementById(\'okbutton\').style.position = \'relative\';
			document.getElementById(\'okbutton\').style.top = \'\';
			document.getElementById(\'okbutton\').style.right = \'\';
		}
		else  if(setposition==\'topright\'){
			
			/* break-lines setted at the beginning */
			
			/* enabling corners*/
			document.getElementById(\'cnpl_v01\').style.borderRadius=corners;
			
			/* setting proper notice style */
			document.getElementById(\'cnpl_v01\').style.bottom = \'\';
			document.getElementById(\'cnpl_v01\').style.left = \'\';
			document.getElementById(\'cnpl_v01\').style.right = \'10px\';
			document.getElementById(\'cnpl_v01\').style.top = \'10px\';
			document.getElementById(\'cnpl_v01\').style.width = \'300px\';
			document.getElementById(\'cnpl_v01\').style.borderTop = bt;
			document.getElementById(\'cnpl_v01\').style.borderBottom = bb;
			document.getElementById(\'cnpl_v01\').style.borderLeft = bl;
			document.getElementById(\'cnpl_v01\').style.borderRight = br;

			/* setting proper notice button style and position */
			document.getElementById(\'okbutton\').style.position = \'relative\';
			document.getElementById(\'okbutton\').style.top = \'\';
			document.getElementById(\'okbutton\').style.right = \'\';
		}
		else  if(setposition==\'bottomleft\'){
			
			/* break-lines setted at the beginning */
			
			/* enabling corners*/
			document.getElementById(\'cnpl_v01\').style.borderRadius=corners;
			
			/* setting proper notice style */
			document.getElementById(\'cnpl_v01\').style.bottom = \'10px\';
			document.getElementById(\'cnpl_v01\').style.left = \'10px\';
			document.getElementById(\'cnpl_v01\').style.right = \'\';
			document.getElementById(\'cnpl_v01\').style.top = \'\';
			document.getElementById(\'cnpl_v01\').style.width = \'300px\';
			document.getElementById(\'cnpl_v01\').style.borderTop = bt;
			document.getElementById(\'cnpl_v01\').style.borderBottom = bb;
			document.getElementById(\'cnpl_v01\').style.borderLeft = bl;
			document.getElementById(\'cnpl_v01\').style.borderRight = br;

			/* setting proper notice button style and position */
			document.getElementById(\'okbutton\').style.position = \'relative\';
			document.getElementById(\'okbutton\').style.top = \'\';
			document.getElementById(\'okbutton\').style.right = \'\';
		}
		else  if(setposition==\'bottomright\'){
			
			/* break-lines setted at the beginning */
			
			/* enabling corners*/
			document.getElementById(\'cnpl_v01\').style.borderRadius=corners;
			
			/* setting proper notice style */
			document.getElementById(\'cnpl_v01\').style.bottom = \'10px\';
			document.getElementById(\'cnpl_v01\').style.left = \'\';
			document.getElementById(\'cnpl_v01\').style.right = \'10px\';
			document.getElementById(\'cnpl_v01\').style.top = \'\';
			document.getElementById(\'cnpl_v01\').style.width = \'300px\';
			document.getElementById(\'cnpl_v01\').style.borderTop = bt;
			document.getElementById(\'cnpl_v01\').style.borderBottom = bb;
			document.getElementById(\'cnpl_v01\').style.borderLeft = bl;
			document.getElementById(\'cnpl_v01\').style.borderRight = br;

			/* setting proper notice button style and position */
			document.getElementById(\'okbutton\').style.position = \'relative\';
			document.getElementById(\'okbutton\').style.top = \'\';
			document.getElementById(\'okbutton\').style.right = \'\';
		}
		
		/* setting border color from selected palette */
		document.getElementById(\'cnpl_v01\').style.borderColor = color;
		
		/* resetting button style based on selected palette */
		noticebutton(buttonStyle );
		
	}


	function noticepalete(col1,col2, col3, col4){
		
		/* 
			INFO: SETS COLOR PALETTE OF COOKIE NOTICE 
		*/
		
		/* visability reload */
		jQuery(\'#cnpl_v01\').show(\'fast\');
		
		
		/* background, border and normal text color */
		document.getElementById(\'cnpl_v01\').style.background = col1;
		document.getElementById(\'cnpl_v01\').style.borderColor = col2;
		document.getElementById(\'cnpl_v01_powiadomienie\').style.color = col3;
		
		/* color of the links (not button) */
		document.getElementById(\'cnpl_v01_polityka\').style.color = col2;
		document.getElementById(\'cnpl_v01_info\').style.color = col2;
		
		
		/* resetting button style based on NEW selected palette */
		noticebutton(buttonStyle);
		if(buttonStyle<3){
			document.getElementById(\'okbutton\').style.color = col4;
			buttonTextColor = jQuery(\'#okbutton\').css(\'color\');
		}
		else{
			document.getElementById(\'okbutton\').style.color = buttonTextColor;
		}
		
		jQuery(\'#cnpl_theme_css_button\').val(jQuery(\'#okbutton\').attr(\'style\'));
	}


	function componentToHex(c) {
		
		/* 
			INFO: CONVERT NUMBER TO BASE16 STRING
		*/
		
		/* visability reload */
		jQuery(\'#cnpl_v01\').show(\'fast\');
		

		x = parseInt(c).toString(16);
		return (x.length==1) ? \'0\'+x : x;
	}

	function rgbToHex(rgb) {
		
		/* 
			INFO: CONVERT REG COLOR TO HEX COLOR
		*/
		
		/* visability reload */
		jQuery(\'#cnpl_v01\').show(\'fast\');
		
		
		rgb = rgb.replace(\'rgb(\',\'\');
		rgb = rgb.replace(\')\',\'\');
		rgb = rgb.replace(\' \',\'\');
		rgb = rgb.replace(\' \',\'\');
		rgb = rgb.replace(\' \',\'\');
		rgb = rgb.split(\',\');
		
		r = rgb[0];
		g = rgb[1];
		b = rgb[2];
		
		return \'#\' + componentToHex(r) + componentToHex(g) + componentToHex(b);
	}
	function cnpl_changePanel(panel){
		jQuery(\'#cnpl_last_active_panel\').val(panel);
		jQuery(\'.panel\').removeClass(\'active\');
		jQuery(\'.panel_button\').removeClass(\'active\');
		jQuery(\'.\'+panel).addClass(\'active\');
		jQuery(\'.\'+panel+\'_button\').addClass(\'active\');
		if(panel==\'cnpl_content_panel\'){
			
		jQuery(\'#cnpl_text_panel_opened\').val(\'1\');
		}
	}
	window.onload = function(e) {
		
		/* 
			INFO: INIT FUNCTION
		*/
		
		/* visability reload */
		jQuery(\'#cnpl_v01\').show(\'fast\');
		
		jQuery(\'#okbutton\').attr(\'style\',jQuery(\'#cnpl_theme_css_button\').val());
		buttonTextColor = jQuery(\'#okbutton\').css(\'color\');
		/* INTERVAL TO UPDATE CSS, HTML AND JAVASCRIPT TEXTAREAS */
		var mi = setInterval(\'update()\',100);
		
		/* RESETTING COOKIE NOTICE */
		updateButtonText(\'get_option("cnpl_content_button_text")\');
		updatePowiadomienieText(\'get_option("cnpl_content_text")\');
		
		updatePolitykaText();
		updateInfoText();
		
		addbreak(\'br_pc_title\');
		addbreak(\'br_pc2_title\');
		
		noticeposition(\'get_option("cnpl_position")\');
		//noticepalete(\'#FFF3E0\',\'#FF9800\');
		
		jQuery(\'.blink\').each(function() {
			var elem = jQuery(this);
			setInterval(function() {
				if (elem.css(\'opacity\') == \'0.7\') {
					elem.css(\'opacity\', \'1\');
				} else {
					elem.css(\'opacity\', \'0.7\');
				}    
			}, 500);
		});
		
	}
	function turnOnOff(){
		var state = jQuery(\'#cnpl_on_off\').val();
		console.log(state);
		if(state==\'0\'||state==0){
			jQuery(\'#cnpl_on_off\').val(\'1\');
		}
		else{
			jQuery(\'#cnpl_on_off\').val(\'0\');
		}
		submitForm();
	}
	function submitForm(){
		jQuery(\'#cnpl_form\').submit();
	}
	function updateTime(){
		jQuery(\'#cnpl_settings_time\').val(parseInt(jQuery(\'#pc_wybor\').val(),10));
	}
	</script>'' cannot be parsed correct.
HTML code '$'<script>'' cannot be parsed correct.
HTML code '$'</script>'' cannot be parsed correct.
HTML code '$'<!-- END COOKIE NOTIFIY-->'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:02.981273.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.045771.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 0 do_action/apply_filters calls and 6 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.474766.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbplusDetector
### Start running FrontBaseDetector
### Finish running FileProDetector
### Start running HashDetector
### Finish running DbaseDetector
### Start running IBMDb2Detector
### Finish running FirebirdInterBaseDetector
### Start running InformixDetector
### Finish running CubridDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running IngresDetector
### Start running MongoDbDetector
### Finish running InformixDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running HashDetector
### Start running OpenSSLDetector
### Finish running Oci8Detector
### Start running ParadoxDetector
### Finish running MongoDbDetector
### Start running PasswordHashingDetector
### Finish running ParadoxDetector
### Start running PhpCurlDetector
### Finish running OpenSSLDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PasswordHashingDetector
### Start running PHPRetrievalDetector
### Finish running ArrayElementDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PhpCurlDetector
### Start running PhpVarDetector
### Finish running PhpVarDetector
### Start running PostgreSQLDetector
### Finish running PostgreSQLDetector
### Start running PropertyDetector
### Finish running PHPStorageDetector
### Start running Sqlite3Detector
### Finish running PHPRetrievalDetector
### Start running SqliteDetector
### Finish running SqliteDetector
### Start running SqlServerDetector
### Finish running PHPIncludedDetector
### Start running SybaseDetector
### Finish running SybaseDetector
### Start running TokyoTyrantDetector
### Finish running Sqlite3Detector
### Start running UserInputDetector
### Finish running TokyoTyrantDetector
### Start running VariableDetector
### Finish running PropertyDetector
### Start running WordpressHashingFnDetector
### Finish running SqlServerDetector
### Start running WordPressRemoteDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRetrievalDetector
### Finish running WordPressRemoteDetector
### Start running WordPressStorageDetector
### Finish running VariableDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running UserInputDetector
### Start running GenericEncryptionDetector
### Finish running GenericDatabaseUsageDetector
### Start running DeletionDetector
### Finish running GenericEncryptionDetector
### Start running UninstallDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running WordPressRetrievalDetector
### Finish running WordPressStorageDetector
### Finish running maxdbDetector
### Finish running MySQLiDetector
### Finished running detectors
cookie-notify.php:602
  - MD5 called with parameters [time]. Ignore if [time] does not contain personal information. 

cookie-notify.php:132
  - RETRIEVAL call to get_option("my_plugin_do_activation_redirect", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
cookie-notify.php:193
  - RETRIEVAL call to get_option("cnpl_css") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:199
  - RETRIEVAL call to get_option("cnpl_html") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:204
  - RETRIEVAL call to get_option("cnpl_js") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:208
  - RETRIEVAL call to get_option("cnpl_on_off") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:268
  - RETRIEVAL call to get_option("cnpl_form_hash") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:614
  - RETRIEVAL call to get_option("cnpl_last_active_panel") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:615
  - RETRIEVAL call to get_option("cnpl_text_panel_opened") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:617
  - RETRIEVAL call to get_option("cnpl_remember_border") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:618
  - RETRIEVAL call to get_option("cnpl_remember_corners") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:620
  - RETRIEVAL call to get_option("cnpl_position") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:621
  - RETRIEVAL call to get_option("cnpl_content_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:622
  - RETRIEVAL call to get_option("cnpl_content_link_regulation_br") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:623
  - RETRIEVAL call to get_option("cnpl_content_link_regulation_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:624
  - RETRIEVAL call to get_option("cnpl_content_link_regulation_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:625
  - RETRIEVAL call to get_option("cnpl_content_link_howto_br") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:626
  - RETRIEVAL call to get_option("cnpl_content_link_howto_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:627
  - RETRIEVAL call to get_option("cnpl_content_link_howto_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:628
  - RETRIEVAL call to get_option("cnpl_content_button_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:629
  - RETRIEVAL call to get_option("cnpl_theme_css_box_outer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:630
  - RETRIEVAL call to get_option("cnpl_theme_css_box_inner") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:631
  - RETRIEVAL call to get_option("cnpl_theme_css_button") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:632
  - RETRIEVAL call to get_option("cnpl_theme_css_links") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:633
  - RETRIEVAL call to get_option("cnpl_theme_css_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:634
  - RETRIEVAL call to get_option("cnpl_settings_time") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:635
  - RETRIEVAL call to get_option("cnpl_on_off") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:642
  - RETRIEVAL call to get_option("cnpl_text_panel_opened") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:669
  - RETRIEVAL call to get_option("cnpl_last_active_panel") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:670
  - RETRIEVAL call to get_option("cnpl_last_active_panel") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:671
  - RETRIEVAL call to get_option("cnpl_last_active_panel") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:672
  - RETRIEVAL call to get_option("cnpl_last_active_panel") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:673
  - RETRIEVAL call to get_option("cnpl_last_active_panel") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:674
  - RETRIEVAL call to get_option("cnpl_on_off") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:674
  - RETRIEVAL call to get_option("cnpl_on_off") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:680
  - RETRIEVAL call to get_option("cnpl_last_active_panel") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:719
  - RETRIEVAL call to get_option("cnpl_last_active_panel") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:903
  - RETRIEVAL call to get_option("cnpl_last_active_panel") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:1031
  - RETRIEVAL call to get_option("cnpl_last_active_panel") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:1055
  - RETRIEVAL call to get_option("cnpl_content_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:1085
  - RETRIEVAL call to get_option("cnpl_content_button_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:1097
  - RETRIEVAL call to get_option("cnpl_content_link_regulation_br") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:1100
  - RETRIEVAL call to get_option("cnpl_content_link_regulation_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:1122
  - RETRIEVAL call to get_option("cnpl_content_link_regulation_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:1137
  - RETRIEVAL call to get_option("cnpl_content_link_howto_br") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:1141
  - RETRIEVAL call to get_option("cnpl_content_link_howto_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:1163
  - RETRIEVAL call to get_option("cnpl_content_link_howto_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:1171
  - RETRIEVAL call to get_option("cnpl_last_active_panel") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:1176
  - RETRIEVAL call to get_option("cnpl_settings_time") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:1226
  - RETRIEVAL call to get_option("cnpl_on_off") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:1226
  - RETRIEVAL call to get_option("cnpl_on_off") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:1232
  - RETRIEVAL call to get_option("cnpl_last_active_panel") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:1233
  - RETRIEVAL call to get_option("cnpl_last_active_panel") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:1234
  - RETRIEVAL call to get_option("cnpl_last_active_panel") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:1235
  - RETRIEVAL call to get_option("cnpl_last_active_panel") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:1236
  - RETRIEVAL call to get_option("cnpl_last_active_panel") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:1237
  - RETRIEVAL call to get_option("cnpl_on_off") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:1237
  - RETRIEVAL call to get_option("cnpl_on_off") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:1255
  - RETRIEVAL call to get_option("cnpl_theme_css_box_outer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:1256
  - RETRIEVAL call to get_option("cnpl_theme_css_box_inner") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:1257
  - RETRIEVAL call to get_option("cnpl_theme_css_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:1258
  - RETRIEVAL call to get_option("cnpl_theme_css_links") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:1259
  - RETRIEVAL call to get_option("cnpl_theme_css_links") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:1260
  - RETRIEVAL call to get_option("cnpl_theme_css_button") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:1260
  - RETRIEVAL call to get_option("cnpl_content_button_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:1940
  - RETRIEVAL call to get_option("cnpl_content_button_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:1941
  - RETRIEVAL call to get_option("cnpl_content_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cookie-notify.php:1949
  - RETRIEVAL call to get_option("cnpl_position") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option 

cookie-notify.php:89
  - STORAGE call to add_option("cnpl_last_active_panel", "cnpl_position_panel") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:90
  - STORAGE call to add_option("cnpl_text_panel_opened", "0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:91
  - STORAGE call to add_option("cnpl_position", "topright") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:93
  - STORAGE call to add_option("cnpl_content_text", $content_random[rand(0, count($content_random) - 1)]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:94
  - STORAGE call to add_option("cnpl_content_link_regulation_br", "1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:95
  - STORAGE call to add_option("cnpl_content_link_regulation_text", $link_regulation_random[rand(0, count($link_regulation_random) - 1)]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:96
  - STORAGE call to add_option("cnpl_content_link_regulation_url", get_bloginfo("language") == "pl"get_bloginfo("language") == "pl-PL""http://jakwylaczyccookie.pl/generator-polityki-cookie/""http://cookienotify.com/private-policy-generator.html") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:97
  - STORAGE call to add_option("cnpl_content_link_howto_br", "1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:98
  - STORAGE call to add_option("cnpl_content_link_howto_text", $link_howto_random[rand(0, count($link_howto_random) - 1)]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:99
  - STORAGE call to add_option("cnpl_content_link_howto_url", get_bloginfo("language") == "pl"get_bloginfo("language") == "pl-PL""http://jakwylaczyccookie.pl/jak-wylaczyc-pliki-cookies/""http://cookienotify.com/how-to-disable-cookies.html") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:100
  - STORAGE call to add_option("cnpl_content_button_text", __("I ACCEPT", "cookie-notify")) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:103
  - STORAGE call to add_option("cnpl_theme_css_box_inner", "padding:10px; margin-left:15px; margin-right:15px; font-size:14px; font-weight:normal;") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:104
  - STORAGE call to add_option("cnpl_theme_css_box_outer", "display: block; z-index: 99999; min-height: 35px; width: 300px; position: fixed; background: rgb(245, 245, 245); border-width: 5px 1px 1px; border-style: solid; border-image: initial; border-color: rgb(139, 195, 74); text-align: center; color: rgb(119, 119, 119); border-radius: 15px; box-shadow: black 0px 8px 6px -6px; top: 10px; right: 10px;") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:105
  - STORAGE call to add_option("cnpl_theme_css_button", "position: relative; background: rgb(139, 195, 74); color: rgb(255, 255, 255); padding: 5px 15px; text-decoration: none; font-size: 12px; font-weight: normal; border: 0px solid rgb(245, 245, 245); border-radius: 0px;") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:106
  - STORAGE call to add_option("cnpl_theme_css_links", "color: rgb(139, 195, 74);") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:107
  - STORAGE call to add_option("cnpl_theme_css_text", "color: rgb(0, 0, 0);") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:109
  - STORAGE call to add_option("cnpl_settings_time", "7") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:110
  - STORAGE call to add_option("cnpl_on_off", "0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:112
  - STORAGE call to add_option("cnpl_remember_border", "border-width: 5px 1px 1px; border-style: solid; border-image: initial; border-color: rgb(139, 195, 74);") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:113
  - STORAGE call to add_option("cnpl_remember_corners", "border-radius: 15px;") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:114
  - STORAGE call to add_option("cnpl_remember_button", "position: relative; background: rgb(255, 152, 0); color: rgb(255, 255, 255); padding: 5px 15px; text-decoration: none; font-size: 12px; font-weight: normal; border: 0px solid rgb(255, 243, 224); border-radius: 0px;") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:116
  - STORAGE call to add_option("cnpl_html", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:117
  - STORAGE call to add_option("cnpl_js", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:118
  - STORAGE call to add_option("cnpl_css", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:121
  - STORAGE call to add_option("my_plugin_do_activation_redirect", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:123
  - STORAGE call to add_option("cnpl_form_hash") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:133
  - STORAGE call to delete_option("my_plugin_do_activation_redirect") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:147
  - STORAGE call to delete_option("cnpl_last_active_panel") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:148
  - STORAGE call to delete_option("cnpl_position") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:149
  - STORAGE call to delete_option("cnpl_text_panel_opened") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:151
  - STORAGE call to delete_option("cnpl_content_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:152
  - STORAGE call to delete_option("cnpl_content_link_regulation_br") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:153
  - STORAGE call to delete_option("cnpl_content_link_regulation_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:154
  - STORAGE call to delete_option("cnpl_content_link_regulation_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:155
  - STORAGE call to delete_option("cnpl_content_link_howto_br") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:156
  - STORAGE call to delete_option("cnpl_content_link_howto_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:157
  - STORAGE call to delete_option("cnpl_content_link_howto_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:158
  - STORAGE call to delete_option("cnpl_content_button_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:161
  - STORAGE call to delete_option("cnpl_theme_css_box_outer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:162
  - STORAGE call to delete_option("cnpl_theme_css_box_inner") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:163
  - STORAGE call to delete_option("cnpl_theme_css_button") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:164
  - STORAGE call to delete_option("cnpl_theme_css_links") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:165
  - STORAGE call to delete_option("cnpl_theme_css_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:167
  - STORAGE call to delete_option("cnpl_settings_time") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:168
  - STORAGE call to delete_option("cnpl_on_off") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:170
  - STORAGE call to delete_option("cnpl_remember_border") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:171
  - STORAGE call to delete_option("cnpl_remember_corners") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:172
  - STORAGE call to delete_option("cnpl_remember_button") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:174
  - STORAGE call to delete_option("cnpl_html") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:175
  - STORAGE call to delete_option("cnpl_js") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:176
  - STORAGE call to delete_option("cnpl_css") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:177
  - STORAGE call to delete_option("cnpl_form_hash") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:272
  - STORAGE call to update_option("cnpl_last_active_panel", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_last_active_panel"]), "a-z_", 25)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:273
  - STORAGE call to update_option("cnpl_text_panel_opened", sanitize_text_field($_POST["cnpl_text_panel_opened"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:274
  - STORAGE call to update_option("cnpl_position", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_position"]), "a-z", 12)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:275
  - STORAGE call to update_option("cnpl_content_text", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_content_text"]), "HTML", 512)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:276
  - STORAGE call to update_option("cnpl_content_link_regulation_br", sanitize_text_field($_POST["cnpl_content_link_regulation_br"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:277
  - STORAGE call to update_option("cnpl_content_link_regulation_text", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_content_link_regulation_text"]), "HTML", 256)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:278
  - STORAGE call to update_option("cnpl_content_link_regulation_url", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_content_link_regulation_url"]), "URL", 256)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:279
  - STORAGE call to update_option("cnpl_content_link_howto_br", sanitize_text_field($_POST["cnpl_content_link_howto_br"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:280
  - STORAGE call to update_option("cnpl_content_link_howto_text", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_content_link_howto_text"]), "HTML", 256)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:281
  - STORAGE call to update_option("cnpl_content_link_howto_url", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_content_link_howto_url"]), "URL", 256)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:282
  - STORAGE call to update_option("cnpl_content_button_text", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_content_button_text"]), "HTML", 256)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:283
  - STORAGE call to update_option("cnpl_theme_css_box_outer", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_theme_css_box_outer"]), "CSS", 1024)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:284
  - STORAGE call to update_option("cnpl_theme_css_box_inner", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_theme_css_box_inner"]), "CSS", 1024)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:285
  - STORAGE call to update_option("cnpl_theme_css_button", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_theme_css_button"]), "CSS", 1024)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:286
  - STORAGE call to update_option("cnpl_theme_css_links", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_theme_css_links"]), "CSS", 1024)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:287
  - STORAGE call to update_option("cnpl_theme_css_text", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_theme_css_text"]), "CSS", 1024)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:288
  - STORAGE call to update_option("cnpl_settings_time", sanitize_text_field($_POST["cnpl_settings_time"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:289
  - STORAGE call to update_option("cnpl_on_off", sanitize_text_field($_POST["cnpl_on_off"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:290
  - STORAGE call to update_option("cnpl_remember_border", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_remember_border"]), "CSS", 1024)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:291
  - STORAGE call to update_option("cnpl_remember_corners", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_remember_corners"]), "CSS", 1024)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:292
  - STORAGE call to update_option("cnpl_remember_button", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_remember_button"]), "CSS", 1024)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:296
  - STORAGE call to update_option("cnpl_js", zp20_cnpl_validate(sanitize_textarea_field(esc_html($_POST["cnpl_js"])), "JS", 2048)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:297
  - STORAGE call to update_option("cnpl_css", zp20_cnpl_validate(sanitize_textarea_field(esc_html($_POST["cnpl_css"])), "CSS", 5120)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:300
  - STORAGE call to update_option("cnpl_html", zp20_cnpl_validate(str_replace("{{jasc}}", "javascript:", sanitize_textarea_field(esc_html($_POST["cnpl_html"]))), "HTML", 10240)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cookie-notify.php:604
  - STORAGE call to update_option("cnpl_form_hash", $hash) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option 

cookie-notify.php:133
  - DELETION call to delete_option("my_plugin_do_activation_redirect") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:147
  - DELETION call to delete_option("cnpl_last_active_panel") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:148
  - DELETION call to delete_option("cnpl_position") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:149
  - DELETION call to delete_option("cnpl_text_panel_opened") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:151
  - DELETION call to delete_option("cnpl_content_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:152
  - DELETION call to delete_option("cnpl_content_link_regulation_br") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:153
  - DELETION call to delete_option("cnpl_content_link_regulation_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:154
  - DELETION call to delete_option("cnpl_content_link_regulation_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:155
  - DELETION call to delete_option("cnpl_content_link_howto_br") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:156
  - DELETION call to delete_option("cnpl_content_link_howto_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:157
  - DELETION call to delete_option("cnpl_content_link_howto_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:158
  - DELETION call to delete_option("cnpl_content_button_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:161
  - DELETION call to delete_option("cnpl_theme_css_box_outer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:162
  - DELETION call to delete_option("cnpl_theme_css_box_inner") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:163
  - DELETION call to delete_option("cnpl_theme_css_button") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:164
  - DELETION call to delete_option("cnpl_theme_css_links") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:165
  - DELETION call to delete_option("cnpl_theme_css_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:167
  - DELETION call to delete_option("cnpl_settings_time") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:168
  - DELETION call to delete_option("cnpl_on_off") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:170
  - DELETION call to delete_option("cnpl_remember_border") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:171
  - DELETION call to delete_option("cnpl_remember_corners") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:172
  - DELETION call to delete_option("cnpl_remember_button") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:174
  - DELETION call to delete_option("cnpl_html") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:175
  - DELETION call to delete_option("cnpl_js") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:176
  - DELETION call to delete_option("cnpl_css") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
cookie-notify.php:177
  - DELETION call to delete_option("cnpl_form_hash") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

By data type:
none
	PHPIncludedDetector.(unknown) - set()
option
	WordPressStorageDetector.add_option("cnpl_content_link_regulation_br", "1") - {'option'}
	WordPressStorageDetector.delete_option("cnpl_theme_css_links") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_content_link_howto_br") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_last_active_panel") - {'option'}
	WordPressStorageDetector.add_option("cnpl_html", "") - {'option'}
	WordPressStorageDetector.add_option("cnpl_content_link_howto_url", get_bloginfo("language") == "pl"get_bloginfo("language") == "pl-PL""http://jakwylaczyccookie.pl/jak-wylaczyc-pliki-cookies/""http://cookienotify.com/how-to-disable-cookies.html") - {'option'}
	WordPressStorageDetector.add_option("cnpl_on_off", "0") - {'option'}
	WordPressStorageDetector.delete_option("cnpl_css") - {'option'}
	WordPressStorageDetector.update_option("cnpl_remember_button", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_remember_button"]), "CSS", 1024)) - {'option'}
	WordPressStorageDetector.add_option("cnpl_remember_button", "position: relative; background: rgb(255, 152, 0); color: rgb(255, 255, 255); padding: 5px 15px; text-decoration: none; font-size: 12px; font-weight: normal; border: 0px solid rgb(255, 243, 224); border-radius: 0px;") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_content_link_regulation_url") - {'option'}
	WordPressStorageDetector.add_option("cnpl_theme_css_button", "position: relative; background: rgb(139, 195, 74); color: rgb(255, 255, 255); padding: 5px 15px; text-decoration: none; font-size: 12px; font-weight: normal; border: 0px solid rgb(245, 245, 245); border-radius: 0px;") - {'option'}
	WordPressStorageDetector.delete_option("cnpl_form_hash") - {'option'}
	WordPressStorageDetector.update_option("cnpl_js", zp20_cnpl_validate(sanitize_textarea_field(esc_html($_POST["cnpl_js"])), "JS", 2048)) - {'option'}
	WordPressStorageDetector.update_option("cnpl_form_hash", $hash) - {'option'}
	DeletionDetector.delete_option("cnpl_js") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_content_link_howto_url") - {'option'}
	WordPressStorageDetector.add_option("cnpl_js", "") - {'option'}
	WordPressStorageDetector.update_option("cnpl_css", zp20_cnpl_validate(sanitize_textarea_field(esc_html($_POST["cnpl_css"])), "CSS", 5120)) - {'option'}
	WordPressStorageDetector.add_option("cnpl_remember_corners", "border-radius: 15px;") - {'option'}
	WordPressStorageDetector.add_option("cnpl_css", "") - {'option'}
	WordPressStorageDetector.add_option("cnpl_content_link_regulation_text", $link_regulation_random[rand(0, count($link_regulation_random) - 1)]) - {'option'}
	DeletionDetector.delete_option("cnpl_theme_css_button") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_html") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_last_active_panel") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_last_active_panel") - {'option'}
	DeletionDetector.delete_option("cnpl_theme_css_text") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_content_button_text") - {'option'}
	DeletionDetector.delete_option("cnpl_content_link_howto_br") - {'option'}
	WordPressStorageDetector.update_option("cnpl_html", zp20_cnpl_validate(str_replace("{{jasc}}", "javascript:", sanitize_textarea_field(esc_html($_POST["cnpl_html"]))), "HTML", 10240)) - {'option'}
	WordPressStorageDetector.delete_option("cnpl_js") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_content_link_regulation_text") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_content_link_regulation_br") - {'option'}
	DeletionDetector.delete_option("cnpl_content_link_regulation_text") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_content_link_howto_url") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_content_button_text") - {'option'}
	DeletionDetector.delete_option("cnpl_position") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_on_off") - {'option'}
	WordPressStorageDetector.update_option("cnpl_content_text", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_content_text"]), "HTML", 512)) - {'option'}
	WordPressStorageDetector.delete_option("cnpl_last_active_panel") - {'option'}
	DeletionDetector.delete_option("my_plugin_do_activation_redirect") - {'option'}
	WordPressStorageDetector.update_option("cnpl_theme_css_text", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_theme_css_text"]), "CSS", 1024)) - {'option'}
	WordPressStorageDetector.delete_option("cnpl_position") - {'option'}
	DeletionDetector.delete_option("cnpl_text_panel_opened") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_last_active_panel") - {'option'}
	WordPressStorageDetector.delete_option("cnpl_theme_css_button") - {'option'}
	DeletionDetector.delete_option("cnpl_remember_corners") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_content_link_regulation_url") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_js") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_content_link_howto_br") - {'option'}
	DeletionDetector.delete_option("cnpl_content_text") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_content_link_howto_text") - {'option'}
	WordPressStorageDetector.add_option("cnpl_theme_css_box_outer", "display: block; z-index: 99999; min-height: 35px; width: 300px; position: fixed; background: rgb(245, 245, 245); border-width: 5px 1px 1px; border-style: solid; border-image: initial; border-color: rgb(139, 195, 74); text-align: center; color: rgb(119, 119, 119); border-radius: 15px; box-shadow: black 0px 8px 6px -6px; top: 10px; right: 10px;") - {'option'}
	WordPressStorageDetector.delete_option("cnpl_text_panel_opened") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_css") - {'option'}
	WordPressStorageDetector.delete_option("cnpl_content_text") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_theme_css_button") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_content_button_text") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_theme_css_box_outer") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_last_active_panel") - {'option'}
	WordPressStorageDetector.delete_option("cnpl_content_link_regulation_br") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_last_active_panel") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_last_active_panel") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_last_active_panel") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_text_panel_opened") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_remember_border") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_last_active_panel") - {'option'}
	WordPressStorageDetector.update_option("cnpl_remember_corners", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_remember_corners"]), "CSS", 1024)) - {'option'}
	WordPressStorageDetector.delete_option("cnpl_content_link_regulation_text") - {'option'}
	DeletionDetector.delete_option("cnpl_last_active_panel") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_theme_css_links") - {'option'}
	WordPressStorageDetector.delete_option("cnpl_content_link_regulation_url") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_theme_css_links") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_content_link_regulation_text") - {'option'}
	WordPressStorageDetector.delete_option("cnpl_content_link_howto_br") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_last_active_panel") - {'option'}
	WordPressStorageDetector.delete_option("cnpl_content_link_howto_text") - {'option'}
	WordPressStorageDetector.add_option("cnpl_settings_time", "7") - {'option'}
	WordPressRetrievalDetector.get_option("my_plugin_do_activation_redirect", false) - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_remember_corners") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_content_button_text") - {'option'}
	DeletionDetector.delete_option("cnpl_content_link_regulation_br") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_last_active_panel") - {'option'}
	DeletionDetector.delete_option("cnpl_form_hash") - {'option'}
	WordPressStorageDetector.add_option("cnpl_content_button_text", __("I ACCEPT", "cookie-notify")) - {'option'}
	WordPressStorageDetector.add_option("cnpl_remember_border", "border-width: 5px 1px 1px; border-style: solid; border-image: initial; border-color: rgb(139, 195, 74);") - {'option'}
	WordPressStorageDetector.add_option("my_plugin_do_activation_redirect", true) - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_on_off") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_text_panel_opened") - {'option'}
	WordPressStorageDetector.add_option("cnpl_content_link_regulation_url", get_bloginfo("language") == "pl"get_bloginfo("language") == "pl-PL""http://jakwylaczyccookie.pl/generator-polityki-cookie/""http://cookienotify.com/private-policy-generator.html") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_content_text") - {'option'}
	WordPressStorageDetector.add_option("cnpl_theme_css_text", "color: rgb(0, 0, 0);") - {'option'}
	WordPressStorageDetector.delete_option("cnpl_content_link_howto_url") - {'option'}
	WordPressStorageDetector.add_option("cnpl_content_text", $content_random[rand(0, count($content_random) - 1)]) - {'option'}
	WordPressStorageDetector.add_option("cnpl_theme_css_box_inner", "padding:10px; margin-left:15px; margin-right:15px; font-size:14px; font-weight:normal;") - {'option'}
	WordPressStorageDetector.delete_option("cnpl_content_button_text") - {'option'}
	WordPressStorageDetector.delete_option("cnpl_theme_css_box_outer") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_form_hash") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_content_link_regulation_br") - {'option'}
	WordPressStorageDetector.delete_option("cnpl_theme_css_box_inner") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_on_off") - {'option'}
	DeletionDetector.delete_option("cnpl_theme_css_box_inner") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_theme_css_text") - {'option'}
	DeletionDetector.delete_option("cnpl_html") - {'option'}
	DeletionDetector.delete_option("cnpl_theme_css_box_outer") - {'option'}
	DeletionDetector.delete_option("cnpl_content_button_text") - {'option'}
	WordPressStorageDetector.update_option("cnpl_theme_css_button", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_theme_css_button"]), "CSS", 1024)) - {'option'}
	WordPressStorageDetector.delete_option("cnpl_on_off") - {'option'}
	WordPressStorageDetector.delete_option("cnpl_html") - {'option'}
	DeletionDetector.delete_option("cnpl_remember_button") - {'option'}
	WordPressStorageDetector.update_option("cnpl_content_link_howto_url", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_content_link_howto_url"]), "URL", 256)) - {'option'}
	WordPressStorageDetector.add_option("cnpl_last_active_panel", "cnpl_position_panel") - {'option'}
	WordPressStorageDetector.add_option("cnpl_form_hash") - {'option'}
	DeletionDetector.delete_option("cnpl_theme_css_links") - {'option'}
	WordPressStorageDetector.update_option("cnpl_theme_css_links", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_theme_css_links"]), "CSS", 1024)) - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_last_active_panel") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_content_link_howto_text") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_theme_css_links") - {'option'}
	WordPressStorageDetector.update_option("cnpl_settings_time", sanitize_text_field($_POST["cnpl_settings_time"])) - {'option'}
	WordPressStorageDetector.add_option("cnpl_content_link_howto_br", "1") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_settings_time") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_on_off") - {'option'}
	DeletionDetector.delete_option("cnpl_settings_time") - {'option'}
	WordPressStorageDetector.update_option("cnpl_theme_css_box_outer", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_theme_css_box_outer"]), "CSS", 1024)) - {'option'}
	WordPressStorageDetector.add_option("cnpl_content_link_howto_text", $link_howto_random[rand(0, count($link_howto_random) - 1)]) - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_last_active_panel") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_settings_time") - {'option'}
	WordPressStorageDetector.update_option("cnpl_content_link_howto_br", sanitize_text_field($_POST["cnpl_content_link_howto_br"])) - {'option'}
	WordPressStorageDetector.update_option("cnpl_content_link_regulation_br", sanitize_text_field($_POST["cnpl_content_link_regulation_br"])) - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_position") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_last_active_panel") - {'option'}
	DeletionDetector.delete_option("cnpl_on_off") - {'option'}
	WordPressStorageDetector.update_option("cnpl_content_link_regulation_url", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_content_link_regulation_url"]), "URL", 256)) - {'option'}
	WordPressStorageDetector.update_option("cnpl_content_link_regulation_text", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_content_link_regulation_text"]), "HTML", 256)) - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_on_off") - {'option'}
	DeletionDetector.delete_option("cnpl_content_link_regulation_url") - {'option'}
	WordPressStorageDetector.update_option("cnpl_last_active_panel", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_last_active_panel"]), "a-z_", 25)) - {'option'}
	WordPressStorageDetector.update_option("cnpl_text_panel_opened", sanitize_text_field($_POST["cnpl_text_panel_opened"])) - {'option'}
	WordPressStorageDetector.update_option("cnpl_position", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_position"]), "a-z", 12)) - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_on_off") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_position") - {'option'}
	DeletionDetector.delete_option("cnpl_remember_border") - {'option'}
	WordPressStorageDetector.delete_option("cnpl_theme_css_text") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_on_off") - {'option'}
	DeletionDetector.delete_option("cnpl_css") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_last_active_panel") - {'option'}
	WordPressStorageDetector.update_option("cnpl_content_button_text", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_content_button_text"]), "HTML", 256)) - {'option'}
	WordPressStorageDetector.update_option("cnpl_on_off", sanitize_text_field($_POST["cnpl_on_off"])) - {'option'}
	WordPressStorageDetector.add_option("cnpl_theme_css_links", "color: rgb(139, 195, 74);") - {'option'}
	WordPressStorageDetector.delete_option("cnpl_settings_time") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_theme_css_box_inner") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_content_text") - {'option'}
	DeletionDetector.delete_option("cnpl_content_link_howto_url") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_content_text") - {'option'}
	WordPressStorageDetector.update_option("cnpl_theme_css_box_inner", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_theme_css_box_inner"]), "CSS", 1024)) - {'option'}
	WordPressStorageDetector.add_option("cnpl_position", "topright") - {'option'}
	WordPressStorageDetector.delete_option("cnpl_remember_button") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_theme_css_box_outer") - {'option'}
	WordPressStorageDetector.add_option("cnpl_text_panel_opened", "0") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_on_off") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_theme_css_box_inner") - {'option'}
	WordPressStorageDetector.update_option("cnpl_remember_border", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_remember_border"]), "CSS", 1024)) - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_theme_css_button") - {'option'}
	WordPressStorageDetector.delete_option("my_plugin_do_activation_redirect") - {'option'}
	WordPressStorageDetector.delete_option("cnpl_remember_border") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_last_active_panel") - {'option'}
	DeletionDetector.delete_option("cnpl_content_link_howto_text") - {'option'}
	WordPressStorageDetector.delete_option("cnpl_remember_corners") - {'option'}
	WordPressRetrievalDetector.get_option("cnpl_theme_css_text") - {'option'}
	WordPressStorageDetector.update_option("cnpl_content_link_howto_text", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_content_link_howto_text"]), "HTML", 256)) - {'option'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:50.168723.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 5159 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:01.143396.

1000 STORE_REACHES edges created
2000 STORE_REACHES edges created
3000 STORE_REACHES edges created
4000 STORE_REACHES edges created
5000 STORE_REACHES edges created
5159 STORE_REACHES edges created
5159 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
In total, tainted 0 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 1 nodes as ENCRYPTED
In total, tainted 1 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:00.157981.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:01:11.152214!
DELETION call to delete_option("my_plugin_do_activation_redirect") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("cnpl_last_active_panel") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("cnpl_position") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("cnpl_text_panel_opened") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("cnpl_content_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("cnpl_content_link_regulation_br") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("cnpl_content_link_regulation_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("cnpl_content_link_regulation_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("cnpl_content_link_howto_br") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("cnpl_content_link_howto_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("cnpl_content_link_howto_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("cnpl_content_button_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("cnpl_theme_css_box_outer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("cnpl_theme_css_box_inner") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("cnpl_theme_css_button") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("cnpl_theme_css_links") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("cnpl_theme_css_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("cnpl_settings_time") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("cnpl_on_off") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("cnpl_remember_border") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("cnpl_remember_corners") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("cnpl_remember_button") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("cnpl_html") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("cnpl_js") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("cnpl_css") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("cnpl_form_hash") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
MD5 called with parameters [time]. Ignore if [time] does not contain personal information.,md5,None
RETRIEVAL call to get_option("cnpl_last_active_panel") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_content_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_content_button_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_content_link_regulation_br") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_content_link_regulation_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_content_link_regulation_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_content_link_howto_br") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_content_link_howto_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_content_link_howto_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_last_active_panel") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_settings_time") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_on_off") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_on_off") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_last_active_panel") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_last_active_panel") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_last_active_panel") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_last_active_panel") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_last_active_panel") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_on_off") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_on_off") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_theme_css_box_outer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_theme_css_box_inner") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_theme_css_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_theme_css_links") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_theme_css_links") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_content_button_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_theme_css_button") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("my_plugin_do_activation_redirect", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_css") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_content_button_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_content_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_position") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_html") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_js") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_on_off") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_form_hash") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_last_active_panel") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_text_panel_opened") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_remember_border") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_remember_corners") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_position") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_content_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_content_link_regulation_br") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_content_link_regulation_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_content_link_regulation_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_content_link_howto_br") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_content_link_howto_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_content_link_howto_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_content_button_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_theme_css_box_outer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_theme_css_box_inner") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_theme_css_button") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_theme_css_links") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_theme_css_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_settings_time") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_on_off") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_text_panel_opened") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_last_active_panel") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_last_active_panel") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_last_active_panel") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_last_active_panel") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_last_active_panel") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_on_off") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_on_off") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_last_active_panel") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_last_active_panel") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cnpl_last_active_panel") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
STORAGE call to add_option("cnpl_content_button_text", __("I ACCEPT", "cookie-notify")) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("cnpl_theme_css_box_inner", "padding:10px; margin-left:15px; margin-right:15px; font-size:14px; font-weight:normal;") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("cnpl_theme_css_box_outer", "display: block; z-index: 99999; min-height: 35px; width: 300px; position: fixed; background: rgb(245, 245, 245); border-width: 5px 1px 1px; border-style: solid; border-image: initial; border-color: rgb(139, 195, 74); text-align: center; color: rgb(119, 119, 119); border-radius: 15px; box-shadow: black 0px 8px 6px -6px; top: 10px; right: 10px;") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("cnpl_theme_css_button", "position: relative; background: rgb(139, 195, 74); color: rgb(255, 255, 255); padding: 5px 15px; text-decoration: none; font-size: 12px; font-weight: normal; border: 0px solid rgb(245, 245, 245); border-radius: 0px;") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("cnpl_theme_css_links", "color: rgb(139, 195, 74);") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("cnpl_theme_css_text", "color: rgb(0, 0, 0);") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("cnpl_settings_time", "7") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("cnpl_on_off", "0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("cnpl_remember_border", "border-width: 5px 1px 1px; border-style: solid; border-image: initial; border-color: rgb(139, 195, 74);") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("cnpl_remember_corners", "border-radius: 15px;") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("cnpl_remember_button", "position: relative; background: rgb(255, 152, 0); color: rgb(255, 255, 255); padding: 5px 15px; text-decoration: none; font-size: 12px; font-weight: normal; border: 0px solid rgb(255, 243, 224); border-radius: 0px;") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("cnpl_html", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("cnpl_js", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("cnpl_css", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("my_plugin_do_activation_redirect", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("cnpl_form_hash") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("my_plugin_do_activation_redirect") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("cnpl_last_active_panel") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("cnpl_position") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("cnpl_text_panel_opened") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("cnpl_content_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("cnpl_content_link_regulation_br") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("cnpl_content_link_regulation_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("cnpl_content_link_regulation_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("cnpl_content_link_howto_br") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("cnpl_content_link_howto_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("cnpl_content_link_howto_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("cnpl_content_button_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("cnpl_theme_css_box_outer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("cnpl_theme_css_box_inner") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("cnpl_theme_css_button") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("cnpl_theme_css_links") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("cnpl_theme_css_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("cnpl_settings_time") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("cnpl_on_off") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("cnpl_remember_border") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("cnpl_remember_corners") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("cnpl_remember_button") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("cnpl_html") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("cnpl_js") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("cnpl_css") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("cnpl_form_hash") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("cnpl_last_active_panel", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_last_active_panel"]), "a-z_", 25)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cnpl_text_panel_opened", sanitize_text_field($_POST["cnpl_text_panel_opened"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cnpl_position", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_position"]), "a-z", 12)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cnpl_content_text", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_content_text"]), "HTML", 512)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cnpl_content_link_regulation_br", sanitize_text_field($_POST["cnpl_content_link_regulation_br"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cnpl_content_link_regulation_text", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_content_link_regulation_text"]), "HTML", 256)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cnpl_content_link_regulation_url", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_content_link_regulation_url"]), "URL", 256)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cnpl_content_link_howto_br", sanitize_text_field($_POST["cnpl_content_link_howto_br"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cnpl_content_link_howto_text", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_content_link_howto_text"]), "HTML", 256)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cnpl_content_link_howto_url", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_content_link_howto_url"]), "URL", 256)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cnpl_content_button_text", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_content_button_text"]), "HTML", 256)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cnpl_theme_css_box_outer", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_theme_css_box_outer"]), "CSS", 1024)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cnpl_theme_css_box_inner", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_theme_css_box_inner"]), "CSS", 1024)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cnpl_theme_css_button", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_theme_css_button"]), "CSS", 1024)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cnpl_theme_css_links", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_theme_css_links"]), "CSS", 1024)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cnpl_theme_css_text", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_theme_css_text"]), "CSS", 1024)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cnpl_settings_time", sanitize_text_field($_POST["cnpl_settings_time"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cnpl_on_off", sanitize_text_field($_POST["cnpl_on_off"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cnpl_remember_border", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_remember_border"]), "CSS", 1024)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cnpl_remember_corners", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_remember_corners"]), "CSS", 1024)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cnpl_remember_button", zp20_cnpl_validate(sanitize_text_field($_POST["cnpl_remember_button"]), "CSS", 1024)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cnpl_js", zp20_cnpl_validate(sanitize_textarea_field(esc_html($_POST["cnpl_js"])), "JS", 2048)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cnpl_css", zp20_cnpl_validate(sanitize_textarea_field(esc_html($_POST["cnpl_css"])), "CSS", 5120)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cnpl_html", zp20_cnpl_validate(str_replace("{{jasc}}", "javascript:", sanitize_textarea_field(esc_html($_POST["cnpl_html"]))), "HTML", 10240)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cnpl_form_hash", $hash) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("cnpl_last_active_panel", "cnpl_position_panel") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("cnpl_text_panel_opened", "0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("cnpl_position", "topright") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("cnpl_content_text", $content_random[rand(0, count($content_random) - 1)]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("cnpl_content_link_regulation_br", "1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("cnpl_content_link_regulation_text", $link_regulation_random[rand(0, count($link_regulation_random) - 1)]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("cnpl_content_link_regulation_url", get_bloginfo("language") == "pl"get_bloginfo("language") == "pl-PL""http://jakwylaczyccookie.pl/generator-polityki-cookie/""http://cookienotify.com/private-policy-generator.html") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("cnpl_content_link_howto_br", "1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("cnpl_content_link_howto_text", $link_howto_random[rand(0, count($link_howto_random) - 1)]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("cnpl_content_link_howto_url", get_bloginfo("language") == "pl"get_bloginfo("language") == "pl-PL""http://jakwylaczyccookie.pl/jak-wylaczyc-pliki-cookies/""http://cookienotify.com/how-to-disable-cookies.html") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found no personal data in the plugin. No analysis needed. 

[main] Complaint? True 

No findings
