Timeout in resolving values
Timeout in running neo4j query
Running Main.py on jump2me-para-wordpress

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.811459.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.072480.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 0 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.296581.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 2 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.800012.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 781 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:01.267953.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 0 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.717120.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.164745.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 248 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:04.984256.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 3729
Added 2698 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 4591
Added 862 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.448281.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/jump2me-para-wordpress/plugin.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/jump2me-para-wordpress/uninstall.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/jump2me-para-wordpress/inc/core.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/jump2me-para-wordpress/inc/options.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.481930.

2 REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
3727 PHP_REACHES edges created
862 PHP_REACHES edges created
4591 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 1303 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.627216.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:01.250424.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 35 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:02.388800.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 54 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.193332.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.162699.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.577550.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.014869.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.038228.

89 PHP_REACHES edges created
89 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 35 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.143835.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
1 SQL operations to process.
SELECT user_id FROM $wpdb WHERE meta_key = '$meta_key' AND meta_value = '%s'
SELECT user_id FROM $wpdb WHERE meta_key = '$meta_key' AND meta_value = 'json_decode($response)'
SELECT user_id FROM $wpdb WHERE meta_key = '$meta_key' AND meta_value = 'json_decode($response)'
SQL command (SELECT user_id FROM $wpdb WHERE meta_key = '$meta_key' AND meta_value = 'json_decode($response)') cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [1346]
Added 0 SQL nodes. 0 out of 1 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:02.349817.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'<div id="message" class="error"><p>$result->get_error_message()</p></div>'' cannot be parsed correct.
HTML code '$'    {
'' cannot be parsed correct.
HTML code '$'        jump2me_updateComment(jump2me_readCookie("jump2me_comment"));
'' cannot be parsed correct.
HTML code '$'    }
'' cannot be parsed correct.
HTML code '$'}};
'' cannot be parsed correct.
HTML code '$'//-->
'' cannot be parsed correct.
HTML code '$'</script>
'' cannot be parsed correct.
HTML code '$'<br/>htmlspecialchars_decode($wp_jump2me["login_text"])'' cannot be parsed correct.
HTML code '$'htmlspecialchars_decode($wp_jump2me["template"])'' cannot be parsed correct.
HTML code '$'<script type="text/javascript">
    <!--
function urlencode(str) {
	return encodeURIComponent(str).replace(/\+/g,"%2B")
}

function urldecode(str) {
str = str.replace("+", " ");
str = unescape(str);
return str;
}

    function jump2me_bookmark(url){
       var reload = false;
       if(url == location.href)       
       {
            reload = true;
       }
       if(url.length == 0)
       {
            url=location.href;
            reload = true;
       }
       if(url.indexOf("wp-login.php") > 0)
       {
           url = "$wp_jump2me_redirect";
           location.href = url;
       }
       else
       {
           var temp = url.split("#");
           url = temp[0];
           url += "#jump2me_button";
           location.href = url;
           if(reload)
           {
              location.reload();
           }
       }
    }
    
    function jump2me_createButton(obj)
    {
        var url = location.href;
        var button = document.createElement("button");
        button.setAttribute("class","btn");
        button.setAttribute("type","button");
        button.setAttribute("tabindex","999");
        button.onclick = function(){
            if(document.getElementById("comment"))
            {
                if(document.getElementById("comment").value.length > 0)
                {
                    var comment = document.getElementById("comment").value;
                    comment = comment.replace(/\r\n/g,"\n").replace(/\n/g,"<br/>");
                    jump2me_createCookie("comment",comment,1);
                    var cookie = jump2me_readCookie("comment");
                    if(cookie != comment)
                    {
                        jump2me_eraseCookie("jump2me_comment");
                        return false;
                    }
                }
            }
            window.open("http://wp_jump2me_get_endpoint()/jump2/login/"+urlencode(url), "jump2meWindow","width=800,height=400,left=150,top=100,scrollbar=no,resize=no");
            return false;
        };
        button.innerHTML = "<img src=\'$wp_jump2me_btn_choice\' alt=\'Login\' style=\'margin:0;\' />";
        if(typeof jQuery == "undefined")
        {
            obj.appendChild(button);
            obj.setAttribute("loaded","true");
        }
        else
        {
	        obj.append(button);
	        obj.attr("loaded","true");
	    }
	    '' cannot be parsed correct.
HTML code '$'if(document.getElementById($wp_jump2me_before_login"))
                {
                    var before = document.getElementById("$wp_jump2me_before_login");
                    before.parentNode.insertBefore(document.getElementById("jump2me_connect"),before);
                }
                '' cannot be parsed correct.
HTML code '$'<script type="text/javascript">
'' cannot be parsed correct.
HTML code '$'<!--
'' cannot be parsed correct.
HTML code '$'if(window.opener){if(window.opener.document.getElementById("jump2me_connect") || window.opener.getElementsByClass("jump2me_connect")){window.opener.jump2me_bookmark("");window.close();}
'' cannot be parsed correct.
HTML code '$'//-->
'' cannot be parsed correct.
HTML code '$'<link rel="stylesheet" href="wp_jump2me_pluginurl()res/jump2me.css" type="text/css" media="all" />'' cannot be parsed correct.
HTML code '$'<script type="text/javascript">
'' cannot be parsed correct.
HTML code '$'<!--
'' cannot be parsed correct.
HTML code '$'if(window.opener){if(window.opener.document.getElementById("#jump2me_connect") || window.opener.getElementsByClass("jump2me_connect")){window.opener.jump2me_bookmark("");window.close();}}
'' cannot be parsed correct.
HTML code '$'//-->
'' cannot be parsed correct.
HTML code '$'<p>Atualize seu endereÃ§o de e-mail: <a href="./wp-admin/profile.php" name="jump2me-button">$user_email</a></p>'' cannot be parsed correct.
HTML code '$'<script type="text/javascript">
'' cannot be parsed correct.
HTML code '$'<!--
'' cannot be parsed correct.
HTML code '$'window.onload=function(){if(!window.opener && document.getElementById("comment")){
'' cannot be parsed correct.
HTML code '$'if(window.opener){if(window.opener.document.getElementById("#jump2me_connect") || window.opener.getElementsByClass("jump2me_connect")){window.opener.jump2me_bookmark("");window.close();}}
'' cannot be parsed correct.
HTML code '$'    if(document.getElementById("comment").value.length == 0)
'' cannot be parsed correct.
HTML code '$'apply_filters("jump2me_notice", $notice)'' cannot be parsed correct.
HTML code '$'$type'' cannot be parsed correct.
HTML code '$'get_option("jump2me")_twitter_message'' cannot be parsed correct.
HTML code '$'htmlspecialchars($jump2me["twitter_style"])'' cannot be parsed correct.
HTML code '$'htmlspecialchars($jump2me["twitter_via"])'' cannot be parsed correct.
HTML code '$'<div class="jump2me_connect"><p><strong>UsuÃ¡rios do Twitter</strong><br />Clique no botÃ£o abaixo para efetuar o login usando sua conta do Twitter.</p></div><br/><br/>get_option("jump2me")_login_text'' cannot be parsed correct.
HTML code '$'wp-admin/index.phpget_option("jump2me")_redirect'' cannot be parsed correct.
HTML code '$'$btn_image'' cannot be parsed correct.
HTML code '$'$btn_image'' cannot be parsed correct.
HTML code '$'get_option("jump2me")_before_comment'' cannot be parsed correct.
HTML code '$'get_option("jump2me")_before_login'' cannot be parsed correct.
HTML code '$'<div class="jump2me_connect"><p><strong>UsuÃ¡rios do Twitter</strong><br />Clique no botÃ£o abaixo para efetuar o login usando sua conta do Twitter.</p></div>get_option("jump2me")_template'' cannot be parsed correct.
HTML code '$'Veja minha opiniÃ£o sobre $T $Uget_option("jump2me")_tweet_this_text'' cannot be parsed correct.
HTML code '$'<a href=\'wp_nonce_url($reset, "reset-jump2me")\' id=\'reset-jump2me\' class=\'submitdelete\'>Limpar</a> todas as configuraÃ§Ãµes'' cannot be parsed correct.
HTML code '$'wp_jump2me_pluginurl()'' cannot be parsed correct.
HTML code '$'<p>Esse Ã© o link curto para esse(a) $type: <strong><a href=\'wp_jump2me_geturl($id)\'>wp_jump2me_geturl($id)</a></strong></p>'' cannot be parsed correct.
HTML code '$'<p>Acesse as estatÃ­sticas de acesso aqui: <strong><a href=\'wp_jump2me_geturl($id)+\'>wp_jump2me_geturl($id)+</a></strong></p>'' cannot be parsed correct.
HTML code '$'oknotok'' cannot be parsed correct.
HTML code '$'oknotok'' cannot be parsed correct.
HTML code '$'oknotok'' cannot be parsed correct.
HTML code '$'oknotok'' cannot be parsed correct.
HTML code '$'oknotok'' cannot be parsed correct.
HTML code '$'jQuery(\'#h3_jump2me\').click();'' cannot be parsed correct.
HTML code '$'wp_jump2me_pluginurl()'' cannot be parsed correct.
HTML code '$'trim($jump2me["api_key"])'' cannot be parsed correct.
HTML code '$'$object'' cannot be parsed correct.
HTML code '$'$type'' cannot be parsed correct.
HTML code '$'$type'' cannot be parsed correct.
HTML code '$'$type'' cannot be parsed correct.
HTML code '$'$type'' cannot be parsed correct.
HTML code '$'get_option("jump2me")'' cannot be parsed correct.
HTML code '$'$type'' cannot be parsed correct.
HTML code '$'$type'' cannot be parsed correct.
HTML code '$'$type'' cannot be parsed correct.
HTML code '$'BorÃ³'' cannot be parsed correct.
HTML code '$'<script type="text/javascript">
    <!--
    //No jQuery
    if(typeof jQuery == "undefined")
    {
        window.onload = function(){
            if(document.getElementById("jump2me_connect"))
            {
                if(!document.getElementById("jump2me_connect").getAttribute("loaded"))
                {
                    jump2me_createButton(document.getElementById("jump2me_connect"));
                }
            }
            var elems = getElementsByClass("jump2me_connect");
            for(var ndx=0;ndx<elems.length;ndx++)
            {
                if(!elems[ndx].getAttribute("loaded"))
                {
                    jump2me_createButton(elems[ndx]);
                }
            }
        };
    }
    else
    {
        jQuery(document).ready(function(){
            jQuery("#jump2me_connect").each(function(i){
                if(!jQuery(this).attr("loaded"))
                {
                    jump2me_createButton(jQuery(this));
                }
            });
            jQuery(".jump2me_connect").each(function(i){
                if(!jQuery(this).attr("loaded"))
                {
                    jump2me_createButton(jQuery(this));
                }
            });
        });
    }
    //-->
    </script>'' cannot be parsed correct.
HTML code '$'<script type="text/javascript">
        <!--
            function jump2me_createCookie(name,value,days) {
	            if (days) {
		            var date = new Date();
		            date.setTime(date.getTime()+(days*24*60*60*1000));
		            var expires = "; expires="+date.toGMTString();
	            }
	            else var expires = "";
	            document.cookie = name+"="+value+expires+"; path=/";
            }
            function jump2me_readCookie(name) {
	            var nameEQ = name + "=";
	            var ca = document.cookie.split(\';\');
	            for(var i=0;i < ca.length;i++) {
		            var c = ca[i];
		            while (c.charAt(0)==\' \') c = c.substring(1,c.length);
		            if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);
	            }
	            return null;
            }
            function jump2me_eraseCookie(name) {
	            jump2me_createCookie(name,"",-1);
            }
            function jump2me_updateComment(comment) { 
                if(comment){
                    document.getElementById("comment").value = comment.replace(/<br\/>/g,"\n");
                    jump2me_eraseCookie("comment");
                    
                }
            }
            function getElementsByClass( searchClass, domNode, tagName) { 
	            if (domNode == null) domNode = document;
	            if (tagName == null) tagName = "*";
	            var el = new Array();
	            var tags = domNode.getElementsByTagName(tagName);
	            var tcl = " "+searchClass+" ";
	            for(i=0,j=0; i<tags.length; i++) { 
		            var test = " " + tags[i].className + " ";
		            if (test.indexOf(tcl) != -1) 
			            el[j++] = tags[i];
	            } 
	            return el;
            }         
            //-->
            </script>'' cannot be parsed correct.
HTML code '$'}
        //-->
        </script>'' cannot be parsed correct.
HTML code '$'</script>'' cannot be parsed correct.
HTML code '$'</script>'' cannot be parsed correct.
HTML code '$'<p class="jump2me-tweet-this"><input type="checkbox" id="tweet_this" name="tweet_this" style="width:auto" /> Publicar no Twitter [<a href="javascript:none" title="Publicar esse comentÃ¡rio no Twitter">?</a>]</p>'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'selected="selected"'' cannot be parsed correct.
HTML code '$'selected="selected"'' cannot be parsed correct.
HTML code '$'selected="selected"'' cannot be parsed correct.
HTML code '$'selected="selected"'' cannot be parsed correct.
HTML code '$'selected="selected"'' cannot be parsed correct.
HTML code '$'selected="selected"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'" alt="" /><br />
        	'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'" />
'' cannot be parsed correct.
HTML code '$'<p><b>Dica:</b> Se vocÃª adicionar o campo personalizado <i>jump2me_keyword</i> antes de publicar o post, seu conteÃºdo serÃ¡ usado como palavra-chave para criaÃ§Ã£o do link curto. Ã um forma bacana de tornar o texto do link mais amigÃ¡vel.</p>'' cannot be parsed correct.
HTML code '$'<p>O link curto para esse post anda nÃ£o foi criado.</p>'' cannot be parsed correct.
HTML code '$'<p><strong>Link curto</strong></p>'' cannot be parsed correct.
HTML code '$'<div id="jump2me-shorturl">'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'<p><strong>EstatÃ­sticas</strong></p>'' cannot be parsed correct.
HTML code '$'<div id="jump2me-stats">'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'		<tr valign="top">
		<th scope="row">Novo(a) <strong>'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:10.215651.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.047192.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 13 do_action/apply_filters calls and 29 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:01.340973.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbplusDetector
### Start running FrontBaseDetector
### Finish running DbaseDetector
### Start running HashDetector
### Finish running FileProDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running FirebirdInterBaseDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running MySQLDetector
### Start running MySQLiDetector
### Finish running MsqlDetector
### Start running Oci8Detector
### Finish running Oci8Detector
### Start running OpenSSLDetector
### Finish running MongoDbDetector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running ArrayElementDetector
### Start running PhpCurlDetector
### Finish running HashDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PasswordHashingDetector
### Start running PHPRetrievalDetector
### Finish running PhpCurlDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running OpenSSLDetector
### Start running PhpVarDetector
### Finish running PhpVarDetector
### Start running PostgreSQLDetector
### Finish running PHPStorageDetector
### Start running PropertyDetector
### Finish running PHPRetrievalDetector
### Start running Sqlite3Detector
### Finish running PHPIncludedDetector
### Start running SqliteDetector
### Finish running PostgreSQLDetector
### Start running SqlServerDetector
### Finish running SqliteDetector
### Start running SybaseDetector
### Finish running Sqlite3Detector
### Start running TokyoTyrantDetector
### Finish running SybaseDetector
### Start running UserInputDetector
### Finish running TokyoTyrantDetector
### Start running VariableDetector
### Finish running PropertyDetector
### Start running WordpressHashingFnDetector
### Finish running SqlServerDetector
### Start running WordPressRemoteDetector
### Finish running WordPressRemoteDetector
### Start running WordPressRetrievalDetector
### Finish running UserInputDetector
### Start running WordPressStorageDetector
### Finish running MySQLiDetector
### Start running WP_UserDetector
### Finish running maxdbDetector
### Start running GenericDatabaseUsageDetector
### Finish running WP_UserDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running WordpressHashingFnDetector
### Start running UninstallDetector
### Finish running GenericDatabaseUsageDetector
### Finish running VariableDetector
### Finish running DeletionDetector
### Finish running WordPressStorageDetector
### Finish running UninstallDetector
### Finish running WordPressRetrievalDetector
### Finished running detectors
inc/core.php:598
  - MD5 called with parameters [comment, comment_author_email]. Ignore if [comment, comment_author_email] does not contain personal information. 

inc/core.php:212
  - object property '$jump2me_user->username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/core.php:215
  - object property '$jump2me_user->username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/core.php:220
  - object property '$jump2me_user->username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/core.php:598
  - object property '$comment->comment_author_email' of personal types {'email'} is found.
  - Data types: email 

inc/core.php:220
  - variable '$email_default' of personal types {'email'} is found.
  - Data types: email
inc/core.php:227
  - variable '$email_default' of personal types {'email'} is found.
  - Data types: email
inc/core.php:241
  - variable '$email_default' of personal types {'email'} is found.
  - Data types: email
inc/core.php:244
  - variable '$email_default' of personal types {'email'} is found.
  - Data types: email
inc/core.php:584
  - variable '$id_or_email' of personal types {'email'} is found.
  - Data types: email
inc/core.php:587
  - variable '$id_or_email' of personal types {'email'} is found.
  - Data types: email
inc/core.php:588
  - variable '$id_or_email' of personal types {'email'} is found.
  - Data types: email
inc/core.php:588
  - variable '$id_or_email' of personal types {'email'} is found.
  - Data types: email
inc/core.php:591
  - variable '$id_or_email' of personal types {'email'} is found.
  - Data types: email
inc/core.php:593
  - variable '$id_or_email' of personal types {'email'} is found.
  - Data types: email
inc/core.php:594
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/core.php:596
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/core.php:629
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
inc/core.php:656
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
inc/core.php:678
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
inc/core.php:1031
  - variable '$email' of personal types {'email'} is found.
  - Data types: email 

inc/core.php:268
  - CRYPTOGRAPHY call to wp_update_user($userdata) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta 

inc/core.php:25
  - RETRIEVAL call to get_post_meta($post_id, "jump2me_shorturl", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/core.php:40
  - RETRIEVAL call to get_post_meta($post_id, "jump2me_keyword", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/core.php:75
  - RETRIEVAL call to get_post_meta($post_id, "jump2me_tweeted", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/core.php:134
  - RETRIEVAL call to get_post_meta($id, $match, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/core.php:141
  - RETRIEVAL call to get_post($id) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: wp_post, post, post_meta
inc/core.php:143
  - RETRIEVAL call to get_userdata($author_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/core.php:259
  - RETRIEVAL call to get_userdata($wpuid) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/core.php:289
  - RETRIEVAL call to wp_set_current_user($wpuid) alters data types {'user_meta'}. Passed arguments: 0: $id (int). Returns (WP_User).
  - Data types: user_meta
inc/core.php:296
  - RETRIEVAL call to get_option("jump2me") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/core.php:352
  - RETRIEVAL call to get_post($id) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: wp_post, post, post_meta
inc/core.php:407
  - RETRIEVAL call to get_post_meta($post->ID, "twitter_text", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/core.php:544
  - RETRIEVAL call to get_post_meta($post->ID, "twitter") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/core.php:591
  - RETRIEVAL call to get_usermeta($id_or_email, "jump2me_id") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (mixed).
  - Data types: user_meta
inc/core.php:593
  - RETRIEVAL call to get_userdata($id_or_email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/core.php:674
  - RETRIEVAL call to get_usermeta($user_ID, "jump2me_id") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (mixed).
  - Data types: user_meta
inc/core.php:961
  - RETRIEVAL call to get_comment($comment_ID). Passed arguments: 0: $comment (WP_Comment|string|int). Returns (WP_Comment|array|null).
inc/core.php:1047
  - RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/options.php:191
  - RETRIEVAL call to get_option("jump2me") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
plugin.php:50
  - RETRIEVAL call to get_post_meta($id, "jump2me_shorturl", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
plugin.php:55
  - RETRIEVAL call to get_post_meta($id, "jump2me_fetching", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
plugin.php:136
  - RETRIEVAL call to get_option("jump2me") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option 

inc/core.php:56
  - STORAGE call to update_post_meta($post_id, "jump2me_fetching", 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/core.php:61
  - STORAGE call to update_post_meta($post_id, "jump2me_shorturl", $shorturl) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/core.php:63
  - STORAGE call to update_post_meta($post_id, "jump2me_shorturl", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/core.php:65
  - STORAGE call to update_post_meta($post_id, "jump2me_fetching", 0) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/core.php:94
  - STORAGE call to update_post_meta($post_id, "jump2me_tweeted", 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/core.php:242
  - STORAGE call to wp_insert_user($userdata) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
inc/core.php:248
  - STORAGE call to update_user_meta($wpuid, "jump2me_id", $jump2me_user->id) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/core.php:268
  - STORAGE call to wp_update_user($userdata) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
inc/core.php:277
  - STORAGE call to update_user_meta($wpuid, "nickname", $user_login_n_suffix) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/options.php:154
  - STORAGE call to update_option("jump2me", $wp_jump2me) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/options.php:160
  - STORAGE call to delete_option("jump2me") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
plugin.php:53
  - STORAGE call to update_post_meta($post_id, "jump2me_shorturl", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
plugin.php:63
  - STORAGE call to update_post_meta($post_id, "jump2me_shorturl", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
uninstall.php:12
  - STORAGE call to delete_option("jump2me") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

inc/options.php:160
  - DELETION call to delete_option("jump2me") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:12
  - DELETION call to delete_option("jump2me") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

uninstall.php:12
  - Uninstall deletion call: DELETION call to delete_option("jump2me") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

By data type:
email
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
none
	PHPIncludedDetector.(unknown) - set()
	WordPressRetrievalDetector.get_comment($comment_ID) - set()
option
	WordPressStorageDetector.update_option("jump2me", $wp_jump2me) - {'option'}
	WordPressStorageDetector.delete_option("jump2me") - {'option'}
	DeletionDetector.delete_option("jump2me") - {'option'}
	UninstallDetector.delete_option("jump2me") - {'option'}
	WordPressRetrievalDetector.get_option("home") - {'option'}
	WordPressRetrievalDetector.get_option("jump2me") - {'option'}
	WordPressRetrievalDetector.get_option("jump2me") - {'option'}
	DeletionDetector.delete_option("jump2me") - {'option'}
	WordPressStorageDetector.delete_option("jump2me") - {'option'}
	WordPressRetrievalDetector.get_option("jump2me") - {'option'}
post
	WordPressRetrievalDetector.get_post($id) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'wp_post', 'post', 'post_meta'}
post_meta
	WordPressRetrievalDetector.get_post($id) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "twitter") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "jump2me_shorturl", "") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "jump2me_shorturl", "") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "jump2me_fetching", 0) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "jump2me_shorturl", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "jump2me_tweeted", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "jump2me_shorturl", $shorturl) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "jump2me_shorturl", "") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "jump2me_fetching", 1) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($id, "jump2me_shorturl", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "jump2me_tweeted", 1) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($id, "jump2me_fetching", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "twitter_text", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "jump2me_keyword", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($id, $match, true) - {'post_meta'}
user
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.wp_insert_user($userdata) - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_update_user($userdata) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($wpuid) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($author_id) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($id_or_email) - {'user', 'user_meta'}
	WordPressStorageDetector.wp_update_user($userdata) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
user_meta
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.wp_insert_user($userdata) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($wpuid, "nickname", $user_login_n_suffix) - {'user_meta'}
	WordpressHashingFnDetector.wp_update_user($userdata) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_usermeta($user_ID, "jump2me_id") - {'user_meta'}
	WordPressRetrievalDetector.wp_set_current_user($wpuid) - {'user_meta'}
	WordPressRetrievalDetector.get_userdata($wpuid) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($author_id) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($id_or_email) - {'user', 'user_meta'}
	WordPressStorageDetector.wp_update_user($userdata) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($wpuid, "jump2me_id", $jump2me_user->id) - {'user_meta'}
	WordPressRetrievalDetector.get_usermeta($id_or_email, "jump2me_id") - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
wp_post
	WordPressRetrievalDetector.get_post($id) - {'wp_post', 'post', 'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'wp_post', 'post', 'post_meta'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:12.529054.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 106 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.442290.

106 STORE_REACHES edges created
106 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 440 nodes as PERSONAL
In total, tainted 440 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 423 nodes as ENCRYPTED
In total, tainted 423 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:15.624619.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:01:08.482349!
DELETION call to delete_option("jump2me") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("jump2me") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
MD5 called with parameters [comment, comment_author_email]. Ignore if [comment, comment_author_email] does not contain personal information.,md5,None
object property '$jump2me_user->username' of personal types {'user', 'user_meta'} is found.,,None
object property '$jump2me_user->username' of personal types {'user', 'user_meta'} is found.,,None
object property '$jump2me_user->username' of personal types {'user', 'user_meta'} is found.,,None
object property '$comment->comment_author_email' of personal types {'email'} is found.,,None
Uninstall deletion call: DELETION call to delete_option("jump2me") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email_default' of personal types {'email'} is found.,,None
variable '$email_default' of personal types {'email'} is found.,,None
variable '$email_default' of personal types {'email'} is found.,,None
variable '$email_default' of personal types {'email'} is found.,,None
variable '$id_or_email' of personal types {'email'} is found.,,None
variable '$id_or_email' of personal types {'email'} is found.,,None
variable '$id_or_email' of personal types {'email'} is found.,,None
variable '$id_or_email' of personal types {'email'} is found.,,None
variable '$id_or_email' of personal types {'email'} is found.,,None
variable '$id_or_email' of personal types {'email'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($id, $match, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($id) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_userdata($author_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_post_meta($post_id, "jump2me_shorturl", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdata($wpuid) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to wp_set_current_user($wpuid) alters data types {'user_meta'}. Passed arguments: 0: $id (int). Returns (WP_User).,None,None
RETRIEVAL call to get_option("jump2me") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($id) alters data types {'wp_post', 'post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($post_id, "jump2me_keyword", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "twitter_text", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "twitter") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_usermeta($id_or_email, "jump2me_id") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdata($id_or_email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_usermeta($user_ID, "jump2me_id") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "jump2me_tweeted", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_comment($comment_ID). Passed arguments: 0: $comment (WP_Comment|string|int). Returns (WP_Comment|array|null).,None,None
RETRIEVAL call to get_option("jump2me") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("jump2me") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($id, "jump2me_shorturl", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($id, "jump2me_fetching", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
STORAGE call to wp_insert_user($userdata) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,None,None
STORAGE call to update_user_meta($wpuid, "jump2me_id", $jump2me_user->id) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_update_user($userdata) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,None,None
STORAGE call to update_user_meta($wpuid, "nickname", $user_login_n_suffix) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "jump2me_fetching", 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "jump2me_shorturl", $shorturl) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "jump2me_shorturl", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "jump2me_fetching", 0) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "jump2me_tweeted", 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("jump2me", $wp_jump2me) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("jump2me") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, "jump2me_shorturl", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "jump2me_shorturl", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_option("jump2me") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
CRYPTOGRAPHY call to wp_update_user($userdata) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,hash,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] WP User info of types (['user_meta', 'user', 'email']) stored through WordPress function "wp_insert_user($userdata)", found in file inc/core.php at line 242. 

[has_storage] PII of types (['user_meta', 'user', 'email']) stored through WordPress function "update_user_meta($wpuid, "nickname", $user_login_n_suffix)", found in file inc/core.php at line 277. 

[has_storage] PII of types (['user_meta', 'user', 'email']) stored through WordPress function "update_post_meta($post_id, "jump2me_fetching", 0)", found in file inc/core.php at line 65. 

[has_storage] PII of types (['user_meta', 'user', 'email']) stored through WordPress function "update_post_meta($post_id, "jump2me_shorturl", $shorturl)", found in file inc/core.php at line 61. 

[has_storage] PII of types (['user_meta', 'user', 'email']) stored through WordPress function "update_post_meta($post_id, "jump2me_shorturl", "")", found in file inc/core.php at line 63. 

[has_storage] PII of types (['user_meta', 'user', 'email']) stored through WordPress function "update_post_meta($post_id, "jump2me_fetching", 1)", found in file inc/core.php at line 56. 

[has_storage] WP User info of types (['user_meta', 'user', 'email']) stored through WordPress function "wp_update_user($userdata)", found in file inc/core.php at line 268. 

[has_storage] PII of types (['user_meta', 'user', 'email']) stored through WordPress function "update_post_meta($post_id, "jump2me_tweeted", 1)", found in file inc/core.php at line 94. 

[has_storage] PII of types (['user_meta', 'user', 'email']) stored through WordPress function "update_user_meta($wpuid, "jump2me_id", $jump2me_user->id)", found in file inc/core.php at line 248. 

[has_storage] Storage check is WP 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($wpuid, "nickname", $user_login_n_suffix) does not have corresponding deletion method. Storage method found in file inc/core.php at line 277. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post_id, "jump2me_fetching", 0) does not have corresponding deletion method. Storage method found in file inc/core.php at line 65. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post_id, "jump2me_shorturl", $shorturl) does not have corresponding deletion method. Storage method found in file inc/core.php at line 61. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post_id, "jump2me_shorturl", "") does not have corresponding deletion method. Storage method found in file inc/core.php at line 63. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post_id, "jump2me_fetching", 1) does not have corresponding deletion method. Storage method found in file inc/core.php at line 56. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post_id, "jump2me_tweeted", 1) does not have corresponding deletion method. Storage method found in file inc/core.php at line 94. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($wpuid, "jump2me_id", $jump2me_user->id) does not have corresponding deletion method. Storage method found in file inc/core.php at line 248. 

[Art.17, Right to erasure] Deletion access is NONE 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1354. Found in file inc/core.php at line 277 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 269. Found in file inc/core.php at line 65 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 249. Found in file inc/core.php at line 61 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 261. Found in file inc/core.php at line 63 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 219. Found in file inc/core.php at line 56 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 426. Found in file inc/core.php at line 94 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1223. Found in file inc/core.php at line 248 

[Art.15, Right to access] Data access is NONE_BUT_NOT_REQUIRED 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['access', 'deletion', 'encryption', 'third_party'] 

[main] Is deletion in violation? True 

[main] Is access in violation? False 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? False 


###########
### Q&A ###
###########

1. Why is my plugin in violation against GDPR?

GDPR (https://gdpr-info.eu/) aims to give citizens in the European Union (EU) control over their personal data. If a website collects or store user data, it is required to provide users functionalities to control their data, such as ones to erase or export their data. While a plugin do not directly interact with users, it may provide functionalities that collect or store personal data, which would make websites that deploy the plugin in violation against GDPR if the plugin does not provide corresponding functionalities to allow users control their personal data. Therefore, plugin developers are responsible to provide functions to manage the personal data they handle in accordance with GDPR. We list requirements by specific GDPR articles relevant to your plugin below.


[Art. 13, Information to be provided where personal data are collected from the data subject] If a plugin collects or handles personal data, it needs to provide privacy policy texts that explain what personal data is being collected and for what purpose. The texts are meant to be added to the privacy policy of the websites that deploy the plugin. 


            
[Art.17, Right to erasure] If a plugin stores personal data in a custom database they create or manage, or through Wordpress's native storage functions (e.g., update_user_meta), it needs to provide methods for users to erase the data upon request. Note that deleting data for all users upon uninstallation does not satisfy the requirement. 


            
        

2. How do I make my plugin compliant?

Please refer to the fix report below to see how you can make your plugin comply with GDPR.

        

##################
### Fix Report ###
##################

############################
# Data Deletion Fix Report #
############################

This report suggests fixes to comply with the GDPR Art. 17, Right to erasure (https://gdpr-info.eu/art-17-gdpr/). The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/adding-the-personal-data-eraser-to-your-plugin/ for more details.

1) Implement a function that deletes all the user data collected in the plugin. Sample code:


/**
* Removes all collected data of a user.
*
* @param string $email_address   email address to manipulate
* @param int    $page            pagination
*
* @return array
*/
function jump2me-para-wordpress_remove_data( $email_address, $page = 1 ) {
    
    $page = (int) $page;


    //TODO: Delete the user data that was stored using Wordpress functions

    //Below is the sample code for deleting user meta and may need to be modified to suit the plugin.
    $user_id = get_user_by('email', $email_address)
    $key = 'email' //Sample user meta key
    if ( $customer->user_id > 0 ) {
        //Delete user meta data by $key
        delete_user_meta( $user_id, $key );
    }
        



    // Tell core if we have more data to delete still
    $done = true;
    return array(
        'items_removed'  => $items_removed, // true if collected data of a user is being deleted
        'items_retained' => $items_retained, // true if certain data needs to be retained
        'messages'       => sprintf( __( 'Data of user with email %s successfully deleted.', 'jump2me-para-wordpress' ), $email_address ), // Put messages for data removal
        'done'           => $done, // true if all the removal processes are done (all data of the user is removed)
    );
}
        

2) Hook the deletion function to the Wordpress's Personal Data Removal tool


/**
* Registers all data erasers.
*
* @param array $exporters
*
* @return mixed
*/
function jump2me-para-wordpress_register_privacy_erasers( $erasers ) {
    $erasers['my-plugin-slug'] = array(
        'eraser_friendly_name' => __( '<eraser name>', 'jump2me-para-wordpress' ),
        'callback'             => 'jump2me-para-wordpress_remove_data',
    );
    return $erasers;
}
        

add_filter( 'wp_privacy_personal_data_erasers', 'jump2me-para-wordpress_register_privacy_erasers' );
        

        

#############################
# Privacy Policy Fix Report #
#############################

This report suggests fixes to comply with the GDPR Art. 13 (https://gdpr-info.eu/art-13-gdpr/) through including a privacy notice. The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/suggesting-text-for-the-site-privacy-policy/ for more details.

1) Implement a function that includes the privacy policy for the plugin and provide it to wordpress through wp_add_privacy_policy_content(). Sample code:


/**
* Adds a privacy policy statement.
*/
function jump2me-para-wordpress_add_privacy_policy_content() {
    if ( ! function_exists( 'wp_add_privacy_policy_content' ) ) {
        return;
    }
    //TODO: modify the content below to include the privacy policy for the plugin.
    $content = '<p class="privacy-policy-tutorial">' . __( 'Some introductory content for the suggested text.', 'jump2me-para-wordpress' ) . '</p>'
            . '<strong class="privacy-policy-tutorial">' . __( 'Suggested Text:', 'jump2me-para-wordpress' ) . '</strong> '
            . sprintf(
                __( 'When you leave a comment on this site, we send your name, email address, IP address and comment text to example.com. Example.com does not retain your personal data. The example.com privacy policy is <a href="%1$s" target="_blank">here</a>.', 'jump2me-para-wordpress' ),
                'https://example.com/privacy-policy'
            );
    wp_add_privacy_policy_content( 'jump2me-para-wordpress', wp_kses_post( wpautop( $content, false ) ) );
}
        

2) Hook the privacy policy function to the Wordpress's admin initialization action.


add_action( 'admin_init', 'jump2me-para-wordpress_add_privacy_policy_content' );
        

        


Disclaimer: The sample code provided above is only for reference and does not guarantee GDPR compliance. The recommended list of data to delete/export may not be comprehensive. 
        
Done.
