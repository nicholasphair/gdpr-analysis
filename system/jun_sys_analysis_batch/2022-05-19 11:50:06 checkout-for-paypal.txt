Timeout in resolving values
Timeout in running neo4j query
Running Main.py on checkout-for-paypal

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.400428.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:00.907890.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 10 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.380322.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 1 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.549498.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 327 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:00.729984.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 0 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.542555.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.106579.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 193 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:02.908501.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 2474
Added 1943 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 2474
Added 0 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.125723.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/checkout-for-paypal/checkout-for-paypal-order.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/checkout-for-paypal/main.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/checkout-for-paypal/extensions/checkout-for-paypal-extensions-menu.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.378602.

10 PHP_REACHES edges created
1 REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
2463 PHP_REACHES edges created
2474 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 866 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.006524.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.694909.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 41 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:01.625920.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 33 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.187480.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.074380.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.564603.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.015451.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.033768.

74 PHP_REACHES edges created
74 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 47 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.135309.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
1 SQL operations to process.
The following function calls could not successfully be analyzed for SQL content: [2931]
Added 0 SQL nodes. 0 out of 1 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:00.235086.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'$post_id'' cannot be parsed correct.
HTML code '$'get_post_meta($post_id, "_txn_id", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post_id, "_first_name", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post_id, "_last_name", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post_id, "_email", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post_id, "_mc_gross", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post_id, "_payment_status", true)'' cannot be parsed correct.
HTML code '$'<h2>Checkout for PayPal Extensions</h2>'' cannot be parsed correct.
HTML code '$'<link type="text/css" rel="stylesheet" href="CHECKOUT_FOR_PAYPAL_URL/extensions/checkout-for-paypal-extensions-menu.css" /
'' cannot be parsed correct.
HTML code '$'<div class="updated"><p>Checkout for PayPal Debug log file is not writable. Please check to make sure that it has the correct file permission (ideally 644). Otherwise the plugin will not be able to write to the log file. The log file (log.txt) can be found in the root directory of the plugin - <code>CHECKOUT_FOR_PAYPAL_URL</code></p></div>'' cannot be parsed correct.
HTML code '$'<div class="wrap"><h2>Checkout for PayPal vCHECKOUT_FOR_PAYPAL_VERSION</h2>'' cannot be parsed correct.
HTML code '$'<div class="notice notice-info">sprintf(wp_kses(__("Please visit the <a target="_blank" href="%s">Checkout for PayPal</a> documentation page for instructions.", "checkout-for-paypal"), ["a" => ["href" => [], "target" => []]]), esc_url($url))</div>'' cannot be parsed correct.
HTML code '$'<div id="message" class="updated fade"><p>Settings Saved!</p></div>'' cannot be parsed correct.
HTML code '$'<div id="message" class="updated fade"><p>Debug log file has been reset!</p></div>'' cannot be parsed correct.
HTML code '$'<div id="message" class="error"><p>Debug log file could not be reset!</p></div>'' cannot be parsed correct.
HTML code '$'Settings Saved!'' cannot be parsed correct.
HTML code '$'$_SERVER_REQUEST_URI'' cannot be parsed correct.
HTML code '$'checkout_for_paypal_get_option()_app_client_id'' cannot be parsed correct.
HTML code '$'checkout_for_paypal_get_option()_currency_code'' cannot be parsed correct.
HTML code '$'checkout_for_paypal_get_option()_return_url'' cannot be parsed correct.
HTML code '$'file_get_contents($real_file)'' cannot be parsed correct.
HTML code '$'$_SERVER_REQUEST_URI'' cannot be parsed correct.
HTML code '$'$_SERVER_REQUEST_URI'' cannot be parsed correct.
HTML code '$'<div class="wrap">'' cannot be parsed correct.
HTML code '$'<div id="poststuff"><div id="post-body">'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'</div></div>'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'<div id="message" class="updated fade"><p><strong>'' cannot be parsed correct.
HTML code '$'</strong></p></div>'' cannot be parsed correct.
HTML code '$' checked="checked"'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:03.931263.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.057754.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 2 do_action/apply_filters calls and 10 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.548007.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FileProDetector
### Start running FrontBaseDetector
### Finish running FirebirdInterBaseDetector
### Start running HashDetector
### Finish running DbplusDetector
### Start running IBMDb2Detector
### Finish running DbaseDetector
### Start running InformixDetector
### Finish running CubridDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running Oci8Detector
### Start running OpenSSLDetector
### Finish running MongoDbDetector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running ArrayElementDetector
### Start running PhpCurlDetector
### Finish running HashDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PasswordHashingDetector
### Start running PHPRetrievalDetector
### Finish running PHPIncludedDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running OpenSSLDetector
### Start running PhpVarDetector
### Finish running PhpCurlDetector
### Start running PostgreSQLDetector
### Finish running PostgreSQLDetector
### Start running PropertyDetector
### Finish running PhpVarDetector
### Start running Sqlite3Detector
### Finish running Sqlite3Detector
### Start running SqliteDetector
### Finish running SqliteDetector
### Start running SqlServerDetector
### Finish running PropertyDetector
### Start running SybaseDetector
### Finish running SybaseDetector
### Start running TokyoTyrantDetector
### Finish running PHPRetrievalDetector
### Start running UserInputDetector
### Finish running maxdbDetector
### Start running VariableDetector
### Finish running TokyoTyrantDetector
### Start running WordpressHashingFnDetector
### Finish running SqlServerDetector
### Start running WordPressRemoteDetector
### Finish running MySQLiDetector
### Start running WordPressRetrievalDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressStorageDetector
### Finish running WordPressRemoteDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running GenericDatabaseUsageDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running UserInputDetector
### Start running UninstallDetector
### Finish running PHPStorageDetector
### Finish running VariableDetector
### Finish running WordPressRetrievalDetector
### Finish running DeletionDetector
### Finish running UninstallDetector
### Finish running WordPressStorageDetector
### Finished running detectors
main.php:259
  - RETRIEVAL call to file_get_contents($real_file).
  - Data types: file 

main.php:621
  - STORAGE call to fwrite($fp, $text).
  - Data types: file
main.php:641
  - STORAGE call to fwrite($fp, $text).
  - Data types: file
main.php:652
  - STORAGE call to fwrite($fp, $text).
  - Data types: file 

main.php:480
  - variable '$first_name' of personal types {'first_name'} is found.
  - Data types: first_name
main.php:482
  - variable '$first_name' of personal types {'first_name'} is found.
  - Data types: first_name
main.php:484
  - variable '$last_name' of personal types {'last_name'} is found.
  - Data types: last_name
main.php:486
  - variable '$last_name' of personal types {'last_name'} is found.
  - Data types: last_name
main.php:488
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
main.php:490
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
main.php:501
  - variable '$first_name' of personal types {'first_name'} is found.
  - Data types: first_name
main.php:501
  - variable '$last_name' of personal types {'last_name'} is found.
  - Data types: last_name
main.php:505
  - variable '$address_street' of personal types {'address'} is found.
  - Data types: address
main.php:506
  - variable '$address_street' of personal types {'address'} is found.
  - Data types: address
main.php:506
  - variable '$address_street' of personal types {'address'} is found.
  - Data types: address
main.php:507
  - variable '$address_city' of personal types {'city', 'address'} is found.
  - Data types: city, address
main.php:507
  - variable '$address_city' of personal types {'city', 'address'} is found.
  - Data types: city, address
main.php:508
  - variable '$address_city' of personal types {'city', 'address'} is found.
  - Data types: city, address
main.php:508
  - variable '$address_city' of personal types {'city', 'address'} is found.
  - Data types: city, address
main.php:508
  - variable '$address_city' of personal types {'city', 'address'} is found.
  - Data types: city, address
main.php:508
  - variable '$address_city' of personal types {'city', 'address'} is found.
  - Data types: city, address
main.php:509
  - variable '$address_state' of personal types {'state', 'address'} is found.
  - Data types: state, address
main.php:509
  - variable '$address_state' of personal types {'state', 'address'} is found.
  - Data types: state, address
main.php:510
  - variable '$address_state' of personal types {'state', 'address'} is found.
  - Data types: state, address
main.php:510
  - variable '$address_state' of personal types {'state', 'address'} is found.
  - Data types: state, address
main.php:510
  - variable '$address_state' of personal types {'state', 'address'} is found.
  - Data types: state, address
main.php:510
  - variable '$address_state' of personal types {'state', 'address'} is found.
  - Data types: state, address
main.php:511
  - variable '$address_zip' of personal types {'address'} is found.
  - Data types: address
main.php:512
  - variable '$address_zip' of personal types {'address'} is found.
  - Data types: address
main.php:512
  - variable '$address_zip' of personal types {'address'} is found.
  - Data types: address
main.php:513
  - variable '$address_country' of personal types {'country', 'address'} is found.
  - Data types: country, address
main.php:513
  - variable '$address_country' of personal types {'country', 'address'} is found.
  - Data types: country, address
main.php:514
  - variable '$address_country' of personal types {'country', 'address'} is found.
  - Data types: country, address
main.php:514
  - variable '$address_country' of personal types {'country', 'address'} is found.
  - Data types: country, address
main.php:514
  - variable '$address_country' of personal types {'country', 'address'} is found.
  - Data types: country, address
main.php:514
  - variable '$address_country' of personal types {'country', 'address'} is found.
  - Data types: country, address
main.php:563
  - variable '$first_name' of personal types {'first_name'} is found.
  - Data types: first_name
main.php:564
  - variable '$last_name' of personal types {'last_name'} is found.
  - Data types: last_name
main.php:565
  - variable '$email' of personal types {'email'} is found.
  - Data types: email 

checkout-for-paypal-order.php:82
  - RETRIEVAL call to get_post_meta($post_id, "_txn_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
checkout-for-paypal-order.php:85
  - RETRIEVAL call to get_post_meta($post_id, "_first_name", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
checkout-for-paypal-order.php:88
  - RETRIEVAL call to get_post_meta($post_id, "_last_name", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
checkout-for-paypal-order.php:91
  - RETRIEVAL call to get_post_meta($post_id, "_email", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
checkout-for-paypal-order.php:94
  - RETRIEVAL call to get_post_meta($post_id, "_mc_gross", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
checkout-for-paypal-order.php:97
  - RETRIEVAL call to get_post_meta($post_id, "_payment_status", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
main.php:85
  - RETRIEVAL call to get_post_meta($post->ID, "checkout-for-paypal-custom-field", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
main.php:580
  - RETRIEVAL call to get_option("checkout_for_paypal_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option 

main.php:523
  - STORAGE call to wp_insert_post($checkout_for_paypal_order, true). Passed arguments: 0: $postarr (array), 1: $wp_error (bool). Returns (int|WP_Error).
main.php:547
  - STORAGE call to wp_update_post($updated_post, true). Passed arguments: 1: $wp_error (bool), 0: $postarr (array|object). Returns (int|WP_Error).
main.php:562
  - STORAGE call to update_post_meta($post_id, "_txn_id", $txn_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
main.php:563
  - STORAGE call to update_post_meta($post_id, "_first_name", $first_name) alters data types {'first_name', 'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: first_name, post_meta
main.php:564
  - STORAGE call to update_post_meta($post_id, "_last_name", $last_name) alters data types {'post_meta', 'last_name'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta, last_name
main.php:565
  - STORAGE call to update_post_meta($post_id, "_email", $email) alters data types {'email', 'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: email, post_meta
main.php:566
  - STORAGE call to update_post_meta($post_id, "_mc_gross", $mc_gross) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
main.php:567
  - STORAGE call to update_post_meta($post_id, "_payment_status", $payment_status) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
main.php:593
  - STORAGE call to update_option("checkout_for_paypal_options", $updated_options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
main.php:597
  - STORAGE call to update_option("checkout_for_paypal_options", $updated_options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option 

By data type:
address
	VariableDetector.(unknown) - {'country', 'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'city', 'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'state', 'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'city', 'address'}
	VariableDetector.(unknown) - {'country', 'address'}
	VariableDetector.(unknown) - {'state', 'address'}
	VariableDetector.(unknown) - {'country', 'address'}
	VariableDetector.(unknown) - {'city', 'address'}
	VariableDetector.(unknown) - {'state', 'address'}
	VariableDetector.(unknown) - {'country', 'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'state', 'address'}
	VariableDetector.(unknown) - {'state', 'address'}
	VariableDetector.(unknown) - {'city', 'address'}
	VariableDetector.(unknown) - {'state', 'address'}
	VariableDetector.(unknown) - {'city', 'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'city', 'address'}
	VariableDetector.(unknown) - {'country', 'address'}
	VariableDetector.(unknown) - {'country', 'address'}
city
	VariableDetector.(unknown) - {'city', 'address'}
	VariableDetector.(unknown) - {'city', 'address'}
	VariableDetector.(unknown) - {'city', 'address'}
	VariableDetector.(unknown) - {'city', 'address'}
	VariableDetector.(unknown) - {'city', 'address'}
	VariableDetector.(unknown) - {'city', 'address'}
country
	VariableDetector.(unknown) - {'country', 'address'}
	VariableDetector.(unknown) - {'country', 'address'}
	VariableDetector.(unknown) - {'country', 'address'}
	VariableDetector.(unknown) - {'country', 'address'}
	VariableDetector.(unknown) - {'country', 'address'}
	VariableDetector.(unknown) - {'country', 'address'}
email
	WordPressStorageDetector.update_post_meta($post_id, "_email", $email) - {'email', 'post_meta'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
file
	PHPStorageDetector.fwrite($fp, $text) - {'file'}
	PHPStorageDetector.fwrite($fp, $text) - {'file'}
	PHPStorageDetector.fwrite($fp, $text) - {'file'}
	PHPRetrievalDetector.file_get_contents($real_file) - {'file'}
first_name
	VariableDetector.(unknown) - {'first_name'}
	VariableDetector.(unknown) - {'first_name'}
	VariableDetector.(unknown) - {'first_name'}
	WordPressStorageDetector.update_post_meta($post_id, "_first_name", $first_name) - {'first_name', 'post_meta'}
	VariableDetector.(unknown) - {'first_name'}
last_name
	VariableDetector.(unknown) - {'last_name'}
	VariableDetector.(unknown) - {'last_name'}
	VariableDetector.(unknown) - {'last_name'}
	WordPressStorageDetector.update_post_meta($post_id, "_last_name", $last_name) - {'post_meta', 'last_name'}
	VariableDetector.(unknown) - {'last_name'}
none
	WordPressStorageDetector.wp_insert_post($checkout_for_paypal_order, true) - set()
	WordPressStorageDetector.wp_update_post($updated_post, true) - set()
option
	WordPressStorageDetector.update_option("checkout_for_paypal_options", $updated_options) - {'option'}
	WordPressStorageDetector.update_option("checkout_for_paypal_options", $updated_options) - {'option'}
	WordPressRetrievalDetector.get_option("checkout_for_paypal_options") - {'option'}
post_meta
	WordPressRetrievalDetector.get_post_meta($post_id, "_last_name", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "_first_name", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "checkout-for-paypal-custom-field", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "_mc_gross", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "_payment_status", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_email", $email) - {'email', 'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_mc_gross", $mc_gross) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "_email", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_last_name", $last_name) - {'post_meta', 'last_name'}
	WordPressStorageDetector.update_post_meta($post_id, "_txn_id", $txn_id) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "_txn_id", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_first_name", $first_name) - {'first_name', 'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_payment_status", $payment_status) - {'post_meta'}
state
	VariableDetector.(unknown) - {'state', 'address'}
	VariableDetector.(unknown) - {'state', 'address'}
	VariableDetector.(unknown) - {'state', 'address'}
	VariableDetector.(unknown) - {'state', 'address'}
	VariableDetector.(unknown) - {'state', 'address'}
	VariableDetector.(unknown) - {'state', 'address'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:09.587944.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 47 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.168083.

47 STORE_REACHES edges created
47 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 93 nodes as PERSONAL
In total, tainted 93 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
In total, tainted 0 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:02.447391.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:00:37.138185!
RETRIEVAL call to file_get_contents($real_file).,None,None
STORAGE call to fwrite($fp, $text).,None,None
STORAGE call to fwrite($fp, $text).,None,None
STORAGE call to fwrite($fp, $text).,None,None
variable '$first_name' of personal types {'first_name'} is found.,,None
variable '$first_name' of personal types {'first_name'} is found.,,None
variable '$last_name' of personal types {'last_name'} is found.,,None
variable '$last_name' of personal types {'last_name'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$first_name' of personal types {'first_name'} is found.,,None
variable '$last_name' of personal types {'last_name'} is found.,,None
variable '$address_street' of personal types {'address'} is found.,,None
variable '$address_street' of personal types {'address'} is found.,,None
variable '$address_street' of personal types {'address'} is found.,,None
variable '$address_city' of personal types {'city', 'address'} is found.,,None
variable '$address_city' of personal types {'city', 'address'} is found.,,None
variable '$address_city' of personal types {'city', 'address'} is found.,,None
variable '$address_city' of personal types {'city', 'address'} is found.,,None
variable '$address_city' of personal types {'city', 'address'} is found.,,None
variable '$address_city' of personal types {'city', 'address'} is found.,,None
variable '$address_state' of personal types {'state', 'address'} is found.,,None
variable '$address_state' of personal types {'state', 'address'} is found.,,None
variable '$address_state' of personal types {'state', 'address'} is found.,,None
variable '$address_state' of personal types {'state', 'address'} is found.,,None
variable '$address_state' of personal types {'state', 'address'} is found.,,None
variable '$address_state' of personal types {'state', 'address'} is found.,,None
variable '$address_zip' of personal types {'address'} is found.,,None
variable '$address_zip' of personal types {'address'} is found.,,None
variable '$address_zip' of personal types {'address'} is found.,,None
variable '$address_country' of personal types {'country', 'address'} is found.,,None
variable '$address_country' of personal types {'country', 'address'} is found.,,None
variable '$address_country' of personal types {'country', 'address'} is found.,,None
variable '$address_country' of personal types {'country', 'address'} is found.,,None
variable '$address_country' of personal types {'country', 'address'} is found.,,None
variable '$address_country' of personal types {'country', 'address'} is found.,,None
variable '$first_name' of personal types {'first_name'} is found.,,None
variable '$last_name' of personal types {'last_name'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
RETRIEVAL call to get_post_meta($post_id, "_txn_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "_first_name", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "_last_name", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "_email", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "_mc_gross", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "_payment_status", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("checkout_for_paypal_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "checkout-for-paypal-custom-field", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
STORAGE call to wp_insert_post($checkout_for_paypal_order, true). Passed arguments: 0: $postarr (array), 1: $wp_error (bool). Returns (int|WP_Error).,None,None
STORAGE call to wp_update_post($updated_post, true). Passed arguments: 1: $wp_error (bool), 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($post_id, "_txn_id", $txn_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_first_name", $first_name) alters data types {'first_name', 'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_last_name", $last_name) alters data types {'post_meta', 'last_name'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_email", $email) alters data types {'email', 'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_mc_gross", $mc_gross) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_payment_status", $payment_status) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("checkout_for_paypal_options", $updated_options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("checkout_for_paypal_options", $updated_options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
Data Deletion violation! The plugin has storage node that has no identifier and cannot be accessed!
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] PII of types (['email']) stored through WordPress function "update_post_meta($post_id, "_email", $email)", found in file main.php at line 565. 

[has_storage] PII of types (['first_name', 'state', 'last_name', 'country', 'city', 'address']) stored through WordPress function "wp_update_post($updated_post, true)", found in file main.php at line 547. 

[has_storage] PII of types (['last_name']) stored through WordPress function "update_post_meta($post_id, "_last_name", $last_name)", found in file main.php at line 564. 

[has_storage] PII of types (['first_name']) stored through WordPress function "update_post_meta($post_id, "_first_name", $first_name)", found in file main.php at line 563. 

[has_storage] Unstructured data storage of PII types (['first_name', 'state', 'last_name', 'country', 'city', 'address']) to files through function "fwrite", found in file main.php at line 621. 

[has_storage] Storage check is CUSTOM_UNSTRUCTURED 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post_id, "_email", $email) does not have corresponding deletion method. Storage method found in file main.php at line 565. 

[Art.17, Right to erasure] Wordpress storage of PII through wp_update_post($updated_post, true) does not have corresponding deletion method. Storage method found in file main.php at line 547. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post_id, "_last_name", $last_name) does not have corresponding deletion method. Storage method found in file main.php at line 564. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post_id, "_first_name", $first_name) does not have corresponding deletion method. Storage method found in file main.php at line 563. 

[Art.17, Right to erasure] Complete data deletion is required for storage at node ID 3909 , but is impossible due to custom storage of PII without identifiers. Found in file main.php at line 621 

[Art.17, Right to erasure] Deletion access is NONE 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3595. Found in file main.php at line 565 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3496. Found in file main.php at line 547 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3586. Found in file main.php at line 564 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3577. Found in file main.php at line 563 

[Art.15, Right to access] Complete data access is required for storage at node ID 3909 , but is impossible due to custom storage of PII without identifiers. Found in file main.php at line 621 

[Art.15, Right to access] Data access is NONE 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['access', 'deletion', 'encryption', 'third_party'] 

[main] Is deletion in violation? True 

[main] Is access in violation? True 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? False 


###########
### Q&A ###
###########

1. Why is my plugin in violation against GDPR?

GDPR (https://gdpr-info.eu/) aims to give citizens in the European Union (EU) control over their personal data. If a website collects or store user data, it is required to provide users functionalities to control their data, such as ones to erase or export their data. While a plugin do not directly interact with users, it may provide functionalities that collect or store personal data, which would make websites that deploy the plugin in violation against GDPR if the plugin does not provide corresponding functionalities to allow users control their personal data. Therefore, plugin developers are responsible to provide functions to manage the personal data they handle in accordance with GDPR. We list requirements by specific GDPR articles relevant to your plugin below.


[Art. 13, Information to be provided where personal data are collected from the data subject] If a plugin collects or handles personal data, it needs to provide privacy policy texts that explain what personal data is being collected and for what purpose. The texts are meant to be added to the privacy policy of the websites that deploy the plugin. 


            
[Art.17, Right to erasure] If a plugin stores personal data in a custom database they create or manage, or through Wordpress's native storage functions (e.g., update_user_meta), it needs to provide methods for users to erase the data upon request. Note that deleting data for all users upon uninstallation does not satisfy the requirement. 


            
        

2. How do I make my plugin compliant?

Please refer to the fix report below to see how you can make your plugin comply with GDPR.

        
