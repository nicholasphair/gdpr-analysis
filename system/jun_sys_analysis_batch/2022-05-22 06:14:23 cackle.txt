Timeout in resolving values
Timeout in running neo4j query
Running Main.py on cackle

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.812909.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.108452.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 0 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.152988.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 0 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.387737.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 745 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:00.907158.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 5 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.638771.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.087962.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 397 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:06.085884.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 5056
Added 3909 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 6678
Added 1622 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.462629.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cackle/cackle_activate.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cackle/cackle_activation.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cackle/cackle_admin.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cackle/cackle_api.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cackle/cackle.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cackle/channel.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cackle/comment-template.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cackle/counter.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cackle/manage.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cackle/monitor.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cackle/request_handler.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cackle/sync_handler.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/cackle/sync.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:01.104844.

745 PHP_REACHES edges created
5 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
4306 PHP_REACHES edges created
1000 PHP_REACHES edges created
1622 PHP_REACHES edges created
6678 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 1916 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.044154.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:03.713673.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 91 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:02.994834.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 72 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.197833.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.333542.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.692716.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.026285.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.037336.

163 PHP_REACHES edges created
163 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 131 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.155084.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
24 SQL operations to process.
CREATE TABLE $wpdbcackle_channel (
	            id bigint(20) NOT NULL,
	            time bigint(11) NOT NULL,
	            modified varchar(25) DEFAULT NULL,
	            last_comment varchar(250) DEFAULT NULL,
                PRIMARY KEY (id),
	            UNIQUE KEY id (id)
	        );
SQL command (CREATE TABLE $wpdbcackle_channel ( id bigint(20) NOT NULL, time bigint(11) NOT NULL, modified varchar(25) DEFAULT NULL, last_comment varchar(250) DEFAULT NULL, PRIMARY KEY (id), UNIQUE KEY id (id) );) cannot be parsed correct.
alter table $wpdbcackle_channel modify id bigint(20) NOT NULL
SQL command (alter table $wpdbcackle_channel modify id bigint(20) NOT NULL) cannot be parsed correct.

                            SELECT last_comment
                            FROM $wpdbcackle_channel
                            WHERE id = $wpdb->get_results($wpdb->prepare("
                            SELECT *
                            FROM "$wpdb->prefix"cackle_channel
                            WHERE  id > %d
                            ORDER BY ID ASC
                            LIMIT 1
                            ", $post_id))_0_id
                            ORDER BY ID ASC
                            LIMIT 1
                            

                            SELECT last_comment
                            FROM $wpdbcackle_channel
                            WHERE id = $wpdb->get_results($wpdb->prepare("
                            SELECT *
                            FROM "$wpdb->prefix"cackle_channel
                            WHERE  id > %d
                            ORDER BY ID ASC
                            LIMIT 1
                            ", $post_id))_0_id
                            ORDER BY ID ASC
                            LIMIT 1
                            
SQL command ( SELECT last_comment FROM $wpdbcackle_channel WHERE id = $wpdb->get_results($wpdb->prepare(" SELECT * FROM "$wpdb->prefix"cackle_channel WHERE id > %d ORDER BY ID ASC LIMIT 1 ", $post_id))_0_id ORDER BY ID ASC LIMIT 1 ) cannot be parsed correct.
UPDATE $wpdbcackle_channel SET last_comment = $last_comment  WHERE id = %s
UPDATE $wpdbcackle_channel SET last_comment = $last_comment  WHERE id = $comment_chan_channel
UPDATE $wpdbcackle_channel SET last_comment = $last_comment  WHERE id = $comment_chan_channel
SQL command (UPDATE $wpdbcackle_channel SET last_comment = $last_comment WHERE id = $comment_chan_channel) cannot be parsed correct.

                            SELECT modified
                            FROM $wpdbcackle_channel
                            WHERE id = url_to_postid($comment["chan"]["channel"])
                            ORDER BY ID ASC
                            LIMIT 1
                            

                            SELECT modified
                            FROM $wpdbcackle_channel
                            WHERE id = url_to_postid($comment["chan"]["channel"])
                            ORDER BY ID ASC
                            LIMIT 1
                            
SQL command ( SELECT modified FROM $wpdbcackle_channel WHERE id = url_to_postid($comment["chan"]["channel"]) ORDER BY ID ASC LIMIT 1 ) cannot be parsed correct.
UPDATE $wpdbcackle_channel SET modified = $last_modified  WHERE id = %s
UPDATE $wpdbcackle_channel SET modified = $last_modified  WHERE id = url_to_postid($comment["chan"]["channel"])
UPDATE $wpdbcackle_channel SET modified = $last_modified  WHERE id = url_to_postid($comment["chan"]["channel"])
SQL command (UPDATE $wpdbcackle_channel SET modified = $last_modified WHERE id = url_to_postid($comment["chan"]["channel"])) cannot be parsed correct.

                                SELECT *
                                FROM $wpdb
                                WHERE post_type != 'revision'
                                AND post_status = 'publish'
                                AND ID = $chan_channel
                                ORDER BY ID ASC
                                LIMIT 1
                                

                                SELECT *
                                FROM $wpdb
                                WHERE post_type != 'revision'
                                AND post_status = 'publish'
                                AND ID = $chan_channel
                                ORDER BY ID ASC
                                LIMIT 1
                                
SQL command ( SELECT * FROM $wpdb WHERE post_type != 'revision' AND post_status = 'publish' AND ID = $chan_channel ORDER BY ID ASC LIMIT 1 ) cannot be parsed correct.

                SELECT comment_status
                FROM $wpdb
                WHERE ID = $post
                

                SELECT comment_status
                FROM $wpdb
                WHERE ID = $post
                
SQL command ( SELECT comment_status FROM $wpdb WHERE ID = $post ) cannot be parsed correct.

                            SELECT *
                            FROM $wpdb
                            WHERE post_type != 'revision'
                            AND post_status = 'publish'
                            AND comment_count > 0
                            AND ID > intval($post_req["post_id"])
                            ORDER BY ID ASC
                            LIMIT 1
                            

                            SELECT *
                            FROM $wpdb
                            WHERE post_type != 'revision'
                            AND post_status = 'publish'
                            AND comment_count > 0
                            AND ID > intval($post_req["post_id"])
                            ORDER BY ID ASC
                            LIMIT 1
                            
SQL command ( SELECT * FROM $wpdb WHERE post_type != 'revision' AND post_status = 'publish' AND comment_count > 0 AND ID > intval($post_req["post_id"]) ORDER BY ID ASC LIMIT 1 ) cannot be parsed correct.
SELECT * FROM $wpdb WHERE comment_post_ID = {"1": ["$wpdb->get_results($wpdb->prepare(\"\n                            SELECT *\n                            FROM \"$wpdb->posts\"\n                            WHERE post_type != \\'revision\\'\n                            AND post_status = \\'publish\\'\n                            AND comment_count > 0\n                            AND ID > %d\n                            ORDER BY ID ASC\n                            LIMIT 1\n                            \", $post_id))_0_ID"], "2": ["100"], "3": ["intval($post_req[\"offset\"])"]}
                AND comment_agent NOT LIKE 'Cackle:%%' order by comment_date asc limit %d offset %d
None
DELETE FROM `$wpdbcommentmeta` WHERE meta_key IN ('cackle_post_id', 'cackle_parent_post_id')
SQL command (DELETE FROM `$wpdbcommentmeta` WHERE meta_key IN ('cackle_post_id', 'cackle_parent_post_id')) cannot be parsed correct.
DELETE FROM `$wpdbcomments` WHERE comment_agent LIKE 'Cackle:%%'
SQL command (DELETE FROM `$wpdbcomments` WHERE comment_agent LIKE 'Cackle:%%') cannot be parsed correct.
DELETE FROM `$wpdbcackle_channel`
SQL command (DELETE FROM `$wpdbcackle_channel`) cannot be parsed correct.

                            SELECT *
                            FROM $wpdbcackle_channel
                            WHERE id = $wpdb->get_results($wpdb->prepare("
                            SELECT *
                            FROM "$wpdb->posts"
                            WHERE post_type != \'revision\'
                            AND post_status = \'publish\'
                            AND ID = %d
                            ORDER BY ID ASC
                            LIMIT 1
                            ", $chan["channel"]))_0_ID
                            ORDER BY ID ASC
                            LIMIT 1
                            

                            SELECT *
                            FROM $wpdbcackle_channel
                            WHERE id = $wpdb->get_results($wpdb->prepare("
                            SELECT *
                            FROM "$wpdb->posts"
                            WHERE post_type != \'revision\'
                            AND post_status = \'publish\'
                            AND ID = %d
                            ORDER BY ID ASC
                            LIMIT 1
                            ", $chan["channel"]))_0_ID
                            ORDER BY ID ASC
                            LIMIT 1
                            
SQL command ( SELECT * FROM $wpdbcackle_channel WHERE id = $wpdb->get_results($wpdb->prepare(" SELECT * FROM "$wpdb->posts" WHERE post_type != \'revision\' AND post_status = \'publish\' AND ID = %d ORDER BY ID ASC LIMIT 1 ", $chan["channel"]))_0_ID ORDER BY ID ASC LIMIT 1 ) cannot be parsed correct.
INSERT INTO $wpdbcackle_channel (id, time) VALUES ($wpdb->get_results($wpdb->prepare("
                            SELECT *
                            FROM "$wpdb->posts"
                            WHERE post_type != \'revision\'
                            AND post_status = \'publish\'
                            AND ID = %d
                            ORDER BY ID ASC
                            LIMIT 1
                            ", $chan["channel"]))_0_ID,%s) ON DUPLICATE KEY UPDATE time = %s
INSERT INTO $wpdbcackle_channel (id, time) VALUES ($wpdb->get_results($wpdb->prepare("
                            SELECT *
                            FROM "$wpdb->posts"
                            WHERE post_type != \'revision\'
                            AND post_status = \'publish\'
                            AND ID = %d
                            ORDER BY ID ASC
                            LIMIT 1
                            ", $chan["channel"]))_0_ID,0) ON DUPLICATE KEY UPDATE time = %s
INSERT INTO $wpdbcackle_channel (id, time) VALUES ($wpdb->get_results($wpdb->prepare("
0                          SELECT *
                            FROM "$wpdb->posts"
                            WHERE post_type != \'revision\'
                            AND post_status = \'publish\'
                            AND ID = %d
                            ORDER BY ID ASC
                            LIMIT 1
                            ", $chan["channel"]))_0_ID,0) ON DUPLICATE KEY UPDATE time = %s
INSERT INTO $wpdbcackle_channel (id, time) VALUES ($wpdb->get_results($wpdb->prepare("
0                          SELECT *
                            FROM "$wpdb->posts"
                            WHERE post_type != \'revision\'
                            AND post_status = \'publish\'
                            AND ID = %d
                            ORDER BY ID ASC
                            LIMIT 1
                            ", $chan["channel"]))_0_ID,0) ON DUPLICATE KEY UPDATE time = %s
SQL command (INSERT INTO $wpdbcackle_channel (id, time) VALUES ($wpdb->get_results($wpdb->prepare(" 0 SELECT * FROM "$wpdb->posts" WHERE post_type != \'revision\' AND post_status = \'publish\' AND ID = %d ORDER BY ID ASC LIMIT 1 ", $chan["channel"]))_0_ID,0) ON DUPLICATE KEY UPDATE time = %s) cannot be parsed correct.

                            SELECT *
                            FROM $wpdbcackle_channel
                            WHERE  id > json_decode(stripslashes($_POST["data"]), true)_post_id
                            ORDER BY ID ASC
                            LIMIT 1
                            

                            SELECT *
                            FROM $wpdbcackle_channel
                            WHERE  id > json_decode(stripslashes($_POST["data"]), true)_post_id
                            ORDER BY ID ASC
                            LIMIT 1
                            
SQL command ( SELECT * FROM $wpdbcackle_channel WHERE id > json_decode(stripslashes($_POST["data"]), true)_post_id ORDER BY ID ASC LIMIT 1 ) cannot be parsed correct.

                            SELECT *
                            FROM $wpdb
                            WHERE post_type != 'revision'
                            AND post_status = 'publish'
                            AND ID = $chan_channel
                            ORDER BY ID ASC
                            LIMIT 1
                            

                            SELECT *
                            FROM $wpdb
                            WHERE post_type != 'revision'
                            AND post_status = 'publish'
                            AND ID = $chan_channel
                            ORDER BY ID ASC
                            LIMIT 1
                            
SQL command ( SELECT * FROM $wpdb WHERE post_type != 'revision' AND post_status = 'publish' AND ID = $chan_channel ORDER BY ID ASC LIMIT 1 ) cannot be parsed correct.
SELECT count(comment_ID) as count from $wpdb  WHERE comment_agent = Cackle:$comment_id
SELECT count(comment_ID) as count from $wpdb  WHERE comment_agent = Cackle:$comment_id
SQL command (SELECT count(comment_ID) as count from $wpdb WHERE comment_agent = Cackle:$comment_id) cannot be parsed correct.
SELECT comment_id FROM $wpdb WHERE meta_key = 'cackle_post_id' AND meta_value = $comment_parentId LIMIT 1
SELECT comment_id FROM $wpdb WHERE meta_key = 'cackle_post_id' AND meta_value = $comment_parentId LIMIT 1
SQL command (SELECT comment_id FROM $wpdb WHERE meta_key = 'cackle_post_id' AND meta_value = $comment_parentId LIMIT 1) cannot be parsed correct.
UPDATE $wpdb SET comment_approved = '1' WHERE comment_agent = Cackle:$comment_id
UPDATE $wpdb SET comment_approved = '1' WHERE comment_agent = Cackle:$comment_id
SQL command (UPDATE $wpdb SET comment_approved = '1' WHERE comment_agent = Cackle:$comment_id) cannot be parsed correct.
UPDATE $wpdb SET comment_content = {"1": ["$comment_content"], "2": ["Cackle:"]} WHERE comment_agent = %s
None

                            SELECT *
                            FROM $wpdbcackle_channel
                            WHERE id = $id
                            ORDER BY ID ASC
                            LIMIT 1
                            

                            SELECT *
                            FROM $wpdbcackle_channel
                            WHERE id = $id
                            ORDER BY ID ASC
                            LIMIT 1
                            
SQL command ( SELECT * FROM $wpdbcackle_channel WHERE id = $id ORDER BY ID ASC LIMIT 1 ) cannot be parsed correct.
INSERT INTO $wpdbcackle_channel (id, time) VALUES ($id,%s) ON DUPLICATE KEY UPDATE time = %s
INSERT INTO $wpdbcackle_channel (id, time) VALUES ($id,time()) ON DUPLICATE KEY UPDATE time = %s
INSERT INTO $wpdbcackle_channel (id, time) VALUES ($id,time()) ON DUPLICATE KEY UPDATE time =time()s
INSERT INTO $wpdbcackle_channel (id, time) VALUES ($id,time()) ON DUPLICATE KEY UPDATE time =time()s
SQL command (INSERT INTO $wpdbcackle_channel (id, time) VALUES ($id,time()) ON DUPLICATE KEY UPDATE time =time()s) cannot be parsed correct.
INSERT INTO $wpdbcackle_channel (id, time) VALUES ($id,%s) ON DUPLICATE KEY UPDATE time = %s
INSERT INTO $wpdbcackle_channel (id, time) VALUES ($id,time()) ON DUPLICATE KEY UPDATE time = %s
INSERT INTO $wpdbcackle_channel (id, time) VALUES ($id,time()) ON DUPLICATE KEY UPDATE time =time()s
INSERT INTO $wpdbcackle_channel (id, time) VALUES ($id,time()) ON DUPLICATE KEY UPDATE time =time()s
SQL command (INSERT INTO $wpdbcackle_channel (id, time) VALUES ($id,time()) ON DUPLICATE KEY UPDATE time =time()s) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [617, 624, 2062, 2161, 2200, 2304, 3147, 3282, 5058, 5179, 5641, 5654, 5667, 6003, 6057, 6179, 5960, 7253, 7432, 7684, 7708, 8173, 8236, 8310]
Added 0 SQL nodes. 0 out of 24 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:08.198337.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'json_encode($settings)'' cannot be parsed correct.
HTML code '$'json_encode($status)'' cannot be parsed correct.
HTML code '$'comment_ID()'' cannot be parsed correct.
HTML code '$'comment_ID()'' cannot be parsed correct.
HTML code '$'comment_ID()'' cannot be parsed correct.
HTML code '$'comment_ID()'' cannot be parsed correct.
HTML code '$'comment_author_url()'' cannot be parsed correct.
HTML code '$'comment_author()'' cannot be parsed correct.
HTML code '$'comment_ID()'' cannot be parsed correct.
HTML code '$'comment_author()'' cannot be parsed correct.
HTML code '$'comment_ID()'' cannot be parsed correct.
HTML code '$'comment_ID()'' cannot be parsed correct.
HTML code '$'wp_filter_kses(comment_text())'' cannot be parsed correct.
HTML code '$'get_option("cackle_apiId", "")'' cannot be parsed correct.
HTML code '$'$post'' cannot be parsed correct.
HTML code '$'json_encode($response)'' cannot be parsed correct.
HTML code '$'get_option("cackle_apiId")'' cannot be parsed correct.
HTML code '$'json_encode($response)'' cannot be parsed correct.
HTML code '$'json_encode($array)'' cannot be parsed correct.
HTML code '$'json_encode($response)'' cannot be parsed correct.
HTML code '$'json_encode($resp)'' cannot be parsed correct.
HTML code '$'\')[0];
    cackle_admin.url = \''' cannot be parsed correct.
HTML code '$'\';
    cackle_admin.status = JSON.parse(\''' cannot be parsed correct.
HTML code '$'\')[0];


</script>
<div ng-app="cackle-admin.Angular">
    <div ng-controller="settings.ctrl">
        <div ng-include src="\'main.html\'"></div>
    </div>
    <script type="text/ng-template" id="main.html">
        <div layout-margin="10" layout="row" layout-sm="column" layout-md="column" layout-wrap>
            <div class="md-whiteframe-z1" flex-sm flex-md flex>
                <md-toolbar class="md-primary md-default-theme">
                    <div class="md-toolbar-tools">
                        <h1>
                            <span>{{ locale[\'Cackle plugin installation\']}}</span>
                        </h1>
                    </div>
                </md-toolbar>
                <md-content layout-padding md-default-theme>
                    <form name="userForm">
                        <div layout-sm="column">
                            <md-input-container>
                                <label for="input-1">Widget ID</label>
                                <input type="text" id="input-1" ng-model="initData.siteId">
                            </md-input-container>
                        </div>
                        <div layout-sm="column">
                            <md-input-container>
                                <label for="inputId">accountApiKey</label>
                                <input name="accountApiKey" type="text" ng-model="initData.accountApiKey" required
                                       md-maxlength="64" minlength="4">

                                <div ng-messages="userForm.accountApiKey.$error"
                                     ng-show="userForm.accountApiKey.$dirty">
                                    <div ng-message="required">This is required!</div>
                                    <div ng-message="md-maxlength">That\'s too long!</div>
                                    <div ng-message="minlength">That\'s too short!</div>
                                </div>
                            </md-input-container>
                        </div>
                        <div layout-sm="column">
                            <md-input-container>
                                <label for="inputId">siteApiKey</label>
                                <input name="siteApiKey" type="text" ng-model="initData.siteApiKey" required
                                       md-maxlength="64" minlength="4">

                                <div ng-messages="userForm.siteApiKey.$error" ng-show="userForm.siteApiKey.$dirty">
                                    <div ng-message="required">This is required!</div>
                                    <div ng-message="md-maxlength">That\'s too long!</div>
                                    <div ng-message="minlength">That\'s too short!</div>
                                </div>
                            </md-input-container>
                            <md-list>
                                <md-list-item class="">
                                    <p>{{locale[\'Enable SSO\']}}</p>
                                    <md-checkbox ng-model="initData.sso" class="md-primary"></md-checkbox>
                                </md-list-item>
                                <md-list-item class="">
                                    <p>{{locale[\'Enable sync(SEO)\']}}</p>
                                    <md-checkbox ng-model="initData.sync" class="md-primary"></md-checkbox>
                                </md-list-item>
                                <md-list-item class="">
                                    <p>{{locale[\'Counter\']}}</p>
                                    <md-switch class="md-primary" style="margin:0px !important;padding-left: 10px;" ng-model="initData.counter" aria-label="">

                                    </md-switch>
                                </md-list-item>
                                <md-list-item class="">
                                    <p>{{locale[\'Counter_rubrics\']}}</p>
                                    <md-switch class="md-primary" style="margin:0px !important;padding-left: 10px;" ng-model="initData.counter_rubrics" aria-label="">

                                    </md-switch>
                                </md-list-item>
                            </md-list>
                            <md-button ng-click="activate()" class="md-raised md-primary">{{locale[\'Activate\']}}
                            </md-button>
                            <md-subheader ng-if="object_keys(messages).length>0" class="md-no-sticky">{{locale[\'Warnings
                                and errors\']}}
                            </md-subheader>
                            <div ng-repeat="message in messages">
                                <div error-message error="message.text" header="message.header"
                                     errorclass="message.class"></div>
                            </div>
                        </div>
                    </form>
                </md-content>
            </div>
            <div class="md-whiteframe-z1" flex-sm flex>
                <md-toolbar class="md-primary md-default-theme">
                    <div class="md-toolbar-tools">
                        <h1>
                            <span ng-bind="locale[\'Check status\']"></span>
                        </h1>
                    </div>
                </md-toolbar>
                <md-content layout-padding md-default-theme>
                    <md-list>
                        <md-list-item>
                            <h2 ng-if="status[locale[\'Plugin activated\']]||status[\'correctKey\']==true">
                                {{locale[\'Plugin was successfully activated\']}}</h2>

                            <h2 ng-if="status[locale[\'Plugin activated\']]==false || status[\'correctKey\']==false">
                                {{locale[\'Plugin was not activated, check keys\']}}</h2>
                        </md-list-item>
                    </md-list>
                    <md-list>
                        <md-subheader class="md-no-sticky">
                            {{locale[\'Cackle plugin status and account availiable options\']}}
                        </md-subheader>

                        <md-list-item
                            ng-repeat="(k,v) in (filtered = (status|objToArray:locale[\'Cackle widget language\']))">

                            <p ng-hide="k==\'correctKey\'||k==\'whitelabel\'||k==\'sso\'||k==\'lang\'"> {{ k }} </p>
                            <span ng-show="k==locale[\'Cackle widget language\']">{{v}}</span>
                            <p ng-show="k==\'correctKey\'">{{locale[\'Plugin activated\']}}</p>
                            <p ng-show="k==\'whitelabel\'">{{locale[\'Paid white label option\']}}</p>
                            <p ng-show="k==\'sso\'">{{locale[\'Paid Single Sign On option\']}}</p>
                            <p ng-show="k==\'lang\'">{{locale[\'Cackle widget language\']}}</p>
                            <span ng-show="k==\'lang\'">{{v}}</span>
                            <md-checkbox ng-disabled="true" ng-hide="k==locale[\'Cackle widget language\']||k==\'lang\'"
                                         class="md-primary" ng-model="v"></md-checkbox>
                        </md-list-item>
                        <md-divider></md-divider>
                    </md-list>
                </md-content>
            </div>
        </div>
        <div layout-margin="10" layout="row" layout-wrap layout-sm="column"  layout-md="column">
            <div class="md-whiteframe-z1" flex-sm flex flex-md>
                <md-toolbar class="md-primary md-default-theme">
                    <div class="md-toolbar-tools">
                        <h1>
                            <span>{{locale[\'Export comments\']}}</span>
                        </h1>
                    </div>
                </md-toolbar>
                <md-content layout-padding>
                    <p>{{locale[\'This will export your existing WordPress comments to Cackle\']}}</p>
                    <md-button  ng-disabled="transfer[\'export\'].status" ng-click="transferStart(\'export\',\'start\')" class="md-raised md-primary">{{locale[\'Start\']}}
                    </md-button>
                    <md-button  ng-disabled="transfer[\'export\'].status" ng-click="transferStart(\'export\',\'continue\')" class="md-raised md-primary">{{locale[\'Continue\']}}
                    </md-button>
                    <md-button ng-click="transferStop(\'export\')" class="md-raised md-primary">{{locale[\'Stop\']}}
                    </md-button>

                    <md-list>
                        <md-subheader ng-show="transfer[\'export\']" class="md-no-sticky">{{locale[\'Export process\']}}</md-subheader>
                        <md-list-item ng-show="transfer[\'export\'].spinner"><spinner></spinner></md-list-item>
                        <md-list-item ng-repeat="mess in ((transfer[\'export\'].messages|limitTo:-5)) track by $index">
                            <span ng-bind-html="mess"></span>
                        </md-list-item>
                    </md-list>
                </md-content>

            </div>
            <div class="md-whiteframe-z1" flex-sm flex>
                <md-toolbar class="md-primary md-default-theme">
                    <div class="md-toolbar-tools">
                        <h1>
                            <span>{{locale[\'Sync comments\']}}</span>
                        </h1>
                    </div>
                </md-toolbar>
                <md-content layout-padding>
                    <p>{{locale[\'This will download your Cackle comments and store them locally in WordPress\']}}</p>
                    <md-button ng-disabled="transfer[\'sync\'].status || commentLoading" ng-click="initCommentsPrepare()" class="md-raised md-primary">{{locale[\'Start\']}}
                    </md-button>
                    <md-button  ng-disabled="transfer[\'sync\'].status || commentLoading" ng-click="transferStart(\'sync\',\'continue\')" class="md-raised md-primary">{{locale[\'Continue\']}}
                    </md-button>
                    <md-button ng-click="transferStop(\'sync\')" class="md-raised md-primary">{{locale[\'Stop\']}}
                    </md-button>
                    <p ng-show="commentLoading">{{locale[\'Posts prepared for import\']}} <b>{{comments_prepared_counter}}</b></p>
                    <md-list>
                        <md-subheader ng-show="transfer[\'sync\']" class="md-no-sticky">{{locale[\'Sync process\']}}</md-subheader>
                        <md-list-item ng-show="transfer[\'sync\'].spinner"><spinner></spinner></md-list-item>
                        <md-list-item ng-repeat="mess in ((transfer[\'sync\'].messages|limitTo:-5)) track by $index">
                            <span ng-bind-html="mess"></span>
                        </md-list-item>
                    </md-list>
                </md-content>
            </div>
        </div>


    </script>

    <script type="text/ng-template" id="scopeTemplate">
        <div layout="row">
            <div flex-sm flex class="md-whiteframe-z5" layout-margin>

                <md-toolbar class="cackle-errors {{errorClass}}">
                    <div class="md-toolbar-tools">
                        <h1>
                            <span>{{header}}</span>
                        </h1>
                    </div>
                </md-toolbar>
                <md-content class="cackle-errors" layout-padding ng-bind-html="error"></md-content>


            </div>
        </div>
    </script>
</div>


'' cannot be parsed correct.
HTML code '$'\',
        id: \''' cannot be parsed correct.
HTML code '$'\',
        channel: \''' cannot be parsed correct.
HTML code '$'\'
    '' cannot be parsed correct.
HTML code '$'\''' cannot be parsed correct.
HTML code '$'\''' cannot be parsed correct.
HTML code '$'\');
                if(count!=null){
                    var val = isNaN(parseInt(count.innerHTML))? 0: parseInt(count.innerHTML);
                    count.innerHTML=Cackle.Comment.lang[cackle_widget[0].lang].commentCount(val);
                }

                }]
            }
        '' cannot be parsed correct.
HTML code '$'\''' cannot be parsed correct.
HTML code '$'\''' cannot be parsed correct.
HTML code '$'<script> window.location="edit-comments.php?page=cackle_settings"; </script> '' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:02.560558.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.044408.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 3 do_action/apply_filters calls and 8 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.512858.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbplusDetector
### Start running FrontBaseDetector
### Finish running DbaseDetector
### Start running HashDetector
### Finish running FileProDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running FirebirdInterBaseDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running HashDetector
### Start running MySQLDetector
### Finish running IBMDb2Detector
### Start running MySQLiDetector
### Finish running MsqlDetector
### Start running Oci8Detector
### Finish running MySQLDetector
### Start running OpenSSLDetector
### Finish running Oci8Detector
### Start running ParadoxDetector
### Finish running MongoDbDetector
### Start running PasswordHashingDetector
### Finish running ParadoxDetector
### Start running PhpCurlDetector
### Finish running OpenSSLDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running ArrayElementDetector
### Start running PHPRetrievalDetector
### Finish running PasswordHashingDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPStorageDetector
### Start running PhpVarDetector
### Finish running PHPIncludedDetector
### Start running PostgreSQLDetector
### Finish running PHPRetrievalDetector
### Start running PropertyDetector
### Finish running PhpVarDetector
### Start running Sqlite3Detector
### Finish running PostgreSQLDetector
### Start running SqliteDetector
### Finish running SqliteDetector
### Start running SqlServerDetector
### Finish running PropertyDetector
### Start running SybaseDetector
### Finish running SybaseDetector
### Start running TokyoTyrantDetector
### Finish running MySQLiDetector
### Start running UserInputDetector
### Finish running maxdbDetector
### Start running VariableDetector
### Finish running Sqlite3Detector
### Start running WordpressHashingFnDetector
### Finish running TokyoTyrantDetector
### Start running WordPressRemoteDetector
### Finish running SqlServerDetector
### Start running WordPressRetrievalDetector
### Finish running WordPressRemoteDetector
### Start running WordPressStorageDetector
### Finish running WordpressHashingFnDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running GenericDatabaseUsageDetector
### Start running GenericEncryptionDetector
### Finish running UserInputDetector
### Start running DeletionDetector
### Finish running VariableDetector
### Start running UninstallDetector
### Finish running GenericEncryptionDetector
### Finish running PhpCurlDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running WordPressStorageDetector
### Finish running WordPressRetrievalDetector
### Finished running detectors
comment-template.php:67
  - MD5 called with parameters [user_data, siteApiKey, timestamp]. Ignore if [user_data, siteApiKey, timestamp] does not contain personal information. 

comment-template.php:59
  - object property '$current_user->user_email' of personal types {'email'} is found.
  - Data types: email
request_handler.php:118
  - object property '$comment->comment_author_email' of personal types {'email'} is found.
  - Data types: email
request_handler.php:122
  - object property '$comment->comment_author_email' of personal types {'email'} is found.
  - Data types: email 

sync.php:240
  - variable '$comment_author_email' of personal types {'email'} is found.
  - Data types: email
sync.php:254
  - variable '$comment_author_email' of personal types {'email'} is found.
  - Data types: email
sync.php:256
  - variable '$comment_author_email' of personal types {'email'} is found.
  - Data types: email
sync.php:264
  - variable '$comment_author_email' of personal types {'email'} is found.
  - Data types: email 

cackle_activate.php:8
  - RETRIEVAL call to get_option("cackle_apiId") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cackle_activate.php:8
  - RETRIEVAL call to get_option("cackle_siteApiKey") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cackle_activate.php:8
  - RETRIEVAL call to get_option("cackle_accountApiKey") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cackle_activate.php:52
  - RETRIEVAL call to get_option("cackle_plugin_version", "4.07") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
cackle_admin.php:136
  - RETRIEVAL call to get_option("cackle_apiId", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
cackle_admin.php:137
  - RETRIEVAL call to get_option("cackle_siteApiKey", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
cackle_admin.php:138
  - RETRIEVAL call to get_option("cackle_accountApiKey", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
cackle_admin.php:139
  - RETRIEVAL call to get_option("cackle_sso", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
cackle_admin.php:140
  - RETRIEVAL call to get_option("cackle_sync", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
cackle_admin.php:141
  - RETRIEVAL call to get_option("cackle_counter", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
cackle_admin.php:142
  - RETRIEVAL call to get_option("cackle_counter_rubrics", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
cackle_admin.php:143
  - RETRIEVAL call to get_option("cackle_manual_sync") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cackle_admin.php:144
  - RETRIEVAL call to get_option("cackle_manual_export") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cackle_admin.php:154
  - RETRIEVAL call to get_option("cackle_whitelabel", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
cackle_admin.php:155
  - RETRIEVAL call to get_option("cackle_lang", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
cackle_admin.php:156
  - RETRIEVAL call to get_option("cackle_sso", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
cackle_admin.php:157
  - RETRIEVAL call to get_option("cackle_correctKey", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
cackle_api.php:12
  - RETRIEVAL call to get_option("cackle_apiId") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cackle_api.php:13
  - RETRIEVAL call to get_option("cackle_accountApiKey") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cackle_api.php:14
  - RETRIEVAL call to get_option("cackle_siteApiKey") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
cackle_api.php:33
  - RETRIEVAL call to get_option($param, $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
channel.php:7
  - RETRIEVAL call to get_option("cackle_sync") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
channel.php:12
  - RETRIEVAL call to get_option("cackle_channel_modified_trigger") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
channel.php:14
  - RETRIEVAL call to get_option("cackle_channel_modified_first", $now) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
channel.php:15
  - RETRIEVAL call to get_option("cackle_channel_modified") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
channel.php:20
  - RETRIEVAL call to get_option("cackle_channel_modified") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
channel.php:42
  - RETRIEVAL call to get_option("cackle_channel_modified", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
channel.php:59
  - RETRIEVAL call to get_option("cackle_posts_update") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
comment-template.php:43
  - RETRIEVAL call to get_option("siteurl") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
comment-template.php:52
  - RETRIEVAL call to get_currentuserinfo() alters data types {'user_meta', 'user'}. Returns (bool|WP_User).
  - Data types: user_meta, user
comment-template.php:54
  - RETRIEVAL call to get_option("cackle_siteApiKey") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
comment-template.php:71
  - RETRIEVAL call to get_option("cackle_apiId", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
comment-template.php:86
  - RETRIEVAL call to comment_author() alters data types {'user_meta', 'user'}.
  - Data types: user_meta, user
comment-template.php:88
  - RETRIEVAL call to comment_author() alters data types {'user_meta', 'user'}.
  - Data types: user_meta, user
comment-template.php:102
  - RETRIEVAL call to get_option("cackle_sync") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
comment-template.php:111
  - RETRIEVAL call to get_option("cackle_whitelabel", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
comment-template.php:170
  - RETRIEVAL call to get_option("cackle_sso") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
comment-template.php:172
  - RETRIEVAL call to get_option("cackle_counter") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
counter.php:71
  - RETRIEVAL call to get_option("cackle_counter_rubrics", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
counter.php:71
  - RETRIEVAL call to get_option("cackle_apiId") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
manage.php:1
  - RETRIEVAL call to get_option("cackle_apiId", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
manage.php:23
  - RETRIEVAL call to get_option("cackle_apiId", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
monitor.php:11
  - RETRIEVAL call to get_option("cackle_monitor") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
monitor.php:52
  - RETRIEVAL call to get_option("cackle_posts_update") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
request_handler.php:43
  - RETRIEVAL call to get_option("cackle_manual_export", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
request_handler.php:172
  - RETRIEVAL call to get_option("cackle_manual_sync", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
request_handler.php:191
  - RETRIEVAL call to get_option("cackle_monitor") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
request_handler.php:201
  - RETRIEVAL call to get_option("cackle_monitor_short") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
request_handler.php:211
  - RETRIEVAL call to get_option("cackle_modified_trigger") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
request_handler.php:216
  - RETRIEVAL call to get_option("cackle_posts_update") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
request_handler.php:225
  - RETRIEVAL call to get_option("cackle_monitor") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
request_handler.php:278
  - RETRIEVAL call to get_option("cackle_manual_sync", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
sync.php:32
  - RETRIEVAL call to get_option("cackle_monitor") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
sync.php:38
  - RETRIEVAL call to get_option("cackle_modified_trigger") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
sync.php:74
  - RETRIEVAL call to get_option("cackle_monitor") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
sync.php:90
  - RETRIEVAL call to get_option("cackle_modified_trigger") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
sync.php:95
  - RETRIEVAL call to get_option("cackle_modified_trigger") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
sync.php:142
  - RETRIEVAL call to wp_insert_comment($commentdata). Passed arguments: 0: $commentdata (array). Returns (int|false).
sync.php:265
  - RETRIEVAL call to get_option("gmt_offset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
sync.php:266
  - RETRIEVAL call to get_option("gmt_offset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
sync_handler.php:39
  - RETRIEVAL call to get_option("cackle_sync") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
sync_handler.php:42
  - RETRIEVAL call to get_option("cackle_monitor") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
sync_handler.php:52
  - RETRIEVAL call to get_option("cackle_monitor_short") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
sync_handler.php:62
  - RETRIEVAL call to get_option("cackle_modified_trigger") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
sync_handler.php:67
  - RETRIEVAL call to get_option("cackle_posts_update") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option 

cackle_activate.php:48
  - STORAGE call to update_option("cackle_plugin_version", CACKLE_VERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cackle_activation.php:13
  - STORAGE call to update_option("cackle_apiId", $activation_fields["siteId"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cackle_activation.php:14
  - STORAGE call to update_option("cackle_siteApiKey", $activation_fields["siteApiKey"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cackle_activation.php:15
  - STORAGE call to update_option("cackle_accountApiKey", $activation_fields["accountApiKey"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cackle_activation.php:16
  - STORAGE call to update_option("cackle_lang", $k_req["lang"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cackle_activation.php:17
  - STORAGE call to update_option("cackle_whitelabel", $k_req["whitelabel"]10) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cackle_activation.php:18
  - STORAGE call to update_option("cackle_sso", $activation_fields["sso"]10) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cackle_activation.php:19
  - STORAGE call to update_option("cackle_counter", $activation_fields["counter"]10) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cackle_activation.php:20
  - STORAGE call to update_option("cackle_counter_rubrics", $activation_fields["counter_rubrics"]10) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cackle_activation.php:21
  - STORAGE call to update_option("cackle_sync", $activation_fields["sync"]10) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cackle_activation.php:22
  - STORAGE call to update_option("cackle_correctKey", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cackle_activation.php:33
  - STORAGE call to update_option("cackle_correctKey", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
cackle_api.php:28
  - STORAGE call to update_option($param, $value) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
channel.php:16
  - STORAGE call to update_option("cackle_channel_modified", $now) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
channel.php:43
  - STORAGE call to update_option("cackle_channel_modified", $chan["modify"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
channel.php:61
  - STORAGE call to update_option("cackle_posts_update", $posts_update) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
channel.php:70
  - STORAGE call to update_option("cackle_channel_modified_trigger", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
monitor.php:42
  - STORAGE call to update_option("cackle_monitor", $object) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
monitor.php:48
  - STORAGE call to update_option("cackle_monitor", $object) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
monitor.php:57
  - STORAGE call to update_option("cackle_posts_update", $posts_update) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
monitor.php:79
  - STORAGE call to update_option("cackle_monitor", $object) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
request_handler.php:59
  - STORAGE call to update_option("cackle_manual_export", $manual_export) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
request_handler.php:91
  - STORAGE call to update_option("cackle_manual_export", $manual_export) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
request_handler.php:139
  - STORAGE call to update_option("cackle_manual_export", $manual_export) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
request_handler.php:160
  - STORAGE call to update_option("cackle_manual_export", $manual_export) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
request_handler.php:182
  - STORAGE call to delete_option("cackle_monitor") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
request_handler.php:183
  - STORAGE call to delete_option("cackle_monitor_short") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
request_handler.php:184
  - STORAGE call to delete_option("cackle_modified_trigger") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
request_handler.php:186
  - STORAGE call to delete_option("cackle_posts_update") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
request_handler.php:187
  - STORAGE call to delete_option("cackle_channel_modified_trigger") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
request_handler.php:198
  - STORAGE call to update_option("cackle_monitor", $object) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
request_handler.php:207
  - STORAGE call to update_option("cackle_monitor_short", $object) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
request_handler.php:213
  - STORAGE call to update_option("cackle_modified_trigger", $modified_triger) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
request_handler.php:218
  - STORAGE call to update_option("cackle_posts_update", $posts_update) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
request_handler.php:230
  - STORAGE call to update_option("cackle_monitor", $object) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
request_handler.php:284
  - STORAGE call to update_option("cackle_channel_modified_first", time() * 1000) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
request_handler.php:310
  - STORAGE call to update_option("cackle_manual_sync", $manual_sync) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
request_handler.php:331
  - STORAGE call to update_option("cackle_monitor", $object) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
request_handler.php:333
  - STORAGE call to update_option("cackle_manual_sync", $manual_sync) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
request_handler.php:348
  - STORAGE call to update_option("cackle_manual_sync", $manual_sync) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
sync.php:37
  - STORAGE call to update_option("cackle_monitor", $object) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
sync.php:58
  - STORAGE call to update_option("cackle_monitor", $object) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
sync.php:61
  - STORAGE call to update_option("cackle_modified_trigger", $modified_triger) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
sync.php:67
  - STORAGE call to update_option("cackle_monitor", $object) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
sync.php:79
  - STORAGE call to update_option("cackle_monitor", $object) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
sync.php:92
  - STORAGE call to update_option("cackle_modified_trigger", $modified_triger) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
sync.php:97
  - STORAGE call to update_option("cackle_modified_trigger", $modified_triger) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
sync_handler.php:49
  - STORAGE call to update_option("cackle_monitor", $object) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
sync_handler.php:58
  - STORAGE call to update_option("cackle_monitor_short", $object) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
sync_handler.php:64
  - STORAGE call to update_option("cackle_modified_trigger", $modified_triger) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
sync_handler.php:69
  - STORAGE call to update_option("cackle_posts_update", $posts_update) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option 

request_handler.php:182
  - DELETION call to delete_option("cackle_monitor") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
request_handler.php:183
  - DELETION call to delete_option("cackle_monitor_short") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
request_handler.php:184
  - DELETION call to delete_option("cackle_modified_trigger") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
request_handler.php:186
  - DELETION call to delete_option("cackle_posts_update") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
request_handler.php:187
  - DELETION call to delete_option("cackle_channel_modified_trigger") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

By data type:
email
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
none
	PHPIncludedDetector.(unknown) - set()
	WordPressRetrievalDetector.wp_insert_comment($commentdata) - set()
option
	DeletionDetector.delete_option("cackle_channel_modified_trigger") - {'option'}
	WordPressRetrievalDetector.get_option("cackle_sync") - {'option'}
	WordPressRetrievalDetector.get_option("cackle_apiId", "") - {'option'}
	WordPressStorageDetector.update_option("cackle_manual_sync", $manual_sync) - {'option'}
	DeletionDetector.delete_option("cackle_posts_update") - {'option'}
	WordPressRetrievalDetector.get_option("cackle_counter_rubrics", 1) - {'option'}
	WordPressStorageDetector.update_option("cackle_channel_modified", $chan["modify"]) - {'option'}
	WordPressStorageDetector.update_option("cackle_posts_update", $posts_update) - {'option'}
	DeletionDetector.delete_option("cackle_monitor") - {'option'}
	WordPressRetrievalDetector.get_option("cackle_manual_sync") - {'option'}
	WordPressRetrievalDetector.get_option("cackle_sync", "") - {'option'}
	WordPressStorageDetector.update_option("cackle_accountApiKey", $activation_fields["accountApiKey"]) - {'option'}
	DeletionDetector.delete_option("cackle_monitor_short") - {'option'}
	WordPressRetrievalDetector.get_option("cackle_manual_sync", "") - {'option'}
	WordPressRetrievalDetector.get_option("cackle_modified_trigger") - {'option'}
	WordPressRetrievalDetector.get_option("cackle_modified_trigger") - {'option'}
	WordPressRetrievalDetector.get_option("siteurl") - {'option'}
	WordPressRetrievalDetector.get_option("gmt_offset") - {'option'}
	WordPressRetrievalDetector.get_option("cackle_sso") - {'option'}
	WordPressStorageDetector.update_option("cackle_counter_rubrics", $activation_fields["counter_rubrics"]10) - {'option'}
	WordPressRetrievalDetector.get_option("cackle_whitelabel", "") - {'option'}
	WordPressRetrievalDetector.get_option("cackle_counter_rubrics", 1) - {'option'}
	WordPressRetrievalDetector.get_option("cackle_counter") - {'option'}
	WordPressStorageDetector.update_option("cackle_monitor", $object) - {'option'}
	WordPressStorageDetector.delete_option("cackle_posts_update") - {'option'}
	WordPressRetrievalDetector.get_option("cackle_correctKey", "") - {'option'}
	WordPressRetrievalDetector.get_option("cackle_monitor") - {'option'}
	WordPressStorageDetector.update_option("cackle_channel_modified", $now) - {'option'}
	WordPressStorageDetector.delete_option("cackle_monitor_short") - {'option'}
	WordPressRetrievalDetector.get_option("cackle_monitor") - {'option'}
	WordPressRetrievalDetector.get_option("cackle_posts_update") - {'option'}
	WordPressRetrievalDetector.get_option("cackle_manual_sync", "") - {'option'}
	WordPressRetrievalDetector.get_option("cackle_channel_modified") - {'option'}
	WordPressStorageDetector.update_option("cackle_correctKey", 0) - {'option'}
	WordPressStorageDetector.update_option("cackle_siteApiKey", $activation_fields["siteApiKey"]) - {'option'}
	WordPressRetrievalDetector.get_option("cackle_apiId", "") - {'option'}
	WordPressStorageDetector.update_option("cackle_sync", $activation_fields["sync"]10) - {'option'}
	DeletionDetector.delete_option("cackle_modified_trigger") - {'option'}
	WordPressStorageDetector.update_option("cackle_counter", $activation_fields["counter"]10) - {'option'}
	WordPressRetrievalDetector.get_option("cackle_whitelabel", 0) - {'option'}
	WordPressRetrievalDetector.get_option("cackle_sync") - {'option'}
	WordPressRetrievalDetector.get_option("cackle_monitor_short") - {'option'}
	WordPressRetrievalDetector.get_option("cackle_accountApiKey") - {'option'}
	WordPressStorageDetector.update_option("cackle_monitor", $object) - {'option'}
	WordPressStorageDetector.update_option("cackle_apiId", $activation_fields["siteId"]) - {'option'}
	WordPressStorageDetector.update_option("cackle_lang", $k_req["lang"]) - {'option'}
	WordPressStorageDetector.update_option($param, $value) - {'option'}
	WordPressStorageDetector.delete_option("cackle_channel_modified_trigger") - {'option'}
	WordPressRetrievalDetector.get_option("cackle_apiId") - {'option'}
	WordPressStorageDetector.update_option("cackle_posts_update", $posts_update) - {'option'}
	WordPressStorageDetector.update_option("cackle_whitelabel", $k_req["whitelabel"]10) - {'option'}
	WordPressRetrievalDetector.get_option("gmt_offset") - {'option'}
	WordPressStorageDetector.delete_option("cackle_modified_trigger") - {'option'}
	WordPressRetrievalDetector.get_option("cackle_apiId", "") - {'option'}
	WordPressStorageDetector.update_option("cackle_channel_modified_first", time() * 1000) - {'option'}
	WordPressStorageDetector.update_option("cackle_manual_export", $manual_export) - {'option'}
	WordPressStorageDetector.update_option("cackle_modified_trigger", $modified_triger) - {'option'}
	WordPressRetrievalDetector.get_option("cackle_sync") - {'option'}
	WordPressRetrievalDetector.get_option("cackle_counter", "") - {'option'}
	WordPressRetrievalDetector.get_option("cackle_modified_trigger") - {'option'}
	WordPressRetrievalDetector.get_option("cackle_modified_trigger") - {'option'}
	WordPressStorageDetector.delete_option("cackle_monitor") - {'option'}
	WordPressRetrievalDetector.get_option("cackle_channel_modified_first", $now) - {'option'}
	WordPressStorageDetector.update_option("cackle_monitor", $object) - {'option'}
	WordPressStorageDetector.update_option("cackle_monitor", $object) - {'option'}
	WordPressRetrievalDetector.get_option("cackle_channel_modified") - {'option'}
	WordPressRetrievalDetector.get_option("cackle_posts_update") - {'option'}
	WordPressRetrievalDetector.get_option("cackle_posts_update") - {'option'}
	WordPressRetrievalDetector.get_option("cackle_plugin_version", "4.07") - {'option'}
	WordPressStorageDetector.update_option("cackle_plugin_version", CACKLE_VERSION) - {'option'}
	WordPressRetrievalDetector.get_option("cackle_monitor") - {'option'}
	WordPressRetrievalDetector.get_option("cackle_channel_modified_trigger") - {'option'}
	WordPressRetrievalDetector.get_option("cackle_manual_export") - {'option'}
	WordPressStorageDetector.update_option("cackle_monitor", $object) - {'option'}
	WordPressStorageDetector.update_option("cackle_monitor", $object) - {'option'}
	WordPressRetrievalDetector.get_option($param, $default) - {'option'}
	WordPressRetrievalDetector.get_option("cackle_siteApiKey") - {'option'}
	WordPressRetrievalDetector.get_option("cackle_modified_trigger") - {'option'}
	WordPressStorageDetector.update_option("cackle_manual_sync", $manual_sync) - {'option'}
	WordPressStorageDetector.update_option("cackle_monitor", $object) - {'option'}
	WordPressStorageDetector.update_option("cackle_monitor_short", $object) - {'option'}
	WordPressRetrievalDetector.get_option("cackle_manual_export", "") - {'option'}
	WordPressStorageDetector.update_option("cackle_sso", $activation_fields["sso"]10) - {'option'}
	WordPressStorageDetector.update_option("cackle_manual_export", $manual_export) - {'option'}
	WordPressRetrievalDetector.get_option("cackle_apiId", "") - {'option'}
	WordPressStorageDetector.update_option("cackle_channel_modified_trigger", 1) - {'option'}
	WordPressRetrievalDetector.get_option("cackle_siteApiKey") - {'option'}
	WordPressRetrievalDetector.get_option("cackle_monitor") - {'option'}
	WordPressRetrievalDetector.get_option("cackle_sso", "") - {'option'}
	WordPressStorageDetector.update_option("cackle_posts_update", $posts_update) - {'option'}
	WordPressRetrievalDetector.get_option("cackle_channel_modified", 0) - {'option'}
	WordPressStorageDetector.update_option("cackle_manual_export", $manual_export) - {'option'}
	WordPressStorageDetector.update_option("cackle_modified_trigger", $modified_triger) - {'option'}
	WordPressRetrievalDetector.get_option("cackle_apiId") - {'option'}
	WordPressRetrievalDetector.get_option("cackle_accountApiKey") - {'option'}
	WordPressStorageDetector.update_option("cackle_correctKey", 1) - {'option'}
	WordPressRetrievalDetector.get_option("cackle_apiId") - {'option'}
	WordPressRetrievalDetector.get_option("cackle_lang", "") - {'option'}
	WordPressStorageDetector.update_option("cackle_monitor_short", $object) - {'option'}
	WordPressStorageDetector.update_option("cackle_modified_trigger", $modified_triger) - {'option'}
	WordPressStorageDetector.update_option("cackle_modified_trigger", $modified_triger) - {'option'}
	WordPressStorageDetector.update_option("cackle_manual_sync", $manual_sync) - {'option'}
	WordPressStorageDetector.update_option("cackle_monitor", $object) - {'option'}
	WordPressRetrievalDetector.get_option("cackle_sso", "") - {'option'}
	WordPressStorageDetector.update_option("cackle_manual_export", $manual_export) - {'option'}
	WordPressRetrievalDetector.get_option("cackle_accountApiKey", "") - {'option'}
	WordPressStorageDetector.update_option("cackle_monitor", $object) - {'option'}
	WordPressRetrievalDetector.get_option("cackle_monitor") - {'option'}
	WordPressStorageDetector.update_option("cackle_modified_trigger", $modified_triger) - {'option'}
	WordPressStorageDetector.update_option("cackle_monitor", $object) - {'option'}
	WordPressStorageDetector.update_option("cackle_monitor", $object) - {'option'}
	WordPressStorageDetector.update_option("cackle_posts_update", $posts_update) - {'option'}
	WordPressRetrievalDetector.get_option("cackle_posts_update") - {'option'}
	WordPressRetrievalDetector.get_option("cackle_monitor_short") - {'option'}
	WordPressRetrievalDetector.get_option("cackle_monitor") - {'option'}
	WordPressRetrievalDetector.get_option("cackle_siteApiKey", "") - {'option'}
	WordPressRetrievalDetector.get_option("cackle_siteApiKey") - {'option'}
user
	WordPressRetrievalDetector.comment_author() - {'user_meta', 'user'}
	WordPressRetrievalDetector.comment_author() - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_currentuserinfo() - {'user_meta', 'user'}
user_meta
	WordPressRetrievalDetector.comment_author() - {'user_meta', 'user'}
	WordPressRetrievalDetector.comment_author() - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_currentuserinfo() - {'user_meta', 'user'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:16.695457.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 3111 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.745509.

1000 STORE_REACHES edges created
2000 STORE_REACHES edges created
3000 STORE_REACHES edges created
3111 STORE_REACHES edges created
3111 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 52 nodes as PERSONAL
In total, tainted 52 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 1 nodes as ENCRYPTED
In total, tainted 1 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:01.268156.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:01:00.991195!
DELETION call to delete_option("cackle_monitor") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("cackle_monitor_short") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("cackle_modified_trigger") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("cackle_posts_update") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("cackle_channel_modified_trigger") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
MD5 called with parameters [user_data, siteApiKey, timestamp]. Ignore if [user_data, siteApiKey, timestamp] does not contain personal information.,md5,None
object property '$current_user->user_email' of personal types {'email'} is found.,,None
object property '$comment->comment_author_email' of personal types {'email'} is found.,,None
object property '$comment->comment_author_email' of personal types {'email'} is found.,,None
variable '$comment_author_email' of personal types {'email'} is found.,,None
variable '$comment_author_email' of personal types {'email'} is found.,,None
variable '$comment_author_email' of personal types {'email'} is found.,,None
variable '$comment_author_email' of personal types {'email'} is found.,,None
RETRIEVAL call to get_option("cackle_plugin_version", "4.07") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_accountApiKey") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_apiId") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_siteApiKey") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_apiId", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_siteApiKey", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_accountApiKey", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_sso", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_sync", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_counter", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_counter_rubrics", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_manual_sync") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_manual_export") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_whitelabel", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_lang", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_sso", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_correctKey", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_apiId") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_accountApiKey") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_siteApiKey") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($param, $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_channel_modified_trigger") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_channel_modified_first", $now) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_channel_modified") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_channel_modified") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_channel_modified", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_posts_update") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_sync") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_sync") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_whitelabel", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_sso") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_counter") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("siteurl") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_currentuserinfo() alters data types {'user_meta', 'user'}. Returns (bool|WP_User).,None,None
RETRIEVAL call to get_option("cackle_siteApiKey") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_apiId", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to comment_author() alters data types {'user_meta', 'user'}.,None,None
RETRIEVAL call to comment_author() alters data types {'user_meta', 'user'}.,None,None
RETRIEVAL call to get_option("cackle_counter_rubrics", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_apiId") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_apiId", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_apiId", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_monitor") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_posts_update") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_manual_sync", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_monitor") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_monitor_short") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_modified_trigger") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_posts_update") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_monitor") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_manual_sync", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_manual_export", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to wp_insert_comment($commentdata). Passed arguments: 0: $commentdata (array). Returns (int|false).,None,None
RETRIEVAL call to get_option("gmt_offset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("gmt_offset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_monitor") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_modified_trigger") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_monitor") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_modified_trigger") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_modified_trigger") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_sync") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_monitor") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_monitor_short") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_modified_trigger") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("cackle_posts_update") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
STORAGE call to update_option("cackle_plugin_version", CACKLE_VERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cackle_apiId", $activation_fields["siteId"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cackle_siteApiKey", $activation_fields["siteApiKey"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cackle_accountApiKey", $activation_fields["accountApiKey"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cackle_lang", $k_req["lang"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cackle_whitelabel", $k_req["whitelabel"]10) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cackle_sso", $activation_fields["sso"]10) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cackle_counter", $activation_fields["counter"]10) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cackle_counter_rubrics", $activation_fields["counter_rubrics"]10) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cackle_sync", $activation_fields["sync"]10) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cackle_correctKey", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cackle_correctKey", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option($param, $value) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cackle_channel_modified", $now) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cackle_channel_modified", $chan["modify"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cackle_posts_update", $posts_update) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cackle_channel_modified_trigger", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cackle_monitor", $object) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cackle_monitor", $object) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cackle_posts_update", $posts_update) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cackle_monitor", $object) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cackle_manual_export", $manual_export) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cackle_manual_export", $manual_export) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("cackle_monitor") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("cackle_monitor_short") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("cackle_modified_trigger") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("cackle_posts_update") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("cackle_channel_modified_trigger") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("cackle_monitor", $object) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cackle_monitor_short", $object) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cackle_modified_trigger", $modified_triger) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cackle_posts_update", $posts_update) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cackle_monitor", $object) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cackle_channel_modified_first", time() * 1000) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cackle_manual_sync", $manual_sync) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cackle_monitor", $object) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cackle_manual_sync", $manual_sync) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cackle_manual_sync", $manual_sync) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cackle_manual_export", $manual_export) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cackle_manual_export", $manual_export) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cackle_monitor", $object) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cackle_monitor", $object) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cackle_modified_trigger", $modified_triger) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cackle_monitor", $object) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cackle_monitor", $object) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cackle_modified_trigger", $modified_triger) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cackle_modified_trigger", $modified_triger) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cackle_monitor", $object) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cackle_monitor_short", $object) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cackle_modified_trigger", $modified_triger) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("cackle_posts_update", $posts_update) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] Storage check is NONE 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['encryption', 'third_party'] 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? True 

No findings
