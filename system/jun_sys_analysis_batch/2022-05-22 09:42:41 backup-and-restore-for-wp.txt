Timeout in resolving values
Timeout in running neo4j query
Running Main.py on backup-and-restore-for-wp

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:02.483611.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.690966.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 0 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.402803.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 2 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.875262.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 708 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:00.962083.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 44 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:01.517280.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
Added 34 PHP_REACHES edges.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.109406.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 337 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:12.273009.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 6119
Added 4994 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 44753
Added 38634 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:03.958030.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/backup-and-restore-for-wp/miniorange_backup_setting.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/backup-and-restore-for-wp/uninstall.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/backup-and-restore-for-wp/controllers/account.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/backup-and-restore-for-wp/controllers/backup_ajax.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/backup-and-restore-for-wp/controllers/backup_controller.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/backup-and-restore-for-wp/controllers/backup_created_report.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/backup-and-restore-for-wp/controllers/backup_created_result.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/backup-and-restore-for-wp/controllers/backup_schdule.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/backup-and-restore-for-wp/controllers/backup_upgrade.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/backup-and-restore-for-wp/controllers/main_controller.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/backup-and-restore-for-wp/controllers/navbar.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/backup-and-restore-for-wp/controllers/support.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/backup-and-restore-for-wp/database/database_functions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/backup-and-restore-for-wp/handler/backup.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/backup-and-restore-for-wp/handler/feedback_form.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/backup-and-restore-for-wp/helper/constants.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/backup-and-restore-for-wp/helper/curl.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/backup-and-restore-for-wp/helper/dashboard_security_notification.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/backup-and-restore-for-wp/helper/messages.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/backup-and-restore-for-wp/helper/mobackup_api.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/backup-and-restore-for-wp/views/backup_created_report.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/backup-and-restore-for-wp/views/backup_schdule.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/backup-and-restore-for-wp/views/backup_setting_view.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/backup-and-restore-for-wp/views/backup_upgrade.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/backup-and-restore-for-wp/views/feedback_form.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/backup-and-restore-for-wp/views/navbar.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/backup-and-restore-for-wp/views/support.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/backup-and-restore-for-wp/views/account/login.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/backup-and-restore-for-wp/views/account/profile.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/backup-and-restore-for-wp/views/account/register.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:02.453321.

2 REACHES edges created
708 PHP_REACHES edges created
2 CALLS edges created
15 PHP_REACHES edges created
12 CALLS edges created
2 PHP_REACHES edges created
13 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
5365 PHP_REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
14000 PHP_REACHES edges created
15000 PHP_REACHES edges created
16000 PHP_REACHES edges created
17000 PHP_REACHES edges created
18000 PHP_REACHES edges created
19000 PHP_REACHES edges created
20000 PHP_REACHES edges created
21000 PHP_REACHES edges created
22000 PHP_REACHES edges created
23000 PHP_REACHES edges created
24000 PHP_REACHES edges created
25000 PHP_REACHES edges created
26000 PHP_REACHES edges created
27000 PHP_REACHES edges created
28000 PHP_REACHES edges created
29000 PHP_REACHES edges created
30000 PHP_REACHES edges created
31000 PHP_REACHES edges created
32000 PHP_REACHES edges created
33000 PHP_REACHES edges created
34000 PHP_REACHES edges created
35000 PHP_REACHES edges created
36000 PHP_REACHES edges created
37000 PHP_REACHES edges created
38000 PHP_REACHES edges created
38634 PHP_REACHES edges created
44753 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 2192 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.185619.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 2 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:02.607201.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 7316
Added 150 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:06.593036.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 96 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.232206.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.185424.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 7316
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:01.374602.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.014049.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.034071.

2 CALLS edges created
246 PHP_REACHES edges created
248 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 214 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.129757.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
9 SQL operations to process.
CREATE TABLE $this (`id` int NOT NULL AUTO_INCREMENT,
		`backup_id` mediumtext NOT NULL, `file_name` mediumtext NOT NULL , `created_timestamp` bigint,`plugin_path` mediumtext NOT NULL , UNIQUE KEY id (id) );
SQL command (CREATE TABLE $this (`id` int NOT NULL AUTO_INCREMENT, `backup_id` mediumtext NOT NULL, `file_name` mediumtext NOT NULL , `created_timestamp` bigint,`plugin_path` mediumtext NOT NULL , UNIQUE KEY id (id) );) cannot be parsed correct.
SELECT $column_name FROM $this WHERE user_id = wp_get_current_user();
SQL command (SELECT $column_name FROM $this WHERE user_id = wp_get_current_user();) cannot be parsed correct.
SELECT plugin_path,file_name,created_timestamp,id FROM $this
SQL command (SELECT plugin_path,file_name,created_timestamp,id FROM $this) cannot be parsed correct.
DELETE FROM $this
		WHERE id = $postData_id
SQL command (DELETE FROM $this WHERE id = $postData_id) cannot be parsed correct.
SHOW TABLES
SQL command (SHOW TABLES) cannot be parsed correct.
SHOW CREATE TABLE  $table_0
SQL command (SHOW CREATE TABLE $table_0) cannot be parsed correct.
SHOW CREATE TABLE  $table
SQL command (SHOW CREATE TABLE $table) cannot be parsed correct.
SELECT * FROM $table
SQL command (SELECT * FROM $table) cannot be parsed correct.
DROP TABLE IF EXISTS $wpdbwpns_backup_created_report
SQL command (DROP TABLE IF EXISTS $wpdbwpns_backup_created_report) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [4080, 4128, 4242, 4382, 5613, 5668, 5796, 5845, 9787]
Added 0 SQL nodes. 0 out of 9 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:02.888710.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'Request Error:curl_error($ch)'' cannot be parsed correct.
HTML code '$'<div style=\'width:100%;background-color:#555f5f;padding-top:10px;\'>
                    <div style=\'font-size:20px;color:white;text-align:center\'>
                      <strong style=\'font-weight:300;\'>Backup Created<span style=\'color:orange;\'>[$last_backup ]</span></strong>
                    </div>
                    <hr>
                    <div>
                <table>
                <tbody>
                       
                  <tr>
                  <td style=\'border-collapse:collapse!important;color:#0a0a0a;line-height:1.3;margin:0;padding:0;text-align:left;vertical-align:top;word-wrap:normal\'>
                    <table dir=\'ltr\'   style=\'table-layout:fixed;margin:10px 0 20px 0;padding:0;vertical-align:top;width:100%\'>
                      <tbody>
                        <tr>
                          <td style=\'text-align:center;font-size:36px;color:#ffffff;font-weight:400\' ><strong>$BackupDbQueries->barfw_get_number_of_plugin_backup()_plugin_count</strong></td>
                          <td style=\'text-align:center;font-size:36px;color:#ffffff;font-weight:400\'><strong>$BackupDbQueries->barfw_get_number_of_plugin_backup()_themes_count</strong></td>
                          <td style=\'text-align:center;font-size:36px;color:#ffffff;font-weight:400\'><strong>$BackupDbQueries->barfw_get_number_of_plugin_backup()_wp_files_count</strong></td>
                          <td style=\'text-align:center;font-size:36px;color:#ffffff;font-weight:400\'><strong>$BackupDbQueries->barfw_get_number_of_plugin_backup()_db_count</strong></td>
                       
                        </tr>
                       
                        <tr>
                        <td>&nbsp;
                        </td>
                        <td>
                        </td>
                        </tr>
                        <tr>
                        <td style=\'font-size:18px;color:#ffffff;text-align:center\'><strong style=\'font-weight:300;\'>Plugin Backup</strong></td>
                        <td style=\'font-size:18px;color:#ffffff;text-align:center\'><strong style=\'font-weight:300;\'>Themes Backup</strong></td>
                        <td style=\'font-size:18px;color:#ffffff;text-align:center\'><strong style=\'font-weight:300;\'>WP File Backup</strong></td>
                        <td style=\'font-size:18px;color:#ffffff;text-align:center\'><strong style=\'font-weight:300;\'>Database Backup</strong></td>
                        
                        </tr>
                     </tbody>
                    </table>
                    
                  </tr>  
              </tbody>
              </table>
              </div>
              <a class=\'button button-primary\' style=\'background-color:#f0a702;width:100%;text-align:center\' href=\'admin.php?page=backup\'><h3 style=\'background-color:#f0a702\'>Take Backup</h3></a>
              </div>'' cannot be parsed correct.
HTML code '$'$content'' cannot be parsed correct.
HTML code '$'	<div class="is-dismissible notice notice-warning"> <p>$content</p> </div>'' cannot be parsed correct.
HTML code '$'	<div class="notice notice-error is-dismissible"> <p>$content</p> </div>'' cannot be parsed correct.
HTML code '$'	<div class="notice notice-success"> <p>$content</p> </div>'' cannot be parsed correct.
HTML code '$'	<form name="f" method="post" action="">
			<input type="hidden" name="option" value="mo_wpns_verify_customer" />
			<input type="hidden" name="mo_eb_login_nonce" value="wp_create_nonce("mo-eb-login-nonce")" />
			<div class="mo_wpns_divided_layout">
				<div class="mo_wpns_setting_layout">
					<h3>Login with miniOrange</h3>
					<p><b>It seems you already have an account with miniOrange. Please enter your miniOrange email and password.</td><a target="_blank" href="https://login.xecurify.com/moas/idp/resetpassword"> Click here if you forgot your password?</a></b></p>
					<table class="mo_wpns_settings_table">
						<tr>
							<td><b><font color="#FF0000">*</font>Email:</b></td>
							<td><input class="mo_wpns_table_textbox" type="email" name="email"
								required placeholder="person@example.com"
								value="$admin_email" /></td>
						</tr>
						<tr>
							<td><b><font color="#FF0000">*</font>Password:</b></td>
							<td><input class="mo_wpns_table_textbox" required type="password"
								name="password" placeholder="Enter your miniOrange password" /></td>
						</tr>
						<tr>
							<td>&nbsp;</td>
							<td><input type="submit" class="mo_wpns_button mo_wpns_button1" />
								<a href="#cancel_link" class="mo_wpns_button mo_wpns_button1">New User? Register</a>
						</tr>
					</table>
				</div>
			</div>
		</form>
		<form id="cancel_form" method="post" action="">
			<input type="hidden" name="option" value="mo_wpns_cancel" />
			<input type="hidden" name="mo_eb_cancel_nonce" value="wp_create_nonce("mo-eb-cancel-nonce")" />

		</form>
		<script>
			jQuery(document).ready(function(){
				jQuery(\'a[href="#cancel_link"]\').click(function(){
					jQuery("#cancel_form").submit();
				});		
			});
		</script>'' cannot be parsed correct.
HTML code '$'
    <div class="mo_wpns_divided_layout">
        <div class="mo_wpns_setting_layout" >
          <div>
                <h4>Thank You for registering with miniOrange.</h4>
                <h3>Your Profile</h3>
                <table border="1" style="background-color:#FFFFFF; border:1px solid #CCCCCC; border-collapse: collapse; padding:0px 0px 0px 10px; margin:2px; width:85%">
                    <tr>
                        <td style="width:45%; padding: 10px;">Username/Email</td>
                        <td style="width:55%; padding: 10px;">$email</td>
                    </tr>
                    <tr>
                        <td style="width:45%; padding: 10px;">Customer ID</td>
                        <td style="width:55%; padding: 10px;">$key</td>
                    </tr>
                    <tr>
                        <td style="width:45%; padding: 10px;">API Key</td>
                        <td style="width:55%; padding: 10px;">$api</td>
                    </tr>
                    <tr>
                        <td style="width:45%; padding: 10px;">Token Key</td>
                        <td style="width:55%; padding: 10px;">$token</td>
                    </tr>
                </table>
                <br/>
                <p><a href="#mo_wpns_forgot_password_link">Click here</a> if you forgot your password to your miniOrange account.</p>
                <a target="_blank" href="https://login.xecurify.com/moas/initializepayment" id="redirect_to_payment" hidden></a>
            </div>
        </div>
    </div>
    <form id="forgot_password_form" method="post" action="">
        <input type="hidden" name="option" value="mo_wpns_reset_password" />
        <input type="hidden" name="mo_eb_forget_nonce" value="wp_create_nonce("mo-eb-forget-nonce")" />

    </form>
    <form id="is_from_upgrade" method="post" action="admin.php?page=mo_eb_backup_upgrade">
    </form>
	
	<script>
		jQuery(document).ready(function(){
			jQuery(\'a[href="#mo_wpns_forgot_password_link"]\').click(function(){
				jQuery("#forgot_password_form").submit();
			}); 
		});
	</script>'' cannot be parsed correct.
HTML code '$'<!--Register with miniOrange-->
	<form name="f" method="post" action="">
		<input type="hidden" name="option" value="mo_wpns_register_customer" />
		<input type="hidden" name="mo_eb_register_nonce" value="wp_create_nonce("mo-eb-register-nonce")" />
		<div class="mo_wpns_divided_layout">
		<div class="mo_wpns_setting_layout" style="margin-bottom:30px;">
			
				<h3>Register with miniOrange</h3>
				<p>Just complete the short registration below to configure miniOrange 2-Factor plugin. Please enter a valid email id that you have access to.</p>
				<table class="mo_wpns_settings_table">
					<tr>
						<td><b><font color="#FF0000">*</font>Email:</b></td>
						<td><input class="mo_wpns_table_textbox" type="email" name="email"
							required placeholder="person@example.com"
							value="wp_get_current_user()" /></td>
					</tr>

					<tr>
						<td><b><font color="#FF0000">*</font>Password:</b></td>
						<td><input class="mo_wpns_table_textbox" required type="password"
							name="password" placeholder="Choose your password (Min. length 6)" /></td>
					</tr>
					<tr>
						<td><b><font color="#FF0000">*</font>Confirm Password:</b></td>
						<td><input class="mo_wpns_table_textbox" required type="password"
							name="confirmPassword" placeholder="Confirm your password" /></td>
					</tr>
					<tr>
						<td>&nbsp;</td>
						<td><br /><input type="submit" name="submit" value="Register" style="width:100px;"
							class="mo_wpns_button mo_wpns_button1" />
							<a class="mo_wpns_button mo_wpns_button1" href="#mo2f_account_exist">Already Account? SIGN IN</a>

					</tr>
				</table>
		</div>	
		</div>
	</form>
	 <form name="f" method="post" action="" class="mo2f_verify_customerform">
        <input type="hidden" name="option" value="mo2f_goto_verifycustomer">
         <input type="hidden" name="mo2f_goto_verifycustomer_nonce"
               value=wp_create_nonce("mo2f-goto-verifycustomer-nonce") >
       </form>'' cannot be parsed correct.
HTML code '$'barfw_show_backup_results()'' cannot be parsed correct.
HTML code '$'<tr><td style=text-align:center>date("m/d/Y H:i:s", $timestamp)</td>'' cannot be parsed correct.
HTML code '$'<td style=text-align:center>0</td>'' cannot be parsed correct.
HTML code '$'<td><form action=\'\' method=\'POST\' enctype=\'multipart/form-data\'>
        	  <input type=\'hidden\' value=\'mo_wpns_backup_download\' name=\'option\' />
              <input type=\'hidden\' value=$file_name/0 name=\'file_name\' />
              <input type=\'hidden\' value=0 name=\'file_path\' />
              <input type=\'hidden\' value=wp_create_nonce("mo-wpns-download-nonce") name=\'download_nonce\'/>
              <input type=\'submit\' value=\'Download\' name=\'download\' class=\'upload btn btn-info btn-xs\'>
              </form>
              </td>'' cannot be parsed correct.
HTML code '$'<td><button type=\'button\' onclick="barfw_delete(this, addslashes(esc_html($file_path))\',\'0\',0)" name=\'delete\' id=\'delete\'  class=\'btn btn-info btn-xs delete\'>Delete</button></td'' cannot be parsed correct.
HTML code '$'wp_create_nonce("delete_entry")'' cannot be parsed correct.
HTML code '$'$file_backup_time'' cannot be parsed correct.
HTML code '$'$db_eb_backup_time'' cannot be parsed correct.
HTML code '$'$file_day $file_date $file_time'' cannot be parsed correct.
HTML code '$'$db_day $db_date $db_time'' cannot be parsed correct.
HTML code '$'wp_create_nonce("wpns-schedule-backup")'' cannot be parsed correct.
HTML code '$'$google_imag_path'' cannot be parsed correct.
HTML code '$'$dropbox_img_path'' cannot be parsed correct.
HTML code '$'wp_create_nonce("wpns-backup-settings")'' cannot be parsed correct.
HTML code '$'<div id=\'filebackupmessage\'><h2>DO NOT :</h2><ol><li>Close this browser</li><li>Reload this page</li><li>Click the Stop or Back button.</li></ol><h2>Untill your file backup is completed</h2></div><br/><div class=\'filebackupmessage\'><h2><div id=\'backupinprogress\'> BACKUP IN PROGRESS</div></h2></div><div id=\'fileloader\' ><img  src=\"plugins_url()/plugin_basename($plugin_path)/includes/images/loader.gif\"></div>'' cannot be parsed correct.
HTML code '$'Backup is Completed. Check '' cannot be parsed correct.
HTML code '$' file in <b>uploads/miniorangebackup</b> folder.'' cannot be parsed correct.
HTML code '$'/moas/login'' cannot be parsed correct.
HTML code '$'get_option("mo2f_email")'' cannot be parsed correct.
HTML code '$'/moas/initializepayment'' cannot be parsed correct.
HTML code '$'wp_create_nonce("miniorange-eb-user-reg-to-upgrade-nonce")'' cannot be parsed correct.
HTML code '$'wp_create_nonce("mo-eb-feedback-nonce")'' cannot be parsed correct.
HTML code '$'$imagepathangry.png'' cannot be parsed correct.
HTML code '$'$imagepathsad.png'' cannot be parsed correct.
HTML code '$'$imagepathnormal1.png'' cannot be parsed correct.
HTML code '$'$imagepathsmile.png'' cannot be parsed correct.
HTML code '$'$imagepathhappy.png'' cannot be parsed correct.
HTML code '$'$email'' cannot be parsed correct.
HTML code '$'$imagepath61456.png'' cannot be parsed correct.
HTML code '$'wp_create_nonce("mo-eb-skip-nonce")'' cannot be parsed correct.
HTML code '$'<div class="wrap">
				<div><img  style="float:left;margin-top:5px;" src="$logo_url"></div>
				<h1>
					miniOrange Website Backup &nbsp;
					<a class="add-new-h2 " href="$profile_url">Account</a>	
				</h1>

		</div'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'$setting_url'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'$schdule_url'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'$report_url'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'$upgrade_url'' cannot be parsed correct.
HTML code '$'	
		<div class="mo_wpns_divided_layout_2">

		<div class="mo_wpns_support_layout">
			<img src="dirname(plugin_dir_url())DIRECTORY_SEPARATORincludesDIRECTORY_SEPARATORimagesDIRECTORY_SEPARATORsupport3.png">
			<h1>Support</h1>
			<p>Need any help? We are available any time, Just send us a query so we can help you.</p>
				<form name="f" method="post" action="">
					<input type="hidden" name="option" value="mo_wpns_send_query"/>
					<input type="hidden" name="mo_eb_support_nonce" value="wp_create_nonce("mo-eb-support-nonce")"/>
					<table class="mo_wpns_settings_table">
						<tr><td>
							<input type="email" class="mo_wpns_table_textbox" id="query_email" name="query_email" value="$email" placeholder="Enter your email" required />
							</td>
						</tr>
						<tr><td>
							<input type="text" class="mo_wpns_table_textbox" name="query_phone" id="query_phone" value="$phone" placeholder="Enter your phone"/>
							</td>
						</tr>
						<tr>
							<td>
								<textarea id="query" name="query" class="mo_wpns_settings_textarea" style="resize: vertical;width:100%" cols="52" rows="7" placeholder="Write your query here"></textarea>
							</td>
						</tr>
					</table>
					<input type="submit" name="send_query" id="send_query" value="Submit Query" style="margin-bottom:3%;" class="mo_wpns_button mo_wpns_button1" />
				</form>
				<br />			
		</div>
		</div>
		<script>
			function moSharingSizeValidate(e){
				var t=parseInt(e.value.trim());t>60?e.value=60:10>t&&(e.value=10)
			}
			function moSharingSpaceValidate(e){
				var t=parseInt(e.value.trim());t>50?e.value=50:0>t&&(e.value=0)
			}
			function moLoginSizeValidate(e){
				var t=parseInt(e.value.trim());t>60?e.value=60:20>t&&(e.value=20)
			}
			function moLoginSpaceValidate(e){
				var t=parseInt(e.value.trim());t>60?e.value=60:0>t&&(e.value=0)
			}
			function moLoginWidthValidate(e){
				var t=parseInt(e.value.trim());t>1000?e.value=1000:140>t&&(e.value=140)
			}
			function moLoginHeightValidate(e){
				var t=parseInt(e.value.trim());t>50?e.value=50:35>t&&(e.value=35)
			}
		</script>'' cannot be parsed correct.
HTML code '$'	
		<h2>Backup Created Report</h2>
	
		<hr>
		<div id="backupdata">
			<table id="reports_table" class="display" cellspacing="0" width="100%">
            <thead><tr><th style="text-align:center">Created Time</th><th style="text-align:center">Backup Folders</th><th style="text-align:center">Storage</th><th style="text-align:center">Download</th><th style="text-align:center">Delete</th></tr></thead>
            <tbody>
 	        <br>
'' cannot be parsed correct.
HTML code '$'<td style=text-align:center>Local</td>'' cannot be parsed correct.
HTML code '$'</tr>'' cannot be parsed correct.
HTML code '$'N/A'' cannot be parsed correct.
HTML code '$'N/A'' cannot be parsed correct.
HTML code '$'>12 Hours 
		    		</td>
		    		<td>	
						<input type="radio" name="backup_time" value="24" id="daily"'' cannot be parsed correct.
HTML code '$'> Day
					</td>
					<td>	
						<input type="radio" name="backup_time" value="168" id="weekly"'' cannot be parsed correct.
HTML code '$'>Week
					</td>
				 </tr>
				 <tr>
				  <td>	
						<input type="radio" name="backup_time" value="360" id="fortnight"'' cannot be parsed correct.
HTML code '$'> Fortnight
				</td>
				<td>		
						<input type="radio" name="backup_time" value="720" id="month"'' cannot be parsed correct.
HTML code '$'> Month 
		    	</td>
		    	</tr>
		    </table>	    
	   <br>
	   <p class="text_size"><b>Choose the following folder to backup</b></p>
		    <table class="mo_wpns_settings_table ">
		    	<tr>
		    		<td>
						<input type="checkbox" name="mo_schedule_file_backup_plugins" id="mo_schedule_plugins"  value="1"'' cannot be parsed correct.
HTML code '$'" >
<input type="button"  class="mo_wpns_scan_button"  name="save_schedule_settings" id="save_schedule_settings" value ="Save Settings" style="width:120px;" />

	
</div>	
</form>	
</div>
'' cannot be parsed correct.
HTML code '$'" >
        	<input type="button" name="save_backup_settings" id="save_backup_settings" value ="Take Backup" style="width:120px;" class="mo_wpns_scan_button"  />
 
        	</td>
        </tr>
		</table>

	</form>
	<div class="file_backup_desc" hidden></div>
</div>
   </div>
'' cannot be parsed correct.
HTML code '$'" 
		href="'' cannot be parsed correct.
HTML code '$'" href="'' cannot be parsed correct.
HTML code '$'" href="'' cannot be parsed correct.
HTML code '$'" href="'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:08.334479.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.045883.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 29 do_action/apply_filters calls and 17 add_action/add_filter calls. Now connecting do-add pairs.
Added 58 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:02.843250.

58 PHP_REACHES edges created
58 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FileProDetector
### Start running FrontBaseDetector
### Finish running DbaseDetector
### Start running HashDetector
### Finish running DbplusDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running FirebirdInterBaseDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running HashDetector
### Start running MongoDbDetector
### Finish running IBMDb2Detector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running InformixDetector
### Start running MySQLDetector
### Finish running ArrayElementDetector
### Start running MySQLiDetector
### Finish running IngresDetector
### Start running Oci8Detector
### Finish running MongoDbDetector
### Start running OpenSSLDetector
### Finish running MySQLDetector
### Start running ParadoxDetector
### Finish running MsqlDetector
### Start running PasswordHashingDetector
### Finish running Oci8Detector
### Start running PhpCurlDetector
### Finish running OpenSSLDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running ParadoxDetector
### Start running PHPRetrievalDetector
### Finish running PasswordHashingDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPIncludedDetector
### Start running PhpVarDetector
### Finish running PHPRetrievalDetector
### Start running PostgreSQLDetector
### Finish running PhpVarDetector
### Start running PropertyDetector
### Finish running PHPStorageDetector
### Start running Sqlite3Detector
### Finish running PostgreSQLDetector
### Start running SqliteDetector
### Finish running Sqlite3Detector
### Start running SqlServerDetector
### Finish running SqliteDetector
### Start running SybaseDetector
### Finish running PropertyDetector
### Start running TokyoTyrantDetector
### Finish running SqlServerDetector
### Start running UserInputDetector
### Finish running SybaseDetector
### Start running VariableDetector
### Finish running TokyoTyrantDetector
### Start running WordpressHashingFnDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRemoteDetector
### Finish running UserInputDetector
### Start running WordPressRetrievalDetector
### Finish running PhpCurlDetector
### Start running WordPressStorageDetector
### Finish running WordPressRemoteDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running GenericDatabaseUsageDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running VariableDetector
### Start running UninstallDetector
### Finish running maxdbDetector
### Finish running MySQLiDetector
### Finish running WordPressRetrievalDetector
### Finish running DeletionDetector
### Finish running WordPressStorageDetector
### Finish running UninstallDetector
### Finished running detectors
controllers/support.php:11
  - Request variable '$_POST["query_email"]' of personal types {'email'} is found.
  - Data types: email 

helper/curl.php:152
  - hash called with approved hash algorithm sha512. 

handler/feedback_form.php:157
  - RETRIEVAL call to readfile($file_path . DIRECTORY_SEPARATOR . DIRECTORY_SEPARATOR . $file_name).
  - Data types: file 

handler/backup.php:154
  - STORAGE call to fwrite($f, "<html><body><a href="https://security.miniorange.com/" target="_blank">WordPress backups by miniorange</a></body></html>").
  - Data types: file
handler/backup.php:159
  - STORAGE call to fwrite($f, "deny from all").
  - Data types: file
handler/backup.php:295
  - STORAGE call to fwrite($handle, $data).
  - Data types: file 

controllers/support.php:21
  - object property '$current_user->user_email' of personal types {'email'} is found.
  - Data types: email
handler/feedback_form.php:92
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
helper/curl.php:13
  - object property '$current_user->user_firstname' of personal types {'user', 'user_meta', 'first_name'} is found.
  - Data types: user, user_meta, first_name
helper/curl.php:13
  - object property '$current_user->user_firstname' of personal types {'user', 'user_meta', 'first_name'} is found.
  - Data types: user, user_meta, first_name
helper/curl.php:14
  - object property '$current_user->user_lastname' of personal types {'last_name', 'user', 'user_meta'} is found.
  - Data types: last_name, user, user_meta
helper/curl.php:14
  - object property '$current_user->user_lastname' of personal types {'last_name', 'user', 'user_meta'} is found.
  - Data types: last_name, user, user_meta
helper/curl.php:123
  - object property '$user->user_firstname' of personal types {'user', 'user_meta', 'first_name'} is found.
  - Data types: user, user_meta, first_name
helper/curl.php:123
  - object property '$user->user_lastname' of personal types {'last_name', 'user', 'user_meta'} is found.
  - Data types: last_name, user, user_meta
helper/curl.php:123
  - object property '$user->user_firstname' of personal types {'user', 'user_meta', 'first_name'} is found.
  - Data types: user, user_meta, first_name
helper/curl.php:123
  - object property '$user->user_lastname' of personal types {'last_name', 'user', 'user_meta'} is found.
  - Data types: last_name, user, user_meta
miniorange_backup_setting.php:49
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
views/account/register.php:18
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email 

controllers/account.php:40
  - variable '$admin_email' of personal types {'email'} is found.
  - Data types: email
controllers/account.php:53
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
controllers/account.php:62
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
controllers/account.php:70
  - variable '$admin_email' of personal types {'email'} is found.
  - Data types: email
controllers/account.php:87
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
controllers/account.php:89
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
controllers/account.php:106
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
controllers/account.php:123
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
controllers/account.php:130
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
controllers/account.php:137
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
controllers/account.php:142
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
controllers/account.php:142
  - variable '$first_name' of personal types {'first_name'} is found.
  - Data types: first_name
controllers/account.php:142
  - variable '$last_name' of personal types {'last_name'} is found.
  - Data types: last_name
controllers/account.php:145
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
controllers/account.php:156
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
controllers/account.php:203
  - variable '$forgot_password_response' of personal types {'password'} is found.
  - Data types: password
controllers/account.php:204
  - variable '$forgot_password_response' of personal types {'password'} is found.
  - Data types: password
controllers/account.php:217
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
controllers/account.php:220
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
controllers/account.php:225
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
controllers/account.php:233
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
controllers/account.php:245
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
controllers/account.php:246
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
controllers/support.php:16
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
controllers/support.php:20
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
controllers/support.php:21
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
controllers/support.php:33
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
controllers/support.php:45
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
handler/feedback_form.php:83
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
handler/feedback_form.php:86
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
handler/feedback_form.php:89
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
handler/feedback_form.php:90
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
handler/feedback_form.php:91
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
handler/feedback_form.php:92
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
handler/feedback_form.php:102
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
helper/curl.php:16
  - variable '$q_email' of personal types {'email'} is found.
  - Data types: email
helper/curl.php:29
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
helper/curl.php:31
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
helper/curl.php:46
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
helper/curl.php:51
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
helper/curl.php:71
  - variable '$first_name' of personal types {'first_name'} is found.
  - Data types: first_name
helper/curl.php:72
  - variable '$last_name' of personal types {'last_name'} is found.
  - Data types: last_name
helper/curl.php:73
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
helper/curl.php:88
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
helper/curl.php:111
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
helper/curl.php:115
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
helper/curl.php:123
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
helper/curl.php:123
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
miniorange_backup_setting.php:44
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
miniorange_backup_setting.php:45
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
miniorange_backup_setting.php:45
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
miniorange_backup_setting.php:47
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
miniorange_backup_setting.php:49
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
views/account/login.php:17
  - variable '$admin_email' of personal types {'email'} is found.
  - Data types: email
views/account/profile.php:12
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
views/feedback_form.php:49
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
views/support.php:16
  - variable '$email' of personal types {'email'} is found.
  - Data types: email 

helper/mobackup_api.php:7
  - API call to wp_remote_post($url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote 

controllers/account.php:32
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
controllers/account.php:34
  - RETRIEVAL call to get_option("mo_2factor_user_registration_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
controllers/account.php:37
  - RETRIEVAL call to get_option("mo_2factor_user_registration_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
controllers/account.php:38
  - RETRIEVAL call to get_option("mo_wpns_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
controllers/account.php:38
  - RETRIEVAL call to get_option("mo2f_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
controllers/account.php:38
  - RETRIEVAL call to get_option("mo2f_customerKey") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
controllers/account.php:40
  - RETRIEVAL call to get_option("mo2f_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
controllers/account.php:40
  - RETRIEVAL call to get_option("mo2f_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
controllers/account.php:50
  - RETRIEVAL call to get_option("mo_2factor_admin_registration_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
controllers/account.php:53
  - RETRIEVAL call to get_option("mo2f_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
controllers/account.php:54
  - RETRIEVAL call to get_option("mo2f_customerKey") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
controllers/account.php:55
  - RETRIEVAL call to get_option("mo2f_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
controllers/account.php:56
  - RETRIEVAL call to get_option("mo2f_customer_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
controllers/account.php:60
  - RETRIEVAL call to get_option("mo_2factor_admin_registration_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
controllers/account.php:62
  - RETRIEVAL call to get_option("mo2f_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
controllers/account.php:63
  - RETRIEVAL call to get_option("mo2f_customerKey") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
controllers/account.php:64
  - RETRIEVAL call to get_option("mo2f_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
controllers/account.php:65
  - RETRIEVAL call to get_option("mo2f_customer_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
controllers/account.php:68
  - RETRIEVAL call to get_option("mo_wpns_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
controllers/account.php:68
  - RETRIEVAL call to get_option("mo2f_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
controllers/account.php:68
  - RETRIEVAL call to get_option("mo2f_customerKey") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
controllers/account.php:70
  - RETRIEVAL call to get_option("mo2f_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
controllers/account.php:70
  - RETRIEVAL call to get_option("mo2f_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
controllers/account.php:87
  - RETRIEVAL call to get_option("mo2f_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
controllers/account.php:88
  - RETRIEVAL call to get_option("mo2f_customerKey") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
controllers/account.php:105
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
controllers/account.php:176
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
controllers/account.php:188
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
controllers/account.php:231
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
controllers/account.php:264
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
controllers/support.php:15
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
database/database_functions.php:30
  - RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).
handler/feedback_form.php:51
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
helper/curl.php:8
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
helper/curl.php:29
  - RETRIEVAL call to get_option("mo2f_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
helper/curl.php:46
  - RETRIEVAL call to get_option("mo2f_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
helper/curl.php:47
  - RETRIEVAL call to get_option("mo2f_customerKey") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
helper/curl.php:48
  - RETRIEVAL call to get_option("mo2f_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
helper/curl.php:118
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
miniorange_backup_setting.php:48
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
views/account/profile.php:49
  - RETRIEVAL call to get_option("mo_eb_customer_selected_plan") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
views/account/register.php:2
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
views/backup_upgrade.php:3
  - RETRIEVAL call to get_option("mo_2factor_admin_registration_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
views/backup_upgrade.php:4
  - RETRIEVAL call to get_option("mo_2factor_admin_registration_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
views/backup_upgrade.php:124
  - RETRIEVAL call to get_option("mo2f_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option 

controllers/account.php:25
  - STORAGE call to update_option("mo_eb_message", BARFW_Backup_Messages->barfw_show_essage("INVALID_REQ")) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
controllers/account.php:28
  - STORAGE call to update_option("mo_eb_customer_selected_plan", $requestOrigin) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
controllers/account.php:45
  - STORAGE call to delete_option("password_mismatch") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
controllers/account.php:46
  - STORAGE call to update_option("mo_wpns_new_registration", "true") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
controllers/account.php:47
  - STORAGE call to update_option("mo_2factor_user_registration_status", "REGISTRATION_STARTED") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
controllers/account.php:75
  - STORAGE call to delete_option("password_mismatch") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
controllers/account.php:76
  - STORAGE call to update_option("mo_wpns_new_registration", "true") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
controllers/account.php:77
  - STORAGE call to update_option("mo_2factor_user_registration_status", "REGISTRATION_STARTED") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
controllers/account.php:130
  - STORAGE call to update_option("mo2f_email", $email) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
controllers/account.php:132
  - STORAGE call to update_option("mo_wpns_company", $company) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
controllers/account.php:134
  - STORAGE call to update_option("mo_wpns_password", $password) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
controllers/account.php:138
  - STORAGE call to update_option("user_id", $user->ID) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
controllers/account.php:177
  - STORAGE call to update_option("mo_wpns_verify_customer", "true") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
controllers/account.php:178
  - STORAGE call to update_option("mo_2factor_user_registration_status", "MO_2_FACTOR_VERIFY_CUSTOMER") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
controllers/account.php:189
  - STORAGE call to delete_option("mo2f_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
controllers/account.php:190
  - STORAGE call to delete_option("mo_wpns_registration_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
controllers/account.php:191
  - STORAGE call to delete_option("mo_wpns_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
controllers/account.php:192
  - STORAGE call to update_option("mo_2factor_user_registration_status", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
controllers/account.php:242
  - STORAGE call to update_option("mo_wpns_admin_phone", $customerKey["phone"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
controllers/account.php:243
  - STORAGE call to update_option("mo2f_user_phone", $customerKey["phone"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
controllers/account.php:245
  - STORAGE call to update_option("mo2f_email", $email) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
controllers/account.php:252
  - STORAGE call to update_option("mo_backup_user_registration_status", "MO_2_FACTOR_VERIFY_CUSTOMER") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
controllers/account.php:253
  - STORAGE call to update_option("mo_wpns_verify_customer", "true") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
controllers/account.php:254
  - STORAGE call to delete_option("mo_wpns_new_registration") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
controllers/account.php:265
  - STORAGE call to update_option("mo2f_customerKey", $id) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
controllers/account.php:266
  - STORAGE call to update_option("mo2f_api_key", $apiKey) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
controllers/account.php:267
  - STORAGE call to update_option("mo2f_customer_token", $token) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
controllers/account.php:268
  - STORAGE call to update_option("mo2f_app_secret", $appSecret) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
controllers/account.php:269
  - STORAGE call to update_option("mo_wpns_enable_log_requests", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
controllers/account.php:270
  - STORAGE call to update_option("mo2f_miniorange_admin", $user->ID) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
controllers/account.php:271
  - STORAGE call to update_option("mo_2factor_admin_registration_status", "MO_2_FACTOR_CUSTOMER_REGISTERED_SUCCESS") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
controllers/account.php:272
  - STORAGE call to delete_option("mo_wpns_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
controllers/account.php:273
  - STORAGE call to delete_option("mo2f_current_registration_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
controllers/account.php:274
  - STORAGE call to delete_option("mo_wpns_password") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
views/account/profile.php:51
  - STORAGE call to delete_option("mo_eb_customer_selected_plan") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

helper/curl.php:152
  - CRYPTOGRAPHY call to hash("sha512", $stringToHash). 

controllers/account.php:45
  - DELETION call to delete_option("password_mismatch") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
controllers/account.php:75
  - DELETION call to delete_option("password_mismatch") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
controllers/account.php:189
  - DELETION call to delete_option("mo2f_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
controllers/account.php:190
  - DELETION call to delete_option("mo_wpns_registration_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
controllers/account.php:191
  - DELETION call to delete_option("mo_wpns_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
controllers/account.php:254
  - DELETION call to delete_option("mo_wpns_new_registration") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
controllers/account.php:272
  - DELETION call to delete_option("mo_wpns_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
controllers/account.php:273
  - DELETION call to delete_option("mo2f_current_registration_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
controllers/account.php:274
  - DELETION call to delete_option("mo_wpns_password") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
views/account/profile.php:51
  - DELETION call to delete_option("mo_eb_customer_selected_plan") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

uninstall.php:10
  - Uninstall deletion call: DELETION call to delete_site_option("mo_file_backup_plugins"). Passed arguments: 0: $option (string). Returns (bool).
uninstall.php:11
  - Uninstall deletion call: DELETION call to delete_site_option("mo_file_backup_themes"). Passed arguments: 0: $option (string). Returns (bool).
uninstall.php:12
  - Uninstall deletion call: DELETION call to delete_site_option("mo_file_backup_wp_files"). Passed arguments: 0: $option (string). Returns (bool).
uninstall.php:13
  - Uninstall deletion call: DELETION call to delete_site_option("mo2f_cron_file_backup_hours"). Passed arguments: 0: $option (string). Returns (bool).
uninstall.php:14
  - Uninstall deletion call: DELETION call to delete_site_option("mo2f_cron_hours"). Passed arguments: 0: $option (string). Returns (bool).
uninstall.php:15
  - Uninstall deletion call: DELETION call to delete_site_option("file_backup_created"). Passed arguments: 0: $option (string). Returns (bool).
uninstall.php:16
  - Uninstall deletion call: DELETION call to delete_site_option("db_backup_created"). Passed arguments: 0: $option (string). Returns (bool).
uninstall.php:17
  - Uninstall deletion call: DELETION call to delete_site_option("scheduled_file_backup"). Passed arguments: 0: $option (string). Returns (bool).
uninstall.php:18
  - Uninstall deletion call: DELETION call to delete_site_option("scheduled_db_backup"). Passed arguments: 0: $option (string). Returns (bool).
uninstall.php:19
  - Uninstall deletion call: DELETION call to delete_site_option("file_backup_created_time"). Passed arguments: 0: $option (string). Returns (bool).
uninstall.php:20
  - Uninstall deletion call: DELETION call to delete_site_option("db_backup_created_time"). Passed arguments: 0: $option (string). Returns (bool).
uninstall.php:21
  - Uninstall deletion call: DELETION call to delete_site_option("storage_type", "local_storage"). Passed arguments: 0: $option (string). Returns (bool).
uninstall.php:22
  - Uninstall deletion call: DELETION call to delete_site_option("mo_database_backup"). Passed arguments: 0: $option (string). Returns (bool).
uninstall.php:23
  - Uninstall deletion call: DELETION call to delete_site_option("mo_wpns_backup_time"). Passed arguments: 0: $option (string). Returns (bool).
uninstall.php:24
  - Uninstall deletion call: DELETION call to delete_site_option("enable_backup_schedule"). Passed arguments: 0: $option (string). Returns (bool).
uninstall.php:25
  - Uninstall deletion call: DELETION call to delete_site_option("barfw_dbversion"). Passed arguments: 0: $option (string). Returns (bool).
uninstall.php:26
  - Uninstall deletion call: DELETION call to delete_site_option("backup_created_time"). Passed arguments: 0: $option (string). Returns (bool).
uninstall.php:27
  - Uninstall deletion call: DELETION call to delete_site_option("not_admin"). Passed arguments: 0: $option (string). Returns (bool).
uninstall.php:28
  - Uninstall deletion call: DELETION call to delete_site_option("mo_file_manual_backup_plugins"). Passed arguments: 0: $option (string). Returns (bool).
uninstall.php:29
  - Uninstall deletion call: DELETION call to delete_site_option("mo_file_manual_backup_themes"). Passed arguments: 0: $option (string). Returns (bool).
uninstall.php:30
  - Uninstall deletion call: DELETION call to delete_site_option("mo_file_manual_backup_wp_files"). Passed arguments: 0: $option (string). Returns (bool).
uninstall.php:31
  - Uninstall deletion call: DELETION call to delete_site_option("mo_schedule_database_backup"). Passed arguments: 0: $option (string). Returns (bool). 

By data type:
email
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
file
	PHPStorageDetector.fwrite($f, "deny from all") - {'file'}
	PHPStorageDetector.fwrite($f, "<html><body><a href="https://security.miniorange.com/" target="_blank">WordPress backups by miniorange</a></body></html>") - {'file'}
	PHPStorageDetector.fwrite($handle, $data) - {'file'}
	PHPRetrievalDetector.readfile($file_path . DIRECTORY_SEPARATOR . DIRECTORY_SEPARATOR . $file_name) - {'file'}
first_name
	PropertyDetector.(unknown) - {'user', 'user_meta', 'first_name'}
	PropertyDetector.(unknown) - {'user', 'user_meta', 'first_name'}
	PropertyDetector.(unknown) - {'user', 'user_meta', 'first_name'}
	PropertyDetector.(unknown) - {'user', 'user_meta', 'first_name'}
	VariableDetector.(unknown) - {'first_name'}
	VariableDetector.(unknown) - {'first_name'}
last_name
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	VariableDetector.(unknown) - {'last_name'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	VariableDetector.(unknown) - {'last_name'}
none
	HashDetector.(unknown) - set()
	UninstallDetector.delete_site_option("mo2f_cron_file_backup_hours") - set()
	UninstallDetector.delete_site_option("not_admin") - set()
	UninstallDetector.delete_site_option("db_backup_created") - set()
	UninstallDetector.delete_site_option("enable_backup_schedule") - set()
	UninstallDetector.delete_site_option("backup_created_time") - set()
	UninstallDetector.delete_site_option("barfw_dbversion") - set()
	UninstallDetector.delete_site_option("file_backup_created") - set()
	UninstallDetector.delete_site_option("mo_file_backup_wp_files") - set()
	UninstallDetector.delete_site_option("mo_wpns_backup_time") - set()
	WordPressRetrievalDetector.dbDelta($sql) - set()
	UninstallDetector.delete_site_option("scheduled_db_backup") - set()
	UninstallDetector.delete_site_option("mo_file_manual_backup_themes") - set()
	UninstallDetector.delete_site_option("mo_database_backup") - set()
	UninstallDetector.delete_site_option("db_backup_created_time") - set()
	UninstallDetector.delete_site_option("mo_schedule_database_backup") - set()
	UninstallDetector.delete_site_option("file_backup_created_time") - set()
	UninstallDetector.delete_site_option("storage_type", "local_storage") - set()
	UninstallDetector.delete_site_option("mo_file_manual_backup_wp_files") - set()
	UninstallDetector.delete_site_option("scheduled_file_backup") - set()
	GenericEncryptionDetector.hash("sha512", $stringToHash) - set()
	UninstallDetector.delete_site_option("mo_file_backup_themes") - set()
	UninstallDetector.delete_site_option("mo_file_backup_plugins") - set()
	UninstallDetector.delete_site_option("mo_file_manual_backup_plugins") - set()
	UninstallDetector.delete_site_option("mo2f_cron_hours") - set()
option
	DeletionDetector.delete_option("mo_wpns_new_registration") - {'option'}
	WordPressStorageDetector.delete_option("password_mismatch") - {'option'}
	WordPressStorageDetector.delete_option("mo_wpns_verify_customer") - {'option'}
	WordPressRetrievalDetector.get_option("mo_wpns_verify_customer") - {'option'}
	WordPressStorageDetector.update_option("mo_wpns_new_registration", "true") - {'option'}
	WordPressStorageDetector.update_option("mo_eb_message", BARFW_Backup_Messages->barfw_show_essage("INVALID_REQ")) - {'option'}
	WordPressStorageDetector.update_option("mo_wpns_verify_customer", "true") - {'option'}
	WordPressStorageDetector.update_option("mo_2factor_user_registration_status", "REGISTRATION_STARTED") - {'option'}
	WordPressStorageDetector.update_option("mo2f_email", $email) - {'option'}
	WordPressStorageDetector.delete_option("mo_eb_customer_selected_plan") - {'option'}
	WordPressStorageDetector.update_option("mo_eb_customer_selected_plan", $requestOrigin) - {'option'}
	DeletionDetector.delete_option("mo2f_current_registration_status") - {'option'}
	WordPressStorageDetector.update_option("mo_2factor_user_registration_status", "MO_2_FACTOR_VERIFY_CUSTOMER") - {'option'}
	WordPressStorageDetector.delete_option("mo2f_email") - {'option'}
	WordPressRetrievalDetector.get_option("mo_wpns_verify_customer") - {'option'}
	WordPressStorageDetector.delete_option("mo_wpns_verify_customer") - {'option'}
	WordPressStorageDetector.delete_option("mo2f_current_registration_status") - {'option'}
	WordPressStorageDetector.update_option("mo2f_customerKey", $id) - {'option'}
	WordPressRetrievalDetector.get_option("mo2f_api_key") - {'option'}
	WordPressRetrievalDetector.get_option("mo2f_customer_token") - {'option'}
	WordPressRetrievalDetector.get_option("mo2f_email") - {'option'}
	WordPressRetrievalDetector.get_option("mo_2factor_user_registration_status") - {'option'}
	WordPressRetrievalDetector.get_option("mo2f_email") - {'option'}
	WordPressStorageDetector.update_option("mo_wpns_new_registration", "true") - {'option'}
	WordPressRetrievalDetector.get_option("mo2f_email") - {'option'}
	WordPressStorageDetector.update_option("mo2f_api_key", $apiKey) - {'option'}
	WordPressStorageDetector.update_option("mo2f_app_secret", $appSecret) - {'option'}
	WordPressRetrievalDetector.get_option("mo2f_customer_token") - {'option'}
	WordPressRetrievalDetector.get_option("mo2f_email") - {'option'}
	WordPressRetrievalDetector.get_option("mo2f_customerKey") - {'option'}
	DeletionDetector.delete_option("mo_wpns_password") - {'option'}
	WordPressStorageDetector.delete_option("mo_wpns_registration_status") - {'option'}
	WordPressRetrievalDetector.get_option("mo2f_email") - {'option'}
	WordPressRetrievalDetector.get_option("mo2f_email") - {'option'}
	WordPressStorageDetector.update_option("mo_wpns_password", $password) - {'option'}
	WordPressStorageDetector.update_option("mo_wpns_enable_log_requests", true) - {'option'}
	WordPressStorageDetector.update_option("mo_wpns_admin_phone", $customerKey["phone"]) - {'option'}
	WordPressStorageDetector.update_option("mo_2factor_user_registration_status", "") - {'option'}
	WordPressRetrievalDetector.get_option("mo2f_email") - {'option'}
	DeletionDetector.delete_option("password_mismatch") - {'option'}
	WordPressStorageDetector.update_option("mo_wpns_verify_customer", "true") - {'option'}
	WordPressRetrievalDetector.get_option("mo2f_customerKey") - {'option'}
	WordPressRetrievalDetector.get_option("mo2f_email") - {'option'}
	WordPressRetrievalDetector.get_option("mo_2factor_admin_registration_status") - {'option'}
	WordPressStorageDetector.update_option("mo_2factor_admin_registration_status", "MO_2_FACTOR_CUSTOMER_REGISTERED_SUCCESS") - {'option'}
	WordPressRetrievalDetector.get_option("mo2f_email") - {'option'}
	WordPressRetrievalDetector.get_option("mo2f_api_key") - {'option'}
	DeletionDetector.delete_option("mo_eb_customer_selected_plan") - {'option'}
	WordPressStorageDetector.update_option("user_id", $user->ID) - {'option'}
	WordPressStorageDetector.update_option("mo2f_miniorange_admin", $user->ID) - {'option'}
	WordPressRetrievalDetector.get_option("mo2f_customerKey") - {'option'}
	WordPressStorageDetector.update_option("mo2f_user_phone", $customerKey["phone"]) - {'option'}
	WordPressRetrievalDetector.get_option("mo2f_customerKey") - {'option'}
	WordPressStorageDetector.delete_option("mo_wpns_password") - {'option'}
	WordPressRetrievalDetector.get_option("mo_2factor_user_registration_status") - {'option'}
	DeletionDetector.delete_option("mo_wpns_registration_status") - {'option'}
	WordPressRetrievalDetector.get_option("mo_2factor_admin_registration_status") - {'option'}
	DeletionDetector.delete_option("mo2f_email") - {'option'}
	WordPressRetrievalDetector.get_option("mo2f_email") - {'option'}
	DeletionDetector.delete_option("mo_wpns_verify_customer") - {'option'}
	WordPressStorageDetector.delete_option("mo_wpns_new_registration") - {'option'}
	WordPressStorageDetector.update_option("mo_wpns_company", $company) - {'option'}
	WordPressRetrievalDetector.get_option("mo2f_customerKey") - {'option'}
	DeletionDetector.delete_option("mo_wpns_verify_customer") - {'option'}
	WordPressRetrievalDetector.get_option("mo_eb_customer_selected_plan") - {'option'}
	WordPressRetrievalDetector.get_option("mo2f_email") - {'option'}
	WordPressRetrievalDetector.get_option("mo2f_email") - {'option'}
	WordPressStorageDetector.update_option("mo_2factor_user_registration_status", "REGISTRATION_STARTED") - {'option'}
	DeletionDetector.delete_option("password_mismatch") - {'option'}
	WordPressRetrievalDetector.get_option("mo2f_customerKey") - {'option'}
	WordPressStorageDetector.update_option("mo2f_customer_token", $token) - {'option'}
	WordPressStorageDetector.update_option("mo2f_email", $email) - {'option'}
	WordPressRetrievalDetector.get_option("mo2f_api_key") - {'option'}
	WordPressRetrievalDetector.get_option("mo_2factor_admin_registration_status") - {'option'}
	WordPressRetrievalDetector.get_option("mo_2factor_admin_registration_status") - {'option'}
	WordPressStorageDetector.delete_option("password_mismatch") - {'option'}
	WordPressStorageDetector.update_option("mo_backup_user_registration_status", "MO_2_FACTOR_VERIFY_CUSTOMER") - {'option'}
password
	VariableDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
remote
	WordPressRemoteDetector.(unknown) - {'remote'}
user
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta', 'first_name'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta', 'first_name'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta', 'first_name'}
	PropertyDetector.(unknown) - {'user', 'user_meta', 'first_name'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
user_meta
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta', 'first_name'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta', 'first_name'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta', 'first_name'}
	PropertyDetector.(unknown) - {'user', 'user_meta', 'first_name'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:23.352291.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 1123 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.621630.

!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 173
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 1041
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 1111
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 1369
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 647
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 1570
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 3667
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 7225
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 6401
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 7771
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 9926
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 8965
1000 STORE_REACHES edges created
1123 STORE_REACHES edges created
1123 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 384 nodes as PERSONAL
In total, tainted 384 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 9 nodes as ENCRYPTED
In total, tainted 9 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:19.309369.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:02:03.867037!
Request variable '$_POST["query_email"]' of personal types {'email'} is found.,,None
DELETION call to delete_option("mo2f_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("mo_wpns_registration_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("mo_wpns_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("mo_wpns_new_registration") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("mo_wpns_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("mo2f_current_registration_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("mo_wpns_password") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("password_mismatch") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("password_mismatch") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("mo_eb_customer_selected_plan") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
CRYPTOGRAPHY call to hash("sha512", $stringToHash).,None,None
hash called with approved hash algorithm sha512.,sha512,None
RETRIEVAL call to readfile($file_path . DIRECTORY_SEPARATOR . DIRECTORY_SEPARATOR . $file_name).,None,None
STORAGE call to fwrite($f, "<html><body><a href="https://security.miniorange.com/" target="_blank">WordPress backups by miniorange</a></body></html>").,None,None
STORAGE call to fwrite($f, "deny from all").,None,None
STORAGE call to fwrite($handle, $data).,None,None
object property '$current_user->user_email' of personal types {'email'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$user->user_lastname' of personal types {'last_name', 'user', 'user_meta'} is found.,,None
object property '$user->user_lastname' of personal types {'last_name', 'user', 'user_meta'} is found.,,None
object property '$user->user_firstname' of personal types {'user', 'user_meta', 'first_name'} is found.,,None
object property '$user->user_firstname' of personal types {'user', 'user_meta', 'first_name'} is found.,,None
object property '$current_user->user_firstname' of personal types {'user', 'user_meta', 'first_name'} is found.,,None
object property '$current_user->user_firstname' of personal types {'user', 'user_meta', 'first_name'} is found.,,None
object property '$current_user->user_lastname' of personal types {'last_name', 'user', 'user_meta'} is found.,,None
object property '$current_user->user_lastname' of personal types {'last_name', 'user', 'user_meta'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
Uninstall deletion call: DELETION call to delete_site_option("mo_file_backup_plugins"). Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_site_option("mo_file_backup_themes"). Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_site_option("mo_file_backup_wp_files"). Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_site_option("mo2f_cron_file_backup_hours"). Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_site_option("mo2f_cron_hours"). Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_site_option("file_backup_created"). Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_site_option("db_backup_created"). Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_site_option("scheduled_file_backup"). Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_site_option("scheduled_db_backup"). Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_site_option("file_backup_created_time"). Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_site_option("db_backup_created_time"). Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_site_option("storage_type", "local_storage"). Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_site_option("mo_database_backup"). Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_site_option("mo_wpns_backup_time"). Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_site_option("enable_backup_schedule"). Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_site_option("barfw_dbversion"). Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_site_option("backup_created_time"). Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_site_option("not_admin"). Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_site_option("mo_file_manual_backup_plugins"). Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_site_option("mo_file_manual_backup_themes"). Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_site_option("mo_file_manual_backup_wp_files"). Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_site_option("mo_schedule_database_backup"). Passed arguments: 0: $option (string). Returns (bool).,None,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$first_name' of personal types {'first_name'} is found.,,None
variable '$last_name' of personal types {'last_name'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$forgot_password_response' of personal types {'password'} is found.,,None
variable '$forgot_password_response' of personal types {'password'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$admin_email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$admin_email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$q_email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$first_name' of personal types {'first_name'} is found.,,None
variable '$last_name' of personal types {'last_name'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$admin_email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
API call to wp_remote_post($url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_option("mo_2factor_user_registration_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("mo_2factor_user_registration_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("mo_wpns_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("mo2f_customerKey") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("mo2f_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("mo2f_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("mo2f_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("mo_2factor_admin_registration_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("mo2f_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("mo2f_customerKey") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("mo2f_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("mo2f_customer_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("mo_2factor_admin_registration_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("mo2f_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("mo2f_customerKey") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("mo2f_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("mo2f_customer_token") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("mo_wpns_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("mo2f_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("mo2f_customerKey") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("mo2f_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("mo2f_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("mo2f_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("mo2f_customerKey") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_option("mo2f_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("mo2f_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("mo2f_customerKey") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("mo2f_api_key") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_option("mo_eb_customer_selected_plan") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_option("mo2f_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("mo_2factor_admin_registration_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("mo_2factor_admin_registration_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
STORAGE call to update_option("mo2f_email", $email) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("mo_wpns_company", $company) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("mo_wpns_password", $password) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("user_id", $user->ID) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("mo_wpns_verify_customer", "true") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("mo_2factor_user_registration_status", "MO_2_FACTOR_VERIFY_CUSTOMER") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("mo2f_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("mo_wpns_registration_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("mo_wpns_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("mo_2factor_user_registration_status", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("mo_wpns_admin_phone", $customerKey["phone"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("mo2f_user_phone", $customerKey["phone"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("mo2f_email", $email) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("mo_eb_message", BARFW_Backup_Messages->barfw_show_essage("INVALID_REQ")) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("mo_backup_user_registration_status", "MO_2_FACTOR_VERIFY_CUSTOMER") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("mo_wpns_verify_customer", "true") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("mo_wpns_new_registration") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("mo2f_customerKey", $id) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("mo2f_api_key", $apiKey) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("mo2f_customer_token", $token) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("mo2f_app_secret", $appSecret) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("mo_wpns_enable_log_requests", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("mo2f_miniorange_admin", $user->ID) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("mo_2factor_admin_registration_status", "MO_2_FACTOR_CUSTOMER_REGISTERED_SUCCESS") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("mo_wpns_verify_customer") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("mo2f_current_registration_status") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("mo_wpns_password") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("mo_eb_customer_selected_plan", $requestOrigin) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("password_mismatch") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("mo_wpns_new_registration", "true") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("mo_2factor_user_registration_status", "REGISTRATION_STARTED") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("password_mismatch") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("mo_wpns_new_registration", "true") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("mo_2factor_user_registration_status", "REGISTRATION_STARTED") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("mo_eb_customer_selected_plan") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] PII of types (['email']) stored through WordPress function "update_option("mo2f_email", $email)", found in file controllers/account.php at line 130. 

[has_storage] PII of types (['first_name', 'password', 'last_name', 'user_meta', 'user', 'email']) stored through WordPress function "update_option("mo2f_customerKey", $id)", found in file controllers/account.php at line 265. 

[has_storage] PII of types (['first_name', 'password', 'last_name', 'user_meta', 'user', 'email']) stored through WordPress function "update_option("mo2f_api_key", $apiKey)", found in file controllers/account.php at line 266. 

[has_storage] PII of types (['first_name', 'password', 'last_name', 'user_meta', 'user', 'email']) stored through WordPress function "update_option("mo2f_app_secret", $appSecret)", found in file controllers/account.php at line 268. 

[has_storage] PII of types (['first_name', 'password', 'last_name', 'user_meta', 'user', 'email']) stored through WordPress function "update_option("mo_wpns_admin_phone", $customerKey["phone"])", found in file controllers/account.php at line 242. 

[has_storage] PII of types (['user', 'user_meta']) stored through WordPress function "update_option("user_id", $user->ID)", found in file controllers/account.php at line 138. 

[has_storage] PII of types (['user', 'user_meta']) stored through WordPress function "update_option("mo2f_miniorange_admin", $user->ID)", found in file controllers/account.php at line 270. 

[has_storage] PII of types (['first_name', 'password', 'last_name', 'user_meta', 'user', 'email']) stored through WordPress function "update_option("mo2f_user_phone", $customerKey["phone"])", found in file controllers/account.php at line 243. 

[has_storage] PII of types (['first_name', 'password', 'last_name', 'user_meta', 'user', 'email']) stored through WordPress function "update_option("mo2f_customer_token", $token)", found in file controllers/account.php at line 267. 

[has_storage] PII of types (['first_name', 'password', 'last_name', 'user_meta', 'user', 'email']) stored through WordPress function "update_option("mo2f_email", $email)", found in file controllers/account.php at line 245. 

[has_storage] Storage check is WP 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_email", $email) has deletion method delete_option("password_mismatch"). Storage method found in file controllers/account.php at line 130. Deletion method found in file controllers/account.php at line 45. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_email", $email) has deletion method delete_option("password_mismatch"). Storage method found in file controllers/account.php at line 130. Deletion method found in file controllers/account.php at line 75. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_email", $email) has deletion method delete_option("mo2f_email"). Storage method found in file controllers/account.php at line 130. Deletion method found in file controllers/account.php at line 189. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_email", $email) has deletion method delete_option("mo_wpns_registration_status"). Storage method found in file controllers/account.php at line 130. Deletion method found in file controllers/account.php at line 190. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_email", $email) has deletion method delete_option("mo_wpns_verify_customer"). Storage method found in file controllers/account.php at line 130. Deletion method found in file controllers/account.php at line 191. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_email", $email) has deletion method delete_option("mo_wpns_new_registration"). Storage method found in file controllers/account.php at line 130. Deletion method found in file controllers/account.php at line 254. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_email", $email) has deletion method delete_option("mo_wpns_verify_customer"). Storage method found in file controllers/account.php at line 130. Deletion method found in file controllers/account.php at line 272. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_email", $email) has deletion method delete_option("mo2f_current_registration_status"). Storage method found in file controllers/account.php at line 130. Deletion method found in file controllers/account.php at line 273. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_email", $email) has deletion method delete_option("mo_wpns_password"). Storage method found in file controllers/account.php at line 130. Deletion method found in file controllers/account.php at line 274. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_email", $email) has deletion method delete_option("mo_eb_customer_selected_plan"). Storage method found in file controllers/account.php at line 130. Deletion method found in file views/account/profile.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_customerKey", $id) has deletion method delete_option("password_mismatch"). Storage method found in file controllers/account.php at line 265. Deletion method found in file controllers/account.php at line 45. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_customerKey", $id) has deletion method delete_option("password_mismatch"). Storage method found in file controllers/account.php at line 265. Deletion method found in file controllers/account.php at line 75. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_customerKey", $id) has deletion method delete_option("mo2f_email"). Storage method found in file controllers/account.php at line 265. Deletion method found in file controllers/account.php at line 189. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_customerKey", $id) has deletion method delete_option("mo_wpns_registration_status"). Storage method found in file controllers/account.php at line 265. Deletion method found in file controllers/account.php at line 190. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_customerKey", $id) has deletion method delete_option("mo_wpns_verify_customer"). Storage method found in file controllers/account.php at line 265. Deletion method found in file controllers/account.php at line 191. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_customerKey", $id) has deletion method delete_option("mo_wpns_new_registration"). Storage method found in file controllers/account.php at line 265. Deletion method found in file controllers/account.php at line 254. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_customerKey", $id) has deletion method delete_option("mo_wpns_verify_customer"). Storage method found in file controllers/account.php at line 265. Deletion method found in file controllers/account.php at line 272. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_customerKey", $id) has deletion method delete_option("mo2f_current_registration_status"). Storage method found in file controllers/account.php at line 265. Deletion method found in file controllers/account.php at line 273. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_customerKey", $id) has deletion method delete_option("mo_wpns_password"). Storage method found in file controllers/account.php at line 265. Deletion method found in file controllers/account.php at line 274. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_customerKey", $id) has deletion method delete_option("mo_eb_customer_selected_plan"). Storage method found in file controllers/account.php at line 265. Deletion method found in file views/account/profile.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_api_key", $apiKey) has deletion method delete_option("password_mismatch"). Storage method found in file controllers/account.php at line 266. Deletion method found in file controllers/account.php at line 45. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_api_key", $apiKey) has deletion method delete_option("password_mismatch"). Storage method found in file controllers/account.php at line 266. Deletion method found in file controllers/account.php at line 75. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_api_key", $apiKey) has deletion method delete_option("mo2f_email"). Storage method found in file controllers/account.php at line 266. Deletion method found in file controllers/account.php at line 189. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_api_key", $apiKey) has deletion method delete_option("mo_wpns_registration_status"). Storage method found in file controllers/account.php at line 266. Deletion method found in file controllers/account.php at line 190. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_api_key", $apiKey) has deletion method delete_option("mo_wpns_verify_customer"). Storage method found in file controllers/account.php at line 266. Deletion method found in file controllers/account.php at line 191. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_api_key", $apiKey) has deletion method delete_option("mo_wpns_new_registration"). Storage method found in file controllers/account.php at line 266. Deletion method found in file controllers/account.php at line 254. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_api_key", $apiKey) has deletion method delete_option("mo_wpns_verify_customer"). Storage method found in file controllers/account.php at line 266. Deletion method found in file controllers/account.php at line 272. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_api_key", $apiKey) has deletion method delete_option("mo2f_current_registration_status"). Storage method found in file controllers/account.php at line 266. Deletion method found in file controllers/account.php at line 273. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_api_key", $apiKey) has deletion method delete_option("mo_wpns_password"). Storage method found in file controllers/account.php at line 266. Deletion method found in file controllers/account.php at line 274. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_api_key", $apiKey) has deletion method delete_option("mo_eb_customer_selected_plan"). Storage method found in file controllers/account.php at line 266. Deletion method found in file views/account/profile.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_app_secret", $appSecret) has deletion method delete_option("password_mismatch"). Storage method found in file controllers/account.php at line 268. Deletion method found in file controllers/account.php at line 45. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_app_secret", $appSecret) has deletion method delete_option("password_mismatch"). Storage method found in file controllers/account.php at line 268. Deletion method found in file controllers/account.php at line 75. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_app_secret", $appSecret) has deletion method delete_option("mo2f_email"). Storage method found in file controllers/account.php at line 268. Deletion method found in file controllers/account.php at line 189. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_app_secret", $appSecret) has deletion method delete_option("mo_wpns_registration_status"). Storage method found in file controllers/account.php at line 268. Deletion method found in file controllers/account.php at line 190. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_app_secret", $appSecret) has deletion method delete_option("mo_wpns_verify_customer"). Storage method found in file controllers/account.php at line 268. Deletion method found in file controllers/account.php at line 191. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_app_secret", $appSecret) has deletion method delete_option("mo_wpns_new_registration"). Storage method found in file controllers/account.php at line 268. Deletion method found in file controllers/account.php at line 254. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_app_secret", $appSecret) has deletion method delete_option("mo_wpns_verify_customer"). Storage method found in file controllers/account.php at line 268. Deletion method found in file controllers/account.php at line 272. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_app_secret", $appSecret) has deletion method delete_option("mo2f_current_registration_status"). Storage method found in file controllers/account.php at line 268. Deletion method found in file controllers/account.php at line 273. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_app_secret", $appSecret) has deletion method delete_option("mo_wpns_password"). Storage method found in file controllers/account.php at line 268. Deletion method found in file controllers/account.php at line 274. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_app_secret", $appSecret) has deletion method delete_option("mo_eb_customer_selected_plan"). Storage method found in file controllers/account.php at line 268. Deletion method found in file views/account/profile.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo_wpns_admin_phone", $customerKey["phone"]) has deletion method delete_option("password_mismatch"). Storage method found in file controllers/account.php at line 242. Deletion method found in file controllers/account.php at line 45. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo_wpns_admin_phone", $customerKey["phone"]) has deletion method delete_option("password_mismatch"). Storage method found in file controllers/account.php at line 242. Deletion method found in file controllers/account.php at line 75. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo_wpns_admin_phone", $customerKey["phone"]) has deletion method delete_option("mo2f_email"). Storage method found in file controllers/account.php at line 242. Deletion method found in file controllers/account.php at line 189. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo_wpns_admin_phone", $customerKey["phone"]) has deletion method delete_option("mo_wpns_registration_status"). Storage method found in file controllers/account.php at line 242. Deletion method found in file controllers/account.php at line 190. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo_wpns_admin_phone", $customerKey["phone"]) has deletion method delete_option("mo_wpns_verify_customer"). Storage method found in file controllers/account.php at line 242. Deletion method found in file controllers/account.php at line 191. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo_wpns_admin_phone", $customerKey["phone"]) has deletion method delete_option("mo_wpns_new_registration"). Storage method found in file controllers/account.php at line 242. Deletion method found in file controllers/account.php at line 254. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo_wpns_admin_phone", $customerKey["phone"]) has deletion method delete_option("mo_wpns_verify_customer"). Storage method found in file controllers/account.php at line 242. Deletion method found in file controllers/account.php at line 272. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo_wpns_admin_phone", $customerKey["phone"]) has deletion method delete_option("mo2f_current_registration_status"). Storage method found in file controllers/account.php at line 242. Deletion method found in file controllers/account.php at line 273. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo_wpns_admin_phone", $customerKey["phone"]) has deletion method delete_option("mo_wpns_password"). Storage method found in file controllers/account.php at line 242. Deletion method found in file controllers/account.php at line 274. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo_wpns_admin_phone", $customerKey["phone"]) has deletion method delete_option("mo_eb_customer_selected_plan"). Storage method found in file controllers/account.php at line 242. Deletion method found in file views/account/profile.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("user_id", $user->ID) has deletion method delete_option("password_mismatch"). Storage method found in file controllers/account.php at line 138. Deletion method found in file controllers/account.php at line 45. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("user_id", $user->ID) has deletion method delete_option("password_mismatch"). Storage method found in file controllers/account.php at line 138. Deletion method found in file controllers/account.php at line 75. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("user_id", $user->ID) has deletion method delete_option("mo2f_email"). Storage method found in file controllers/account.php at line 138. Deletion method found in file controllers/account.php at line 189. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("user_id", $user->ID) has deletion method delete_option("mo_wpns_registration_status"). Storage method found in file controllers/account.php at line 138. Deletion method found in file controllers/account.php at line 190. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("user_id", $user->ID) has deletion method delete_option("mo_wpns_verify_customer"). Storage method found in file controllers/account.php at line 138. Deletion method found in file controllers/account.php at line 191. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("user_id", $user->ID) has deletion method delete_option("mo_wpns_new_registration"). Storage method found in file controllers/account.php at line 138. Deletion method found in file controllers/account.php at line 254. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("user_id", $user->ID) has deletion method delete_option("mo_wpns_verify_customer"). Storage method found in file controllers/account.php at line 138. Deletion method found in file controllers/account.php at line 272. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("user_id", $user->ID) has deletion method delete_option("mo2f_current_registration_status"). Storage method found in file controllers/account.php at line 138. Deletion method found in file controllers/account.php at line 273. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("user_id", $user->ID) has deletion method delete_option("mo_wpns_password"). Storage method found in file controllers/account.php at line 138. Deletion method found in file controllers/account.php at line 274. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("user_id", $user->ID) has deletion method delete_option("mo_eb_customer_selected_plan"). Storage method found in file controllers/account.php at line 138. Deletion method found in file views/account/profile.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_miniorange_admin", $user->ID) has deletion method delete_option("password_mismatch"). Storage method found in file controllers/account.php at line 270. Deletion method found in file controllers/account.php at line 45. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_miniorange_admin", $user->ID) has deletion method delete_option("password_mismatch"). Storage method found in file controllers/account.php at line 270. Deletion method found in file controllers/account.php at line 75. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_miniorange_admin", $user->ID) has deletion method delete_option("mo2f_email"). Storage method found in file controllers/account.php at line 270. Deletion method found in file controllers/account.php at line 189. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_miniorange_admin", $user->ID) has deletion method delete_option("mo_wpns_registration_status"). Storage method found in file controllers/account.php at line 270. Deletion method found in file controllers/account.php at line 190. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_miniorange_admin", $user->ID) has deletion method delete_option("mo_wpns_verify_customer"). Storage method found in file controllers/account.php at line 270. Deletion method found in file controllers/account.php at line 191. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_miniorange_admin", $user->ID) has deletion method delete_option("mo_wpns_new_registration"). Storage method found in file controllers/account.php at line 270. Deletion method found in file controllers/account.php at line 254. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_miniorange_admin", $user->ID) has deletion method delete_option("mo_wpns_verify_customer"). Storage method found in file controllers/account.php at line 270. Deletion method found in file controllers/account.php at line 272. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_miniorange_admin", $user->ID) has deletion method delete_option("mo2f_current_registration_status"). Storage method found in file controllers/account.php at line 270. Deletion method found in file controllers/account.php at line 273. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_miniorange_admin", $user->ID) has deletion method delete_option("mo_wpns_password"). Storage method found in file controllers/account.php at line 270. Deletion method found in file controllers/account.php at line 274. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_miniorange_admin", $user->ID) has deletion method delete_option("mo_eb_customer_selected_plan"). Storage method found in file controllers/account.php at line 270. Deletion method found in file views/account/profile.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_user_phone", $customerKey["phone"]) has deletion method delete_option("password_mismatch"). Storage method found in file controllers/account.php at line 243. Deletion method found in file controllers/account.php at line 45. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_user_phone", $customerKey["phone"]) has deletion method delete_option("password_mismatch"). Storage method found in file controllers/account.php at line 243. Deletion method found in file controllers/account.php at line 75. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_user_phone", $customerKey["phone"]) has deletion method delete_option("mo2f_email"). Storage method found in file controllers/account.php at line 243. Deletion method found in file controllers/account.php at line 189. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_user_phone", $customerKey["phone"]) has deletion method delete_option("mo_wpns_registration_status"). Storage method found in file controllers/account.php at line 243. Deletion method found in file controllers/account.php at line 190. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_user_phone", $customerKey["phone"]) has deletion method delete_option("mo_wpns_verify_customer"). Storage method found in file controllers/account.php at line 243. Deletion method found in file controllers/account.php at line 191. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_user_phone", $customerKey["phone"]) has deletion method delete_option("mo_wpns_new_registration"). Storage method found in file controllers/account.php at line 243. Deletion method found in file controllers/account.php at line 254. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_user_phone", $customerKey["phone"]) has deletion method delete_option("mo_wpns_verify_customer"). Storage method found in file controllers/account.php at line 243. Deletion method found in file controllers/account.php at line 272. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_user_phone", $customerKey["phone"]) has deletion method delete_option("mo2f_current_registration_status"). Storage method found in file controllers/account.php at line 243. Deletion method found in file controllers/account.php at line 273. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_user_phone", $customerKey["phone"]) has deletion method delete_option("mo_wpns_password"). Storage method found in file controllers/account.php at line 243. Deletion method found in file controllers/account.php at line 274. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_user_phone", $customerKey["phone"]) has deletion method delete_option("mo_eb_customer_selected_plan"). Storage method found in file controllers/account.php at line 243. Deletion method found in file views/account/profile.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_customer_token", $token) has deletion method delete_option("password_mismatch"). Storage method found in file controllers/account.php at line 267. Deletion method found in file controllers/account.php at line 45. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_customer_token", $token) has deletion method delete_option("password_mismatch"). Storage method found in file controllers/account.php at line 267. Deletion method found in file controllers/account.php at line 75. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_customer_token", $token) has deletion method delete_option("mo2f_email"). Storage method found in file controllers/account.php at line 267. Deletion method found in file controllers/account.php at line 189. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_customer_token", $token) has deletion method delete_option("mo_wpns_registration_status"). Storage method found in file controllers/account.php at line 267. Deletion method found in file controllers/account.php at line 190. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_customer_token", $token) has deletion method delete_option("mo_wpns_verify_customer"). Storage method found in file controllers/account.php at line 267. Deletion method found in file controllers/account.php at line 191. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_customer_token", $token) has deletion method delete_option("mo_wpns_new_registration"). Storage method found in file controllers/account.php at line 267. Deletion method found in file controllers/account.php at line 254. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_customer_token", $token) has deletion method delete_option("mo_wpns_verify_customer"). Storage method found in file controllers/account.php at line 267. Deletion method found in file controllers/account.php at line 272. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_customer_token", $token) has deletion method delete_option("mo2f_current_registration_status"). Storage method found in file controllers/account.php at line 267. Deletion method found in file controllers/account.php at line 273. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_customer_token", $token) has deletion method delete_option("mo_wpns_password"). Storage method found in file controllers/account.php at line 267. Deletion method found in file controllers/account.php at line 274. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_customer_token", $token) has deletion method delete_option("mo_eb_customer_selected_plan"). Storage method found in file controllers/account.php at line 267. Deletion method found in file views/account/profile.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_email", $email) has deletion method delete_option("password_mismatch"). Storage method found in file controllers/account.php at line 245. Deletion method found in file controllers/account.php at line 45. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_email", $email) has deletion method delete_option("password_mismatch"). Storage method found in file controllers/account.php at line 245. Deletion method found in file controllers/account.php at line 75. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_email", $email) has deletion method delete_option("mo2f_email"). Storage method found in file controllers/account.php at line 245. Deletion method found in file controllers/account.php at line 189. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_email", $email) has deletion method delete_option("mo_wpns_registration_status"). Storage method found in file controllers/account.php at line 245. Deletion method found in file controllers/account.php at line 190. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_email", $email) has deletion method delete_option("mo_wpns_verify_customer"). Storage method found in file controllers/account.php at line 245. Deletion method found in file controllers/account.php at line 191. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_email", $email) has deletion method delete_option("mo_wpns_new_registration"). Storage method found in file controllers/account.php at line 245. Deletion method found in file controllers/account.php at line 254. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_email", $email) has deletion method delete_option("mo_wpns_verify_customer"). Storage method found in file controllers/account.php at line 245. Deletion method found in file controllers/account.php at line 272. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_email", $email) has deletion method delete_option("mo2f_current_registration_status"). Storage method found in file controllers/account.php at line 245. Deletion method found in file controllers/account.php at line 273. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_email", $email) has deletion method delete_option("mo_wpns_password"). Storage method found in file controllers/account.php at line 245. Deletion method found in file controllers/account.php at line 274. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("mo2f_email", $email) has deletion method delete_option("mo_eb_customer_selected_plan"). Storage method found in file controllers/account.php at line 245. Deletion method found in file views/account/profile.php at line 51. 

[Art.17, Right to erasure] Deletion access is NONE_BUT_NOT_REQUIRED 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 799. Found in file controllers/account.php at line 130 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1577. Found in file controllers/account.php at line 265 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1584. Found in file controllers/account.php at line 266 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1598. Found in file controllers/account.php at line 268 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1449. Found in file controllers/account.php at line 242 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 844. Found in file controllers/account.php at line 138 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1613. Found in file controllers/account.php at line 270 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1458. Found in file controllers/account.php at line 243 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1591. Found in file controllers/account.php at line 267 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1467. Found in file controllers/account.php at line 245 

[Art.15, Right to access] Data access is NONE_BUT_NOT_REQUIRED 

[third_party] Third party usage is NONE for data types [] 

[encryption] API call that sends PII to unknown url uses unknown protocol. PII is insecurely encrypted with []. Found in file helper/mobackup_api.php at line 7 

[main] Applicable GDPR requirements: ['access', 'deletion', 'encryption', 'third_party'] 

[main] Is deletion in violation? False 

[main] Is access in violation? False 

[main] Is third_party in violation? False 

[main] Is encryption in violation? True 

[main] Complaint? False 


###########
### Q&A ###
###########

1. Why is my plugin in violation against GDPR?

GDPR (https://gdpr-info.eu/) aims to give citizens in the European Union (EU) control over their personal data. If a website collects or store user data, it is required to provide users functionalities to control their data, such as ones to erase or export their data. While a plugin do not directly interact with users, it may provide functionalities that collect or store personal data, which would make websites that deploy the plugin in violation against GDPR if the plugin does not provide corresponding functionalities to allow users control their personal data. Therefore, plugin developers are responsible to provide functions to manage the personal data they handle in accordance with GDPR. We list requirements by specific GDPR articles relevant to your plugin below.


[Art. 13, Information to be provided where personal data are collected from the data subject] If a plugin collects or handles personal data, it needs to provide privacy policy texts that explain what personal data is being collected and for what purpose. The texts are meant to be added to the privacy policy of the websites that deploy the plugin. 


            
[Art.17, Right to erasure] If a plugin stores personal data in a custom database they create or manage, or through Wordpress's native storage functions (e.g., update_user_meta), it needs to provide methods for users to erase the data upon request. Note that deleting data for all users upon uninstallation does not satisfy the requirement. 


            
        

2. How do I make my plugin compliant?

Please refer to the fix report below to see how you can make your plugin comply with GDPR.

        

##################
### Fix Report ###
##################

############################
# Data Deletion Fix Report #
############################

This report suggests fixes to comply with the GDPR Art. 17, Right to erasure (https://gdpr-info.eu/art-17-gdpr/). The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/adding-the-personal-data-eraser-to-your-plugin/ for more details.

1) Implement a function that deletes all the user data collected in the plugin. Sample code:


/**
* Removes all collected data of a user.
*
* @param string $email_address   email address to manipulate
* @param int    $page            pagination
*
* @return array
*/
function backup-and-restore-for-wp_remove_data( $email_address, $page = 1 ) {
    
    $page = (int) $page;


    //TODO: Delete the user data that was stored using Wordpress functions

    //Below is the sample code for deleting user meta and may need to be modified to suit the plugin.
    $user_id = get_user_by('email', $email_address)
    $key = 'email' //Sample user meta key
    if ( $customer->user_id > 0 ) {
        //Delete user meta data by $key
        delete_user_meta( $user_id, $key );
    }
        



    // Tell core if we have more data to delete still
    $done = true;
    return array(
        'items_removed'  => $items_removed, // true if collected data of a user is being deleted
        'items_retained' => $items_retained, // true if certain data needs to be retained
        'messages'       => sprintf( __( 'Data of user with email %s successfully deleted.', 'backup-and-restore-for-wp' ), $email_address ), // Put messages for data removal
        'done'           => $done, // true if all the removal processes are done (all data of the user is removed)
    );
}
        

2) Hook the deletion function to the Wordpress's Personal Data Removal tool


/**
* Registers all data erasers.
*
* @param array $exporters
*
* @return mixed
*/
function backup-and-restore-for-wp_register_privacy_erasers( $erasers ) {
    $erasers['my-plugin-slug'] = array(
        'eraser_friendly_name' => __( '<eraser name>', 'backup-and-restore-for-wp' ),
        'callback'             => 'backup-and-restore-for-wp_remove_data',
    );
    return $erasers;
}
        

add_filter( 'wp_privacy_personal_data_erasers', 'backup-and-restore-for-wp_register_privacy_erasers' );
        

        

#############################
# Privacy Policy Fix Report #
#############################

This report suggests fixes to comply with the GDPR Art. 13 (https://gdpr-info.eu/art-13-gdpr/) through including a privacy notice. The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/suggesting-text-for-the-site-privacy-policy/ for more details.

1) Implement a function that includes the privacy policy for the plugin and provide it to wordpress through wp_add_privacy_policy_content(). Sample code:


/**
* Adds a privacy policy statement.
*/
function backup-and-restore-for-wp_add_privacy_policy_content() {
    if ( ! function_exists( 'wp_add_privacy_policy_content' ) ) {
        return;
    }
    //TODO: modify the content below to include the privacy policy for the plugin.
    $content = '<p class="privacy-policy-tutorial">' . __( 'Some introductory content for the suggested text.', 'backup-and-restore-for-wp' ) . '</p>'
            . '<strong class="privacy-policy-tutorial">' . __( 'Suggested Text:', 'backup-and-restore-for-wp' ) . '</strong> '
            . sprintf(
                __( 'When you leave a comment on this site, we send your name, email address, IP address and comment text to example.com. Example.com does not retain your personal data. The example.com privacy policy is <a href="%1$s" target="_blank">here</a>.', 'backup-and-restore-for-wp' ),
                'https://example.com/privacy-policy'
            );
    wp_add_privacy_policy_content( 'backup-and-restore-for-wp', wp_kses_post( wpautop( $content, false ) ) );
}
        

2) Hook the privacy policy function to the Wordpress's admin initialization action.


add_action( 'admin_init', 'backup-and-restore-for-wp_add_privacy_policy_content' );
        

        


Disclaimer: The sample code provided above is only for reference and does not guarantee GDPR compliance. The recommended list of data to delete/export may not be comprehensive. 
        
Done.
