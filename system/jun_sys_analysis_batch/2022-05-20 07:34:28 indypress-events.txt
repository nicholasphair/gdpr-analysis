Timeout in resolving values
Timeout in running neo4j query
Running Main.py on indypress-events

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.404492.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:00.930428.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 0 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.207983.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 2 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.705511.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 798 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:01.202654.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 0 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.661969.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.086981.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 223 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:03.506930.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 4367
Added 3344 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 4413
Added 46 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.317562.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/indypress-events/indypress_event.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/indypress-events/indypress_event/api/event.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/indypress-events/indypress_event/classes/event_admin.class.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/indypress-events/indypress_event/classes/event.class.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/indypress-events/indypress_event/classes/event_page.class.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/indypress-events/indypress_event/classes/settings.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/indypress-events/indypress_event/form_inputs/daterange.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/indypress-events/indypress_event/templates/single-indypress_event.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/indypress-events/indypress_event/widget/event-calendar.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/indypress-events/indypress_event/widget/event.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:01.173812.

2 REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
4365 PHP_REACHES edges created
46 PHP_REACHES edges created
4413 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 1360 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.016218.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:01.112671.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 4 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.433627.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 5 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.161202.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.051658.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.063282.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.007610.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.038922.

9 PHP_REACHES edges created
9 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 7 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.119832.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
3 SQL operations to process.
SELECT meta.meta_value, posts.id, posts.post_title FROM $wpdb AS meta INNER JOIN $wpdb AS posts
		ON meta.post_id = posts.id
		WHERE posts.post_status="publish" AND
		posts.post_type="indypress_event" AND
		meta.meta_key = "event_start" AND
		meta.meta_value >= $period_0 AND
		meta.meta_value <= strtotime("next Sunday")
		ORDER BY meta.meta_value ASC
SQL command (SELECT meta.meta_value, posts.id, posts.post_title FROM $wpdb AS meta INNER JOIN $wpdb AS posts ON meta.post_id = posts.id WHERE posts.post_status="publish" AND posts.post_type="indypress_event" AND meta.meta_key = "event_start" AND meta.meta_value >= $period_0 AND meta.meta_value <= strtotime("next Sunday") ORDER BY meta.meta_value ASC) cannot be parsed correct.
SELECT DAYOFMONTH(FROM_UNIXTIME(meta_value)) `day`, posts.*
			FROM $wpdb AS meta
				INNER JOIN $wpdb AS posts
				ON meta.post_id=posts.id 
			WHERE posts.post_status='publish'
				AND posts.post_type='indypress_event'
				AND meta_key='event_start'
				AND meta.meta_value >='strtotime("00:00", strtotime("first day of this month"))'
				AND meta.meta_value <'strtotime("00:00", strtotime("first day of next month"))'
			ORDER BY day ASC
SQL command (SELECT DAYOFMONTH(FROM_UNIXTIME(meta_value)) `day`, posts.* FROM $wpdb AS meta INNER JOIN $wpdb AS posts ON meta.post_id=posts.id WHERE posts.post_status='publish' AND posts.post_type='indypress_event' AND meta_key='event_start' AND meta.meta_value >='strtotime("00:00", strtotime("first day of this month"))' AND meta.meta_value <'strtotime("00:00", strtotime("first day of next month"))' ORDER BY day ASC) cannot be parsed correct.
SELECT * FROM $wpdb AS meta2 INNER JOIN $wpdb AS posts2 ON meta2.post_id=posts2.id 
SQL command (SELECT * FROM $wpdb AS meta2 INNER JOIN $wpdb AS posts2 ON meta2.post_id=posts2.id ) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [323, 5313, 6013]
Added 0 SQL nodes. 0 out of 3 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:02.528169.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'<label for="event_location">event location</label>
			<input type="text" name="event_location" id="event_location" value="stripslashes($args["event_location"])" maxlength="64" title="event location" '' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'$option'' cannot be parsed correct.
HTML code '$'date("M j, Y @ G:i", $timestamp)'' cannot be parsed correct.
HTML code '$'$before_widget'' cannot be parsed correct.
HTML code '$'$before_title'' cannot be parsed correct.
HTML code '$'<a href=get_category_link($instance["cat"])"$instance_title</a>'' cannot be parsed correct.
HTML code '$'$instance_title'' cannot be parsed correct.
HTML code '$'$after_title'' cannot be parsed correct.
HTML code '$'<th>$wp_locale->get_weekday_initial($wp_locale->get_weekday($i + 17))</th>'' cannot be parsed correct.
HTML code '$'<a data-dialog=str_replace("", "&quot;", $list)" class="indy-event-calendar-multi indy-event-calendar-link" data-day="$d" title="count($posts) eventi"$d</a>'' cannot be parsed correct.
HTML code '$'<a class="indy-event-calendar-link" title="get_the_title()" href="get_permalink()"$d</a>'' cannot be parsed correct.
HTML code '$'$d'' cannot be parsed correct.
HTML code '$'$after_widget'' cannot be parsed correct.
HTML code '$'$this->get_field_id("title")'' cannot be parsed correct.
HTML code '$'$this->get_field_id("title")'' cannot be parsed correct.
HTML code '$'$this->get_field_name("title")'' cannot be parsed correct.
HTML code '$'$instance_title'' cannot be parsed correct.
HTML code '$'$before_widget'' cannot be parsed correct.
HTML code '$'$before_title'' cannot be parsed correct.
HTML code '$'<a href=get_category_link($instance["cat"])"$instance_title</a>'' cannot be parsed correct.
HTML code '$'$instance_title'' cannot be parsed correct.
HTML code '$'$after_title'' cannot be parsed correct.
HTML code '$'<li class="nostyle"><strong>date_i18n("j F", $post->meta_value)</strong></li>'' cannot be parsed correct.
HTML code '$'date("c", $start)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "event_location", true)'' cannot be parsed correct.
HTML code '$'$instance_no_event'' cannot be parsed correct.
HTML code '$'$after_widget'' cannot be parsed correct.
HTML code '$'$this->get_field_id("title")'' cannot be parsed correct.
HTML code '$'$this->get_field_id("title")'' cannot be parsed correct.
HTML code '$'$this->get_field_name("title")'' cannot be parsed correct.
HTML code '$'$instance_title'' cannot be parsed correct.
HTML code '$'$this->get_field_id("no_event")'' cannot be parsed correct.
HTML code '$'$this->get_field_id("no_event")'' cannot be parsed correct.
HTML code '$'$this->get_field_name("no_event")'' cannot be parsed correct.
HTML code '$'$instance_no_event'' cannot be parsed correct.
HTML code '$'$this->get_field_id("active_categories")'' cannot be parsed correct.
HTML code '$'$this->get_field_id("active_categories")'' cannot be parsed correct.
HTML code '$'$this->get_field_name("active_categories")'' cannot be parsed correct.
HTML code '$'$instance_active_categories'' cannot be parsed correct.
HTML code '$' checked="checked"'' cannot be parsed correct.
HTML code '$'<tr>'' cannot be parsed correct.
HTML code '$'<td>'' cannot be parsed correct.
HTML code '$'</td>'' cannot be parsed correct.
HTML code '$'</tr>'' cannot be parsed correct.
HTML code '$'<ul class="vcalendar">'' cannot be parsed correct.
HTML code '$'There arent events'' cannot be parsed correct.
HTML code '$'</ul>'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:09.711731.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.047929.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 3 do_action/apply_filters calls and 26 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:01.099436.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbplusDetector
### Start running FrontBaseDetector
### Finish running DbaseDetector
### Start running HashDetector
### Finish running FileProDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running FirebirdInterBaseDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running MySQLDetector
### Start running MySQLiDetector
### Finish running MongoDbDetector
### Start running Oci8Detector
### Finish running MsqlDetector
### Start running OpenSSLDetector
### Finish running Oci8Detector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running HashDetector
### Start running PhpCurlDetector
### Finish running ArrayElementDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PasswordHashingDetector
### Start running PHPRetrievalDetector
### Finish running PHPIncludedDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PhpCurlDetector
### Start running PhpVarDetector
### Finish running OpenSSLDetector
### Start running PostgreSQLDetector
### Finish running PhpVarDetector
### Start running PropertyDetector
### Finish running PostgreSQLDetector
### Start running Sqlite3Detector
### Finish running PHPStorageDetector
### Start running SqliteDetector
### Finish running PHPRetrievalDetector
### Start running SqlServerDetector
### Finish running PropertyDetector
### Start running SybaseDetector
### Finish running SqliteDetector
### Start running TokyoTyrantDetector
### Finish running SybaseDetector
### Start running UserInputDetector
### Finish running TokyoTyrantDetector
### Start running VariableDetector
### Finish running Sqlite3Detector
### Start running WordpressHashingFnDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRemoteDetector
### Finish running SqlServerDetector
### Start running WordPressRetrievalDetector
### Finish running WordPressRemoteDetector
### Start running WordPressStorageDetector
### Finish running MySQLiDetector
### Start running WP_UserDetector
### Finish running maxdbDetector
### Start running GenericDatabaseUsageDetector
### Finish running WP_UserDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running VariableDetector
### Start running UninstallDetector
### Finish running GenericDatabaseUsageDetector
### Finish running UserInputDetector
### Finish running WordPressStorageDetector
### Finish running DeletionDetector
### Finish running UninstallDetector
### Finish running WordPressRetrievalDetector
### Finished running detectors
api/event.php:17
  - RETRIEVAL call to get_post_meta($post->ID, "event_start", TRUE) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
api/event.php:18
  - RETRIEVAL call to get_post_meta($post->ID, "event_end", TRUE) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
api/event.php:19
  - RETRIEVAL call to get_post_meta($post->ID, "event_location", TRUE) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
classes/event.class.php:26
  - RETRIEVAL call to get_post($post_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
classes/event.class.php:70
  - RETRIEVAL call to get_option("indypressevent_permalink", "event") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
classes/event_admin.class.php:27
  - RETRIEVAL call to get_post_meta($post->ID, "event_location", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
classes/event_admin.class.php:45
  - RETRIEVAL call to get_post_meta($post->ID, "event_start", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
classes/event_admin.class.php:46
  - RETRIEVAL call to get_post_meta($post->ID, "event_end", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
classes/event_admin.class.php:215
  - RETRIEVAL call to get_post_meta($post_id, "event_start", TRUE) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
classes/settings.php:74
  - RETRIEVAL call to get_option("indypressevent_add_new_event", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
classes/settings.php:83
  - RETRIEVAL call to get_option($option, $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
classes/settings.php:95
  - RETRIEVAL call to get_option("indypressevent_permalink", "event/%post_id%") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
widget/event.php:75
  - RETRIEVAL call to get_post_meta($post->ID, "event_start", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
widget/event.php:77
  - RETRIEVAL call to get_post_meta($post->ID, "event_location", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta 

classes/event_admin.class.php:155
  - STORAGE call to update_post_meta($post_id, "event_location", $location) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
classes/event_admin.class.php:202
  - STORAGE call to update_post_meta($post_id, "event_start", $start) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
classes/event_admin.class.php:203
  - STORAGE call to update_post_meta($post_id, "event_end", $end) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta 

By data type:
option
	WordPressRetrievalDetector.get_option("indypressevent_permalink", "event/%post_id%") - {'option'}
	WordPressRetrievalDetector.get_option("indypressevent_add_new_event", true) - {'option'}
	WordPressRetrievalDetector.get_option($option, $default) - {'option'}
	WordPressRetrievalDetector.get_option("indypressevent_permalink", "event") - {'option'}
post
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'post', 'wp_post'}
post_meta
	WordPressStorageDetector.update_post_meta($post_id, "event_end", $end) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "event_start", TRUE) - {'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "event_start", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "event_location", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "event_end", TRUE) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "event_start", TRUE) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "event_location", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "event_start", $start) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "event_location", $location) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "event_end", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "event_location", TRUE) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "event_start", true) - {'post_meta'}
wp_post
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'post', 'wp_post'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:07.678831.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 30 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.132538.

30 STORE_REACHES edges created
30 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
In total, tainted 0 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
In total, tainted 0 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:00.005911.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:00:44.748176!
RETRIEVAL call to get_post_meta($post->ID, "event_start", TRUE) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "event_end", TRUE) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "event_location", TRUE) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($post_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("indypressevent_permalink", "event") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "event_start", TRUE) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "event_location", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "event_start", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "event_end", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("indypressevent_add_new_event", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option($option, $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("indypressevent_permalink", "event/%post_id%") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "event_start", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "event_location", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
STORAGE call to update_post_meta($post_id, "event_location", $location) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "event_start", $start) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "event_end", $end) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found no personal data in the plugin. No analysis needed. 

[main] Complaint? True 

No findings
