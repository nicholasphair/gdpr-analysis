Timeout in resolving values
Timeout in running neo4j query
Running Main.py on wp-datepicker

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:02.842540.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.950861.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 404 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:01.281927.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 3 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.783851.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 3186 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:01.936150.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 119 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:01.173211.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.095658.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 1247 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:53.498044.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 17415
Added 12456 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 60218
Added 42803 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:04.959610.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-datepicker/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-datepicker/inc/date_range.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-datepicker/inc/functions_inner.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-datepicker/inc/functions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-datepicker/inc/speed_opt_template.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-datepicker/inc/wpdp_settings.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-datepicker/io/functions-inner.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-datepicker/io/phpqrcode.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-datepicker/templates/wpdp.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.891276.

404 PHP_REACHES edges created
3 REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
3186 PHP_REACHES edges created
119 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
13703 PHP_REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
14000 PHP_REACHES edges created
15000 PHP_REACHES edges created
16000 PHP_REACHES edges created
17000 PHP_REACHES edges created
18000 PHP_REACHES edges created
19000 PHP_REACHES edges created
20000 PHP_REACHES edges created
21000 PHP_REACHES edges created
22000 PHP_REACHES edges created
23000 PHP_REACHES edges created
24000 PHP_REACHES edges created
25000 PHP_REACHES edges created
26000 PHP_REACHES edges created
27000 PHP_REACHES edges created
28000 PHP_REACHES edges created
29000 PHP_REACHES edges created
30000 PHP_REACHES edges created
31000 PHP_REACHES edges created
32000 PHP_REACHES edges created
33000 PHP_REACHES edges created
34000 PHP_REACHES edges created
35000 PHP_REACHES edges created
36000 PHP_REACHES edges created
37000 PHP_REACHES edges created
38000 PHP_REACHES edges created
39000 PHP_REACHES edges created
40000 PHP_REACHES edges created
41000 PHP_REACHES edges created
42000 PHP_REACHES edges created
42803 PHP_REACHES edges created
60218 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 5765 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.338450.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 2 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:02.001054.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 571 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:22.513838.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 459 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.214971.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.843485.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:13.305167.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.072028.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.035721.

2 CALLS edges created
1000 PHP_REACHES edges created
1030 PHP_REACHES edges created
1032 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 718 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.168121.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
3 SQL operations to process.
SELECT * FROM $wpdboptions WHERE option_name LIKE '$wpdp_option_name%';
SQL command (SELECT * FROM $wpdboptions WHERE option_name LIKE '$wpdp_option_name%';) cannot be parsed correct.
SELECT * FROM $wpdboptions WHERE option_id = '$option_id' ;
SQL command (SELECT * FROM $wpdboptions WHERE option_id = '$option_id' ;) cannot be parsed correct.
SELECT * FROM $wpdboptions WHERE option_name LIKE 'wp_datepicker_option-%'
SQL command (SELECT * FROM $wpdboptions WHERE option_name LIKE 'wp_datepicker_option-%') cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [4076, 4294, 3952]
Added 0 SQL nodes. 0 out of 3 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:01.757985.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'enableddisabled'' cannot be parsed correct.
HTML code '$'$main_selector'' cannot be parsed correct.
HTML code '$'$main_selector'' cannot be parsed correct.
HTML code '$'$selector'' cannot be parsed correct.
HTML code '$'$selector'' cannot be parsed correct.
HTML code '$'$main_selector'' cannot be parsed correct.
HTML code '$'get_option("wpdp_range")'' cannot be parsed correct.
HTML code '$'$main_selector'' cannot be parsed correct.
HTML code '$'get_option("wpdp_range")'' cannot be parsed correct.
HTML code '$'$main_selector'' cannot be parsed correct.
HTML code '$'get_option("wpdp_range")'' cannot be parsed correct.
HTML code '$'$main_selector'' cannot be parsed correct.
HTML code '$'$datepicker'' cannot be parsed correct.
HTML code '$'$datepicker'' cannot be parsed correct.
HTML code '$'$datepicker'' cannot be parsed correct.
HTML code '$'$datepicker'' cannot be parsed correct.
HTML code '$'$datepicker'' cannot be parsed correct.
HTML code '$'$opts'' cannot be parsed correct.
HTML code '$'$vals'' cannot be parsed correct.
HTML code '$'$datepicker'' cannot be parsed correct.
HTML code '$'$wpdp_selector_div'' cannot be parsed correct.
HTML code '$'wpdp_slashes($wpdp_selectors)'' cannot be parsed correct.
HTML code '$'implode(", ", $options)'' cannot be parsed correct.
HTML code '$'$datepicker'' cannot be parsed correct.
HTML code '$'$datepicker'' cannot be parsed correct.
HTML code '$'$datepicker'' cannot be parsed correct.
HTML code '$'truefalse'' cannot be parsed correct.
HTML code '$'5001500'' cannot be parsed correct.
HTML code '$'current(explode("|", $wp_datepicker_language))'' cannot be parsed correct.
HTML code '$'$datepicker'' cannot be parsed correct.
HTML code '$'current(explode("|", $wp_datepicker_language))'' cannot be parsed correct.
HTML code '$'$datepicker'' cannot be parsed correct.
HTML code '$'current(explode("|", $wp_datepicker_language))'' cannot be parsed correct.
HTML code '$'str_replace(["#", "."], "", $wpdp_selector)'' cannot be parsed correct.
HTML code '$'trim($wpdp_selector_item)'' cannot be parsed correct.
HTML code '$'str_replace(["#", "."], "", $wpdp_selector)'' cannot be parsed correct.
HTML code '$'maybe_unserialize($datepicker->option_value)_use_custom_style1'' cannot be parsed correct.
HTML code '$'trim($wpdp_selector_item)'' cannot be parsed correct.
HTML code '$'str_replace(["#", "."], "", $wpdp_selector)'' cannot be parsed correct.
HTML code '$'trim($wpdp_selector_item)'' cannot be parsed correct.
HTML code '$'trim($wpdp_selector_item)'' cannot be parsed correct.
HTML code '$'str_replace(["#", "."], "", $wpdp_selector)'' cannot be parsed correct.
HTML code '$'$wpdp_selector_div'' cannot be parsed correct.
HTML code '$'trim($wpdp_selector_item)'' cannot be parsed correct.
HTML code '$'$datepicker'' cannot be parsed correct.
HTML code '$'trim($wpdp_selector_item)'' cannot be parsed correct.
HTML code '$'$wpdp_selector_div'' cannot be parsed correct.
HTML code '$'$datepicker'' cannot be parsed correct.
HTML code '$'trim($wpdp_selector_item)'' cannot be parsed correct.
HTML code '$'trim($wpdp_selector_item)'' cannot be parsed correct.
HTML code '$'trim($wpdp_selector_item)'' cannot be parsed correct.
HTML code '$'$datepicker'' cannot be parsed correct.
HTML code '$'maybe_unserialize($datepicker->option_value)_use_custom_style1'' cannot be parsed correct.
HTML code '$'trim($wpdp_selector_item)'' cannot be parsed correct.
HTML code '$'$item'' cannot be parsed correct.
HTML code '$'ucwords($item)'' cannot be parsed correct.
HTML code '$'$item'' cannot be parsed correct.
HTML code '$'$$item'' cannot be parsed correct.
HTML code '$'wpdp_get_current_option_name()'' cannot be parsed correct.
HTML code '$'$item'' cannot be parsed correct.
HTML code '$'$item'' cannot be parsed correct.
HTML code '$'$item'' cannot be parsed correct.
HTML code '$'$item'' cannot be parsed correct.
HTML code '$'$item'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'wpdp_get_current_option_name()'' cannot be parsed correct.
HTML code '$'$item'' cannot be parsed correct.
HTML code '$'$item'' cannot be parsed correct.
HTML code '$'$item'' cannot be parsed correct.
HTML code '$'$item'' cannot be parsed correct.
HTML code '$'$datepicker'' cannot be parsed correct.
HTML code '$'$datepicker'' cannot be parsed correct.
HTML code '$'trim($wpdp_selector_item)'' cannot be parsed correct.
HTML code '$'trim($wpdp_selector_item)'' cannot be parsed correct.
HTML code '$'trim($wpdp_selector_item)'' cannot be parsed correct.
HTML code '$'current(explode("|", $wp_datepicker_language))'' cannot be parsed correct.
HTML code '$'htmlspecialchars_decode($wp_datepicker_beforeShowDay)'' cannot be parsed correct.
HTML code '$'trim(array_key_exists("day", $wpdp_range_this)$wpdp_range_this["day"]"")'' cannot be parsed correct.
HTML code '$'trim(array_key_exists("month", $wpdp_range_this)$wpdp_range_this["month"]"")'' cannot be parsed correct.
HTML code '$'trim(array_key_exists("year", $wpdp_range_this)$wpdp_range_this["year"]"")'' cannot be parsed correct.
HTML code '$'trim(array_key_exists("target", $wpdp_range_this)$wpdp_range_this["target"]"")'' cannot be parsed correct.
HTML code '$'trim($wpdp_selector_item)'' cannot be parsed correct.
HTML code '$'$wpdp_selector_div'' cannot be parsed correct.
HTML code '$'trim($wpdp_selector_item)'' cannot be parsed correct.
HTML code '$'implode(":", $opt)'' cannot be parsed correct.
HTML code '$'trim($wpdp_selector_item)'' cannot be parsed correct.
HTML code '$'maybe_unserialize($datepicker->option_value)'' cannot be parsed correct.
HTML code '$'$wpdp_selector_div'' cannot be parsed correct.
HTML code '$'current($opt)'' cannot be parsed correct.
HTML code '$'implode(":", $opt)'' cannot be parsed correct.
HTML code '$'json_encode(["option_name" => $wpdp_new_option_name, "default_img" => $wpdp_url . "pro/img.default.jpg"])'' cannot be parsed correct.
HTML code '$'ob_get_contents()'' cannot be parsed correct.
HTML code '$'You can boost your page loading speed by using this option. If you understand this feature, simply copy/paste one URL per line to allow scripts and styles by this plugin on specific pages. It will make your web pages load faster. You may demand same features from other plugin developers as well, together we can improve the quality of work. Code is poetry.'' cannot be parsed correct.
HTML code '$'Leave empty to allow scripts on all pages. One URL per line to use ALLOW ONLY feature.'' cannot be parsed correct.
HTML code '$'home_url()'' cannot be parsed correct.
HTML code '$'implode("
", $wpdp_enqueue_url_get)'' cannot be parsed correct.
HTML code '$'By default, WordPress does not handle the scripts like this. I appreciate my team and the plugin users which continuously are contributing to this plugin with new ideas. So, in case you don\'t get this feature in other plugins or themes, do not blame anybody. As speed optimization should be the last step after development phase. So here we are. In case you need this feature or any other plugin or your existing websites, let us know.'' cannot be parsed correct.
HTML code '$'admin_url("/options-general.php?page=wp_dp")'' cannot be parsed correct.
HTML code '$'profree'' cannot be parsed correct.
HTML code '$'WP Datepicker ($wpdp_data_Version) Pro)'' cannot be parsed correct.
HTML code '$'admin_url("/options-general.php?page=wp_dp&wpdp_delete_option=" . $current_option)'' cannot be parsed correct.
HTML code '$'awake'' cannot be parsed correct.
HTML code '$'wpdp_get_current_option_name()'' cannot be parsed correct.
HTML code '$'$wpdp_url'' cannot be parsed correct.
HTML code '$'$tag_type'' cannot be parsed correct.
HTML code '$'{"class": "{\"symbol\": \".\"}", "id": "{\"symbol\": \"#\"}", "input": "{\"symbol\": \"input\", \"type\": \"{\\\"1\\\": [\\\"button\\\"], \\\"2\\\": [\\\"checkboxcolor\\\"], \\\"3\\\": [\\\"date\\\"], \\\"4\\\": [\\\"datetime\\\"], \\\"5\\\": [\\\"datetime-local\\\"], \\\"6\\\": [\\\"email\\\"], \\\"7\\\": [\\\"file\\\"], \\\"8\\\": [\\\"hidden\\\"], \\\"9\\\": [\\\"image\\\"], \\\"10\\\": [\\\"month\\\"], \\\"11\\\": [\\\"number\\\"], \\\"12\\\": [\\\"password\\\"], \\\"13\\\": [\\\"radio\\\"], \\\"14\\\": [\\\"range\\\"], \\\"15\\\": [\\\"reset\\\"], \\\"16\\\": [\\\"search\\\"], \\\"17\\\": [\\\"submit\\\"], \\\"18\\\": [\\\"tel\\\"], \\\"19\\\": [\\\"text\\\"], \\\"20\\\": [\\\"time\\\"], \\\"21\\\": [\\\"url\\\"], \\\"22\\\": [\\\"week\\\"]}\"}", "textarea": "{\"symbol\": \"textarea\"}", "select": "{\"symbol\": \"select\"}"}_$tag_type_symbol'' cannot be parsed correct.
HTML code '$'$tag_type'' cannot be parsed correct.
HTML code '$'$attr'' cannot be parsed correct.
HTML code '$'$attr'' cannot be parsed correct.
HTML code '$'$attr'' cannot be parsed correct.
HTML code '$'$tag_type'' cannot be parsed correct.
HTML code '$'$t'' cannot be parsed correct.
HTML code '$'$tag_elem'' cannot be parsed correct.
HTML code '$'$tag_elem'' cannot be parsed correct.
HTML code '$'$vals'' cannot be parsed correct.
HTML code '$'wpdp_get_current_option_name()'' cannot be parsed correct.
HTML code '$'get_option($current_option, [])'' cannot be parsed correct.
HTML code '$'wpdp_slashes($wpdp_selectors)'' cannot be parsed correct.
HTML code '$'sanitize_wpdp_data($_POST["wpdp_get_selected_datepicker"])'' cannot be parsed correct.
HTML code '$'wpdp_get_current_option_name()'' cannot be parsed correct.
HTML code '$'Will remove Saturdays & Sundays from date picker. Some service businesses don\'t offer weekend service.'' cannot be parsed correct.
HTML code '$'wpdp_get_current_option_name()'' cannot be parsed correct.
HTML code '$'sanitize_wpdp_data($_POST["wpdp_get_selected_datepicker"])'' cannot be parsed correct.
HTML code '$'wpdp_get_current_option_name()'' cannot be parsed correct.
HTML code '$'false'' cannot be parsed correct.
HTML code '$'str_replace(["datepicker-", ".js"], "", basename($filename))|basename($filename)'' cannot be parsed correct.
HTML code '$'selected="selected"'' cannot be parsed correct.
HTML code '$'str_replace(["datepicker-", ".js"], "", basename($filename)) (explode(" ", $lines[0])_1)'' cannot be parsed correct.
HTML code '$'sanitize_wpdp_data($_POST["wpdp_get_selected_datepicker"])'' cannot be parsed correct.
HTML code '$'wpdp_get_current_option_name()'' cannot be parsed correct.
HTML code '$'sanitize_wpdp_data($_POST["wpdp_get_selected_datepicker"])'' cannot be parsed correct.
HTML code '$'sanitize_wpdp_data($_POST["wpdp_get_selected_datepicker"])'' cannot be parsed correct.
HTML code '$'$script_key'' cannot be parsed correct.
HTML code '$'$script_val_title'' cannot be parsed correct.
HTML code '$'$script_key'' cannot be parsed correct.
HTML code '$'$script_val_guide'' cannot be parsed correct.
HTML code '$'wpdp_get_current_option_name()'' cannot be parsed correct.
HTML code '$'wpdp_get_current_option_name()'' cannot be parsed correct.
HTML code '$'e.g. Sep or September?'' cannot be parsed correct.
HTML code '$'$wpdp_premium_link'' cannot be parsed correct.
HTML code '$'$wpdp_urlimg/'' cannot be parsed correct.
HTML code '$'$wpdp_urlimg/loader.gif'' cannot be parsed correct.
HTML code '$'$addon'' cannot be parsed correct.
HTML code '$'$addon'' cannot be parsed correct.
HTML code '$'$details_ext'' cannot be parsed correct.
HTML code '$'strtoupper(str_replace("-", " ", $addon))'' cannot be parsed correct.
HTML code '$'checked($wpdp_js_init)'' cannot be parsed correct.
HTML code '$'date("d-m-Y", time())'' cannot be parsed correct.
HTML code '$'$this_css_prefix'' cannot be parsed correct.
HTML code '$'$this_css_prefix'' cannot be parsed correct.
HTML code '$'$this_css_prefix'' cannot be parsed correct.
HTML code '$'$this_css_prefix'' cannot be parsed correct.
HTML code '$'$this_css_prefix'' cannot be parsed correct.
HTML code '$'$this_css_prefix'' cannot be parsed correct.
HTML code '$'$this_css_prefix'' cannot be parsed correct.
HTML code '$'$this_css_prefix'' cannot be parsed correct.
HTML code '$'$this_css_prefix'' cannot be parsed correct.
HTML code '$'$this_css_prefix'' cannot be parsed correct.
HTML code '$'$this_css_prefix'' cannot be parsed correct.
HTML code '$'$this_css_prefix'' cannot be parsed correct.
HTML code '$'$this_css_prefix'' cannot be parsed correct.
HTML code '$'$this_css_prefix'' cannot be parsed correct.
HTML code '$'$this_css_prefix'' cannot be parsed correct.
HTML code '$'$this_css_prefix'' cannot be parsed correct.
HTML code '$'$plugin_urlio/sample.png'' cannot be parsed correct.
HTML code '$'$this_app_slug'' cannot be parsed correct.
HTML code '$'$plugin_urlimg/'' cannot be parsed correct.
HTML code '$'$this_css_prefix'' cannot be parsed correct.
HTML code '$'$this_css_prefix'' cannot be parsed correct.
HTML code '$'$this_css_prefix'' cannot be parsed correct.
HTML code '$'$this_css_prefix'' cannot be parsed correct.
HTML code '$'$this_css_prefix'' cannot be parsed correct.
HTML code '$'$this_css_prefix'' cannot be parsed correct.
HTML code '$'$this_css_prefix'' cannot be parsed correct.
HTML code '$'$this_prefix'' cannot be parsed correct.
HTML code '$'<img src=$this_plugin_urlio/sample.png?t=time()" /'' cannot be parsed correct.
HTML code '$'ord($frame[$y][$x]),'' cannot be parsed correct.
HTML code '$'<tr><th style="text-align:right">till $markerId: </th><td>number_format($thisTime - $lastTime, 6)s</td></tr>'' cannot be parsed correct.
HTML code '$'</tbody><tfoot>
                <tr style="border-top:2px solid black"><th style="text-align:right">TOTAL: </th><td>number_format($lastTime - $startTime, 6)s</td></tr>
            </tfoot>
            </table>'' cannot be parsed correct.
HTML code '$'join("<br/ >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;", $frame)'' cannot be parsed correct.
HTML code '$'join("<br/ >", $frame)'' cannot be parsed correct.
HTML code '$'(jQuery, true);
			});
		}
		
'' cannot be parsed correct.
HTML code '$' = \'yes\';
var wpdp_intv_'' cannot be parsed correct.
HTML code '$';
var wpdp_counter_'' cannot be parsed correct.
HTML code '$' = 0;
var wpdp_month_array_'' cannot be parsed correct.
HTML code '$' = [];
'' cannot be parsed correct.
HTML code '$'($, force){
'' cannot be parsed correct.
HTML code '$'<pre>'' cannot be parsed correct.
HTML code '$'</pre>'' cannot be parsed correct.
HTML code '$' = setInterval(function(){
		wpdp_counter_'' cannot be parsed correct.
HTML code '$'++;
		wpdp_refresh_'' cannot be parsed correct.
HTML code '$'(jQuery, '' cannot be parsed correct.
HTML code '$' = $.datepicker.regional['' cannot be parsed correct.
HTML code '$' = $.datepicker.regional['' cannot be parsed correct.
HTML code '$'"></div>\').insertAfter("'' cannot be parsed correct.
HTML code '$' == \'yes\' || force){
					
					
					
										
					if(typeof $.datepicker!=\'undefined\')
					$('' cannot be parsed correct.
HTML code '$' = \'done\';
					
				}
				'' cannot be parsed correct.
HTML code '$'\');

                        });

                        setTimeout(function () {
                                $('' cannot be parsed correct.
HTML code '$'][wpdp_options]['' cannot be parsed correct.
HTML code '$'][wpdp_options]['' cannot be parsed correct.
HTML code '$' > 2)
				clearInterval(wpdp_intv_'' cannot be parsed correct.
HTML code '$');
				'' cannot be parsed correct.
HTML code '$'</div>

<form method="post">

    '' cannot be parsed correct.
HTML code '$'</label>
    <textarea class="wpdp_speed_opt_text" id="wpdp_enqueue_url" name="wpdp_enqueue_url" placeholder="'' cannot be parsed correct.
HTML code '$'/postname"'' cannot be parsed correct.
HTML code '$'</textarea>

    <button type="submit" class="button button-primary" style="margin-top: 20px;">'' cannot be parsed correct.
HTML code '$'</button>

</form>


<div class="alert alert-warning" style="margin-top: 1rem;">
    '' cannot be parsed correct.
HTML code '$'</div>
'' cannot be parsed correct.
HTML code '$'\');
            </script>

        '' cannot be parsed correct.
HTML code '$'" style="text-decoration: none;"><i class="far fa-trash-alt"></i> '' cannot be parsed correct.
HTML code '$'/img/loader.gif" alt="">
    <i class="fa fa-check-circle"></i>
    <a href=""><i class="fa fa-sync-alt"></i> '' cannot be parsed correct.
HTML code '$'][wp_datepicker_alive_scripts]" value="'' cannot be parsed correct.
HTML code '$'][wp_datepicker]" class="wpdp-useable wpdp_selectors" data-name="[wp_datepicker]" placeholder="'' cannot be parsed correct.
HTML code '$'][wp_datepicker_language]" class="wpdp-useable wpdp_selectors" data-name="[wp_datepicker_language]">
<option>'' cannot be parsed correct.
HTML code '$'][wp_datepicker_autocomplete]" class="wpdp-useable" data-name="[wp_datepicker_autocomplete]" id="wp_datepicker_autocomplete_yes" value="1" '' cannot be parsed correct.
HTML code '$'][wp_datepicker_autocomplete]" class="wpdp-useable" data-name="[wp_datepicker_autocomplete]" id="wp_datepicker_autocomplete_no" value="0" '' cannot be parsed correct.
HTML code '$'][wp_datepicker_beforeShowDay]" class="wpdp-useable" data-name="[wp_datepicker_beforeShowDay]" id="wp_datepicker_beforeShowDay" placeholder="'' cannot be parsed correct.
HTML code '$'][wp_datepicker_readonly]" class="wpdp-useable" data-name="[wp_datepicker_readonly]" id="wp_datepicker_readonly_yes" value="1" '' cannot be parsed correct.
HTML code '$'][wp_datepicker_readonly]" class="wpdp-useable" data-name="[wp_datepicker_readonly]" id="wp_datepicker_readonly_no" value="0" '' cannot be parsed correct.
HTML code '$'][wp_datepicker_weekends]" class="wpdp-useable" data-name="[wp_datepicker_weekends]" id="wp_datepicker_weekends_yes" value="0" '' cannot be parsed correct.
HTML code '$'][wp_datepicker_weekends]" class="wpdp-useable" data-name="[wp_datepicker_weekends]" id="wp_datepicker_weekends_no" value="1" '' cannot be parsed correct.
HTML code '$'" /&gt;
    
    
        </code>

        <h3>
           '' cannot be parsed correct.
HTML code '$':
        </h3>




<pre>
    '' cannot be parsed correct.
HTML code '$'

    add_filter(\'wpdp_extend_options_instance_\'.$instance_id, \'wpdp_add_datepicker_option\', 10, 2);
    function wpdp_add_datepicker_option($options, $instance_id){
        //$instance_option_default = get_option(\'wp_datepicker_option-\'.$instance_id, array());
        $options[\'onSelect\'] = "
        function(date_str, dp_instance){
            console.log(date_str);
            console.log(dp_instance.currentDay);
            console.log(dp_instance.currentMonth + 1);
            console.log(dp_instance.currentYear);
        }";
        return $options;
    }

</pre>

    
    </div>
    
    <div class="nav-tab-content hide wpdp_global_settings">
'' cannot be parsed correct.
HTML code '$'    </div>
    
</div>


<style type="text/css">
.update-nag, #message{ display:none; }
</style>

<script type="text/javascript" language="javascript">

    jQuery(document).ready(function($) {


        '' cannot be parsed correct.
HTML code '$'][wp_datepicker_months]" class="wpdp-useable" data-name="[wp_datepicker_months]" id="wp_datepicker_months_yes" value="1" '' cannot be parsed correct.
HTML code '$'][wp_datepicker_months]" class="wpdp-useable" data-name="[wp_datepicker_months]" id="wp_datepicker_months_no" value="0" '' cannot be parsed correct.
HTML code '$'>
            '' cannot be parsed correct.
HTML code '$'        </label>

        <h3>
            '' cannot be parsed correct.
HTML code '$':
        </h3>
    
        <code style="right: 0;">
	'' cannot be parsed correct.
HTML code '$'    
            <br/>
            <br/>
    
	&lt;input type="text" id="joining_date" data-default="'' cannot be parsed correct.
HTML code '$'">
	
					<div class="google-badge">
	
	
	
						<a target="_blank" href="https://play.google.com/store/apps/details?id='' cannot be parsed correct.
HTML code '$'<table cellpadding="3" cellspacing="1">
                    <thead><tr style="border-bottom:1px solid silver"><td colspan="2" style="text-align:center">BENCHMARK</td></tr></thead>
                    <tbody>'' cannot be parsed correct.
HTML code '$'<pre><tt><br/ ><br/ ><br/ >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'' cannot be parsed correct.
HTML code '$'</tt></pre><br/ ><br/ ><br/ ><br/ ><br/ ><br/ >'' cannot be parsed correct.
HTML code '$'<pre><tt>'' cannot be parsed correct.
HTML code '$'</tt></pre>'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:21.282731.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.040060.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 0 do_action/apply_filters calls and 13 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.808632.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FileProDetector
### Start running FrontBaseDetector
### Finish running DbaseDetector
### Start running HashDetector
### Finish running DbplusDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running ArrayElementDetector
### Start running IngresDetector
### Finish running FirebirdInterBaseDetector
### Start running maxdbDetector
### Finish running IBMDb2Detector
### Start running MongoDbDetector
### Finish running HashDetector
### Start running MongoDetector
### Finish running FrontBaseDetector
### Start running MsqlDetector
### Finish running MongoDetector
### Start running MySQLDetector
### Finish running InformixDetector
### Start running MySQLiDetector
### Finish running IngresDetector
### Start running Oci8Detector
### Finish running MongoDbDetector
### Start running OpenSSLDetector
### Finish running MySQLDetector
### Start running ParadoxDetector
### Finish running MsqlDetector
### Start running PasswordHashingDetector
### Finish running OpenSSLDetector
### Start running PhpCurlDetector
### Finish running Oci8Detector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PhpCurlDetector
### Start running PHPRetrievalDetector
### Finish running ParadoxDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PasswordHashingDetector
### Start running PhpVarDetector
### Finish running PhpVarDetector
### Start running PostgreSQLDetector
### Finish running PostgreSQLDetector
### Start running PropertyDetector
### Finish running PHPRetrievalDetector
### Start running Sqlite3Detector
### Finish running Sqlite3Detector
### Start running SqliteDetector
### Finish running PropertyDetector
### Start running SqlServerDetector
### Finish running SqlServerDetector
### Start running SybaseDetector
### Finish running SqliteDetector
### Start running TokyoTyrantDetector
### Finish running TokyoTyrantDetector
### Start running UserInputDetector
### Finish running maxdbDetector
### Start running VariableDetector
### Finish running MySQLiDetector
### Start running WordpressHashingFnDetector
### Finish running SybaseDetector
### Start running WordPressRemoteDetector
### Finish running PHPStorageDetector
### Start running WordPressRetrievalDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressStorageDetector
### Finish running WordPressRemoteDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running UserInputDetector
### Start running GenericEncryptionDetector
### Finish running VariableDetector
### Start running DeletionDetector
### Finish running GenericDatabaseUsageDetector
### Start running UninstallDetector
### Finish running PHPIncludedDetector
### Finish running UninstallDetector
### Finish running GenericEncryptionDetector
### Finish running DeletionDetector
### Finish running WordPressRetrievalDetector
### Finish running WordPressStorageDetector
### Finished running detectors
io/functions-inner.php:284
  - MD5 called with parameters [rand]. Ignore if [rand] does not contain personal information.
io/functions-inner.php:551
  - MD5 called with parameters [rand_no]. Ignore if [rand_no] does not contain personal information. 

inc/wpdp_settings.php:379
  - RETRIEVAL call to file_get_contents($filename).
  - Data types: file
io/phpqrcode.php:878
  - RETRIEVAL call to file_get_contents($fileName).
  - Data types: file
io/phpqrcode.php:2623
  - RETRIEVAL call to file_get_contents($fileName).
  - Data types: file 

inc/functions.php:963
  - STORAGE call to file_put_contents($js_file, $js_code).
  - Data types: file
inc/functions.php:991
  - STORAGE call to file_put_contents($css_file, $css_code).
  - Data types: file
io/phpqrcode.php:240
  - STORAGE call to file_put_contents(QR_LOG_DIR . basename($outfile) . "-errors.txt", date("Y-m-d H:i:s") . ": " . $err, FILE_APPEND).
  - Data types: file
io/phpqrcode.php:242
  - STORAGE call to file_put_contents(QR_LOG_DIR . "errors.txt", date("Y-m-d H:i:s") . ": " . $err, FILE_APPEND).
  - Data types: file
io/phpqrcode.php:881
  - STORAGE call to file_put_contents($fileName, self->serial(self"frames"[$version])).
  - Data types: file
io/phpqrcode.php:2628
  - STORAGE call to file_put_contents($fileName, self->serial($bitMask)).
  - Data types: file
io/phpqrcode.php:3282
  - STORAGE call to file_put_contents($outfile, join("
", QRtools->binarize($code->data))).
  - Data types: file 

inc/date_range.php:38
  - RETRIEVAL call to get_option("wpdp_range") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/functions.php:118
  - RETRIEVAL call to get_option("wpdp_enqueue_url", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/functions.php:356
  - RETRIEVAL call to get_option("wpdp_range") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/functions.php:464
  - RETRIEVAL call to get_option("wp_datepicker_wpadmin", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/functions.php:934
  - RETRIEVAL call to get_option("wpdp_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/functions_inner.php:238
  - RETRIEVAL call to get_option("wpdp_previous_version_compatible") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/functions_inner.php:244
  - RETRIEVAL call to get_option("wp_datepicker") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/functions_inner.php:245
  - RETRIEVAL call to get_option("wp_datepicker_language") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/functions_inner.php:246
  - RETRIEVAL call to get_option("wp_datepicker_weekends") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/functions_inner.php:247
  - RETRIEVAL call to get_option("wp_datepicker_autocomplete", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/functions_inner.php:248
  - RETRIEVAL call to get_option("wp_datepicker_beforeShowDay") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/functions_inner.php:249
  - RETRIEVAL call to get_option("wp_datepicker_months") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/functions_inner.php:250
  - RETRIEVAL call to get_option("wp_datepicker_wpadmin") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/functions_inner.php:251
  - RETRIEVAL call to get_option("wp_datepicker_readonly") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/functions_inner.php:252
  - RETRIEVAL call to get_option("wpdp_options", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/functions_inner.php:253
  - RETRIEVAL call to get_option("wpdp_fonts") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/speed_opt_template.php:33
  - RETRIEVAL call to get_option("wpdp_enqueue_url", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/wpdp_settings.php:50
  - RETRIEVAL call to get_option($key) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/wpdp_settings.php:161
  - RETRIEVAL call to get_option($current_option, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/wpdp_settings.php:605
  - RETRIEVAL call to get_option("wpdp_developer_options", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/wpdp_settings.php:662
  - RETRIEVAL call to get_option("wpdp_global_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
index.php:35
  - RETRIEVAL call to get_option("wpdp_global_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
io/functions-inner.php:283
  - RETRIEVAL call to get_option($login_key_option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
io/functions-inner.php:304
  - RETRIEVAL call to get_option($login_key_option_name, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
io/functions-inner.php:336
  - RETRIEVAL call to get_option($this->prefix . "qrcode_hash") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
io/functions-inner.php:808
  - RETRIEVAL call to get_option($option_name, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
io/functions-inner.php:953
  - RETRIEVAL call to get_option($single_datepicker->option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
io/functions-inner.php:1013
  - RETRIEVAL call to get_option($optionName, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option 

inc/date_range.php:9
  - STORAGE call to update_option("wpdp_range", sanitize_wpdp_data($_POST["wpdp_range"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/functions.php:886
  - STORAGE call to update_option("wpdp_options", sanitize_wpdp_data($_POST["wpdp_options"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/functions.php:1029
  - STORAGE call to update_option("wpdp_developer_options", $wpdp_developer_options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/functions_inner.php:101
  - STORAGE call to update_option(wpdp_new_option_name(), []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/functions_inner.php:164
  - STORAGE call to update_option($wpdp_new_option_name, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/functions_inner.php:201
  - STORAGE call to update_option($option_name, $options_data_array) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/functions_inner.php:266
  - STORAGE call to update_option(wpdp_new_option_name(), $updated_array) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/functions_inner.php:271
  - STORAGE call to delete_option($option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/functions_inner.php:274
  - STORAGE call to update_option("wpdp_previous_version_compatible", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/speed_opt_template.php:25
  - STORAGE call to update_option("wpdp_enqueue_url", $wpdp_enqueue_url) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/wpdp_settings.php:11
  - STORAGE call to delete_option($_GET["wpdp_delete_option"]) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/wpdp_settings.php:41
  - STORAGE call to update_option("wp_datepicker_months", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/wpdp_settings.php:48
  - STORAGE call to update_option(sanitize_wpdp_data($key), $value) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/wpdp_settings.php:51
  - STORAGE call to update_option(sanitize_wpdp_data($key), sanitize_wpdp_data($value)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/wpdp_settings.php:53
  - STORAGE call to add_option(sanitize_wpdp_data($key), sanitize_wpdp_data($value), "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/wpdp_settings.php:60
  - STORAGE call to update_option("wp_datepicker", sanitize_wpdp_data($_POST["wp_datepicker"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/wpdp_settings.php:61
  - STORAGE call to update_option("wp_datepicker_weekends", sanitize_wpdp_data($_POST["wp_datepicker_weekends"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/wpdp_settings.php:62
  - STORAGE call to update_option("wp_datepicker_autocomplete", sanitize_wpdp_data($_POST["wp_datepicker_autocomplete"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/wpdp_settings.php:63
  - STORAGE call to update_option("wp_datepicker_beforeShowDay", sanitize_wpdp_data($_POST["wp_datepicker_beforeShowDay"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/wpdp_settings.php:65
  - STORAGE call to update_option("wp_datepicker_months", sanitize_wpdp_data($_POST["wp_datepicker_months"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/wpdp_settings.php:66
  - STORAGE call to update_option("wp_datepicker_wpadmin", sanitize_wpdp_data($_POST["wp_datepicker_wpadmin"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/wpdp_settings.php:69
  - STORAGE call to update_option("wp_datepicker_language", sanitize_wpdp_data($_POST["wp_datepicker_language"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/wpdp_settings.php:70
  - STORAGE call to update_option("wp_datepicker_readonly", sanitize_wpdp_data($_POST["wp_datepicker_readonly"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/wpdp_settings.php:103
  - STORAGE call to update_option(esc_attr($option_name), $options_data_array) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/wpdp_settings.php:132
  - STORAGE call to update_option("wpdp_global_settings", $wpdp_data_post) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
io/functions-inner.php:288
  - STORAGE call to update_option($login_key_option_name, [$rand_login_key]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
io/functions-inner.php:291
  - STORAGE call to update_option($login_key_option_name, $login_key_array) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
io/functions-inner.php:562
  - STORAGE call to update_option($this->prefix . "qrcode_hash", $epn_qrcode_hash_array) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
io/functions-inner.php:1065
  - STORAGE call to update_option($optionName, $wpdp_options_default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option 

io/phpqrcode.php:228
  - CRYPTOGRAPHY call to $mask->makeMaskNo($maskNo, $width, $frame, $bitMask, true).
io/phpqrcode.php:2625
  - CRYPTOGRAPHY call to $this->generateMaskNo($maskNo, $width, $s, $d).
io/phpqrcode.php:2631
  - CRYPTOGRAPHY call to $this->generateMaskNo($maskNo, $width, $s, $d).
io/phpqrcode.php:2655
  - CRYPTOGRAPHY call to $this->makeMaskNo($maskNo, $width, $frame, $masked).
io/phpqrcode.php:2784
  - CRYPTOGRAPHY call to $this->makeMaskNo($i, $width, $frame, $mask).
io/phpqrcode.php:3025
  - CRYPTOGRAPHY call to $maskObj->mask($width, $frame, $input->getErrorCorrectionLevel()).
io/phpqrcode.php:3027
  - CRYPTOGRAPHY call to $maskObj->makeMask($width, $frame, intval(QR_DEFAULT_MASK)8, $input->getErrorCorrectionLevel()).
io/phpqrcode.php:3030
  - CRYPTOGRAPHY call to $maskObj->makeMask($width, $frame, $mask, $input->getErrorCorrectionLevel()).
io/phpqrcode.php:3049
  - CRYPTOGRAPHY call to $this->encodeMask($input, -1). 

inc/functions_inner.php:271
  - DELETION call to delete_option($option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/wpdp_settings.php:11
  - DELETION call to delete_option($_GET["wpdp_delete_option"]) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

By data type:
file
	PHPRetrievalDetector.file_get_contents($fileName) - {'file'}
	PHPStorageDetector.file_put_contents($fileName, self->serial(self"frames"[$version])) - {'file'}
	PHPRetrievalDetector.file_get_contents($filename) - {'file'}
	PHPRetrievalDetector.file_get_contents($fileName) - {'file'}
	PHPStorageDetector.file_put_contents($fileName, self->serial($bitMask)) - {'file'}
	PHPStorageDetector.file_put_contents($outfile, join("
", QRtools->binarize($code->data))) - {'file'}
	PHPStorageDetector.file_put_contents(QR_LOG_DIR . basename($outfile) . "-errors.txt", date("Y-m-d H:i:s") . ": " . $err, FILE_APPEND) - {'file'}
	PHPStorageDetector.file_put_contents(QR_LOG_DIR . "errors.txt", date("Y-m-d H:i:s") . ": " . $err, FILE_APPEND) - {'file'}
	PHPStorageDetector.file_put_contents($js_file, $js_code) - {'file'}
	PHPStorageDetector.file_put_contents($css_file, $css_code) - {'file'}
none
	GenericEncryptionDetector.$maskObj->makeMask($width, $frame, $mask, $input->getErrorCorrectionLevel()) - set()
	GenericEncryptionDetector.$this->encodeMask($input, -1) - set()
	PHPIncludedDetector.(unknown) - set()
	GenericEncryptionDetector.$this->makeMaskNo($maskNo, $width, $frame, $masked) - set()
	PHPIncludedDetector.(unknown) - set()
	GenericEncryptionDetector.$this->makeMaskNo($i, $width, $frame, $mask) - set()
	GenericEncryptionDetector.$maskObj->makeMask($width, $frame, intval(QR_DEFAULT_MASK)8, $input->getErrorCorrectionLevel()) - set()
	GenericEncryptionDetector.$maskObj->mask($width, $frame, $input->getErrorCorrectionLevel()) - set()
	GenericEncryptionDetector.$this->generateMaskNo($maskNo, $width, $s, $d) - set()
	GenericEncryptionDetector.$mask->makeMaskNo($maskNo, $width, $frame, $bitMask, true) - set()
	GenericEncryptionDetector.$this->generateMaskNo($maskNo, $width, $s, $d) - set()
option
	WordPressStorageDetector.update_option("wp_datepicker_language", sanitize_wpdp_data($_POST["wp_datepicker_language"])) - {'option'}
	WordPressRetrievalDetector.get_option($key) - {'option'}
	WordPressRetrievalDetector.get_option("wpdp_range") - {'option'}
	WordPressStorageDetector.delete_option($_GET["wpdp_delete_option"]) - {'option'}
	WordPressRetrievalDetector.get_option("wpdp_options") - {'option'}
	WordPressRetrievalDetector.get_option("wp_datepicker_beforeShowDay") - {'option'}
	WordPressStorageDetector.update_option("wpdp_global_settings", $wpdp_data_post) - {'option'}
	WordPressStorageDetector.update_option(sanitize_wpdp_data($key), $value) - {'option'}
	WordPressStorageDetector.update_option("wp_datepicker_months", 0) - {'option'}
	WordPressStorageDetector.update_option($wpdp_new_option_name, []) - {'option'}
	WordPressStorageDetector.update_option(sanitize_wpdp_data($key), sanitize_wpdp_data($value)) - {'option'}
	DeletionDetector.delete_option($option_name) - {'option'}
	WordPressStorageDetector.update_option(wpdp_new_option_name(), $updated_array) - {'option'}
	WordPressRetrievalDetector.get_option("wp_datepicker_autocomplete", true) - {'option'}
	WordPressRetrievalDetector.get_option("wpdp_enqueue_url", []) - {'option'}
	WordPressStorageDetector.update_option(esc_attr($option_name), $options_data_array) - {'option'}
	WordPressRetrievalDetector.get_option("wp_datepicker_weekends") - {'option'}
	WordPressStorageDetector.update_option("wp_datepicker_months", sanitize_wpdp_data($_POST["wp_datepicker_months"])) - {'option'}
	WordPressRetrievalDetector.get_option($optionName, []) - {'option'}
	WordPressRetrievalDetector.get_option("wpdp_enqueue_url", []) - {'option'}
	WordPressRetrievalDetector.get_option("wp_datepicker_months") - {'option'}
	WordPressStorageDetector.update_option("wp_datepicker_wpadmin", sanitize_wpdp_data($_POST["wp_datepicker_wpadmin"])) - {'option'}
	WordPressRetrievalDetector.get_option($current_option, []) - {'option'}
	WordPressStorageDetector.update_option("wpdp_options", sanitize_wpdp_data($_POST["wpdp_options"])) - {'option'}
	DeletionDetector.delete_option($_GET["wpdp_delete_option"]) - {'option'}
	WordPressRetrievalDetector.get_option("wp_datepicker_wpadmin", 0) - {'option'}
	WordPressRetrievalDetector.get_option("wpdp_developer_options", []) - {'option'}
	WordPressStorageDetector.update_option($this->prefix . "qrcode_hash", $epn_qrcode_hash_array) - {'option'}
	WordPressRetrievalDetector.get_option("wp_datepicker_wpadmin") - {'option'}
	WordPressRetrievalDetector.get_option($login_key_option_name) - {'option'}
	WordPressStorageDetector.update_option("wp_datepicker", sanitize_wpdp_data($_POST["wp_datepicker"])) - {'option'}
	WordPressStorageDetector.update_option("wpdp_previous_version_compatible", true) - {'option'}
	WordPressRetrievalDetector.get_option($login_key_option_name, []) - {'option'}
	WordPressStorageDetector.update_option($login_key_option_name, $login_key_array) - {'option'}
	WordPressRetrievalDetector.get_option("wpdp_options", []) - {'option'}
	WordPressRetrievalDetector.get_option($single_datepicker->option_name) - {'option'}
	WordPressStorageDetector.update_option("wp_datepicker_weekends", sanitize_wpdp_data($_POST["wp_datepicker_weekends"])) - {'option'}
	WordPressRetrievalDetector.get_option($option_name, []) - {'option'}
	WordPressRetrievalDetector.get_option("wpdp_global_settings") - {'option'}
	WordPressRetrievalDetector.get_option("wpdp_global_settings") - {'option'}
	WordPressRetrievalDetector.get_option("wp_datepicker") - {'option'}
	WordPressRetrievalDetector.get_option("wpdp_fonts") - {'option'}
	WordPressRetrievalDetector.get_option("wpdp_range") - {'option'}
	WordPressRetrievalDetector.get_option("wp_datepicker_language") - {'option'}
	WordPressStorageDetector.update_option(wpdp_new_option_name(), []) - {'option'}
	WordPressStorageDetector.update_option("wpdp_enqueue_url", $wpdp_enqueue_url) - {'option'}
	WordPressStorageDetector.add_option(sanitize_wpdp_data($key), sanitize_wpdp_data($value), "", "no") - {'option'}
	WordPressStorageDetector.update_option("wp_datepicker_beforeShowDay", sanitize_wpdp_data($_POST["wp_datepicker_beforeShowDay"])) - {'option'}
	WordPressRetrievalDetector.get_option("wp_datepicker_readonly") - {'option'}
	WordPressStorageDetector.update_option("wp_datepicker_readonly", sanitize_wpdp_data($_POST["wp_datepicker_readonly"])) - {'option'}
	WordPressRetrievalDetector.get_option($this->prefix . "qrcode_hash") - {'option'}
	WordPressStorageDetector.update_option("wpdp_range", sanitize_wpdp_data($_POST["wpdp_range"])) - {'option'}
	WordPressStorageDetector.update_option("wp_datepicker_autocomplete", sanitize_wpdp_data($_POST["wp_datepicker_autocomplete"])) - {'option'}
	WordPressStorageDetector.update_option($optionName, $wpdp_options_default) - {'option'}
	WordPressRetrievalDetector.get_option("wpdp_previous_version_compatible") - {'option'}
	WordPressStorageDetector.delete_option($option_name) - {'option'}
	WordPressStorageDetector.update_option($login_key_option_name, [$rand_login_key]) - {'option'}
	WordPressStorageDetector.update_option($option_name, $options_data_array) - {'option'}
	WordPressStorageDetector.update_option("wpdp_developer_options", $wpdp_developer_options) - {'option'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:17.292571.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 833 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.409117.

833 STORE_REACHES edges created
833 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
In total, tainted 0 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 52 nodes as ENCRYPTED
In total, tainted 52 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:03.821405.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:03:19.398041!
DELETION call to delete_option($option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option($_GET["wpdp_delete_option"]) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
CRYPTOGRAPHY call to $mask->makeMaskNo($maskNo, $width, $frame, $bitMask, true).,None,None
CRYPTOGRAPHY call to $this->generateMaskNo($maskNo, $width, $s, $d).,None,None
CRYPTOGRAPHY call to $this->generateMaskNo($maskNo, $width, $s, $d).,None,None
CRYPTOGRAPHY call to $this->makeMaskNo($maskNo, $width, $frame, $masked).,None,None
CRYPTOGRAPHY call to $this->makeMaskNo($i, $width, $frame, $mask).,None,None
CRYPTOGRAPHY call to $maskObj->mask($width, $frame, $input->getErrorCorrectionLevel()).,None,None
CRYPTOGRAPHY call to $maskObj->makeMask($width, $frame, intval(QR_DEFAULT_MASK)8, $input->getErrorCorrectionLevel()).,None,None
CRYPTOGRAPHY call to $maskObj->makeMask($width, $frame, $mask, $input->getErrorCorrectionLevel()).,None,None
CRYPTOGRAPHY call to $this->encodeMask($input, -1).,None,None
MD5 called with parameters [rand]. Ignore if [rand] does not contain personal information.,md5,None
MD5 called with parameters [rand_no]. Ignore if [rand_no] does not contain personal information.,md5,None
RETRIEVAL call to file_get_contents($filename).,None,None
RETRIEVAL call to file_get_contents($fileName).,None,None
RETRIEVAL call to file_get_contents($fileName).,None,None
STORAGE call to file_put_contents($js_file, $js_code).,None,None
STORAGE call to file_put_contents($css_file, $css_code).,None,None
STORAGE call to file_put_contents(QR_LOG_DIR . basename($outfile) . "-errors.txt", date("Y-m-d H:i:s") . ": " . $err, FILE_APPEND).,None,None
STORAGE call to file_put_contents(QR_LOG_DIR . "errors.txt", date("Y-m-d H:i:s") . ": " . $err, FILE_APPEND).,None,None
STORAGE call to file_put_contents($fileName, self->serial($bitMask)).,None,None
STORAGE call to file_put_contents($outfile, join("
", QRtools->binarize($code->data))).,None,None
STORAGE call to file_put_contents($fileName, self->serial(self"frames"[$version])).,None,None
RETRIEVAL call to get_option("wpdp_range") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wpdp_enqueue_url", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wpdp_range") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wp_datepicker_wpadmin", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wpdp_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wpdp_previous_version_compatible") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wp_datepicker") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wp_datepicker_language") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wp_datepicker_weekends") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wp_datepicker_autocomplete", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wp_datepicker_beforeShowDay") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wp_datepicker_months") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wp_datepicker_wpadmin") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wp_datepicker_readonly") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wpdp_options", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wpdp_fonts") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wpdp_enqueue_url", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option($current_option, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option($key) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wpdp_developer_options", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wpdp_global_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wpdp_global_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($optionName, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option($login_key_option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($login_key_option_name, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option($this->prefix . "qrcode_hash") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($option_name, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option($single_datepicker->option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
STORAGE call to update_option("wpdp_range", sanitize_wpdp_data($_POST["wpdp_range"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wpdp_developer_options", $wpdp_developer_options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wpdp_options", sanitize_wpdp_data($_POST["wpdp_options"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(wpdp_new_option_name(), []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option($wpdp_new_option_name, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option($option_name, $options_data_array) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(wpdp_new_option_name(), $updated_array) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option($option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("wpdp_previous_version_compatible", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wpdp_enqueue_url", $wpdp_enqueue_url) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(esc_attr($option_name), $options_data_array) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option($_GET["wpdp_delete_option"]) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("wpdp_global_settings", $wpdp_data_post) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wp_datepicker_months", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(sanitize_wpdp_data($key), $value) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(sanitize_wpdp_data($key), sanitize_wpdp_data($value)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option(sanitize_wpdp_data($key), sanitize_wpdp_data($value), "", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wp_datepicker", sanitize_wpdp_data($_POST["wp_datepicker"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wp_datepicker_weekends", sanitize_wpdp_data($_POST["wp_datepicker_weekends"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wp_datepicker_autocomplete", sanitize_wpdp_data($_POST["wp_datepicker_autocomplete"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wp_datepicker_beforeShowDay", sanitize_wpdp_data($_POST["wp_datepicker_beforeShowDay"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wp_datepicker_months", sanitize_wpdp_data($_POST["wp_datepicker_months"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wp_datepicker_wpadmin", sanitize_wpdp_data($_POST["wp_datepicker_wpadmin"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wp_datepicker_language", sanitize_wpdp_data($_POST["wp_datepicker_language"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wp_datepicker_readonly", sanitize_wpdp_data($_POST["wp_datepicker_readonly"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option($optionName, $wpdp_options_default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option($login_key_option_name, [$rand_login_key]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option($login_key_option_name, $login_key_array) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option($this->prefix . "qrcode_hash", $epn_qrcode_hash_array) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found no personal data in the plugin. No analysis needed. 

[main] Complaint? True 

No findings
