Timeout in resolving values
Timeout in running neo4j query
Running Main.py on woo-photo-tags

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:01.051122.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.056755.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 0 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.218659.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 2 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.753898.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 460 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:00.906259.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 0 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.607062.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.112073.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 247 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:04.639420.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 4009
Added 3300 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 9321
Added 5312 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.692542.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/woo-photo-tags/uninstall.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/woo-photo-tags/woocommerce-photo-tags.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/woo-photo-tags/templates/wcpt-product.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.388739.

2 REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
4007 PHP_REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
5312 PHP_REACHES edges created
9321 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 1341 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.057591.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:03.822989.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 32 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:01.953677.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 20 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.161096.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.562961.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.313664.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.009840.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.034267.

52 PHP_REACHES edges created
52 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 32 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.113571.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
No SQL nodes to process.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:00.118858.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'<input type="checkbox" name="wcpt-image-sizes[$size]" value="1" checked(esc_attr($val), 1, false)/><label for="wcpt-image-sizes$size]"$size</label>&nbsp;&nbsp;&nbsp;'' cannot be parsed correct.
HTML code '$'</td>
        </tr>
        <tr>
        <td></td>
        <td colspan="6"><i>Select  image sizes on which to load the tags. Typically tags are suitable for larger images. Woocommerce product image sizes are deselected by default.</i> </td>
        </tr>
        </table>        
    <h3>Tagtool Options</h3>
    <table class="form-table">
        <tr>
        <th class="row">Products per page</th>
        <td><input type="text" name="wcpt-tagtool-results-count" value="get_option("wcpt-tagtool-results-count", 12)" /><br>
        <i>Select how many products to return per page on the tagging tool. Some themes may override the tagtool pagination, in this case set the tool to return more products, and use the filters to narrow your results.</i>
        </td>
        </tr>
        
    </table>
   '' cannot be parsed correct.
HTML code '$'$wcpt_product->get_permalink()'' cannot be parsed correct.
HTML code '$'$wcpt_product->get_image()'' cannot be parsed correct.
HTML code '$'$wcpt_product->get_permalink()'' cannot be parsed correct.
HTML code '$'$wcpt_product->get_title()'' cannot be parsed correct.
HTML code '$'$wcpt_product->get_price_html()'' cannot be parsed correct.
HTML code '$'wp_create_nonce(basename())'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'
        <h3>Tag Options</h3>
        <table class="form-table">
        <tr valign="top">
        <th></th><th>Font-Awesome Icon</th><th>Size</th><th>Colour</th><th>Label</th><th>Label Colour</th><th>Animation</th>
        </tr>
        <tr valign="top">
            <th><label>Original product</label> </th>
            <td><input type="text" name="wcpt-product-orig-icon" value="get_option("wcpt-product-orig-icon", "fa fa-plus-circle")" /></td>
            <td><input type="text" name="wcpt-product-orig-size" style="text-align: right; width:50px;" value="get_option("wcpt-product-orig-size", 20)" /> px </td>
            <td><input type="text" name="wcpt-product-orig-colour" value="get_option("wcpt-product-orig-colour", "#ffffff")" /></td>
            <td><input type="text" name="wcpt-product-orig-label" value="get_option("wcpt-product-orig-label", "Original Product")" /></td>
            <td><input type="text" name="wcpt-product-orig-label-colour" value="get_option("wcpt-product-orig-label-colour", "#000000")" /></td>
            <tdwcpt_animate_dd("wcpt-product-orig-animate", esc_attr(get_option("wcpt-product-orig-animate")))</td>
        </tr>
         
       <tr valign="top">
            <th><label>Lookalike product</label> </th>
            <td><input type="text" name="wcpt-product-look-icon" value="get_option("wcpt-product-look-icon")" /></td>
            <td><input type="text" name="wcpt-product-look-size" style="text-align: right;width:50px;" value="get_option("wcpt-product-look-size", 20)" /> px </td>
            <td><input type="text" name="wcpt-product-look-colour" value="get_option("wcpt-product-look-colour", "#ffffff")" /></td>
            <td><input type="text" name="wcpt-product-look-label" value="get_option("wcpt-product-look-label", "Suggested Product")" /></td>
            <td><input type="text" name="wcpt-product-look-label-colour" value="get_option("wcpt-product-look-label-colour", "#000000")" /></td>
            <tdwcpt_animate_dd("wcpt-product-look-animate", esc_attr(get_option("wcpt-product-look-animate")))</td>
        </tr>
        <tr>
        <td></td>
        <td colspan="6"><i>Woocommerce Photo Tag icons are <a href="https://fontawesome.com/icons?d=gallery&m=free" target="_blank"> FontAwesome icons</a>. Use the above settings to select your own icon shapes and colours.</i></td>
        </tr>
        
        <!--<tr valign="top">
            <th><label>User</label> </th>
            <td>fa <input type="text" name="wcpt-user-icon" value="get_option("wcpt-user-icon")" /></td>
            <td><input type="text" name="wcpt-user-size" value="get_option("wcpt-user-size")" /> px </td>
            <td><input type="text" name="wcpt-user-colour" value="get_option("wcpt-user-colour")" /></td>
            <tdwcpt_animate_dd("wcpt-user-animate", esc_attr(get_option("wcpt-user-animate")))</td>
        </tr>
        <tr valign="top">
            <th><label>Custom</label> </th>
            <td>fa <input type="text" name="wcpt-custom-icon" value="get_option("wcpt-custom-icon")" /></td>
            <td><input type="text" name="wcpt-custom-size" value="get_option("wcpt-custom-size")" /> px </td>
            <td><input type="text" name="wcpt-custom-colour" value="get_option("wcpt-custom-colour")" /></td>
            <tdwcpt_animate_dd("wcpt-custom-animate", esc_attr(get_option("wcpt-custom-animate")))</td>
        </tr> -->
         <tr>
        <th class="row">Use default product style</th>
        
        <td colspan="6"><input type="checkbox" name="wcpt-product-default" value="1" checked(esc_attr(get_option("wcpt-product-default", 1)), 1, false)/> &nbsp;<i>Use the default catalogue style for product tags (recommended). Disable this use the plugin template which you can override in your own theme. </i></td>
        </tr>
         <tr>
        <th class="row">Popup box</th>
        
        <td colspan="6"><input type="checkbox" name="wcpt-product-show-box" value="1" checked(esc_attr(get_option("wcpt-product-show-box", 1)), 1, false)/> &nbsp;<i>Create a bounding box for the tag popup with a themed heading, as per the settings above.</i></td>
        </tr>
        <tr>
        <th class="row">Pop-up border radius</th>
        
        <td colspan="6">
            <input type="text" name="wcpt-border-radius" style="text-align: right;" value="get_option("wcpt-border-radius", 0)" /> px <br>
            <i>Round the edges of your popup box to suit your theme.</i>
        </td>
        </tr>
        
        <!--<th class="row">Show on single posts</th>
        
        <td colspan="4"><input type="checkbox" name="wcpt-singular" value="1" checked(esc_attr(get_option("wcpt-singular", 1)), 1, false)/></td>
        </tr>
        <tr>
        <th class="row">Show in archives</th>
        
        <td colspan="4"><input type="checkbox" name="wcpt-archive" value="1" checked(esc_attr(get_option("wcpt-archive", 1)), 1, false)/></td>
        </tr>-->
        <tr>
        <th class="row">Product Tab</th>
        
        <td colspan="6"><input type="checkbox" name="wcpt-product-tab" value="1" checked(esc_attr(get_option("wcpt-product-tab", 1)), 1, false)/> &nbsp;<i>Add a tab to your single product view that shows all images and posts linked to that product using Woocommerce Photo Tags.</i> </td>
        </tr>
        <tr>
        <th class="row">Product Tab Heading</th>
        
        <td colspan="6"><input type="text" name="wcpt-product-tab-heading" value="get_option("wcpt-product-tab-heading", "Photo Tags")" /><br>
            <i>Choose a heading for the product tab on your product page.</i>
        </td>
        </tr>
        <tr>
        <th class="row">Load Bootstrap css</th>
        
        <td colspan="6"><input type="checkbox" name="wcpt-bootstrap" value="1" checked(esc_attr(get_option("wcpt-bootstrap", 1)), 1, false)/><i>Woocommerce Photo Tags uses Bootstrap css to create responsive grids. Disable this if you are having layout problems on the product tab.</i></td>
        </tr>

        <tr>
        <th class="row">Send events to Google Analytics</th>
        
        <td colspan="6"><input type="checkbox" name="wcpt-archive" value="1" checked(esc_attr(get_option("wcpt-ga", 0)), 1, false)/>&nbsp; <i>When enabled, Woocommerce Photo Tags will send interaction events to Google Analytics when users interact with your tags.</i></td>
        </tr>
        <tr>
        <th class="row">Preload Tags</th>
        
        <td colspan="6"><input type="checkbox" name="wcpt-preload" value="1" checked(esc_attr(get_option("wcpt-preload", 1)), 1, false)/> &nbsp;<i>Load tags when the page loads (recommended), not via ajax. Disable and test if you notice perfomance issues.</i></td>
        </tr><tr>
        <th class="row">Image sizes</th>
        
        <td colspan="6">        
    '' cannot be parsed correct.
HTML code '$'$tag_html'' cannot be parsed correct.
HTML code '$'<div id="wcpt-featured-products-inner">wcpt_get_all_designtags(false, $wcpt_arr_photos)_wcpt_featured_products</div>'' cannot be parsed correct.
HTML code '$'style="display:none"'' cannot be parsed correct.
HTML code '$'do_shortcode("[products columns=1 category=" . $cats . "" paginate="true" limit=" . esc_attr(get_option("wcpt-tagtool-results-count")) . " orderby="title"]")'' cannot be parsed correct.
HTML code '$'wp_send_json($response)'' cannot be parsed correct.
HTML code '$'wp_json_encode($photo_tags)'' cannot be parsed correct.
HTML code '$'<div class="product-simple draggable" id="$product->get_id()" data-type="product" data-product_id="$product->get_id()"'' cannot be parsed correct.
HTML code '$'wcpt_posts(["columns" => 3, "image_size" => "medium"])'' cannot be parsed correct.
HTML code '$'do_shortcode("[add_to_cart id=" . $id . """)'' cannot be parsed correct.
HTML code '$'</form></div>'' cannot be parsed correct.
HTML code '$'">
               '' cannot be parsed correct.
HTML code '$'            </a>
    </div>
    <div class="wcpt-product-title">
        <h4><a href="'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</a></h4>
    </div>

    <div class="wcpt-product-price price">
        <span class="woocommerce-Price-amount amount">'' cannot be parsed correct.
HTML code '$'</span>
    </div>

</div>'' cannot be parsed correct.
HTML code '$'
<div class="wrap">
        <h1 class="wp-heading-inline">Woocommerce Photo Tag Settings</h1>
        <form method="post" action="options.php">'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:05.274356.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.057410.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 3 do_action/apply_filters calls and 39 add_action/add_filter calls. Now connecting do-add pairs.
Added 1 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:01.627416.

1 PHP_REACHES edges created
1 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbplusDetector
### Start running FrontBaseDetector
### Finish running FirebirdInterBaseDetector
### Start running HashDetector
### Finish running FileProDetector
### Start running IBMDb2Detector
### Finish running DbaseDetector
### Start running InformixDetector
### Finish running CubridDetector
### Start running IngresDetector
### Finish running InformixDetector
### Start running maxdbDetector
### Finish running FrontBaseDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running IBMDb2Detector
### Start running MsqlDetector
### Finish running MongoDetector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running ArrayElementDetector
### Start running OpenSSLDetector
### Finish running MongoDbDetector
### Start running ParadoxDetector
### Finish running Oci8Detector
### Start running PasswordHashingDetector
### Finish running ParadoxDetector
### Start running PhpCurlDetector
### Finish running HashDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PhpCurlDetector
### Start running PHPRetrievalDetector
### Finish running PasswordHashingDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running OpenSSLDetector
### Start running PhpVarDetector
### Finish running PHPIncludedDetector
### Start running PostgreSQLDetector
### Finish running PhpVarDetector
### Start running PropertyDetector
### Finish running PostgreSQLDetector
### Start running Sqlite3Detector
### Finish running PHPStorageDetector
### Start running SqliteDetector
### Finish running PHPRetrievalDetector
### Start running SqlServerDetector
### Finish running SqliteDetector
### Start running SybaseDetector
### Finish running PropertyDetector
### Start running TokyoTyrantDetector
### Finish running Sqlite3Detector
### Start running UserInputDetector
### Finish running SybaseDetector
### Start running VariableDetector
### Finish running TokyoTyrantDetector
### Start running WordpressHashingFnDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRemoteDetector
### Finish running SqlServerDetector
### Start running WordPressRetrievalDetector
### Finish running WordPressRemoteDetector
### Start running WordPressStorageDetector
### Finish running VariableDetector
### Start running WP_UserDetector
### Finish running UserInputDetector
### Start running GenericDatabaseUsageDetector
### Finish running WP_UserDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running GenericDatabaseUsageDetector
### Start running UninstallDetector
### Finish running MySQLiDetector
### Finish running maxdbDetector
### Finish running DeletionDetector
### Finish running UninstallDetector
### Finish running WordPressStorageDetector
### Finish running WordPressRetrievalDetector
### Finished running detectors
woocommerce-photo-tags.php:46
  - RETRIEVAL call to get_option("wcpt-ga") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:46
  - RETRIEVAL call to get_option("wcpt-ga", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:47
  - RETRIEVAL call to get_option("wcpt-preload") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:47
  - RETRIEVAL call to get_option("wcpt-preload") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:54
  - RETRIEVAL call to get_option("wcpt-bootstrap") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:54
  - RETRIEVAL call to get_option("wcpt-bootstrap", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:143
  - RETRIEVAL call to get_option("wcpt-product-orig-icon", "fa fa-plus-circle") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:144
  - RETRIEVAL call to get_option("wcpt-product-orig-size", 20) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:145
  - RETRIEVAL call to get_option("wcpt-product-orig-colour", "#ffffff") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:146
  - RETRIEVAL call to get_option("wcpt-product-orig-label", "Original Product") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:147
  - RETRIEVAL call to get_option("wcpt-product-orig-label-colour", "#000000") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:148
  - RETRIEVAL call to get_option("wcpt-product-orig-animate") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:153
  - RETRIEVAL call to get_option("wcpt-product-look-icon") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:154
  - RETRIEVAL call to get_option("wcpt-product-look-size", 20) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:155
  - RETRIEVAL call to get_option("wcpt-product-look-colour", "#ffffff") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:156
  - RETRIEVAL call to get_option("wcpt-product-look-label", "Suggested Product") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:157
  - RETRIEVAL call to get_option("wcpt-product-look-label-colour", "#000000") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:158
  - RETRIEVAL call to get_option("wcpt-product-look-animate") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:167
  - RETRIEVAL call to get_option("wcpt-user-icon") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:168
  - RETRIEVAL call to get_option("wcpt-user-size") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:169
  - RETRIEVAL call to get_option("wcpt-user-colour") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:170
  - RETRIEVAL call to get_option("wcpt-user-animate") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:174
  - RETRIEVAL call to get_option("wcpt-custom-icon") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:175
  - RETRIEVAL call to get_option("wcpt-custom-size") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:176
  - RETRIEVAL call to get_option("wcpt-custom-colour") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:177
  - RETRIEVAL call to get_option("wcpt-custom-animate") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:182
  - RETRIEVAL call to get_option("wcpt-product-default", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:187
  - RETRIEVAL call to get_option("wcpt-product-show-box", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:193
  - RETRIEVAL call to get_option("wcpt-border-radius", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:200
  - RETRIEVAL call to get_option("wcpt-singular", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:205
  - RETRIEVAL call to get_option("wcpt-archive", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:210
  - RETRIEVAL call to get_option("wcpt-product-tab", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:215
  - RETRIEVAL call to get_option("wcpt-product-tab-heading", "Photo Tags") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:222
  - RETRIEVAL call to get_option("wcpt-bootstrap", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:228
  - RETRIEVAL call to get_option("wcpt-ga", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:233
  - RETRIEVAL call to get_option("wcpt-preload", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:241
  - RETRIEVAL call to get_option("wcpt-image-sizes") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:258
  - RETRIEVAL call to get_option("wcpt-tagtool-results-count", 12) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:333
  - RETRIEVAL call to get_post_meta($post->ID, "", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
woocommerce-photo-tags.php:449
  - RETRIEVAL call to get_option("wcpt-preload", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:545
  - RETRIEVAL call to get_option("wcpt-tagtool-results-count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:564
  - RETRIEVAL call to get_option("wcpt-tagtool-results-count", 12) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:661
  - RETRIEVAL call to get_post_meta($img_id, "wcpt-tag-count", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
woocommerce-photo-tags.php:677
  - RETRIEVAL call to get_option("wcpt-image-sizes") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:689
  - RETRIEVAL call to get_post_meta($attachment->ID, "wcpt-tag-count", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
woocommerce-photo-tags.php:762
  - RETRIEVAL call to get_post($tag_id) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, wp_post, post
woocommerce-photo-tags.php:764
  - RETRIEVAL call to get_post_meta($tag_id, "wcpt-attachment-id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
woocommerce-photo-tags.php:801
  - RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
woocommerce-photo-tags.php:851
  - RETRIEVAL call to get_post_meta(get_the_ID(), "wcpt-attachment-id") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $key (string). Returns (mixed).
  - Data types: post_meta
woocommerce-photo-tags.php:889
  - RETRIEVAL call to get_post($id) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, wp_post, post
woocommerce-photo-tags.php:902
  - RETRIEVAL call to get_post_meta($id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int). Returns (mixed).
  - Data types: post_meta
woocommerce-photo-tags.php:905
  - RETRIEVAL call to get_option("wcpt-product-orig-size", 20) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:905
  - RETRIEVAL call to get_option("wcpt-product-look-size", 20) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:917
  - RETRIEVAL call to get_option("wcpt-product-orig-icon", "fa fa-plus-circle") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:918
  - RETRIEVAL call to get_option("wcpt-product-look-icon", "fa fa-plus-circle") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:919
  - RETRIEVAL call to get_option("wcpt-product-show-box", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:921
  - RETRIEVAL call to get_option("wcpt-product-orig-animate") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:921
  - RETRIEVAL call to get_option("wcpt-product-look-animate") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:923
  - RETRIEVAL call to get_option("wcpt-product-orig-colour", "#ffffff") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:923
  - RETRIEVAL call to get_option("wcpt-product-look-colour", "lightgrey") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:924
  - RETRIEVAL call to get_option("wcpt-product-orig-label", "Original Product") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:924
  - RETRIEVAL call to get_option("wcpt-product-look-label", "Suggested Product") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:925
  - RETRIEVAL call to get_option("wcpt-product-orig-label-colour", "#000000") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:925
  - RETRIEVAL call to get_option("wcpt-product-look-label-colour", "#000000") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:948
  - RETRIEVAL call to get_option("wcpt-product-default", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:962
  - RETRIEVAL call to get_option("wcpt-border-radius", "0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:963
  - RETRIEVAL call to get_option("wcpt-border-radius", "0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:1082
  - RETRIEVAL call to get_posts($tag_args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
woocommerce-photo-tags.php:1138
  - RETRIEVAL call to get_option("wcpt-bootstrap") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:1160
  - RETRIEVAL call to get_post_meta(get_the_ID(), "wcpt-attachment-id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
woocommerce-photo-tags.php:1247
  - RETRIEVAL call to get_option("wcpt-product-tab") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
woocommerce-photo-tags.php:1248
  - RETRIEVAL call to get_option("wcpt-product-tab-heading", "Photo Tags") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option 

uninstall.php:17
  - STORAGE call to delete_option($option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
woocommerce-photo-tags.php:426
  - STORAGE call to update_post_meta($post_id, "wcpt-x-position", sanitize_text_field($fields["x-position"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
woocommerce-photo-tags.php:427
  - STORAGE call to update_post_meta($post_id, "wcpt-y-position", sanitize_text_field($fields["y-position"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
woocommerce-photo-tags.php:428
  - STORAGE call to update_post_meta($post_id, "wcpt-original", sanitize_text_field($fields["original"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
woocommerce-photo-tags.php:429
  - STORAGE call to update_post_meta($post_id, "wcpt-parent-image-width", sanitize_text_field($fields["parent-image-width"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
woocommerce-photo-tags.php:430
  - STORAGE call to update_post_meta($post_id, "wcpt-parent-image-height", sanitize_text_field($fields["parent-image-height"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
woocommerce-photo-tags.php:431
  - STORAGE call to update_post_meta($post_id, "wcpt-tag-width", sanitize_text_field($fields["tag-width"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
woocommerce-photo-tags.php:432
  - STORAGE call to update_post_meta($post_id, "wcpt-tag-height", sanitize_text_field($fields["tag-height"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
woocommerce-photo-tags.php:433
  - STORAGE call to update_post_meta($post_id, "wcpt-tag-type", sanitize_text_field($fields["tag-type"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
woocommerce-photo-tags.php:434
  - STORAGE call to update_post_meta($post_id, "wcpt-product-id", sanitize_text_field($fields["product-id"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
woocommerce-photo-tags.php:435
  - STORAGE call to update_post_meta($post_id, "wcpt-attachment-id", sanitize_text_field($fields["attachment-id"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
woocommerce-photo-tags.php:767
  - STORAGE call to wp_delete_post($tag_id) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post_meta, wp_post, post
woocommerce-photo-tags.php:773
  - STORAGE call to update_post_meta($photo_id, "wcpt-tag-count", $photo_tag_count) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
woocommerce-photo-tags.php:1027
  - STORAGE call to wp_insert_post($post_args). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
woocommerce-photo-tags.php:1033
  - STORAGE call to update_post_meta($tag_id, "wcpt-attachment-id", $photo_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
woocommerce-photo-tags.php:1034
  - STORAGE call to update_post_meta($tag_id, $key, $obj_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
woocommerce-photo-tags.php:1035
  - STORAGE call to update_post_meta($tag_id, "wcpt-x-position", $tag_x) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
woocommerce-photo-tags.php:1036
  - STORAGE call to update_post_meta($tag_id, "wcpt-y-position", $tag_y) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
woocommerce-photo-tags.php:1037
  - STORAGE call to update_post_meta($tag_id, "wcpt-parent-image-width", $img_width) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
woocommerce-photo-tags.php:1038
  - STORAGE call to update_post_meta($tag_id, "wcpt-parent-image-height", $img_height) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
woocommerce-photo-tags.php:1039
  - STORAGE call to update_post_meta($tag_id, "wcpt-tag-width", $tag_width) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
woocommerce-photo-tags.php:1040
  - STORAGE call to update_post_meta($tag_id, "wcpt-tag-height", $tag_height) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
woocommerce-photo-tags.php:1041
  - STORAGE call to update_post_meta($tag_id, "wcpt-tag-type", $obj_type) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
woocommerce-photo-tags.php:1042
  - STORAGE call to update_post_meta($tag_id, "wcpt-original", $tag_original) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
woocommerce-photo-tags.php:1044
  - STORAGE call to update_post_meta($tag_id, "wcpt-variation-id", $obj_var) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
woocommerce-photo-tags.php:1048
  - STORAGE call to update_post_meta($photo_id, "wcpt-tag-count", $photo_tag_count) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta 

uninstall.php:17
  - DELETION call to delete_option($option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
woocommerce-photo-tags.php:767
  - DELETION call to wp_delete_post($tag_id) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post_meta, wp_post, post 

uninstall.php:17
  - Uninstall deletion call: DELETION call to delete_option($option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

By data type:
none
	WordPressRetrievalDetector.get_posts($args) - set()
	WordPressRetrievalDetector.get_posts($tag_args) - set()
	WordPressStorageDetector.wp_insert_post($post_args) - set()
option
	WordPressRetrievalDetector.get_option("wcpt-image-sizes") - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-product-look-icon") - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-tagtool-results-count", 12) - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-user-size") - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-product-orig-size", 20) - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-product-look-size", 20) - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-ga", 0) - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-border-radius", 0) - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-ga") - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-border-radius", "0") - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-product-orig-label-colour", "#000000") - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-product-look-size", 20) - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-product-look-colour", "#ffffff") - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-product-look-label", "Suggested Product") - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-product-orig-colour", "#ffffff") - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-product-orig-animate") - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-product-show-box", 1) - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-bootstrap", 1) - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-product-look-label", "Suggested Product") - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-product-orig-size", 20) - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-image-sizes") - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-product-tab-heading", "Photo Tags") - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-preload", 1) - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-product-orig-label-colour", "#000000") - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-user-icon") - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-preload", 1) - {'option'}
	DeletionDetector.delete_option($option_name) - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-product-tab") - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-preload") - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-tagtool-results-count", 12) - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-product-look-label-colour", "#000000") - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-product-default", 1) - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-singular", 1) - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-border-radius", "0") - {'option'}
	UninstallDetector.delete_option($option_name) - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-preload") - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-tagtool-results-count") - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-product-show-box", 1) - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-product-orig-icon", "fa fa-plus-circle") - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-bootstrap") - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-product-default", 1) - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-product-look-colour", "lightgrey") - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-bootstrap", 1) - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-product-look-animate") - {'option'}
	WordPressStorageDetector.delete_option($option_name) - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-bootstrap") - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-custom-size") - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-product-orig-icon", "fa fa-plus-circle") - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-user-animate") - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-user-colour") - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-archive", 1) - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-ga", 0) - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-custom-colour") - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-product-look-animate") - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-product-look-label-colour", "#000000") - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-custom-icon") - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-product-orig-animate") - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-product-look-icon", "fa fa-plus-circle") - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-product-tab-heading", "Photo Tags") - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-product-orig-label", "Original Product") - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-product-orig-label", "Original Product") - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-product-tab", 1) - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-custom-animate") - {'option'}
	WordPressRetrievalDetector.get_option("wcpt-product-orig-colour", "#ffffff") - {'option'}
post
	WordPressRetrievalDetector.get_post($id) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($tag_id) - {'post_meta', 'wp_post', 'post'}
	WordPressStorageDetector.wp_delete_post($tag_id) - {'post_meta', 'wp_post', 'post'}
	DeletionDetector.wp_delete_post($tag_id) - {'post_meta', 'wp_post', 'post'}
post_meta
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "wcpt-attachment-id") - {'post_meta'}
	WordPressRetrievalDetector.get_post($id) - {'post_meta', 'wp_post', 'post'}
	WordPressStorageDetector.update_post_meta($post_id, "wcpt-attachment-id", sanitize_text_field($fields["attachment-id"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post($tag_id) - {'post_meta', 'wp_post', 'post'}
	WordPressStorageDetector.wp_delete_post($tag_id) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post_meta($id) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($tag_id, "wcpt-attachment-id", $photo_id) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($tag_id, "wcpt-attachment-id", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($tag_id, "wcpt-parent-image-width", $img_width) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($tag_id, "wcpt-x-position", $tag_x) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "wcpt-attachment-id", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($tag_id, "wcpt-y-position", $tag_y) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($photo_id, "wcpt-tag-count", $photo_tag_count) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "", false) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($tag_id, $key, $obj_id) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($tag_id, "wcpt-parent-image-height", $img_height) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($attachment->ID, "wcpt-tag-count", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($photo_id, "wcpt-tag-count", $photo_tag_count) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "wcpt-original", sanitize_text_field($fields["original"])) - {'post_meta'}
	DeletionDetector.wp_delete_post($tag_id) - {'post_meta', 'wp_post', 'post'}
	WordPressStorageDetector.update_post_meta($post_id, "wcpt-parent-image-width", sanitize_text_field($fields["parent-image-width"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "wcpt-x-position", sanitize_text_field($fields["x-position"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "wcpt-product-id", sanitize_text_field($fields["product-id"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "wcpt-parent-image-height", sanitize_text_field($fields["parent-image-height"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "wcpt-tag-height", sanitize_text_field($fields["tag-height"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($img_id, "wcpt-tag-count", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($tag_id, "wcpt-tag-width", $tag_width) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($tag_id, "wcpt-tag-type", $obj_type) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($tag_id, "wcpt-variation-id", $obj_var) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "wcpt-tag-width", sanitize_text_field($fields["tag-width"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "wcpt-tag-type", sanitize_text_field($fields["tag-type"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "wcpt-y-position", sanitize_text_field($fields["y-position"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($tag_id, "wcpt-original", $tag_original) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($tag_id, "wcpt-tag-height", $tag_height) - {'post_meta'}
wp_post
	WordPressRetrievalDetector.get_post($id) - {'post_meta', 'wp_post', 'post'}
	WordPressRetrievalDetector.get_post($tag_id) - {'post_meta', 'wp_post', 'post'}
	WordPressStorageDetector.wp_delete_post($tag_id) - {'post_meta', 'wp_post', 'post'}
	DeletionDetector.wp_delete_post($tag_id) - {'post_meta', 'wp_post', 'post'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:17.750600.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 277 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.811805.

277 STORE_REACHES edges created
277 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
In total, tainted 0 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
In total, tainted 0 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:00.010221.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:00:54.869500!
DELETION call to delete_option($option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to wp_delete_post($tag_id) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).,None,None
Uninstall deletion call: DELETION call to delete_option($option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
RETRIEVAL call to get_posts($tag_args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_option("wcpt-bootstrap") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "wcpt-attachment-id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-product-tab") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-product-tab-heading", "Photo Tags") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-product-orig-icon", "fa fa-plus-circle") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-product-orig-size", 20) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-product-orig-colour", "#ffffff") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-product-orig-label", "Original Product") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-product-orig-label-colour", "#000000") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-product-orig-animate") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-product-look-icon") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-product-look-size", 20) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-product-look-colour", "#ffffff") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-product-look-label", "Suggested Product") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-product-look-label-colour", "#000000") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-product-look-animate") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-user-icon") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-user-size") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-user-colour") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-user-animate") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-custom-icon") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-custom-size") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-custom-colour") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-custom-animate") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-product-default", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-product-show-box", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-border-radius", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-singular", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-archive", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-product-tab", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-product-tab-heading", "Photo Tags") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-bootstrap", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-ga", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-preload", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-image-sizes") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-tagtool-results-count", 12) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-preload", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-ga", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-ga") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-preload") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-preload") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-bootstrap", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-bootstrap") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-tagtool-results-count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-tagtool-results-count", 12) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($img_id, "wcpt-tag-count", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-image-sizes") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($attachment->ID, "wcpt-tag-count", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($tag_id) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($tag_id, "wcpt-attachment-id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "wcpt-attachment-id") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($id) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-product-orig-size", 20) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-product-look-size", 20) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-product-orig-icon", "fa fa-plus-circle") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-product-look-icon", "fa fa-plus-circle") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-product-show-box", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-product-look-animate") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-product-orig-animate") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-product-look-colour", "lightgrey") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-product-orig-colour", "#ffffff") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-product-look-label", "Suggested Product") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-product-orig-label", "Original Product") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-product-orig-label-colour", "#000000") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-product-look-label-colour", "#000000") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-product-default", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-border-radius", "0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcpt-border-radius", "0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
STORAGE call to delete_option($option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to wp_insert_post($post_args). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($tag_id, "wcpt-attachment-id", $photo_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($tag_id, $key, $obj_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($tag_id, "wcpt-x-position", $tag_x) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($tag_id, "wcpt-y-position", $tag_y) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($tag_id, "wcpt-parent-image-width", $img_width) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($tag_id, "wcpt-parent-image-height", $img_height) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($tag_id, "wcpt-tag-width", $tag_width) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($tag_id, "wcpt-tag-height", $tag_height) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($tag_id, "wcpt-tag-type", $obj_type) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($tag_id, "wcpt-original", $tag_original) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($tag_id, "wcpt-variation-id", $obj_var) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($photo_id, "wcpt-tag-count", $photo_tag_count) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "wcpt-x-position", sanitize_text_field($fields["x-position"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "wcpt-y-position", sanitize_text_field($fields["y-position"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "wcpt-original", sanitize_text_field($fields["original"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "wcpt-parent-image-width", sanitize_text_field($fields["parent-image-width"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "wcpt-parent-image-height", sanitize_text_field($fields["parent-image-height"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "wcpt-tag-width", sanitize_text_field($fields["tag-width"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "wcpt-tag-height", sanitize_text_field($fields["tag-height"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "wcpt-tag-type", sanitize_text_field($fields["tag-type"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "wcpt-product-id", sanitize_text_field($fields["product-id"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "wcpt-attachment-id", sanitize_text_field($fields["attachment-id"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_delete_post($tag_id) alters data types {'post_meta', 'wp_post', 'post'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).,None,None
STORAGE call to update_post_meta($photo_id, "wcpt-tag-count", $photo_tag_count) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found no personal data in the plugin. No analysis needed. 

[main] Complaint? True 

No findings
