Timeout in resolving values
Timeout in running neo4j query
Running Main.py on paid-membership

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:04.502093.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:02.272081.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 3 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.332063.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 2 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.918650.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 4340 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:02.179389.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 124 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:01.705683.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.092611.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 1446 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:01:30.034887.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 29070
Added 23155 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 126890
Added 97820 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:09.610012.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/paid-membership/paid-membership.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/paid-membership/taxonomy-collection.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/paid-membership/template-download.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/paid-membership/inc/options.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/paid-membership/inc/shortcodes.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.575478.

3 PHP_REACHES edges created
2 REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
4340 PHP_REACHES edges created
124 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
14000 PHP_REACHES edges created
15000 PHP_REACHES edges created
16000 PHP_REACHES edges created
17000 PHP_REACHES edges created
18000 PHP_REACHES edges created
19000 PHP_REACHES edges created
20000 PHP_REACHES edges created
21000 PHP_REACHES edges created
22000 PHP_REACHES edges created
23000 PHP_REACHES edges created
24000 PHP_REACHES edges created
24601 PHP_REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
14000 PHP_REACHES edges created
15000 PHP_REACHES edges created
16000 PHP_REACHES edges created
17000 PHP_REACHES edges created
18000 PHP_REACHES edges created
19000 PHP_REACHES edges created
20000 PHP_REACHES edges created
21000 PHP_REACHES edges created
22000 PHP_REACHES edges created
23000 PHP_REACHES edges created
24000 PHP_REACHES edges created
25000 PHP_REACHES edges created
26000 PHP_REACHES edges created
27000 PHP_REACHES edges created
28000 PHP_REACHES edges created
29000 PHP_REACHES edges created
30000 PHP_REACHES edges created
31000 PHP_REACHES edges created
32000 PHP_REACHES edges created
33000 PHP_REACHES edges created
34000 PHP_REACHES edges created
35000 PHP_REACHES edges created
36000 PHP_REACHES edges created
37000 PHP_REACHES edges created
38000 PHP_REACHES edges created
39000 PHP_REACHES edges created
40000 PHP_REACHES edges created
41000 PHP_REACHES edges created
42000 PHP_REACHES edges created
43000 PHP_REACHES edges created
44000 PHP_REACHES edges created
45000 PHP_REACHES edges created
46000 PHP_REACHES edges created
47000 PHP_REACHES edges created
48000 PHP_REACHES edges created
49000 PHP_REACHES edges created
50000 PHP_REACHES edges created
51000 PHP_REACHES edges created
52000 PHP_REACHES edges created
53000 PHP_REACHES edges created
54000 PHP_REACHES edges created
55000 PHP_REACHES edges created
56000 PHP_REACHES edges created
57000 PHP_REACHES edges created
58000 PHP_REACHES edges created
59000 PHP_REACHES edges created
60000 PHP_REACHES edges created
61000 PHP_REACHES edges created
62000 PHP_REACHES edges created
63000 PHP_REACHES edges created
64000 PHP_REACHES edges created
65000 PHP_REACHES edges created
66000 PHP_REACHES edges created
67000 PHP_REACHES edges created
68000 PHP_REACHES edges created
69000 PHP_REACHES edges created
70000 PHP_REACHES edges created
71000 PHP_REACHES edges created
72000 PHP_REACHES edges created
73000 PHP_REACHES edges created
74000 PHP_REACHES edges created
75000 PHP_REACHES edges created
76000 PHP_REACHES edges created
77000 PHP_REACHES edges created
78000 PHP_REACHES edges created
79000 PHP_REACHES edges created
80000 PHP_REACHES edges created
81000 PHP_REACHES edges created
82000 PHP_REACHES edges created
83000 PHP_REACHES edges created
84000 PHP_REACHES edges created
85000 PHP_REACHES edges created
86000 PHP_REACHES edges created
87000 PHP_REACHES edges created
88000 PHP_REACHES edges created
89000 PHP_REACHES edges created
90000 PHP_REACHES edges created
91000 PHP_REACHES edges created
92000 PHP_REACHES edges created
93000 PHP_REACHES edges created
94000 PHP_REACHES edges created
95000 PHP_REACHES edges created
96000 PHP_REACHES edges created
97000 PHP_REACHES edges created
97820 PHP_REACHES edges created
126890 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 9453 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.674370.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 2 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:14.631765.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 164 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:07.112871.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 257 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.175993.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:05.930100.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:02.856442.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.052959.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.044982.

2 CALLS edges created
421 PHP_REACHES edges created
423 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 175 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.120612.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
4 SQL operations to process.
SELECT * FROM $wpdbvw_micropay_transactions
SQL command (SELECT * FROM $wpdbvw_micropay_transactions) cannot be parsed correct.
SELECT * FROM $wpdbvw_micropay_transactions
SQL command (SELECT * FROM $wpdbvw_micropay_transactions) cannot be parsed correct.

DROP TABLE IF EXISTS `$wpdbvw_micropay_transactions`;
CREATE TABLE `$wpdbvw_micropay_transactions` (
  `transaction_id` bigint(20) UNSIGNED NOT NULL auto_increment,
  `blog_id` bigint(20) UNSIGNED NOT NULL DEFAULT 1,
  `user_id` bigint(20) UNSIGNED NOT NULL DEFAULT 0,
  `type` varchar(200) COLLATE utf8mb4_unicode_ci NOT NULL,
  `amount` decimal(10,2) NOT NULL,
  `balance` decimal(10,2) NOT NULL,
  `currency` varchar(20) COLLATE utf8mb4_unicode_ci DEFAULT '',
  `details` longtext COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `post_id` int(11) UNSIGNED NOT NULL DEFAULT 0,
  `initiator_id` bigint(20) UNSIGNED NOT NULL DEFAULT 0,
  `date` timestamp NOT NULL DEFAULT current_timestamp(),
   PRIMARY KEY (`transaction_id`),
   KEY `user_id` (`user_id`),
   KEY `blog_id` (`blog_id`),
   KEY `date` (`date`)  
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='MicroPayments Transactions 2021@videowhisper.com' AUTO_INCREMENT=1;

SQL command ( DROP TABLE IF EXISTS `$wpdbvw_micropay_transactions`; CREATE TABLE `$wpdbvw_micropay_transactions` ( `transaction_id` bigint(20) UNSIGNED NOT NULL auto_increment, `blog_id` bigint(20) UNSIGNED NOT NULL DEFAULT 1, `user_id` bigint(20) UNSIGNED NOT NULL DEFAULT 0, `type` varchar(200) COLLATE utf8mb4_unicode_ci NOT NULL, `amount` decimal(10,2) NOT NULL, `balance` decimal(10,2) NOT NULL, `currency` varchar(20) COLLATE utf8mb4_unicode_ci DEFAULT '', `details` longtext COLLATE utf8mb4_unicode_ci DEFAULT NULL, `post_id` int(11) UNSIGNED NOT NULL DEFAULT 0, `initiator_id` bigint(20) UNSIGNED NOT NULL DEFAULT 0, `date` timestamp NOT NULL DEFAULT current_timestamp(), PRIMARY KEY (`transaction_id`), KEY `user_id` (`user_id`), KEY `blog_id` (`blog_id`), KEY `date` (`date`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='MicroPayments Transactions 2021@videowhisper.com' AUTO_INCREMENT=1; ) cannot be parsed correct.
SELECT * FROM $wpdbvw_micropay_transactions WHERE user_id = 'get_post_field("post_author", $postID)' ORDER BY date DESC LIMIT 1
SQL command (SELECT * FROM $wpdbvw_micropay_transactions WHERE user_id = 'get_post_field("post_author", $postID)' ORDER BY date DESC LIMIT 1) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [8213, 26794, 27994, 41367]
Added 0 SQL nodes. 0 out of 4 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:02.394474.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'admin_url("admin.php?page=paid-membership")'' cannot be parsed correct.
HTML code '$'$options_currency'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'wp_nonce_url("admin.php?page=paid-membership&tab=" . esc_attr($active_tab), "vwsec")'' cannot be parsed correct.
HTML code '$'<a class="secondary button" href="get_permalink(intval($package->ID))"$package</a> '' cannot be parsed correct.
HTML code '$'<a href="post.php?action=edit&post$package"><span class="dashicons dashicons-edit"></span></a> '' cannot be parsed correct.
HTML code '$'get_post_meta(intval($package->ID), "micropayments_tokens", true)$options_currency'' cannot be parsed correct.
HTML code '$' = get_post_meta(intval($package->ID), "_price", true)'' cannot be parsed correct.
HTML code '$'get_permalink($options["p_videowhisper_provider_subscriptions"])'' cannot be parsed correct.
HTML code '$'get_permalink(intval($options["p_videowhisper_content_seller"]))'' cannot be parsed correct.
HTML code '$'$options_tiersMax'' cannot be parsed correct.
HTML code '$'$options_subscriptionRatio'' cannot be parsed correct.
HTML code '$'$options_rolesBuyer'' cannot be parsed correct.
HTML code '$'$role '' cannot be parsed correct.
HTML code '$'$role_slug= $role_name"'' cannot be parsed correct.
HTML code '$'$options_rolesSeller'' cannot be parsed correct.
HTML code '$'$options_postTypesExternal'' cannot be parsed correct.
HTML code '$'<br> - $key  =  $value'' cannot be parsed correct.
HTML code '$'
$key = htmlentities(stripslashes($value))'' cannot be parsed correct.
HTML code '$'
$key = htmlentities(stripslashes(serialize($value)))'' cannot be parsed correct.
HTML code '$'
$key = htmlentities(stripslashes($value))'' cannot be parsed correct.
HTML code '$'<BR> - $opt'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'Rules missing. flush_rules()
'' cannot be parsed correct.
HTML code '$'$options_interfaceClass'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'$options_download_extensions'' cannot be parsed correct.
HTML code '$'$optionsDefault_download_extensions'' cannot be parsed correct.
HTML code '$'$options_custom_post'' cannot be parsed correct.
HTML code '$'$options_custom_taxonomy'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'<h4>$title</h4>'' cannot be parsed correct.
HTML code '$'<select name="p$shortcode" id="p_$shortcode"'' cannot be parsed correct.
HTML code '$'<option value=$sPage"selected>$sPage. $sPage - $sPage</option>
'' cannot be parsed correct.
HTML code '$'<a href=get_permalink($pid)">view</a> |'' cannot be parsed correct.
HTML code '$'<a href="post.php?postsanitize_text_field($options["p_" . $shortcode])&action=edit">edit</a> |'' cannot be parsed correct.
HTML code '$'Default content: [$shortcode]'' cannot be parsed correct.
HTML code '$'<p> - $title:<br>'' cannot be parsed correct.
HTML code '$'<a href=get_permalink($pid)"get_permalink($pid)</a></p>'' cannot be parsed correct.
HTML code '$'$optionsDefault_customCSS'' cannot be parsed correct.
HTML code '$'$options_postTypesRoles'' cannot be parsed correct.
HTML code '$'$options_visitorMessage'' cannot be parsed correct.
HTML code '$'$options_roleMessage'' cannot be parsed correct.
HTML code '$'$options_postTemplate'' cannot be parsed correct.
HTML code '$'<br>get_template_directory()/sanitize_text_field($options["postTemplate"]) : '' cannot be parsed correct.
HTML code '$'$options_taxonomyTemplate'' cannot be parsed correct.
HTML code '$'<br>get_template_directory()/sanitize_text_field($options["taxonomyTemplate"]) : '' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'wp_get_current_user()'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'wp_get_current_user()'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'wp_get_current_user()'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'wp_get_current_user()'' cannot be parsed correct.
HTML code '$'wp_get_current_user()_$userName'' cannot be parsed correct.
HTML code '$'$options_uploadsPath'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'$options_shareList'' cannot be parsed correct.
HTML code '$'$options_publishList'' cannot be parsed correct.
HTML code '$'$options_perPage'' cannot be parsed correct.
HTML code '$'$options_thumbWidth'' cannot be parsed correct.
HTML code '$'$options_thumbHeight'' cannot be parsed correct.
HTML code '$'$options_downloadsCSS'' cannot be parsed correct.
HTML code '$'$optionsDefault_downloadsCSS'' cannot be parsed correct.
HTML code '$'$options_watchList'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'$options_accessDenied'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'$options_loginMessage'' cannot be parsed correct.
HTML code '$'$options_freeRole'' cannot be parsed correct.
HTML code '$'$options_customCSS'' cannot be parsed correct.
HTML code '$'ucwords($options["custom_post"])'' cannot be parsed correct.
HTML code '$'Deleted membership for: intval($_GET["delete_membership"])'' cannot be parsed correct.
HTML code '$'<br>$user : '' cannot be parsed correct.
HTML code '$' - <a href="admin.php?page=paid-membership&tab=users&delete_membership$user">Delete Membership</a'' cannot be parsed correct.
HTML code '$'$options_postTypesDonate'' cannot be parsed correct.
HTML code '$'$options_rolesDonate'' cannot be parsed correct.
HTML code '$'$role '' cannot be parsed correct.
HTML code '$'$role_slug= $role_name"'' cannot be parsed correct.
HTML code '$'_new'' cannot be parsed correct.
HTML code '$'_new'' cannot be parsed correct.
HTML code '$'_new'' cannot be parsed correct.
HTML code '$'_new'' cannot be parsed correct.
HTML code '$'_new'' cannot be parsed correct.
HTML code '$'_new'' cannot be parsed correct.
HTML code '$'_new'' cannot be parsed correct.
HTML code '$'_new'' cannot be parsed correct.
HTML code '$'_new'' cannot be parsed correct.
HTML code '$'_new'' cannot be parsed correct.
HTML code '$'intval($i + 1)'' cannot be parsed correct.
HTML code '$'count($memberships)'' cannot be parsed correct.
HTML code '$'count($memberships)'' cannot be parsed correct.
HTML code '$'$options_memberships_count($memberships)_label'' cannot be parsed correct.
HTML code '$'count($memberships)'' cannot be parsed correct.
HTML code '$'count($memberships)'' cannot be parsed correct.
HTML code '$'unserialize(stripslashes(sanitize_textarea_field($_POST["importMemberships"])))_count($memberships)_role'' cannot be parsed correct.
HTML code '$'count($memberships)'' cannot be parsed correct.
HTML code '$'count($memberships)'' cannot be parsed correct.
HTML code '$'unserialize(stripslashes(sanitize_textarea_field($_POST["importMemberships"])))_count($memberships)_price'' cannot be parsed correct.
HTML code '$'count($memberships)'' cannot be parsed correct.
HTML code '$'count($memberships)'' cannot be parsed correct.
HTML code '$'$options_memberships_count($memberships)_expire'' cannot be parsed correct.
HTML code '$'count($memberships)'' cannot be parsed correct.
HTML code '$'count($memberships)'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'count($memberships)'' cannot be parsed correct.
HTML code '$'count($memberships)'' cannot be parsed correct.
HTML code '$'htmlspecialchars(serialize($memberships))'' cannot be parsed correct.
HTML code '$'htmlspecialchars(serialize($optionsDefault["memberships"]))'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'$options_donationDefault'' cannot be parsed correct.
HTML code '$'$options_donationMin'' cannot be parsed correct.
HTML code '$'$options_donationMax'' cannot be parsed correct.
HTML code '$'$options_donationStep'' cannot be parsed correct.
HTML code '$'get_permalink($options["p_videowhisper_content_seller"])'' cannot be parsed correct.
HTML code '$'get_permalink($options["p_videowhisper_content"])'' cannot be parsed correct.
HTML code '$'get_permalink($options["p_videowhisper_content_list"])'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'$options_postTypesPaid'' cannot be parsed correct.
HTML code '$'$options_postTypesEdit'' cannot be parsed correct.
HTML code '$'$options_rolesBuyer'' cannot be parsed correct.
HTML code '$'$role '' cannot be parsed correct.
HTML code '$'$role_slug= $role_name"'' cannot be parsed correct.
HTML code '$'$options_rolesSeller'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'$options_contentCSS'' cannot be parsed correct.
HTML code '$'$optionsDefault_contentCSS'' cannot be parsed correct.
HTML code '$'$options_perPageContent'' cannot be parsed correct.
HTML code '$'$options_paidMessage'' cannot be parsed correct.
HTML code '$'<a target="_content" href="get_post_permalink($post->ID)"ucwords(esc_html($post->post_type)): $post</a> '' cannot be parsed correct.
HTML code '$' Price: get_post_meta($post->ID, "vw_micropay_price", true), <a target="_product" href="get_permalink($product_id)">Product get_post_meta($post->ID, "vw_micropay_productid", true)</a>'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'$options_currency'' cannot be parsed correct.
HTML code '$'$options_currency'' cannot be parsed correct.
HTML code '$'<br>Testing balance: You have: wp_kses_post($wooWallet->wallet->get_wallet_balance($userID))'' cannot be parsed correct.
HTML code '$'<br>Testing balance: You have mycred_get_users_balance(get_current_user_id()) wp_kses_post(htmlspecialchars($options["currencyLong"])).'' cannot be parsed correct.
HTML code '$'do_shortcode("[videowhisper_downloads_import path=" . esc_attr($options["importPath"]) . """)'' cannot be parsed correct.
HTML code '$'Import folder not found on server: $options_importPath'' cannot be parsed correct.
HTML code '$'wp_nonce_url($_SERVER["REQUEST_URI"], "vwsec")'' cannot be parsed correct.
HTML code '$'$options_importPath'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'$options_importClean'' cannot be parsed correct.
HTML code '$'<a target="_content" href="get_post_permalink($post->ID)"ucwords(esc_html($post->post_type)): $post</a> '' cannot be parsed correct.
HTML code '$' Price: get_post_meta($post->ID, "myCRED_sell_content", true)_price, Duration: get_post_meta($post->ID, "myCRED_sell_content", true)_expire hunlimited, recurring.one time fee.'' cannot be parsed correct.
HTML code '$'do_shortcode("[videowhisper_download_upload]")'' cannot be parsed correct.
HTML code '$'<h3><a href="user-edit.php?user_idintval($userID)"$_REQUEST$_REQUEST</a></h3>'' cannot be parsed correct.
HTML code '$'Adjustment applied: number_format(floatval($_POST["amount"]), 2, ".", "")'' cannot be parsed correct.
HTML code '$'wp_nonce_url($_SERVER["REQUEST_URI"], "vwsec")'' cannot be parsed correct.
HTML code '$'<a class="button" href="admin.php?page=micropayments-transactions">Transactions For All Users</a>'' cannot be parsed correct.
HTML code '$'<a class="button" href="users.php?orderby=micropayments_balance&order=desc">All User Balances</a>'' cannot be parsed correct.
HTML code '$'  <a class=active item" onclick="aurl$id=\'$ajaxurlC&ob=$key\'; loadContentsanitize_text_field($_GET["id"])(\'<div class=\\'ui active inline text large loader\\'>Ordering Rooms...</div>\')"$value</a> '' cannot be parsed correct.
HTML code '$'<div class="uiget_option("VWpaidMembershipOptions")_interfaceClass tiny equal width form"><div class="inline fields tiny">'' cannot be parsed correct.
HTML code '$'<div class="field">wp_dropdown_categories("show_count=0&echo=0&name=category" . esc_attr($id) . "&hide_empty=1&class=ui+dropdown+fluid+v-select&show_option_all=" . __("All", "paid-membership") . "&selected=" . esc_attr($category))</div>'' cannot be parsed correct.
HTML code '$'<script>var category$id = document.getElementById("categor$id"); 			categor$id.onchange = function(){aurlsanitize_text_field($_GET["id"])=\'admin_url()admin-ajax.php?action=vwpm_content&menu=$menu&pp=$perPage&pr=$perRow&collection=urlencode($collection)&sc=$selectCategory&so=$selectOrder&sn=$selectName&sg=$selectTags&sp=$selectPage&id=sanitize_text_field($_GET["id"])&ob=post_date&ob=sanitize_file_name($_GET["ob"])&tags=urlencode($tags)&name=urlencode($name)&cat=\'+ this.value; loadContentsanitize_text_field($_GET["id"])(\'<div class=\\'ui active inline text large loader\\'>Loading category...</div>\')}
			</script>'' cannot be parsed correct.
HTML code '$'<div class="field"><select class="ui dropdown v-select fluid" id="order_by$id" name="order_by$id" onchange="aurlsanitize_text_field($_GET["id"])=\'admin_url()admin-ajax.php?action=vwpm_content&menu=$menu&pp=$perPage&pr=$perRow&collection=urlencode($collection)&sc=$selectCategory&so=$selectOrder&sn=$selectName&sg=$selectTags&sp=$selectPage&id=sanitize_text_field($_GET["id"])&cat=intval($_GET["cat"])&ob=post_date&tags=urlencode($tags)&name=urlencode($name)&ob=\'+ this.value; loadContentsanitize_text_field($_GET["id"])(\'<div class=\\'ui active inline text large loader\\'>Ordering content...</div>\')">'' cannot be parsed correct.
HTML code '$'<option value="">Order By:</option>'' cannot be parsed correct.
HTML code '$'<option value="post_date" selected>Date Added</option>'' cannot be parsed correct.
HTML code '$'<option value="rateStarReview_rating" selected>Rating</option>'' cannot be parsed correct.
HTML code '$'<option value="rateStarReview_ratingNumber" selected>Ratings Number</option>'' cannot be parsed correct.
HTML code '$'<option value="rateStarReview_ratingPoints" selected>Rate Popularity</option>'' cannot be parsed correct.
HTML code '$'<option value="rand" selected>Random</option>'' cannot be parsed correct.
HTML code '$'<div class="field" data-tooltip="Tags, Comma Separated"><div class="ui left icon input fluid"><i class="tags icon"></i><INPUT class="videowhisperInput" type="text" size="12" name="tags" id="tags" placeholder="Tags" value="htmlspecialchars($tags)">
					</div></div'' cannot be parsed correct.
HTML code '$'<div class="field"><div class="ui left corner labeled input fluid"><INPUT class="videowhisperInput" type="text" size="12" name="name" id="name" placeholder="Name" value="htmlspecialchars($name)">
  <div class="ui left corner label">
    <i class="asterisk icon"></i>
  </div>
					</div></div>'' cannot be parsed correct.
HTML code '$'
<div class="ui$options_interfaceClass accordion small basic compact segment">

  <div class="active title">
    <i class="dropdown icon"></i>
    Category <i class="check icon small"></i>
  </div>
  <div class="active content">
  <div class="ui get_option("VWpaidMembershipOptions")_interfaceClass vertical menu small compact">
 '' cannot be parsed correct.
HTML code '$'  <a class=active item" onclick="aurl$id=\'$ajaxurlO&cat=0\'; loadContentsanitize_text_field($_GET["id"])(\'<div class=\\'ui active inline text large loader\\'>Loading category...</div>\')"All Categories</a> '' cannot be parsed correct.
HTML code '$'  <a class=active item" onclick="aurl$id=\'$ajaxurlO&cat=$cat\'; loadContentsanitize_text_field($_GET["id"])(\'<div class=\\'ui active inline text large loader\\'>Loading category...</div>\')"$cat</a> '' cannot be parsed correct.
HTML code '$'<div class="field" data-tooltip="Search by Tags and/or Name"><button class="ui icon button" type="submit" name="submit" id="submit" value="Search" onclick="aurlsanitize_text_field($_GET["id"])=\'admin_url()admin-ajax.php?action=vwpm_content&menu=$menu&pp=$perPage&pr=$perRow&collection=urlencode($collection)&sc=$selectCategory&so=$selectOrder&sn=$selectName&sg=$selectTags&sp=$selectPage&id=sanitize_text_field($_GET["id"])&cat=intval($_GET["cat"])&ob=sanitize_file_name($_GET["ob"])&tags=\' + document.getElementById(\'tags\').value +\'&name=\' + document.getElementById(\'name\').value; loadContentsanitize_text_field($_GET["id"])(\'<div class=\\'ui active inline text large loader\\'>Searching content...</div>\')"><i class="search icon"></i></button></div>'' cannot be parsed correct.
HTML code '$'<div class="field"></div> <div class="field" data-tooltip="Reload"><button class="ui icon button" type="submit" name="reload" id="reload" value="Reload" onclick="aurlsanitize_text_field($_GET["id"])=\'admin_url()admin-ajax.php?action=vwpm_content&menu=$menu&pp=$perPage&pr=$perRow&collection=urlencode($collection)&sc=$selectCategory&so=$selectOrder&sn=$selectName&sg=$selectTags&sp=$selectPage&id=sanitize_text_field($_GET["id"])&cat=intval($_GET["cat"])&ob=sanitize_file_name($_GET["ob"])&tags=urlencode($tags)&name=urlencode($name)\'; loadContentsanitize_text_field($_GET["id"])(\'<div class=\\'ui active inline text large loader\\'>Reloading content...</div>\')"><i class="sync icon"></i></button></div>'' cannot be parsed correct.
HTML code '$'<a href=get_permalink($item->ID)" title="Title: $item
Age: $age"><div class="videowhisperContentTitle">$item</div></a>'' cannot be parsed correct.
HTML code '$'<div class="videowhisperContentType">ucwords(esc_html($item->post_type))</div>'' cannot be parsed correct.
HTML code '$'<div class="videowhisperContentDate">$age</div>'' cannot be parsed correct.
HTML code '$'<div class="videowhisperContentPrice"><div class ="ui tag label tiny redgreen"<i class="money bill alternate icon"></i> $data_priceFree</div></div>'' cannot be parsed correct.
HTML code '$'<div class="videowhisperContentSubscription"><div class ="ui tag label tiny orange"> <i class="lock icon"></i> Subscription</div></div>'' cannot be parsed correct.
HTML code '$'<div class="videowhisperContentRating"><div class="ui yellow star rating readonly" data-rating="round($rating * $max)" data-max-rating="5"></div></div'' cannot be parsed correct.
HTML code '$'<a href=add_query_arg("editID", intval($item->ID), get_permalink($options["p_videowhisper_content_edit"]))"><div class="videowhisperContentEdit"><i class="edit icon"></i> Edit</div></a>'' cannot be parsed correct.
HTML code '$'<a href=get_permalink($item->ID)" title="$info"><IMG src="$imageURL" width="intval($options["thumbWidth"])px" height="intval($options["thumbHeight"])px" ALT="Title: $item
Age: $age"></a'' cannot be parsed correct.
HTML code '$'
<div class="ui$options_interfaceClass accordion small basic compact segment">

  <div class="title $options_interfaceClass">
    <i class="dropdown icon"></i>
    Order By <i class="check icon small"></i>
  </div>
  <div class=active content">
  <div class="ui get_option("VWpaidMembershipOptions")_interfaceClass vertical menu small">
 '' cannot be parsed correct.
HTML code '$'No content.'' cannot be parsed correct.
HTML code '$' <a class="ui labeled icon button" href="JavaScript: void()" onclick="aurl$id=\'$ajaxurlA&p=intval($page - 1)\'; loadContentsanitize_text_field($_GET["id"])(\'<div class=\\'ui active inline text large loader\\'>Loading previous page...</div>\'); "><i class="left arrow icon"></i> Previous</a> '' cannot be parsed correct.
HTML code '$'<a class="ui labeled button" href="#"> Page intval($page + 1) </a>'' cannot be parsed correct.
HTML code '$' <a class="ui right labeled icon button" href="JavaScript: void()" onclick="aurl$id=\'$ajaxurlA&p=intval($page + 1)\'; loadContentsanitize_text_field($_GET["id"])(\'<div class=\\'ui active inline text large loader\\'>Loading next page...</div>\'); ">Next <i class="right arrow icon"></i></a> '' cannot be parsed correct.
HTML code '$'User #intval($_POST["userID"]) not found!'' cannot be parsed correct.
HTML code '$'Post #intval($_POST["postID"]) not found!'' cannot be parsed correct.
HTML code '$'Not enough funds available to make donation!'' cannot be parsed correct.
HTML code '$'$tlabels_Donation completed: floatval($_POST["amount"]) get_option("VWpaidMembershipOptions")_currency @ $_POST .'' cannot be parsed correct.
HTML code '$'<p>Reload page to see update!</p>'' cannot be parsed correct.
HTML code '$'Author Content'' cannot be parsed correct.
HTML code '$'Subscribe to Author'' cannot be parsed correct.
HTML code '$'do_shortcode("[videowhisper_content_list author_id=" . intval($userID) . """)'' cannot be parsed correct.
HTML code '$'do_shortcode("[videowhisper_client_subscribe author_id=" . intval($userID) . """)'' cannot be parsed correct.
HTML code '$'stripslashes($args["after_widget"])'' cannot be parsed correct.
HTML code '$'<div class="uiget_option("VWpaidMembershipOptions")_interfaceClass tiny equal width form"><div class="inline fields">'' cannot be parsed correct.
HTML code '$'<div class="field">wp_dropdown_categories("show_count=0&echo=0&name=category" . esc_attr($id) . "&hide_empty=1&class=ui+dropdown+fluid&show_option_all=" . __("All", "paid-membership") . "&selected=" . esc_attr($category))</div>'' cannot be parsed correct.
HTML code '$'<script>var category$id = document.getElementById("categor$id"); 			categor$id.onchange = function(){aurlsanitize_file_name($_GET["id"])=\'admin_url()admin-ajax.php?action=vwpm_downloads&pp=$perPage&pr=$perRow&collection=urlencode($collection)&sc=$selectCategory&so=$selectOrder&sn=$selectName&sg=$selectTags&sp=$selectPage&id=sanitize_file_name($_GET["id"])&ob=sanitize_file_name($_GET["ob"])&ob=sanitize_file_name($_GET["ob"])&tags=urlencode($tags)&name=urlencode($name)&cat=\'+ this.value; loadDownloadssanitize_file_name($_GET["id"])(\'<div class=\\'ui active inline text large loader\\'>Loading category...</div>\')}
			</script>'' cannot be parsed correct.
HTML code '$'stripslashes(esc_attr($options["title"]))'' cannot be parsed correct.
HTML code '$'stripslashes(esc_attr($options["collection"]))'' cannot be parsed correct.
HTML code '$'stripslashes(esc_attr($options["category_id"]))'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'stripslashes(esc_attr($options["perpage"]))'' cannot be parsed correct.
HTML code '$'stripslashes(esc_attr($options["perrow"]))'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'stripslashes($args["before_widget"])'' cannot be parsed correct.
HTML code '$'stripslashes($args["before_title"])'' cannot be parsed correct.
HTML code '$'stripslashes(esc_html($options["title"]))'' cannot be parsed correct.
HTML code '$'stripslashes($args["after_title"])'' cannot be parsed correct.
HTML code '$'do_shortcode("[videowhisper_downloads collection=" . esc_attr($options["collection"]) . "" category_id="" . esc_attr($options["category_id"]) . "" order_by="" . esc_attr($options["order_by"]) . "" perpage="" . esc_attr($options["perpage"]) . "" perrow="" . esc_attr($options["perrow"]) . "" select_category="" . esc_attr($options["select_category"]) . "" select_order="" . esc_attr($options["select_order"]) . "" select_page="" . esc_attr($options["select_page"]) . "" include_css="" . esc_attr($options["include_css"]) . """)'' cannot be parsed correct.
HTML code '$'<div class="field"><div class="ui left corner labeled input fluid"><INPUT class="videowhisperInput" type="text" size="12" name="name" id="name" placeholder="Name" value="htmlspecialchars($name)">
  <div class="ui left corner label">
    <i class="asterisk icon"></i>
  </div>
					</div></div>'' cannot be parsed correct.
HTML code '$'<div class="field" data-tooltip="Search by Tags and/or Name"><button class="ui icon button" type="submit" name="submit" id="submit" value="Search" onclick="aurlsanitize_file_name($_GET["id"])=\'admin_url()admin-ajax.php?action=vwpm_downloads&pp=$perPage&pr=$perRow&collection=urlencode($collection)&sc=$selectCategory&so=$selectOrder&sn=$selectName&sg=$selectTags&sp=$selectPage&id=sanitize_file_name($_GET["id"])&cat=$category&ob=sanitize_file_name($_GET["ob"])&tags=\' + document.getElementById(\'tags\').value +\'&name=\' + document.getElementById(\'name\').value; loadDownloadssanitize_file_name($_GET["id"])(\'<div class=\\'ui active inline text large loader\\'>Searching downloads...</div>\')"><i class="search icon"></i></button></div>'' cannot be parsed correct.
HTML code '$'<div class="field"></div> <div class="field" data-tooltip="Reload"><button class="ui icon button" type="submit" name="reload" id="reload" value="Reload" onclick="aurlsanitize_file_name($_GET["id"])=\'admin_url()admin-ajax.php?action=vwpm_downloads&pp=$perPage&pr=$perRow&collection=urlencode($collection)&sc=$selectCategory&so=$selectOrder&sn=$selectName&sg=$selectTags&sp=$selectPage&id=sanitize_file_name($_GET["id"])&cat=$category&ob=post_date&tags=urlencode($tags)&name=urlencode($name)\'; loadDownloadssanitize_file_name($_GET["id"])(\'<div class=\\'ui active inline text large loader\\'>Reloading downloads...</div>\')"><i class="sync icon"></i></button></div>'' cannot be parsed correct.
HTML code '$'<div class="field"><select class="ui dropdown v-select fluid" id="order_by$id" name="order_by$id" onchange="aurlsanitize_file_name($_GET["id"])=\'admin_url()admin-ajax.php?action=vwpm_downloads&pp=$perPage&pr=$perRow&collection=urlencode($collection)&sc=$selectCategory&so=$selectOrder&sn=$selectName&sg=$selectTags&sp=$selectPage&id=sanitize_file_name($_GET["id"])&cat=$category&ob=post_date&tags=urlencode($tags)&name=urlencode($name)&ob=\'+ this.value; loadDownloadssanitize_file_name($_GET["id"])(\'<div class=\\'ui active inline text large loader\\'>Ordering downloads...</div>\')">'' cannot be parsed correct.
HTML code '$'<option value="">Order By:</option>'' cannot be parsed correct.
HTML code '$'<option value="post_date" selected>Date Added</option>'' cannot be parsed correct.
HTML code '$'<option value="download-views" selected>Views</option>'' cannot be parsed correct.
HTML code '$'<option value="download-lastview" selected>Viewed Recently</option>'' cannot be parsed correct.
HTML code '$'<option value="rateStarReview_rating" selected>Rating</option>'' cannot be parsed correct.
HTML code '$'<option value="rateStarReview_ratingNumber" selected>Ratings Number</option>'' cannot be parsed correct.
HTML code '$'<option value="rateStarReview_ratingPoints" selected>Rate Popularity</option>'' cannot be parsed correct.
HTML code '$'<option value="rand" selected>Random</option>'' cannot be parsed correct.
HTML code '$'<div class="field" data-tooltip="Tags, Comma Separated"><div class="ui left icon input fluid"><i class="tags icon"></i><INPUT class="videowhisperInput" type="text" size="12" name="tags" id="tags" placeholder="Tags" value="htmlspecialchars($tags)">
					</div></div'' cannot be parsed correct.
HTML code '$'Error: Can not retrieve get_option("VWpaidMembershipOptions")_custom_taxonomy" terms for video post:$lists->get_error_message()'' cannot be parsed correct.
HTML code '$'<a href=get_permalink($item->ID)" title="Title: sanitize_text_field($item->post_title)
Age: sanitize_text_field($age)
Views: sanitize_text_field($views)"><div class="videowhisperDownloadTitle">$item</div></a>'' cannot be parsed correct.
HTML code '$'<div class="videowhisperDownloadDate">$age</div>'' cannot be parsed correct.
HTML code '$'<div class="videowhisperDownloadViews">get_post_meta($item->ID, "download-views", true)</div>'' cannot be parsed correct.
HTML code '$'<div class="videowhisperDownloadRating"><div class="ui star rating readonly" data-rating="round($rating * $max)" data-max-rating="5"></div></div'' cannot be parsed correct.
HTML code '$'<a href=add_query_arg("editID", $item->ID, get_permalink($options["p_videowhisper_content_edit"]))"><div class="videowhisperDownloadEdit">EDIT</div></a>'' cannot be parsed correct.
HTML code '$'<a href=get_permalink($item->ID)" title="$info"><IMG src="$noCache" width="get_option("VWpaidMembershipOptions")_thumbWidthpx" height="get_option("VWpaidMembershipOptions")_thumbHeightpx" ALT="Title: sanitize_text_field($item->post_title)
Age: sanitize_text_field($age)
Views: sanitize_text_field($views)"></a'' cannot be parsed correct.
HTML code '$'No downloads.'' cannot be parsed correct.
HTML code '$' <a class="ui labeled icon button" href="JavaScript: void()" onclick="aurl$id=\'$ajaxurlA&p=intval($page - 1)\'; loadDownloadssanitize_file_name($_GET["id"])(\'<div class=\\'ui active inline text large loader\\'>Loading previous page...</div>\');"><i class="left arrow icon"></i> Previous</a> '' cannot be parsed correct.
HTML code '$'<a class="ui labeled button" href="#"> Page intval($page + 1) </a>'' cannot be parsed correct.
HTML code '$' <a class="ui right labeled icon button" href="JavaScript: void()" onclick="aurl$id=\'$ajaxurlA&p=intval($page + 1)\'; loadDownloadssanitize_file_name($_GET["id"])(\'<div class=\\'ui active inline text large loader\\'>Loading next page...</div>\');">Next <i class="right arrow icon"></i></a> '' cannot be parsed correct.
HTML code '$'Extension not allowed: strtolower(pathinfo($fn, PATHINFO_EXTENSION))'' cannot be parsed correct.
HTML code '$'ucwords(str_replace("-", " ", sanitize_file_name($el))) '' cannot be parsed correct.
HTML code '$'wp_kses_post(self->importFile($path, $title, $owner, $collection, $category, $tag, $description, $picture))'' cannot be parsed correct.
HTML code '$'ucwords(str_replace("-", " ", sanitize_file_name(array_shift(explode(".", $fn))))) '' cannot be parsed correct.
HTML code '$'wp_kses_post(self->importFile($path, $title, $owner, $collection, $category, $picture))<br>'' cannot be parsed correct.
HTML code '$'Extension not allowed: strtolower(pathinfo($fn, PATHINFO_EXTENSION))'' cannot be parsed correct.
HTML code '$'<br>Updating thumbnail (wp_insert_post($post), get_post_meta(intval($picture), "picture-source-file", true),  get_post_meta($post_id, "download-thumbnail", true)) uploadsPath=get_option("VWpaidMembershipOptions")_uploadsPath'' cannot be parsed correct.
HTML code '$'$roleName'' cannot be parsed correct.
HTML code '$'$roleName'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'$roleName'' cannot be parsed correct.
HTML code '$'$roleName'' cannot be parsed correct.
HTML code '$'sanitize_text_field($role["name"])'' cannot be parsed correct.
HTML code '$'<p><a class="ui button" href="get_permalink($contentID)">Access Content</a></p'' cannot be parsed correct.
HTML code '$'<h3>$wp_query</h3>'' cannot be parsed correct.
HTML code '$'do_shortcode("[videowhisper_gallery name=" . esc_attr($tax->name) . """)'' cannot be parsed correct.
HTML code '$'No token packages published, yet.'' cannot be parsed correct.
HTML code '$'Invalid nonce!'' cannot be parsed correct.
HTML code '$'<h4>Resetting...</h4>'' cannot be parsed correct.
HTML code '$'<p><A class="button" href="admin.php?page=paid-membership&tab=reset&confirm=1">Yes, Reset These Settings!</A></p>'' cannot be parsed correct.
HTML code '$'<br>'' cannot be parsed correct.
HTML code '$'<br>Importing: '' cannot be parsed correct.
HTML code '$'Detected:  <a href="admin.php?page=video-share">Configure</a> | <a href="https://videosharevod.com/features/quick-start-tutorial/">Tutorial</a>'' cannot be parsed correct.
HTML code '$'Not detected. Please install and activate <a target="_videosharevod" href="https://wordpress.org/plugins/video-share-vod/">VideoShareVOD Plugin</a> from <a href="plugin-install.php?s=videowhisper&tab=search&type=term">Plugins > Add New</a>!'' cannot be parsed correct.
HTML code '$'Detected:  <a href="admin.php?page=recorder">Configure</a>'' cannot be parsed correct.
HTML code '$'Not detected. Please install and activate <a target="_videosharevod" href="https://wordpress.org/plugins/video-posts-webcam-recorder/">Webcam Recorder Plugin</a> from <a href="plugin-install.php?s=videowhisper&tab=search&type=term">Plugins > Add New</a>!'' cannot be parsed correct.
HTML code '$'Detected:  <a href="admin.php?page=rate-star-review">Configure</a>'' cannot be parsed correct.
HTML code '$'Not detected. Please install and activate Rate Star Review by VideoWhisper.com from <a href="plugin-install.php">Plugins > Add New</a>!'' cannot be parsed correct.
HTML code '$'</textarea><br>$wp_rewrite->rules:<br><textarea cols="100" rows="5">'' cannot be parsed correct.
HTML code '$'</textarea><br>'' cannot be parsed correct.
HTML code '$'<p>Saving pages setup.</p>'' cannot be parsed correct.
HTML code '$'<option value="0">Undefined: Reset</option>'' cannot be parsed correct.
HTML code '$'</select><br>'' cannot be parsed correct.
HTML code '$'<h3>MicroPayments Frontend Feature Pages</h3>'' cannot be parsed correct.
HTML code '$'<h4>WP Rewrite Rules (Troubleshooting)</h4>'' cannot be parsed correct.
HTML code '$'rewrite_rules:<br><textarea cols="100" rows="5">'' cannot be parsed correct.
HTML code '$'Importing Memberships... Save if everything shows fine.'' cannot be parsed correct.
HTML code '$'Found.'' cannot be parsed correct.
HTML code '$'Not Found! Use another theme file!'' cannot be parsed correct.
HTML code '$'Found.'' cannot be parsed correct.
HTML code '$'Not Found! Use another theme file!'' cannot be parsed correct.
HTML code '$'Detected:  <a href="admin.php?page=rate-star-review">Configure</a>'' cannot be parsed correct.
HTML code '$'Not detected. Please install and activate Rate Star Review by VideoWhisper.com from <a href="plugin-install.php">Plugins > Add New</a>!'' cannot be parsed correct.
HTML code '$'Detected'' cannot be parsed correct.
HTML code '$'Not detected. Please install and activate myCRED with <a href="admin.php?page=mycred-addons">buyCRED addon</a>!'' cannot be parsed correct.
HTML code '$'Detected'' cannot be parsed correct.
HTML code '$'Not detected. Please install and activate myCRED with <a href="admin.php?page=mycred-addons">Sell Content addon</a>!'' cannot be parsed correct.
HTML code '$'<BR>Currently, no users have paid membership setup with this plugin.'' cannot be parsed correct.
HTML code '$'No memberships defined!'' cannot be parsed correct.
HTML code '$'<br>myCRED Sell Content Addon Detected'' cannot be parsed correct.
HTML code '$'<br>myCRED Sell Content Addon  NOT detected. Please install and activate myCRED with <a href="admin.php?page=mycred-addons">Sell Content Addon</a>!'' cannot be parsed correct.
HTML code '$'<p>'' cannot be parsed correct.
HTML code '$'</p>'' cannot be parsed correct.
HTML code '$'TeraWallet (WooWallet) Plugin Detected'' cannot be parsed correct.
HTML code '$'<br>Wallet not available, yet. Configure?'' cannot be parsed correct.
HTML code '$'Error: woo_wallet not found!'' cannot be parsed correct.
HTML code '$'Not detected. Please install and activate <a target="_plugin" href="https://wordpress.org/plugins/woo-wallet/">WooCommerce Wallet</a> from <a href="plugin-install.php">Plugins > Add New</a>!'' cannot be parsed correct.
HTML code '$'MyCred Plugin Detected'' cannot be parsed correct.
HTML code '$'Not detected. Please install and activate <a target="_mycred" href="https://wordpress.org/plugins/mycred/">myCRED</a> from <a href="plugin-install.php">Plugins > Add New</a>!'' cannot be parsed correct.
HTML code '$'Invalid nonce!'' cannot be parsed correct.
HTML code '$'<p>'' cannot be parsed correct.
HTML code '$'</p>'' cannot be parsed correct.
HTML code '$'</form>'' cannot be parsed correct.
HTML code '$'Invalid nonce!'' cannot be parsed correct.
HTML code '$'</div>

  </div>
</div>'' cannot be parsed correct.
HTML code '$'
<PRE style="display: none"><SCRIPT language="JavaScript">
jQuery(document).ready(function()
{
jQuery(".ui.accordion").accordion({exclusive:false});
});
</SCRIPT></PRE>
'' cannot be parsed correct.
HTML code '$'</div><div class="vwItemsContent">'' cannot be parsed correct.
HTML code '$'</select></div>'' cannot be parsed correct.
HTML code '$'<div class="field"></div>'' cannot be parsed correct.
HTML code '$'
<style>
	.vwItemsSidebar {
    grid-area: sidebar;
  }

  .vwItemsContent {
    grid-area: content;
  }

.vwItemsWrapper {
    display: grid;
    grid-gap: 4px;
    grid-template-columns: 120px  auto;
    grid-template-areas: "sidebar content";
    color: #444;
  }

  .ui .title { height: auto !important; background-color: inherit !important}
  .ui .content {margin: 0 !important; }
  .vwItemsSidebar .accordion {padding: 0 !important; }
  .vwItemsSidebar .menu { max-width: 120px !important;}

 </style>
 <div class="vwItemsWrapper">
 <div class="vwItemsSidebar">'' cannot be parsed correct.
HTML code '$'</div>

  </div>
</div>'' cannot be parsed correct.
HTML code '$'</div></div>'' cannot be parsed correct.
HTML code '$'<br>'' cannot be parsed correct.
HTML code '$'<div class="videowhisperContent">'' cannot be parsed correct.
HTML code '$'</div>
					'' cannot be parsed correct.
HTML code '$'<BR style="clear:both"><div class="ui form"><div class="inline fields">'' cannot be parsed correct.
HTML code '$'</div></div>'' cannot be parsed correct.
HTML code '$'Missing parameter error!'' cannot be parsed correct.
HTML code '$'Only logged in user can send donation!'' cannot be parsed correct.
HTML code '$'Donations not enabled for your role!'' cannot be parsed correct.
HTML code '$'<div class="ui segment">'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'</div></div>'' cannot be parsed correct.
HTML code '$'<br>'' cannot be parsed correct.
HTML code '$'</select></div>'' cannot be parsed correct.
HTML code '$'<div class="field"></div>'' cannot be parsed correct.
HTML code '$'<div class="videowhisperDownload">'' cannot be parsed correct.
HTML code '$'</div>
					'' cannot be parsed correct.
HTML code '$'<BR style="clear:both"><div class="ui form"><div class="inline fields">'' cannot be parsed correct.
HTML code '$'Upload completed... '' cannot be parsed correct.
HTML code '$'Login required!'' cannot be parsed correct.
HTML code '$'Only admin can upload for others!'' cannot be parsed correct.
HTML code '$'Collection required!'' cannot be parsed correct.
HTML code '$'Raw post data missing!'' cannot be parsed correct.
HTML code '$'<br style="clear:both">'' cannot be parsed correct.
HTML code '$'<br style="clear:both">'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:39.198849.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.042830.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 0 do_action/apply_filters calls and 36 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:01.751788.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FileProDetector
### Start running FrontBaseDetector
### Finish running DbaseDetector
### Start running HashDetector
### Finish running DbplusDetector
### Start running IBMDb2Detector
### Finish running ArrayElementDetector
### Start running InformixDetector
### Finish running FirebirdInterBaseDetector
### Start running IngresDetector
### Finish running CubridDetector
### Start running maxdbDetector
### Finish running IBMDb2Detector
### Start running MongoDbDetector
### Finish running HashDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running FrontBaseDetector
### Start running MySQLDetector
### Finish running MongoDbDetector
### Start running MySQLiDetector
### Finish running InformixDetector
### Start running Oci8Detector
### Finish running IngresDetector
### Start running OpenSSLDetector
### Finish running MySQLDetector
### Start running ParadoxDetector
### Finish running MsqlDetector
### Start running PasswordHashingDetector
### Finish running OpenSSLDetector
### Start running PhpCurlDetector
### Finish running Oci8Detector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PhpCurlDetector
### Start running PHPRetrievalDetector
### Finish running ParadoxDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPRetrievalDetector
### Start running PhpVarDetector
### Finish running PHPStorageDetector
### Start running PostgreSQLDetector
### Finish running PasswordHashingDetector
### Start running PropertyDetector
### Finish running PostgreSQLDetector
### Start running Sqlite3Detector
### Finish running PhpVarDetector
### Start running SqliteDetector
### Finish running Sqlite3Detector
### Start running SqlServerDetector
### Finish running PropertyDetector
### Start running SybaseDetector
### Finish running SqlServerDetector
### Start running TokyoTyrantDetector
### Finish running TokyoTyrantDetector
### Start running UserInputDetector
### Finish running SqliteDetector
### Start running VariableDetector
### Finish running SybaseDetector
### Start running WordpressHashingFnDetector
### Finish running UserInputDetector
### Start running WordPressRemoteDetector
### Finish running PHPIncludedDetector
### Start running WordPressRetrievalDetector
### Finish running WordPressRemoteDetector
### Start running WordPressStorageDetector
### Finish running WordpressHashingFnDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running VariableDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running GenericDatabaseUsageDetector
### Start running UninstallDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running MySQLiDetector
### Finish running maxdbDetector
### Finish running WordPressStorageDetector
### Finish running WordPressRetrievalDetector
### Finished running detectors
paid-membership.php:1552
  - MD5 called with parameters [uniqid, fn, true]. Ignore if [uniqid, fn, true] does not contain personal information.
paid-membership.php:1672
  - MD5 called with parameters [uniqid, true, owner]. Ignore if [uniqid, true, owner] does not contain personal information. 

inc/shortcodes.php:3057
  - RETRIEVAL call to fread($in, 4096).
  - Data types: file
paid-membership.php:1567
  - RETRIEVAL call to file_get_contents("php://input").
  - Data types: file 

inc/shortcodes.php:3058
  - STORAGE call to fwrite($out, $buff).
  - Data types: file
paid-membership.php:1575
  - STORAGE call to file_put_contents($path$dir . generateName($fn), $rawdata).
  - Data types: file 

inc/options.php:1567
  - object property '$current_user->user_nicename' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/shortcodes.php:2722
  - object property '$current_user->user_nicename' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
paid-membership.php:2060
  - object property '$current_user->user_email' of personal types {'email'} is found.
  - Data types: email 

inc/options.php:1576
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/shortcodes.php:2602
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/shortcodes.php:2644
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/shortcodes.php:2646
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/shortcodes.php:2646
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
paid-membership.php:1091
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
paid-membership.php:1093
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
paid-membership.php:1093
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
paid-membership.php:1198
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
paid-membership.php:1236
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
paid-membership.php:1238
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
paid-membership.php:1238
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta 

paid-membership.php:2958
  - CRYPTOGRAPHY call to wp_update_user(["ID" => $user_ID, "role" => $options["freeRole"]]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
paid-membership.php:3010
  - CRYPTOGRAPHY call to wp_update_user(["ID" => $user_ID, "role" => $membership["role"]]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta 

inc/options.php:23
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/options.php:42
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/options.php:216
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
inc/options.php:392
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/options.php:425
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/options.php:440
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/options.php:479
  - RETRIEVAL call to get_post($pid) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/options.php:939
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/options.php:952
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/options.php:1177
  - RETRIEVAL call to get_posts(["numberposts" => -1, "meta_query" => [["key" => "micropayments_tokens", "compare" => "EXISTS"]], "post_type" => "product", "post_status" => "publish"]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
inc/options.php:1198
  - RETRIEVAL call to get_post_meta(intval($package->ID), "micropayments_tokens", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/options.php:1199
  - RETRIEVAL call to get_post_meta(intval($package->ID), "_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/options.php:1457
  - RETRIEVAL call to get_option("rewrite_rules") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/options.php:1559
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
inc/options.php:2101
  - RETRIEVAL call to get_users(["meta_key" => "vw_paid_membership", "fields" => "ID"]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $args (array). Returns (array).
  - Data types: user, user_meta
inc/options.php:2110
  - RETRIEVAL call to get_userdata($user) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/options.php:2278
  - RETRIEVAL call to get_posts(["meta_key" => "vw_micropay_productid", "post_type" => "any", "post_status" => "any", "orderby" => "date", "order" => "DESC", "suppress_filters" => true]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
inc/options.php:2290
  - RETRIEVAL call to get_post_meta($post->ID, "vw_micropay_productid", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/options.php:2291
  - RETRIEVAL call to get_post_meta($post->ID, "vw_micropay_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/options.php:2301
  - RETRIEVAL call to get_posts(["meta_key" => "myCRED_sell_content", "post_type" => "any", "post_status" => "any", "orderby" => "date", "order" => "DESC", "suppress_filters" => true]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
inc/options.php:2314
  - RETRIEVAL call to get_post_meta($post->ID, "myCRED_sell_content", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/options.php:2437
  - RETRIEVAL call to get_user_meta($user_id, "micropayments_balance", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/options.php:2461
  - RETRIEVAL call to get_userdata($userID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/options.php:2604
  - RETRIEVAL call to get_userdata(intval($item[$column_name])) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/shortcodes.php:77
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:163
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:284
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
inc/shortcodes.php:297
  - RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
inc/shortcodes.php:522
  - RETRIEVAL call to get_post_meta($item->ID, "rateStarReview_rating", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:582
  - RETRIEVAL call to get_user_meta($clientID, "vw_client_subscriptions", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:589
  - RETRIEVAL call to get_user_meta($authorID, "vw_provider_subscribers", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:612
  - RETRIEVAL call to get_posts(["numberposts" => -1, "meta_query" => [["key" => "micropayments_tokens", "compare" => "EXISTS"]], "post_type" => "product", "post_status" => "publish"]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
inc/shortcodes.php:632
  - RETRIEVAL call to get_post_meta($package->ID, "micropayments_tokens", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:660
  - RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
inc/shortcodes.php:692
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:701
  - RETRIEVAL call to get_users($args) alters data types {'user', 'user_meta'}. Passed arguments: 0: $args (array). Returns (array).
  - Data types: user, user_meta
inc/shortcodes.php:726
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:731
  - RETRIEVAL call to get_user_meta($clientID, "vw_client_subscriptions", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:790
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:794
  - RETRIEVAL call to get_user_meta($authorID, "vw_provider_subscriptions", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:802
  - RETRIEVAL call to get_userdata($authorID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/shortcodes.php:806
  - RETRIEVAL call to get_userdata($clientID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/shortcodes.php:811
  - RETRIEVAL call to get_user_meta($clientID, "vw_client_subscription_" . $authorID, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:830
  - RETRIEVAL call to get_user_meta($clientID, "vw_client_subscriptions", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:847
  - RETRIEVAL call to get_user_meta($authorID, "vw_provider_subscribers", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:856
  - RETRIEVAL call to get_userdata($post->post_author) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/shortcodes.php:884
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:888
  - RETRIEVAL call to get_userdata($authorID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/shortcodes.php:892
  - RETRIEVAL call to get_userdata($clientID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/shortcodes.php:899
  - RETRIEVAL call to get_user_meta($clientID, "vw_client_subscriptions", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:939
  - RETRIEVAL call to get_userdata($userID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/shortcodes.php:946
  - RETRIEVAL call to get_user_meta($userID, "vw_client_subscriptions", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:953
  - RETRIEVAL call to get_userdata($authorID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/shortcodes.php:959
  - RETRIEVAL call to get_user_meta($userID, "vw_client_subscription_" . $authorID, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:1007
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:1012
  - RETRIEVAL call to get_userdata(intval($atts["author_id"])) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/shortcodes.php:1016
  - RETRIEVAL call to get_user_by("login", sanitize_text_field($atts["author_login"])) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
inc/shortcodes.php:1022
  - RETRIEVAL call to get_user_by("login", sanitize_text_field($_GET["author"])) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
inc/shortcodes.php:1028
  - RETRIEVAL call to get_user_by("login", sanitize_text_field($_GET["creator"])) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
inc/shortcodes.php:1054
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
inc/shortcodes.php:1091
  - RETRIEVAL call to get_user_meta($userID, "vw_client_subscriptions", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:1095
  - RETRIEVAL call to get_user_meta($userID, "vw_client_subscription_" . $author->ID, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:1115
  - RETRIEVAL call to get_user_meta($author->ID, "vw_provider_subscriptions", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:1160
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:1168
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
inc/shortcodes.php:1193
  - RETRIEVAL call to get_user_meta($userID, "vw_provider_subscriptions", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:1271
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:1273
  - RETRIEVAL call to get_post_meta($postID, "vw_donations", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:1279
  - RETRIEVAL call to get_post_meta($postID, "goal", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:1322
  - RETRIEVAL call to get_userdata($key) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/shortcodes.php:1345
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:1369
  - RETRIEVAL call to get_post_field("post_author", $postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $field (string), 1: $post (int|WP_Post). Returns (string).
  - Data types: post_meta, post, wp_post
inc/shortcodes.php:1384
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
inc/shortcodes.php:1394
  - RETRIEVAL call to get_user_by("id", $userID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
inc/shortcodes.php:1409
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/shortcodes.php:1414
  - RETRIEVAL call to get_post_meta($postID, "vw_donations", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:1416
  - RETRIEVAL call to get_post_meta($postID, "goal", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:1494
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:1508
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
inc/shortcodes.php:1520
  - RETRIEVAL call to get_userdata($userID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/shortcodes.php:1526
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/shortcodes.php:1537
  - RETRIEVAL call to get_post_meta($postID, "vw_donations", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:1555
  - RETRIEVAL call to get_post_meta($postID, "goal", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:1615
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:1624
  - RETRIEVAL call to get_post_meta($postID, "goal", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:1660
  - RETRIEVAL call to get_post_meta($postID, "micropayments_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:1685
  - RETRIEVAL call to get_post_meta($postID, "myCRED_sell_content", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:1693
  - RETRIEVAL call to get_post_meta($postID, "vw_micropay_productid", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:1697
  - RETRIEVAL call to get_post($vw_micropay_productid) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/shortcodes.php:1722
  - RETRIEVAL call to get_userdata($post->post_author) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/shortcodes.php:1777
  - RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
inc/shortcodes.php:1836
  - RETRIEVAL call to get_post_meta($postID, "vw_micropay_productid", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:1850
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:1856
  - RETRIEVAL call to get_post_meta($postID, "micropayments_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:1863
  - RETRIEVAL call to get_post_meta($postID, "micropayments_duration", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:1872
  - RETRIEVAL call to get_post_meta($postID, "myCRED_sell_content", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:1883
  - RETRIEVAL call to get_post_meta($postID, "vw_micropay_productid", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:1887
  - RETRIEVAL call to get_post($vw_micropay_productid) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/shortcodes.php:1895
  - RETRIEVAL call to get_post_meta($product_id, "_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:1899
  - RETRIEVAL call to get_post_meta($postID, "vw_donations", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:1901
  - RETRIEVAL call to get_post_meta($postID, "goal", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:1904
  - RETRIEVAL call to get_post_meta($postID, "vw_subscription_tier", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/shortcodes.php:1913
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:1931
  - RETRIEVAL call to get_post($postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/shortcodes.php:1942
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
inc/shortcodes.php:2067
  - RETRIEVAL call to get_user_meta($post->post_author, "vw_provider_subscriptions", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:2171
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:2172
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
inc/shortcodes.php:2210
  - RETRIEVAL call to get_post($announceID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/shortcodes.php:2277
  - RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
inc/shortcodes.php:2298
  - RETRIEVAL call to get_post($announceID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/shortcodes.php:2369
  - RETRIEVAL call to get_post($include) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/shortcodes.php:2422
  - RETRIEVAL call to get_post(intval($selected)) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/shortcodes.php:2440
  - RETRIEVAL call to get_post(intval($selected)) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/shortcodes.php:2526
  - RETRIEVAL call to get_user_meta($userID, "vw_provider_subscriptions", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:2586
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:2594
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
inc/shortcodes.php:2938
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:3085
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:3086
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
inc/shortcodes.php:3094
  - RETRIEVAL call to get_user_meta($current_user->ID, "vw_client_purchase_list", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:3099
  - RETRIEVAL call to get_post($product_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/shortcodes.php:3106
  - RETRIEVAL call to get_posts(["numberposts" => -1, "meta_key" => "_customer_user", "meta_value" => $current_user->ID, "post_type" => wc_get_order_types(), "post_status" => "wc-completed"]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
inc/shortcodes.php:3129
  - RETRIEVAL call to get_post($product_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
inc/shortcodes.php:3148
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:3154
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
inc/shortcodes.php:3174
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:3210
  - RETRIEVAL call to get_posts(["numberposts" => -1, "meta_query" => [["key" => "micropayments_tokens", "compare" => "EXISTS"]], "post_type" => "product", "post_status" => "publish"]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
inc/shortcodes.php:3298
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/shortcodes.php:3343
  - RETRIEVAL call to get_user_meta($user_ID, "vw_paid_membership", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:3383
  - RETRIEVAL call to get_user_meta($user_ID, "vw_paid_membership", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/shortcodes.php:3406
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
paid-membership.php:67
  - RETRIEVAL call to get_userdata($userID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
paid-membership.php:167
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
paid-membership.php:259
  - RETRIEVAL call to get_option("vw_micropayments_db") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
paid-membership.php:289
  - RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).
paid-membership.php:345
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
paid-membership.php:351
  - RETRIEVAL call to get_post_meta($post_id, "download-source-file", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
paid-membership.php:355
  - RETRIEVAL call to get_post_meta($post_id, "download-thumbnail", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
paid-membership.php:365
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
paid-membership.php:410
  - RETRIEVAL call to get_option("VWpaidMembershipWidgetOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
paid-membership.php:506
  - RETRIEVAL call to get_option("VWpaidMembershipWidgetOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
paid-membership.php:530
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
paid-membership.php:626
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
paid-membership.php:639
  - RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
paid-membership.php:723
  - RETRIEVAL call to get_post_meta($item->ID, "download-views", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
paid-membership.php:747
  - RETRIEVAL call to get_post_meta($item->ID, "rateStarReview_rating", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
paid-membership.php:759
  - RETRIEVAL call to get_post_meta($item->ID, "download-thumbnail", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
paid-membership.php:813
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
paid-membership.php:901
  - RETRIEVAL call to get_post($download_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
paid-membership.php:906
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
paid-membership.php:968
  - RETRIEVAL call to get_post_meta($download_id, "download-views", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
paid-membership.php:977
  - RETRIEVAL call to get_post_meta($download_id, "download-thumbnail", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
paid-membership.php:980
  - RETRIEVAL call to get_post_meta($download_id, "download-source-file", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
paid-membership.php:1008
  - RETRIEVAL call to get_post($download_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
paid-membership.php:1013
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
paid-membership.php:1020
  - RETRIEVAL call to get_post_meta($download_id, "download-snapshot", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
paid-membership.php:1047
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
paid-membership.php:1049
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
paid-membership.php:1159
  - RETRIEVAL call to get_option("VWpictureGalleryOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
paid-membership.php:1169
  - RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
paid-membership.php:1193
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
paid-membership.php:1200
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
paid-membership.php:1478
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
paid-membership.php:1483
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
paid-membership.php:1624
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
paid-membership.php:1700
  - RETRIEVAL call to get_option("gmt_offset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
paid-membership.php:1782
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
paid-membership.php:1823
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
paid-membership.php:1826
  - RETRIEVAL call to get_post_meta($post_id, "download-picture", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
paid-membership.php:1829
  - RETRIEVAL call to get_post_meta(intval($picture), "picture-source-file", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
paid-membership.php:1836
  - RETRIEVAL call to get_post_meta($post_id, "download-thumbnail", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
paid-membership.php:1862
  - RETRIEVAL call to get_post_meta($post_id, "picture-thumbnail", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
paid-membership.php:1911
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
paid-membership.php:1932
  - RETRIEVAL call to get_post($atts["post"]) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
paid-membership.php:1978
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
paid-membership.php:2054
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
paid-membership.php:2077
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
paid-membership.php:2094
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
paid-membership.php:2102
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
paid-membership.php:2121
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
paid-membership.php:2152
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
paid-membership.php:2203
  - RETRIEVAL call to get_post_meta($postID, "download-views", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
paid-membership.php:2233
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
paid-membership.php:2333
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
paid-membership.php:2352
  - RETRIEVAL call to get_post_meta($post->ID, "vwpm_roles", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
paid-membership.php:2488
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
paid-membership.php:2493
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
paid-membership.php:2495
  - RETRIEVAL call to get_post_meta($postID, "vw_donations", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
paid-membership.php:2500
  - RETRIEVAL call to get_post_field("post_author", $postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $field (string), 1: $post (int|WP_Post). Returns (string).
  - Data types: post_meta, post, wp_post
paid-membership.php:2521
  - RETRIEVAL call to get_post_field("post_author", $postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $field (string), 1: $post (int|WP_Post). Returns (string).
  - Data types: post_meta, post, wp_post
paid-membership.php:2555
  - RETRIEVAL call to get_post_meta($postID, "vw_subscription_tier", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
paid-membership.php:2557
  - RETRIEVAL call to get_post_field("post_author", $postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $field (string), 1: $post (int|WP_Post). Returns (string).
  - Data types: post_meta, post, wp_post
paid-membership.php:2560
  - RETRIEVAL call to get_user_meta($current_user->ID, "vw_client_subscription_" . $authorID, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
paid-membership.php:2570
  - RETRIEVAL call to get_user_meta($authorID, "vw_provider_subscriptions", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
paid-membership.php:2574
  - RETRIEVAL call to get_userdata($authorID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
paid-membership.php:2607
  - RETRIEVAL call to get_post_meta($postID, "micropayments_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
paid-membership.php:2625
  - RETRIEVAL call to get_post_meta($postID, "micropayments_duration", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
paid-membership.php:2636
  - RETRIEVAL call to get_user_meta($current_user->ID, "vw_client_purchase_" . $postID, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
paid-membership.php:2653
  - RETRIEVAL call to get_post_field("post_author", $postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $field (string), 1: $post (int|WP_Post). Returns (string).
  - Data types: post_meta, post, wp_post
paid-membership.php:2666
  - RETRIEVAL call to get_user_meta($current_user->ID, "vw_client_purchase_list", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
paid-membership.php:2674
  - RETRIEVAL call to get_post_field("post_author", $postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $field (string), 1: $post (int|WP_Post). Returns (string).
  - Data types: post_meta, post, wp_post
paid-membership.php:2681
  - RETRIEVAL call to get_user_meta($current_user->ID, "vw_client_purchase_" . $postID, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
paid-membership.php:2713
  - RETRIEVAL call to get_post_meta($postID, "vw_micropay_productid", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
paid-membership.php:2714
  - RETRIEVAL call to get_post_meta($postID, "vw_micropay_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
paid-membership.php:2726
  - RETRIEVAL call to get_post_field("post_author", $postID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $field (string), 1: $post (int|WP_Post). Returns (string).
  - Data types: post_meta, post, wp_post
paid-membership.php:2732
  - RETRIEVAL call to get_posts(["numberposts" => -1, "meta_key" => "_customer_user", "meta_value" => $current_user->ID, "post_type" => wc_get_order_types(), "post_status" => "wc-completed"]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
paid-membership.php:2780
  - RETRIEVAL call to get_post_meta($postID, "vwpm_roles", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
paid-membership.php:2801
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
paid-membership.php:2822
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
paid-membership.php:2891
  - RETRIEVAL call to get_post_meta($product_id, "videowhisper_content", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
paid-membership.php:2905
  - RETRIEVAL call to get_users(["meta_key" => "vw_paid_membership", "fields" => "ID"]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $args (array). Returns (array).
  - Data types: user, user_meta
paid-membership.php:2920
  - RETRIEVAL call to get_user_meta($user_ID, "vw_paid_membership", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
paid-membership.php:2948
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
paid-membership.php:2970
  - RETRIEVAL call to get_user_meta($user_ID, "vw_paid_membership", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
paid-membership.php:3063
  - RETRIEVAL call to get_user_meta($userID, "micropayments_balance", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
paid-membership.php:3071
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
paid-membership.php:3123
  - RETRIEVAL call to get_user_meta($userID, "micropayments_balance", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
paid-membership.php:3148
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
paid-membership.php:3213
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
paid-membership.php:3227
  - RETRIEVAL call to get_user_meta($userID, "vw_ppv_temp", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
paid-membership.php:3245
  - RETRIEVAL call to get_option("VWpaidMembershipOptions") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option 

inc/options.php:510
  - STORAGE call to wp_insert_post($page). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
inc/options.php:584
  - STORAGE call to update_option("VWpaidMembershipOptions", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/options.php:959
  - STORAGE call to update_option("VWpaidMembershipOptions", $adminOptions) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/options.php:982
  - STORAGE call to update_option("VWpaidMembershipOptions", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/options.php:1065
  - STORAGE call to update_option("VWpaidMembershipOptions", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/options.php:1133
  - STORAGE call to wp_insert_post($product). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
inc/options.php:1136
  - STORAGE call to update_post_meta($product_id, "micropayments_tokens", floatval($_POST["package_tokens"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/options.php:1137
  - STORAGE call to update_post_meta($product_id, "_price", floatval($_POST["package_price"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/options.php:1138
  - STORAGE call to update_post_meta($product_id, "_regular_price", floatval($_POST["package_price"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/options.php:1141
  - STORAGE call to update_post_meta($product_id, "_visibility", "visible") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/options.php:1142
  - STORAGE call to update_post_meta($product_id, "_stock_status", "instock") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/options.php:1143
  - STORAGE call to update_post_meta($product_id, "_virtual", "yes") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/options.php:1144
  - STORAGE call to update_post_meta($product_id, "_purchase_note", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/options.php:1146
  - STORAGE call to update_post_meta($product_id, "_sku", "micropayments_tokens") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/options.php:1147
  - STORAGE call to update_post_meta($product_id, "_product_attributes", []) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/options.php:1148
  - STORAGE call to update_post_meta($product_id, "_sold_individually", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/options.php:1149
  - STORAGE call to update_post_meta($product_id, "_manage_stock", "no") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/options.php:1150
  - STORAGE call to update_post_meta($product_id, "_backorders", "no") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/options.php:1345
  - STORAGE call to update_option("VWpaidMembershipOptions", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/options.php:1827
  - STORAGE call to update_option("VWpaidMembershipOptions", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/options.php:2095
  - STORAGE call to delete_user_meta($delete_membership, "vw_paid_membership") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
inc/options.php:2364
  - STORAGE call to update_option("VWpaidMembershipOptions", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/shortcodes.php:580
  - STORAGE call to delete_user_meta($clientID, "vw_client_subscription_" . $authorID) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
inc/shortcodes.php:587
  - STORAGE call to update_user_meta($clientID, "vw_client_subscriptions", $client_subscriptions) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/shortcodes.php:594
  - STORAGE call to update_user_meta($authorID, "vw_provider_subscribers", $provider_subscribers) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/shortcodes.php:681
  - STORAGE call to update_post_meta($customer_order->ID, "micropayments_processed", 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:783
  - STORAGE call to update_user_meta($clientID, "vw_client_subscriptions", $client_subscriptions) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/shortcodes.php:827
  - STORAGE call to update_user_meta($clientID, "vw_client_subscription_" . $authorID, $tier) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/shortcodes.php:844
  - STORAGE call to update_user_meta($clientID, "vw_client_subscriptions", $client_subscriptions) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/shortcodes.php:852
  - STORAGE call to update_user_meta($authorID, "vw_provider_subscribers", $provider_subscribers) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/shortcodes.php:912
  - STORAGE call to update_user_meta($clientID, "vw_client_subscriptions", $client_subscriptions) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/shortcodes.php:1189
  - STORAGE call to update_user_meta($userID, "vw_provider_subscriptions", $new_subscriptions) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/shortcodes.php:1586
  - STORAGE call to update_post_meta($postID, "goal", $goal) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:1643
  - STORAGE call to update_post_meta($postID, "goal", $goal) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:1653
  - STORAGE call to update_post_meta($postID, "micropayments_price", $newPrice) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:1654
  - STORAGE call to update_post_meta($postID, "micropayments_duration", $data["priceExpire"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:1656
  - STORAGE call to delete_post_meta($postID, "micropayments_price") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/shortcodes.php:1657
  - STORAGE call to delete_post_meta($postID, "micropayments_duration") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/shortcodes.php:1661
  - STORAGE call to delete_post_meta($postID, "micropayments_price") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/shortcodes.php:1662
  - STORAGE call to delete_post_meta($postID, "micropayments_duration") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/shortcodes.php:1680
  - STORAGE call to update_post_meta($postID, "myCRED_sell_content", $mCa) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:1682
  - STORAGE call to delete_post_meta($postID, "myCRED_sell_content") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/shortcodes.php:1686
  - STORAGE call to delete_post_meta($postID, "myCRED_sell_content") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/shortcodes.php:1716
  - STORAGE call to wp_update_post($product). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
inc/shortcodes.php:1718
  - STORAGE call to wp_insert_post($product). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
inc/shortcodes.php:1739
  - STORAGE call to update_post_meta($product_id, "videowhisper_content", $postID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:1743
  - STORAGE call to update_post_meta($product_id, "_visibility", "visible") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:1744
  - STORAGE call to update_post_meta($product_id, "_stock_status", "instock") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:1747
  - STORAGE call to update_post_meta($product_id, "_virtual", "yes") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:1750
  - STORAGE call to update_post_meta($product_id, "_purchase_note", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:1756
  - STORAGE call to update_post_meta($product_id, "_sku", "content" . $postID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:1757
  - STORAGE call to update_post_meta($product_id, "_product_attributes", []) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:1760
  - STORAGE call to update_post_meta($product_id, "_price", $newPrice) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:1761
  - STORAGE call to update_post_meta($product_id, "_sold_individually", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:1762
  - STORAGE call to update_post_meta($product_id, "_manage_stock", "no") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:1764
  - STORAGE call to update_post_meta($product_id, "_backorders", "no") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:1790
  - STORAGE call to update_post_meta($product_id, "_product_image_gallery", $attachmentIDs) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:1816
  - STORAGE call to update_post_meta($postID, "vw_micropay_productid", $product_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:1817
  - STORAGE call to update_post_meta($postID, "vw_micropay_price", $newPrice) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:1825
  - STORAGE call to wp_delete_post($product_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post_meta, post, wp_post
inc/shortcodes.php:1829
  - STORAGE call to update_post_meta($postID, "vw_micropay_price", 0) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:1837
  - STORAGE call to delete_post_meta($postID, "vw_micropay_productid") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/shortcodes.php:2003
  - STORAGE call to wp_update_post(["ID" => $postID, "post_title" => $title, "post_content" => $description, "post_status" => $status, "comment_status" => $comment_status]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
inc/shortcodes.php:2021
  - STORAGE call to update_post_meta($postID, "vw_donations", sanitize_file_name($_POST["donations"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:2023
  - STORAGE call to update_post_meta($postID, "vw_subscription_tier", intval($_POST["subscription_tier"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/shortcodes.php:2447
  - STORAGE call to update_post_meta($sPost->ID, "vw_subscription_tier", $subscription_tier) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
paid-membership.php:292
  - STORAGE call to add_option("vw_micropayments_db", $db_current_version) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
paid-membership.php:294
  - STORAGE call to update_option("vw_micropayments_db", $db_current_version) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
paid-membership.php:418
  - STORAGE call to update_option("VWpaidMembershipWidgetOptions", $widgetOptions) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
paid-membership.php:434
  - STORAGE call to update_option("VWpaidMembershipWidgetOptions", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
paid-membership.php:973
  - STORAGE call to update_post_meta($download_id, "download-views", $views) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
paid-membership.php:974
  - STORAGE call to update_post_meta($download_id, "download-lastview", time()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
paid-membership.php:1717
  - STORAGE call to wp_insert_post($post). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
paid-membership.php:1719
  - STORAGE call to update_post_meta($post_id, "download-source-file", $newPath) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
paid-membership.php:1731
  - STORAGE call to update_post_meta($post_id, "download-picture", $picture) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
paid-membership.php:1808
  - STORAGE call to update_post_meta($post_id, "download-thumbnail", $dest) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
paid-membership.php:1810
  - STORAGE call to update_post_meta($post_id, "download-width", $width) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
paid-membership.php:1813
  - STORAGE call to update_post_meta($post_id, "download-height", $height) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
paid-membership.php:1899
  - STORAGE call to update_post_meta($post_id, "picture-width", $width) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
paid-membership.php:1902
  - STORAGE call to update_post_meta($post_id, "picture-height", $height) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
paid-membership.php:2420
  - STORAGE call to update_post_meta($post_id, "vwpm_roles", $vwpmRoles) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
paid-membership.php:2640
  - STORAGE call to delete_user_meta($current_user->ID, "vw_client_purchase_" . $postID) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
paid-membership.php:2663
  - STORAGE call to update_user_meta($current_user->ID, "vw_client_purchase_" . $postID, $newPurchase) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
paid-membership.php:2669
  - STORAGE call to update_user_meta($current_user->ID, "vw_client_purchase_list", $purchases) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
paid-membership.php:2685
  - STORAGE call to delete_user_meta($current_user->ID, "vw_client_purchase_" . $postID) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
paid-membership.php:2937
  - STORAGE call to update_user_meta($user_ID, "vw_paid_membership", $membership) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
paid-membership.php:2958
  - STORAGE call to wp_update_user(["ID" => $user_ID, "role" => $options["freeRole"]]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
paid-membership.php:2965
  - STORAGE call to delete_user_meta($user_ID, "vw_paid_membership") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
paid-membership.php:2980
  - STORAGE call to update_user_meta($user_ID, "vw_paid_membership", $membership) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
paid-membership.php:2990
  - STORAGE call to update_user_meta($user_ID, "vw_paid_membership", $membership) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
paid-membership.php:3010
  - STORAGE call to wp_update_user(["ID" => $user_ID, "role" => $membership["role"]]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
paid-membership.php:3049
  - STORAGE call to update_user_meta($userID, "micropayments_balance", $newBalance) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta 

inc/options.php:2095
  - DELETION call to delete_user_meta($delete_membership, "vw_paid_membership") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
inc/shortcodes.php:580
  - DELETION call to delete_user_meta($clientID, "vw_client_subscription_" . $authorID) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
inc/shortcodes.php:1656
  - DELETION call to delete_post_meta($postID, "micropayments_price") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/shortcodes.php:1657
  - DELETION call to delete_post_meta($postID, "micropayments_duration") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/shortcodes.php:1661
  - DELETION call to delete_post_meta($postID, "micropayments_price") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/shortcodes.php:1662
  - DELETION call to delete_post_meta($postID, "micropayments_duration") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/shortcodes.php:1682
  - DELETION call to delete_post_meta($postID, "myCRED_sell_content") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/shortcodes.php:1686
  - DELETION call to delete_post_meta($postID, "myCRED_sell_content") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/shortcodes.php:1825
  - DELETION call to wp_delete_post($product_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post_meta, post, wp_post
inc/shortcodes.php:1837
  - DELETION call to delete_post_meta($postID, "vw_micropay_productid") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
paid-membership.php:2640
  - DELETION call to delete_user_meta($current_user->ID, "vw_client_purchase_" . $postID) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
paid-membership.php:2685
  - DELETION call to delete_user_meta($current_user->ID, "vw_client_purchase_" . $postID) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
paid-membership.php:2965
  - DELETION call to delete_user_meta($user_ID, "vw_paid_membership") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta 

By data type:
email
	PropertyDetector.(unknown) - {'email'}
file
	PHPStorageDetector.file_put_contents($path$dir . generateName($fn), $rawdata) - {'file'}
	PHPRetrievalDetector.fread($in, 4096) - {'file'}
	PHPStorageDetector.fwrite($out, $buff) - {'file'}
	PHPRetrievalDetector.file_get_contents("php://input") - {'file'}
none
	WordPressStorageDetector.wp_insert_post($product) - set()
	WordPressStorageDetector.wp_insert_post($post) - set()
	WordPressRetrievalDetector.get_posts($args) - set()
	WordPressRetrievalDetector.get_posts($args) - set()
	WordPressRetrievalDetector.get_posts(["numberposts" => -1, "meta_query" => [["key" => "micropayments_tokens", "compare" => "EXISTS"]], "post_type" => "product", "post_status" => "publish"]) - set()
	WordPressRetrievalDetector.get_posts(["numberposts" => -1, "meta_key" => "_customer_user", "meta_value" => $current_user->ID, "post_type" => wc_get_order_types(), "post_status" => "wc-completed"]) - set()
	WordPressRetrievalDetector.get_posts(["numberposts" => -1, "meta_query" => [["key" => "micropayments_tokens", "compare" => "EXISTS"]], "post_type" => "product", "post_status" => "publish"]) - set()
	WordPressStorageDetector.wp_insert_post($page) - set()
	WordPressRetrievalDetector.get_posts($args) - set()
	WordPressStorageDetector.wp_update_post($product) - set()
	PHPIncludedDetector.(unknown) - set()
	WordPressRetrievalDetector.dbDelta($sql) - set()
	WordPressRetrievalDetector.get_posts($args) - set()
	WordPressRetrievalDetector.get_posts($args) - set()
	PHPIncludedDetector.(unknown) - set()
	WordPressRetrievalDetector.get_posts(["numberposts" => -1, "meta_key" => "_customer_user", "meta_value" => $current_user->ID, "post_type" => wc_get_order_types(), "post_status" => "wc-completed"]) - set()
	WordPressRetrievalDetector.get_posts($args) - set()
	WordPressRetrievalDetector.get_posts(["numberposts" => -1, "meta_query" => [["key" => "micropayments_tokens", "compare" => "EXISTS"]], "post_type" => "product", "post_status" => "publish"]) - set()
	WordPressRetrievalDetector.get_posts(["meta_key" => "myCRED_sell_content", "post_type" => "any", "post_status" => "any", "orderby" => "date", "order" => "DESC", "suppress_filters" => true]) - set()
	WordPressRetrievalDetector.get_posts(["meta_key" => "vw_micropay_productid", "post_type" => "any", "post_status" => "any", "orderby" => "date", "order" => "DESC", "suppress_filters" => true]) - set()
	WordPressStorageDetector.wp_insert_post($product) - set()
	WordPressStorageDetector.wp_update_post(["ID" => $postID, "post_title" => $title, "post_content" => $description, "post_status" => $status, "comment_status" => $comment_status]) - set()
option
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressStorageDetector.update_option("VWpaidMembershipWidgetOptions", $options) - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressStorageDetector.update_option("VWpaidMembershipWidgetOptions", $widgetOptions) - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressStorageDetector.update_option("VWpaidMembershipOptions", $options) - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("gmt_offset") - {'option'}
	WordPressRetrievalDetector.get_option("VWpictureGalleryOptions") - {'option'}
	WordPressStorageDetector.update_option("VWpaidMembershipOptions", $options) - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("rewrite_rules") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipWidgetOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipWidgetOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressStorageDetector.update_option("VWpaidMembershipOptions", $options) - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("vw_micropayments_db") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressStorageDetector.update_option("VWpaidMembershipOptions", $adminOptions) - {'option'}
	WordPressStorageDetector.update_option("VWpaidMembershipOptions", $options) - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressStorageDetector.update_option("vw_micropayments_db", $db_current_version) - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressStorageDetector.update_option("VWpaidMembershipOptions", $options) - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressStorageDetector.add_option("vw_micropayments_db", $db_current_version) - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressStorageDetector.update_option("VWpaidMembershipOptions", $options) - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
	WordPressRetrievalDetector.get_option("VWpaidMembershipOptions") - {'option'}
post
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_field("post_author", $postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_field("post_author", $postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($product_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_field("post_author", $postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($vw_micropay_productid) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($atts["post"]) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($product_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($announceID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($include) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($download_id) - {'post_meta', 'post', 'wp_post'}
	DeletionDetector.wp_delete_post($product_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post(intval($selected)) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($vw_micropay_productid) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post(intval($selected)) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($announceID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_field("post_author", $postID) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.wp_delete_post($product_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_field("post_author", $postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($pid) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($download_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_field("post_author", $postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_field("post_author", $postID) - {'post_meta', 'post', 'wp_post'}
post_meta
	WordPressStorageDetector.update_post_meta($post_id, "picture-width", $width) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product_id, "_sold_individually", "") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "goal", $goal) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "download-height", $height) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_micropay_productid", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "download-views", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($package->ID, "micropayments_tokens", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($download_id, "download-lastview", time()) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "vwpm_roles", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product_id, "_product_attributes", []) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product_id, "videowhisper_content", $postID) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product_id, "_purchase_note", "") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "micropayments_duration", $data["priceExpire"]) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "picture-height", $height) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "micropayments_price", $newPrice) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product_id, "_sku", "micropayments_tokens") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_subscription_tier", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($download_id, "download-views", $views) - {'post_meta'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_micropay_productid", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_field("post_author", $postID) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($postID, "goal", $goal) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($download_id, "download-views", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(intval($package->ID), "_price", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "myCRED_sell_content", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_donations", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product_id, "_stock_status", "instock") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_micropay_productid", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_field("post_author", $postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($product_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_field("post_author", $postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_donations", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_micropay_price", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_subscription_tier", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(intval($package->ID), "micropayments_tokens", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "goal", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product_id, "_price", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "goal", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($vw_micropay_productid) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($atts["post"]) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($product_id, "_regular_price", floatval($_POST["package_price"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post($product_id) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($product_id, "_visibility", "visible") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product_id, "_virtual", "yes") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product_id, "_product_attributes", []) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "micropayments_price", true) - {'post_meta'}
	DeletionDetector.delete_post_meta($postID, "micropayments_duration") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "micropayments_duration", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "download-source-file", $newPath) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "download-source-file", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product_id, "_visibility", "visible") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "download-picture", $picture) - {'post_meta'}
	WordPressRetrievalDetector.get_post($announceID) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($postID, "vw_micropay_productid", $product_id) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product_id, "_backorders", "no") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product_id, "micropayments_tokens", floatval($_POST["package_tokens"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product_id, "_virtual", "yes") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product_id, "_manage_stock", "no") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product_id, "_manage_stock", "no") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product_id, "_price", floatval($_POST["package_price"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($item->ID, "rateStarReview_rating", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "goal", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vwpm_roles", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product_id, "_stock_status", "instock") - {'post_meta'}
	WordPressRetrievalDetector.get_post($include) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($postID, "vw_donations", sanitize_file_name($_POST["donations"])) - {'post_meta'}
	DeletionDetector.delete_post_meta($postID, "myCRED_sell_content") - {'post_meta'}
	WordPressRetrievalDetector.get_post($download_id) - {'post_meta', 'post', 'wp_post'}
	DeletionDetector.wp_delete_post($product_id) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.delete_post_meta($postID, "micropayments_price") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($download_id, "download-snapshot", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($customer_order->ID, "micropayments_processed", 1) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($sPost->ID, "vw_subscription_tier", $subscription_tier) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_donations", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "vw_subscription_tier", intval($_POST["subscription_tier"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_donations", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($download_id, "download-source-file", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post(intval($selected)) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($product_id, "videowhisper_content", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($vw_micropay_productid) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post(intval($selected)) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($postID, "goal", true) - {'post_meta'}
	DeletionDetector.delete_post_meta($postID, "micropayments_price") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_donations", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "myCRED_sell_content", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "myCRED_sell_content", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "vw_micropay_price", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "micropayments_price", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "vw_micropay_productid", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($post_id, "download-thumbnail", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "vw_micropay_productid", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "download-width", $width) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($postID, "myCRED_sell_content") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "vw_micropay_price", $newPrice) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product_id, "_sold_individually", "") - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($postID, "vw_micropay_productid") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product_id, "_sku", "content" . $postID) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product_id, "_backorders", "no") - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($postID, "micropayments_duration") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "picture-thumbnail", true) - {'post_meta'}
	DeletionDetector.delete_post_meta($postID, "micropayments_price") - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($postID, "myCRED_sell_content") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product_id, "_product_image_gallery", $attachmentIDs) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "vw_micropay_price", 0) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postID, "myCRED_sell_content", $mCa) - {'post_meta'}
	WordPressRetrievalDetector.get_post($announceID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($download_id, "download-thumbnail", true) - {'post_meta'}
	DeletionDetector.delete_post_meta($postID, "micropayments_duration") - {'post_meta'}
	WordPressRetrievalDetector.get_post_field("post_author", $postID) - {'post_meta', 'post', 'wp_post'}
	DeletionDetector.delete_post_meta($postID, "vw_micropay_productid") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "download-thumbnail", true) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($postID, "micropayments_price") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "vwpm_roles", $vwpmRoles) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "download-thumbnail", $dest) - {'post_meta'}
	WordPressStorageDetector.wp_delete_post($product_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta(intval($picture), "picture-source-file", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product_id, "_price", $newPrice) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "download-picture", true) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($postID, "micropayments_duration") - {'post_meta'}
	WordPressRetrievalDetector.get_post_field("post_author", $postID) - {'post_meta', 'post', 'wp_post'}
	DeletionDetector.delete_post_meta($postID, "myCRED_sell_content") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "micropayments_duration", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($item->ID, "download-views", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($item->ID, "download-thumbnail", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "goal", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($pid) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($item->ID, "rateStarReview_rating", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postID, "micropayments_price", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($product_id, "_purchase_note", "") - {'post_meta'}
	WordPressRetrievalDetector.get_post($download_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_field("post_author", $postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_field("post_author", $postID) - {'post_meta', 'post', 'wp_post'}
user
	WordPressRetrievalDetector.get_user_by("login", sanitize_text_field($_GET["author"])) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", sanitize_text_field($atts["author_login"])) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", sanitize_text_field($_GET["creator"])) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata(intval($atts["author_id"])) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($post->post_author) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($authorID) - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_update_user(["ID" => $user_ID, "role" => $membership["role"]]) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($clientID) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_users($args) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($key) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata(intval($item[$column_name])) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($userID) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.wp_update_user(["ID" => $user_ID, "role" => $membership["role"]]) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_users(["meta_key" => "vw_paid_membership", "fields" => "ID"]) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($post->post_author) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($userID) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("id", $userID) - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_update_user(["ID" => $user_ID, "role" => $options["freeRole"]]) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($userID) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($user) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressStorageDetector.wp_update_user(["ID" => $user_ID, "role" => $options["freeRole"]]) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_users(["meta_key" => "vw_paid_membership", "fields" => "ID"]) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($authorID) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($userID) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($authorID) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($clientID) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($authorID) - {'user', 'user_meta'}
user_meta
	WordPressStorageDetector.update_user_meta($clientID, "vw_client_subscriptions", $client_subscriptions) - {'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", sanitize_text_field($_GET["author"])) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressStorageDetector.delete_user_meta($clientID, "vw_client_subscription_" . $authorID) - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", sanitize_text_field($atts["author_login"])) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($authorID, "vw_provider_subscribers", $provider_subscribers) - {'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", sanitize_text_field($_GET["creator"])) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.delete_user_meta($delete_membership, "vw_paid_membership") - {'user_meta'}
	WordPressStorageDetector.update_user_meta($clientID, "vw_client_subscriptions", $client_subscriptions) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($userID, "vw_provider_subscriptions", $new_subscriptions) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($clientID, "vw_client_subscription_" . $authorID, $tier) - {'user_meta'}
	WordPressRetrievalDetector.get_userdata(intval($atts["author_id"])) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($authorID, "vw_provider_subscriptions", true) - {'user_meta'}
	WordPressStorageDetector.delete_user_meta($current_user->ID, "vw_client_purchase_" . $postID) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($userID, "vw_ppv_temp", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($clientID, "vw_client_subscriptions", true) - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_ID, "vw_paid_membership", true) - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($current_user->ID, "vw_client_purchase_list", $purchases) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($authorID, "vw_provider_subscribers", $provider_subscribers) - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($current_user->ID, "vw_client_purchase_" . $postID, true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_ID, "vw_paid_membership", true) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($post->post_author) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_ID, "vw_paid_membership", true) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($authorID) - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_update_user(["ID" => $user_ID, "role" => $membership["role"]]) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($current_user->ID, "vw_client_purchase_list", true) - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($clientID) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($authorID, "vw_provider_subscribers", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($clientID, "vw_client_subscriptions", true) - {'user_meta'}
	WordPressRetrievalDetector.get_users($args) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($userID, "vw_provider_subscriptions", true) - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($authorID, "vw_provider_subscribers", true) - {'user_meta'}
	WordPressRetrievalDetector.get_userdata($key) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata(intval($item[$column_name])) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($clientID, "vw_client_subscriptions", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($userID, "micropayments_balance", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($userID, "vw_provider_subscriptions", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($author->ID, "vw_provider_subscriptions", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($userID, "vw_client_subscription_" . $author->ID, true) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($clientID, "vw_client_subscription_" . $authorID, true) - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($userID) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	DeletionDetector.delete_user_meta($delete_membership, "vw_paid_membership") - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($user_ID, "vw_paid_membership", $membership) - {'user_meta'}
	WordPressStorageDetector.wp_update_user(["ID" => $user_ID, "role" => $membership["role"]]) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($userID, "micropayments_balance", $newBalance) - {'user_meta'}
	WordPressRetrievalDetector.get_users(["meta_key" => "vw_paid_membership", "fields" => "ID"]) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($post->post_author) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($userID) - {'user', 'user_meta'}
	DeletionDetector.delete_user_meta($current_user->ID, "vw_client_purchase_" . $postID) - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	DeletionDetector.delete_user_meta($clientID, "vw_client_subscription_" . $authorID) - {'user_meta'}
	WordPressRetrievalDetector.get_user_by("id", $userID) - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_update_user(["ID" => $user_ID, "role" => $options["freeRole"]]) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($clientID, "vw_client_subscriptions", $client_subscriptions) - {'user_meta'}
	WordPressRetrievalDetector.get_userdata($userID) - {'user', 'user_meta'}
	DeletionDetector.delete_user_meta($current_user->ID, "vw_client_purchase_" . $postID) - {'user_meta'}
	WordPressRetrievalDetector.get_userdata($user) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($clientID, "vw_client_subscriptions", $client_subscriptions) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($userID, "micropayments_balance", true) - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($post->post_author, "vw_provider_subscriptions", true) - {'user_meta'}
	WordPressStorageDetector.wp_update_user(["ID" => $user_ID, "role" => $options["freeRole"]]) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($current_user->ID, "vw_client_purchase_" . $postID, $newPurchase) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user_ID, "vw_paid_membership", $membership) - {'user_meta'}
	WordPressStorageDetector.delete_user_meta($current_user->ID, "vw_client_purchase_" . $postID) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user_ID, "vw_paid_membership", $membership) - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressStorageDetector.delete_user_meta($user_ID, "vw_paid_membership") - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_users(["meta_key" => "vw_paid_membership", "fields" => "ID"]) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id, "micropayments_balance", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($userID, "vw_client_subscriptions", true) - {'user_meta'}
	WordPressRetrievalDetector.get_userdata($authorID) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($userID) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($authorID) - {'user', 'user_meta'}
	DeletionDetector.delete_user_meta($user_ID, "vw_paid_membership") - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($userID, "vw_client_subscription_" . $authorID, true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($clientID, "vw_client_subscriptions", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($authorID, "vw_provider_subscriptions", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($current_user->ID, "vw_client_purchase_list", true) - {'user_meta'}
	WordPressRetrievalDetector.get_userdata($clientID) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($authorID) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_ID, "vw_paid_membership", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($current_user->ID, "vw_client_purchase_" . $postID, true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($current_user->ID, "vw_client_subscription_" . $authorID, true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($userID, "vw_client_subscriptions", true) - {'user_meta'}
wp_post
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_field("post_author", $postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_field("post_author", $postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($product_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_field("post_author", $postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($vw_micropay_productid) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($atts["post"]) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($product_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($announceID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($include) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($download_id) - {'post_meta', 'post', 'wp_post'}
	DeletionDetector.wp_delete_post($product_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post(intval($selected)) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($vw_micropay_productid) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post(intval($selected)) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($announceID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_field("post_author", $postID) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.wp_delete_post($product_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_field("post_author", $postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($pid) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($download_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_field("post_author", $postID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_field("post_author", $postID) - {'post_meta', 'post', 'wp_post'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:54.449871.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... 