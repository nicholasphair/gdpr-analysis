Timeout in resolving values
Timeout in running neo4j query
Running Main.py on transact

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.690649.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.091331.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 347 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:01.128818.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 0 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.540750.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 1588 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:01.583672.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 85 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:02.994517.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
Added 44 PHP_REACHES edges.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.102744.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 785 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:12.197980.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 11889
Added 9040 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 14423
Added 2534 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:02.479705.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/transact/activation.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/transact/transact-plugin.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/transact/uninstall.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/transact/admin/transact-admin.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/transact/admin/controllers/transact-admin-settings-menu.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/transact/admin/controllers/transact-admin-settings-post.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/transact/admin/controllers/transact-api.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/transact/admin/controllers/transact-shortcode.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/transact/admin/views/transact-account-view.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/transact/frontend/controllers/account_meta.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/transact/frontend/controllers/comments_slot.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/transact/frontend/controllers/transact-api.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/transact/frontend/controllers/transact-cookie-manager.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/transact/frontend/controllers/transact-handle-buttons.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/transact/frontend/controllers/transact-handle-buttons-shortcode.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/transact/frontend/controllers/transact-single-post.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/transact/models/transact-button-types.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/transact/models/transact-subscription-transactions-table.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/transact/models/transact-transactions-table.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/transact/utils/transact-currency-utils.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/transact/utils/transact-settings-cpt.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/transact/utils/transact-utils-config-parser.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/transact/vendors/transact-io-php/transact-io.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/transact/vendors/transact-io-php/demo/demo-api.php' cannot be parsed correct.
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/transact/vendors/transact-io-php/demo/demo.html
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/transact/vendors/transact-io-php/demo/demo.html' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/transact/vendors/transact-io-php/vendor/autoload.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/transact/vendors/transact-io-php/vendor/composer/autoload_classmap.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/transact/vendors/transact-io-php/vendor/composer/autoload_namespaces.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/transact/vendors/transact-io-php/vendor/composer/autoload_psr4.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/transact/vendors/transact-io-php/vendor/composer/autoload_real.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/transact/vendors/transact-io-php/vendor/composer/autoload_static.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/transact/vendors/transact-io-php/vendor/composer/ClassLoader.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/transact/vendors/transact-io-php/vendor/firebase/php-jwt/src/BeforeValidException.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/transact/vendors/transact-io-php/vendor/firebase/php-jwt/src/ExpiredException.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/transact/vendors/transact-io-php/vendor/firebase/php-jwt/src/JWT.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/transact/vendors/transact-io-php/vendor/firebase/php-jwt/src/SignatureInvalidException.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:03.604337.

2 Nodes Created
1000 PHP_REACHES edges created
1935 PHP_REACHES edges created
7 CALLS edges created
69 PHP_REACHES edges created
9 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
9869 PHP_REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
2534 PHP_REACHES edges created
1 DIRECTORY_OF edges created
1 FILE_OF edges created
14425 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 4267 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.356531.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 6 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:03.748366.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 223 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:10.591354.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 245 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.201179.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:01.038729.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:05.778810.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.048467.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.033902.

6 CALLS edges created
468 PHP_REACHES edges created
474 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 404 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.150164.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
7 SQL operations to process.
CREATE TABLE IF NOT EXISTS $wpdbtransact_transactions (
          `sales_id` varchar(32) NOT NULL,
          `post_id` bigint(20) NOT NULL,
          `timestamp` bigint(20) NOT NULL,
          PRIMARY KEY (`sales_id`)
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
SQL command (CREATE TABLE IF NOT EXISTS $wpdbtransact_transactions ( `sales_id` varchar(32) NOT NULL, `post_id` bigint(20) NOT NULL, `timestamp` bigint(20) NOT NULL, PRIMARY KEY (`sales_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;) cannot be parsed correct.
CREATE TABLE IF NOT EXISTS $wpdbtransact_subscription_transactions (
          `sales_id` varchar(32) NOT NULL,
          `expiration` bigint(20) NOT NULL,
          `timestamp` bigint(20) NOT NULL,
          PRIMARY KEY (`sales_id`)
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
SQL command (CREATE TABLE IF NOT EXISTS $wpdbtransact_subscription_transactions ( `sales_id` varchar(32) NOT NULL, `expiration` bigint(20) NOT NULL, `timestamp` bigint(20) NOT NULL, PRIMARY KEY (`sales_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;) cannot be parsed correct.
DROP TABLE $wpdbtransact_transactions;
SQL command (DROP TABLE $wpdbtransact_transactions;) cannot be parsed correct.
DROP TABLE $wpdbtransact_subscription_transactions;
SQL command (DROP TABLE $wpdbtransact_subscription_transactions;) cannot be parsed correct.
$this->connector->prepare("SELECT * FROM "$this->table_name" WHERE  " . self::"SALES_KEY" . "=\'%s\'", $sale_id)
SQL command ($this->connector->prepare("SELECT * FROM "$this->table_name" WHERE " . self::"SALES_KEY" . "=\'%s\'", $sale_id)) cannot be parsed correct.
$this->connector->prepare("SELECT * FROM "$this->table_name" WHERE " . self::"POST_KEY" . " = \'%s\'", $post_id)
SQL command ($this->connector->prepare("SELECT * FROM "$this->table_name" WHERE " . self::"POST_KEY" . " = \'%s\'", $post_id)) cannot be parsed correct.
$this->connector->prepare("SELECT * FROM "$this->table_name" WHERE  " . self::"SALES_KEY" . "=\'%s\'", $sale_id)
SQL command ($this->connector->prepare("SELECT * FROM "$this->table_name" WHERE " . self::"SALES_KEY" . "=\'%s\'", $sale_id)) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [32, 55, 16013, 16036, 15262, 15540, 15604]
Added 0 SQL nodes. 0 out of 7 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:03.308187.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'get_option("transact-settings")'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'<input name=\'transact-settings[current($arg)]\' type=\'text\' value=\'get_option("transact-settings")_current($arg)\' style=\'width: 300px\'/>'' cannot be parsed correct.
HTML code '$'get_option("transact-settings")'' cannot be parsed correct.
HTML code '$'{"1": ["regular"], "2": ["less"], "3": ["disable"]}_0'' cannot be parsed correct.
HTML code '$'text_fade_amount_{"1": ["regular"], "2": ["less"], "3": ["disable"]}_0'' cannot be parsed correct.
HTML code '$'{"1": ["regular"], "2": ["less"], "3": ["disable"]}_0'' cannot be parsed correct.
HTML code '$'{"1": ["regular"], "2": ["less"], "3": ["disable"]}_0'' cannot be parsed correct.
HTML code '$'text_fade_amount_{"1": ["regular"], "2": ["less"], "3": ["disable"]}_0'' cannot be parsed correct.
HTML code '$'{"regular": "Regular fade amount", "less": "Less fade", "disable": "Disable fade"}_{"1": ["regular"], "2": ["less"], "3": ["disable"]}_0'' cannot be parsed correct.
HTML code '$'get_option("transact-settings")'' cannot be parsed correct.
HTML code '$'get_option("transact-settings")'' cannot be parsed correct.
HTML code '$'get_option("transact-settings")'' cannot be parsed correct.
HTML code '$'{"1": ["cents"], "2": ["dollars"]}_0'' cannot be parsed correct.
HTML code '$'display_cents_dollars_{"1": ["cents"], "2": ["dollars"]}_0'' cannot be parsed correct.
HTML code '$'{"1": ["cents"], "2": ["dollars"]}_0'' cannot be parsed correct.
HTML code '$'{"1": ["cents"], "2": ["dollars"]}_0'' cannot be parsed correct.
HTML code '$'display_cents_dollars_{"1": ["cents"], "2": ["dollars"]}_0'' cannot be parsed correct.
HTML code '$'{"cents": "123 Cents", "dollars": "$1.23"}_{"1": ["cents"], "2": ["dollars"]}_0'' cannot be parsed correct.
HTML code '$'seo_no_access'' cannot be parsed correct.
HTML code '$'{"1": ["seo_no_access"], "2": ["seo_full_access"]}_0'' cannot be parsed correct.
HTML code '$'search_engine_access_{"1": ["seo_no_access"], "2": ["seo_full_access"]}_0'' cannot be parsed correct.
HTML code '$'{"1": ["seo_no_access"], "2": ["seo_full_access"]}_0'' cannot be parsed correct.
HTML code '$'{"1": ["seo_no_access"], "2": ["seo_full_access"]}_0'' cannot be parsed correct.
HTML code '$'search_engine_access_{"1": ["seo_no_access"], "2": ["seo_full_access"]}_0'' cannot be parsed correct.
HTML code '$'{"seo_no_access": "No Access", "seo_full_access": "Full free access for search engines so they can index them. "}_{"1": ["seo_no_access"], "2": ["seo_full_access"]}_0'' cannot be parsed correct.
HTML code '$'get_option("transact-settings")'' cannot be parsed correct.
HTML code '$'get_option("transact-settings")'' cannot be parsed correct.
HTML code '$'get_option("transact-settings")'' cannot be parsed correct.
HTML code '$'$currency_utils->get_currency_from_options()'' cannot be parsed correct.
HTML code '$'$currency_utils->get_currency_from_options()'' cannot be parsed correct.
HTML code '$'transact_currency_{"1": ["PROD"], "2": ["GBP"], "3": ["EUR"], "4": ["JPY"], "5": ["CAD"]}_0'' cannot be parsed correct.
HTML code '$'{"1": ["PROD"], "2": ["GBP"], "3": ["EUR"], "4": ["JPY"], "5": ["CAD"]}_0'' cannot be parsed correct.
HTML code '$'{"1": ["PROD"], "2": ["GBP"], "3": ["EUR"], "4": ["JPY"], "5": ["CAD"]}_0'' cannot be parsed correct.
HTML code '$'transact_currency_{"1": ["PROD"], "2": ["GBP"], "3": ["EUR"], "4": ["JPY"], "5": ["CAD"]}_0'' cannot be parsed correct.
HTML code '$'{"PROD": "USD", "GBP": "GBP", "EUR": "EUR", "JPY": "JPY", "CAD": "CAD"}_{"1": ["PROD"], "2": ["GBP"], "3": ["EUR"], "4": ["JPY"], "5": ["CAD"]}_0'' cannot be parsed correct.
HTML code '$'get_option("transact-settings")'' cannot be parsed correct.
HTML code '$'{"1": ["subscribe_purchase"], "2": ["purchase_only"], "3": ["subscribe_only"], "4": ["disable_transact"]}_0'' cannot be parsed correct.
HTML code '$'default_purchase_type_{"1": ["subscribe_purchase"], "2": ["purchase_only"], "3": ["subscribe_only"], "4": ["disable_transact"]}_0'' cannot be parsed correct.
HTML code '$'{"1": ["subscribe_purchase"], "2": ["purchase_only"], "3": ["subscribe_only"], "4": ["disable_transact"]}_0'' cannot be parsed correct.
HTML code '$'{"1": ["subscribe_purchase"], "2": ["purchase_only"], "3": ["subscribe_only"], "4": ["disable_transact"]}_0'' cannot be parsed correct.
HTML code '$'default_purchase_type_{"1": ["subscribe_purchase"], "2": ["purchase_only"], "3": ["subscribe_only"], "4": ["disable_transact"]}_0'' cannot be parsed correct.
HTML code '$'{"subscribe_purchase": "Display Purchase and Subscribe Button", "purchase_only": "Display Only Purchase Button", "subscribe_only": "Display Only Subscribe Button", "disable_transact": "Disable Transact by Default"}_{"1": ["subscribe_purchase"], "2": ["purchase_only"], "3": ["subscribe_only"], "4": ["disable_transact"]}_0'' cannot be parsed correct.
HTML code '$'<input placeholder="GTM-1ABCD23" name=\'transact-settings[googletagmanager_id]\' type=\'text\' value=\'get_option("transact-settings")\' style=\'width: 300px\'/>'' cannot be parsed correct.
HTML code '$'$selected'' cannot be parsed correct.
HTML code '$'$page'' cannot be parsed correct.
HTML code '$'$page'' cannot be parsed correct.
HTML code '$'$donations_selected'' cannot be parsed correct.
HTML code '$'$donation_disabled'' cannot be parsed correct.
HTML code '$'$selected_noredirect'' cannot be parsed correct.
HTML code '$'get_option("transact-settings")'' cannot be parsed correct.
HTML code '$'$selected_purchased_and_subscription'' cannot be parsed correct.
HTML code '$'$selected_purchased'' cannot be parsed correct.
HTML code '$'$selected_subscription'' cannot be parsed correct.
HTML code '$'$selected_sign_in'' cannot be parsed correct.
HTML code '$'$selected_disable'' cannot be parsed correct.
HTML code '$'display: none;'' cannot be parsed correct.
HTML code '$'display: none;'' cannot be parsed correct.
HTML code '$'$currency_utils->get_currency_symbol()'' cannot be parsed correct.
HTML code '$'$price_disabled'' cannot be parsed correct.
HTML code '$'$value_2'' cannot be parsed correct.
HTML code '$'<!-- Google Tag Manager -->
                <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({\'gtm.start\':
                new Date().getTime(),event:\'gtm.js\'});var f=d.getElementsByTagName(s)[0],
                j=d.createElement(s),dl=l!=\'dataLayer\'?\'&l=\'+l:\'\';j.async=true;j.src=
                \'https://www.googletagmanager.com/gtm.js?id=\'+i+dl;f.parentNode.insertBefore(j,f);
                })(window,document,\'script\',\'dataLayer\',\'trim($options["googletagmanager_id"])\');</script>
                <!-- End Google Tag Manager -->'' cannot be parsed correct.
HTML code '$'<script type="application/ld+json">
        {
            "@context": "https://schema.org",
            "@type": "CreativeWork",
            "mainEntityOfPage": {
              "@type": "WebPage",
              "@id": "get_post_permalink($post_object, true)"
            },
            "headline": "$post_object",
            "datePublished": "$date_published",
            "dateModified": "$date_modified",
            "author": {
              "@type": "Person",
              "name": "$author_name"
            },
            "publisher": {
               "name": "get_bloginfo("name")",
               "@type": "Organization",
               "logo": {
                  "@type": "ImageObject",
                  "url": "wp_get_attachment_image_src($logo, "full")_0"
               }
            },
            "description": "trim($post_object->post_excerpt)",
            "isAccessibleForFree": "False",
            "hasPart":
              {
              "@type": "WebPageElement",
              "isAccessibleForFree": "False",
              "cssSelector" : ".wp-block-transact-premium-content"
              }
          }
      '' cannot be parsed correct.
HTML code '$'<script>window.WP_REST_NONCE = \'wp_create_nonce("wp_rest")\';</script>'' cannot be parsed correct.
HTML code '$'<script>window.WP_REST_NONCE = \'wp_create_nonce("wp_rest")\';</script>'' cannot be parsed correct.
HTML code '$'json_encode(ErrorResponse("400", "Invalid API call. action missing"))'' cannot be parsed correct.
HTML code '$'json_encode($response)'' cannot be parsed correct.
HTML code '$'json_encode($response)'' cannot be parsed correct.
HTML code '$'json_encode(["content" => "Failed validation", "status" => "ERROR", "message" => $e->getMessage()])'' cannot be parsed correct.
HTML code '$'json_encode($response)'' cannot be parsed correct.
HTML code '$'json_encode(ErrorResponse("400", "Invalid API call. t missing"))'' cannot be parsed correct.
HTML code '$'json_encode(["content" => "SUCCESS PAID CONTENT HERE!", "status" => "OK", "subscription" => $decoded->sub, "subscription_expires" => $decoded->sub_expires, "decoded" => $decoded])'' cannot be parsed correct.
HTML code '$'json_encode(["content" => "Failed validation", "status" => "ERROR", "message" => $e->getMessage()])'' cannot be parsed correct.
HTML code '$'json_encode(ErrorResponse("404", "Invalid API call"))'' cannot be parsed correct.
HTML code '$'" for="transact_price">
                    '' cannot be parsed correct.
HTML code '$'" for="transact_price">
                    '' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:10.199499.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.043298.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 5 do_action/apply_filters calls and 26 add_action/add_filter calls. Now connecting do-add pairs.
Added 3 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:01.295490.

3 PHP_REACHES edges created
3 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FirebirdInterBaseDetector
### Start running FrontBaseDetector
### Finish running DbplusDetector
### Start running HashDetector
### Finish running FileProDetector
### Start running IBMDb2Detector
### Finish running DbaseDetector
### Start running InformixDetector
### Finish running CubridDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running ArrayElementDetector
### Start running OpenSSLDetector
### Finish running Oci8Detector
### Start running ParadoxDetector
### Finish running MongoDbDetector
### Start running PasswordHashingDetector
### Finish running ParadoxDetector
### Start running PhpCurlDetector
### Finish running PhpCurlDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PasswordHashingDetector
### Start running PHPRetrievalDetector
### Finish running HashDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running OpenSSLDetector
### Start running PhpVarDetector
### Finish running PHPStorageDetector
### Start running PostgreSQLDetector
### Finish running PHPRetrievalDetector
### Start running PropertyDetector
### Finish running PHPIncludedDetector
### Start running Sqlite3Detector
### Finish running PostgreSQLDetector
### Start running SqliteDetector
### Finish running Sqlite3Detector
### Start running SqlServerDetector
### Finish running SqliteDetector
### Start running SybaseDetector
### Finish running PropertyDetector
### Start running TokyoTyrantDetector
### Finish running SybaseDetector
### Start running UserInputDetector
### Finish running PhpVarDetector
### Start running VariableDetector
### Finish running TokyoTyrantDetector
### Start running WordpressHashingFnDetector
### Finish running maxdbDetector
### Start running WordPressRemoteDetector
### Finish running MySQLiDetector
### Start running WordPressRetrievalDetector
### Finish running SqlServerDetector
### Start running WordPressStorageDetector
### Finish running UserInputDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running WordpressHashingFnDetector
### Start running GenericEncryptionDetector
### Finish running GenericDatabaseUsageDetector
### Start running DeletionDetector
### Finish running VariableDetector
### Start running UninstallDetector
### Finish running GenericEncryptionDetector
### Finish running DeletionDetector
### Finish running UninstallDetector
### Finish running WordPressStorageDetector
### Finish running WordPressRemoteDetector
### Finish running WordPressRetrievalDetector
### Finished running detectors
admin/controllers/transact-api.php:99
  - hash_hmac called with approved hash algorithm sha256.
vendors/transact-io-php/vendor/firebase/php-jwt/src/JWT.php:193
  - hash_hmac called with unknown hash algorithm.
vendors/transact-io-php/vendor/firebase/php-jwt/src/JWT.php:235
  - hash_hmac called with unknown hash algorithm. 

admin/controllers/transact-admin-settings-post.php:126
  - MD5 called with parameters [time, post_id]. Ignore if [time, post_id] does not contain personal information.
frontend/controllers/transact-api.php:107
  - MD5 called with parameters [item_id, this, true, uniqid]. Ignore if [item_id, this, true, uniqid] does not contain personal information. 

frontend/controllers/transact-single-post.php:303
  - object property '$profile->email1' of personal types {'email'} is found.
  - Data types: email
frontend/controllers/transact-single-post.php:304
  - object property '$profile->first_name' of personal types {'first_name'} is found.
  - Data types: first_name
frontend/controllers/transact-single-post.php:309
  - object property '$profile->first_name' of personal types {'first_name'} is found.
  - Data types: first_name 

frontend/controllers/account_meta.php:46
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
frontend/controllers/account_meta.php:49
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
frontend/controllers/account_meta.php:56
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
frontend/controllers/account_meta.php:58
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
frontend/controllers/account_meta.php:59
  - variable '$user_display_name' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
frontend/controllers/account_meta.php:60
  - variable '$user_display_name' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
frontend/controllers/account_meta.php:67
  - variable '$user_display_name' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
frontend/controllers/account_meta.php:71
  - variable '$user_display_name' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
frontend/controllers/account_meta.php:72
  - variable '$user_display_name' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
frontend/controllers/transact-single-post.php:285
  - variable '$oauth_state' of personal types {'state'} is found.
  - Data types: state
frontend/controllers/transact-single-post.php:287
  - variable '$oauth_state' of personal types {'state'} is found.
  - Data types: state
frontend/controllers/transact-single-post.php:303
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
frontend/controllers/transact-single-post.php:306
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
frontend/controllers/transact-single-post.php:307
  - variable '$user_display_name' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
frontend/controllers/transact-single-post.php:309
  - variable '$user_display_name' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
frontend/controllers/transact-single-post.php:316
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
frontend/controllers/transact-single-post.php:318
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
frontend/controllers/transact-single-post.php:318
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
frontend/controllers/transact-single-post.php:318
  - variable '$user_display_name' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
frontend/controllers/transact-single-post.php:401
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
frontend/controllers/transact-single-post.php:402
  - variable '$user_display_name' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
frontend/controllers/transact-single-post.php:449
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
frontend/controllers/transact-single-post.php:451
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
frontend/controllers/transact-single-post.php:451
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
frontend/controllers/transact-single-post.php:451
  - variable '$user_display_name' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
frontend/controllers/transact-single-post.php:791
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
frontend/controllers/transact-single-post.php:793
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta 

frontend/controllers/account_meta.php:68
  - CRYPTOGRAPHY call to wp_update_user(["ID" => $wp_userid, "display_name" => $user_display_name, "nickname" => $user_display_name]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta 

admin/controllers/transact-api.php:43
  - API call to wp_remote_get($url). Passed arguments: 0: $url (string). Returns (array|WP_Error).
  - Data types: remote
admin/controllers/transact-api.php:69
  - API call to wp_remote_get($url). Passed arguments: 0: $url (string). Returns (array|WP_Error).
  - Data types: remote
frontend/controllers/transact-api.php:394
  - API call to wp_remote_get($url, ["headers" => ["Secret" => $secret, "Referer" => $referer_uri]]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
frontend/controllers/transact-api.php:439
  - API call to wp_remote_post($oauth_token_url, $oauth_token_data). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
frontend/controllers/transact-api.php:481
  - API call to wp_remote_get($user_profile_url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote 

activation.php:14
  - RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).
activation.php:23
  - RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).
admin/controllers/transact-admin-settings-menu.php:29
  - RETRIEVAL call to get_option("transact_validation") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/controllers/transact-admin-settings-menu.php:339
  - RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/controllers/transact-admin-settings-menu.php:368
  - RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/controllers/transact-admin-settings-menu.php:423
  - RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/controllers/transact-admin-settings-menu.php:462
  - RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/controllers/transact-admin-settings-menu.php:482
  - RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/controllers/transact-admin-settings-menu.php:498
  - RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/controllers/transact-admin-settings-menu.php:538
  - RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/controllers/transact-admin-settings-menu.php:550
  - RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/controllers/transact-admin-settings-menu.php:582
  - RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/controllers/transact-admin-settings-menu.php:625
  - RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/controllers/transact-admin-settings-menu.php:718
  - RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/controllers/transact-admin-settings-menu.php:760
  - RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/controllers/transact-admin-settings-menu.php:775
  - RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/controllers/transact-admin-settings-menu.php:785
  - RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/controllers/transact-admin-settings-menu.php:795
  - RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/controllers/transact-admin-settings-menu.php:808
  - RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/controllers/transact-admin-settings-menu.php:904
  - RETRIEVAL call to get_option("transact_validation") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/controllers/transact-admin-settings-menu.php:911
  - RETRIEVAL call to get_option("transact_validation") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/controllers/transact-admin-settings-post.php:83
  - RETRIEVAL call to get_transient(SETTING_VALIDATION_TRANSIENT) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
admin/controllers/transact-admin-settings-post.php:124
  - RETRIEVAL call to get_post_meta($post_id, "transact_item_code") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/controllers/transact-admin-settings-post.php:185
  - RETRIEVAL call to get_transient(SETTING_VALIDATION_TRANSIENT) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
admin/controllers/transact-admin-settings-post.php:199
  - RETRIEVAL call to get_post_meta($post->ID, "transact_item_code", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/controllers/transact-admin-settings-post.php:200
  - RETRIEVAL call to get_post_meta($post->ID, "transact_premium_content", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/controllers/transact-admin-settings-post.php:201
  - RETRIEVAL call to get_post_meta($post->ID, "transact_display_button", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/controllers/transact-admin-settings-post.php:202
  - RETRIEVAL call to get_post_meta($post->ID, "transact_donations", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/controllers/transact-admin-settings-post.php:203
  - RETRIEVAL call to get_post_meta($post->ID, "transact_redirect_after_donation", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/controllers/transact-admin-settings-post.php:337
  - RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/controllers/transact-admin-settings-post.php:570
  - RETRIEVAL call to get_post_meta($post_id$post_id$this->post_id, "transact_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/controllers/transact-admin-settings-post.php:573
  - RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/controllers/transact-admin-settings-post.php:588
  - RETRIEVAL call to get_post_meta($this->post_id, "transact_item_code", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/controllers/transact-shortcode.php:37
  - RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/views/transact-account-view.php:6
  - RETRIEVAL call to get_transient(SETTING_VALIDATION_TRANSIENT) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
admin/views/transact-account-view.php:16
  - RETRIEVAL call to get_transient(SETTING_VALIDATION_SUBSCRIPTION_TRANSIENT) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
frontend/controllers/account_meta.php:46
  - RETRIEVAL call to get_user_by("login", $username) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
frontend/controllers/account_meta.php:49
  - RETRIEVAL call to get_user_by("email", $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
frontend/controllers/account_meta.php:91
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
frontend/controllers/account_meta.php:121
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
frontend/controllers/account_meta.php:124
  - RETRIEVAL call to get_user_meta($user_id, self::"SUBSCRIPTION_INFO_META", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
frontend/controllers/account_meta.php:156
  - RETRIEVAL call to get_user_meta($user_id, self::"XSACT_USER_ID_META", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
frontend/controllers/account_meta.php:157
  - RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
frontend/controllers/account_meta.php:205
  - RETRIEVAL call to get_user_meta($user_id, $meta_key, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
frontend/controllers/account_meta.php:220
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
frontend/controllers/account_meta.php:234
  - RETRIEVAL call to get_user_meta($user_id, self::"SUBSCRIPTION_INFO_META", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
frontend/controllers/account_meta.php:264
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
frontend/controllers/account_meta.php:267
  - RETRIEVAL call to get_user_meta($user_id, self::"SUBSCRIPTION_INFO_META", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
frontend/controllers/account_meta.php:277
  - RETRIEVAL call to get_user_meta($user_id, $meta_key, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
frontend/controllers/transact-api.php:217
  - RETRIEVAL call to get_post_meta($this->post_id, "transact_premium_content", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
frontend/controllers/transact-handle-buttons.php:49
  - RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
frontend/controllers/transact-handle-buttons.php:105
  - RETRIEVAL call to get_post_meta($this->post_id, "transact_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
frontend/controllers/transact-handle-buttons.php:158
  - RETRIEVAL call to get_post_meta($this->post_id, "transact_display_button", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
frontend/controllers/transact-handle-buttons.php:203
  - RETRIEVAL call to get_post_meta($this->post_id, "transact_donations", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
frontend/controllers/transact-handle-buttons.php:377
  - RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
frontend/controllers/transact-handle-buttons.php:381
  - RETRIEVAL call to get_post_meta($this->post_id, "transact_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
frontend/controllers/transact-handle-buttons.php:400
  - RETRIEVAL call to get_post_meta($this->post_id, "transact_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
frontend/controllers/transact-single-post.php:254
  - RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
frontend/controllers/transact-single-post.php:290
  - RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
frontend/controllers/transact-single-post.php:321
  - RETRIEVAL call to wp_set_current_user($wp_userid) alters data types {'user_meta'}. Passed arguments: 0: $id (int). Returns (WP_User).
  - Data types: user_meta
frontend/controllers/transact-single-post.php:460
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
frontend/controllers/transact-single-post.php:468
  - RETRIEVAL call to wp_set_current_user($wp_userid) alters data types {'user_meta'}. Passed arguments: 0: $id (int). Returns (WP_User).
  - Data types: user_meta
frontend/controllers/transact-single-post.php:531
  - RETRIEVAL call to get_post($post_id) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: wp_post, post_meta, post
frontend/controllers/transact-single-post.php:619
  - RETRIEVAL call to get_post($post_id) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: wp_post, post_meta, post
frontend/controllers/transact-single-post.php:699
  - RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
frontend/controllers/transact-single-post.php:713
  - RETRIEVAL call to get_post($this->post_id) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: wp_post, post_meta, post
frontend/controllers/transact-single-post.php:735
  - RETRIEVAL call to get_the_author_meta("nickname", $post_object->post_author) alters data types {'user_meta'}. Passed arguments: 1: $user_id (int|false), 0: $field (string). Returns (string).
  - Data types: user_meta
frontend/controllers/transact-single-post.php:797
  - RETRIEVAL call to wp_set_current_user($wp_userid) alters data types {'user_meta'}. Passed arguments: 0: $id (int). Returns (WP_User).
  - Data types: user_meta
frontend/controllers/transact-single-post.php:847
  - RETRIEVAL call to get_post_meta($this->post_id, "transact_display_button", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
frontend/controllers/transact-single-post.php:859
  - RETRIEVAL call to get_post($this->post_id) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: wp_post, post_meta, post
frontend/controllers/transact-single-post.php:868
  - RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
frontend/controllers/transact-single-post.php:905
  - RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
frontend/controllers/transact-single-post.php:920
  - RETRIEVAL call to get_post_meta($this->post_id, "transact_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
frontend/controllers/transact-single-post.php:980
  - RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
frontend/controllers/transact-single-post.php:982
  - RETRIEVAL call to get_post_meta($post_id, "transact_donations", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
frontend/controllers/transact-single-post.php:997
  - RETRIEVAL call to get_post_meta($post_id, "transact_redirect_after_donation", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
frontend/controllers/transact-single-post.php:1018
  - RETRIEVAL call to get_option("transact_validation") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
frontend/controllers/transact-single-post.php:1021
  - RETRIEVAL call to get_post_meta($this->post_id, "transact_item_code", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
frontend/controllers/transact-single-post.php:1053
  - RETRIEVAL call to get_post($post_id) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: wp_post, post_meta, post
frontend/controllers/transact-single-post.php:1071
  - RETRIEVAL call to get_post_meta($this->post_id, "transact_premium_comments", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
frontend/controllers/transact-single-post.php:1077
  - RETRIEVAL call to get_post_meta($post_object->ID, "transact_display_button", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
uninstall.php:15
  - RETRIEVAL call to dbDelta($query). Passed arguments: 0: $queries (string[]|string). Returns (array).
uninstall.php:19
  - RETRIEVAL call to dbDelta($query). Passed arguments: 0: $queries (string[]|string). Returns (array).
utils/transact-currency-utils.php:40
  - RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
utils/transact-settings-cpt.php:18
  - RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option 

admin/controllers/transact-admin-settings-menu.php:32
  - STORAGE call to set_transient(SETTING_VALIDATION_TRANSIENT, $options["account_valid"], 0) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
admin/controllers/transact-admin-settings-menu.php:35
  - STORAGE call to set_transient(SETTING_VALIDATION_SUBSCRIPTION_TRANSIENT, $options["subscription_settings_valid"], 0) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
admin/controllers/transact-admin-settings-menu.php:867
  - STORAGE call to set_transient(SETTING_VALIDATION_TRANSIENT, 1, 0) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
admin/controllers/transact-admin-settings-menu.php:870
  - STORAGE call to set_transient(SETTING_VALIDATION_TRANSIENT, 0, 0) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
admin/controllers/transact-admin-settings-menu.php:888
  - STORAGE call to set_transient(SETTING_VALIDATION_SUBSCRIPTION_TRANSIENT, 1, 0) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
admin/controllers/transact-admin-settings-menu.php:891
  - STORAGE call to set_transient(SETTING_VALIDATION_SUBSCRIPTION_TRANSIENT, 0, 0) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
admin/controllers/transact-admin-settings-menu.php:897
  - STORAGE call to set_transient(SETTING_VALIDATION_SUBSCRIPTION_TRANSIENT, 1, 0) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
admin/controllers/transact-admin-settings-menu.php:907
  - STORAGE call to update_option("transact_validation", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/controllers/transact-admin-settings-menu.php:913
  - STORAGE call to update_option("transact_validation", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/controllers/transact-admin-settings-post.php:127
  - STORAGE call to update_post_meta($post_id, "transact_item_code", $transact_item_code) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/controllers/transact-admin-settings-post.php:137
  - STORAGE call to update_post_meta($post_id, "transact_price", $price * 100) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/controllers/transact-admin-settings-post.php:144
  - STORAGE call to update_post_meta($post_id, "transact_premium_content", $content) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/controllers/transact-admin-settings-post.php:149
  - STORAGE call to update_post_meta($post_id, "transact_display_button", $display_button) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/controllers/transact-admin-settings-post.php:153
  - STORAGE call to update_post_meta($post_id, "transact_donations", 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/controllers/transact-admin-settings-post.php:155
  - STORAGE call to update_post_meta($post_id, "transact_display_button", Transact\\Models\\TransactPostButtonTypes::"PURCHASE_AND_SUBSCRIPTION") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/controllers/transact-admin-settings-post.php:157
  - STORAGE call to update_post_meta($post_id, "transact_donations", 0) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin/controllers/transact-admin-settings-post.php:162
  - STORAGE call to update_post_meta($post_id, "transact_redirect_after_donation", $redirect_after_donation) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
frontend/controllers/account_meta.php:54
  - STORAGE call to wp_insert_user(["user_login" => $username, "user_pass" => bin2hex($bytes), "user_email" => $email, "display_name" => $user_display_name, "nickname" => $user_display_name]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
frontend/controllers/account_meta.php:68
  - STORAGE call to wp_update_user(["ID" => $wp_userid, "display_name" => $user_display_name, "nickname" => $user_display_name]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
frontend/controllers/account_meta.php:172
  - STORAGE call to update_user_meta($user_id, self::"SUBSCRIPTION_INFO_META", $update_subscription_info) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
frontend/controllers/account_meta.php:186
  - STORAGE call to delete_user_meta($user_id, self::"SUBSCRIPTION_INFO_META") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
frontend/controllers/account_meta.php:236
  - STORAGE call to update_user_meta($user_id, self::"SUBSCRIPTION_INFO_META", $new_subscription_info) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
frontend/controllers/account_meta.php:242
  - STORAGE call to add_user_meta($user_id, self::"SUBSCRIPTION_INFO_META", $new_subscription_info) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta
frontend/controllers/account_meta.php:279
  - STORAGE call to update_user_meta($user_id, $meta_key, $new_purchase_info) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
frontend/controllers/account_meta.php:285
  - STORAGE call to add_user_meta($user_id, $meta_key, $new_purchase_info) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta
frontend/controllers/account_meta.php:302
  - STORAGE call to update_user_meta($wp_userid, self::"XSACT_USER_ID_META", intval($xsact_id)) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
uninstall.php:8
  - STORAGE call to delete_transient(SETTING_VALIDATION_TRANSIENT) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).
  - Data types: site 

admin/controllers/transact-api.php:99
  - CRYPTOGRAPHY call to hash_hmac("sha256", "test", $secret).
vendors/transact-io-php/vendor/firebase/php-jwt/src/JWT.php:193
  - CRYPTOGRAPHY call to hash_hmac($algorithm, $msg, $key, true).
vendors/transact-io-php/vendor/firebase/php-jwt/src/JWT.php:235
  - CRYPTOGRAPHY call to hash_hmac($algorithm, $msg, $key, true).
vendors/transact-io-php/vendor/firebase/php-jwt/src/JWT.php:237
  - CRYPTOGRAPHY call to hash_equals($signature, $hash). Passed arguments: 0: $a (string), 1: $b (string). Returns (bool). 

frontend/controllers/account_meta.php:186
  - DELETION call to delete_user_meta($user_id, self::"SUBSCRIPTION_INFO_META") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta 

uninstall.php:8
  - Uninstall deletion call: DELETION call to delete_transient(SETTING_VALIDATION_TRANSIENT) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).
  - Data types: site 

By data type:
email
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
first_name
	PropertyDetector.(unknown) - {'first_name'}
	PropertyDetector.(unknown) - {'first_name'}
none
	WordPressRetrievalDetector.dbDelta($sql) - set()
	WordPressRetrievalDetector.dbDelta($sql) - set()
	WordPressRetrievalDetector.dbDelta($query) - set()
	HashDetector.(unknown) - set()
	WordPressRetrievalDetector.dbDelta($query) - set()
	HashDetector.(unknown) - set()
	GenericEncryptionDetector.hash_hmac($algorithm, $msg, $key, true) - set()
	GenericEncryptionDetector.hash_equals($signature, $hash) - set()
	GenericEncryptionDetector.hash_hmac("sha256", "test", $secret) - set()
	HashDetector.(unknown) - set()
	GenericEncryptionDetector.hash_hmac($algorithm, $msg, $key, true) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
option
	WordPressRetrievalDetector.get_option("transact-settings") - {'option'}
	WordPressRetrievalDetector.get_option("transact-settings") - {'option'}
	WordPressRetrievalDetector.get_option("transact-settings") - {'option'}
	WordPressRetrievalDetector.get_option("transact-settings") - {'option'}
	WordPressRetrievalDetector.get_option("transact-settings") - {'option'}
	WordPressRetrievalDetector.get_option("transact-settings") - {'option'}
	WordPressRetrievalDetector.get_option("transact-settings") - {'option'}
	WordPressRetrievalDetector.get_option("transact-settings") - {'option'}
	WordPressRetrievalDetector.get_option("transact-settings") - {'option'}
	WordPressRetrievalDetector.get_option("transact_validation") - {'option'}
	WordPressRetrievalDetector.get_option("transact-settings") - {'option'}
	WordPressRetrievalDetector.get_option("transact_validation") - {'option'}
	WordPressRetrievalDetector.get_option("transact-settings") - {'option'}
	WordPressRetrievalDetector.get_option("transact-settings") - {'option'}
	WordPressStorageDetector.update_option("transact_validation", $options) - {'option'}
	WordPressRetrievalDetector.get_option("transact_validation") - {'option'}
	WordPressRetrievalDetector.get_option("transact-settings") - {'option'}
	WordPressRetrievalDetector.get_option("transact-settings") - {'option'}
	WordPressRetrievalDetector.get_option("transact-settings") - {'option'}
	WordPressRetrievalDetector.get_option("transact-settings") - {'option'}
	WordPressRetrievalDetector.get_option("transact-settings") - {'option'}
	WordPressRetrievalDetector.get_option("transact-settings") - {'option'}
	WordPressRetrievalDetector.get_option("transact-settings") - {'option'}
	WordPressRetrievalDetector.get_option("transact_validation") - {'option'}
	WordPressRetrievalDetector.get_option("transact-settings") - {'option'}
	WordPressRetrievalDetector.get_option("transact-settings") - {'option'}
	WordPressRetrievalDetector.get_option("transact-settings") - {'option'}
	WordPressRetrievalDetector.get_option("transact-settings") - {'option'}
	WordPressRetrievalDetector.get_option("transact-settings") - {'option'}
	WordPressRetrievalDetector.get_option("transact-settings") - {'option'}
	WordPressRetrievalDetector.get_option("transact-settings") - {'option'}
	WordPressRetrievalDetector.get_option("transact-settings") - {'option'}
	WordPressRetrievalDetector.get_option("transact-settings") - {'option'}
	WordPressRetrievalDetector.get_option("transact-settings") - {'option'}
	WordPressStorageDetector.update_option("transact_validation", $options) - {'option'}
	WordPressRetrievalDetector.get_option("transact-settings") - {'option'}
post
	WordPressRetrievalDetector.get_post($this->post_id) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post($post_id) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post($post_id) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post($this->post_id) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post($post_id) - {'wp_post', 'post_meta', 'post'}
post_meta
	WordPressStorageDetector.update_post_meta($post_id, "transact_display_button", Transact\\Models\\TransactPostButtonTypes::"PURCHASE_AND_SUBSCRIPTION") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "transact_donations", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "transact_price", $price * 100) - {'post_meta'}
	WordPressRetrievalDetector.get_post($this->post_id) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post_meta($this->post_id, "transact_item_code", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "transact_redirect_after_donation", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'wp_post', 'post_meta', 'post'}
	WordPressStorageDetector.update_post_meta($post_id, "transact_redirect_after_donation", $redirect_after_donation) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "transact_display_button", $display_button) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "transact_item_code", $transact_item_code) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($this->post_id, "transact_display_button", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($this->post_id, "transact_price", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_object->ID, "transact_display_button", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "transact_premium_content", $content) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "transact_donations", 0) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($this->post_id, "transact_donations", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "transact_donations", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "transact_display_button", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($this->post_id, "transact_premium_comments", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "transact_item_code", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post_meta($post_id, "transact_redirect_after_donation", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($this->post_id, "transact_display_button", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($this->post_id) - {'wp_post', 'post_meta', 'post'}
	WordPressStorageDetector.update_post_meta($post_id, "transact_donations", 1) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($this->post_id, "transact_price", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($this->post_id, "transact_price", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($this->post_id, "transact_item_code", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post_meta($post_id, "transact_item_code") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id$post_id$this->post_id, "transact_price", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($this->post_id, "transact_premium_content", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "transact_premium_content", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($this->post_id, "transact_price", true) - {'post_meta'}
remote
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
site
	WordPressRetrievalDetector.get_transient(SETTING_VALIDATION_TRANSIENT) - {'site'}
	WordPressStorageDetector.set_transient(SETTING_VALIDATION_TRANSIENT, $options["account_valid"], 0) - {'site'}
	WordPressRetrievalDetector.get_transient(SETTING_VALIDATION_TRANSIENT) - {'site'}
	WordPressStorageDetector.set_transient(SETTING_VALIDATION_TRANSIENT, 1, 0) - {'site'}
	WordPressStorageDetector.set_transient(SETTING_VALIDATION_SUBSCRIPTION_TRANSIENT, 0, 0) - {'site'}
	WordPressStorageDetector.set_transient(SETTING_VALIDATION_TRANSIENT, 0, 0) - {'site'}
	WordPressStorageDetector.set_transient(SETTING_VALIDATION_SUBSCRIPTION_TRANSIENT, $options["subscription_settings_valid"], 0) - {'site'}
	WordPressStorageDetector.set_transient(SETTING_VALIDATION_SUBSCRIPTION_TRANSIENT, 1, 0) - {'site'}
	WordPressStorageDetector.delete_transient(SETTING_VALIDATION_TRANSIENT) - {'site'}
	WordPressStorageDetector.set_transient(SETTING_VALIDATION_SUBSCRIPTION_TRANSIENT, 1, 0) - {'site'}
	WordPressRetrievalDetector.get_transient(SETTING_VALIDATION_TRANSIENT) - {'site'}
	UninstallDetector.delete_transient(SETTING_VALIDATION_TRANSIENT) - {'site'}
	WordPressRetrievalDetector.get_transient(SETTING_VALIDATION_SUBSCRIPTION_TRANSIENT) - {'site'}
state
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
user
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.wp_insert_user(["user_login" => $username, "user_pass" => bin2hex($bytes), "user_email" => $email, "display_name" => $user_display_name, "nickname" => $user_display_name]) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $email) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_update_user(["ID" => $wp_userid, "display_name" => $user_display_name, "nickname" => $user_display_name]) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", $username) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.wp_update_user(["ID" => $wp_userid, "display_name" => $user_display_name, "nickname" => $user_display_name]) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
user_meta
	VariableDetector.(unknown) - {'user', 'user_meta'}
	DeletionDetector.delete_user_meta($user_id, self::"SUBSCRIPTION_INFO_META") - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id, $meta_key, true) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id, self::"SUBSCRIPTION_INFO_META", true) - {'user_meta'}
	WordPressRetrievalDetector.get_the_author_meta("nickname", $post_object->post_author) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id, self::"SUBSCRIPTION_INFO_META", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id, $meta_key, true) - {'user_meta'}
	WordPressRetrievalDetector.wp_set_current_user($wp_userid) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($wp_userid, self::"XSACT_USER_ID_META", intval($xsact_id)) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, self::"SUBSCRIPTION_INFO_META", $update_subscription_info) - {'user_meta'}
	WordPressStorageDetector.wp_insert_user(["user_login" => $username, "user_pass" => bin2hex($bytes), "user_email" => $email, "display_name" => $user_display_name, "nickname" => $user_display_name]) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressStorageDetector.add_user_meta($user_id, self::"SUBSCRIPTION_INFO_META", $new_subscription_info) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $email) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id, self::"SUBSCRIPTION_INFO_META", true) - {'user_meta'}
	WordPressRetrievalDetector.wp_set_current_user($wp_userid) - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id, self::"XSACT_USER_ID_META", true) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_set_current_user($wp_userid) - {'user_meta'}
	WordPressStorageDetector.delete_user_meta($user_id, self::"SUBSCRIPTION_INFO_META") - {'user_meta'}
	WordpressHashingFnDetector.wp_update_user(["ID" => $wp_userid, "display_name" => $user_display_name, "nickname" => $user_display_name]) - {'user', 'user_meta'}
	WordPressStorageDetector.add_user_meta($user_id, $meta_key, $new_purchase_info) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, $meta_key, $new_purchase_info) - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("login", $username) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.wp_update_user(["ID" => $wp_userid, "display_name" => $user_display_name, "nickname" => $user_display_name]) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, self::"SUBSCRIPTION_INFO_META", $new_subscription_info) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
wp_post
	WordPressRetrievalDetector.get_post($this->post_id) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post($post_id) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post($post_id) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post($this->post_id) - {'wp_post', 'post_meta', 'post'}
	WordPressRetrievalDetector.get_post($post_id) - {'wp_post', 'post_meta', 'post'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:23.671149.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 461 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.686447.

!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 5584
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 5684
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 6148
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 6297
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 12578
461 STORE_REACHES edges created
461 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 242 nodes as PERSONAL
In total, tainted 242 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 242 nodes as ENCRYPTED
In total, tainted 242 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:15.251499.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:02:10.687606!
DELETION call to delete_user_meta($user_id, self::"SUBSCRIPTION_INFO_META") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
CRYPTOGRAPHY call to hash_hmac("sha256", "test", $secret).,None,None
CRYPTOGRAPHY call to hash_hmac($algorithm, $msg, $key, true).,None,None
CRYPTOGRAPHY call to hash_hmac($algorithm, $msg, $key, true).,None,None
CRYPTOGRAPHY call to hash_equals($signature, $hash). Passed arguments: 0: $a (string), 1: $b (string). Returns (bool).,None,None
hash_hmac called with approved hash algorithm sha256.,sha256,None
hash_hmac called with unknown hash algorithm.,None,None
hash_hmac called with unknown hash algorithm.,None,None
MD5 called with parameters [time, post_id]. Ignore if [time, post_id] does not contain personal information.,md5,None
MD5 called with parameters [item_id, this, true, uniqid]. Ignore if [item_id, this, true, uniqid] does not contain personal information.,md5,None
object property '$profile->email1' of personal types {'email'} is found.,,None
object property '$profile->first_name' of personal types {'first_name'} is found.,,None
object property '$profile->first_name' of personal types {'first_name'} is found.,,None
Uninstall deletion call: DELETION call to delete_transient(SETTING_VALIDATION_TRANSIENT) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).,None,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$user_display_name' of personal types {'user', 'user_meta'} is found.,,None
variable '$user_display_name' of personal types {'user', 'user_meta'} is found.,,None
variable '$user_display_name' of personal types {'user', 'user_meta'} is found.,,None
variable '$user_display_name' of personal types {'user', 'user_meta'} is found.,,None
variable '$user_display_name' of personal types {'user', 'user_meta'} is found.,,None
variable '$oauth_state' of personal types {'state'} is found.,,None
variable '$oauth_state' of personal types {'state'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$user_display_name' of personal types {'user', 'user_meta'} is found.,,None
variable '$user_display_name' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$user_display_name' of personal types {'user', 'user_meta'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$user_display_name' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$user_display_name' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
API call to wp_remote_get($url). Passed arguments: 0: $url (string). Returns (array|WP_Error).,https,[]
API call to wp_remote_get($url). Passed arguments: 0: $url (string). Returns (array|WP_Error).,https,[]
API call to wp_remote_get($url, ["headers" => ["Secret" => $secret, "Referer" => $referer_uri]]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_post($oauth_token_url, $oauth_token_data). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_get($user_profile_url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to get_option("transact_validation") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("transact_validation") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("transact_validation") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "transact_item_code") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_transient(SETTING_VALIDATION_TRANSIENT) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "transact_item_code", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "transact_premium_content", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "transact_display_button", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "transact_donations", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "transact_redirect_after_donation", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id$post_id$this->post_id, "transact_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($this->post_id, "transact_item_code", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_transient(SETTING_VALIDATION_TRANSIENT) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_transient(SETTING_VALIDATION_SUBSCRIPTION_TRANSIENT) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_transient(SETTING_VALIDATION_TRANSIENT) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_user_meta($user_id, self::"SUBSCRIPTION_INFO_META", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user_id, self::"XSACT_USER_ID_META", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user_id, $meta_key, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_user_meta($user_id, self::"SUBSCRIPTION_INFO_META", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_user_meta($user_id, self::"SUBSCRIPTION_INFO_META", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user_id, $meta_key, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_by("login", $username) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_by("email", $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_post_meta($this->post_id, "transact_premium_content", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($this->post_id, "transact_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($this->post_id, "transact_display_button", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($this->post_id, "transact_donations", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($this->post_id, "transact_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($this->post_id, "transact_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("transact_validation") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($this->post_id, "transact_item_code", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($post_id) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($this->post_id, "transact_premium_comments", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_object->ID, "transact_display_button", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_set_current_user($wp_userid) alters data types {'user_meta'}. Passed arguments: 0: $id (int). Returns (WP_User).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to wp_set_current_user($wp_userid) alters data types {'user_meta'}. Passed arguments: 0: $id (int). Returns (WP_User).,None,None
RETRIEVAL call to get_post($post_id) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($post_id) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($this->post_id) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_the_author_meta("nickname", $post_object->post_author) alters data types {'user_meta'}. Passed arguments: 1: $user_id (int|false), 0: $field (string). Returns (string).,None,None
RETRIEVAL call to wp_set_current_user($wp_userid) alters data types {'user_meta'}. Passed arguments: 0: $id (int). Returns (WP_User).,None,None
RETRIEVAL call to get_post_meta($this->post_id, "transact_display_button", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($this->post_id) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($this->post_id, "transact_price", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "transact_donations", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "transact_redirect_after_donation", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to dbDelta($query). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to dbDelta($query). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("transact-settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
STORAGE call to set_transient(SETTING_VALIDATION_TRANSIENT, $options["account_valid"], 0) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to set_transient(SETTING_VALIDATION_SUBSCRIPTION_TRANSIENT, $options["subscription_settings_valid"], 0) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to set_transient(SETTING_VALIDATION_TRANSIENT, 1, 0) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to set_transient(SETTING_VALIDATION_TRANSIENT, 0, 0) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to set_transient(SETTING_VALIDATION_SUBSCRIPTION_TRANSIENT, 1, 0) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to set_transient(SETTING_VALIDATION_SUBSCRIPTION_TRANSIENT, 0, 0) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to set_transient(SETTING_VALIDATION_SUBSCRIPTION_TRANSIENT, 1, 0) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to update_option("transact_validation", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("transact_validation", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, "transact_item_code", $transact_item_code) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "transact_price", $price * 100) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "transact_premium_content", $content) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "transact_display_button", $display_button) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "transact_donations", 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "transact_display_button", Transact\\Models\\TransactPostButtonTypes::"PURCHASE_AND_SUBSCRIPTION") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "transact_donations", 0) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "transact_redirect_after_donation", $redirect_after_donation) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, self::"SUBSCRIPTION_INFO_META", $update_subscription_info) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_user_meta($user_id, self::"SUBSCRIPTION_INFO_META") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_user_meta($user_id, self::"SUBSCRIPTION_INFO_META", $new_subscription_info) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to add_user_meta($user_id, self::"SUBSCRIPTION_INFO_META", $new_subscription_info) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to update_user_meta($user_id, $meta_key, $new_purchase_info) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to add_user_meta($user_id, $meta_key, $new_purchase_info) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to update_user_meta($wp_userid, self::"XSACT_USER_ID_META", intval($xsact_id)) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_insert_user(["user_login" => $username, "user_pass" => bin2hex($bytes), "user_email" => $email, "display_name" => $user_display_name, "nickname" => $user_display_name]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,None,None
STORAGE call to wp_update_user(["ID" => $wp_userid, "display_name" => $user_display_name, "nickname" => $user_display_name]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,None,None
STORAGE call to delete_transient(SETTING_VALIDATION_TRANSIENT) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).,None,None
CRYPTOGRAPHY call to wp_update_user(["ID" => $wp_userid, "display_name" => $user_display_name, "nickname" => $user_display_name]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,hash,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] PII of types (['user', 'first_name', 'user_meta', 'email']) stored through WordPress function "update_user_meta($wp_userid, self::"XSACT_USER_ID_META", intval($xsact_id))", found in file frontend/controllers/account_meta.php at line 302. 

[has_storage] PII of types (['user', 'first_name', 'user_meta', 'email']) stored through WordPress function "update_user_meta($user_id, self::"SUBSCRIPTION_INFO_META", $update_subscription_info)", found in file frontend/controllers/account_meta.php at line 172. 

[has_storage] WP User info of types (['user', 'first_name', 'user_meta', 'email']) stored through WordPress function "wp_insert_user(["user_login" => $username, "user_pass" => bin2hex($bytes), "user_email" => $email, "display_name" => $user_display_name, "nickname" => $user_display_name])", found in file frontend/controllers/account_meta.php at line 54. 

[has_storage] PII of types (['user', 'first_name', 'user_meta', 'email']) stored through WordPress function "add_user_meta($user_id, self::"SUBSCRIPTION_INFO_META", $new_subscription_info)", found in file frontend/controllers/account_meta.php at line 242. 

[has_storage] PII of types (['user', 'first_name', 'user_meta', 'email']) stored through WordPress function "add_user_meta($user_id, $meta_key, $new_purchase_info)", found in file frontend/controllers/account_meta.php at line 285. 

[has_storage] PII of types (['user', 'first_name', 'user_meta', 'email']) stored through WordPress function "update_user_meta($user_id, $meta_key, $new_purchase_info)", found in file frontend/controllers/account_meta.php at line 279. 

[has_storage] WP User info of types (['user', 'first_name', 'user_meta', 'email']) stored through WordPress function "wp_update_user(["ID" => $wp_userid, "display_name" => $user_display_name, "nickname" => $user_display_name])", found in file frontend/controllers/account_meta.php at line 68. 

[has_storage] PII of types (['user', 'first_name', 'user_meta', 'email']) stored through WordPress function "update_user_meta($user_id, self::"SUBSCRIPTION_INFO_META", $new_subscription_info)", found in file frontend/controllers/account_meta.php at line 236. 

[has_storage] Storage check is WP 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($wp_userid, self::"XSACT_USER_ID_META", intval($xsact_id)) does not have corresponding deletion method. Storage method found in file frontend/controllers/account_meta.php at line 302. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, self::"SUBSCRIPTION_INFO_META", $update_subscription_info) has deletion method delete_user_meta($user_id, self::"SUBSCRIPTION_INFO_META"). Storage method found in file frontend/controllers/account_meta.php at line 172. Deletion method found in file frontend/controllers/account_meta.php at line 186. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, self::"SUBSCRIPTION_INFO_META", $new_subscription_info) has deletion method delete_user_meta($user_id, self::"SUBSCRIPTION_INFO_META"). Storage method found in file frontend/controllers/account_meta.php at line 242. Deletion method found in file frontend/controllers/account_meta.php at line 186. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, $meta_key, $new_purchase_info) does not have corresponding deletion method. Storage method found in file frontend/controllers/account_meta.php at line 285. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, $meta_key, $new_purchase_info) does not have corresponding deletion method. Storage method found in file frontend/controllers/account_meta.php at line 279. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, self::"SUBSCRIPTION_INFO_META", $new_subscription_info) has deletion method delete_user_meta($user_id, self::"SUBSCRIPTION_INFO_META"). Storage method found in file frontend/controllers/account_meta.php at line 236. Deletion method found in file frontend/controllers/account_meta.php at line 186. 

[Art.17, Right to erasure] Deletion access is NONE 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 6423. Found in file frontend/controllers/account_meta.php at line 302 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 5967. Found in file frontend/controllers/account_meta.php at line 172 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 6238. Found in file frontend/controllers/account_meta.php at line 242 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 6387. Found in file frontend/controllers/account_meta.php at line 285 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 6374. Found in file frontend/controllers/account_meta.php at line 279 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 6223. Found in file frontend/controllers/account_meta.php at line 236 

[Art.15, Right to access] Data access is NONE_BUT_NOT_REQUIRED 

[third_party] Third party usage is NONE for data types [] 

[encryption] API call that sends PII to unknown url uses unknown protocol. PII is securely encrypted with ['hash']. Found in file frontend/controllers/transact-api.php at line 394 

[main] Applicable GDPR requirements: ['access', 'deletion', 'encryption', 'third_party'] 

[main] Is deletion in violation? True 

[main] Is access in violation? False 

[main] Is third_party in violation? False 

[main] Is encryption in violation? True 

[main] Complaint? False 


###########
### Q&A ###
###########

1. Why is my plugin in violation against GDPR?

GDPR (https://gdpr-info.eu/) aims to give citizens in the European Union (EU) control over their personal data. If a website collects or store user data, it is required to provide users functionalities to control their data, such as ones to erase or export their data. While a plugin do not directly interact with users, it may provide functionalities that collect or store personal data, which would make websites that deploy the plugin in violation against GDPR if the plugin does not provide corresponding functionalities to allow users control their personal data. Therefore, plugin developers are responsible to provide functions to manage the personal data they handle in accordance with GDPR. We list requirements by specific GDPR articles relevant to your plugin below.


[Art. 13, Information to be provided where personal data are collected from the data subject] If a plugin collects or handles personal data, it needs to provide privacy policy texts that explain what personal data is being collected and for what purpose. The texts are meant to be added to the privacy policy of the websites that deploy the plugin. 


            
[Art.17, Right to erasure] If a plugin stores personal data in a custom database they create or manage, or through Wordpress's native storage functions (e.g., update_user_meta), it needs to provide methods for users to erase the data upon request. Note that deleting data for all users upon uninstallation does not satisfy the requirement. 


            
        

2. How do I make my plugin compliant?

Please refer to the fix report below to see how you can make your plugin comply with GDPR.

        

##################
### Fix Report ###
##################

############################
# Data Deletion Fix Report #
############################

This report suggests fixes to comply with the GDPR Art. 17, Right to erasure (https://gdpr-info.eu/art-17-gdpr/). The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/adding-the-personal-data-eraser-to-your-plugin/ for more details.

1) Implement a function that deletes all the user data collected in the plugin. Sample code:


/**
* Removes all collected data of a user.
*
* @param string $email_address   email address to manipulate
* @param int    $page            pagination
*
* @return array
*/
function transact_remove_data( $email_address, $page = 1 ) {
    
    $page = (int) $page;


    //TODO: Delete the user data that was stored using Wordpress functions

    //Below is the sample code for deleting user meta and may need to be modified to suit the plugin.
    $user_id = get_user_by('email', $email_address)
    $key = 'email' //Sample user meta key
    if ( $customer->user_id > 0 ) {
        //Delete user meta data by $key
        delete_user_meta( $user_id, $key );
    }
        



    // Tell core if we have more data to delete still
    $done = true;
    return array(
        'items_removed'  => $items_removed, // true if collected data of a user is being deleted
        'items_retained' => $items_retained, // true if certain data needs to be retained
        'messages'       => sprintf( __( 'Data of user with email %s successfully deleted.', 'transact' ), $email_address ), // Put messages for data removal
        'done'           => $done, // true if all the removal processes are done (all data of the user is removed)
    );
}
        

2) Hook the deletion function to the Wordpress's Personal Data Removal tool


/**
* Registers all data erasers.
*
* @param array $exporters
*
* @return mixed
*/
function transact_register_privacy_erasers( $erasers ) {
    $erasers['my-plugin-slug'] = array(
        'eraser_friendly_name' => __( '<eraser name>', 'transact' ),
        'callback'             => 'transact_remove_data',
    );
    return $erasers;
}
        

add_filter( 'wp_privacy_personal_data_erasers', 'transact_register_privacy_erasers' );
        

        

#############################
# Privacy Policy Fix Report #
#############################

This report suggests fixes to comply with the GDPR Art. 13 (https://gdpr-info.eu/art-13-gdpr/) through including a privacy notice. The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/suggesting-text-for-the-site-privacy-policy/ for more details.

1) Implement a function that includes the privacy policy for the plugin and provide it to wordpress through wp_add_privacy_policy_content(). Sample code:


/**
* Adds a privacy policy statement.
*/
function transact_add_privacy_policy_content() {
    if ( ! function_exists( 'wp_add_privacy_policy_content' ) ) {
        return;
    }
    //TODO: modify the content below to include the privacy policy for the plugin.
    $content = '<p class="privacy-policy-tutorial">' . __( 'Some introductory content for the suggested text.', 'transact' ) . '</p>'
            . '<strong class="privacy-policy-tutorial">' . __( 'Suggested Text:', 'transact' ) . '</strong> '
            . sprintf(
                __( 'When you leave a comment on this site, we send your name, email address, IP address and comment text to example.com. Example.com does not retain your personal data. The example.com privacy policy is <a href="%1$s" target="_blank">here</a>.', 'transact' ),
                'https://example.com/privacy-policy'
            );
    wp_add_privacy_policy_content( 'transact', wp_kses_post( wpautop( $content, false ) ) );
}
        

2) Hook the privacy policy function to the Wordpress's admin initialization action.


add_action( 'admin_init', 'transact_add_privacy_policy_content' );
        

        


Disclaimer: The sample code provided above is only for reference and does not guarantee GDPR compliance. The recommended list of data to delete/export may not be comprehensive. 
        
Done.
