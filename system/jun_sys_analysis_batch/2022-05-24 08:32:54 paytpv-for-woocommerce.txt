Timeout in resolving values
Timeout in running neo4j query
Running Main.py on paytpv-for-woocommerce

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:01.074965.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.441405.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 6 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.448411.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 1 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.596648.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 1631 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:01.453257.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 53 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:01.638916.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.078312.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 925 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:19.946908.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 13090
Added 10474 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 18979
Added 5889 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:02.528212.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/paytpv-for-woocommerce/gateway-paytpv.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/paytpv-for-woocommerce/paytpv.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/paytpv-for-woocommerce/inc/dependencies.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/paytpv-for-woocommerce/inc/PaycometApiRest.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/paytpv-for-woocommerce/inc/paycomet-apm.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/paytpv-for-woocommerce/inc/paycomet-bancontact.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/paytpv-for-woocommerce/inc/paycomet-beeline.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/paytpv-for-woocommerce/inc/paycomet-bizum.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/paytpv-for-woocommerce/inc/paycomet-eps.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/paytpv-for-woocommerce/inc/paycomet-giropay.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/paytpv-for-woocommerce/inc/paycomet-ideal.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/paytpv-for-woocommerce/inc/paycomet-instantcredit.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/paytpv-for-woocommerce/inc/paycomet-klarna.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/paytpv-for-woocommerce/inc/paycomet-mts.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/paytpv-for-woocommerce/inc/paycomet-multibanco.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/paytpv-for-woocommerce/inc/paycomet-mybank.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/paytpv-for-woocommerce/inc/paycomet-paysafecard.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/paytpv-for-woocommerce/inc/paycomet-paysera.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/paytpv-for-woocommerce/inc/paycomet-postfinance.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/paytpv-for-woocommerce/inc/paycomet-przelewy.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/paytpv-for-woocommerce/inc/paycomet-qiwi.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/paytpv-for-woocommerce/inc/paycomet-skrill.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/paytpv-for-woocommerce/inc/paycomet-tele2.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/paytpv-for-woocommerce/inc/paycomet-trustly.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/paytpv-for-woocommerce/inc/paycomet-webmoney.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/paytpv-for-woocommerce/inc/paycomet-yandex.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/paytpv-for-woocommerce/inc/PaytpvApi.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/paytpv-for-woocommerce/inc/upgrade.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/paytpv-for-woocommerce/inc/woocommerce-paytpv.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/paytpv-for-woocommerce/template/checkout/jetiframe-checkout.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/paytpv-for-woocommerce/template/myaccount/conditions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/paytpv-for-woocommerce/template/myaccount/my-cards.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:02.648410.

6 PHP_REACHES edges created
1 REACHES edges created
1000 PHP_REACHES edges created
1631 PHP_REACHES edges created
53 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
11399 PHP_REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
5889 PHP_REACHES edges created
18979 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 4481 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.314824.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 21 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:15.084247.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 317 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:08.668491.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 197 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.164387.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:06.299928.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:03.663886.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.040237.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.031807.

21 CALLS edges created
514 PHP_REACHES edges created
535 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 452 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.166877.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
12 SQL operations to process.
CREATE TABLE $wpdbpaytpv_customer (
		`id` INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,
		`paytpv_iduser` INT(11) UNSIGNED NOT NULL,
		`paytpv_tokenuser` VARCHAR(64) NOT NULL,
		`paytpv_cc` VARCHAR(32) NOT NULL,
		`paytpv_brand` VARCHAR(32) NULL DEFAULT NULL,
		`id_customer` INT(10) UNSIGNED NOT NULL,
		`date` DATETIME NOT NULL,
		`card_desc` VARCHAR(32) NULL DEFAULT NULL,
		PRIMARY KEY (`id`)
		) $wpdb->get_charset_collate();
SQL command (CREATE TABLE $wpdbpaytpv_customer ( `id` INT(11) UNSIGNED NOT NULL AUTO_INCREMENT, `paytpv_iduser` INT(11) UNSIGNED NOT NULL, `paytpv_tokenuser` VARCHAR(64) NOT NULL, `paytpv_cc` VARCHAR(32) NOT NULL, `paytpv_brand` VARCHAR(32) NULL DEFAULT NULL, `id_customer` INT(10) UNSIGNED NOT NULL, `date` DATETIME NOT NULL, `card_desc` VARCHAR(32) NULL DEFAULT NULL, PRIMARY KEY (`id`) ) $wpdb->get_charset_collate();) cannot be parsed correct.
SELECT count(*) as num_orders FROM $wpdb
						WHERE post_type = 'shop_order'
						AND post_author = $id_customer
						AND post_status IN ('implode("\',\'", ["wc-processing", "wc-completed", "wc-pending"])')
						AND post_date > '$date_now->format("Y-m-d h:m:s")' -interval $interval $intervalType
SQL command (SELECT count(*) as num_orders FROM $wpdb WHERE post_type = 'shop_order' AND post_author = $id_customer AND post_status IN ('implode("\',\'", ["wc-processing", "wc-completed", "wc-pending"])') AND post_date > '$date_now->format("Y-m-d h:m:s")' -interval $interval $intervalType) cannot be parsed correct.
SELECT * FROM $wpdb p INNER JOIN $wpdb pm on p.ID = pm.post_id
					WHERE p.post_type = 'shop_order'
					AND p.post_author = $id_customer
					AND p.post_status IN ('implode("\',\'", ["wc-processing", "wc-completed"])')
					AND p.ID < $order->get_id()
					AND pm.meta_key = '_shipping_address_1' and pm.meta_value = %s
					order by p.post_date asc limit 1
SELECT * FROM $wpdb p INNER JOIN $wpdb pm on p.ID = pm.post_id
					WHERE p.post_type = 'shop_order'
					AND p.post_author = $id_customer
					AND p.post_status IN ('implode("\',\'", ["wc-processing", "wc-completed"])')
					AND p.ID < $order->get_id()
					AND pm.meta_key = '_shipping_address_1' and pm.meta_value = $order->get_shipping_address_1()
					order by p.post_date asc limit 1
SELECT * FROM $wpdb p INNER JOIN $wpdb pm on p.ID = pm.post_id
					WHERE p.post_type = 'shop_order'
					AND p.post_author = $id_customer
					AND p.post_status IN ('implode("\',\'", ["wc-processing", "wc-completed"])')
					AND p.ID < $order->get_id()
					AND pm.meta_key = '_shipping_address_1' and pm.meta_value = $order->get_shipping_address_1()
					order by p.post_date asc limit 1
SQL command (SELECT * FROM $wpdb p INNER JOIN $wpdb pm on p.ID = pm.post_id WHERE p.post_type = 'shop_order' AND p.post_author = $id_customer AND p.post_status IN ('implode("\',\'", ["wc-processing", "wc-completed"])') AND p.ID < $order->get_id() AND pm.meta_key = '_shipping_address_1' and pm.meta_value = $order->get_shipping_address_1() order by p.post_date asc limit 1) cannot be parsed correct.
SELECT * FROM $wpdb WHERE meta_key = PayTPV_IdUser AND meta_value = %d
SELECT * FROM $wpdb WHERE meta_key = PayTPV_IdUser AND meta_value = $paytpv_iduser
SELECT * FROM $wpdb WHERE meta_key = PayTPV_IdUser AND meta_value = $paytpv_iduser
SQL command (SELECT * FROM $wpdb WHERE meta_key = PayTPV_IdUser AND meta_value = $paytpv_iduser) cannot be parsed correct.
SELECT * FROM $wpdbpaytpv_customer WHERE id_customer>0 and id_customer = $user_id order by date desc
SQL command (SELECT * FROM $wpdbpaytpv_customer WHERE id_customer>0 and id_customer = $user_id order by date desc) cannot be parsed correct.
SELECT * FROM $wpdbpaytpv_customer WHERE id_customer = $user_id AND id = %d
SELECT * FROM $wpdbpaytpv_customer WHERE id_customer = $user_id AND id = $_POST_card
SELECT * FROM $wpdbpaytpv_customer WHERE id_customer = $user_id AND id = $_POST_card
SQL command (SELECT * FROM $wpdbpaytpv_customer WHERE id_customer = $user_id AND id = $_POST_card) cannot be parsed correct.
update $wpdbpaytpv_customer set card_desc = $card_desc WHERE id_customer = %d AND id = %d
update $wpdbpaytpv_customer set card_desc = $card_desc WHERE id_customer = get_current_user_id() AND id = %d
update $wpdbpaytpv_customer set card_desc = $card_desc WHERE id_customer = get_current_user_id() A$id_card id = %d
update $wpdbpaytpv_customer set card_desc = $card_desc WHERE id_customer = get_current_user_id() A$id_card id = %d
SQL command (update $wpdbpaytpv_customer set card_desc = $card_desc WHERE id_customer = get_current_user_id() A$id_card id = %d) cannot be parsed correct.
delete from $wpdbpaytpv_customer WHERE id_customer = get_current_user_id() AND id = %d
delete from $wpdbpaytpv_customer WHERE id_customer = get_current_user_id() AND id = $id_card
delete from $wpdbpaytpv_customer WHERE id_customer = get_current_user_id() AND id = $id_card
SQL command (delete from $wpdbpaytpv_customer WHERE id_customer = get_current_user_id() AND id = $id_card) cannot be parsed correct.
SELECT * FROM $wpdbpaytpv_customer WHERE id_customer = $_POST_Order AND paytpv_iduser = %d
SELECT * FROM $wpdbpaytpv_customer WHERE id_customer = $_POST_Order AND paytpv_iduser = $paytpv_iduser
SELECT * FROM $wpdbpaytpv_customer WHERE id_customer = $_POST_Order AND paytpv_iduser = $paytpv_iduser
SQL command (SELECT * FROM $wpdbpaytpv_customer WHERE id_customer = $_POST_Order AND paytpv_iduser = $paytpv_iduser) cannot be parsed correct.
SELECT * FROM $wpdbpaytpv_customer WHERE paytpv_brand = '$paytpv_brand' AND paytpv_cc = '************substr($paytpv_cc, -4)' AND id_customer = 'get_current_user_id()'
SQL command (SELECT * FROM $wpdbpaytpv_customer WHERE paytpv_brand = '$paytpv_brand' AND paytpv_cc = '************substr($paytpv_cc, -4)' AND id_customer = 'get_current_user_id()') cannot be parsed correct.
INSERT INTO $wpdbpaytpv_customer(paytpv_iduser, paytpv_tokenuser, paytpv_cc, paytpv_brand, id_customer, `date` )
														VALUES({"1": ["curl_init()"], "2": ["curl_init()"], "3": ["************"], "4": ["$paytpv_brand"], "5": ["get_current_user_id()"], "6": ["date(\"Y-m-d H:i:s\")"]}, %s, %s,%s, %d, %s)
None
SELECT max(paytpv_iduser) as 'max_iduser' from $wpdbpaytpv_customer WHERE paytpv_iduser<100000
SQL command (SELECT max(paytpv_iduser) as 'max_iduser' from $wpdbpaytpv_customer WHERE paytpv_iduser<100000) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [9304, 15489, 15581, 18132, 19878, 19922, 19970, 20018, 20068, 20158, 20246, 20283]
Added 0 SQL nodes. 0 out of 12 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:05.273679.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'sprintf(__("PAYCOMET Error 1004: You must define the API Key <a href="%s">here</a>.", "wc_paytpv"), $url)'' cannot be parsed correct.
HTML code '$'wpautop(wptexturize($this->description))'' cannot be parsed correct.
HTML code '$'get_option("woocommerce_paycomet_instantcredit_settings")_simulatorHash'' cannot be parsed correct.
HTML code '$'$product->get_price()'' cannot be parsed correct.
HTML code '$'$product->get_id()'' cannot be parsed correct.
HTML code '$'<div class="error"><p>You must define at least one terminal</p></div>'' cannot be parsed correct.
HTML code '$'wpautop(wptexturize($this->description))'' cannot be parsed correct.
HTML code '$'add_query_arg("tpvLstr", "notify", add_query_arg("wc-api", "woocommerce_" . $this->id, home_url("/")))'' cannot be parsed correct.
HTML code '$'<tr class="terminal">
										<td class="sort"></td>
										<td><input type="text" value="wp_unslash($terminal["term"])" name="term[]" /></td>
										<td><input class="pass" type="text" value="wp_unslash($terminal["pass"])" name="pass[]" /></td>
									'' cannot be parsed correct.
HTML code '$'<option value=$key"$selected>$val</option>'' cannot be parsed correct.
HTML code '$'<option value=$key"$selected>$val</option>'' cannot be parsed correct.
HTML code '$'<p>Thanks for your order, please fill the data below to process the payment.</p>'' cannot be parsed correct.
HTML code '$'<p>Thanks for your order, please press the button to pay.</p>'' cannot be parsed correct.
HTML code '$'$this->savedCardsHtml($order_id)'' cannot be parsed correct.
HTML code '$'$store_card'' cannot be parsed correct.
HTML code '$'$card_id'' cannot be parsed correct.
HTML code '$'$card_paytpv_cc$card_desc'' cannot be parsed correct.
HTML code '$'substr($firstYear, 2, 2)'' cannot be parsed correct.
HTML code '$'$firstYear'' cannot be parsed correct.
HTML code '$'substr($firstYear, 2, 2)'' cannot be parsed correct.
HTML code '$'$firstYear'' cannot be parsed correct.
HTML code '$'$payment_paycomet'' cannot be parsed correct.
HTML code '$'<td><select class="moneda" name="moneda[]">
										'' cannot be parsed correct.
HTML code '$'</select></td>'' cannot be parsed correct.
HTML code '$'<td><select class="dcc" name="dcc[]">'' cannot be parsed correct.
HTML code '$'</select></td>'' cannot be parsed correct.
HTML code '$'</tr>'' cannot be parsed correct.
HTML code '$'<meta http-equiv=\'refresh\' content=\'0\'>'' cannot be parsed correct.
HTML code '$'</span>
                    <input type="text" class="card_desc" maxlength="32"  id="card_desc_'' cannot be parsed correct.
HTML code '$'" name="card_desc_'' cannot be parsed correct.
HTML code '$'" value="'' cannot be parsed correct.
HTML code '$'" placeholder="'' cannot be parsed correct.
HTML code '$'">
                    <label class="button_del">
                        <a href="'' cannot be parsed correct.
HTML code '$'" class="save_desc button  button-smal renew">'' cannot be parsed correct.
HTML code '$'" class="remove_card button renew">'' cannot be parsed correct.
HTML code '$'" id="cc_'' cannot be parsed correct.
HTML code '$'" value="'' cannot be parsed correct.
HTML code '$'">
                    </label>
                    <HR/>
                </div>
           '' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</option>
            '' cannot be parsed correct.
HTML code '$'</option>
        </select>
    </div>
</div>


<div id="toHide" style="display:none;">
    <input type="hidden" data-paycomet="jetID" value="'' cannot be parsed correct.
HTML code '$'">

    <input type="hidden" class="form-control" name="username" data-paycomet="cardHolderName" placeholder="" value="NONAME" style="height:30px; width: 290px">

    <div class="row">
        <div class="form-group">
            <label for="cardNumber">'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</option>
                        '' cannot be parsed correct.
HTML code '$'<span class="paytpv-pci"> '' cannot be parsed correct.
HTML code '$'</span></label>
        </div>
    '' cannot be parsed correct.
HTML code '$'" name="paytpv" style="min-width: 320px; border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-style: initial; border-color: initial; border-image: initial; height: 360px; " marginheight="0" marginwidth="0" scrolling="no"></iframe>
            '' cannot be parsed correct.
HTML code '$'">

                    <input type="hidden" class="form-control" name="username" data-paycomet="cardHolderName" placeholder="" value="NONAME" style="height:30px; width: 290px">

                    <div class="form-group">
                        <label for="cardNumber">'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</option>
                                        '' cannot be parsed correct.
HTML code '$'">
    </div>

'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:04.209827.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.039270.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 2 do_action/apply_filters calls and 40 add_action/add_filter calls. Now connecting do-add pairs.
Added 2 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:30.000141.

2 PHP_REACHES edges created
2 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbaseDetector
### Start running FrontBaseDetector
### Finish running DbplusDetector
### Start running HashDetector
### Finish running FileProDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running FirebirdInterBaseDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running ArrayElementDetector
### Start running OpenSSLDetector
### Finish running MongoDbDetector
### Start running ParadoxDetector
### Finish running Oci8Detector
### Start running PasswordHashingDetector
### Finish running ParadoxDetector
### Start running PhpCurlDetector
### Finish running PasswordHashingDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running HashDetector
### Start running PHPRetrievalDetector
### Finish running OpenSSLDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPRetrievalDetector
### Start running PhpVarDetector
### Finish running PHPStorageDetector
### Start running PostgreSQLDetector
### Finish running PostgreSQLDetector
### Start running PropertyDetector
### Finish running PHPIncludedDetector
### Start running Sqlite3Detector
### Finish running Sqlite3Detector
### Start running SqliteDetector
### Finish running maxdbDetector
### Start running SqlServerDetector
### Finish running MySQLiDetector
### Start running SybaseDetector
### Finish running SqliteDetector
### Start running TokyoTyrantDetector
### Finish running SybaseDetector
### Start running UserInputDetector
### Finish running TokyoTyrantDetector
### Start running VariableDetector
### Finish running PropertyDetector
### Start running WordpressHashingFnDetector
### Finish running SqlServerDetector
### Start running WordPressRemoteDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRetrievalDetector
### Finish running WordPressRemoteDetector
### Start running WordPressStorageDetector
### Finish running PhpVarDetector
### Start running WP_UserDetector
### Finish running VariableDetector
### Start running GenericDatabaseUsageDetector
### Finish running UserInputDetector
### Start running GenericEncryptionDetector
### Finish running WP_UserDetector
### Start running DeletionDetector
### Finish running GenericDatabaseUsageDetector
### Start running UninstallDetector
### Finish running PhpCurlDetector
### Finish running GenericEncryptionDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running WordPressStorageDetector
### Finish running WordPressRetrievalDetector
### Finished running detectors
inc/PaytpvApi.php:16
  - hash called with approved hash algorithm sha512.
inc/PaytpvApi.php:70
  - hash called with approved hash algorithm sha512.
inc/PaytpvApi.php:96
  - hash called with approved hash algorithm sha512.
inc/woocommerce-paytpv.php:788
  - hash called with approved hash algorithm sha512.
inc/woocommerce-paytpv.php:821
  - hash called with approved hash algorithm sha512. 

inc/PaytpvApi.php:70
  - MD5 called with parameters [merchantPassword]. Ignore if [merchantPassword] does not contain personal information.
inc/PaytpvApi.php:96
  - MD5 called with parameters [merchantPassword, query, md5]. Ignore if [merchantPassword, query, md5] does not contain personal information.
inc/PaytpvApi.php:96
  - MD5 called with parameters [merchantPassword]. Ignore if [merchantPassword] does not contain personal information.
inc/woocommerce-paytpv.php:788
  - MD5 called with parameters [pass]. Ignore if [pass] does not contain personal information.
inc/woocommerce-paytpv.php:821
  - MD5 called with parameters [pass]. Ignore if [pass] does not contain personal information. 

inc/woocommerce-paytpv.php:945
  - object property '$user->user_pass' of personal types {'password'} is found.
  - Data types: password
inc/woocommerce-paytpv.php:1101
  - object property '$customer->first_name' of personal types {'first_name'} is found.
  - Data types: first_name
inc/woocommerce-paytpv.php:1102
  - object property '$customer->last_name' of personal types {'last_name'} is found.
  - Data types: last_name 

gateway-paytpv.php:157
  - RETRIEVAL call to get_option("woocommerce_paytpv_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
gateway-paytpv.php:157
  - RETRIEVAL call to get_option("woocommerce_paytpv_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
gateway-paytpv.php:158
  - RETRIEVAL call to get_option("woocommerce_paytpv_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
gateway-paytpv.php:158
  - RETRIEVAL call to get_option("woocommerce_paytpv_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/dependencies.php:8
  - RETRIEVAL call to get_option("active_plugins", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/paycomet-apm.php:15
  - RETRIEVAL call to get_option("woocommerce_paytpv_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/paycomet-apm.php:16
  - RETRIEVAL call to get_option("woocommerce_paytpv_terminals") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/paycomet-apm.php:150
  - RETRIEVAL call to get_post_meta($order->get_id(), "PayTPV_Referencia", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/paycomet-instantcredit.php:4
  - RETRIEVAL call to get_option("woocommerce_paycomet_instantcredit_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/paycomet-instantcredit.php:4
  - RETRIEVAL call to get_option("woocommerce_paycomet_instantcredit_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/paycomet-instantcredit.php:13
  - RETRIEVAL call to get_option("woocommerce_paycomet_instantcredit_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/paycomet-instantcredit.php:14
  - RETRIEVAL call to get_option("woocommerce_paycomet_instantcredit_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/paycomet-instantcredit.php:35
  - RETRIEVAL call to get_option("woocommerce_paycomet_instantcredit_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/paycomet-instantcredit.php:45
  - RETRIEVAL call to get_option("woocommerce_paycomet_instantcredit_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/paycomet-instantcredit.php:45
  - RETRIEVAL call to get_option("woocommerce_paycomet_instantcredit_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/paycomet-instantcredit.php:52
  - RETRIEVAL call to get_option("woocommerce_paycomet_instantcredit_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/paycomet-instantcredit.php:151
  - RETRIEVAL call to get_option("woocommerce_paycomet_instantcredit_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/upgrade.php:29
  - RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).
inc/woocommerce-paytpv.php:59
  - RETRIEVAL call to get_option("woocommerce_paytpv_terminals", [["term" => $this->get_option("term"), "pass" => $this->get_option("pass"), "moneda" => $this->get_option("moneda"), "dcc" => $this->get_option("dcc")]]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/woocommerce-paytpv.php:62
  - RETRIEVAL call to $this->get_option("term") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/woocommerce-paytpv.php:63
  - RETRIEVAL call to $this->get_option("pass") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/woocommerce-paytpv.php:64
  - RETRIEVAL call to $this->get_option("moneda") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/woocommerce-paytpv.php:65
  - RETRIEVAL call to $this->get_option("dcc") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/woocommerce-paytpv.php:146
  - RETRIEVAL call to get_option("woocommerce_myaccount_page_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/woocommerce-paytpv.php:147
  - RETRIEVAL call to get_option("woocommerce_myaccount_page_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/woocommerce-paytpv.php:811
  - RETRIEVAL call to get_post_meta($order->get_id(), "PayTPV_IdUser", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/woocommerce-paytpv.php:812
  - RETRIEVAL call to get_post_meta($order->get_id(), "PayTPV_TokenUser", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/woocommerce-paytpv.php:826
  - RETRIEVAL call to get_post_meta($order->get_id(), "paytpv_savecard", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/woocommerce-paytpv.php:912
  - RETRIEVAL call to get_post_meta($ref, "_customer_ip_address", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/woocommerce-paytpv.php:1055
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
inc/woocommerce-paytpv.php:1076
  - RETRIEVAL call to get_user_meta(get_current_user_id(), "last_update", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/woocommerce-paytpv.php:1079
  - RETRIEVAL call to get_user_meta(get_current_user_id(), "last_update", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/woocommerce-paytpv.php:1730
  - RETRIEVAL call to get_post_meta($parent_order->get_id(), "PayTPV_IdUser", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/woocommerce-paytpv.php:1731
  - RETRIEVAL call to get_post_meta($parent_order->get_id(), "PayTPV_TokenUser", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/woocommerce-paytpv.php:1852
  - RETRIEVAL call to get_post_meta($order->get_id(), "PayTPV_Referencia", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
paytpv.php:5
  - RETRIEVAL call to get_option("paytpv") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
paytpv.php:19
  - RETRIEVAL call to get_option("paytpv") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option 

inc/woocommerce-paytpv.php:370
  - STORAGE call to update_option("woocommerce_paytpv_terminals", $terminals) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/woocommerce-paytpv.php:756
  - STORAGE call to update_post_meta($order->get_id(), "PayTPV_IdUser", $saved_card["paytpv_iduser"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/woocommerce-paytpv.php:757
  - STORAGE call to update_post_meta($order->get_id(), "PayTPV_TokenUser", $saved_card["paytpv_tokenuser"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/woocommerce-paytpv.php:762
  - STORAGE call to update_post_meta($order->get_id(), "PayTPV_IdUser", $saved_card["paytpv_iduser"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/woocommerce-paytpv.php:763
  - STORAGE call to update_post_meta($order->get_id(), "PayTPV_TokenUser", $saved_card["paytpv_tokenuser"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/woocommerce-paytpv.php:833
  - STORAGE call to update_post_meta($order->get_id(), "PayTPV_IdUser", $idUser) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/woocommerce-paytpv.php:834
  - STORAGE call to update_post_meta($order->get_id(), "PayTPV_TokenUser", $tokenUser) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/woocommerce-paytpv.php:842
  - STORAGE call to update_post_meta($subscription->get_parent_id(), "PayTPV_IdUser", $idUser) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/woocommerce-paytpv.php:843
  - STORAGE call to update_post_meta($subscription->get_parent_id(), "PayTPV_TokenUser", $tokenUser) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/woocommerce-paytpv.php:852
  - STORAGE call to update_post_meta($order->get_id(), "PayTPV_Referencia", $_REQUEST["Order"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/woocommerce-paytpv.php:855
  - STORAGE call to update_post_meta($order->get_id(), "PayTPV_MethodName", $_REQUEST["MethodName"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/woocommerce-paytpv.php:875
  - STORAGE call to update_post_meta($order->get_id(), "paytpv_savecard", $_POST["paytpv_agree"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/woocommerce-paytpv.php:1420
  - STORAGE call to update_post_meta($order->get_id(), "paytpv_savecard", $savecard_jetiframe) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/woocommerce-paytpv.php:1421
  - STORAGE call to update_post_meta($order->get_id(), "PayTPV_IdUser", $idUser) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/woocommerce-paytpv.php:1422
  - STORAGE call to update_post_meta($order->get_id(), "PayTPV_TokenUser", $tokenUser) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/woocommerce-paytpv.php:1797
  - STORAGE call to update_post_meta($order->get_id(), "PayTPV_Referencia", $result["DS_MERCHANT_ORDER"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/woocommerce-paytpv.php:1798
  - STORAGE call to update_post_meta($order->get_id(), "_transaction_id", $result["DS_MERCHANT_AUTHCODE"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/woocommerce-paytpv.php:1799
  - STORAGE call to update_post_meta($order->get_id(), "PayTPV_IdUser", $payptv_iduser) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/woocommerce-paytpv.php:1800
  - STORAGE call to update_post_meta($order->get_id(), "PayTPV_TokenUser", $payptv_tokenuser) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
paytpv.php:22
  - STORAGE call to update_option("paytpv", $option) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option 

inc/woocommerce-paytpv.php:943
  - WP_User object is created.
  - Data types: user_meta, user 

inc/PaytpvApi.php:16
  - CRYPTOGRAPHY call to hash("sha512", $merchantCode . $idterminal . $password).
inc/PaytpvApi.php:70
  - CRYPTOGRAPHY call to hash("sha512", $merchantCode . $idUser . $tokenUser . $merchantTerminal . $operation . $merchantOrder . $merchantAmount . $merchantCurrency . md5($merchantPassword)).
inc/PaytpvApi.php:96
  - CRYPTOGRAPHY call to hash("sha512", md5($query . md5($merchantPassword))).
inc/woocommerce-paytpv.php:788
  - CRYPTOGRAPHY call to hash("sha512", $this->clientcode . $term . $_POST["TransactionType"] . $_POST["Order"] . $DateTime . md5($pass)).
inc/woocommerce-paytpv.php:821
  - CRYPTOGRAPHY call to hash("sha512", $mensaje . md5($pass) . $_REQUEST["BankDateTime"] . $_REQUEST["Response"]). 

By data type:
first_name
	PropertyDetector.(unknown) - {'first_name'}
last_name
	PropertyDetector.(unknown) - {'last_name'}
none
	GenericEncryptionDetector.hash("sha512", md5($query . md5($merchantPassword))) - set()
	PHPIncludedDetector.(unknown) - set()
	HashDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	WordPressRetrievalDetector.dbDelta($sql) - set()
	GenericEncryptionDetector.hash("sha512", $this->clientcode . $term . $_POST["TransactionType"] . $_POST["Order"] . $DateTime . md5($pass)) - set()
	PHPIncludedDetector.(unknown) - set()
	GenericEncryptionDetector.hash("sha512", $merchantCode . $idterminal . $password) - set()
	GenericEncryptionDetector.hash("sha512", $merchantCode . $idUser . $tokenUser . $merchantTerminal . $operation . $merchantOrder . $merchantAmount . $merchantCurrency . md5($merchantPassword)) - set()
	GenericEncryptionDetector.hash("sha512", $mensaje . md5($pass) . $_REQUEST["BankDateTime"] . $_REQUEST["Response"]) - set()
	HashDetector.(unknown) - set()
	HashDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	HashDetector.(unknown) - set()
	HashDetector.(unknown) - set()
option
	WordPressRetrievalDetector.get_option("woocommerce_paytpv_settings") - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_paycomet_instantcredit_settings") - {'option'}
	WordPressRetrievalDetector.$this->get_option("dcc") - {'option'}
	WordPressStorageDetector.update_option("woocommerce_paytpv_terminals", $terminals) - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_paycomet_instantcredit_settings") - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_paycomet_instantcredit_settings") - {'option'}
	WordPressRetrievalDetector.$this->get_option("pass") - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_paytpv_settings") - {'option'}
	WordPressRetrievalDetector.$this->get_option("term") - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_paytpv_settings") - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_paycomet_instantcredit_settings") - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_paycomet_instantcredit_settings") - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_paycomet_instantcredit_settings") - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_myaccount_page_id") - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_paycomet_instantcredit_settings") - {'option'}
	WordPressRetrievalDetector.get_option("paytpv") - {'option'}
	WordPressStorageDetector.update_option("paytpv", $option) - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_paytpv_terminals") - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_paytpv_settings") - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_myaccount_page_id") - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_paytpv_terminals", [["term" => $this->get_option("term"), "pass" => $this->get_option("pass"), "moneda" => $this->get_option("moneda"), "dcc" => $this->get_option("dcc")]]) - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_paycomet_instantcredit_settings") - {'option'}
	WordPressRetrievalDetector.get_option("paytpv") - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_paycomet_instantcredit_settings") - {'option'}
	WordPressRetrievalDetector.get_option("active_plugins", []) - {'option'}
	WordPressRetrievalDetector.$this->get_option("moneda") - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_paytpv_settings") - {'option'}
password
	PropertyDetector.(unknown) - {'password'}
post_meta
	WordPressStorageDetector.update_post_meta($order->get_id(), "PayTPV_TokenUser", $saved_card["paytpv_tokenuser"]) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order->get_id(), "PayTPV_Referencia", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order->get_id(), "PayTPV_IdUser", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order->get_id(), "PayTPV_IdUser", $idUser) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($subscription->get_parent_id(), "PayTPV_IdUser", $idUser) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order->get_id(), "PayTPV_TokenUser", $tokenUser) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order->get_id(), "PayTPV_TokenUser", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order->get_id(), "PayTPV_IdUser", $saved_card["paytpv_iduser"]) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order->get_id(), "_transaction_id", $result["DS_MERCHANT_AUTHCODE"]) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order->get_id(), "PayTPV_IdUser", $saved_card["paytpv_iduser"]) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order->get_id(), "paytpv_savecard", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($ref, "_customer_ip_address", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($subscription->get_parent_id(), "PayTPV_TokenUser", $tokenUser) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order->get_id(), "PayTPV_Referencia", $result["DS_MERCHANT_ORDER"]) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order->get_id(), "PayTPV_TokenUser", $tokenUser) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($parent_order->get_id(), "PayTPV_TokenUser", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order->get_id(), "PayTPV_IdUser", $idUser) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order->get_id(), "PayTPV_TokenUser", $saved_card["paytpv_tokenuser"]) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($parent_order->get_id(), "PayTPV_IdUser", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order->get_id(), "PayTPV_TokenUser", $payptv_tokenuser) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order->get_id(), "paytpv_savecard", $_POST["paytpv_agree"]) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order->get_id(), "paytpv_savecard", $savecard_jetiframe) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order->get_id(), "PayTPV_Referencia", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order->get_id(), "PayTPV_Referencia", $_REQUEST["Order"]) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order->get_id(), "PayTPV_MethodName", $_REQUEST["MethodName"]) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order->get_id(), "PayTPV_IdUser", $payptv_iduser) - {'post_meta'}
user
	WP_UserDetector.WP_User($id) - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
user_meta
	WordPressRetrievalDetector.get_user_meta(get_current_user_id(), "last_update", true) - {'user_meta'}
	WP_UserDetector.WP_User($id) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_user_meta(get_current_user_id(), "last_update", true) - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:15.684732.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 194 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.684622.

!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 15663
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 16290
194 STORE_REACHES edges created
194 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 38 nodes as PERSONAL
In total, tainted 38 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 47 nodes as ENCRYPTED
In total, tainted 47 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:02.895313.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:02:27.505267!
CRYPTOGRAPHY call to hash("sha512", $merchantCode . $idterminal . $password).,None,None
CRYPTOGRAPHY call to hash("sha512", $merchantCode . $idUser . $tokenUser . $merchantTerminal . $operation . $merchantOrder . $merchantAmount . $merchantCurrency . md5($merchantPassword)).,None,None
CRYPTOGRAPHY call to hash("sha512", md5($query . md5($merchantPassword))).,None,None
CRYPTOGRAPHY call to hash("sha512", $this->clientcode . $term . $_POST["TransactionType"] . $_POST["Order"] . $DateTime . md5($pass)).,None,None
CRYPTOGRAPHY call to hash("sha512", $mensaje . md5($pass) . $_REQUEST["BankDateTime"] . $_REQUEST["Response"]).,None,None
hash called with approved hash algorithm sha512.,sha512,None
hash called with approved hash algorithm sha512.,sha512,None
hash called with approved hash algorithm sha512.,sha512,None
hash called with approved hash algorithm sha512.,sha512,None
hash called with approved hash algorithm sha512.,sha512,None
MD5 called with parameters [merchantPassword]. Ignore if [merchantPassword] does not contain personal information.,md5,None
MD5 called with parameters [merchantPassword, query, md5]. Ignore if [merchantPassword, query, md5] does not contain personal information.,md5,None
MD5 called with parameters [merchantPassword]. Ignore if [merchantPassword] does not contain personal information.,md5,None
MD5 called with parameters [pass]. Ignore if [pass] does not contain personal information.,md5,None
MD5 called with parameters [pass]. Ignore if [pass] does not contain personal information.,md5,None
object property '$customer->first_name' of personal types {'first_name'} is found.,,None
object property '$customer->last_name' of personal types {'last_name'} is found.,,None
object property '$user->user_pass' of personal types {'password'} is found.,,None
WP_User object is created.,,None
RETRIEVAL call to get_option("woocommerce_paytpv_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_paytpv_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_paytpv_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_paytpv_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("active_plugins", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_paytpv_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order->get_id(), "PayTPV_Referencia", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_paytpv_terminals") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_paycomet_instantcredit_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_paycomet_instantcredit_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_paycomet_instantcredit_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_paycomet_instantcredit_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_paycomet_instantcredit_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_paycomet_instantcredit_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_paycomet_instantcredit_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_paycomet_instantcredit_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_paycomet_instantcredit_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_user_meta(get_current_user_id(), "last_update", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta(get_current_user_id(), "last_update", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_myaccount_page_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_myaccount_page_id") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($parent_order->get_id(), "PayTPV_IdUser", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($parent_order->get_id(), "PayTPV_TokenUser", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order->get_id(), "PayTPV_Referencia", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_paytpv_terminals", [["term" => $this->get_option("term"), "pass" => $this->get_option("pass"), "moneda" => $this->get_option("moneda"), "dcc" => $this->get_option("dcc")]]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to $this->get_option("term") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to $this->get_option("pass") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to $this->get_option("moneda") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to $this->get_option("dcc") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order->get_id(), "PayTPV_IdUser", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order->get_id(), "PayTPV_TokenUser", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order->get_id(), "paytpv_savecard", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($ref, "_customer_ip_address", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("paytpv") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("paytpv") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
STORAGE call to update_post_meta($order->get_id(), "paytpv_savecard", $savecard_jetiframe) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order->get_id(), "PayTPV_IdUser", $idUser) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order->get_id(), "PayTPV_TokenUser", $tokenUser) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order->get_id(), "PayTPV_Referencia", $result["DS_MERCHANT_ORDER"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order->get_id(), "_transaction_id", $result["DS_MERCHANT_AUTHCODE"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order->get_id(), "PayTPV_IdUser", $payptv_iduser) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order->get_id(), "PayTPV_TokenUser", $payptv_tokenuser) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("woocommerce_paytpv_terminals", $terminals) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($order->get_id(), "PayTPV_IdUser", $saved_card["paytpv_iduser"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order->get_id(), "PayTPV_TokenUser", $saved_card["paytpv_tokenuser"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order->get_id(), "PayTPV_IdUser", $saved_card["paytpv_iduser"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order->get_id(), "PayTPV_TokenUser", $saved_card["paytpv_tokenuser"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order->get_id(), "PayTPV_IdUser", $idUser) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order->get_id(), "PayTPV_TokenUser", $tokenUser) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($subscription->get_parent_id(), "PayTPV_IdUser", $idUser) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($subscription->get_parent_id(), "PayTPV_TokenUser", $tokenUser) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order->get_id(), "PayTPV_Referencia", $_REQUEST["Order"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order->get_id(), "PayTPV_MethodName", $_REQUEST["MethodName"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order->get_id(), "paytpv_savecard", $_POST["paytpv_agree"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("paytpv", $option) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] Storage check is NONE 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['encryption', 'third_party'] 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? True 

No findings
