Timeout in resolving values
Timeout in running neo4j query
Running Main.py on companies-house-integrator

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.428547.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:00.868838.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 10 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.318111.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 0 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.431915.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 225 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:00.784313.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 0 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.533158.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.100467.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 91 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:01.563285.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 1477
Added 1151 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 1477
Added 0 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.083691.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/companies-house-integrator/addComUser.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/companies-house-integrator/adminapi.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/companies-house-integrator/adminMenu.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/companies-house-integrator/CompaniesHouse.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/companies-house-integrator/index.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.586214.

1000 PHP_REACHES edges created
1477 PHP_REACHES edges created
1477 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 557 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.027796.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.567670.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 13 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:01.145852.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 12 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.154186.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.023152.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.313991.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.023008.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.047828.

25 PHP_REACHES edges created
25 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 18 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.204629.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
No SQL nodes to process.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:00.211820.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'json_encode($response)'' cannot be parsed correct.
HTML code '$'No Save user'' cannot be parsed correct.
HTML code '$'wp_create_nonce("coho-nonce-add-user")'' cannot be parsed correct.
HTML code '$'Company name'' cannot be parsed correct.
HTML code '$'User roles'' cannot be parsed correct.
HTML code '$'Select User Roles'' cannot be parsed correct.
HTML code '$'$role_name'' cannot be parsed correct.
HTML code '$'$role_name'' cannot be parsed correct.
HTML code '$'Save User'' cannot be parsed correct.
HTML code '$'admin_url("admin-ajax.php")'' cannot be parsed correct.
HTML code '$'admin_url("admin-ajax.php")'' cannot be parsed correct.
HTML code '$'Plugin instructions'' cannot be parsed correct.
HTML code '$'The plugin will allow you to automatically import a Companies House entity into your Wordpress site as a user and assign them as whatever user Type you have available as an option, including as a Customer on Woocommerce.'' cannot be parsed correct.
HTML code '$'In order to make the plugin work you need to register with Companies House'' cannot be parsed correct.
HTML code '$'here'' cannot be parsed correct.
HTML code '$'or search âCompanies House API accountâ and follow the instructions, activate your email and then obtain an API key under the Your Applications tab.'' cannot be parsed correct.
HTML code '$'Once you enter the plugin name, an API code will appear which you enter into our plugin and you will be able to use it ongoing.'' cannot be parsed correct.
HTML code '$'Enjoy!'' cannot be parsed correct.
HTML code '$'Companies House Api Key'' cannot be parsed correct.
HTML code '$'Add Company User'' cannot be parsed correct.
HTML code '$'wp_create_nonce("coho-nonce")'' cannot be parsed correct.
HTML code '$'get_option("companies_house_finder_options", "")'' cannot be parsed correct.
HTML code '$'get_option("companies_house_finder_optionsurl", "")'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:02.984081.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.047761.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 0 do_action/apply_filters calls and 7 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.472050.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbaseDetector
### Start running FrontBaseDetector
### Finish running FileProDetector
### Start running HashDetector
### Finish running CubridDetector
### Start running IBMDb2Detector
### Finish running DbplusDetector
### Start running InformixDetector
### Finish running FrontBaseDetector
### Start running IngresDetector
### Finish running FirebirdInterBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running IBMDb2Detector
### Start running MsqlDetector
### Finish running MongoDetector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running Oci8Detector
### Start running OpenSSLDetector
### Finish running MongoDbDetector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running HashDetector
### Start running PhpCurlDetector
### Finish running PasswordHashingDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running ArrayElementDetector
### Start running PHPRetrievalDetector
### Finish running OpenSSLDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PhpCurlDetector
### Start running PhpVarDetector
### Finish running PHPIncludedDetector
### Start running PostgreSQLDetector
### Finish running PhpVarDetector
### Start running PropertyDetector
### Finish running PostgreSQLDetector
### Start running Sqlite3Detector
### Finish running PHPRetrievalDetector
### Start running SqliteDetector
### Finish running PHPStorageDetector
### Start running SqlServerDetector
### Finish running SqliteDetector
### Start running SybaseDetector
### Finish running SybaseDetector
### Start running TokyoTyrantDetector
### Finish running Sqlite3Detector
### Start running UserInputDetector
### Finish running TokyoTyrantDetector
### Start running VariableDetector
### Finish running PropertyDetector
### Start running WordpressHashingFnDetector
### Finish running SqlServerDetector
### Start running WordPressRemoteDetector
### Finish running maxdbDetector
### Start running WordPressRetrievalDetector
### Finish running MySQLiDetector
### Start running WordPressStorageDetector
### Finish running UserInputDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running WordpressHashingFnDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running GenericDatabaseUsageDetector
### Start running UninstallDetector
### Finish running VariableDetector
### Finish running WordPressRetrievalDetector
### Finish running DeletionDetector
### Finish running UninstallDetector
### Finish running WordPressRemoteDetector
### Finish running WordPressStorageDetector
### Finished running detectors
addComUser.php:22
  - variable '$company_officers_address_line_1' of personal types {'address'} is found.
  - Data types: address
addComUser.php:24
  - variable '$company_officers_address_line_1' of personal types {'address'} is found.
  - Data types: address
addComUser.php:27
  - variable '$company_officers_address_line_2' of personal types {'address'} is found.
  - Data types: address
addComUser.php:29
  - variable '$company_officers_address_line_2' of personal types {'address'} is found.
  - Data types: address
addComUser.php:32
  - variable '$company_officers_country' of personal types {'country'} is found.
  - Data types: country
addComUser.php:34
  - variable '$company_officers_country' of personal types {'country'} is found.
  - Data types: country
addComUser.php:57
  - variable '$company_officers_country_of_residence' of personal types {'country'} is found.
  - Data types: country
addComUser.php:59
  - variable '$company_officers_country_of_residence' of personal types {'country'} is found.
  - Data types: country
addComUser.php:65
  - variable '$officer_last_name' of personal types {'last_name'} is found.
  - Data types: last_name
addComUser.php:69
  - variable '$officer_last_name' of personal types {'last_name'} is found.
  - Data types: last_name
addComUser.php:92
  - variable '$company_profile_address_line_1' of personal types {'address'} is found.
  - Data types: address
addComUser.php:94
  - variable '$company_profile_address_line_1' of personal types {'address'} is found.
  - Data types: address
addComUser.php:97
  - variable '$company_profile_address_line_2' of personal types {'address'} is found.
  - Data types: address
addComUser.php:99
  - variable '$company_profile_address_line_2' of personal types {'address'} is found.
  - Data types: address
addComUser.php:102
  - variable '$company_profile_locality_address' of personal types {'address'} is found.
  - Data types: address
addComUser.php:104
  - variable '$company_profile_locality_address' of personal types {'address'} is found.
  - Data types: address
addComUser.php:133
  - variable '$random_password' of personal types {'password'} is found.
  - Data types: password
addComUser.php:134
  - variable '$random_password' of personal types {'password'} is found.
  - Data types: password
addComUser.php:141
  - variable '$company_officers_address_line_1' of personal types {'address'} is found.
  - Data types: address
addComUser.php:142
  - variable '$company_officers_address_line_2' of personal types {'address'} is found.
  - Data types: address
addComUser.php:143
  - variable '$company_officers_country' of personal types {'country'} is found.
  - Data types: country
addComUser.php:148
  - variable '$company_officers_country_of_residence' of personal types {'country'} is found.
  - Data types: country
addComUser.php:152
  - variable '$officer_last_name' of personal types {'last_name'} is found.
  - Data types: last_name
addComUser.php:156
  - variable '$company_profile_address_line_1' of personal types {'address'} is found.
  - Data types: address
addComUser.php:157
  - variable '$company_profile_address_line_2' of personal types {'address'} is found.
  - Data types: address
addComUser.php:158
  - variable '$company_profile_locality_address' of personal types {'address'} is found.
  - Data types: address
addComUser.php:167
  - variable '$company_profile_address_line_1' of personal types {'address'} is found.
  - Data types: address
addComUser.php:168
  - variable '$company_profile_address_line_2' of personal types {'address'} is found.
  - Data types: address
addComUser.php:174
  - variable '$company_profile_address_line_1' of personal types {'address'} is found.
  - Data types: address
addComUser.php:175
  - variable '$company_profile_address_line_2' of personal types {'address'} is found.
  - Data types: address
addComUser.php:179
  - variable '$officer_last_name' of personal types {'last_name'} is found.
  - Data types: last_name
addComUser.php:185
  - variable '$random_password' of personal types {'password'} is found.
  - Data types: password 

addComUser.php:134
  - CRYPTOGRAPHY call to wp_create_user($str_name_com, $random_password, $str_name_com . "@gmail.com") alters data types {'user_meta', 'user'}. Passed arguments: 0: $username (string), 1: $password (string), 2: $email (string). Returns (int|WP_Error).
  - Data types: user_meta, user 

CompaniesHouse.php:76
  - API call to wp_remote_get($this->_Endpoint . "/search" . $query_string, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
CompaniesHouse.php:120
  - API call to wp_remote_get($this->_Endpoint . "/company/" . $company_number, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
CompaniesHouse.php:180
  - API call to wp_remote_get($this->_Endpoint . "/company/" . $company_number . "/officers", $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote 

addComUser.php:7
  - RETRIEVAL call to get_option("companies_house_finder_optionsurl", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
addComUser.php:10
  - RETRIEVAL call to get_option("companies_house_finder_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
addComUser.php:402
  - RETRIEVAL call to get_option("companies_house_finder_optionsurl", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
addComUser.php:407
  - RETRIEVAL call to get_option("companies_house_finder_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
addComUser.php:424
  - RETRIEVAL call to get_option("companies_house_finder_optionsurl", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
addComUser.php:429
  - RETRIEVAL call to get_option("companies_house_finder_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
adminMenu.php:4
  - RETRIEVAL call to get_option("companies_house_finder_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
adminapi.php:25
  - RETRIEVAL call to get_option("companies_house_finder_options", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
adminapi.php:27
  - RETRIEVAL call to get_option("companies_house_finder_optionsurl", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option 

addComUser.php:134
  - STORAGE call to wp_create_user($str_name_com, $random_password, $str_name_com . "@gmail.com") alters data types {'user_meta', 'user'}. Passed arguments: 0: $username (string), 1: $password (string), 2: $email (string). Returns (int|WP_Error).
  - Data types: user_meta, user
addComUser.php:140
  - STORAGE call to add_user_meta($user_id, "company_officers_officer_role", $company_officers_officer_role) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta
addComUser.php:141
  - STORAGE call to add_user_meta($user_id, "company_officers_address_line_1", $company_officers_address_line_1) alters data types {'user_meta', 'address'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta, address
addComUser.php:142
  - STORAGE call to add_user_meta($user_id, "company_officers_address_line_2", $company_officers_address_line_2) alters data types {'user_meta', 'address'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta, address
addComUser.php:143
  - STORAGE call to add_user_meta($user_id, "company_officers_country", $company_officers_country) alters data types {'country', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: country, user_meta
addComUser.php:144
  - STORAGE call to add_user_meta($user_id, "company_officers_region", $company_officers_region) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta
addComUser.php:145
  - STORAGE call to add_user_meta($user_id, "company_officers_postal_code", $company_officers_postal_code) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta
addComUser.php:146
  - STORAGE call to add_user_meta($user_id, "company_officers_locality", $company_officers_locality) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta
addComUser.php:147
  - STORAGE call to add_user_meta($user_id, "company_officers_premises", $company_officers_premises) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta
addComUser.php:148
  - STORAGE call to add_user_meta($user_id, "company_officers_country_of_residence", $company_officers_country_of_residence) alters data types {'country', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: country, user_meta
addComUser.php:149
  - STORAGE call to add_user_meta($user_id, "company_officers_name", $company_officers_name) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta
addComUser.php:151
  - STORAGE call to update_user_meta($user_id, "last_name", $officer_name) alters data types {'last_name', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: last_name, user_meta
addComUser.php:152
  - STORAGE call to update_user_meta($user_id, "first_name", $officer_last_name) alters data types {'first_name', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: first_name, user_meta
addComUser.php:155
  - STORAGE call to add_user_meta($user_id, "company_profile_company_name", $company_profile_company_name) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta
addComUser.php:156
  - STORAGE call to add_user_meta($user_id, "company_profile_address_line_1", $company_profile_address_line_1) alters data types {'user_meta', 'address'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta, address
addComUser.php:157
  - STORAGE call to add_user_meta($user_id, "company_profile_address_line_2", $company_profile_address_line_2) alters data types {'user_meta', 'address'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta, address
addComUser.php:158
  - STORAGE call to add_user_meta($user_id, "company_profile_locality_address", $company_profile_locality_address) alters data types {'user_meta', 'address'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta, address
addComUser.php:159
  - STORAGE call to add_user_meta($user_id, "company_profile_region", $company_profile_region) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta
addComUser.php:160
  - STORAGE call to add_user_meta($user_id, "company_profile_postal_code", $company_profile_postal_code) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta
addComUser.php:161
  - STORAGE call to add_user_meta($user_id, "company_profile_locality", $company_profile_locality) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta
addComUser.php:166
  - STORAGE call to add_user_meta($user_id, "billing_company", $company_profile_company_name) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta
addComUser.php:167
  - STORAGE call to add_user_meta($user_id, "billing_address_1", $company_profile_address_line_1) alters data types {'user_meta', 'address'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta, address
addComUser.php:168
  - STORAGE call to add_user_meta($user_id, "billing_address_2", $company_profile_address_line_2) alters data types {'user_meta', 'address'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta, address
addComUser.php:169
  - STORAGE call to add_user_meta($user_id, "billing_city", $company_profile_region) alters data types {'city', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: city, user_meta
addComUser.php:170
  - STORAGE call to add_user_meta($user_id, "billing_postcode", $company_profile_postal_code) alters data types {'user_meta', 'postcode'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta, postcode
addComUser.php:173
  - STORAGE call to add_user_meta($user_id, "shipping_company", $company_profile_company_name) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta
addComUser.php:174
  - STORAGE call to add_user_meta($user_id, "shipping_address_1", $company_profile_address_line_1) alters data types {'user_meta', 'address'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta, address
addComUser.php:175
  - STORAGE call to add_user_meta($user_id, "shipping_address_2", $company_profile_address_line_2) alters data types {'user_meta', 'address'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta, address
addComUser.php:176
  - STORAGE call to add_user_meta($user_id, "shipping_city", $company_profile_region) alters data types {'city', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: city, user_meta
addComUser.php:177
  - STORAGE call to add_user_meta($user_id, "shipping_postcode", $company_profile_postal_code) alters data types {'user_meta', 'postcode'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta, postcode
addComUser.php:178
  - STORAGE call to add_user_meta($user_id, "shipping_last_name", $officer_name) alters data types {'last_name', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: last_name, user_meta
addComUser.php:179
  - STORAGE call to add_user_meta($user_id, "shipping_first_name", $officer_last_name) alters data types {'first_name', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: first_name, user_meta
adminapi.php:11
  - STORAGE call to update_option("companies_house_finder_options", sanitize_text_field($_POST["companies_house_finder_options"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
adminapi.php:15
  - STORAGE call to update_option("companies_house_finder_optionsurl", sanitize_text_field($_POST["companies_house_finder_optionsurl"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option 

addComUser.php:136
  - WP_User object is created.
  - Data types: user_meta, user 

By data type:
address
	WordPressStorageDetector.add_user_meta($user_id, "company_officers_address_line_2", $company_officers_address_line_2) - {'user_meta', 'address'}
	VariableDetector.(unknown) - {'address'}
	WordPressStorageDetector.add_user_meta($user_id, "shipping_address_2", $company_profile_address_line_2) - {'user_meta', 'address'}
	VariableDetector.(unknown) - {'address'}
	WordPressStorageDetector.add_user_meta($user_id, "billing_address_1", $company_profile_address_line_1) - {'user_meta', 'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	WordPressStorageDetector.add_user_meta($user_id, "shipping_address_1", $company_profile_address_line_1) - {'user_meta', 'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	WordPressStorageDetector.add_user_meta($user_id, "company_officers_address_line_1", $company_officers_address_line_1) - {'user_meta', 'address'}
	WordPressStorageDetector.add_user_meta($user_id, "billing_address_2", $company_profile_address_line_2) - {'user_meta', 'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	WordPressStorageDetector.add_user_meta($user_id, "company_profile_locality_address", $company_profile_locality_address) - {'user_meta', 'address'}
	WordPressStorageDetector.add_user_meta($user_id, "company_profile_address_line_1", $company_profile_address_line_1) - {'user_meta', 'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	WordPressStorageDetector.add_user_meta($user_id, "company_profile_address_line_2", $company_profile_address_line_2) - {'user_meta', 'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
	VariableDetector.(unknown) - {'address'}
city
	WordPressStorageDetector.add_user_meta($user_id, "shipping_city", $company_profile_region) - {'city', 'user_meta'}
	WordPressStorageDetector.add_user_meta($user_id, "billing_city", $company_profile_region) - {'city', 'user_meta'}
country
	VariableDetector.(unknown) - {'country'}
	VariableDetector.(unknown) - {'country'}
	VariableDetector.(unknown) - {'country'}
	WordPressStorageDetector.add_user_meta($user_id, "company_officers_country", $company_officers_country) - {'country', 'user_meta'}
	VariableDetector.(unknown) - {'country'}
	VariableDetector.(unknown) - {'country'}
	VariableDetector.(unknown) - {'country'}
	WordPressStorageDetector.add_user_meta($user_id, "company_officers_country_of_residence", $company_officers_country_of_residence) - {'country', 'user_meta'}
first_name
	WordPressStorageDetector.update_user_meta($user_id, "first_name", $officer_last_name) - {'first_name', 'user_meta'}
	WordPressStorageDetector.add_user_meta($user_id, "shipping_first_name", $officer_last_name) - {'first_name', 'user_meta'}
last_name
	WordPressStorageDetector.add_user_meta($user_id, "shipping_last_name", $officer_name) - {'last_name', 'user_meta'}
	VariableDetector.(unknown) - {'last_name'}
	VariableDetector.(unknown) - {'last_name'}
	VariableDetector.(unknown) - {'last_name'}
	VariableDetector.(unknown) - {'last_name'}
	WordPressStorageDetector.update_user_meta($user_id, "last_name", $officer_name) - {'last_name', 'user_meta'}
option
	WordPressRetrievalDetector.get_option("companies_house_finder_options") - {'option'}
	WordPressRetrievalDetector.get_option("companies_house_finder_options") - {'option'}
	WordPressRetrievalDetector.get_option("companies_house_finder_options") - {'option'}
	WordPressRetrievalDetector.get_option("companies_house_finder_options") - {'option'}
	WordPressRetrievalDetector.get_option("companies_house_finder_optionsurl", "") - {'option'}
	WordPressRetrievalDetector.get_option("companies_house_finder_optionsurl", "") - {'option'}
	WordPressRetrievalDetector.get_option("companies_house_finder_optionsurl", "") - {'option'}
	WordPressRetrievalDetector.get_option("companies_house_finder_options", "") - {'option'}
	WordPressRetrievalDetector.get_option("companies_house_finder_optionsurl", "") - {'option'}
	WordPressStorageDetector.update_option("companies_house_finder_options", sanitize_text_field($_POST["companies_house_finder_options"])) - {'option'}
	WordPressStorageDetector.update_option("companies_house_finder_optionsurl", sanitize_text_field($_POST["companies_house_finder_optionsurl"])) - {'option'}
password
	VariableDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
postcode
	WordPressStorageDetector.add_user_meta($user_id, "shipping_postcode", $company_profile_postal_code) - {'user_meta', 'postcode'}
	WordPressStorageDetector.add_user_meta($user_id, "billing_postcode", $company_profile_postal_code) - {'user_meta', 'postcode'}
remote
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
user
	WordPressStorageDetector.wp_create_user($str_name_com, $random_password, $str_name_com . "@gmail.com") - {'user_meta', 'user'}
	WordpressHashingFnDetector.wp_create_user($str_name_com, $random_password, $str_name_com . "@gmail.com") - {'user_meta', 'user'}
	WP_UserDetector.WP_User($user_id) - {'user_meta', 'user'}
user_meta
	WordPressStorageDetector.add_user_meta($user_id, "company_officers_address_line_2", $company_officers_address_line_2) - {'user_meta', 'address'}
	WordPressStorageDetector.add_user_meta($user_id, "shipping_postcode", $company_profile_postal_code) - {'user_meta', 'postcode'}
	WordPressStorageDetector.add_user_meta($user_id, "company_profile_company_name", $company_profile_company_name) - {'user_meta'}
	WordPressStorageDetector.add_user_meta($user_id, "company_officers_postal_code", $company_officers_postal_code) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "first_name", $officer_last_name) - {'first_name', 'user_meta'}
	WordPressStorageDetector.add_user_meta($user_id, "shipping_city", $company_profile_region) - {'city', 'user_meta'}
	WordPressStorageDetector.add_user_meta($user_id, "company_officers_region", $company_officers_region) - {'user_meta'}
	WordPressStorageDetector.add_user_meta($user_id, "company_officers_officer_role", $company_officers_officer_role) - {'user_meta'}
	WordPressStorageDetector.add_user_meta($user_id, "shipping_address_2", $company_profile_address_line_2) - {'user_meta', 'address'}
	WordPressStorageDetector.add_user_meta($user_id, "company_profile_postal_code", $company_profile_postal_code) - {'user_meta'}
	WordPressStorageDetector.add_user_meta($user_id, "shipping_first_name", $officer_last_name) - {'first_name', 'user_meta'}
	WordPressStorageDetector.wp_create_user($str_name_com, $random_password, $str_name_com . "@gmail.com") - {'user_meta', 'user'}
	WordPressStorageDetector.add_user_meta($user_id, "billing_address_1", $company_profile_address_line_1) - {'user_meta', 'address'}
	WordPressStorageDetector.add_user_meta($user_id, "billing_company", $company_profile_company_name) - {'user_meta'}
	WordPressStorageDetector.add_user_meta($user_id, "shipping_last_name", $officer_name) - {'last_name', 'user_meta'}
	WordPressStorageDetector.add_user_meta($user_id, "company_profile_locality", $company_profile_locality) - {'user_meta'}
	WordPressStorageDetector.add_user_meta($user_id, "company_profile_region", $company_profile_region) - {'user_meta'}
	WordPressStorageDetector.add_user_meta($user_id, "shipping_address_1", $company_profile_address_line_1) - {'user_meta', 'address'}
	WordPressStorageDetector.add_user_meta($user_id, "company_officers_country", $company_officers_country) - {'country', 'user_meta'}
	WordPressStorageDetector.add_user_meta($user_id, "company_officers_address_line_1", $company_officers_address_line_1) - {'user_meta', 'address'}
	WordPressStorageDetector.add_user_meta($user_id, "billing_address_2", $company_profile_address_line_2) - {'user_meta', 'address'}
	WordPressStorageDetector.add_user_meta($user_id, "billing_postcode", $company_profile_postal_code) - {'user_meta', 'postcode'}
	WordPressStorageDetector.add_user_meta($user_id, "shipping_company", $company_profile_company_name) - {'user_meta'}
	WordpressHashingFnDetector.wp_create_user($str_name_com, $random_password, $str_name_com . "@gmail.com") - {'user_meta', 'user'}
	WordPressStorageDetector.add_user_meta($user_id, "company_officers_name", $company_officers_name) - {'user_meta'}
	WordPressStorageDetector.add_user_meta($user_id, "company_profile_locality_address", $company_profile_locality_address) - {'user_meta', 'address'}
	WordPressStorageDetector.add_user_meta($user_id, "company_officers_locality", $company_officers_locality) - {'user_meta'}
	WordPressStorageDetector.add_user_meta($user_id, "company_profile_address_line_1", $company_profile_address_line_1) - {'user_meta', 'address'}
	WP_UserDetector.WP_User($user_id) - {'user_meta', 'user'}
	WordPressStorageDetector.add_user_meta($user_id, "company_profile_address_line_2", $company_profile_address_line_2) - {'user_meta', 'address'}
	WordPressStorageDetector.add_user_meta($user_id, "billing_city", $company_profile_region) - {'city', 'user_meta'}
	WordPressStorageDetector.add_user_meta($user_id, "company_officers_premises", $company_officers_premises) - {'user_meta'}
	WordPressStorageDetector.add_user_meta($user_id, "company_officers_country_of_residence", $company_officers_country_of_residence) - {'country', 'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "last_name", $officer_name) - {'last_name', 'user_meta'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:15.408813.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 18 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.348615.

18 STORE_REACHES edges created
18 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 109 nodes as PERSONAL
In total, tainted 109 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 77 nodes as ENCRYPTED
In total, tainted 77 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:03.684686.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:00:38.645388!
variable '$company_profile_locality_address' of personal types {'address'} is found.,,None
variable '$company_profile_locality_address' of personal types {'address'} is found.,,None
variable '$random_password' of personal types {'password'} is found.,,None
variable '$random_password' of personal types {'password'} is found.,,None
variable '$company_officers_address_line_1' of personal types {'address'} is found.,,None
variable '$company_officers_address_line_2' of personal types {'address'} is found.,,None
variable '$company_officers_country' of personal types {'country'} is found.,,None
variable '$company_officers_country_of_residence' of personal types {'country'} is found.,,None
variable '$officer_last_name' of personal types {'last_name'} is found.,,None
variable '$company_profile_address_line_1' of personal types {'address'} is found.,,None
variable '$company_profile_address_line_2' of personal types {'address'} is found.,,None
variable '$company_profile_locality_address' of personal types {'address'} is found.,,None
variable '$company_profile_address_line_1' of personal types {'address'} is found.,,None
variable '$company_profile_address_line_2' of personal types {'address'} is found.,,None
variable '$company_profile_address_line_1' of personal types {'address'} is found.,,None
variable '$company_profile_address_line_2' of personal types {'address'} is found.,,None
variable '$officer_last_name' of personal types {'last_name'} is found.,,None
variable '$random_password' of personal types {'password'} is found.,,None
variable '$company_officers_address_line_1' of personal types {'address'} is found.,,None
variable '$company_officers_address_line_1' of personal types {'address'} is found.,,None
variable '$company_officers_address_line_2' of personal types {'address'} is found.,,None
variable '$company_officers_address_line_2' of personal types {'address'} is found.,,None
variable '$company_officers_country' of personal types {'country'} is found.,,None
variable '$company_officers_country' of personal types {'country'} is found.,,None
variable '$company_officers_country_of_residence' of personal types {'country'} is found.,,None
variable '$company_officers_country_of_residence' of personal types {'country'} is found.,,None
variable '$officer_last_name' of personal types {'last_name'} is found.,,None
variable '$officer_last_name' of personal types {'last_name'} is found.,,None
variable '$company_profile_address_line_1' of personal types {'address'} is found.,,None
variable '$company_profile_address_line_1' of personal types {'address'} is found.,,None
variable '$company_profile_address_line_2' of personal types {'address'} is found.,,None
variable '$company_profile_address_line_2' of personal types {'address'} is found.,,None
WP_User object is created.,,None
API call to wp_remote_get($this->_Endpoint . "/company/" . $company_number, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_get($this->_Endpoint . "/company/" . $company_number . "/officers", $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_get($this->_Endpoint . "/search" . $query_string, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
RETRIEVAL call to get_option("companies_house_finder_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("companies_house_finder_optionsurl", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("companies_house_finder_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("companies_house_finder_optionsurl", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("companies_house_finder_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("companies_house_finder_optionsurl", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("companies_house_finder_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("companies_house_finder_options", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("companies_house_finder_optionsurl", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
STORAGE call to wp_create_user($str_name_com, $random_password, $str_name_com . "@gmail.com") alters data types {'user_meta', 'user'}. Passed arguments: 0: $username (string), 1: $password (string), 2: $email (string). Returns (int|WP_Error).,None,None
STORAGE call to add_user_meta($user_id, "company_officers_officer_role", $company_officers_officer_role) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "company_officers_address_line_1", $company_officers_address_line_1) alters data types {'user_meta', 'address'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "company_officers_address_line_2", $company_officers_address_line_2) alters data types {'user_meta', 'address'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "company_officers_country", $company_officers_country) alters data types {'country', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "company_officers_region", $company_officers_region) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "company_officers_postal_code", $company_officers_postal_code) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "company_officers_locality", $company_officers_locality) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "company_officers_premises", $company_officers_premises) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "company_officers_country_of_residence", $company_officers_country_of_residence) alters data types {'country', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "company_officers_name", $company_officers_name) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to update_user_meta($user_id, "last_name", $officer_name) alters data types {'last_name', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "first_name", $officer_last_name) alters data types {'first_name', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to add_user_meta($user_id, "company_profile_company_name", $company_profile_company_name) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "company_profile_address_line_1", $company_profile_address_line_1) alters data types {'user_meta', 'address'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "company_profile_address_line_2", $company_profile_address_line_2) alters data types {'user_meta', 'address'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "company_profile_locality_address", $company_profile_locality_address) alters data types {'user_meta', 'address'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "company_profile_region", $company_profile_region) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "company_profile_postal_code", $company_profile_postal_code) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "company_profile_locality", $company_profile_locality) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "billing_company", $company_profile_company_name) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "billing_address_1", $company_profile_address_line_1) alters data types {'user_meta', 'address'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "billing_address_2", $company_profile_address_line_2) alters data types {'user_meta', 'address'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "billing_city", $company_profile_region) alters data types {'city', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "billing_postcode", $company_profile_postal_code) alters data types {'user_meta', 'postcode'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "shipping_company", $company_profile_company_name) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "shipping_address_1", $company_profile_address_line_1) alters data types {'user_meta', 'address'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "shipping_address_2", $company_profile_address_line_2) alters data types {'user_meta', 'address'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "shipping_city", $company_profile_region) alters data types {'city', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "shipping_postcode", $company_profile_postal_code) alters data types {'user_meta', 'postcode'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "shipping_last_name", $officer_name) alters data types {'last_name', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "shipping_first_name", $officer_last_name) alters data types {'first_name', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to update_option("companies_house_finder_options", sanitize_text_field($_POST["companies_house_finder_options"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("companies_house_finder_optionsurl", sanitize_text_field($_POST["companies_house_finder_optionsurl"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
CRYPTOGRAPHY call to wp_create_user($str_name_com, $random_password, $str_name_com . "@gmail.com") alters data types {'user_meta', 'user'}. Passed arguments: 0: $username (string), 1: $password (string), 2: $email (string). Returns (int|WP_Error).,hash,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] PII of types (['address', 'user', 'password', 'user_meta']) stored through WordPress function "add_user_meta($user_id, "company_officers_address_line_2", $company_officers_address_line_2)", found in file addComUser.php at line 142. 

[has_storage] PII of types (['user', 'password', 'user_meta', 'postcode']) stored through WordPress function "add_user_meta($user_id, "shipping_postcode", $company_profile_postal_code)", found in file addComUser.php at line 177. 

[has_storage] PII of types (['user', 'password', 'user_meta']) stored through WordPress function "add_user_meta($user_id, "company_profile_company_name", $company_profile_company_name)", found in file addComUser.php at line 155. 

[has_storage] PII of types (['user', 'password', 'user_meta']) stored through WordPress function "add_user_meta($user_id, "company_officers_postal_code", $company_officers_postal_code)", found in file addComUser.php at line 145. 

[has_storage] PII of types (['last_name', 'user', 'password', 'first_name', 'user_meta']) stored through WordPress function "update_user_meta($user_id, "first_name", $officer_last_name)", found in file addComUser.php at line 152. 

[has_storage] PII of types (['city', 'user', 'password', 'user_meta']) stored through WordPress function "add_user_meta($user_id, "shipping_city", $company_profile_region)", found in file addComUser.php at line 176. 

[has_storage] PII of types (['user', 'password', 'user_meta']) stored through WordPress function "add_user_meta($user_id, "company_officers_region", $company_officers_region)", found in file addComUser.php at line 144. 

[has_storage] PII of types (['user', 'password', 'user_meta']) stored through WordPress function "add_user_meta($user_id, "company_officers_officer_role", $company_officers_officer_role)", found in file addComUser.php at line 140. 

[has_storage] PII of types (['address', 'user', 'password', 'user_meta']) stored through WordPress function "add_user_meta($user_id, "shipping_address_2", $company_profile_address_line_2)", found in file addComUser.php at line 175. 

[has_storage] PII of types (['user', 'password', 'user_meta']) stored through WordPress function "add_user_meta($user_id, "company_profile_postal_code", $company_profile_postal_code)", found in file addComUser.php at line 160. 

[has_storage] PII of types (['last_name', 'user', 'password', 'first_name', 'user_meta']) stored through WordPress function "add_user_meta($user_id, "shipping_first_name", $officer_last_name)", found in file addComUser.php at line 179. 

[has_storage] WP User info of types (['user_meta', 'user', 'password']) stored through WordPress function "wp_create_user($str_name_com, $random_password, $str_name_com . "@gmail.com")", found in file addComUser.php at line 134. 

[has_storage] PII of types (['address', 'user', 'password', 'user_meta']) stored through WordPress function "add_user_meta($user_id, "billing_address_1", $company_profile_address_line_1)", found in file addComUser.php at line 167. 

[has_storage] PII of types (['user', 'password', 'user_meta']) stored through WordPress function "add_user_meta($user_id, "billing_company", $company_profile_company_name)", found in file addComUser.php at line 166. 

[has_storage] PII of types (['last_name', 'user', 'password', 'user_meta']) stored through WordPress function "add_user_meta($user_id, "shipping_last_name", $officer_name)", found in file addComUser.php at line 178. 

[has_storage] PII of types (['user', 'password', 'user_meta']) stored through WordPress function "add_user_meta($user_id, "company_profile_locality", $company_profile_locality)", found in file addComUser.php at line 161. 

[has_storage] PII of types (['user', 'password', 'user_meta']) stored through WordPress function "add_user_meta($user_id, "company_profile_region", $company_profile_region)", found in file addComUser.php at line 159. 

[has_storage] PII of types (['address', 'user', 'password', 'user_meta']) stored through WordPress function "add_user_meta($user_id, "shipping_address_1", $company_profile_address_line_1)", found in file addComUser.php at line 174. 

[has_storage] PII of types (['user', 'password', 'country', 'user_meta']) stored through WordPress function "add_user_meta($user_id, "company_officers_country", $company_officers_country)", found in file addComUser.php at line 143. 

[has_storage] PII of types (['address', 'user', 'password', 'user_meta']) stored through WordPress function "add_user_meta($user_id, "company_officers_address_line_1", $company_officers_address_line_1)", found in file addComUser.php at line 141. 

[has_storage] PII of types (['address', 'user', 'password', 'user_meta']) stored through WordPress function "add_user_meta($user_id, "billing_address_2", $company_profile_address_line_2)", found in file addComUser.php at line 168. 

[has_storage] PII of types (['user', 'password', 'user_meta', 'postcode']) stored through WordPress function "add_user_meta($user_id, "billing_postcode", $company_profile_postal_code)", found in file addComUser.php at line 170. 

[has_storage] PII of types (['user', 'password', 'user_meta']) stored through WordPress function "add_user_meta($user_id, "shipping_company", $company_profile_company_name)", found in file addComUser.php at line 173. 

[has_storage] PII of types (['user', 'password', 'user_meta']) stored through WordPress function "add_user_meta($user_id, "company_officers_name", $company_officers_name)", found in file addComUser.php at line 149. 

[has_storage] PII of types (['address', 'user', 'password', 'user_meta']) stored through WordPress function "add_user_meta($user_id, "company_profile_locality_address", $company_profile_locality_address)", found in file addComUser.php at line 158. 

[has_storage] PII of types (['user', 'password', 'user_meta']) stored through WordPress function "add_user_meta($user_id, "company_officers_locality", $company_officers_locality)", found in file addComUser.php at line 146. 

[has_storage] PII of types (['address', 'user', 'password', 'user_meta']) stored through WordPress function "add_user_meta($user_id, "company_profile_address_line_1", $company_profile_address_line_1)", found in file addComUser.php at line 156. 

[has_storage] PII of types (['address', 'user', 'password', 'user_meta']) stored through WordPress function "add_user_meta($user_id, "company_profile_address_line_2", $company_profile_address_line_2)", found in file addComUser.php at line 157. 

[has_storage] PII of types (['city', 'user', 'password', 'user_meta']) stored through WordPress function "add_user_meta($user_id, "billing_city", $company_profile_region)", found in file addComUser.php at line 169. 

[has_storage] PII of types (['user', 'password', 'user_meta']) stored through WordPress function "add_user_meta($user_id, "company_officers_premises", $company_officers_premises)", found in file addComUser.php at line 147. 

[has_storage] PII of types (['user', 'password', 'country', 'user_meta']) stored through WordPress function "add_user_meta($user_id, "company_officers_country_of_residence", $company_officers_country_of_residence)", found in file addComUser.php at line 148. 

[has_storage] PII of types (['last_name', 'user', 'password', 'user_meta']) stored through WordPress function "update_user_meta($user_id, "last_name", $officer_name)", found in file addComUser.php at line 151. 

[has_storage] Storage check is WP 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "company_officers_address_line_2", $company_officers_address_line_2) does not have corresponding deletion method. Storage method found in file addComUser.php at line 142. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "shipping_postcode", $company_profile_postal_code) does not have corresponding deletion method. Storage method found in file addComUser.php at line 177. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "company_profile_company_name", $company_profile_company_name) does not have corresponding deletion method. Storage method found in file addComUser.php at line 155. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "company_officers_postal_code", $company_officers_postal_code) does not have corresponding deletion method. Storage method found in file addComUser.php at line 145. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "first_name", $officer_last_name) does not have corresponding deletion method. Storage method found in file addComUser.php at line 152. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "shipping_city", $company_profile_region) does not have corresponding deletion method. Storage method found in file addComUser.php at line 176. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "company_officers_region", $company_officers_region) does not have corresponding deletion method. Storage method found in file addComUser.php at line 144. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "company_officers_officer_role", $company_officers_officer_role) does not have corresponding deletion method. Storage method found in file addComUser.php at line 140. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "shipping_address_2", $company_profile_address_line_2) does not have corresponding deletion method. Storage method found in file addComUser.php at line 175. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "company_profile_postal_code", $company_profile_postal_code) does not have corresponding deletion method. Storage method found in file addComUser.php at line 160. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "shipping_first_name", $officer_last_name) does not have corresponding deletion method. Storage method found in file addComUser.php at line 179. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "billing_address_1", $company_profile_address_line_1) does not have corresponding deletion method. Storage method found in file addComUser.php at line 167. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "billing_company", $company_profile_company_name) does not have corresponding deletion method. Storage method found in file addComUser.php at line 166. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "shipping_last_name", $officer_name) does not have corresponding deletion method. Storage method found in file addComUser.php at line 178. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "company_profile_locality", $company_profile_locality) does not have corresponding deletion method. Storage method found in file addComUser.php at line 161. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "company_profile_region", $company_profile_region) does not have corresponding deletion method. Storage method found in file addComUser.php at line 159. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "shipping_address_1", $company_profile_address_line_1) does not have corresponding deletion method. Storage method found in file addComUser.php at line 174. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "company_officers_country", $company_officers_country) does not have corresponding deletion method. Storage method found in file addComUser.php at line 143. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "company_officers_address_line_1", $company_officers_address_line_1) does not have corresponding deletion method. Storage method found in file addComUser.php at line 141. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "billing_address_2", $company_profile_address_line_2) does not have corresponding deletion method. Storage method found in file addComUser.php at line 168. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "billing_postcode", $company_profile_postal_code) does not have corresponding deletion method. Storage method found in file addComUser.php at line 170. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "shipping_company", $company_profile_company_name) does not have corresponding deletion method. Storage method found in file addComUser.php at line 173. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "company_officers_name", $company_officers_name) does not have corresponding deletion method. Storage method found in file addComUser.php at line 149. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "company_profile_locality_address", $company_profile_locality_address) does not have corresponding deletion method. Storage method found in file addComUser.php at line 158. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "company_officers_locality", $company_officers_locality) does not have corresponding deletion method. Storage method found in file addComUser.php at line 146. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "company_profile_address_line_1", $company_profile_address_line_1) does not have corresponding deletion method. Storage method found in file addComUser.php at line 156. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "company_profile_address_line_2", $company_profile_address_line_2) does not have corresponding deletion method. Storage method found in file addComUser.php at line 157. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "billing_city", $company_profile_region) does not have corresponding deletion method. Storage method found in file addComUser.php at line 169. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "company_officers_premises", $company_officers_premises) does not have corresponding deletion method. Storage method found in file addComUser.php at line 147. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "company_officers_country_of_residence", $company_officers_country_of_residence) does not have corresponding deletion method. Storage method found in file addComUser.php at line 148. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "last_name", $officer_name) does not have corresponding deletion method. Storage method found in file addComUser.php at line 151. 

[Art.17, Right to erasure] Deletion access is NONE 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1326. Found in file addComUser.php at line 142 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1568. Found in file addComUser.php at line 177 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1416. Found in file addComUser.php at line 155 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1353. Found in file addComUser.php at line 145 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1407. Found in file addComUser.php at line 152 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1559. Found in file addComUser.php at line 176 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1344. Found in file addComUser.php at line 144 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1308. Found in file addComUser.php at line 140 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1550. Found in file addComUser.php at line 175 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1461. Found in file addComUser.php at line 160 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1586. Found in file addComUser.php at line 179 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1496. Found in file addComUser.php at line 167 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1487. Found in file addComUser.php at line 166 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1577. Found in file addComUser.php at line 178 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1470. Found in file addComUser.php at line 161 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1452. Found in file addComUser.php at line 159 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1541. Found in file addComUser.php at line 174 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1335. Found in file addComUser.php at line 143 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1317. Found in file addComUser.php at line 141 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1505. Found in file addComUser.php at line 168 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1523. Found in file addComUser.php at line 170 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1532. Found in file addComUser.php at line 173 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1389. Found in file addComUser.php at line 149 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1443. Found in file addComUser.php at line 158 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1362. Found in file addComUser.php at line 146 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1425. Found in file addComUser.php at line 156 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1434. Found in file addComUser.php at line 157 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1514. Found in file addComUser.php at line 169 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1371. Found in file addComUser.php at line 147 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1380. Found in file addComUser.php at line 148 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1398. Found in file addComUser.php at line 151 

[Art.15, Right to access] Data access is NONE_BUT_NOT_REQUIRED 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['access', 'deletion', 'encryption', 'third_party'] 

[main] Is deletion in violation? True 

[main] Is access in violation? False 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? False 


###########
### Q&A ###
###########

1. Why is my plugin in violation against GDPR?

GDPR (https://gdpr-info.eu/) aims to give citizens in the European Union (EU) control over their personal data. If a website collects or store user data, it is required to provide users functionalities to control their data, such as ones to erase or export their data. While a plugin do not directly interact with users, it may provide functionalities that collect or store personal data, which would make websites that deploy the plugin in violation against GDPR if the plugin does not provide corresponding functionalities to allow users control their personal data. Therefore, plugin developers are responsible to provide functions to manage the personal data they handle in accordance with GDPR. We list requirements by specific GDPR articles relevant to your plugin below.


[Art. 13, Information to be provided where personal data are collected from the data subject] If a plugin collects or handles personal data, it needs to provide privacy policy texts that explain what personal data is being collected and for what purpose. The texts are meant to be added to the privacy policy of the websites that deploy the plugin. 


            
[Art.17, Right to erasure] If a plugin stores personal data in a custom database they create or manage, or through Wordpress's native storage functions (e.g., update_user_meta), it needs to provide methods for users to erase the data upon request. Note that deleting data for all users upon uninstallation does not satisfy the requirement. 


            
        

2. How do I make my plugin compliant?

Please refer to the fix report below to see how you can make your plugin comply with GDPR.

        

##################
### Fix Report ###
##################

############################
# Data Deletion Fix Report #
############################

This report suggests fixes to comply with the GDPR Art. 17, Right to erasure (https://gdpr-info.eu/art-17-gdpr/). The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/adding-the-personal-data-eraser-to-your-plugin/ for more details.

1) Implement a function that deletes all the user data collected in the plugin. Sample code:


/**
* Removes all collected data of a user.
*
* @param string $email_address   email address to manipulate
* @param int    $page            pagination
*
* @return array
*/
function companies-house-integrator_remove_data( $email_address, $page = 1 ) {
    
    $page = (int) $page;


    //TODO: Delete the user data that was stored using Wordpress functions

    //Below is the sample code for deleting user meta and may need to be modified to suit the plugin.
    $user_id = get_user_by('email', $email_address)
    $key = 'email' //Sample user meta key
    if ( $customer->user_id > 0 ) {
        //Delete user meta data by $key
        delete_user_meta( $user_id, $key );
    }
        



    // Tell core if we have more data to delete still
    $done = true;
    return array(
        'items_removed'  => $items_removed, // true if collected data of a user is being deleted
        'items_retained' => $items_retained, // true if certain data needs to be retained
        'messages'       => sprintf( __( 'Data of user with email %s successfully deleted.', 'companies-house-integrator' ), $email_address ), // Put messages for data removal
        'done'           => $done, // true if all the removal processes are done (all data of the user is removed)
    );
}
        

2) Hook the deletion function to the Wordpress's Personal Data Removal tool


/**
* Registers all data erasers.
*
* @param array $exporters
*
* @return mixed
*/
function companies-house-integrator_register_privacy_erasers( $erasers ) {
    $erasers['my-plugin-slug'] = array(
        'eraser_friendly_name' => __( '<eraser name>', 'companies-house-integrator' ),
        'callback'             => 'companies-house-integrator_remove_data',
    );
    return $erasers;
}
        

add_filter( 'wp_privacy_personal_data_erasers', 'companies-house-integrator_register_privacy_erasers' );
        

        

#############################
# Privacy Policy Fix Report #
#############################

This report suggests fixes to comply with the GDPR Art. 13 (https://gdpr-info.eu/art-13-gdpr/) through including a privacy notice. The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/suggesting-text-for-the-site-privacy-policy/ for more details.

1) Implement a function that includes the privacy policy for the plugin and provide it to wordpress through wp_add_privacy_policy_content(). Sample code:


/**
* Adds a privacy policy statement.
*/
function companies-house-integrator_add_privacy_policy_content() {
    if ( ! function_exists( 'wp_add_privacy_policy_content' ) ) {
        return;
    }
    //TODO: modify the content below to include the privacy policy for the plugin.
    $content = '<p class="privacy-policy-tutorial">' . __( 'Some introductory content for the suggested text.', 'companies-house-integrator' ) . '</p>'
            . '<strong class="privacy-policy-tutorial">' . __( 'Suggested Text:', 'companies-house-integrator' ) . '</strong> '
            . sprintf(
                __( 'When you leave a comment on this site, we send your name, email address, IP address and comment text to example.com. Example.com does not retain your personal data. The example.com privacy policy is <a href="%1$s" target="_blank">here</a>.', 'companies-house-integrator' ),
                'https://example.com/privacy-policy'
            );
    wp_add_privacy_policy_content( 'companies-house-integrator', wp_kses_post( wpautop( $content, false ) ) );
}
        

2) Hook the privacy policy function to the Wordpress's admin initialization action.


add_action( 'admin_init', 'companies-house-integrator_add_privacy_policy_content' );
        

        


Disclaimer: The sample code provided above is only for reference and does not guarantee GDPR compliance. The recommended list of data to delete/export may not be comprehensive. 
        
Done.
