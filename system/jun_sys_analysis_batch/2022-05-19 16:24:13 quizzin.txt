Timeout in resolving values
Timeout in running neo4j query
Running Main.py on quizzin

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.576704.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:00.907485.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 0 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.277555.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 0 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.513684.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 229 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:00.812223.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 0 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.588351.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.105226.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 97 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:02.007771.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 2074
Added 1748 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 2256
Added 182 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.312830.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/quizzin/options.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/quizzin/question_form.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/quizzin/question.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/quizzin/quiz_action.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/quizzin/quiz_form.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/quizzin/quiz.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/quizzin/quizzin.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/quizzin/show_quiz.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/quizzin/wpframe.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.831346.

1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
2074 PHP_REACHES edges created
182 PHP_REACHES edges created
2256 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 790 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.471832.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:03.284430.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 91 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:03.753712.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 20 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.176967.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.215211.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:01.082978.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.008193.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.041331.

111 PHP_REACHES edges created
111 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 91 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.129983.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
21 SQL operations to process.
UPDATE $wpdbquiz_question SET question=$_REQUEST_content, explanation=%s WHERE ID=%d
UPDATE $wpdbquiz_question SET question=$_REQUEST_content, explanation=$_REQUEST_explanation WHERE ID=%d
UPDATE $wpdbquiz_question SET question=$_REQUEST_content, explan$_REQUEST_questionion=$_REQUEST_explanation WHERE ID=%d
UPDATE $wpdbquiz_question SET question=$_REQUEST_content, explan$_REQUEST_questionion=$_REQUEST_explanation WHERE ID=%d
SQL command (UPDATE $wpdbquiz_question SET question=$_REQUEST_content, explan$_REQUEST_questionion=$_REQUEST_explanation WHERE ID=%d) cannot be parsed correct.
DELETE FROM $wpdbquiz_answer WHERE question_id=$_REQUEST_question
DELETE FROM $wpdbquiz_answer WHERE question_id=$_REQUEST_question
SQL command (DELETE FROM $wpdbquiz_answer WHERE question_id=$_REQUEST_question) cannot be parsed correct.
INSERT INTO $wpdbquiz_question(quiz_id, question, explanation) VALUES($_REQUEST_quiz, %s, %s)
INSERT INTO $wpdbquiz_question(quiz_id, question, explanation) VALUES($_REQUEST_quiz, $_REQUEST_content, %s)
INSERT INTO $wpdbquiz_question(quiz_id, question, explanation) VALUES($_REQUE$_REQUEST_explanation_quiz, $_REQUEST_content, %s)
INSERT INTO $wpdbquiz_question(quiz_id, question, explanation) VALUES($_REQUE$_REQUEST_explanation_quiz, $_REQUEST_content, %s)
SQL command (INSERT INTO $wpdbquiz_question(quiz_id, question, explanation) VALUES($_REQUE$_REQUEST_explanation_quiz, $_REQUEST_content, %s)) cannot be parsed correct.
INSERT INTO $wpdbquiz_answer(question_id,answer,correct, sort_order) 
				VALUES($_REQUEST_question, %s, %s, %d)
INSERT INTO $wpdbquiz_answer(question_id,answer,correct, sort_order) 
				VALUES($_REQUEST_question, $answer_text, %s, %d)
INSERT INTO $wpdbquiz_answer(question_id,answer,correct1sort_order) 
				VALUES($_REQUEST_question, $answer_text, %s, %d)
INSERT INTO $wpdbquiz_answer(qu1tion_id,answer,correct1sort_order) 
				VALUES($_REQUEST_question, $answer_text, %s, %d)
INSERT INTO $wpdbquiz_answer(qu1tion_id,answer,correct1sort_order) 
				VALUES($_REQUEST_question, $answer_text, %s, %d)
SQL command (INSERT INTO $wpdbquiz_answer(qu1tion_id,answer,correct1sort_order) VALUES($_REQUEST_question, $answer_text, %s, %d)) cannot be parsed correct.
DELETE FROM $wpdbquiz_answer WHERE question_id=$_REQUEST_question
DELETE FROM $wpdbquiz_answer WHERE question_id=$_REQUEST_question
SQL command (DELETE FROM $wpdbquiz_answer WHERE question_id=$_REQUEST_question) cannot be parsed correct.
DELETE FROM $wpdbquiz_question WHERE ID=$_REQUEST_question
DELETE FROM $wpdbquiz_question WHERE ID=$_REQUEST_question
SQL command (DELETE FROM $wpdbquiz_question WHERE ID=$_REQUEST_question) cannot be parsed correct.
SELECT Q.ID,Q.question,(SELECT COUNT(*) FROM $wpdbquiz_answer WHERE question_id=Q.ID) AS answer_count
										FROM `$wpdbquiz_question` AS Q
										WHERE Q.quiz_id=$_REQUEST_quiz ORDER BY Q.ID
SQL command (SELECT Q.ID,Q.question,(SELECT COUNT(*) FROM $wpdbquiz_answer WHERE question_id=Q.ID) AS answer_count FROM `$wpdbquiz_question` AS Q WHERE Q.quiz_id=$_REQUEST_quiz ORDER BY Q.ID) cannot be parsed correct.
SELECT question, explanation FROM $wpdbquiz_question WHERE ID=$_REQUEST_question
SELECT question, explanation FROM $wpdbquiz_question WHERE ID=$_REQUEST_question
SQL command (SELECT question, explanation FROM $wpdbquiz_question WHERE ID=$_REQUEST_question) cannot be parsed correct.
SELECT answer,correct FROM $wpdbquiz_answer WHERE question_id=$_REQUEST_question ORDER BY sort_order
SELECT answer,correct FROM $wpdbquiz_answer WHERE question_id=$_REQUEST_question ORDER BY sort_order
SQL command (SELECT answer,correct FROM $wpdbquiz_answer WHERE question_id=$_REQUEST_question ORDER BY sort_order) cannot be parsed correct.
DELETE FROM $wpdbquiz_quiz WHERE ID='$_REQUEST_quiz'
SQL command (DELETE FROM $wpdbquiz_quiz WHERE ID='$_REQUEST_quiz') cannot be parsed correct.
DELETE FROM $wpdbquiz_answer WHERE question_id=(SELECT ID FROM $wpdbquiz_question WHERE quiz_id='$_REQUEST_quiz')
SQL command (DELETE FROM $wpdbquiz_answer WHERE question_id=(SELECT ID FROM $wpdbquiz_question WHERE quiz_id='$_REQUEST_quiz')) cannot be parsed correct.
DELETE FROM $wpdbquiz_question WHERE quiz_id='$_REQUEST_quiz'
SQL command (DELETE FROM $wpdbquiz_question WHERE quiz_id='$_REQUEST_quiz') cannot be parsed correct.
SELECT Q.ID,Q.name,Q.added_on,(SELECT COUNT(*) FROM $wpdbquiz_question WHERE quiz_id=Q.ID) AS question_count
									FROM `$wpdbquiz_quiz` AS Q 
SQL command (SELECT Q.ID,Q.name,Q.added_on,(SELECT COUNT(*) FROM $wpdbquiz_question WHERE quiz_id=Q.ID) AS question_count FROM `$wpdbquiz_quiz` AS Q ) cannot be parsed correct.
UPDATE $wpdbquiz_quiz SET name=$_REQUEST_name, description=%s,final_screen=%s WHERE ID=%d
UPDATE $wpdbquiz_quiz SET name=$_REQUEST_name, description=$_REQUEST_description,final_screen=%s WHERE ID=%d
UPDATE $wpdbquiz_quiz SET name=$_REQUEST_name, description=$_REQUEST_description,f$_REQUEST_contental_screen=%s WHERE ID=%d
UPDATE $wpdbquiz_quiz SET name=$_REQUES$_REQUEST_quizname, description=$_REQUEST_description,f$_REQUEST_contental_screen=%s WHERE ID=%d
UPDATE $wpdbquiz_quiz SET name=$_REQUES$_REQUEST_quizname, description=$_REQUEST_description,f$_REQUEST_contental_screen=%s WHERE ID=%d
SQL command (UPDATE $wpdbquiz_quiz SET name=$_REQUES$_REQUEST_quizname, description=$_REQUEST_description,f$_REQUEST_contental_screen=%s WHERE ID=%d) cannot be parsed correct.
INSERT INTO $wpdbquiz_quiz(name,description,final_screen,added_on) VALUES($_REQUEST_name,%s,%s,NOW())
INSERT INTO $wpdbquiz_quiz(name,description,final_screen,added_on) VALUES($_REQUEST_name,$_REQUEST_description,%s,NOW())
INSERT INTO $wpdbquiz_quiz(name,$_REQUEST_contentscription,final_screen,added_on) VALUES($_REQUEST_name,$_REQUEST_description,%s,NOW())
INSERT INTO $wpdbquiz_quiz(name,$_REQUEST_contentscription,final_screen,added_on) VALUES($_REQUEST_name,$_REQUEST_description,%s,NOW())
SQL command (INSERT INTO $wpdbquiz_quiz(name,$_REQUEST_contentscription,final_screen,added_on) VALUES($_REQUEST_name,$_REQUEST_description,%s,NOW())) cannot be parsed correct.
SELECT name,description,final_screen FROM $wpdbquiz_quiz WHERE ID=$_REQUEST_quiz
SELECT name,description,final_screen FROM $wpdbquiz_quiz WHERE ID=$_REQUEST_quiz
SQL command (SELECT name,description,final_screen FROM $wpdbquiz_quiz WHERE ID=$_REQUEST_quiz) cannot be parsed correct.
CREATE TABLE $wpdbquiz_answer (
					ID int(11) unsigned NOT NULL auto_increment,
					question_id int(11) unsigned NOT NULL,
					answer varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
					correct enum('0','1') NOT NULL default '0',
					sort_order int(3) NOT NULL default 0,
					PRIMARY KEY  (ID)
				);
				CREATE TABLE $wpdbquiz_question (
					ID int(11) unsigned NOT NULL auto_increment,
					quiz_id int(11) unsigned NOT NULL,
					question mediumtext CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
					sort_order int(3) NOT NULL default 0,
					explanation mediumtext CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
					PRIMARY KEY  (ID),
					KEY quiz_id (quiz_id)
				);
				CREATE TABLE $wpdbquiz_quiz (
					ID int(11) unsigned NOT NULL auto_increment,
					name varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
					description mediumtext CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
					final_screen mediumtext CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
					added_on datetime NOT NULL,
					PRIMARY KEY  (ID)
				);
SQL command (CREATE TABLE $wpdbquiz_answer ( ID int(11) unsigned NOT NULL auto_increment, question_id int(11) unsigned NOT NULL, answer varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL, correct enum('0','1') NOT NULL default '0', sort_order int(3) NOT NULL default 0, PRIMARY KEY (ID) ); CREATE TABLE $wpdbquiz_question ( ID int(11) unsigned NOT NULL auto_increment, quiz_id int(11) unsigned NOT NULL, question mediumtext CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL, sort_order int(3) NOT NULL default 0, explanation mediumtext CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL, PRIMARY KEY (ID), KEY quiz_id (quiz_id) ); CREATE TABLE $wpdbquiz_quiz ( ID int(11) unsigned NOT NULL auto_increment, name varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL, description mediumtext CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL, final_screen mediumtext CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL, added_on datetime NOT NULL, PRIMARY KEY (ID) );) cannot be parsed correct.
SELECT ID,question,explanation FROM $wpdbquiz_question WHERE quiz_id=$quiz_id ORDER BY ID
SELECT ID,question,explanation FROM $wpdbquiz_question WHERE quiz_id=$quiz_id ORDER BY ID
SQL command (SELECT ID,question,explanation FROM $wpdbquiz_question WHERE quiz_id=$quiz_id ORDER BY ID) cannot be parsed correct.
SELECT ID,answer,correct FROM $wpdbquiz_answer WHERE question_id=$ques ORDER BY sort_order
SQL command (SELECT ID,answer,correct FROM $wpdbquiz_answer WHERE question_id=$ques ORDER BY sort_order) cannot be parsed correct.
SELECT name,final_screen, description FROM $wpdbquiz_quiz WHERE ID=$quiz_id
SELECT name,final_screen, description FROM $wpdbquiz_quiz WHERE ID=$quiz_id
SQL command (SELECT name,final_screen, description FROM $wpdbquiz_quiz WHERE ID=$quiz_id) cannot be parsed correct.
SELECT ID,answer,correct FROM $wpdbquiz_answer WHERE question_id=$ques ORDER BY sort_order
SQL command (SELECT ID,answer,correct FROM $wpdbquiz_answer WHERE question_id=$ques ORDER BY sort_order) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [281, 310, 339, 432, 486, 507, 633, 851, 875, 1242, 1259, 1281, 1364, 1593, 1637, 1728, 2330, 2429, 2560, 2878, 3081]
Added 0 SQL nodes. 0 out of 21 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:07.827521.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'stripslashes($all_answers[$i - 1]->answer)'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'stripslashes($question->explanation)'' cannot be parsed correct.
HTML code '$'$_REQUEST_quiz'' cannot be parsed correct.
HTML code '$'stripslashes($_REQUEST["question"])'' cannot be parsed correct.
HTML code '$'edit'' cannot be parsed correct.
HTML code '$'$_REQUEST_quiz'' cannot be parsed correct.
HTML code '$'$quiz'' cannot be parsed correct.
HTML code '$'stripslashes($quiz->name)'' cannot be parsed correct.
HTML code '$'$quiz'' cannot be parsed correct.
HTML code '$'date(get_option("date_format") . " " . get_option("time_format"), strtotime($quiz->added_on))'' cannot be parsed correct.
HTML code '$'$quiz'' cannot be parsed correct.
HTML code '$'$quiz'' cannot be parsed correct.
HTML code '$'$quiz'' cannot be parsed correct.
HTML code '$'addslashes(t("You are about to delete this quiz? This will delete all the questions and answers within this quiz. Press \\'OK\\' to delete and \\'Cancel\\' to stop."))'' cannot be parsed correct.
HTML code '$'$option'' cannot be parsed correct.
HTML code '$'$option'' cannot be parsed correct.
HTML code '$'$option'' cannot be parsed correct.
HTML code '$'$GLOBALS_wpframe_plugin_folder'' cannot be parsed correct.
HTML code '$'stripslashes($dquiz->name)'' cannot be parsed correct.
HTML code '$'stripslashes($dquiz->description)'' cannot be parsed correct.
HTML code '$'postdivrichpostdiv'' cannot be parsed correct.
HTML code '$'edit'' cannot be parsed correct.
HTML code '$'$_REQUEST_quiz'' cannot be parsed correct.
HTML code '$'$quiz_id'' cannot be parsed correct.
HTML code '$'<div class=\'quizzin-question\' id=\'question-1\'>'' cannot be parsed correct.
HTML code '$'<div class=\'question-content\'>stripslashes($ques->question)</div><br />'' cannot be parsed correct.
HTML code '$'<input type=\'hidden\' name=\'question_id[]\' value=\'$ques\' />'' cannot be parsed correct.
HTML code '$'t("Manage Questions in ")stripslashes($wpdb->get_var($wpdb->prepare("SELECT name FROM "$wpdb->prefix"quiz_quiz WHERE ID=%d", $_REQUEST["quiz"])))'' cannot be parsed correct.
HTML code '$'$_REQUEST_quiz'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'stripslashes($question->question)'' cannot be parsed correct.
HTML code '$'$question'' cannot be parsed correct.
HTML code '$'$question'' cannot be parsed correct.
HTML code '$'$_REQUEST_quiz'' cannot be parsed correct.
HTML code '$'$question'' cannot be parsed correct.
HTML code '$'$_REQUEST_quiz'' cannot be parsed correct.
HTML code '$'addslashes(t("You are about to delete this question. This will delete the answers to this question. Press \\'OK\\' to delete and \\'Cancel\\' to stop."))'' cannot be parsed correct.
HTML code '$'$bgcolor'' cannot be parsed correct.
HTML code '$'$_REQUEST_quiz'' cannot be parsed correct.
HTML code '$'t(ucfirst($action) . " Question")'' cannot be parsed correct.
HTML code '$'count($all_answers)'' cannot be parsed correct.
HTML code '$'$_REQUEST_quiz'' cannot be parsed correct.
HTML code '$'postdivrichpostdiv'' cannot be parsed correct.
HTML code '$'$GLOBALS_wpframe_plugin_folder'' cannot be parsed correct.
HTML code '$'$GLOBALS_wpframe_wordpress'' cannot be parsed correct.
HTML code '$'$GLOBALS_wpframe_plugin_folder'' cannot be parsed correct.
HTML code '$'<input type=\'radio\' name=\'answer-$ques\' id=\'answer-id-$ans\' class=\'answer answer-1 wrong-answer-label\' value=\'$ans\' />'' cannot be parsed correct.
HTML code '$'<label for=\'answer-id-$ans\' id=\'answer-label-$ans\' class=\'wrong-answer-label answer label-1\'><span>stripslashes($ans->answer)</span></label><br />'' cannot be parsed correct.
HTML code '$'$quiz_id'' cannot be parsed correct.
HTML code '$'</span></h3>
<div class="inside">
'' cannot be parsed correct.
HTML code '$'</span></h3>
<div class="inside">

'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'" /></p>'' cannot be parsed correct.
HTML code '$'</span></h3>
<div class="inside">

<textarea name="explanation" rows="5" cols="50">'' cannot be parsed correct.
HTML code '$'</textarea>
<br />
<p>'' cannot be parsed correct.
HTML code '$'</p>
</div>

</div>
</div>


<p class="submit">
<input type="hidden" name="quiz" value="'' cannot be parsed correct.
HTML code '$'" />
<input type="hidden" name="question" value="'' cannot be parsed correct.
HTML code '$'" />
<input type="hidden" id="user-id" name="user_ID" value="'' cannot be parsed correct.
HTML code '$'" />
<input type="hidden" name="action" value="'' cannot be parsed correct.
HTML code '$'" /> 
<span id="autosave"></span>
<input type="submit" name="submit" value="'' cannot be parsed correct.
HTML code '$'" style="font-weight: bold;" />
</p>
<a href="edit.php?page=quizzin/question.php&amp;quiz='' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</a>
</div>
</form>

</div>
'' cannot be parsed correct.
HTML code '$'</div></th>
		<th scope="col">'' cannot be parsed correct.
HTML code '$'</th>
		<th scope="col">'' cannot be parsed correct.
HTML code '$'</th>
		<th scope="col">'' cannot be parsed correct.
HTML code '$'</th>
		<th scope="col" colspan="3">'' cannot be parsed correct.
HTML code '$'</th>
	</tr>
	</thead>

	<tbody id="the-list">
'' cannot be parsed correct.
HTML code '$'</th>
		<td>'' cannot be parsed correct.
HTML code '$'</td>
		<td>'' cannot be parsed correct.
HTML code '$'</td>
		<td>'' cannot be parsed correct.
HTML code '$'</td>
		<td><a href=\'edit.php?page=quizzin/question.php&amp;quiz='' cannot be parsed correct.
HTML code '$'\' class=\'edit\'>'' cannot be parsed correct.
HTML code '$'</a></td>
		<td><a href=\'edit.php?page=quizzin/quiz_form.php&amp;quiz='' cannot be parsed correct.
HTML code '$'&amp;action=edit\' class=\'edit\'>'' cannot be parsed correct.
HTML code '$'\' class=\'delete\' onclick="return confirm('' cannot be parsed correct.
HTML code '$'\');"'' cannot be parsed correct.
HTML code '$'</a></td>
		</tr>
'' cannot be parsed correct.
HTML code '$'</td>
	</tr>
'' cannot be parsed correct.
HTML code '$'</span></h3>
<div class="inside">
<input type="radio" name="show_answers" '' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'</label><br />
<input type="radio" name="show_answers" '' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'</label><br />
<input type="radio" name="show_answers" '' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'</label><br />
</div>
</div>

<p class="submit">
<input type="hidden" id="user-id" name="user_ID" value="'' cannot be parsed correct.
HTML code '$'" />
<span id="autosave"></span>
<input type="submit" name="submit" value="'' cannot be parsed correct.
HTML code '$'" style="font-weight: bold;" />
</p>

</div>
</div>
</form>

</div>

'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</label><br />

'' cannot be parsed correct.
HTML code '$'</a>
</div>
'' cannot be parsed correct.
HTML code '$'/quiz_action.php" method="post" id="post">
<div id="poststuff">

<div class="postbox" id="titlediv">
<h3 class="hndle"><span>'' cannot be parsed correct.
HTML code '$'</span></h3>
<div class="inside">
<input type=\'text\' name=\'name\' id="title" value=\''' cannot be parsed correct.
HTML code '$'</span></h3>
<div class="inside">
<textarea name=\'description\' rows=\'5\' cols=\'50\' style=\'width:100%\'>'' cannot be parsed correct.
HTML code '$'</span></h3>
<div class="inside">
'' cannot be parsed correct.
HTML code '$'</strong></p>
<table>
<tr><th style="text-align:left;">'' cannot be parsed correct.
HTML code '$'</th><th style="text-align:left;">'' cannot be parsed correct.
HTML code '$'</th></tr>
<tr><td>%%SCORE%%</td><td>'' cannot be parsed correct.
HTML code '$'</td></tr>
<tr><td>%%TOTAL%%</td><td>'' cannot be parsed correct.
HTML code '$'</td></tr>
<tr><td>%%PERCENTAGE%%</td><td>'' cannot be parsed correct.
HTML code '$'</td></tr>
<tr><td>%%GRADE%%</td><td>'' cannot be parsed correct.
HTML code '$'.</td></tr>
<tr><td>%%WRONG_ANSWERS%%</td><td>'' cannot be parsed correct.
HTML code '$'</td></tr>
<tr><td>%%RATING%%</td><td>'' cannot be parsed correct.
HTML code '$'</td></tr>
<tr><td>%%QUIZ_NAME%%</td><td>'' cannot be parsed correct.
HTML code '$'</td></tr>
<tr><td>%%DESCRIPTION%%</td><td>'' cannot be parsed correct.
HTML code '$'</td></tr>
</table>
</div>
</div>


'' cannot be parsed correct.
HTML code '$'" />
<span id="autosave"></span>
<input type="submit" name="submit" value="'' cannot be parsed correct.
HTML code '$'" style="font-weight: bold;" tabindex="4" />
</p>

</div>
</form>

</div>
'' cannot be parsed correct.
HTML code '$'single-page-quiz'' cannot be parsed correct.
HTML code '$'">'' cannot be parsed correct.
HTML code '$' [QUIZZIN '' cannot be parsed correct.
HTML code '$'] '' cannot be parsed correct.
HTML code '$'</p>

<table class="widefat">
	<thead>
	<tr>
		<th scope="col"><div style="text-align: center;">#</div></th>
		<th scope="col">'' cannot be parsed correct.
HTML code '$'</th>
		<th scope="col">'' cannot be parsed correct.
HTML code '$'</th>
		<th scope="col" colspan="3">'' cannot be parsed correct.
HTML code '$'</th>
	</tr>
	</thead>

	<tbody id="the-list">
'' cannot be parsed correct.
HTML code '$'</th>
		<td>'' cannot be parsed correct.
HTML code '$'</td>
		<td>'' cannot be parsed correct.
HTML code '$'</td>
		<td><a href=\'edit.php?page=quizzin/question_form.php&amp;question='' cannot be parsed correct.
HTML code '$'&amp;action=edit&amp;quiz='' cannot be parsed correct.
HTML code '$'\' class=\'edit\'>'' cannot be parsed correct.
HTML code '$'&amp;quiz='' cannot be parsed correct.
HTML code '$'\' class=\'delete\' onclick="return confirm('' cannot be parsed correct.
HTML code '$'\');"'' cannot be parsed correct.
HTML code '$'</a></td>
		</tr>
'' cannot be parsed correct.
HTML code '$'</td>
	</tr>
'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</a>
</div>
'' cannot be parsed correct.
HTML code '$';

function newAnswer() {
	answer_count++;
	var para = document.createElement("p");
	var textarea = document.createElement("textarea");
	textarea.setAttribute("name", "answer[]");
	textarea.setAttribute("rows", "3");
	textarea.setAttribute("cols", "50");
	para.appendChild(textarea);
	var label = document.createElement("label");
	label.setAttribute("for", "correct_answer_" + answer_count);
	label.appendChild(document.createTextNode("'' cannot be parsed correct.
HTML code '$'/style.css" />
<script type="text/javascript" src="'' cannot be parsed correct.
HTML code '$'/wp-includes/js/jquery/jquery.js"></script>
<script type="text/javascript" src="'' cannot be parsed correct.
HTML code '$'/script.js"></script>'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'"  /><br />'' cannot be parsed correct.
HTML code '$' &gt;"  /><br />'' cannot be parsed correct.
HTML code '$'"  />
<input type="hidden" name="quiz_id" value="'' cannot be parsed correct.
HTML code '$'" />
</form>
</div>
'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:09.811346.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.057170.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 2 do_action/apply_filters calls and 4 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.416830.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbaseDetector
### Start running FrontBaseDetector
### Finish running FileProDetector
### Start running HashDetector
### Finish running FirebirdInterBaseDetector
### Start running IBMDb2Detector
### Finish running DbplusDetector
### Start running InformixDetector
### Finish running CubridDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running Oci8Detector
### Start running OpenSSLDetector
### Finish running MongoDbDetector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running HashDetector
### Start running PhpCurlDetector
### Finish running ArrayElementDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PasswordHashingDetector
### Start running PHPRetrievalDetector
### Finish running OpenSSLDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPIncludedDetector
### Start running PhpVarDetector
### Finish running PhpCurlDetector
### Start running PostgreSQLDetector
### Finish running PostgreSQLDetector
### Start running PropertyDetector
### Finish running PHPStorageDetector
### Start running Sqlite3Detector
### Finish running PHPRetrievalDetector
### Start running SqliteDetector
### Finish running SqliteDetector
### Start running SqlServerDetector
### Finish running PropertyDetector
### Start running SybaseDetector
### Finish running SybaseDetector
### Start running TokyoTyrantDetector
### Finish running Sqlite3Detector
### Start running UserInputDetector
### Finish running TokyoTyrantDetector
### Start running VariableDetector
### Finish running maxdbDetector
### Start running WordpressHashingFnDetector
### Finish running MySQLiDetector
### Start running WordPressRemoteDetector
### Finish running SqlServerDetector
### Start running WordPressRetrievalDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressStorageDetector
### Finish running WordPressRemoteDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running VariableDetector
### Start running GenericEncryptionDetector
### Finish running GenericDatabaseUsageDetector
### Start running DeletionDetector
### Finish running GenericEncryptionDetector
### Start running UninstallDetector
### Finish running PhpVarDetector
### Finish running UserInputDetector
### Finish running WordPressStorageDetector
### Finish running WordPressRetrievalDetector
### Finish running DeletionDetector
### Finish running UninstallDetector
### Finished running detectors
options.php:12
  - RETRIEVAL call to get_option("quizzin_show_answers") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
options.php:47
  - RETRIEVAL call to get_option("quizzin_" . $option) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
quiz.php:49
  - RETRIEVAL call to get_option("date_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
quiz.php:49
  - RETRIEVAL call to get_option("time_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
quizzin.php:69
  - RETRIEVAL call to get_option("quizzin_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
quizzin.php:102
  - RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).
show_quiz.php:12
  - RETRIEVAL call to get_option("quizzin_show_answers") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
show_quiz.php:77
  - RETRIEVAL call to get_option("quizzin_single_page") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wpframe.php:7
  - RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wpframe.php:8
  - RETRIEVAL call to get_option("siteurl") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option 

options.php:7
  - STORAGE call to update_option("quizzin_" . $opt, $_POST[$opt]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
options.php:8
  - STORAGE call to update_option("quizzin_" . $opt, 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
quizzin.php:71
  - STORAGE call to add_option("quizzin_show_answers", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
quizzin.php:72
  - STORAGE call to add_option("quizzin_single_page", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
quizzin.php:103
  - STORAGE call to update_option("quizzin_db_version", $database_version) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option 

By data type:
none
	WordPressRetrievalDetector.dbDelta($sql) - set()
option
	WordPressStorageDetector.add_option("quizzin_single_page", 0) - {'option'}
	WordPressStorageDetector.update_option("quizzin_db_version", $database_version) - {'option'}
	WordPressRetrievalDetector.get_option("quizzin_" . $option) - {'option'}
	WordPressRetrievalDetector.get_option("date_format") - {'option'}
	WordPressRetrievalDetector.get_option("siteurl") - {'option'}
	WordPressRetrievalDetector.get_option("quizzin_db_version") - {'option'}
	WordPressRetrievalDetector.get_option("quizzin_single_page") - {'option'}
	WordPressRetrievalDetector.get_option("home") - {'option'}
	WordPressStorageDetector.update_option("quizzin_" . $opt, $_POST[$opt]) - {'option'}
	WordPressStorageDetector.update_option("quizzin_" . $opt, 0) - {'option'}
	WordPressRetrievalDetector.get_option("time_format") - {'option'}
	WordPressRetrievalDetector.get_option("quizzin_show_answers") - {'option'}
	WordPressRetrievalDetector.get_option("quizzin_show_answers") - {'option'}
	WordPressStorageDetector.add_option("quizzin_show_answers", 1) - {'option'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:07.629522.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 45 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.128123.

45 STORE_REACHES edges created
45 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
In total, tainted 0 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
In total, tainted 0 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:00.005785.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:00:48.447558!
RETRIEVAL call to get_option("quizzin_show_answers") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("quizzin_" . $option) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("date_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("time_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to get_option("quizzin_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("quizzin_show_answers") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("quizzin_single_page") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("siteurl") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
STORAGE call to update_option("quizzin_" . $opt, $_POST[$opt]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("quizzin_" . $opt, 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("quizzin_db_version", $database_version) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("quizzin_show_answers", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("quizzin_single_page", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found no personal data in the plugin. No analysis needed. 

[main] Complaint? True 

No findings
