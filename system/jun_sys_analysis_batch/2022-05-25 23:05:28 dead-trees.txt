Timeout in resolving values
Timeout in running neo4j query
Running Main.py on dead-trees

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.447483.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:00.981248.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 13 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.364684.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 0 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.463212.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 408 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:00.778724.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 5 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.617803.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.096269.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 164 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:02.315760.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 2896
Added 2306 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 2896
Added 0 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.084188.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/dead-trees/deadtrees.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/dead-trees/template_tags.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/dead-trees/admin/bookbox_metabox_contents.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/dead-trees/admin/options.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/dead-trees/template/deadtree-bookbox.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.552972.

421 PHP_REACHES edges created
5 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
2470 PHP_REACHES edges created
2896 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 982 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.047206.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.548904.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 43 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:02.368038.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 53 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.165783.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.068937.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.504042.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.026239.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.031332.

96 PHP_REACHES edges created
96 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 70 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.120017.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
1 SQL operations to process.
post_type
SQL command (post_type) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [4506]
Added 0 SQL nodes. 0 out of 1 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:00.963602.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'<input type="text" name="dt_amazon_affiliate_ids[$args_site]" value="get_option("dt_amazon_affiliate_ids")_$args_site" /'' cannot be parsed correct.
HTML code '$'<p>These are the affiliate IDs that will be used to generate affiliate links to Amazon.</p>'' cannot be parsed correct.
HTML code '$'<p>Set the default size to display book covers at, (covers will not be cropped in this size).</p>'' cannot be parsed correct.
HTML code '$'<p>If you prefer Amazon\'s cover art, and have access to the API, check this box to try getting cover art from Amazon before any other source. Otherwise, uncheck this box and OpenLibrary or Librarything will be tried first.<p>'' cannot be parsed correct.
HTML code '$'<input type="text" name="dt_default_cover_size[$dimension]" value="get_option("dt_default_cover_size")_$dimension" /'' cannot be parsed correct.
HTML code '$'<label for="dt_amazon_as_first_cover_source"><input type="checkbox"
			name="dt_amazon_as_first_cover_source" id="dt_amazon_as_first_cover_source" 
			value="yes">Try to get cover art from Amazon first</label>'' cannot be parsed correct.
HTML code '$'$deadtree->get_raw_bookbox_info()_isbn'' cannot be parsed correct.
HTML code '$'$deadtree->get_raw_bookbox_info()_asin_amazon.com'' cannot be parsed correct.
HTML code '$'sprintf(__("The main %s for the book. This is used as a default for all Amazon sites.", "deadtree"), $asin_html)'' cannot be parsed correct.
HTML code '$'$deadtree->get_raw_bookbox_info()_asin_amazon.ca'' cannot be parsed correct.
HTML code '$'sprintf(__("The %s to use when sending readers Amazon.ca, if you want it to be different from Amazon.com", "deadtree"), $asin_html)'' cannot be parsed correct.
HTML code '$'$deadtree->get_raw_bookbox_info()_asin_amazon.co.uk'' cannot be parsed correct.
HTML code '$'sprintf(__("The %s to use when sending readers Amazon.co, if you want it to be different from Amazon.com", "deadtree"), $asin_html)'' cannot be parsed correct.
HTML code '$'$deadtree->get_raw_bookbox_info()_comment'' cannot be parsed correct.
HTML code '$'wp_get_attachment_image($rawdata["cover_image_attachment_id"], "dt_book_cover_thumb")'' cannot be parsed correct.
HTML code '$'<p>Enter your credentials for the Amazon.com Product Advertising API here.  Note that these credentials should be for Amazon.com, even if you are planning on sending your affiliate traffic to another Amazon site.</p>'' cannot be parsed correct.
HTML code '$'<input type="text" name="dt_amazon_api_creds[$field]" value="get_option("dt_amazon_api_creds", [])_$field" '' cannot be parsed correct.
HTML code '$'<p>This is the API key from LibraryThing that lets you fetch book covers from their database.</p>'' cannot be parsed correct.
HTML code '$'<input type="text" name="dt_librarything_api_key" id="dt_librarything_api_key" value="get_option("dt_librarything_api_key", "")"'' cannot be parsed correct.
HTML code '$'<input type="checkbox" name="dt_default_to_dev_affiliate" value="yes">'' cannot be parsed correct.
HTML code '$'<option value=$key selected="selected">$description</option>'' cannot be parsed correct.
HTML code '$'<input type="checkbox" name="dt_send_bookbox_css" value="yes" />'' cannot be parsed correct.
HTML code '$'<input type="checkbox" name="dt_auto_add_bookbox" value="yes" />'' cannot be parsed correct.
HTML code '$'dt_get_bookbox_image()'' cannot be parsed correct.
HTML code '$'<p class="dt_bookbox_extra_comment">dt_get_bookbox_comment()</p>'' cannot be parsed correct.
HTML code '$'dt_get_amazon_url("amazon.com")'' cannot be parsed correct.
HTML code '$'dt_get_amazon_url("amazon.ca")'' cannot be parsed correct.
HTML code '$'dt_get_amazon_url("amazon.co.uk")'' cannot be parsed correct.
HTML code '$'</select>'' cannot be parsed correct.
HTML code '$'

'' cannot be parsed correct.
HTML code '$'
===================
'' cannot be parsed correct.
HTML code '$'<p>'' cannot be parsed correct.
HTML code '$'</p>'' cannot be parsed correct.
HTML code '$'<select name="dt_include_books" id="dt_include_books">'' cannot be parsed correct.
HTML code '$'</select>'' cannot be parsed correct.
HTML code '$'<p>'' cannot be parsed correct.
HTML code '$'</p><p>'' cannot be parsed correct.
HTML code '$'</p>'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:06.554002.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.075993.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 0 do_action/apply_filters calls and 9 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.637742.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbplusDetector
### Start running FrontBaseDetector
### Finish running FileProDetector
### Start running HashDetector
### Finish running DbaseDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running FirebirdInterBaseDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running IngresDetector
### Start running MongoDbDetector
### Finish running InformixDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running MySQLDetector
### Start running MySQLiDetector
### Finish running MsqlDetector
### Start running Oci8Detector
### Finish running Oci8Detector
### Start running OpenSSLDetector
### Finish running MongoDbDetector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running ArrayElementDetector
### Start running PhpCurlDetector
### Finish running HashDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PasswordHashingDetector
### Start running PHPRetrievalDetector
### Finish running PhpCurlDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPIncludedDetector
### Start running PhpVarDetector
### Finish running OpenSSLDetector
### Start running PostgreSQLDetector
### Finish running PhpVarDetector
### Start running PropertyDetector
### Finish running PostgreSQLDetector
### Start running Sqlite3Detector
### Finish running PHPRetrievalDetector
### Start running SqliteDetector
### Finish running SqliteDetector
### Start running SqlServerDetector
### Finish running Sqlite3Detector
### Start running SybaseDetector
### Finish running PropertyDetector
### Start running TokyoTyrantDetector
### Finish running SybaseDetector
### Start running UserInputDetector
### Finish running maxdbDetector
### Start running VariableDetector
### Finish running MySQLiDetector
### Start running WordpressHashingFnDetector
### Finish running TokyoTyrantDetector
### Start running WordPressRemoteDetector
### Finish running SqlServerDetector
### Start running WordPressRetrievalDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressStorageDetector
### Finish running PHPStorageDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running VariableDetector
### Start running GenericEncryptionDetector
### Finish running UserInputDetector
### Start running DeletionDetector
### Finish running GenericDatabaseUsageDetector
### Start running UninstallDetector
### Finish running GenericEncryptionDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running WordPressStorageDetector
### Finish running WordPressRetrievalDetector
### Finish running WordPressRemoteDetector
### Finished running detectors
deadtrees.php:145
  - hash_hmac called with approved hash algorithm sha256. 

deadtrees.php:752
  - STORAGE call to file_put_contents($filename, $cover["body"]).
  - Data types: file 

deadtrees.php:150
  - API call to wp_remote_request($url). Passed arguments: 0: $url (string). Returns (array|WP_Error).
  - Data types: remote
deadtrees.php:738
  - API call to wp_remote_get($url). Passed arguments: 0: $url (string). Returns (array|WP_Error).
  - Data types: remote 

deadtrees.php:69
  - RETRIEVAL call to get_option("dt_default_to_dev_affiliate", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
deadtrees.php:86
  - RETRIEVAL call to get_option("dt_amazon_api_creds", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
deadtrees.php:188
  - RETRIEVAL call to get_option("dt_librarything_api_key", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
deadtrees.php:212
  - RETRIEVAL call to get_option("dt_amazon_affiliate_ids") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
deadtrees.php:256
  - RETRIEVAL call to get_option("dt_default_cover_size") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
deadtrees.php:285
  - RETRIEVAL call to get_option("dt_default_cover_source") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
deadtrees.php:286
  - RETRIEVAL call to get_option("dt_amazon_as_first_cover_source", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
deadtrees.php:331
  - RETRIEVAL call to get_option("dt_amazon_api_creds", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
deadtrees.php:354
  - RETRIEVAL call to get_option("dt_librarything_api_key", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
deadtrees.php:363
  - RETRIEVAL call to get_option("dt_default_to_dev_affiliate", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
deadtrees.php:390
  - RETRIEVAL call to get_option("dt_include_books") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
deadtrees.php:424
  - RETRIEVAL call to get_option("dt_send_bookbox_css") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
deadtrees.php:435
  - RETRIEVAL call to get_option("dt_auto_add_bookbox", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
deadtrees.php:594
  - RETRIEVAL call to get_option("dt_default_cover_size") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
deadtrees.php:624
  - RETRIEVAL call to get_post_meta($post_id, "_dt_cover_post_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
deadtrees.php:785
  - RETRIEVAL call to get_option("dt_amazon_as_first_cover_source", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
deadtrees.php:834
  - RETRIEVAL call to get_post_meta($post_id, "_dt_isbn", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
deadtrees.php:835
  - RETRIEVAL call to get_post_meta($post_id, "_dt_asin_amazon.com", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
deadtrees.php:836
  - RETRIEVAL call to get_post_meta($post_id, "_dt_asin_amazon.ca", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
deadtrees.php:837
  - RETRIEVAL call to get_post_meta($post_id, "_dt_asin_amazon.co.uk", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
deadtrees.php:838
  - RETRIEVAL call to get_post_meta($post_id, "_dt_bookbox_comment", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
deadtrees.php:858
  - RETRIEVAL call to get_option("dt_amazon_affiliate_ids") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
deadtrees.php:864
  - RETRIEVAL call to get_option("dt_default_to_dev_affiliate", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
deadtrees.php:965
  - RETRIEVAL call to get_option("dt_include_books") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
deadtrees.php:1007
  - RETRIEVAL call to get_option("dt_send_bookbox_css", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
deadtrees.php:1011
  - RETRIEVAL call to get_option("dt_auto_add_bookbox", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option 

deadtrees.php:640
  - STORAGE call to update_post_meta($post_id, "_dt_cover_post_id", $attachment_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
deadtrees.php:655
  - STORAGE call to delete_post_meta($post_id, "_dt_cover_post_id") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
deadtrees.php:706
  - STORAGE call to update_post_meta($post_id, "_dt_isbn", $isbn) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
deadtrees.php:707
  - STORAGE call to update_post_meta($post_id, "_dt_asin_amazon.com", $asin_amazon_com) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
deadtrees.php:708
  - STORAGE call to update_post_meta($post_id, "_dt_asin_amazon.ca", $asin_amazon_ca) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
deadtrees.php:709
  - STORAGE call to update_post_meta($post_id, "_dt_asin_amazon.co.uk", $asin_amazon_co_uk) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
deadtrees.php:710
  - STORAGE call to update_post_meta($post_id, "_dt_bookbox_comment", $comment) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
deadtrees.php:768
  - STORAGE call to update_post_meta($post_id, "_dt_cover_source", $source) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
deadtrees.php:1028
  - STORAGE call to add_option("dt_default_cover_size", ["width" => 75, "height" => 75]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
deadtrees.php:1031
  - STORAGE call to add_option("dt_default_to_dev_affiliate", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
deadtrees.php:1034
  - STORAGE call to add_option("dt_send_bookbox_css", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
deadtrees.php:1037
  - STORAGE call to add_option("dt_auto_add_bookbox", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option 

deadtrees.php:145
  - CRYPTOGRAPHY call to hash_hmac("sha256", $stringtosign, $this->_get_aws_secret_key(), true). 

deadtrees.php:652
  - DELETION call to wp_delete_attachment($attachment_id, true) alters data types {'attachment', 'attachment_meta'}. Passed arguments: 0: $post_id (int), 1: $force_delete (bool). Returns (WP_Post|false|null).
  - Data types: attachment, attachment_meta
deadtrees.php:655
  - DELETION call to delete_post_meta($post_id, "_dt_cover_post_id") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta 

By data type:
attachment
	DeletionDetector.wp_delete_attachment($attachment_id, true) - {'attachment', 'attachment_meta'}
attachment_meta
	DeletionDetector.wp_delete_attachment($attachment_id, true) - {'attachment', 'attachment_meta'}
file
	PHPStorageDetector.file_put_contents($filename, $cover["body"]) - {'file'}
none
	HashDetector.(unknown) - set()
	GenericEncryptionDetector.hash_hmac("sha256", $stringtosign, $this->_get_aws_secret_key(), true) - set()
option
	WordPressRetrievalDetector.get_option("dt_send_bookbox_css") - {'option'}
	WordPressRetrievalDetector.get_option("dt_amazon_affiliate_ids") - {'option'}
	WordPressRetrievalDetector.get_option("dt_default_cover_size") - {'option'}
	WordPressRetrievalDetector.get_option("dt_amazon_api_creds", []) - {'option'}
	WordPressRetrievalDetector.get_option("dt_amazon_api_creds", []) - {'option'}
	WordPressRetrievalDetector.get_option("dt_librarything_api_key", "") - {'option'}
	WordPressRetrievalDetector.get_option("dt_send_bookbox_css", true) - {'option'}
	WordPressRetrievalDetector.get_option("dt_auto_add_bookbox", true) - {'option'}
	WordPressRetrievalDetector.get_option("dt_default_to_dev_affiliate", true) - {'option'}
	WordPressRetrievalDetector.get_option("dt_default_to_dev_affiliate", true) - {'option'}
	WordPressStorageDetector.add_option("dt_default_cover_size", ["width" => 75, "height" => 75]) - {'option'}
	WordPressStorageDetector.add_option("dt_default_to_dev_affiliate", true) - {'option'}
	WordPressRetrievalDetector.get_option("dt_amazon_as_first_cover_source", false) - {'option'}
	WordPressRetrievalDetector.get_option("dt_include_books") - {'option'}
	WordPressRetrievalDetector.get_option("dt_default_cover_size") - {'option'}
	WordPressStorageDetector.add_option("dt_send_bookbox_css", true) - {'option'}
	WordPressRetrievalDetector.get_option("dt_default_to_dev_affiliate", true) - {'option'}
	WordPressStorageDetector.add_option("dt_auto_add_bookbox", true) - {'option'}
	WordPressRetrievalDetector.get_option("dt_librarything_api_key", false) - {'option'}
	WordPressRetrievalDetector.get_option("dt_amazon_affiliate_ids") - {'option'}
	WordPressRetrievalDetector.get_option("dt_include_books") - {'option'}
	WordPressRetrievalDetector.get_option("dt_amazon_as_first_cover_source", false) - {'option'}
	WordPressRetrievalDetector.get_option("dt_default_cover_source") - {'option'}
	WordPressRetrievalDetector.get_option("dt_auto_add_bookbox", true) - {'option'}
post_meta
	WordPressRetrievalDetector.get_post_meta($post_id, "_dt_bookbox_comment", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_dt_asin_amazon.com", $asin_amazon_com) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "_dt_asin_amazon.co.uk", true) - {'post_meta'}
	DeletionDetector.delete_post_meta($post_id, "_dt_cover_post_id") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_dt_asin_amazon.ca", $asin_amazon_ca) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "_dt_cover_post_id", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_dt_bookbox_comment", $comment) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_dt_cover_post_id", $attachment_id) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_dt_cover_source", $source) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_dt_asin_amazon.co.uk", $asin_amazon_co_uk) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_dt_isbn", $isbn) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post_id, "_dt_cover_post_id") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "_dt_asin_amazon.ca", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "_dt_isbn", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "_dt_asin_amazon.com", true) - {'post_meta'}
remote
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:31.641577.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 128 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.304794.

128 STORE_REACHES edges created
128 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
In total, tainted 0 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 63 nodes as ENCRYPTED
In total, tainted 63 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:01.219201.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:01:04.577873!
DELETION call to wp_delete_attachment($attachment_id, true) alters data types {'attachment', 'attachment_meta'}. Passed arguments: 0: $post_id (int), 1: $force_delete (bool). Returns (WP_Post|false|null).,None,None
DELETION call to delete_post_meta($post_id, "_dt_cover_post_id") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
CRYPTOGRAPHY call to hash_hmac("sha256", $stringtosign, $this->_get_aws_secret_key(), true).,None,None
hash_hmac called with approved hash algorithm sha256.,sha256,None
STORAGE call to file_put_contents($filename, $cover["body"]).,None,None
API call to wp_remote_request($url). Passed arguments: 0: $url (string). Returns (array|WP_Error).,https,['https://webservices.amazon.com/onca/xml?']
API call to wp_remote_get($url). Passed arguments: 0: $url (string). Returns (array|WP_Error).,,['http://covers.librarything.com/devkey/', 'http://covers.openlibrary.org/b/isbn/', 'https://webservices.amazon.com/onca/xml?']
RETRIEVAL call to get_option("dt_send_bookbox_css", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("dt_auto_add_bookbox", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("dt_librarything_api_key", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("dt_amazon_affiliate_ids") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("dt_default_cover_size") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("dt_default_cover_source") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("dt_amazon_as_first_cover_source", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("dt_amazon_api_creds", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("dt_librarything_api_key", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("dt_default_to_dev_affiliate", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("dt_include_books") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("dt_send_bookbox_css") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("dt_auto_add_bookbox", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("dt_default_cover_size") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "_dt_cover_post_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("dt_default_to_dev_affiliate", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("dt_amazon_as_first_cover_source", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "_dt_isbn", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "_dt_asin_amazon.com", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "_dt_asin_amazon.ca", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "_dt_asin_amazon.co.uk", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "_dt_bookbox_comment", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("dt_amazon_affiliate_ids") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("dt_amazon_api_creds", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("dt_default_to_dev_affiliate", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("dt_include_books") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
STORAGE call to add_option("dt_default_cover_size", ["width" => 75, "height" => 75]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("dt_default_to_dev_affiliate", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("dt_send_bookbox_css", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("dt_auto_add_bookbox", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, "_dt_cover_post_id", $attachment_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($post_id, "_dt_cover_post_id") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, "_dt_isbn", $isbn) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_dt_asin_amazon.com", $asin_amazon_com) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_dt_asin_amazon.ca", $asin_amazon_ca) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_dt_asin_amazon.co.uk", $asin_amazon_co_uk) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_dt_bookbox_comment", $comment) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_dt_cover_source", $source) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found no personal data in the plugin. No analysis needed. 

[main] Complaint? True 

No findings
