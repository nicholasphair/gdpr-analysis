Timeout in resolving values
Timeout in running neo4j query
Running Main.py on reward-points-for-wc-marketplace

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:02.345902.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.399537.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 0 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.174152.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 7 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.903924.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 686 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:00.900183.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 0 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.608570.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.105573.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 417 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:11.329046.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 5706
Added 4596 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 30936
Added 25230 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:03.353995.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/reward-points-for-wc-marketplace/eww_installer.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/reward-points-for-wc-marketplace/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/reward-points-for-wc-marketplace/reward-point.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/reward-points-for-wc-marketplace/includes/functions/customer-reward-points.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/reward-points-for-wc-marketplace/includes/functions/reward-point-option.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/reward-points-for-wc-marketplace/includes/functions/vendor-offers.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/reward-points-for-wc-marketplace/templates/customer_redeem_points.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/reward-points-for-wc-marketplace/templates/reward-point-front-styling.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/reward-points-for-wc-marketplace/templates/vendor_add_offer_product.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/reward-points-for-wc-marketplace/templates/vendor_edit_offer.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/reward-points-for-wc-marketplace/templates/vendor_offer_product.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/reward-points-for-wc-marketplace/templates/vendor_reward_points.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:01.099730.

7 REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
5699 PHP_REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
14000 PHP_REACHES edges created
15000 PHP_REACHES edges created
16000 PHP_REACHES edges created
17000 PHP_REACHES edges created
18000 PHP_REACHES edges created
19000 PHP_REACHES edges created
20000 PHP_REACHES edges created
21000 PHP_REACHES edges created
22000 PHP_REACHES edges created
23000 PHP_REACHES edges created
24000 PHP_REACHES edges created
25000 PHP_REACHES edges created
25230 PHP_REACHES edges created
30936 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 2131 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.113838.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:07.905225.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 5 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.506374.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 10 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.194907.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.761701.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.060314.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.007275.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.038253.

15 PHP_REACHES edges created
15 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 5 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.136532.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
27 SQL operations to process.
CREATE TABLE $wpdbreward_points (
            Id mediumint(9) NOT NULL AUTO_INCREMENT,
            `OrderId` varchar(50) NOT NULL,
            `CustomerId` varchar(50) NOT NULL,
            `VendorId` varchar(50) NOT NULL,
            `ItemId` varchar(50) NOT NULL,
            `RewardPoints` varchar(50) NOT NULL,
            `Date` timestamp NOT NULL,
            PRIMARY KEY  (Id)
    )    $wpdb->get_charset_collate();

        CREATE TABLE $wpdbredeem_points  (
            Id mediumint(9) NOT NULL AUTO_INCREMENT,
            `OrderId` varchar(50) NOT NULL,
            `CustomerId` varchar(50) NOT NULL,
            `VendorId` varchar(50) NOT NULL,
            `ItemId` varchar(50) NOT NULL,
            `RedeemPoints` varchar(50) NOT NULL,
            `Date` date NOT NULL,
            PRIMARY KEY  (Id)
    )    $wpdb->get_charset_collate();
        CREATE TABLE $wpdbreward_offers  (
            Id mediumint(9) NOT NULL AUTO_INCREMENT,
            `OfferTitle` varchar(255) NOT NULL,
            `ProductId` varchar(50) NOT NULL,
            `VendorId` varchar(50) NOT NULL,
            `OfferPoints` varchar(50) NOT NULL,
            `OfferType` varchar(50) NOT NULL,
            `OfferStartDate` date NOT NULL,
            `OfferEndData` date NOT NULL,
            PRIMARY KEY  (Id)
    )    $wpdb->get_charset_collate();
    
SQL command (CREATE TABLE $wpdbreward_points ( Id mediumint(9) NOT NULL AUTO_INCREMENT, `OrderId` varchar(50) NOT NULL, `CustomerId` varchar(50) NOT NULL, `VendorId` varchar(50) NOT NULL, `ItemId` varchar(50) NOT NULL, `RewardPoints` varchar(50) NOT NULL, `Date` timestamp NOT NULL, PRIMARY KEY (Id) ) $wpdb->get_charset_collate(); CREATE TABLE $wpdbredeem_points ( Id mediumint(9) NOT NULL AUTO_INCREMENT, `OrderId` varchar(50) NOT NULL, `CustomerId` varchar(50) NOT NULL, `VendorId` varchar(50) NOT NULL, `ItemId` varchar(50) NOT NULL, `RedeemPoints` varchar(50) NOT NULL, `Date` date NOT NULL, PRIMARY KEY (Id) ) $wpdb->get_charset_collate(); CREATE TABLE $wpdbreward_offers ( Id mediumint(9) NOT NULL AUTO_INCREMENT, `OfferTitle` varchar(255) NOT NULL, `ProductId` varchar(50) NOT NULL, `VendorId` varchar(50) NOT NULL, `OfferPoints` varchar(50) NOT NULL, `OfferType` varchar(50) NOT NULL, `OfferStartDate` date NOT NULL, `OfferEndData` date NOT NULL, PRIMARY KEY (Id) ) $wpdb->get_charset_collate(); ) cannot be parsed correct.
SELECT DISTINCT CustomerId FROM $wpdbreward_points
SQL command (SELECT DISTINCT CustomerId FROM $wpdbreward_points) cannot be parsed correct.
SELECT SUM(RewardPoints) as points , COUNT(DISTINCT(OrderId)) as cnt_order FROM $wpdbreward_points WHERE CustomerId = '$unique_customer'
SELECT SUM(RewardPoints) as points , COUNT(DISTINCT(OrderId)) as cnt_order FROM $wpdbreward_points WHERE CustomerId = '$unique_customer'
SQL command (SELECT SUM(RewardPoints) as points , COUNT(DISTINCT(OrderId)) as cnt_order FROM $wpdbreward_points WHERE CustomerId = '$unique_customer') cannot be parsed correct.
SELECT SUM(RedeemPoints) as points FROM $wpdbredeem_points WHERE CustomerId = '$unique_customer'
SELECT SUM(RedeemPoints) as points FROM $wpdbredeem_points WHERE CustomerId = '$unique_customer'
SQL command (SELECT SUM(RedeemPoints) as points FROM $wpdbredeem_points WHERE CustomerId = '$unique_customer') cannot be parsed correct.
SELECT * FROM $wpdbreward_offers
SQL command (SELECT * FROM $wpdbreward_offers) cannot be parsed correct.
SELECT post_name FROM wp_posts WHERE post_name = '$post_name'
SQL command (SELECT post_name FROM wp_posts WHERE post_name = '$post_name') cannot be parsed correct.
SELECT ProductId,OfferPoints FROM $wpdbreward_offers WHERE Id = 'htmlspecialchars($_POST["offer_name"])'
SELECT ProductId,OfferPoints FROM $wpdbreward_offers WHERE Id = 'htmlspecialchars($_POST["offer_name"])'
SQL command (SELECT ProductId,OfferPoints FROM $wpdbreward_offers WHERE Id = 'htmlspecialchars($_POST["offer_name"])') cannot be parsed correct.
SELECT SUM(RewardPoints) as points FROM $wpdbreward_points WHERE CustomerId = '{"1": ["get_current_user_id()"], "2": ["$post"]}' AND VendorId = '%s'
None
SELECT SUM(RedeemPoints) as points FROM $wpdbredeem_points WHERE CustomerId = '{"1": ["get_current_user_id()"], "2": ["$post"]}' AND VendorId = '%s'
None
SELECT * FROM $wpdbreward_offers WHERE VendorId = $post
SQL command (SELECT * FROM $wpdbreward_offers WHERE VendorId = $post) cannot be parsed correct.
None
SELECT SUM(RewardPoints) as points FROM $wpdbreward_points WHERE CustomerId = '{"1": ["get_current_user_id()"], "2": ["$current_vendorid"]}' AND VendorId = '%s'
None
SELECT SUM(RedeemPoints) as points FROM $wpdbredeem_points WHERE CustomerId = '{"1": ["get_current_user_id()"], "2": ["$current_vendorid"]}' AND VendorId = '%s'
None
SELECT * FROM $wpdbreward_offers WHERE VendorId = $current_vendorid
SQL command (SELECT * FROM $wpdbreward_offers WHERE VendorId = $current_vendorid) cannot be parsed correct.
None
SELECT SUM(RewardPoints) as points , COUNT(DISTINCT(OrderId)) as cnt_order FROM $wpdbreward_points WHERE CustomerId = '{"1": ["$_REQUEST_customer_id"], "2": ["get_current_user_id()"]}' AND VendorId = '%s'
None
SELECT SUM(RedeemPoints) as points,ItemId as items FROM $wpdbredeem_points WHERE CustomerId = '{"1": ["$_REQUEST_customer_id"], "2": ["get_current_user_id()"]}' AND VendorId = '%s'
None
SELECT ItemId FROM $wpdbredeem_points WHERE CustomerId = '{"1": ["$_REQUEST_customer_id"], "2": ["get_current_user_id()"]}' AND VendorId = '%s'
None
None
None
SELECT OfferTitle FROM $wpdbreward_offers WHERE Id = '$_POST_offer_name'
SELECT OfferTitle FROM $wpdbreward_offers WHERE Id = '$_POST_offer_name'
SQL command (SELECT OfferTitle FROM $wpdbreward_offers WHERE Id = '$_POST_offer_name') cannot be parsed correct.
SELECT * FROM $wpdbreward_offers WHERE VendorId = $_POST_VendorId
SQL command (SELECT * FROM $wpdbreward_offers WHERE VendorId = $_POST_VendorId) cannot be parsed correct.
SELECT * FROM $wpdbreward_offers where Id=$_REQUEST_offer_id
SQL command (SELECT * FROM $wpdbreward_offers where Id=$_REQUEST_offer_id) cannot be parsed correct.
SELECT * FROM $wpdbreward_offers WHERE VendorId = get_current_user_id()
SQL command (SELECT * FROM $wpdbreward_offers WHERE VendorId = get_current_user_id()) cannot be parsed correct.
SELECT DISTINCT CustomerId FROM $wpdbreward_points WHERE VendorId = get_current_user_id()
SQL command (SELECT DISTINCT CustomerId FROM $wpdbreward_points WHERE VendorId = get_current_user_id()) cannot be parsed correct.
SELECT SUM(RewardPoints) as points , COUNT(DISTINCT(OrderId)) as cnt_order FROM $wpdbreward_points WHERE CustomerId = '{"1": ["$unique_customer"], "2": ["get_current_user_id()"]}' AND VendorId = '%s'
None
SELECT SUM(RedeemPoints) as points FROM $wpdbredeem_points WHERE CustomerId = '{"1": ["$unique_customer"], "2": ["get_current_user_id()"]}' AND VendorId = '%s'
None
The following function calls could not successfully be analyzed for SQL content: [100, 140, 194, 238, 1455, 1915, 4153, 4299, 4326, 4389, 4485, 4669, 4696, 4759, 4853, 5410, 5455, 5482, 5550, 5599, 5938, 6874, 7164, 7845, 8362, 8498, 8536]
Added 0 SQL nodes. 0 out of 27 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:08.089564.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'$unique_customer'' cannot be parsed correct.
HTML code '$'$unique_customer_email'' cannot be parsed correct.
HTML code '$'$wpdb->get_results($wpdb->prepare("SELECT SUM(RewardPoints) as points , COUNT(DISTINCT(OrderId)) as cnt_order FROM "$table_name" WHERE CustomerId = \\'%s\\'", $unique_customer->CustomerId))_0_cnt_order'' cannot be parsed correct.
HTML code '$'$wpdb->get_results($wpdb->prepare("SELECT SUM(RedeemPoints) as points FROM "$redeem_table" WHERE CustomerId = \\'%s\\'", $unique_customer->CustomerId))_0_points'' cannot be parsed correct.
HTML code '$'$wpdb->get_results($wpdb->prepare("SELECT SUM(RewardPoints) as points , COUNT(DISTINCT(OrderId)) as cnt_order FROM "$table_name" WHERE CustomerId = \\'%s\\'", $unique_customer->CustomerId))_0_points'' cannot be parsed correct.
HTML code '$'$wpdb->get_results($wpdb->prepare("SELECT SUM(RewardPoints) as points , COUNT(DISTINCT(OrderId)) as cnt_order FROM "$table_name" WHERE CustomerId = \\'%s\\'", $unique_customer->CustomerId))'' cannot be parsed correct.
HTML code '$'get_option("reward_point_custom_btn_styling")_add_btn_hov_col'' cannot be parsed correct.
HTML code '$'get_option("reward_point_custom_btn_styling")_add_btn_txt_col#fff'' cannot be parsed correct.
HTML code '$'get_option("reward_point_custom_btn_styling")_add_btn_txt_hov_col#fff'' cannot be parsed correct.
HTML code '$'get_option("reward_point_custom_btn_styling")_add_btn_border0'' cannot be parsed correct.
HTML code '$'get_option("reward_point_custom_btn_styling")_add_btn_bor_col'' cannot be parsed correct.
HTML code '$'get_option("reward_point_custom_btn_styling")_add_btn_rad0'' cannot be parsed correct.
HTML code '$'get_option("reward_point_custom_btn_styling")_div_bg_col#fff'' cannot be parsed correct.
HTML code '$'get_option("reward_point_custom_btn_styling")_div_border1'' cannot be parsed correct.
HTML code '$'get_option("reward_point_custom_btn_styling")_div_bor_col#ccc'' cannot be parsed correct.
HTML code '$'get_option("reward_point_custom_btn_styling")_div_rad0'' cannot be parsed correct.
HTML code '$'$reward_offer'' cannot be parsed correct.
HTML code '$'$reward_offer'' cannot be parsed correct.
HTML code '$'$reward_offer'' cannot be parsed correct.
HTML code '$'$product_detail->get_title()'' cannot be parsed correct.
HTML code '$'$reward_offer'' cannot be parsed correct.
HTML code '$'Set Reward Point Percentage'' cannot be parsed correct.
HTML code '$'get_option("reward_point_custom_btn_styling")_reward_percentageREWARD POINT PERCENTAGE'' cannot be parsed correct.
HTML code '$'get_option("reward_point_custom_btn_styling")_add_btn_titleADD POINTS'' cannot be parsed correct.
HTML code '$'get_option("reward_point_custom_btn_styling")_remove_btn_titleREMOVE POINTS'' cannot be parsed correct.
HTML code '$'get_option("reward_point_custom_btn_styling")_add_topmargin8'' cannot be parsed correct.
HTML code '$'get_option("reward_point_custom_btn_styling")_add_rightmargin10'' cannot be parsed correct.
HTML code '$'get_option("reward_point_custom_btn_styling")_add_bottommargin8'' cannot be parsed correct.
HTML code '$'get_option("reward_point_custom_btn_styling")_add_leftmargin10'' cannot be parsed correct.
HTML code '$'get_option("reward_point_custom_btn_styling")_add_btn_bg_col#000000'' cannot be parsed correct.
HTML code '$'$reward_offer'' cannot be parsed correct.
HTML code '$'$reward_offer'' cannot be parsed correct.
HTML code '$'<link rel=\'stylesheet\' id=\'reward-css\' href=\'plugin_dir_url()css/eww_reward_point_style.css\' type=\'text/css\' />
'' cannot be parsed correct.
HTML code '$'$_REQUEST_display_name'' cannot be parsed correct.
HTML code '$'$offer_list'' cannot be parsed correct.
HTML code '$'$offer_list'' cannot be parsed correct.
HTML code '$'json_encode($offer_data)'' cannot be parsed correct.
HTML code '$'$offer_list'' cannot be parsed correct.
HTML code '$'$wpdb->get_results($wpdb->prepare("SELECT SUM(RedeemPoints) as points FROM "$redeem_table" WHERE CustomerId = \\'%s\\' AND VendorId = \\'%s\\'", [$cust_id, $current_vendorid]))_0_points'' cannot be parsed correct.
HTML code '$'$wpdb->get_results($wpdb->prepare("SELECT SUM(RewardPoints) as points , COUNT(DISTINCT(OrderId)) as cnt_order FROM "$table_name" WHERE CustomerId = \\'%s\\' AND VendorId = \\'%s\\'", [$current_customer_id, $current_vendorid]))_0_points'' cannot be parsed correct.
HTML code '$'<META HTTP-EQUIV="Refresh" Content="0; URL=get_permalink()/vendor-all-reward-point"'' cannot be parsed correct.
HTML code '$'<META HTTP-EQUIV="Refresh" Content="0; URL=get_permalink()/vendor-all-offer"'' cannot be parsed correct.
HTML code '$'$wpdb->get_results("SELECT * FROM "$table_name" where Id="$current_customer_id)_0_OfferTitle'' cannot be parsed correct.
HTML code '$'get_current_user_id()'' cannot be parsed correct.
HTML code '$'$wpdb->get_results("SELECT * FROM "$table_name" where Id="$current_customer_id)_0_Id'' cannot be parsed correct.
HTML code '$'get_option("reward_point_custom_btn_styling")'' cannot be parsed correct.
HTML code '$'get_option("reward_point_custom_btn_styling")'' cannot be parsed correct.
HTML code '$'get_option("reward_point_custom_btn_styling")'' cannot be parsed correct.
HTML code '$'get_option("reward_point_custom_btn_styling")'' cannot be parsed correct.
HTML code '$'get_option("reward_point_custom_btn_styling")'' cannot be parsed correct.
HTML code '$'get_option("reward_point_custom_btn_styling")'' cannot be parsed correct.
HTML code '$'get_option("reward_point_custom_btn_styling")'' cannot be parsed correct.
HTML code '$'get_option("reward_point_custom_btn_styling")'' cannot be parsed correct.
HTML code '$'get_option("reward_point_custom_btn_styling")'' cannot be parsed correct.
HTML code '$'get_option("reward_point_custom_btn_styling")'' cannot be parsed correct.
HTML code '$'get_option("reward_point_custom_btn_styling")'' cannot be parsed correct.
HTML code '$'get_option("reward_point_custom_btn_styling")'' cannot be parsed correct.
HTML code '$'get_current_user_id()'' cannot be parsed correct.
HTML code '$'get_the_ID()'' cannot be parsed correct.
HTML code '$'$wpdb->get_results("SELECT * FROM "$table_name" where Id="$current_customer_id)_0_VendorId'' cannot be parsed correct.
HTML code '$'$wpdb->get_results("SELECT * FROM "$table_name" where Id="$current_customer_id)_0_ProductId'' cannot be parsed correct.
HTML code '$'$product->get_title()'' cannot be parsed correct.
HTML code '$'get_the_ID()'' cannot be parsed correct.
HTML code '$'$wpdb->get_results("SELECT * FROM "$table_name" where Id="$current_customer_id)_0_OfferPoints'' cannot be parsed correct.
HTML code '$'$wpdb->get_results("SELECT * FROM "$table_name" where Id="$current_customer_id)_0_OfferType'' cannot be parsed correct.
HTML code '$'$wpdb->get_results("SELECT * FROM "$table_name" where Id="$current_customer_id)_0_OfferStartDate'' cannot be parsed correct.
HTML code '$'$wpdb->get_results("SELECT * FROM "$table_name" where Id="$current_customer_id)_0_OfferEndData'' cannot be parsed correct.
HTML code '$'<META HTTP-EQUIV="Refresh" Content="0; URL=get_permalink()/vendor-all-offer"'' cannot be parsed correct.
HTML code '$'$all_offer'' cannot be parsed correct.
HTML code '$'$all_offer'' cannot be parsed correct.
HTML code '$'$action_title'' cannot be parsed correct.
HTML code '$'$action_url'' cannot be parsed correct.
HTML code '$'$action_title'' cannot be parsed correct.
HTML code '$'$action_url'' cannot be parsed correct.
HTML code '$'$all_offer'' cannot be parsed correct.
HTML code '$'$all_offer'' cannot be parsed correct.
HTML code '$'$product_title->get_name()'' cannot be parsed correct.
HTML code '$'$all_offer'' cannot be parsed correct.
HTML code '$'$all_offer'' cannot be parsed correct.
HTML code '$'$unique_customer'' cannot be parsed correct.
HTML code '$'$unique_customer_display_name'' cannot be parsed correct.
HTML code '$'$wpdb->get_results($wpdb->prepare("SELECT SUM(RedeemPoints) as points FROM "$redeem_table" WHERE CustomerId = \\'%s\\' AND VendorId = \\'%s\\'", [$unique_customer->CustomerId, $current_vendorid]))_0_points'' cannot be parsed correct.
HTML code '$'$wpdb->get_results($wpdb->prepare("SELECT SUM(RewardPoints) as points , COUNT(DISTINCT(OrderId)) as cnt_order FROM "$table_name" WHERE CustomerId = \\'%s\\' AND VendorId = \\'%s\\'", [$unique_customer->CustomerId, $current_vendorid]))_0_points'' cannot be parsed correct.
HTML code '$'$wpdb->get_results($wpdb->prepare("SELECT SUM(RewardPoints) as points , COUNT(DISTINCT(OrderId)) as cnt_order FROM "$table_name" WHERE CustomerId = \\'%s\\' AND VendorId = \\'%s\\'", [$unique_customer->CustomerId, $current_vendorid]))'' cannot be parsed correct.
HTML code '$'$action_title'' cannot be parsed correct.
HTML code '$'$action_url'' cannot be parsed correct.
HTML code '$'$action_title'' cannot be parsed correct.
HTML code '$'$action_url'' cannot be parsed correct.
HTML code '$'$order'' cannot be parsed correct.
HTML code '$'sanitize_html_class($key)'' cannot be parsed correct.
HTML code '$'-'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'Full Time'' cannot be parsed correct.
HTML code '$'Not Full Time'' cannot be parsed correct.
HTML code '$'No offer for your points'' cannot be parsed correct.
HTML code '$'No offer for this product'' cannot be parsed correct.
HTML code '$'<p class="offer_error col-sm-12">Offer Point for this prodct is already added.</p>'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:11.088695.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.045962.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 7 do_action/apply_filters calls and 35 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:01.587713.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FileProDetector
### Start running FrontBaseDetector
### Finish running DbaseDetector
### Start running HashDetector
### Finish running DbplusDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running FrontBaseDetector
### Start running IngresDetector
### Finish running FirebirdInterBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running HashDetector
### Start running MsqlDetector
### Finish running MongoDetector
### Start running MySQLDetector
### Finish running IBMDb2Detector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running ArrayElementDetector
### Start running OpenSSLDetector
### Finish running MsqlDetector
### Start running ParadoxDetector
### Finish running MongoDbDetector
### Start running PasswordHashingDetector
### Finish running OpenSSLDetector
### Start running PhpCurlDetector
### Finish running Oci8Detector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running ParadoxDetector
### Start running PHPRetrievalDetector
### Finish running PhpCurlDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPRetrievalDetector
### Start running PhpVarDetector
### Finish running PHPStorageDetector
### Start running PostgreSQLDetector
### Finish running PasswordHashingDetector
### Start running PropertyDetector
### Finish running PostgreSQLDetector
### Start running Sqlite3Detector
### Finish running PhpVarDetector
### Start running SqliteDetector
### Finish running PHPIncludedDetector
### Start running SqlServerDetector
### Finish running SqliteDetector
### Start running SybaseDetector
### Finish running Sqlite3Detector
### Start running TokyoTyrantDetector
### Finish running TokyoTyrantDetector
### Start running UserInputDetector
### Finish running SqlServerDetector
### Start running VariableDetector
### Finish running SybaseDetector
### Start running WordpressHashingFnDetector
### Finish running PropertyDetector
### Start running WordPressRemoteDetector
### Finish running UserInputDetector
### Start running WordPressRetrievalDetector
### Finish running WordPressRemoteDetector
### Start running WordPressStorageDetector
### Finish running WordpressHashingFnDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running VariableDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running GenericDatabaseUsageDetector
### Start running UninstallDetector
### Finish running MySQLiDetector
### Finish running maxdbDetector
### Finish running WordPressRetrievalDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running WordPressStorageDetector
### Finished running detectors
reward-point.php:404
  - object property '$order->billing_email' of personal types {'email'} is found.
  - Data types: email
reward-point.php:423
  - object property '$order->billing_address_1' of personal types {'address'} is found.
  - Data types: address
reward-point.php:424
  - object property '$order->billing_address_2' of personal types {'address'} is found.
  - Data types: address
reward-point.php:425
  - object property '$order->billing_city' of personal types {'city'} is found.
  - Data types: city
reward-point.php:427
  - object property '$order->billing_country' of personal types {'country'} is found.
  - Data types: country
reward-point.php:428
  - object property '$order->billing_email' of personal types {'email'} is found.
  - Data types: email
reward-point.php:429
  - object property '$order->billing_first_name' of personal types {'first_name'} is found.
  - Data types: first_name
reward-point.php:430
  - object property '$order->billing_last_name' of personal types {'last_name'} is found.
  - Data types: last_name
reward-point.php:432
  - object property '$order->billing_postcode' of personal types {'postcode'} is found.
  - Data types: postcode
reward-point.php:433
  - object property '$order->billing_state' of personal types {'state'} is found.
  - Data types: state
reward-point.php:436
  - object property '$order->shipping_address_1' of personal types {'address'} is found.
  - Data types: address
reward-point.php:437
  - object property '$order->shipping_address_2' of personal types {'address'} is found.
  - Data types: address
reward-point.php:438
  - object property '$order->shipping_city' of personal types {'city'} is found.
  - Data types: city
reward-point.php:440
  - object property '$order->shipping_country' of personal types {'country'} is found.
  - Data types: country
reward-point.php:441
  - object property '$order->shipping_first_name' of personal types {'first_name'} is found.
  - Data types: first_name
reward-point.php:442
  - object property '$order->shipping_last_name' of personal types {'last_name'} is found.
  - Data types: last_name
reward-point.php:444
  - object property '$order->shipping_postcode' of personal types {'postcode'} is found.
  - Data types: postcode
reward-point.php:445
  - object property '$order->shipping_state' of personal types {'state'} is found.
  - Data types: state 

reward-point.php:404
  - variable '$order_email' of personal types {'email'} is found.
  - Data types: email
reward-point.php:407
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
reward-point.php:407
  - variable '$order_email' of personal types {'email'} is found.
  - Data types: email
reward-point.php:408
  - variable '$order_email' of personal types {'email'} is found.
  - Data types: email
reward-point.php:411
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
reward-point.php:414
  - variable '$random_password' of personal types {'password'} is found.
  - Data types: password
reward-point.php:417
  - variable '$order_email' of personal types {'email'} is found.
  - Data types: email
reward-point.php:417
  - variable '$order_email' of personal types {'email'} is found.
  - Data types: email
reward-point.php:417
  - variable '$random_password' of personal types {'password'} is found.
  - Data types: password
templates/customer_redeem_points.php:20
  - variable '$customer_email' of personal types {'email'} is found.
  - Data types: email
templates/customer_redeem_points.php:150
  - variable '$customer_email' of personal types {'email'} is found.
  - Data types: email 

reward-point.php:417
  - CRYPTOGRAPHY call to wp_create_user($order_email, $random_password, $order_email) alters data types {'user_meta', 'user'}. Passed arguments: 0: $username (string), 1: $password (string), 2: $email (string). Returns (int|WP_Error).
  - Data types: user_meta, user 

eww_installer.php:49
  - RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).
includes/functions/reward-point-option.php:95
  - RETRIEVAL call to get_option("reward_point_custom_btn_styling") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/functions/vendor-offers.php:28
  - RETRIEVAL call to get_userdata($reward_offer->VendorId) alters data types {'user_meta', 'user'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user_meta, user
reward-point.php:24
  - RETRIEVAL call to get_option("active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
reward-point.php:25
  - RETRIEVAL call to get_option("active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
reward-point.php:450
  - RETRIEVAL call to get_post_meta($order_id, "_customer_user", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
reward-point.php:452
  - RETRIEVAL call to get_option("reward_percentage") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
reward-point.php:712
  - RETRIEVAL call to get_option("reward_point_custom_btn_styling") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
templates/customer_redeem_points.php:15
  - RETRIEVAL call to get_option("wcmp_general_policies_settings_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
templates/customer_redeem_points.php:16
  - RETRIEVAL call to get_option("wcmp_capabilities_settings_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
templates/customer_redeem_points.php:17
  - RETRIEVAL call to get_option("wcmp_general_customer_support_details_settings_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
templates/reward-point-front-styling.php:3
  - RETRIEVAL call to get_option("reward_point_custom_btn_styling") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
templates/vendor_add_offer_product.php:15
  - RETRIEVAL call to get_option("wcmp_general_policies_settings_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
templates/vendor_add_offer_product.php:16
  - RETRIEVAL call to get_option("wcmp_capabilities_settings_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
templates/vendor_add_offer_product.php:17
  - RETRIEVAL call to get_option("wcmp_general_customer_support_details_settings_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
templates/vendor_edit_offer.php:15
  - RETRIEVAL call to get_option("wcmp_general_policies_settings_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
templates/vendor_edit_offer.php:16
  - RETRIEVAL call to get_option("wcmp_capabilities_settings_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
templates/vendor_edit_offer.php:17
  - RETRIEVAL call to get_option("wcmp_general_customer_support_details_settings_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
templates/vendor_reward_points.php:14
  - RETRIEVAL call to get_option("wcmp_pages_settings_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option 

includes/functions/reward-point-option.php:85
  - STORAGE call to update_option("reward_point_custom_btn_styling", $btn_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
reward-point.php:120
  - STORAGE call to wp_insert_post($vendor_add_offer_page). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
reward-point.php:134
  - STORAGE call to wp_insert_post($vendor_all_offer_page). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
reward-point.php:148
  - STORAGE call to wp_insert_post($vendor_all_reward_page). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
reward-point.php:162
  - STORAGE call to wp_insert_post($vendor_edit_offer_page). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
reward-point.php:176
  - STORAGE call to wp_insert_post($customer_redeem_points_page). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
reward-point.php:417
  - STORAGE call to wp_create_user($order_email, $random_password, $order_email) alters data types {'user_meta', 'user'}. Passed arguments: 0: $username (string), 1: $password (string), 2: $email (string). Returns (int|WP_Error).
  - Data types: user_meta, user
reward-point.php:420
  - STORAGE call to update_user_meta($user_id, "guest", "yes") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
reward-point.php:423
  - STORAGE call to update_user_meta($user_id, "billing_address_1", $order->billing_address_1) alters data types {'address', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: address, user_meta
reward-point.php:424
  - STORAGE call to update_user_meta($user_id, "billing_address_2", $order->billing_address_2) alters data types {'address', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: address, user_meta
reward-point.php:425
  - STORAGE call to update_user_meta($user_id, "billing_city", $order->billing_city) alters data types {'user_meta', 'city'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta, city
reward-point.php:426
  - STORAGE call to update_user_meta($user_id, "billing_company", $order->billing_company) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
reward-point.php:427
  - STORAGE call to update_user_meta($user_id, "billing_country", $order->billing_country) alters data types {'user_meta', 'country'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta, country
reward-point.php:428
  - STORAGE call to update_user_meta($user_id, "billing_email", $order->billing_email) alters data types {'user_meta', 'email'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta, email
reward-point.php:429
  - STORAGE call to update_user_meta($user_id, "billing_first_name", $order->billing_first_name) alters data types {'user_meta', 'first_name'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta, first_name
reward-point.php:430
  - STORAGE call to update_user_meta($user_id, "billing_last_name", $order->billing_last_name) alters data types {'user_meta', 'last_name'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta, last_name
reward-point.php:431
  - STORAGE call to update_user_meta($user_id, "billing_phone", $order->billing_phone) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
reward-point.php:432
  - STORAGE call to update_user_meta($user_id, "billing_postcode", $order->billing_postcode) alters data types {'user_meta', 'postcode'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta, postcode
reward-point.php:433
  - STORAGE call to update_user_meta($user_id, "billing_state", $order->billing_state) alters data types {'state', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: state, user_meta
reward-point.php:436
  - STORAGE call to update_user_meta($user_id, "shipping_address_1", $order->shipping_address_1) alters data types {'address', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: address, user_meta
reward-point.php:437
  - STORAGE call to update_user_meta($user_id, "shipping_address_2", $order->shipping_address_2) alters data types {'address', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: address, user_meta
reward-point.php:438
  - STORAGE call to update_user_meta($user_id, "shipping_city", $order->shipping_city) alters data types {'user_meta', 'city'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta, city
reward-point.php:439
  - STORAGE call to update_user_meta($user_id, "shipping_company", $order->shipping_company) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
reward-point.php:440
  - STORAGE call to update_user_meta($user_id, "shipping_country", $order->shipping_country) alters data types {'user_meta', 'country'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta, country
reward-point.php:441
  - STORAGE call to update_user_meta($user_id, "shipping_first_name", $order->shipping_first_name) alters data types {'user_meta', 'first_name'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta, first_name
reward-point.php:442
  - STORAGE call to update_user_meta($user_id, "shipping_last_name", $order->shipping_last_name) alters data types {'user_meta', 'last_name'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta, last_name
reward-point.php:443
  - STORAGE call to update_user_meta($user_id, "shipping_method", $order->shipping_method) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
reward-point.php:444
  - STORAGE call to update_user_meta($user_id, "shipping_postcode", $order->shipping_postcode) alters data types {'user_meta', 'postcode'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta, postcode
reward-point.php:445
  - STORAGE call to update_user_meta($user_id, "shipping_state", $order->shipping_state) alters data types {'state', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: state, user_meta 

reward-point.php:521
  - Data from table $wpdbreward_points deleted: "$wpdb->delete($table_name, ["OrderId" => $order_id])"
reward-point.php:522
  - Data from table $wpdbredeem_points deleted: "$wpdb->delete($table_name_redeem, ["OrderId" => $order_id])"
reward-point.php:534
  - Data from table $wpdbreward_offers deleted: "$wpdb->delete($table_name, ["Id" => $id])" 

By data type:
address
	WordPressStorageDetector.update_user_meta($user_id, "shipping_address_2", $order->shipping_address_2) - {'address', 'user_meta'}
	PropertyDetector.(unknown) - {'address'}
	PropertyDetector.(unknown) - {'address'}
	PropertyDetector.(unknown) - {'address'}
	WordPressStorageDetector.update_user_meta($user_id, "billing_address_1", $order->billing_address_1) - {'address', 'user_meta'}
	PropertyDetector.(unknown) - {'address'}
	WordPressStorageDetector.update_user_meta($user_id, "billing_address_2", $order->billing_address_2) - {'address', 'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "shipping_address_1", $order->shipping_address_1) - {'address', 'user_meta'}
city
	WordPressStorageDetector.update_user_meta($user_id, "shipping_city", $order->shipping_city) - {'user_meta', 'city'}
	WordPressStorageDetector.update_user_meta($user_id, "billing_city", $order->billing_city) - {'user_meta', 'city'}
	PropertyDetector.(unknown) - {'city'}
	PropertyDetector.(unknown) - {'city'}
country
	PropertyDetector.(unknown) - {'country'}
	PropertyDetector.(unknown) - {'country'}
	WordPressStorageDetector.update_user_meta($user_id, "billing_country", $order->billing_country) - {'user_meta', 'country'}
	WordPressStorageDetector.update_user_meta($user_id, "shipping_country", $order->shipping_country) - {'user_meta', 'country'}
email
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	WordPressStorageDetector.update_user_meta($user_id, "billing_email", $order->billing_email) - {'user_meta', 'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
first_name
	PropertyDetector.(unknown) - {'first_name'}
	PropertyDetector.(unknown) - {'first_name'}
	WordPressStorageDetector.update_user_meta($user_id, "billing_first_name", $order->billing_first_name) - {'user_meta', 'first_name'}
	WordPressStorageDetector.update_user_meta($user_id, "shipping_first_name", $order->shipping_first_name) - {'user_meta', 'first_name'}
last_name
	WordPressStorageDetector.update_user_meta($user_id, "shipping_last_name", $order->shipping_last_name) - {'user_meta', 'last_name'}
	PropertyDetector.(unknown) - {'last_name'}
	PropertyDetector.(unknown) - {'last_name'}
	WordPressStorageDetector.update_user_meta($user_id, "billing_last_name", $order->billing_last_name) - {'user_meta', 'last_name'}
none
	WordPressStorageDetector.wp_insert_post($vendor_add_offer_page) - set()
	DeletionDetector.$wpdb->delete($table_name, ["Id" => $id]) - set()
	WordPressStorageDetector.wp_insert_post($vendor_all_offer_page) - set()
	WordPressRetrievalDetector.dbDelta($sql) - set()
	DeletionDetector.$wpdb->delete($table_name_redeem, ["OrderId" => $order_id]) - set()
	WordPressStorageDetector.wp_insert_post($customer_redeem_points_page) - set()
	WordPressStorageDetector.wp_insert_post($vendor_all_reward_page) - set()
	WordPressStorageDetector.wp_insert_post($vendor_edit_offer_page) - set()
	DeletionDetector.$wpdb->delete($table_name, ["OrderId" => $order_id]) - set()
option
	WordPressRetrievalDetector.get_option("wcmp_general_policies_settings_name") - {'option'}
	WordPressRetrievalDetector.get_option("wcmp_general_policies_settings_name") - {'option'}
	WordPressRetrievalDetector.get_option("wcmp_capabilities_settings_name") - {'option'}
	WordPressRetrievalDetector.get_option("wcmp_capabilities_settings_name") - {'option'}
	WordPressRetrievalDetector.get_option("wcmp_general_policies_settings_name") - {'option'}
	WordPressRetrievalDetector.get_option("reward_point_custom_btn_styling") - {'option'}
	WordPressStorageDetector.update_option("reward_point_custom_btn_styling", $btn_settings) - {'option'}
	WordPressRetrievalDetector.get_option("reward_point_custom_btn_styling") - {'option'}
	WordPressRetrievalDetector.get_option("active_plugins") - {'option'}
	WordPressRetrievalDetector.get_option("active_plugins") - {'option'}
	WordPressRetrievalDetector.get_option("reward_percentage") - {'option'}
	WordPressRetrievalDetector.get_option("reward_point_custom_btn_styling") - {'option'}
	WordPressRetrievalDetector.get_option("wcmp_general_customer_support_details_settings_name") - {'option'}
	WordPressRetrievalDetector.get_option("wcmp_general_customer_support_details_settings_name") - {'option'}
	WordPressRetrievalDetector.get_option("wcmp_capabilities_settings_name") - {'option'}
	WordPressRetrievalDetector.get_option("wcmp_pages_settings_name") - {'option'}
	WordPressRetrievalDetector.get_option("wcmp_general_customer_support_details_settings_name") - {'option'}
password
	VariableDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
post_meta
	WordPressRetrievalDetector.get_post_meta($order_id, "_customer_user", true) - {'post_meta'}
postcode
	WordPressStorageDetector.update_user_meta($user_id, "shipping_postcode", $order->shipping_postcode) - {'user_meta', 'postcode'}
	PropertyDetector.(unknown) - {'postcode'}
	PropertyDetector.(unknown) - {'postcode'}
	WordPressStorageDetector.update_user_meta($user_id, "billing_postcode", $order->billing_postcode) - {'user_meta', 'postcode'}
state
	PropertyDetector.(unknown) - {'state'}
	WordPressStorageDetector.update_user_meta($user_id, "shipping_state", $order->shipping_state) - {'state', 'user_meta'}
	PropertyDetector.(unknown) - {'state'}
	WordPressStorageDetector.update_user_meta($user_id, "billing_state", $order->billing_state) - {'state', 'user_meta'}
user
	WordPressRetrievalDetector.get_userdata($reward_offer->VendorId) - {'user_meta', 'user'}
	WordPressStorageDetector.wp_create_user($order_email, $random_password, $order_email) - {'user_meta', 'user'}
	WordpressHashingFnDetector.wp_create_user($order_email, $random_password, $order_email) - {'user_meta', 'user'}
user_meta
	WordPressStorageDetector.update_user_meta($user_id, "shipping_address_2", $order->shipping_address_2) - {'address', 'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "shipping_city", $order->shipping_city) - {'user_meta', 'city'}
	WordPressStorageDetector.update_user_meta($user_id, "shipping_postcode", $order->shipping_postcode) - {'user_meta', 'postcode'}
	WordPressStorageDetector.update_user_meta($user_id, "shipping_state", $order->shipping_state) - {'state', 'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "shipping_company", $order->shipping_company) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "billing_city", $order->billing_city) - {'user_meta', 'city'}
	WordPressStorageDetector.update_user_meta($user_id, "shipping_last_name", $order->shipping_last_name) - {'user_meta', 'last_name'}
	WordPressStorageDetector.update_user_meta($user_id, "shipping_method", $order->shipping_method) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "billing_company", $order->billing_company) - {'user_meta'}
	WordPressRetrievalDetector.get_userdata($reward_offer->VendorId) - {'user_meta', 'user'}
	WordPressStorageDetector.update_user_meta($user_id, "billing_address_1", $order->billing_address_1) - {'address', 'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "billing_last_name", $order->billing_last_name) - {'user_meta', 'last_name'}
	WordPressStorageDetector.wp_create_user($order_email, $random_password, $order_email) - {'user_meta', 'user'}
	WordPressStorageDetector.update_user_meta($user_id, "billing_first_name", $order->billing_first_name) - {'user_meta', 'first_name'}
	WordPressStorageDetector.update_user_meta($user_id, "billing_country", $order->billing_country) - {'user_meta', 'country'}
	WordPressStorageDetector.update_user_meta($user_id, "shipping_country", $order->shipping_country) - {'user_meta', 'country'}
	WordPressStorageDetector.update_user_meta($user_id, "billing_phone", $order->billing_phone) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "guest", "yes") - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "billing_address_2", $order->billing_address_2) - {'address', 'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "billing_email", $order->billing_email) - {'user_meta', 'email'}
	WordPressStorageDetector.update_user_meta($user_id, "billing_postcode", $order->billing_postcode) - {'user_meta', 'postcode'}
	WordPressStorageDetector.update_user_meta($user_id, "shipping_address_1", $order->shipping_address_1) - {'address', 'user_meta'}
	WordpressHashingFnDetector.wp_create_user($order_email, $random_password, $order_email) - {'user_meta', 'user'}
	WordPressStorageDetector.update_user_meta($user_id, "shipping_first_name", $order->shipping_first_name) - {'user_meta', 'first_name'}
	WordPressStorageDetector.update_user_meta($user_id, "billing_state", $order->billing_state) - {'state', 'user_meta'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:15.950832.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 39 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.352604.

39 STORE_REACHES edges created
39 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 88 nodes as PERSONAL
In total, tainted 88 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 54 nodes as ENCRYPTED
In total, tainted 54 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:08.888949.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:01:30.214971!
Data from table $wpdbreward_points deleted: "$wpdb->delete($table_name, ["OrderId" => $order_id])",None,None
Data from table $wpdbredeem_points deleted: "$wpdb->delete($table_name_redeem, ["OrderId" => $order_id])",None,None
Data from table $wpdbreward_offers deleted: "$wpdb->delete($table_name, ["Id" => $id])",None,None
object property '$order->billing_email' of personal types {'email'} is found.,,None
object property '$order->billing_address_1' of personal types {'address'} is found.,,None
object property '$order->billing_address_2' of personal types {'address'} is found.,,None
object property '$order->billing_city' of personal types {'city'} is found.,,None
object property '$order->billing_country' of personal types {'country'} is found.,,None
object property '$order->billing_email' of personal types {'email'} is found.,,None
object property '$order->billing_first_name' of personal types {'first_name'} is found.,,None
object property '$order->billing_last_name' of personal types {'last_name'} is found.,,None
object property '$order->billing_postcode' of personal types {'postcode'} is found.,,None
object property '$order->billing_state' of personal types {'state'} is found.,,None
object property '$order->shipping_address_1' of personal types {'address'} is found.,,None
object property '$order->shipping_address_2' of personal types {'address'} is found.,,None
object property '$order->shipping_city' of personal types {'city'} is found.,,None
object property '$order->shipping_country' of personal types {'country'} is found.,,None
object property '$order->shipping_first_name' of personal types {'first_name'} is found.,,None
object property '$order->shipping_last_name' of personal types {'last_name'} is found.,,None
object property '$order->shipping_postcode' of personal types {'postcode'} is found.,,None
object property '$order->shipping_state' of personal types {'state'} is found.,,None
variable '$order_email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$order_email' of personal types {'email'} is found.,,None
variable '$order_email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$random_password' of personal types {'password'} is found.,,None
variable '$random_password' of personal types {'password'} is found.,,None
variable '$order_email' of personal types {'email'} is found.,,None
variable '$order_email' of personal types {'email'} is found.,,None
variable '$customer_email' of personal types {'email'} is found.,,None
variable '$customer_email' of personal types {'email'} is found.,,None
RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to get_option("reward_point_custom_btn_styling") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdata($reward_offer->VendorId) alters data types {'user_meta', 'user'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_option("active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_customer_user", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("reward_percentage") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("reward_point_custom_btn_styling") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcmp_general_policies_settings_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcmp_capabilities_settings_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcmp_general_customer_support_details_settings_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("reward_point_custom_btn_styling") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcmp_general_policies_settings_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcmp_capabilities_settings_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcmp_general_customer_support_details_settings_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcmp_general_policies_settings_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcmp_capabilities_settings_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcmp_general_customer_support_details_settings_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wcmp_pages_settings_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
STORAGE call to update_option("reward_point_custom_btn_styling", $btn_settings) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to wp_insert_post($vendor_add_offer_page). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to wp_insert_post($vendor_all_offer_page). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to wp_insert_post($vendor_all_reward_page). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to wp_insert_post($vendor_edit_offer_page). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to wp_insert_post($customer_redeem_points_page). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to wp_create_user($order_email, $random_password, $order_email) alters data types {'user_meta', 'user'}. Passed arguments: 0: $username (string), 1: $password (string), 2: $email (string). Returns (int|WP_Error).,None,None
STORAGE call to update_user_meta($user_id, "guest", "yes") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "billing_address_1", $order->billing_address_1) alters data types {'address', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "billing_address_2", $order->billing_address_2) alters data types {'address', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "billing_city", $order->billing_city) alters data types {'user_meta', 'city'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "billing_company", $order->billing_company) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "billing_country", $order->billing_country) alters data types {'user_meta', 'country'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "billing_email", $order->billing_email) alters data types {'user_meta', 'email'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "billing_first_name", $order->billing_first_name) alters data types {'user_meta', 'first_name'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "billing_last_name", $order->billing_last_name) alters data types {'user_meta', 'last_name'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "billing_phone", $order->billing_phone) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "billing_postcode", $order->billing_postcode) alters data types {'user_meta', 'postcode'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "billing_state", $order->billing_state) alters data types {'state', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "shipping_address_1", $order->shipping_address_1) alters data types {'address', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "shipping_address_2", $order->shipping_address_2) alters data types {'address', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "shipping_city", $order->shipping_city) alters data types {'user_meta', 'city'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "shipping_company", $order->shipping_company) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "shipping_country", $order->shipping_country) alters data types {'user_meta', 'country'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "shipping_first_name", $order->shipping_first_name) alters data types {'user_meta', 'first_name'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "shipping_last_name", $order->shipping_last_name) alters data types {'user_meta', 'last_name'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "shipping_method", $order->shipping_method) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "shipping_postcode", $order->shipping_postcode) alters data types {'user_meta', 'postcode'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "shipping_state", $order->shipping_state) alters data types {'state', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
CRYPTOGRAPHY call to wp_create_user($order_email, $random_password, $order_email) alters data types {'user_meta', 'user'}. Passed arguments: 0: $username (string), 1: $password (string), 2: $email (string). Returns (int|WP_Error).,hash,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] PII of types (['city', 'country', 'postcode', 'state', 'address', 'password', 'last_name', 'user_meta', 'email', 'user', 'first_name']) stored through WordPress function "update_user_meta($user_id, "shipping_address_2", $order->shipping_address_2)", found in file reward-point.php at line 437. 

[has_storage] PII of types (['city', 'password', 'user_meta', 'email', 'user']) stored through WordPress function "update_user_meta($user_id, "shipping_city", $order->shipping_city)", found in file reward-point.php at line 438. 

[has_storage] PII of types (['password', 'user_meta', 'email', 'user', 'postcode']) stored through WordPress function "update_user_meta($user_id, "shipping_postcode", $order->shipping_postcode)", found in file reward-point.php at line 444. 

[has_storage] PII of types (['state', 'password', 'user_meta', 'email', 'user']) stored through WordPress function "update_user_meta($user_id, "shipping_state", $order->shipping_state)", found in file reward-point.php at line 445. 

[has_storage] PII of types (['user_meta', 'email', 'user', 'password']) stored through WordPress function "update_user_meta($user_id, "shipping_company", $order->shipping_company)", found in file reward-point.php at line 439. 

[has_storage] PII of types (['city', 'password', 'user_meta', 'email', 'user']) stored through WordPress function "update_user_meta($user_id, "billing_city", $order->billing_city)", found in file reward-point.php at line 425. 

[has_storage] PII of types (['password', 'last_name', 'user_meta', 'email', 'user']) stored through WordPress function "update_user_meta($user_id, "shipping_last_name", $order->shipping_last_name)", found in file reward-point.php at line 442. 

[has_storage] PII of types (['user_meta', 'email', 'user', 'password']) stored through WordPress function "update_user_meta($user_id, "shipping_method", $order->shipping_method)", found in file reward-point.php at line 443. 

[has_storage] PII of types (['user_meta', 'email', 'user', 'password']) stored through WordPress function "update_user_meta($user_id, "billing_company", $order->billing_company)", found in file reward-point.php at line 426. 

[has_storage] PII of types (['address', 'password', 'user_meta', 'email', 'user']) stored through WordPress function "update_user_meta($user_id, "billing_address_1", $order->billing_address_1)", found in file reward-point.php at line 423. 

[has_storage] PII of types (['password', 'last_name', 'user_meta', 'email', 'user']) stored through WordPress function "update_user_meta($user_id, "billing_last_name", $order->billing_last_name)", found in file reward-point.php at line 430. 

[has_storage] WP User info of types (['user_meta', 'email', 'user', 'password']) stored through WordPress function "wp_create_user($order_email, $random_password, $order_email)", found in file reward-point.php at line 417. 

[has_storage] PII of types (['password', 'user_meta', 'email', 'user', 'first_name']) stored through WordPress function "update_user_meta($user_id, "billing_first_name", $order->billing_first_name)", found in file reward-point.php at line 429. 

[has_storage] PII of types (['country', 'password', 'user_meta', 'email', 'user']) stored through WordPress function "update_user_meta($user_id, "billing_country", $order->billing_country)", found in file reward-point.php at line 427. 

[has_storage] PII of types (['country', 'password', 'user_meta', 'email', 'user']) stored through WordPress function "update_user_meta($user_id, "shipping_country", $order->shipping_country)", found in file reward-point.php at line 440. 

[has_storage] PII of types (['user_meta', 'email', 'user', 'password']) stored through WordPress function "update_user_meta($user_id, "billing_phone", $order->billing_phone)", found in file reward-point.php at line 431. 

[has_storage] PII of types (['user_meta', 'email', 'user', 'password']) stored through WordPress function "update_user_meta($user_id, "guest", "yes")", found in file reward-point.php at line 420. 

[has_storage] PII of types (['address', 'password', 'user_meta', 'email', 'user']) stored through WordPress function "update_user_meta($user_id, "billing_address_2", $order->billing_address_2)", found in file reward-point.php at line 424. 

[has_storage] PII of types (['user_meta', 'email', 'user', 'password']) stored through WordPress function "update_user_meta($user_id, "billing_email", $order->billing_email)", found in file reward-point.php at line 428. 

[has_storage] PII of types (['password', 'user_meta', 'email', 'user', 'postcode']) stored through WordPress function "update_user_meta($user_id, "billing_postcode", $order->billing_postcode)", found in file reward-point.php at line 432. 

[has_storage] PII of types (['address', 'password', 'user_meta', 'email', 'user']) stored through WordPress function "update_user_meta($user_id, "shipping_address_1", $order->shipping_address_1)", found in file reward-point.php at line 436. 

[has_storage] PII of types (['password', 'user_meta', 'email', 'user', 'first_name']) stored through WordPress function "update_user_meta($user_id, "shipping_first_name", $order->shipping_first_name)", found in file reward-point.php at line 441. 

[has_storage] PII of types (['state', 'password', 'user_meta', 'email', 'user']) stored through WordPress function "update_user_meta($user_id, "billing_state", $order->billing_state)", found in file reward-point.php at line 433. 

[has_storage] Storage check is WP 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "shipping_address_2", $order->shipping_address_2) does not have corresponding deletion method. Storage method found in file reward-point.php at line 437. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "shipping_city", $order->shipping_city) does not have corresponding deletion method. Storage method found in file reward-point.php at line 438. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "shipping_postcode", $order->shipping_postcode) does not have corresponding deletion method. Storage method found in file reward-point.php at line 444. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "shipping_state", $order->shipping_state) does not have corresponding deletion method. Storage method found in file reward-point.php at line 445. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "shipping_company", $order->shipping_company) does not have corresponding deletion method. Storage method found in file reward-point.php at line 439. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "billing_city", $order->billing_city) does not have corresponding deletion method. Storage method found in file reward-point.php at line 425. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "shipping_last_name", $order->shipping_last_name) does not have corresponding deletion method. Storage method found in file reward-point.php at line 442. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "shipping_method", $order->shipping_method) does not have corresponding deletion method. Storage method found in file reward-point.php at line 443. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "billing_company", $order->billing_company) does not have corresponding deletion method. Storage method found in file reward-point.php at line 426. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "billing_address_1", $order->billing_address_1) does not have corresponding deletion method. Storage method found in file reward-point.php at line 423. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "billing_last_name", $order->billing_last_name) does not have corresponding deletion method. Storage method found in file reward-point.php at line 430. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "billing_first_name", $order->billing_first_name) does not have corresponding deletion method. Storage method found in file reward-point.php at line 429. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "billing_country", $order->billing_country) does not have corresponding deletion method. Storage method found in file reward-point.php at line 427. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "shipping_country", $order->shipping_country) does not have corresponding deletion method. Storage method found in file reward-point.php at line 440. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "billing_phone", $order->billing_phone) does not have corresponding deletion method. Storage method found in file reward-point.php at line 431. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "guest", "yes") does not have corresponding deletion method. Storage method found in file reward-point.php at line 420. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "billing_address_2", $order->billing_address_2) does not have corresponding deletion method. Storage method found in file reward-point.php at line 424. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "billing_email", $order->billing_email) does not have corresponding deletion method. Storage method found in file reward-point.php at line 428. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "billing_postcode", $order->billing_postcode) does not have corresponding deletion method. Storage method found in file reward-point.php at line 432. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "shipping_address_1", $order->shipping_address_1) does not have corresponding deletion method. Storage method found in file reward-point.php at line 436. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "shipping_first_name", $order->shipping_first_name) does not have corresponding deletion method. Storage method found in file reward-point.php at line 441. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "billing_state", $order->billing_state) does not have corresponding deletion method. Storage method found in file reward-point.php at line 433. 

[Art.17, Right to erasure] Deletion access is NONE 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3589. Found in file reward-point.php at line 437 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3600. Found in file reward-point.php at line 438 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3666. Found in file reward-point.php at line 444 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3677. Found in file reward-point.php at line 445 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3611. Found in file reward-point.php at line 439 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3479. Found in file reward-point.php at line 425 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3644. Found in file reward-point.php at line 442 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3655. Found in file reward-point.php at line 443 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3490. Found in file reward-point.php at line 426 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3457. Found in file reward-point.php at line 423 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3534. Found in file reward-point.php at line 430 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3523. Found in file reward-point.php at line 429 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3501. Found in file reward-point.php at line 427 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3622. Found in file reward-point.php at line 440 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3545. Found in file reward-point.php at line 431 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3449. Found in file reward-point.php at line 420 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3468. Found in file reward-point.php at line 424 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3512. Found in file reward-point.php at line 428 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3556. Found in file reward-point.php at line 432 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3578. Found in file reward-point.php at line 436 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3633. Found in file reward-point.php at line 441 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3567. Found in file reward-point.php at line 433 

[Art.15, Right to access] Data access is NONE_BUT_NOT_REQUIRED 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['access', 'deletion', 'encryption', 'third_party'] 

[main] Is deletion in violation? True 

[main] Is access in violation? False 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? False 


###########
### Q&A ###
###########

1. Why is my plugin in violation against GDPR?

GDPR (https://gdpr-info.eu/) aims to give citizens in the European Union (EU) control over their personal data. If a website collects or store user data, it is required to provide users functionalities to control their data, such as ones to erase or export their data. While a plugin do not directly interact with users, it may provide functionalities that collect or store personal data, which would make websites that deploy the plugin in violation against GDPR if the plugin does not provide corresponding functionalities to allow users control their personal data. Therefore, plugin developers are responsible to provide functions to manage the personal data they handle in accordance with GDPR. We list requirements by specific GDPR articles relevant to your plugin below.


[Art. 13, Information to be provided where personal data are collected from the data subject] If a plugin collects or handles personal data, it needs to provide privacy policy texts that explain what personal data is being collected and for what purpose. The texts are meant to be added to the privacy policy of the websites that deploy the plugin. 


            
[Art.17, Right to erasure] If a plugin stores personal data in a custom database they create or manage, or through Wordpress's native storage functions (e.g., update_user_meta), it needs to provide methods for users to erase the data upon request. Note that deleting data for all users upon uninstallation does not satisfy the requirement. 


            
        

2. How do I make my plugin compliant?

Please refer to the fix report below to see how you can make your plugin comply with GDPR.

        

##################
### Fix Report ###
##################

############################
# Data Deletion Fix Report #
############################

This report suggests fixes to comply with the GDPR Art. 17, Right to erasure (https://gdpr-info.eu/art-17-gdpr/). The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/adding-the-personal-data-eraser-to-your-plugin/ for more details.

1) Implement a function that deletes all the user data collected in the plugin. Sample code:


/**
* Removes all collected data of a user.
*
* @param string $email_address   email address to manipulate
* @param int    $page            pagination
*
* @return array
*/
function reward-points-for-wc-marketplace_remove_data( $email_address, $page = 1 ) {
    
    $page = (int) $page;


    //TODO: Delete the user data that was stored using Wordpress functions

    //Below is the sample code for deleting user meta and may need to be modified to suit the plugin.
    $user_id = get_user_by('email', $email_address)
    $key = 'email' //Sample user meta key
    if ( $customer->user_id > 0 ) {
        //Delete user meta data by $key
        delete_user_meta( $user_id, $key );
    }
        



    // Tell core if we have more data to delete still
    $done = true;
    return array(
        'items_removed'  => $items_removed, // true if collected data of a user is being deleted
        'items_retained' => $items_retained, // true if certain data needs to be retained
        'messages'       => sprintf( __( 'Data of user with email %s successfully deleted.', 'reward-points-for-wc-marketplace' ), $email_address ), // Put messages for data removal
        'done'           => $done, // true if all the removal processes are done (all data of the user is removed)
    );
}
        

2) Hook the deletion function to the Wordpress's Personal Data Removal tool


/**
* Registers all data erasers.
*
* @param array $exporters
*
* @return mixed
*/
function reward-points-for-wc-marketplace_register_privacy_erasers( $erasers ) {
    $erasers['my-plugin-slug'] = array(
        'eraser_friendly_name' => __( '<eraser name>', 'reward-points-for-wc-marketplace' ),
        'callback'             => 'reward-points-for-wc-marketplace_remove_data',
    );
    return $erasers;
}
        

add_filter( 'wp_privacy_personal_data_erasers', 'reward-points-for-wc-marketplace_register_privacy_erasers' );
        

        

#############################
# Privacy Policy Fix Report #
#############################

This report suggests fixes to comply with the GDPR Art. 13 (https://gdpr-info.eu/art-13-gdpr/) through including a privacy notice. The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/suggesting-text-for-the-site-privacy-policy/ for more details.

1) Implement a function that includes the privacy policy for the plugin and provide it to wordpress through wp_add_privacy_policy_content(). Sample code:


/**
* Adds a privacy policy statement.
*/
function reward-points-for-wc-marketplace_add_privacy_policy_content() {
    if ( ! function_exists( 'wp_add_privacy_policy_content' ) ) {
        return;
    }
    //TODO: modify the content below to include the privacy policy for the plugin.
    $content = '<p class="privacy-policy-tutorial">' . __( 'Some introductory content for the suggested text.', 'reward-points-for-wc-marketplace' ) . '</p>'
            . '<strong class="privacy-policy-tutorial">' . __( 'Suggested Text:', 'reward-points-for-wc-marketplace' ) . '</strong> '
            . sprintf(
                __( 'When you leave a comment on this site, we send your name, email address, IP address and comment text to example.com. Example.com does not retain your personal data. The example.com privacy policy is <a href="%1$s" target="_blank">here</a>.', 'reward-points-for-wc-marketplace' ),
                'https://example.com/privacy-policy'
            );
    wp_add_privacy_policy_content( 'reward-points-for-wc-marketplace', wp_kses_post( wpautop( $content, false ) ) );
}
        

2) Hook the privacy policy function to the Wordpress's admin initialization action.


add_action( 'admin_init', 'reward-points-for-wc-marketplace_add_privacy_policy_content' );
        

        


Disclaimer: The sample code provided above is only for reference and does not guarantee GDPR compliance. The recommended list of data to delete/export may not be comprehensive. 
        
Done.
