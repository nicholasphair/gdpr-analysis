Timeout in resolving values
Timeout in running neo4j query
Running Main.py on eds-font-awesome

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:07.085808.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:03.740372.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 0 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.477279.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 0 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:01.483178.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 51 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:01.452604.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 0 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:01.584658.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.169669.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 16 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:03.553240.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 501
Added 434 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 190457
Added 189956 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:12.677386.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/eds-font-awesome/eds_font_awesome.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.329943.

501 PHP_REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
14000 PHP_REACHES edges created
15000 PHP_REACHES edges created
16000 PHP_REACHES edges created
17000 PHP_REACHES edges created
18000 PHP_REACHES edges created
19000 PHP_REACHES edges created
20000 PHP_REACHES edges created
21000 PHP_REACHES edges created
22000 PHP_REACHES edges created
23000 PHP_REACHES edges created
24000 PHP_REACHES edges created
25000 PHP_REACHES edges created
26000 PHP_REACHES edges created
27000 PHP_REACHES edges created
28000 PHP_REACHES edges created
29000 PHP_REACHES edges created
30000 PHP_REACHES edges created
31000 PHP_REACHES edges created
32000 PHP_REACHES edges created
33000 PHP_REACHES edges created
34000 PHP_REACHES edges created
35000 PHP_REACHES edges created
36000 PHP_REACHES edges created
37000 PHP_REACHES edges created
38000 PHP_REACHES edges created
39000 PHP_REACHES edges created
40000 PHP_REACHES edges created
41000 PHP_REACHES edges created
42000 PHP_REACHES edges created
43000 PHP_REACHES edges created
44000 PHP_REACHES edges created
45000 PHP_REACHES edges created
46000 PHP_REACHES edges created
47000 PHP_REACHES edges created
48000 PHP_REACHES edges created
49000 PHP_REACHES edges created
50000 PHP_REACHES edges created
51000 PHP_REACHES edges created
52000 PHP_REACHES edges created
53000 PHP_REACHES edges created
54000 PHP_REACHES edges created
55000 PHP_REACHES edges created
56000 PHP_REACHES edges created
57000 PHP_REACHES edges created
58000 PHP_REACHES edges created
59000 PHP_REACHES edges created
60000 PHP_REACHES edges created
61000 PHP_REACHES edges created
62000 PHP_REACHES edges created
63000 PHP_REACHES edges created
64000 PHP_REACHES edges created
65000 PHP_REACHES edges created
66000 PHP_REACHES edges created
67000 PHP_REACHES edges created
68000 PHP_REACHES edges created
69000 PHP_REACHES edges created
70000 PHP_REACHES edges created
71000 PHP_REACHES edges created
72000 PHP_REACHES edges created
73000 PHP_REACHES edges created
74000 PHP_REACHES edges created
75000 PHP_REACHES edges created
76000 PHP_REACHES edges created
77000 PHP_REACHES edges created
78000 PHP_REACHES edges created
79000 PHP_REACHES edges created
80000 PHP_REACHES edges created
81000 PHP_REACHES edges created
82000 PHP_REACHES edges created
83000 PHP_REACHES edges created
84000 PHP_REACHES edges created
85000 PHP_REACHES edges created
86000 PHP_REACHES edges created
87000 PHP_REACHES edges created
88000 PHP_REACHES edges created
89000 PHP_REACHES edges created
90000 PHP_REACHES edges created
91000 PHP_REACHES edges created
92000 PHP_REACHES edges created
93000 PHP_REACHES edges created
94000 PHP_REACHES edges created
95000 PHP_REACHES edges created
96000 PHP_REACHES edges created
97000 PHP_REACHES edges created
98000 PHP_REACHES edges created
99000 PHP_REACHES edges created
100000 PHP_REACHES edges created
101000 PHP_REACHES edges created
102000 PHP_REACHES edges created
103000 PHP_REACHES edges created
104000 PHP_REACHES edges created
105000 PHP_REACHES edges created
106000 PHP_REACHES edges created
107000 PHP_REACHES edges created
108000 PHP_REACHES edges created
109000 PHP_REACHES edges created
110000 PHP_REACHES edges created
111000 PHP_REACHES edges created
112000 PHP_REACHES edges created
113000 PHP_REACHES edges created
114000 PHP_REACHES edges created
115000 PHP_REACHES edges created
116000 PHP_REACHES edges created
117000 PHP_REACHES edges created
118000 PHP_REACHES edges created
119000 PHP_REACHES edges created
120000 PHP_REACHES edges created
121000 PHP_REACHES edges created
122000 PHP_REACHES edges created
123000 PHP_REACHES edges created
124000 PHP_REACHES edges created
125000 PHP_REACHES edges created
126000 PHP_REACHES edges created
127000 PHP_REACHES edges created
128000 PHP_REACHES edges created
129000 PHP_REACHES edges created
130000 PHP_REACHES edges created
131000 PHP_REACHES edges created
132000 PHP_REACHES edges created
133000 PHP_REACHES edges created
134000 PHP_REACHES edges created
135000 PHP_REACHES edges created
136000 PHP_REACHES edges created
137000 PHP_REACHES edges created
138000 PHP_REACHES edges created
139000 PHP_REACHES edges created
140000 PHP_REACHES edges created
141000 PHP_REACHES edges created
142000 PHP_REACHES edges created
143000 PHP_REACHES edges created
144000 PHP_REACHES edges created
145000 PHP_REACHES edges created
146000 PHP_REACHES edges created
147000 PHP_REACHES edges created
148000 PHP_REACHES edges created
149000 PHP_REACHES edges created
150000 PHP_REACHES edges created
151000 PHP_REACHES edges created
152000 PHP_REACHES edges created
153000 PHP_REACHES edges created
154000 PHP_REACHES edges created
155000 PHP_REACHES edges created
156000 PHP_REACHES edges created
157000 PHP_REACHES edges created
158000 PHP_REACHES edges created
159000 PHP_REACHES edges created
160000 PHP_REACHES edges created
161000 PHP_REACHES edges created
162000 PHP_REACHES edges created
163000 PHP_REACHES edges created
164000 PHP_REACHES edges created
165000 PHP_REACHES edges created
166000 PHP_REACHES edges created
167000 PHP_REACHES edges created
168000 PHP_REACHES edges created
169000 PHP_REACHES edges created
170000 PHP_REACHES edges created
171000 PHP_REACHES edges created
172000 PHP_REACHES edges created
173000 PHP_REACHES edges created
174000 PHP_REACHES edges created
175000 PHP_REACHES edges created
176000 PHP_REACHES edges created
177000 PHP_REACHES edges created
178000 PHP_REACHES edges created
179000 PHP_REACHES edges created
180000 PHP_REACHES edges created
181000 PHP_REACHES edges created
182000 PHP_REACHES edges created
183000 PHP_REACHES edges created
184000 PHP_REACHES edges created
185000 PHP_REACHES edges created
186000 PHP_REACHES edges created
187000 PHP_REACHES edges created
188000 PHP_REACHES edges created
189000 PHP_REACHES edges created
189956 PHP_REACHES edges created
190457 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 133 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:00.808786.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.136298.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 3 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.946658.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 1 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.175630.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.006053.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.064152.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.009967.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.049665.

4 PHP_REACHES edges created
4 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 3 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.136602.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
No SQL nodes to process.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:00.095992.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'efa_get_admin_notice("Ed\\'s Font Awesome Shortcode Plugin has not been tested with your version of WordPress. It still, however, may work...", "error")'' cannot be parsed correct.
HTML code '$'
			
	 <div class="container">
				
				
        <div class="card" style="max-width: 100%;">
            <img src="plugins_url("/lib/images/andrey-grinkevich-rIDE73mqi2s-unsplash.jpg", )" class="card-img-top img-fluid" alt="scene">
            <div class="card-header bg-secondary ">
                <h2 class="text-white">Ed\'s Font Awesome Plugin</h2>
            </div>
			
			<span>Photo by <a href="https://unsplash.com/@grin?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Andrey Grinkevich</a> on <a href="https://unsplash.com/t/nature?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Unsplash</a></span>
            <div class="mt-4 card-body">
            <h5 class="mb-2 card-header">The Ultimate Font Awesome Plugin. Use shortcode to place Font Awesome icons anywhere on your site.</h6>
                <h5>Options:</h5>
                <ol>
                    <li>Regular Font Awesome Icon</li>
                    <li>Mask Icon - Combine 2 icons into one. Currently you can mask any icon into a circle icon.</li>
                    <li>Rotated Icons - Rotate an icon any degree or flip vertically or horizontally. </li>
                </ol>


                
                <div class="p-2 mb-2 bg-primary card-title"><h3 class="text-white">How To Use</h3></div>

                <p class="card-text">A list of all of the free icons are located here: <a href="https://fontawesome.com/icons?d=gallery&p=2&m=free" target="_blank">Font Awesome Icons</a></p>
                <p class="card-text">Simply add the shortcode to the location that you would like the font awesome icon to be placed as shown in the following examples below:<br /><br /></p>

                
            <!-- 1. Regular Font Awesome  -->
            <h2 class="card-title">1. Regular Font Awesome Shortcode</h2>
            
            <p class="card-text">Will look like this:<br /></p>

            <strong>Example:</strong><br /><br />
            &nbsp;&nbsp;&nbsp;
            <strong>[eds_font_awesome style="fab" name="accusoft" size="9x"]</strong><br />
			<i class="fab fa-accusoft fa-9x"></i><br />
            
            <p class="card-text">[eds_font_awesome] is the shortcode that you\'ll use for the Ed\'s Font Awesome Shortcode</p>
            
            <p class="card-text"><strong>STYLE - </strong>In the example above, the style is the style prefix. Ex. fab or fas. In this example <strong><i>style="fab".</i></strong> <br />
            <strong>NAME - </strong>The name is whatever the icon name you would like to be displayed. In this example,<strong> <i>name="accusoft"</i></strong>. You do not need to add the prefix fa- to the name.<br >
            <strong>SIZE - </strong>The sizes are as follow and can also be viewed on the font awesome site at: <a href="https://fontawesome.com/how-to-use/on-the-web/styling/sizing-icons" target="_blank">Font Awesome Sizing</a>. In this example: <strong><i>size="5x"</i></strong>
            <br />&nbsp;&nbsp;The sizes are: xs, sm, lg, 2x, 3x, 5x, 7x, and 10x. You do not need to add the prefix fa- before the size number. </p>
            
            <!-- 2. Mask Circle Icon  -->
            <h2 class="card-title">2. Mask Circle Icon</h2>
            <p class="card-text">The Mask icon shortcode will show the icon that you select in a circle icon. You can select the color of the background icon color as well.</p>

            <strong>Example:</strong><br /><br />
            &nbsp;&nbsp;&nbsp;
            <strong>[eds_fa_mask_circle size="4x" style="fas" name="mask" grow_shrink="shrink" gs_value="3" position="up" position_value="1" bg_color="LightBlue"]</strong></p>
			<div class="fa-9x">
			 
			  <i class="fas fa-mask" data-fa-transform="shrink-3 up-1" data-fa-mask="fas fa-circle" style="background:LightBlue"></i>
			</div>
            
            <p class="card-text">[eds_fa_mask_circle] is the shortcode that you\'ll use for the Ed\'s Font Awesome Shortcode</p>
            
            <p class="card-text"><strong>STYLE - </strong>In the example above, the style is the style prefix. Ex. fab or fas. In this example <strong><i>style="fas".</i></strong> <br />
            <strong>NAME - </strong>The name is whatever the icon name you would like to be displayed. In this example,<strong> <i>name="mask"</i></strong>. You do not need to add the prefix fa- to the name.<br />

            <strong>GROW_SHRINK</strong> is the option whether or not you want the icon to be larger or smaller than the circle icon. In this example, <strong><i>grow_shrink"shrink"</i></strong><br />

            <strong>GS_VALUE - </strong>This is the value that by how much you would like to grow or shrink the icon. In this example, <strong><i>gs_value="3"</i></strong><br />


            <strong>POSITION_VALUE - </strong>This is the value that select to  move up or down the center icon. In this example, <strong><i>position_value="1"</i></strong><br />

            <strong>BG_COLOR - </strong>This is the color that you want to set the background of the icon to. There are several colors that you can choose from. Just search for HTML5 color names and you will find a ton of colors to choose from. Here\'s a site that has a list of colors: <a href="https://www.tutorialspoint.com/html5/html5_color_names.htm" target="_blank">HTML5 - Color Names</a>  In this example, <strong><i>bg_color="LightBlue"</i></strong><br />


            <strong>POSITION - </strong>Position is the directon vertical offset you would like to set the center icon to. You can set it to up or down. In this example, <strong><i>position="up"</i></strong><br />

            <strong>SIZE - </strong>The sizes are as follow and can also be viewed on the font awesome site at: <a href="https://fontawesome.com/how-to-use/on-the-web/styling/sizing-icons" target="_blank">Font Awesome Sizing</a>. In this example: <strong><i>size="5x"</i></strong>
            <br />&nbsp;&nbsp;The sizes are: xs, sm, lg, 2x, 3x, 5x, 7x, and 10x. You do not need to add the prefix fa- before the size number. </p>
            
            
            <!-- 3. Rotate Icons -->
            
            <h2 class="card-title">3. Rotate Icon</h2>
            <p class="card-text">The Rotate Icon will allow you to rotate, flip, or mirror an icon. Uses rotate and flip.</p>

            <strong>Example:</strong><br /><br />
            &nbsp;&nbsp;&nbsp;
            <strong>[eds_font_awesome_rotate style="fas" name="snowboarding" rotation_amount="rotate-180" size="9x"]</strong></p><i class="fas fa-snowboarding fa-10x"></i>
            
            <p class="card-text">[eds_font_awesome_rotate] is the shortcode that you\'ll use for the Ed\'s Font Awesome Rotate Shortcode</p>
            
            <p class="card-text"><strong>STYLE - </strong>In the example above, the style is the style prefix. Ex. fab or fas. In this example <strong><i>style="fas".</i></strong> <br />
            <strong>NAME - </strong>The name is whatever the icon name you would like to be displayed. In this example,<strong> <i>name="snowboarding"</i></strong>. You do not need to add the prefix fa- to the name.<br />

            <strong>ROTATON_AMOUNT</strong> is the option that determine\'s the degree of rotation.  In this example, <strong><i>rotation_amount="rotate-180"</i></strong><br />
            <br /><strong>Here are the rotate options available:</strong>
            
            <div class="container">
                <table class="table">
                    <thead>
                    <tr> 
                        <th scope="col">Class</th>
                        <th scope="col">Rotation Amount</th>                    
                    </tr>
                    </thead>
                    <tbody>
                    <tr>
                        
                        <td class="text-danger">rotate-90</td>
                        <td><strong>90Â°</strong> <i class="fas fa-snowboarding fa-rotate-90"></i></td>
                    
                        
                    </tr>
                    <tr>
                        
                        <td class="text-danger">rotate-180</td>
                        <td><strong>180Â°</strong>  <i class="fas fa-snowboarding fa-rotate-180"></i></td>
                        
                    </tr>
                    <tr>
                        
                        <td class="text-danger">rotate-270</td>
                        <td><strong>270Â°</strong>  <i class="fas fa-snowboarding fa-rotate-270"></i></td>
                    
                        
                    </tr>
                    <tr>
                        
                        <td class="text-danger">flip-horizontal</td>
                        <td><strong>mirrors icon horizontally</strong> <i class="fas fa-snowboarding fa-flip-horizontal"></i></td>
                    
                        
                    </tr>
                    <tr>
                        
                        <td class="text-danger">flip-vertical</td>
                        <td><strong>mirrors icon vertically</strong><i class="fas fa-snowboarding fa-flip-vertical"></i></td>
                        
                    </tr>
                    <tr>
                        
                        <td class="text-danger">flip-both</td>
                        <td><strong>mirrors icon vertically and horizontally <i class="fas fa-snowboarding fa-flip-both"></i> (requires 5.7.0 or greater)</strong></td>
                    
                        
                    </tr>
                    
                    </tbody>
                </table>
             </div>    

                <strong>SIZE - </strong>The sizes are as follow and can also be viewed on the font awesome site at: <a href="https://fontawesome.com/how-to-use/on-the-web/styling/sizing-icons" target="_blank">Font Awesome Sizing</a>. In this example: <strong><i>size="5x"</i></strong>
                <br />&nbsp;&nbsp;The sizes are: xs, sm, lg, 2x, 3x, 5x, 7x, and 10x. You do not need to add the prefix fa- before the size number. </p>
                
                <p class="card-text"><strong>NOTE:</strong> you don\'t have to include the pre-fix fa- before the icon name like fa-accusoft or size like fa-3x. Just include the name and size only. </p>
            
            </div>

        </div>
    
    
    </div>
		'' cannot be parsed correct.
HTML code '$'
		<div class="container">
			<h2>Ed\'s Font Awesome Plugin Options</h2>
			
			<h3>Something Wonderful\'s Coming Soon!...</h3>
			<p>The option to integrate Pro features are in the works. Check back soon!</p>
			<ol class="fa-ul">
			<li><span class="fa-li"><i class="fas fa-check-square"></i></span>List icons can</li>
			<li><span class="fa-li"><i class="fas fa-check-square"></i></span>be used to</li>
			<li><span class="fa-li"><i class="fas fa-spinner fa-pulse"></i></span>replace bullets</li>
			<li><span class="fa-li"><i class="far fa-square"></i></span>in lists</li>
			</ol>

			<span class="fa-stack fa-2x">
			<i class="fas fa-square fa-stack-2x"></i>
			<i class="fab fa-twitter fa-stack-1x fa-inverse"></i>
			</span>
			<span class="fa-stack fa-2x">
			<i class="fas fa-circle fa-stack-2x"></i>
			<i class="fas fa-flag fa-stack-1x fa-inverse"></i>
			</span>
			<span class="fa-stack fa-2x">
			<i class="fas fa-square fa-stack-2x"></i>
			<i class="fas fa-terminal fa-stack-1x fa-inverse"></i>
			</span>
			<span class="fa-stack fa-4x">
			<i class="fas fa-square fa-stack-2x"></i>
			<i class="fas fa-terminal fa-stack-1x fa-inverse"></i>
			</span>
			<span class="fa-stack fa-2x">
			<i class="fas fa-camera fa-stack-1x"></i>
			<i class="fas fa-ban fa-stack-2x" style="color:Tomato"></i>
			</span>


            <div class="fa-3x">
			<i class="fas fa-spinner fa-spin"></i>
			<i class="fas fa-circle-notch fa-spin"></i>
			<i class="fas fa-sync fa-spin"></i>
			<i class="fas fa-cog fa-spin"></i>
			<i class="fas fa-spinner fa-pulse"></i>
			<i class="fas fa-stroopwafel fa-spin"></i>
		</div>

		</div>
					
					
		
	'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:01.858817.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.058868.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 0 do_action/apply_filters calls and 5 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.922151.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running ArrayElementDetector
### Start running FrontBaseDetector
### Finish running FileProDetector
### Start running HashDetector
### Finish running DbaseDetector
### Start running IBMDb2Detector
### Finish running DbplusDetector
### Start running InformixDetector
### Finish running IBMDb2Detector
### Start running IngresDetector
### Finish running HashDetector
### Start running maxdbDetector
### Finish running CubridDetector
### Start running MongoDbDetector
### Finish running MongoDbDetector
### Start running MongoDetector
### Finish running FirebirdInterBaseDetector
### Start running MsqlDetector
### Finish running MongoDetector
### Start running MySQLDetector
### Finish running FrontBaseDetector
### Start running MySQLiDetector
### Finish running InformixDetector
### Start running Oci8Detector
### Finish running IngresDetector
### Start running OpenSSLDetector
### Finish running OpenSSLDetector
### Start running ParadoxDetector
### Finish running MySQLDetector
### Start running PasswordHashingDetector
### Finish running MsqlDetector
### Start running PhpCurlDetector
### Finish running PhpCurlDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running Oci8Detector
### Start running PHPRetrievalDetector
### Finish running ParadoxDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPRetrievalDetector
### Start running PhpVarDetector
### Finish running PHPStorageDetector
### Start running PostgreSQLDetector
### Finish running PostgreSQLDetector
### Start running PropertyDetector
### Finish running PhpVarDetector
### Start running Sqlite3Detector
### Finish running Sqlite3Detector
### Start running SqliteDetector
### Finish running PropertyDetector
### Start running SqlServerDetector
### Finish running SqlServerDetector
### Start running SybaseDetector
### Finish running PasswordHashingDetector
### Start running TokyoTyrantDetector
### Finish running TokyoTyrantDetector
### Start running UserInputDetector
### Finish running SqliteDetector
### Start running VariableDetector
### Finish running VariableDetector
### Start running WordpressHashingFnDetector
### Finish running UserInputDetector
### Start running WordPressRemoteDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRetrievalDetector
### Finish running SybaseDetector
### Start running WordPressStorageDetector
### Finish running WordPressRemoteDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running WordPressStorageDetector
### Start running GenericEncryptionDetector
### Finish running WordPressRetrievalDetector
### Start running DeletionDetector
### Finish running GenericEncryptionDetector
### Start running UninstallDetector
### Finish running GenericDatabaseUsageDetector
### Finish running DeletionDetector
### Finish running UninstallDetector
### Finish running MySQLiDetector
### Finish running maxdbDetector
### Finish running PHPIncludedDetector
### Finished running detectors
None:587
  - MD5 called with parameters [global, node, exports, fontawesome-free-conflict-detection, src, factory, module, define]. Ignore if [global, node, exports, fontawesome-free-conflict-detection, src, factory, module, define] does not contain personal information.
None:589
  - MD5 called with parameters [global, node, exports, fontawesome-free-conflict-detection, factory, href, module, define]. Ignore if [global, node, exports, fontawesome-free-conflict-detection, factory, href, module, define] does not contain personal information.
None:592
  - MD5 called with parameters [global, node, exports, fontawesome-free-conflict-detection, factory, module, define, innerText]. Ignore if [global, node, exports, fontawesome-free-conflict-detection, factory, module, define, innerText] does not contain personal information. 

By data type:
none
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:30.132450.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 0 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.005454.

0 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
In total, tainted 0 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 9 nodes as ENCRYPTED
In total, tainted 9 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:01.810693.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:01:27.123881!
MD5 called with parameters [global, node, exports, fontawesome-free-conflict-detection, src, factory, module, define]. Ignore if [global, node, exports, fontawesome-free-conflict-detection, src, factory, module, define] does not contain personal information.,md5,None
MD5 called with parameters [global, node, exports, fontawesome-free-conflict-detection, factory, href, module, define]. Ignore if [global, node, exports, fontawesome-free-conflict-detection, factory, href, module, define] does not contain personal information.,md5,None
MD5 called with parameters [global, node, exports, fontawesome-free-conflict-detection, factory, module, define, innerText]. Ignore if [global, node, exports, fontawesome-free-conflict-detection, factory, module, define, innerText] does not contain personal information.,md5,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found no personal data in the plugin. No analysis needed. 

[main] Complaint? True 

No findings
