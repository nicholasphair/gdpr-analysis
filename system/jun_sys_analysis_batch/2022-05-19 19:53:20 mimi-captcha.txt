Timeout in resolving values
Timeout in running neo4j query
Running Main.py on mimi-captcha

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.298061.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.107625.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 10 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.620756.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 1 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.676476.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 389 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:00.679201.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 7 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.755262.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.086199.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 185 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:03.059349.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 2830
Added 2238 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 2830
Added 0 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.189594.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/mimi-captcha/captcha-image.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/mimi-captcha/captcha.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/mimi-captcha/general-options.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/mimi-captcha/mimi-captcha.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.366727.

10 PHP_REACHES edges created
1 REACHES edges created
389 PHP_REACHES edges created
7 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
2423 PHP_REACHES edges created
2830 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 961 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.037657.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 1 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:01.179923.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 12 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.801220.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 98 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.143374.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.196788.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.171669.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.025675.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.039557.

1 CALLS edges created
110 PHP_REACHES edges created
111 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 13 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.108214.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
No SQL nodes to process.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:00.102369.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'<div class="notice notice-error"><p>sprintf(__("<strong>ERROR: PHP GD extension is not installed or turned on. Mimi Captcha plugin can not run correctly.</strong><br/>Please see the <a href="%1$s">PHP documentation</a> for more information.", "mimi-captcha"), "https://secure.php.net/manual/book.image.php")</p></div>'' cannot be parsed correct.
HTML code '$'<option value=2"'' cannot be parsed correct.
HTML code '$'$allowlist_ips'' cannot be parsed correct.
HTML code '$'>2</option>'' cannot be parsed correct.
HTML code '$'<div class="notice notice-warning"><p><strong>sprintf(__("Thank you for using Mimi Captcha. The plugin is not configured yet, please go to the <a href="%1$s">plugin admin page</a> to check settings.", "mimi-captcha"), admin_url("options-general.php?page=micaptcha_slug"))</strong></p></div>'' cannot be parsed correct.
HTML code '$'<div class="notice notice-error"><p>sprintf(__("<strong>ERROR: PHP GD extension is not installed or turned on. Mimi Captcha plugin can not run correctly.</strong><br>Please see the <a href="%1$s">PHP documentation</a> for more information.", "mimi-captcha"), "https://secure.php.net/manual/book.image.php")</p></div>'' cannot be parsed correct.
HTML code '$'MICAPTCHA_WHITELIST'' cannot be parsed correct.
HTML code '$'MICAPTCHA_CONTENT'' cannot be parsed correct.
HTML code '$'<label style="color: #FF0000;">$_SESSION_captcha_error</label>
			<span style="display: block; clear: both;"></span>'' cannot be parsed correct.
HTML code '$'MICAPTCHA_INPUT'' cannot be parsed correct.
HTML code '$'MICAPTCHA_WHITELISTMICAPTCHA_CONTENTMICAPTCHA_INPUT'' cannot be parsed correct.
HTML code '$'MICAPTCHA_WHITELISTMICAPTCHA_CONTENTMICAPTCHA_INPUT'' cannot be parsed correct.
HTML code '$'MICAPTCHA_WHITELIST'' cannot be parsed correct.
HTML code '$'MICAPTCHA_CONTENTMICAPTCHA_INPUT'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'selected="selected"'' cannot be parsed correct.
HTML code '$'selected="selected"'' cannot be parsed correct.
HTML code '$'selected="selected"'' cannot be parsed correct.
HTML code '$'selected="selected"'' cannot be parsed correct.
HTML code '$'selected="selected"'' cannot be parsed correct.
HTML code '$'selected="selected"'' cannot be parsed correct.
HTML code '$'selected="selected"'' cannot be parsed correct.
HTML code '$'selected="selected"'' cannot be parsed correct.
HTML code '$'selected="selected"'' cannot be parsed correct.
HTML code '$'selected="selected"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'selected="selected"'' cannot be parsed correct.
HTML code '$'selected="selected"'' cannot be parsed correct.
HTML code '$'selected="selected"'' cannot be parsed correct.
HTML code '$'selected="selected"'' cannot be parsed correct.
HTML code '$'selected="selected"'' cannot be parsed correct.
HTML code '$'selected="selected"'' cannot be parsed correct.
HTML code '$'selected="selected"'' cannot be parsed correct.
HTML code '$'selected="selected"'' cannot be parsed correct.
HTML code '$'selected="selected"'' cannot be parsed correct.
HTML code '$'selected="selected"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:04.237839.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.046470.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 0 do_action/apply_filters calls and 26 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.884304.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FileProDetector
### Start running FrontBaseDetector
### Finish running DbaseDetector
### Start running HashDetector
### Finish running FirebirdInterBaseDetector
### Start running IBMDb2Detector
### Finish running DbplusDetector
### Start running InformixDetector
### Finish running CubridDetector
### Start running IngresDetector
### Finish running InformixDetector
### Start running maxdbDetector
### Finish running FrontBaseDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running HashDetector
### Start running Oci8Detector
### Finish running MySQLDetector
### Start running OpenSSLDetector
### Finish running Oci8Detector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running MongoDbDetector
### Start running PhpCurlDetector
### Finish running OpenSSLDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PhpCurlDetector
### Start running PHPRetrievalDetector
### Finish running PasswordHashingDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPIncludedDetector
### Start running PhpVarDetector
### Finish running ArrayElementDetector
### Start running PostgreSQLDetector
### Finish running PostgreSQLDetector
### Start running PropertyDetector
### Finish running PHPStorageDetector
### Start running Sqlite3Detector
### Finish running PHPRetrievalDetector
### Start running SqliteDetector
### Finish running SqliteDetector
### Start running SqlServerDetector
### Finish running PropertyDetector
### Start running SybaseDetector
### Finish running Sqlite3Detector
### Start running TokyoTyrantDetector
### Finish running PhpVarDetector
### Start running UserInputDetector
### Finish running SybaseDetector
### Start running VariableDetector
### Finish running maxdbDetector
### Start running WordpressHashingFnDetector
### Finish running MySQLiDetector
### Start running WordPressRemoteDetector
### Finish running SqlServerDetector
### Start running WordPressRetrievalDetector
### Finish running TokyoTyrantDetector
### Start running WordPressStorageDetector
### Finish running WordPressRemoteDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running VariableDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running WordpressHashingFnDetector
### Start running UninstallDetector
### Finish running UserInputDetector
### Finish running GenericDatabaseUsageDetector
### Finish running WordPressStorageDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running WordPressRetrievalDetector
### Finished running detectors
mimi-captcha.php:368
  - Request variable '$_POST["repeat_password"]' of personal types {'password'} is found.
  - Data types: password
mimi-captcha.php:368
  - Request variable '$_POST["repeat_password"]' of personal types {'password'} is found.
  - Data types: password
mimi-captcha.php:372
  - Request variable '$_POST["repeat_password"]' of personal types {'password'} is found.
  - Data types: password 

mimi-captcha.php:391
  - CRYPTOGRAPHY call to wp_update_user($userdata) alters data types {'user_meta', 'user'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user_meta, user 

general-options.php:79
  - RETRIEVAL call to get_option("micaptcha_" . $mi_option) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
mimi-captcha.php:34
  - RETRIEVAL call to get_option("micaptcha_loading_mode") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
mimi-captcha.php:112
  - RETRIEVAL call to get_option("micaptcha_type") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
mimi-captcha.php:113
  - RETRIEVAL call to get_option("micaptcha_letters") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
mimi-captcha.php:114
  - RETRIEVAL call to get_option("micaptcha_total_no_of_characters") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
mimi-captcha.php:115
  - RETRIEVAL call to get_option("micaptcha_use_curve") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
mimi-captcha.php:115
  - RETRIEVAL call to get_option("micaptcha_use_noise") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
mimi-captcha.php:115
  - RETRIEVAL call to get_option("micaptcha_distort") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
mimi-captcha.php:160
  - RETRIEVAL call to get_option("micaptcha_type") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
mimi-captcha.php:242
  - RETRIEVAL call to get_option("micaptcha_allowlist_ips") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
mimi-captcha.php:261
  - RETRIEVAL call to get_option("micaptcha_timeout_time") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
mimi-captcha.php:261
  - RETRIEVAL call to get_option("micaptcha_timeout_time") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
mimi-captcha.php:262
  - RETRIEVAL call to get_option("micaptcha_timeout_time") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
mimi-captcha.php:273
  - RETRIEVAL call to get_option("micaptcha_case_sensitive") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
mimi-captcha.php:284
  - RETRIEVAL call to get_option("micaptcha_login") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
mimi-captcha.php:341
  - RETRIEVAL call to get_option("micaptcha_password") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
mimi-captcha.php:410
  - RETRIEVAL call to get_option("micaptcha_register") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
mimi-captcha.php:440
  - RETRIEVAL call to get_option("micaptcha_lost") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
mimi-captcha.php:463
  - RETRIEVAL call to get_option("micaptcha_comments") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
mimi-captcha.php:485
  - RETRIEVAL call to get_option("micaptcha_registered") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
mimi-captcha.php:501
  - RETRIEVAL call to get_option("micaptcha_registered") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option 

general-options.php:63
  - STORAGE call to update_option("micaptcha_" . $mi_option, $data) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
general-options.php:68
  - STORAGE call to update_option("micaptcha_" . $mi_option, $mi_value[$mi_index]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
general-options.php:72
  - STORAGE call to update_option("micaptcha_" . $mi_option, $mi_value[0]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
mimi-captcha.php:391
  - STORAGE call to wp_update_user($userdata) alters data types {'user_meta', 'user'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user_meta, user 

By data type:
option
	WordPressRetrievalDetector.get_option("micaptcha_timeout_time") - {'option'}
	WordPressRetrievalDetector.get_option("micaptcha_allowlist_ips") - {'option'}
	WordPressRetrievalDetector.get_option("micaptcha_timeout_time") - {'option'}
	WordPressRetrievalDetector.get_option("micaptcha_lost") - {'option'}
	WordPressRetrievalDetector.get_option("micaptcha_use_curve") - {'option'}
	WordPressRetrievalDetector.get_option("micaptcha_total_no_of_characters") - {'option'}
	WordPressRetrievalDetector.get_option("micaptcha_password") - {'option'}
	WordPressRetrievalDetector.get_option("micaptcha_comments") - {'option'}
	WordPressRetrievalDetector.get_option("micaptcha_type") - {'option'}
	WordPressRetrievalDetector.get_option("micaptcha_timeout_time") - {'option'}
	WordPressRetrievalDetector.get_option("micaptcha_registered") - {'option'}
	WordPressRetrievalDetector.get_option("micaptcha_distort") - {'option'}
	WordPressStorageDetector.update_option("micaptcha_" . $mi_option, $mi_value[$mi_index]) - {'option'}
	WordPressStorageDetector.update_option("micaptcha_" . $mi_option, $data) - {'option'}
	WordPressRetrievalDetector.get_option("micaptcha_login") - {'option'}
	WordPressRetrievalDetector.get_option("micaptcha_loading_mode") - {'option'}
	WordPressRetrievalDetector.get_option("micaptcha_registered") - {'option'}
	WordPressRetrievalDetector.get_option("micaptcha_type") - {'option'}
	WordPressRetrievalDetector.get_option("micaptcha_register") - {'option'}
	WordPressRetrievalDetector.get_option("micaptcha_use_noise") - {'option'}
	WordPressRetrievalDetector.get_option("micaptcha_" . $mi_option) - {'option'}
	WordPressStorageDetector.update_option("micaptcha_" . $mi_option, $mi_value[0]) - {'option'}
	WordPressRetrievalDetector.get_option("micaptcha_case_sensitive") - {'option'}
	WordPressRetrievalDetector.get_option("micaptcha_letters") - {'option'}
password
	ArrayElementDetector.(unknown) - {'password'}
	ArrayElementDetector.(unknown) - {'password'}
	ArrayElementDetector.(unknown) - {'password'}
user
	WordpressHashingFnDetector.wp_update_user($userdata) - {'user_meta', 'user'}
	WordPressStorageDetector.wp_update_user($userdata) - {'user_meta', 'user'}
user_meta
	WordpressHashingFnDetector.wp_update_user($userdata) - {'user_meta', 'user'}
	WordPressStorageDetector.wp_update_user($userdata) - {'user_meta', 'user'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:07.804902.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 63 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.227831.

63 STORE_REACHES edges created
63 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 4 nodes as PERSONAL
In total, tainted 4 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 1 nodes as ENCRYPTED
In total, tainted 1 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:00.382892.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:00:35.139229!
Request variable '$_POST["repeat_password"]' of personal types {'password'} is found.,,None
Request variable '$_POST["repeat_password"]' of personal types {'password'} is found.,,None
Request variable '$_POST["repeat_password"]' of personal types {'password'} is found.,,None
RETRIEVAL call to get_option("micaptcha_" . $mi_option) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("micaptcha_type") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("micaptcha_letters") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("micaptcha_total_no_of_characters") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("micaptcha_use_curve") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("micaptcha_distort") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("micaptcha_use_noise") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("micaptcha_type") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("micaptcha_allowlist_ips") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("micaptcha_timeout_time") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("micaptcha_timeout_time") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("micaptcha_timeout_time") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("micaptcha_case_sensitive") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("micaptcha_login") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("micaptcha_loading_mode") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("micaptcha_password") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("micaptcha_register") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("micaptcha_lost") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("micaptcha_comments") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("micaptcha_registered") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("micaptcha_registered") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
STORAGE call to update_option("micaptcha_" . $mi_option, $data) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("micaptcha_" . $mi_option, $mi_value[$mi_index]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("micaptcha_" . $mi_option, $mi_value[0]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to wp_update_user($userdata) alters data types {'user_meta', 'user'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,None,None
CRYPTOGRAPHY call to wp_update_user($userdata) alters data types {'user_meta', 'user'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,hash,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] WP User info of types (['user_meta', 'user']) stored through WordPress function "wp_update_user($userdata)", found in file mimi-captcha.php at line 391. 

[has_storage] Storage check is NONE 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['encryption', 'third_party'] 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? True 

No findings
