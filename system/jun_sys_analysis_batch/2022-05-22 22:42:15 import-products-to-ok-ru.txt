Timeout in resolving values
Timeout in running neo4j query
Running Main.py on import-products-to-ok-ru

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.540778.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.015494.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 1 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.375373.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 5 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.731569.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 1370 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:01.140146.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 0 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.552905.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.090994.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 482 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:08.194840.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 9160
Added 7302 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 9160
Added 0 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.888485.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/import-products-to-ok-ru/api-log.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/import-products-to-ok-ru/api-set.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/import-products-to-ok-ru/debug.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/import-products-to-ok-ru/export.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/import-products-to-ok-ru/extensions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/import-products-to-ok-ru/functions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/import-products-to-ok-ru/import-products-to-ok-ru.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/import-products-to-ok-ru/offer.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/import-products-to-ok-ru/sandbox.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:01.128979.

1 PHP_REACHES edges created
5 REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
9154 PHP_REACHES edges created
9160 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 2867 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.204019.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 3 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:03.042382.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 642 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:13.580878.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 908 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.298220.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.447773.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:04.807545.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.061341.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.036601.

3 CALLS edges created
1000 PHP_REACHES edges created
1550 PHP_REACHES edges created
1553 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 645 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.169884.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
No SQL nodes to process.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:00.251166.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'get_site_url(null, "/wp-admin/admin.php?page=iptokapiokset")'' cannot be parsed correct.
HTML code '$'iptok_URL'' cannot be parsed correct.
HTML code '$'iptok_URL'' cannot be parsed correct.
HTML code '$'get_site_url(null, "/wp-admin/admin.php?page=iptokapiokset")'' cannot be parsed correct.
HTML code '$'iptok_optionGET("iptok_version")'' cannot be parsed correct.
HTML code '$'$_SERVER_REQUEST_URI'' cannot be parsed correct.
HTML code '$'<strong>Log-file here:</strong><br />iptok_UPLOAD_DIR/import-products-to-ok-ru/iptok.log'' cannot be parsed correct.
HTML code '$'Ð¤Ð°Ð¹Ð» Ð»Ð¾Ð³Ð¾Ð² Ð¿ÑÑÑ'' cannot be parsed correct.
HTML code '$'$_SERVER_REQUEST_URI'' cannot be parsed correct.
HTML code '$'$_SERVER_REQUEST_URI'' cannot be parsed correct.
HTML code '$'stripslashes(htmlspecialchars(iptok_optionGET("iptok_application_id")))'' cannot be parsed correct.
HTML code '$'stripslashes(htmlspecialchars(iptok_optionGET("iptok_ok_public_key")))'' cannot be parsed correct.
HTML code '$'stripslashes(htmlspecialchars(iptok_optionGET("iptok_ok_group_id")))'' cannot be parsed correct.
HTML code '$'stripslashes(htmlspecialchars(iptok_optionGET("iptok_ok_access_token")))'' cannot be parsed correct.
HTML code '$'stripslashes(htmlspecialchars(iptok_optionGET("iptok_ok_private_key")))'' cannot be parsed correct.
HTML code '$'get_site_url(null, "/wp-admin/admin.php?page=iptokapiokset")'' cannot be parsed correct.
HTML code '$'stripslashes(htmlspecialchars(iptok_optionGET("iptok_application_id")))'' cannot be parsed correct.
HTML code '$'get_site_url(null, "/wp-admin/admin.php?page=iptokapiokset")'' cannot be parsed correct.
HTML code '$'$_SERVER_REQUEST_URI'' cannot be parsed correct.
HTML code '$'$_SERVER_REQUEST_URI'' cannot be parsed correct.
HTML code '$'$_SERVER_REQUEST_URI'' cannot be parsed correct.
HTML code '$'$_SERVER_REQUEST_URI'' cannot be parsed correct.
HTML code '$'htmlspecialchars($resust_simulated)'' cannot be parsed correct.
HTML code '$'<ol>iptok_possible_problems_list()_0</ol>'' cannot be parsed correct.
HTML code '$'<p>Self-diagnosis functions did not reveal potential problems.</p>'' cannot be parsed correct.
HTML code '$'$e->getMessage()'' cannot be parsed correct.
HTML code '$'$_SERVER_REQUEST_URI'' cannot be parsed correct.
HTML code '$'$_SERVER_REQUEST_URI'' cannot be parsed correct.
HTML code '$'iptok_URL'' cannot be parsed correct.
HTML code '$'get_term_meta($term->term_id, "iptok_ok_product_category", 1)'' cannot be parsed correct.
HTML code '$'Exception: '' cannot be parsed correct.
HTML code '$'
'' cannot be parsed correct.
HTML code '$' >'' cannot be parsed correct.
HTML code '$' >'' cannot be parsed correct.
HTML code '$' >'' cannot be parsed correct.
HTML code '$'" />
		</td>
	<tr'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:04.880322.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.046400.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 42 do_action/apply_filters calls and 25 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:01.872264.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbaseDetector
### Start running FrontBaseDetector
### Finish running FileProDetector
### Start running HashDetector
### Finish running FirebirdInterBaseDetector
### Start running IBMDb2Detector
### Finish running DbplusDetector
### Start running InformixDetector
### Finish running CubridDetector
### Start running IngresDetector
### Finish running InformixDetector
### Start running maxdbDetector
### Finish running FrontBaseDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running MongoDbDetector
### Start running OpenSSLDetector
### Finish running Oci8Detector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running ArrayElementDetector
### Start running PhpCurlDetector
### Finish running HashDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PasswordHashingDetector
### Start running PHPRetrievalDetector
### Finish running OpenSSLDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPRetrievalDetector
### Start running PhpVarDetector
### Finish running MySQLiDetector
### Start running PostgreSQLDetector
### Finish running maxdbDetector
### Start running PropertyDetector
### Finish running PhpVarDetector
### Start running Sqlite3Detector
### Finish running PostgreSQLDetector
### Start running SqliteDetector
### Finish running PropertyDetector
### Start running SqlServerDetector
### Finish running SqliteDetector
### Start running SybaseDetector
### Finish running SybaseDetector
### Start running TokyoTyrantDetector
### Finish running Sqlite3Detector
### Start running UserInputDetector
### Finish running TokyoTyrantDetector
### Start running VariableDetector
### Finish running SqlServerDetector
### Start running WordpressHashingFnDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRemoteDetector
### Finish running WordPressRemoteDetector
### Start running WordPressRetrievalDetector
### Finish running UserInputDetector
### Start running WordPressStorageDetector
### Finish running VariableDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running GenericDatabaseUsageDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running PHPIncludedDetector
### Start running UninstallDetector
### Finish running PhpCurlDetector
### Finish running PHPStorageDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running WordPressRetrievalDetector
### Finish running WordPressStorageDetector
### Finished running detectors
import-products-to-ok-ru.php:573
  - Request variable '$_POST["iptok_email"]' of personal types {'email'} is found.
  - Data types: email
import-products-to-ok-ru.php:573
  - Request variable '$_POST["iptok_email"]' of personal types {'email'} is found.
  - Data types: email
import-products-to-ok-ru.php:574
  - Request variable '$_POST["iptok_email"]' of personal types {'email'} is found.
  - Data types: email 

functions.php:384
  - MD5 called with parameters [params, iptok_arInStr, ok_access_token, md5, ok_private_key]. Ignore if [params, iptok_arInStr, ok_access_token, md5, ok_private_key] does not contain personal information.
functions.php:384
  - MD5 called with parameters [ok_private_key, ok_access_token]. Ignore if [ok_private_key, ok_access_token] does not contain personal information.
functions.php:441
  - MD5 called with parameters [params, iptok_arInStr, ok_access_token, md5, ok_private_key]. Ignore if [params, iptok_arInStr, ok_access_token, md5, ok_private_key] does not contain personal information.
functions.php:441
  - MD5 called with parameters [ok_private_key, ok_access_token]. Ignore if [ok_private_key, ok_access_token] does not contain personal information.
functions.php:531
  - MD5 called with parameters [params, iptok_arInStr, ok_access_token, md5, ok_private_key]. Ignore if [params, iptok_arInStr, ok_access_token, md5, ok_private_key] does not contain personal information.
functions.php:531
  - MD5 called with parameters [ok_private_key, ok_access_token]. Ignore if [ok_private_key, ok_access_token] does not contain personal information.
functions.php:603
  - MD5 called with parameters [params, iptok_arInStr, ok_access_token, md5, ok_private_key]. Ignore if [params, iptok_arInStr, ok_access_token, md5, ok_private_key] does not contain personal information.
functions.php:603
  - MD5 called with parameters [ok_private_key, ok_access_token]. Ignore if [ok_private_key, ok_access_token] does not contain personal information.
functions.php:651
  - MD5 called with parameters [ok_private_key, ok_access_token]. Ignore if [ok_private_key, ok_access_token] does not contain personal information.
functions.php:651
  - MD5 called with parameters [params, iptok_arInStr, ok_access_token, md5, ok_private_key]. Ignore if [params, iptok_arInStr, ok_access_token, md5, ok_private_key] does not contain personal information.
functions.php:726
  - MD5 called with parameters [params, iptok_arInStr, ok_access_token, md5, ok_private_key]. Ignore if [params, iptok_arInStr, ok_access_token, md5, ok_private_key] does not contain personal information.
functions.php:726
  - MD5 called with parameters [ok_private_key, ok_access_token]. Ignore if [ok_private_key, ok_access_token] does not contain personal information.
functions.php:805
  - MD5 called with parameters [params, iptok_arInStr, ok_access_token, md5, ok_private_key]. Ignore if [params, iptok_arInStr, ok_access_token, md5, ok_private_key] does not contain personal information.
functions.php:805
  - MD5 called with parameters [ok_private_key, ok_access_token]. Ignore if [ok_private_key, ok_access_token] does not contain personal information.
functions.php:854
  - MD5 called with parameters [params, iptok_arInStr, ok_access_token, md5, ok_private_key]. Ignore if [params, iptok_arInStr, ok_access_token, md5, ok_private_key] does not contain personal information.
functions.php:854
  - MD5 called with parameters [ok_private_key, ok_access_token]. Ignore if [ok_private_key, ok_access_token] does not contain personal information. 

api-log.php:24
  - RETRIEVAL call to fgets($file_handle).
  - Data types: file 

functions.php:183
  - STORAGE call to file_put_contents($filename, "[" . date("Y-m-d H:i:s") . "] " . $text . PHP_EOL, FILE_APPEND).
  - Data types: file
functions.php:190
  - STORAGE call to file_put_contents($filename, "[" . date("Y-m-d H:i:s") . "] " . $text . PHP_EOL, FILE_APPEND).
  - Data types: file
functions.php:213
  - STORAGE call to file_put_contents($filename, "[" . date("Y-m-d H:i:s") . "] " . $text . PHP_EOL, FILE_APPEND).
  - Data types: file
functions.php:220
  - STORAGE call to file_put_contents($filename, "[" . date("Y-m-d H:i:s") . "] " . $text . PHP_EOL, FILE_APPEND).
  - Data types: file 

functions.php:101
  - RETRIEVAL call to add_blog_option(get_current_blog_id(), $optName, $value). Passed arguments: 0: $id (int), 1: $option (string), 2: $value (mixed). Returns (bool).
functions.php:143
  - RETRIEVAL call to get_option($optName) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
functions.php:359
  - RETRIEVAL call to get_post_meta($thumb_id, "iptok_existing_photo_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
functions.php:360
  - RETRIEVAL call to get_post_meta($thumb_id, "iptok_existing_photo_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
functions.php:882
  - RETRIEVAL call to get_post_meta($postId, "iptok_prod_id_on_ok", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
functions.php:883
  - RETRIEVAL call to get_post_meta($postId, "iptok_prod_id_on_ok", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
functions.php:971
  - RETRIEVAL call to get_post_meta($post->ID, "iptok_existing_photo_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
import-products-to-ok-ru.php:143
  - RETRIEVAL call to add_blog_option(get_current_blog_id(), "iptok_version", "1.4.4"). Passed arguments: 0: $id (int), 1: $option (string), 2: $value (mixed). Returns (bool).
import-products-to-ok-ru.php:258
  - RETRIEVAL call to get_option("iptok_step_export") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
import-products-to-ok-ru.php:293
  - RETRIEVAL call to get_post_meta($post_id, "iptok_prod_id_on_ok", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
import-products-to-ok-ru.php:294
  - RETRIEVAL call to get_post_meta($post_id, "iptok_prod_id_on_ok", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
import-products-to-ok-ru.php:427
  - RETRIEVAL call to get_post_meta($post->ID, "iptok_prod_id_on_ok", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
import-products-to-ok-ru.php:428
  - RETRIEVAL call to get_post_meta($post->ID, "iptok_prod_id_on_ok", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
import-products-to-ok-ru.php:437
  - RETRIEVAL call to get_post_meta($post->ID, "iptok_prod_id_on_ok", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
offer.php:97
  - RETRIEVAL call to get_post_meta($postId, "iptok_product_id_in_ok", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
offer.php:98
  - RETRIEVAL call to get_post_meta($postId, "iptok_product_id_in_ok", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
offer.php:258
  - RETRIEVAL call to get_post_meta($postId, "iptok_prod_id_on_ok", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
offer.php:260
  - RETRIEVAL call to get_post_meta($postId, "iptok_prod_id_on_ok", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
offer.php:360
  - RETRIEVAL call to get_post_meta($postId, "iptok_prod_id_on_ok", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
offer.php:362
  - RETRIEVAL call to get_post_meta($postId, "iptok_prod_id_on_ok", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta 

api-set.php:17
  - STORAGE call to update_option("iptok_application_id", sanitize_text_field($_POST["iptok_application_id"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
api-set.php:18
  - STORAGE call to update_option("iptok_ok_public_key", sanitize_text_field($_POST["iptok_ok_public_key"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
api-set.php:19
  - STORAGE call to update_option("iptok_ok_group_id", sanitize_text_field($_POST["iptok_ok_group_id"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
api-set.php:20
  - STORAGE call to update_option("iptok_ok_access_token", sanitize_text_field($_POST["iptok_ok_access_token"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
api-set.php:21
  - STORAGE call to update_option("iptok_ok_private_key", sanitize_text_field($_POST["iptok_ok_private_key"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
functions.php:14
  - STORAGE call to update_option("iptok_errors", $message) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
functions.php:103
  - STORAGE call to add_option($optName, $value) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
functions.php:123
  - STORAGE call to update_option($optName, $value) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
functions.php:160
  - STORAGE call to delete_blog_option(get_current_blog_id(), $optName) alters data types {'option'}. Passed arguments: 0: $id (int), 1: $option (string). Returns (bool).
  - Data types: option
functions.php:162
  - STORAGE call to delete_option($optName) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
functions.php:458
  - STORAGE call to update_post_meta($thumb_id, "iptok_photo_ids", $photo_ids) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
functions.php:459
  - STORAGE call to update_post_meta($thumb_id, "iptok_existing_photo_id", $iptok_existing_photo_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
functions.php:887
  - STORAGE call to update_post_meta($postId, "iptok_prod_id_on_ok", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
functions.php:978
  - STORAGE call to update_post_meta($post["ID"], "iptok_existing_photo_id", $attachment["iptok_existing_photo_id"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
functions.php:979
  - STORAGE call to delete_post_meta($post["ID"], "iptok_existing_photo_id") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
functions.php:1002
  - STORAGE call to update_option("iptok_version", iptok_VER) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
import-products-to-ok-ru.php:145
  - STORAGE call to add_option("iptok_version", "1.4.4") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
import-products-to-ok-ru.php:298
  - STORAGE call to update_post_meta($post_id, "iptok_prod_id_on_ok", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
import-products-to-ok-ru.php:303
  - STORAGE call to update_post_meta($post_id, "iptok_prod_id_on_ok", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
import-products-to-ok-ru.php:328
  - STORAGE call to update_post_meta($post_id, "iptok_stopexport", $iptok_stopexport) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
import-products-to-ok-ru.php:331
  - STORAGE call to update_post_meta($post_id, "iptok_stopexport", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
import-products-to-ok-ru.php:397
  - STORAGE call to update_post_meta($post_id, "_iptok_stopexport", esc_attr($_POST["_iptok_stopexport"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
import-products-to-ok-ru.php:510
  - STORAGE call to delete_post_meta($res_query->posts[$i], "iptok_prod_id_on_ok") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
import-products-to-ok-ru.php:511
  - STORAGE call to delete_post_meta($res_query->posts[$i], "iptok_stopexport") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
offer.php:272
  - STORAGE call to update_post_meta($postId, "iptok_prod_id_on_ok", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
offer.php:276
  - STORAGE call to delete_post_meta($thumb_id, "iptok_photo_ids") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
offer.php:277
  - STORAGE call to delete_post_meta($thumb_id, "iptok_existing_photo_id") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
offer.php:281
  - STORAGE call to update_post_meta($postId, "iptok_prod_id_on_ok", $res_arr[1]["product_id"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
offer.php:374
  - STORAGE call to update_post_meta($postId, "iptok_prod_id_on_ok", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
offer.php:378
  - STORAGE call to delete_post_meta($thumb_id, "iptok_photo_ids") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
offer.php:379
  - STORAGE call to delete_post_meta($thumb_id, "iptok_existing_photo_id") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
offer.php:383
  - STORAGE call to update_post_meta($postId, "iptok_prod_id_on_ok", $res_arr[1]["product_id"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta 

functions.php:160
  - DELETION call to delete_blog_option(get_current_blog_id(), $optName) alters data types {'option'}. Passed arguments: 0: $id (int), 1: $option (string). Returns (bool).
  - Data types: option
functions.php:162
  - DELETION call to delete_option($optName) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
functions.php:979
  - DELETION call to delete_post_meta($post["ID"], "iptok_existing_photo_id") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
import-products-to-ok-ru.php:510
  - DELETION call to delete_post_meta($res_query->posts[$i], "iptok_prod_id_on_ok") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
import-products-to-ok-ru.php:511
  - DELETION call to delete_post_meta($res_query->posts[$i], "iptok_stopexport") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
offer.php:276
  - DELETION call to delete_post_meta($thumb_id, "iptok_photo_ids") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
offer.php:277
  - DELETION call to delete_post_meta($thumb_id, "iptok_existing_photo_id") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
offer.php:378
  - DELETION call to delete_post_meta($thumb_id, "iptok_photo_ids") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
offer.php:379
  - DELETION call to delete_post_meta($thumb_id, "iptok_existing_photo_id") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta 

By data type:
email
	ArrayElementDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
file
	PHPRetrievalDetector.fgets($file_handle) - {'file'}
	PHPStorageDetector.file_put_contents($filename, "[" . date("Y-m-d H:i:s") . "] " . $text . PHP_EOL, FILE_APPEND) - {'file'}
	PHPStorageDetector.file_put_contents($filename, "[" . date("Y-m-d H:i:s") . "] " . $text . PHP_EOL, FILE_APPEND) - {'file'}
	PHPStorageDetector.file_put_contents($filename, "[" . date("Y-m-d H:i:s") . "] " . $text . PHP_EOL, FILE_APPEND) - {'file'}
	PHPStorageDetector.file_put_contents($filename, "[" . date("Y-m-d H:i:s") . "] " . $text . PHP_EOL, FILE_APPEND) - {'file'}
none
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	WordPressRetrievalDetector.add_blog_option(get_current_blog_id(), $optName, $value) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	WordPressRetrievalDetector.add_blog_option(get_current_blog_id(), "iptok_version", "1.4.4") - set()
	PHPIncludedDetector.(unknown) - set()
option
	WordPressStorageDetector.update_option("iptok_ok_access_token", sanitize_text_field($_POST["iptok_ok_access_token"])) - {'option'}
	WordPressRetrievalDetector.get_option($optName) - {'option'}
	WordPressStorageDetector.update_option("iptok_ok_group_id", sanitize_text_field($_POST["iptok_ok_group_id"])) - {'option'}
	WordPressStorageDetector.update_option("iptok_application_id", sanitize_text_field($_POST["iptok_application_id"])) - {'option'}
	WordPressStorageDetector.add_option($optName, $value) - {'option'}
	WordPressStorageDetector.add_option("iptok_version", "1.4.4") - {'option'}
	WordPressStorageDetector.delete_blog_option(get_current_blog_id(), $optName) - {'option'}
	WordPressStorageDetector.update_option("iptok_ok_private_key", sanitize_text_field($_POST["iptok_ok_private_key"])) - {'option'}
	WordPressStorageDetector.update_option("iptok_ok_public_key", sanitize_text_field($_POST["iptok_ok_public_key"])) - {'option'}
	WordPressStorageDetector.update_option($optName, $value) - {'option'}
	WordPressStorageDetector.update_option("iptok_version", iptok_VER) - {'option'}
	WordPressRetrievalDetector.get_option("iptok_step_export") - {'option'}
	WordPressStorageDetector.delete_option($optName) - {'option'}
	DeletionDetector.delete_blog_option(get_current_blog_id(), $optName) - {'option'}
	DeletionDetector.delete_option($optName) - {'option'}
	WordPressStorageDetector.update_option("iptok_errors", $message) - {'option'}
post_meta
	WordPressRetrievalDetector.get_post_meta($post_id, "iptok_prod_id_on_ok", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($thumb_id, "iptok_existing_photo_id", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "iptok_stopexport", "") - {'post_meta'}
	DeletionDetector.delete_post_meta($res_query->posts[$i], "iptok_prod_id_on_ok") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postId, "iptok_prod_id_on_ok", true) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($res_query->posts[$i], "iptok_stopexport") - {'post_meta'}
	DeletionDetector.delete_post_meta($thumb_id, "iptok_photo_ids") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postId, "iptok_prod_id_on_ok", true) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post["ID"], "iptok_existing_photo_id") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postId, "iptok_prod_id_on_ok", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_iptok_stopexport", esc_attr($_POST["_iptok_stopexport"])) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postId, "iptok_product_id_in_ok", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postId, "iptok_prod_id_on_ok", true) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($res_query->posts[$i], "iptok_prod_id_on_ok") - {'post_meta'}
	DeletionDetector.delete_post_meta($res_query->posts[$i], "iptok_stopexport") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postId, "iptok_prod_id_on_ok", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "iptok_prod_id_on_ok", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postId, "iptok_prod_id_on_ok", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($thumb_id, "iptok_photo_ids", $photo_ids) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "iptok_existing_photo_id", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "iptok_stopexport", $iptok_stopexport) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postId, "iptok_prod_id_on_ok", "") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "iptok_prod_id_on_ok", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "iptok_prod_id_on_ok", true) - {'post_meta'}
	DeletionDetector.delete_post_meta($thumb_id, "iptok_photo_ids") - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($thumb_id, "iptok_existing_photo_id") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post["ID"], "iptok_existing_photo_id", $attachment["iptok_existing_photo_id"]) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postId, "iptok_prod_id_on_ok", "") - {'post_meta'}
	DeletionDetector.delete_post_meta($thumb_id, "iptok_existing_photo_id") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($thumb_id, "iptok_existing_photo_id", $iptok_existing_photo_id) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($thumb_id, "iptok_photo_ids") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postId, "iptok_prod_id_on_ok", $res_arr[1]["product_id"]) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postId, "iptok_prod_id_on_ok", $res_arr[1]["product_id"]) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($postId, "iptok_prod_id_on_ok", "") - {'post_meta'}
	DeletionDetector.delete_post_meta($thumb_id, "iptok_existing_photo_id") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "iptok_prod_id_on_ok", "") - {'post_meta'}
	DeletionDetector.delete_post_meta($post["ID"], "iptok_existing_photo_id") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "iptok_prod_id_on_ok", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "iptok_prod_id_on_ok", "") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($thumb_id, "iptok_existing_photo_id", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postId, "iptok_product_id_in_ok", true) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($thumb_id, "iptok_photo_ids") - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($thumb_id, "iptok_existing_photo_id") - {'post_meta'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:16.561603.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 348 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.507845.

348 STORE_REACHES edges created
348 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 11 nodes as PERSONAL
In total, tainted 11 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 16 nodes as ENCRYPTED
In total, tainted 16 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:01.118461.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:01:20.727311!
Request variable '$_POST["iptok_email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["iptok_email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["iptok_email"]' of personal types {'email'} is found.,,None
DELETION call to delete_blog_option(get_current_blog_id(), $optName) alters data types {'option'}. Passed arguments: 0: $id (int), 1: $option (string). Returns (bool).,None,None
DELETION call to delete_option($optName) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_post_meta($post["ID"], "iptok_existing_photo_id") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($res_query->posts[$i], "iptok_prod_id_on_ok") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($res_query->posts[$i], "iptok_stopexport") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($thumb_id, "iptok_photo_ids") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($thumb_id, "iptok_existing_photo_id") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($thumb_id, "iptok_photo_ids") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($thumb_id, "iptok_existing_photo_id") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
MD5 called with parameters [ok_private_key, ok_access_token]. Ignore if [ok_private_key, ok_access_token] does not contain personal information.,md5,None
MD5 called with parameters [params, iptok_arInStr, ok_access_token, md5, ok_private_key]. Ignore if [params, iptok_arInStr, ok_access_token, md5, ok_private_key] does not contain personal information.,md5,None
MD5 called with parameters [ok_private_key, ok_access_token]. Ignore if [ok_private_key, ok_access_token] does not contain personal information.,md5,None
MD5 called with parameters [params, iptok_arInStr, ok_access_token, md5, ok_private_key]. Ignore if [params, iptok_arInStr, ok_access_token, md5, ok_private_key] does not contain personal information.,md5,None
MD5 called with parameters [ok_private_key, ok_access_token]. Ignore if [ok_private_key, ok_access_token] does not contain personal information.,md5,None
MD5 called with parameters [params, iptok_arInStr, ok_access_token, md5, ok_private_key]. Ignore if [params, iptok_arInStr, ok_access_token, md5, ok_private_key] does not contain personal information.,md5,None
MD5 called with parameters [params, iptok_arInStr, ok_access_token, md5, ok_private_key]. Ignore if [params, iptok_arInStr, ok_access_token, md5, ok_private_key] does not contain personal information.,md5,None
MD5 called with parameters [ok_private_key, ok_access_token]. Ignore if [ok_private_key, ok_access_token] does not contain personal information.,md5,None
MD5 called with parameters [ok_private_key, ok_access_token]. Ignore if [ok_private_key, ok_access_token] does not contain personal information.,md5,None
MD5 called with parameters [params, iptok_arInStr, ok_access_token, md5, ok_private_key]. Ignore if [params, iptok_arInStr, ok_access_token, md5, ok_private_key] does not contain personal information.,md5,None
MD5 called with parameters [params, iptok_arInStr, ok_access_token, md5, ok_private_key]. Ignore if [params, iptok_arInStr, ok_access_token, md5, ok_private_key] does not contain personal information.,md5,None
MD5 called with parameters [ok_private_key, ok_access_token]. Ignore if [ok_private_key, ok_access_token] does not contain personal information.,md5,None
MD5 called with parameters [ok_private_key, ok_access_token]. Ignore if [ok_private_key, ok_access_token] does not contain personal information.,md5,None
MD5 called with parameters [params, iptok_arInStr, ok_access_token, md5, ok_private_key]. Ignore if [params, iptok_arInStr, ok_access_token, md5, ok_private_key] does not contain personal information.,md5,None
MD5 called with parameters [params, iptok_arInStr, ok_access_token, md5, ok_private_key]. Ignore if [params, iptok_arInStr, ok_access_token, md5, ok_private_key] does not contain personal information.,md5,None
MD5 called with parameters [ok_private_key, ok_access_token]. Ignore if [ok_private_key, ok_access_token] does not contain personal information.,md5,None
RETRIEVAL call to fgets($file_handle).,None,None
STORAGE call to file_put_contents($filename, "[" . date("Y-m-d H:i:s") . "] " . $text . PHP_EOL, FILE_APPEND).,None,None
STORAGE call to file_put_contents($filename, "[" . date("Y-m-d H:i:s") . "] " . $text . PHP_EOL, FILE_APPEND).,None,None
STORAGE call to file_put_contents($filename, "[" . date("Y-m-d H:i:s") . "] " . $text . PHP_EOL, FILE_APPEND).,None,None
STORAGE call to file_put_contents($filename, "[" . date("Y-m-d H:i:s") . "] " . $text . PHP_EOL, FILE_APPEND).,None,None
RETRIEVAL call to add_blog_option(get_current_blog_id(), $optName, $value). Passed arguments: 0: $id (int), 1: $option (string), 2: $value (mixed). Returns (bool).,None,None
RETRIEVAL call to get_option($optName) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($thumb_id, "iptok_existing_photo_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($thumb_id, "iptok_existing_photo_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postId, "iptok_prod_id_on_ok", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postId, "iptok_prod_id_on_ok", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "iptok_existing_photo_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to add_blog_option(get_current_blog_id(), "iptok_version", "1.4.4"). Passed arguments: 0: $id (int), 1: $option (string), 2: $value (mixed). Returns (bool).,None,None
RETRIEVAL call to get_option("iptok_step_export") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "iptok_prod_id_on_ok", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "iptok_prod_id_on_ok", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "iptok_prod_id_on_ok", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "iptok_prod_id_on_ok", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "iptok_prod_id_on_ok", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postId, "iptok_prod_id_on_ok", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postId, "iptok_prod_id_on_ok", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postId, "iptok_prod_id_on_ok", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postId, "iptok_prod_id_on_ok", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postId, "iptok_product_id_in_ok", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postId, "iptok_product_id_in_ok", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
STORAGE call to update_option("iptok_application_id", sanitize_text_field($_POST["iptok_application_id"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("iptok_ok_public_key", sanitize_text_field($_POST["iptok_ok_public_key"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("iptok_ok_group_id", sanitize_text_field($_POST["iptok_ok_group_id"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("iptok_ok_access_token", sanitize_text_field($_POST["iptok_ok_access_token"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("iptok_ok_private_key", sanitize_text_field($_POST["iptok_ok_private_key"])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("iptok_version", iptok_VER) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option($optName, $value) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option($optName, $value) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("iptok_errors", $message) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_blog_option(get_current_blog_id(), $optName) alters data types {'option'}. Passed arguments: 0: $id (int), 1: $option (string). Returns (bool).,None,None
STORAGE call to delete_option($optName) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_post_meta($thumb_id, "iptok_photo_ids", $photo_ids) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($thumb_id, "iptok_existing_photo_id", $iptok_existing_photo_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postId, "iptok_prod_id_on_ok", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post["ID"], "iptok_existing_photo_id", $attachment["iptok_existing_photo_id"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($post["ID"], "iptok_existing_photo_id") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to add_option("iptok_version", "1.4.4") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, "iptok_prod_id_on_ok", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "iptok_prod_id_on_ok", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "iptok_stopexport", $iptok_stopexport) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "iptok_stopexport", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_iptok_stopexport", esc_attr($_POST["_iptok_stopexport"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($res_query->posts[$i], "iptok_prod_id_on_ok") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_post_meta($res_query->posts[$i], "iptok_stopexport") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($postId, "iptok_prod_id_on_ok", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($thumb_id, "iptok_photo_ids") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_post_meta($thumb_id, "iptok_existing_photo_id") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($postId, "iptok_prod_id_on_ok", $res_arr[1]["product_id"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($postId, "iptok_prod_id_on_ok", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($thumb_id, "iptok_photo_ids") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_post_meta($thumb_id, "iptok_existing_photo_id") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($postId, "iptok_prod_id_on_ok", $res_arr[1]["product_id"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] Storage check is NONE 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['encryption', 'third_party'] 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? True 

No findings
