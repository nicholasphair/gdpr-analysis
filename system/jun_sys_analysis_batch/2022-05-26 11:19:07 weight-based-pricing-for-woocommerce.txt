Timeout in resolving values
Timeout in running neo4j query
Running Main.py on weight-based-pricing-for-woocommerce

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.496011.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:00.859065.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 0 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.202860.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 2 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.576436.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 674 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:00.914357.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 33 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.878436.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.104856.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 394 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:05.867520.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 5172
Added 4069 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 6435
Added 1263 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.689475.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/weight-based-pricing-for-woocommerce/weight-based-pricing-woocommerce.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/weight-based-pricing-for-woocommerce/App/Boot.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/weight-based-pricing-for-woocommerce/App/Controllers/Activator.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/weight-based-pricing-for-woocommerce/App/Controllers/Assets.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/weight-based-pricing-for-woocommerce/App/Controllers/Deactivator.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/weight-based-pricing-for-woocommerce/App/Controllers/OrderAdjustments.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/weight-based-pricing-for-woocommerce/App/Controllers/Settings.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/weight-based-pricing-for-woocommerce/App/Controllers/Admin/AjaxRequests.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/weight-based-pricing-for-woocommerce/App/Controllers/Admin/PluginMenu.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/weight-based-pricing-for-woocommerce/App/Controllers/Admin/SimpleProducts.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/weight-based-pricing-for-woocommerce/App/Controllers/Admin/VariableProducts.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/weight-based-pricing-for-woocommerce/App/Controllers/Frontend/CartAdjustments.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/weight-based-pricing-for-woocommerce/App/Controllers/Frontend/ProductAdjustments.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/weight-based-pricing-for-woocommerce/App/Controllers/Frontend/ShopAdjustments.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/weight-based-pricing-for-woocommerce/App/Helpers/CheckCompatible.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/weight-based-pricing-for-woocommerce/App/Helpers/ParseInput.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/weight-based-pricing-for-woocommerce/App/Helpers/WooCommerce.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/weight-based-pricing-for-woocommerce/App/Views/Admin/PricingRule.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/weight-based-pricing-for-woocommerce/App/Views/Admin/Settings.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/weight-based-pricing-for-woocommerce/App/Views/Frontend/PricingSection.php' cannot be parsed correct.
Added new directory node for: vendor
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/weight-based-pricing-for-woocommerce/vendor/autoload.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/weight-based-pricing-for-woocommerce/vendor/autoload.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: composer
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/weight-based-pricing-for-woocommerce/vendor/composer/autoload_classmap.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/weight-based-pricing-for-woocommerce/vendor/composer/autoload_classmap.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: composer
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/weight-based-pricing-for-woocommerce/vendor/composer/autoload_namespaces.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/weight-based-pricing-for-woocommerce/vendor/composer/autoload_namespaces.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: composer
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/weight-based-pricing-for-woocommerce/vendor/composer/autoload_psr4.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/weight-based-pricing-for-woocommerce/vendor/composer/autoload_psr4.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: composer
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/weight-based-pricing-for-woocommerce/vendor/composer/autoload_real.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/weight-based-pricing-for-woocommerce/vendor/composer/autoload_real.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: composer
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/weight-based-pricing-for-woocommerce/vendor/composer/autoload_static.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/weight-based-pricing-for-woocommerce/vendor/composer/autoload_static.php' cannot be parsed correct.
Added new directory node for: vendor
Added new directory node for: composer
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/weight-based-pricing-for-woocommerce/vendor/composer/ClassLoader.php
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/weight-based-pricing-for-woocommerce/vendor/composer/ClassLoader.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:02.761836.

27 Nodes Created
2 REACHES edges created
674 PHP_REACHES edges created
33 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
4463 PHP_REACHES edges created
1000 PHP_REACHES edges created
1263 PHP_REACHES edges created
2 DIRECTORY_OF edges created
1 FILE_OF edges created
3 DIRECTORY_OF edges created
1 FILE_OF edges created
3 DIRECTORY_OF edges created
1 FILE_OF edges created
3 DIRECTORY_OF edges created
1 FILE_OF edges created
3 DIRECTORY_OF edges created
1 FILE_OF edges created
3 DIRECTORY_OF edges created
1 FILE_OF edges created
3 DIRECTORY_OF edges created
1 FILE_OF edges created
6462 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 1851 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.107633.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 3 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:03.645538.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 53 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:01.720351.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 50 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.137312.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.692830.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.491569.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.009536.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.032591.

3 CALLS edges created
103 PHP_REACHES edges created
106 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 59 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.105262.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
No SQL nodes to process.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:00.120391.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'<div id="message" class="error fade"><p><strong>$error</strong></p></div>'' cannot be parsed correct.
HTML code '$'<div id="message" class="updated fade"><p><strong>$message</strong></p></div>'' cannot be parsed correct.
HTML code '$'<div id="message" class="updated fade"><p><strong>Your settings have been saved.</strong></p></div>'' cannot be parsed correct.
HTML code '$'<div id="message" class="updated fade"><p><strong>Settings reset successfully.</strong></p></div>'' cannot be parsed correct.
HTML code '$'wc_price($discount_total + $woocommerce->cart->discount_cart)'' cannot be parsed correct.
HTML code '$'str_replace(["[plugin]", "[woocommerce]"], [$plugin, $woocommerce], __("[plugin] requires the [woocommerce] plugin to be installed and active.", "weight-based-pricing-woocommerce"))'' cannot be parsed correct.
HTML code '$'esc_js($general_data_json)'' cannot be parsed correct.
HTML code '$'esc_js($variations_data_json)'' cannot be parsed correct.
HTML code '$'esc_js($data_json)'' cannot be parsed correct.
HTML code '$'Weight (get_post_meta($product_id))'' cannot be parsed correct.
HTML code '$'get_post_meta($product_id)'' cannot be parsed correct.
HTML code '$'get_post_meta($product_id)'' cannot be parsed correct.
HTML code '$'get_post_meta($product_id)'' cannot be parsed correct.
HTML code '$'get_post_meta($product_id)'' cannot be parsed correct.
HTML code '$'str_replace("[actual_weight_label]", $actual_weight_label, __("[actual_weight_label]", "weight-based-pricing-woocommerce"))'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'get_post_meta($product_id)'' cannot be parsed correct.
HTML code '$'str_replace("[sale_price_label]", $sale_price_label, __("[sale_price_label]", "weight-based-pricing-woocommerce"))'' cannot be parsed correct.
HTML code '$'get_woocommerce_currency_symbol()'' cannot be parsed correct.
HTML code '$'number_format($min_qty * $product_price, $price_decimals, ".", "")'' cannot be parsed correct.
HTML code '$'style=\'display:none\''' cannot be parsed correct.
HTML code '$'style=\'display:none\''' cannot be parsed correct.
HTML code '$'</h1>
                <form method="post" action="" enctype="multipart/form-data">
                    <style>p.description{display:inline!important}</style>
                    '' cannot be parsed correct.
HTML code '$'">
                </form>
            </div>
       '' cannot be parsed correct.
HTML code '$'readonly'' cannot be parsed correct.
HTML code '$'style="display: none"'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:03.068152.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.049228.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 2 do_action/apply_filters calls and 35 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:01.290051.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbplusDetector
### Start running FrontBaseDetector
### Finish running FileProDetector
### Start running HashDetector
### Finish running DbaseDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running FirebirdInterBaseDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running MongoDbDetector
### Start running OpenSSLDetector
### Finish running Oci8Detector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running ArrayElementDetector
### Start running PhpCurlDetector
### Finish running HashDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PasswordHashingDetector
### Start running PHPRetrievalDetector
### Finish running PhpCurlDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPIncludedDetector
### Start running PhpVarDetector
### Finish running OpenSSLDetector
### Start running PostgreSQLDetector
### Finish running PostgreSQLDetector
### Start running PropertyDetector
### Finish running PhpVarDetector
### Start running Sqlite3Detector
### Finish running PHPStorageDetector
### Start running SqliteDetector
### Finish running PHPRetrievalDetector
### Start running SqlServerDetector
### Finish running SqliteDetector
### Start running SybaseDetector
### Finish running SybaseDetector
### Start running TokyoTyrantDetector
### Finish running Sqlite3Detector
### Start running UserInputDetector
### Finish running TokyoTyrantDetector
### Start running VariableDetector
### Finish running PropertyDetector
### Start running WordpressHashingFnDetector
### Finish running SqlServerDetector
### Start running WordPressRemoteDetector
### Finish running maxdbDetector
### Start running WordPressRetrievalDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressStorageDetector
### Finish running WordPressRemoteDetector
### Start running WP_UserDetector
### Finish running MySQLiDetector
### Start running GenericDatabaseUsageDetector
### Finish running WP_UserDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running VariableDetector
### Start running UninstallDetector
### Finish running UserInputDetector
### Finish running GenericDatabaseUsageDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running WordPressStorageDetector
### Finish running WordPressRetrievalDetector
### Finished running detectors
App/Controllers/Admin/AjaxRequests.php:53
  - RETRIEVAL call to get_post_meta($post_id, "measure_range", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
App/Controllers/Admin/AjaxRequests.php:98
  - RETRIEVAL call to get_post_meta($post_id, "measure_range", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
App/Controllers/Admin/SimpleProducts.php:17
  - RETRIEVAL call to get_option("wwbp_is_enable", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
App/Controllers/Admin/SimpleProducts.php:32
  - RETRIEVAL call to get_post_meta($product_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int). Returns (mixed).
  - Data types: post_meta
App/Controllers/Admin/SimpleProducts.php:35
  - RETRIEVAL call to get_option("wwbp_default_weight_unit", "kg") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
App/Controllers/Admin/SimpleProducts.php:112
  - RETRIEVAL call to get_option("wwbp_actual_weight_is_enable", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
App/Controllers/Admin/SimpleProducts.php:200
  - RETRIEVAL call to get_option("wwbp_default_weight_unit", "kg") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
App/Controllers/Admin/VariableProducts.php:17
  - RETRIEVAL call to get_option("wwbp_is_enable", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
App/Controllers/Admin/VariableProducts.php:31
  - RETRIEVAL call to get_post_meta($variation_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int). Returns (mixed).
  - Data types: post_meta
App/Controllers/Admin/VariableProducts.php:34
  - RETRIEVAL call to get_option("wwbp_default_weight_unit", "kg") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
App/Controllers/Admin/VariableProducts.php:102
  - RETRIEVAL call to get_option("wwbp_actual_weight_is_enable", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
App/Controllers/Admin/VariableProducts.php:202
  - RETRIEVAL call to get_option("wwbp_default_weight_unit", "kg") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
App/Controllers/Assets.php:46
  - RETRIEVAL call to get_option("wwbp_is_enable", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
App/Controllers/Frontend/CartAdjustments.php:16
  - RETRIEVAL call to get_option("wwbp_is_enable", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
App/Controllers/Frontend/CartAdjustments.php:25
  - RETRIEVAL call to get_option("wwbp_show_total_savings", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
App/Controllers/Frontend/CartAdjustments.php:40
  - RETRIEVAL call to get_post_meta($product_id, "wwbp_is_enable", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
App/Controllers/Frontend/CartAdjustments.php:55
  - RETRIEVAL call to get_post_meta($product_id, "wwbp_min_qty", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
App/Controllers/Frontend/CartAdjustments.php:56
  - RETRIEVAL call to get_post_meta($product_id, "wwbp_max_qty", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
App/Controllers/Frontend/CartAdjustments.php:57
  - RETRIEVAL call to get_post_meta($product_id, "wwbp_intervel", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
App/Controllers/Frontend/CartAdjustments.php:58
  - RETRIEVAL call to get_post_meta($product_id, "wwbp_weight_unit", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
App/Controllers/Frontend/CartAdjustments.php:112
  - RETRIEVAL call to get_post_meta($product_id, "wwbp_is_enable", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
App/Controllers/Frontend/CartAdjustments.php:133
  - RETRIEVAL call to get_post_meta($product_id, "wwbp_is_enable", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
App/Controllers/Frontend/CartAdjustments.php:139
  - RETRIEVAL call to get_post_meta($product_id, "wwbp_weight_unit", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
App/Controllers/Frontend/CartAdjustments.php:141
  - RETRIEVAL call to get_option("wwbp_actual_weight_is_enable", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
App/Controllers/Frontend/CartAdjustments.php:142
  - RETRIEVAL call to get_post_meta($product_id, "wwbp_wastage_percentage", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
App/Controllers/Frontend/CartAdjustments.php:142
  - RETRIEVAL call to get_post_meta($product_id, "wwbp_wastage_percentage", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
App/Controllers/Frontend/CartAdjustments.php:149
  - RETRIEVAL call to get_option("wwbp_actual_weight_label", "Actual Weight") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
App/Controllers/Frontend/CartAdjustments.php:156
  - RETRIEVAL call to get_option("wwbp_actual_weight_is_enable", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
App/Controllers/Frontend/CartAdjustments.php:171
  - RETRIEVAL call to get_post_meta($product_id, "wwbp_pricing_rule", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
App/Controllers/Frontend/ProductAdjustments.php:16
  - RETRIEVAL call to get_option("wwbp_is_enable", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
App/Controllers/Frontend/ProductAdjustments.php:37
  - RETRIEVAL call to get_post_meta($product_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int). Returns (mixed).
  - Data types: post_meta
App/Controllers/Frontend/ProductAdjustments.php:62
  - RETRIEVAL call to get_post_meta($product_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int). Returns (mixed).
  - Data types: post_meta
App/Controllers/Frontend/ProductAdjustments.php:68
  - RETRIEVAL call to get_option("wwbp_default_weight_unit", "kg") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
App/Controllers/Frontend/ProductAdjustments.php:81
  - RETRIEVAL call to get_post_meta($product_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int). Returns (mixed).
  - Data types: post_meta
App/Controllers/Frontend/ProductAdjustments.php:87
  - RETRIEVAL call to get_option("wwbp_default_weight_unit", "kg") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
App/Controllers/Frontend/ShopAdjustments.php:28
  - RETRIEVAL call to get_post_meta($product_id, "wwbp_is_enable", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
App/Controllers/Frontend/ShopAdjustments.php:42
  - RETRIEVAL call to get_post_meta($product_id, "wwbp_is_enable", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
App/Controllers/Frontend/ShopAdjustments.php:56
  - RETRIEVAL call to get_post_meta($product_id, "wwbp_is_enable", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
App/Controllers/Frontend/ShopAdjustments.php:57
  - RETRIEVAL call to get_option("wwbp_add_to_cart_button_label", "Go To Product") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
App/Controllers/OrderAdjustments.php:33
  - RETRIEVAL call to get_post_meta($product_id, "wwbp_weight_unit", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
App/Controllers/OrderAdjustments.php:35
  - RETRIEVAL call to get_option("wwbp_actual_weight_is_enable", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
App/Controllers/OrderAdjustments.php:36
  - RETRIEVAL call to get_post_meta($product_id, "wwbp_wastage_percentage", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
App/Controllers/OrderAdjustments.php:36
  - RETRIEVAL call to get_post_meta($product_id, "wwbp_wastage_percentage", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
App/Controllers/OrderAdjustments.php:45
  - RETRIEVAL call to get_option("wwbp_actual_weight_is_enable", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
App/Controllers/Settings.php:22
  - RETRIEVAL call to get_option("wwbp_is_enable", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
App/Helpers/WooCommerce.php:15
  - RETRIEVAL call to get_option("active_plugins", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
App/Views/Frontend/PricingSection.php:17
  - RETRIEVAL call to get_option("wwbp_sale_price_label", "Sale Price") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
App/Views/Frontend/PricingSection.php:18
  - RETRIEVAL call to get_option("wwbp_actual_weight_label", "Actual Weight") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
App/Views/Frontend/PricingSection.php:23
  - RETRIEVAL call to get_option("wwbp_custom_input_is_enable", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
App/Views/Frontend/PricingSection.php:24
  - RETRIEVAL call to get_option("wwbp_actual_weight_is_enable", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
App/Views/Frontend/PricingSection.php:29
  - RETRIEVAL call to get_option("woocommerce_tax_display_shop") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
App/Views/Frontend/PricingSection.php:35
  - RETRIEVAL call to get_option("wwbp_default_weight_unit", "kg") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
App/Views/Frontend/PricingSection.php:39
  - RETRIEVAL call to get_option("wwbp_actual_weight_is_enable", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
App/Views/Frontend/PricingSection.php:123
  - RETRIEVAL call to get_option("wwbp_sale_price_label", "Sale Price") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
App/Views/Frontend/PricingSection.php:124
  - RETRIEVAL call to get_option("wwbp_actual_weight_label", "Actual Weight") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
App/Views/Frontend/PricingSection.php:132
  - RETRIEVAL call to get_option("wwbp_custom_input_is_enable", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
App/Views/Frontend/PricingSection.php:133
  - RETRIEVAL call to get_option("wwbp_actual_weight_is_enable", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
App/Views/Frontend/PricingSection.php:140
  - RETRIEVAL call to get_post_meta($i) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int). Returns (mixed).
  - Data types: post_meta
App/Views/Frontend/PricingSection.php:145
  - RETRIEVAL call to get_option("woocommerce_tax_display_shop") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
App/Views/Frontend/PricingSection.php:151
  - RETRIEVAL call to get_option("wwbp_default_weight_unit", "kg") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option 

App/Controllers/Admin/AjaxRequests.php:61
  - STORAGE call to update_post_meta($post_id, "measure_range", $measure_ranges) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
App/Controllers/Admin/AjaxRequests.php:106
  - STORAGE call to update_post_meta($post_id, "measure_range", $measure_ranges) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
App/Controllers/Admin/PluginMenu.php:81
  - STORAGE call to delete_option($option["id"]) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
App/Controllers/Admin/PluginMenu.php:82
  - STORAGE call to add_option($option["id"], $option["std"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
App/Controllers/Admin/SimpleProducts.php:151
  - STORAGE call to delete_post_meta($post_id, $meta_key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
App/Controllers/Admin/SimpleProducts.php:182
  - STORAGE call to update_post_meta($post_id, $meta_key, $parsed_pricing_rules) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
App/Controllers/Admin/SimpleProducts.php:189
  - STORAGE call to update_post_meta($post_id, $meta_key, $parsed_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
App/Controllers/Admin/SimpleProducts.php:192
  - STORAGE call to update_post_meta($post_id, $meta_key, $default_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
App/Controllers/Admin/SimpleProducts.php:198
  - STORAGE call to update_post_meta($post_id, $meta_key, $parsed_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
App/Controllers/Admin/SimpleProducts.php:201
  - STORAGE call to update_post_meta($post_id, $meta_key, $default_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
App/Controllers/Admin/SimpleProducts.php:208
  - STORAGE call to update_post_meta($post_id, $meta_key, $parsed_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
App/Controllers/Admin/VariableProducts.php:154
  - STORAGE call to delete_post_meta($variation_id, $meta_key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
App/Controllers/Admin/VariableProducts.php:184
  - STORAGE call to update_post_meta($variation_id, $meta_key, $parsed_pricing_rules) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
App/Controllers/Admin/VariableProducts.php:191
  - STORAGE call to update_post_meta($variation_id, $meta_key, $parsed_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
App/Controllers/Admin/VariableProducts.php:194
  - STORAGE call to update_post_meta($variation_id, $meta_key, $default_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
App/Controllers/Admin/VariableProducts.php:200
  - STORAGE call to update_post_meta($variation_id, $meta_key, $parsed_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
App/Controllers/Admin/VariableProducts.php:203
  - STORAGE call to update_post_meta($variation_id, $meta_key, $default_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
App/Controllers/Admin/VariableProducts.php:210
  - STORAGE call to update_post_meta($variation_id, $meta_key, $parsed_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
App/Controllers/Admin/VariableProducts.php:228
  - STORAGE call to update_post_meta($variation_id, "wwbp_pricing_rule", $parsed_pricing_rules) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta 

App/Controllers/Admin/PluginMenu.php:81
  - DELETION call to delete_option($option["id"]) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
App/Controllers/Admin/SimpleProducts.php:151
  - DELETION call to delete_post_meta($post_id, $meta_key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
App/Controllers/Admin/VariableProducts.php:154
  - DELETION call to delete_post_meta($variation_id, $meta_key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta 

By data type:
option
	WordPressRetrievalDetector.get_option("wwbp_actual_weight_is_enable", "yes") - {'option'}
	WordPressRetrievalDetector.get_option("wwbp_actual_weight_is_enable", "yes") - {'option'}
	WordPressRetrievalDetector.get_option("wwbp_custom_input_is_enable", "yes") - {'option'}
	WordPressRetrievalDetector.get_option("wwbp_default_weight_unit", "kg") - {'option'}
	WordPressRetrievalDetector.get_option("wwbp_add_to_cart_button_label", "Go To Product") - {'option'}
	WordPressRetrievalDetector.get_option("wwbp_custom_input_is_enable", "yes") - {'option'}
	WordPressRetrievalDetector.get_option("wwbp_default_weight_unit", "kg") - {'option'}
	WordPressRetrievalDetector.get_option("wwbp_actual_weight_is_enable", "yes") - {'option'}
	WordPressRetrievalDetector.get_option("wwbp_is_enable", "yes") - {'option'}
	WordPressRetrievalDetector.get_option("wwbp_default_weight_unit", "kg") - {'option'}
	WordPressRetrievalDetector.get_option("wwbp_actual_weight_is_enable", "yes") - {'option'}
	WordPressRetrievalDetector.get_option("wwbp_is_enable", "yes") - {'option'}
	WordPressRetrievalDetector.get_option("wwbp_default_weight_unit", "kg") - {'option'}
	WordPressRetrievalDetector.get_option("wwbp_show_total_savings", "yes") - {'option'}
	WordPressRetrievalDetector.get_option("wwbp_is_enable", "yes") - {'option'}
	WordPressRetrievalDetector.get_option("wwbp_actual_weight_label", "Actual Weight") - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_tax_display_shop") - {'option'}
	WordPressRetrievalDetector.get_option("wwbp_actual_weight_label", "Actual Weight") - {'option'}
	WordPressRetrievalDetector.get_option("wwbp_actual_weight_is_enable", "yes") - {'option'}
	WordPressRetrievalDetector.get_option("active_plugins", []) - {'option'}
	WordPressRetrievalDetector.get_option("wwbp_is_enable", "yes") - {'option'}
	WordPressRetrievalDetector.get_option("wwbp_is_enable", "yes") - {'option'}
	WordPressRetrievalDetector.get_option("wwbp_sale_price_label", "Sale Price") - {'option'}
	WordPressRetrievalDetector.get_option("wwbp_actual_weight_is_enable", "yes") - {'option'}
	WordPressRetrievalDetector.get_option("wwbp_actual_weight_label", "Actual Weight") - {'option'}
	WordPressRetrievalDetector.get_option("wwbp_actual_weight_is_enable", "yes") - {'option'}
	WordPressStorageDetector.delete_option($option["id"]) - {'option'}
	WordPressRetrievalDetector.get_option("wwbp_default_weight_unit", "kg") - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_tax_display_shop") - {'option'}
	WordPressRetrievalDetector.get_option("wwbp_actual_weight_is_enable", "yes") - {'option'}
	DeletionDetector.delete_option($option["id"]) - {'option'}
	WordPressRetrievalDetector.get_option("wwbp_sale_price_label", "Sale Price") - {'option'}
	WordPressRetrievalDetector.get_option("wwbp_default_weight_unit", "kg") - {'option'}
	WordPressRetrievalDetector.get_option("wwbp_actual_weight_is_enable", "yes") - {'option'}
	WordPressRetrievalDetector.get_option("wwbp_default_weight_unit", "kg") - {'option'}
	WordPressRetrievalDetector.get_option("wwbp_is_enable", "yes") - {'option'}
	WordPressStorageDetector.add_option($option["id"], $option["std"]) - {'option'}
	WordPressRetrievalDetector.get_option("wwbp_default_weight_unit", "kg") - {'option'}
post_meta
	WordPressStorageDetector.update_post_meta($post_id, "measure_range", $measure_ranges) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product_id, "wwbp_is_enable", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($i) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, $meta_key, $default_value) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($variation_id) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($variation_id, $meta_key, $parsed_pricing_rules) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product_id) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, $meta_key, $parsed_value) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, $meta_key, $parsed_pricing_rules) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "measure_range", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product_id, "wwbp_is_enable", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product_id, "wwbp_min_qty", true) - {'post_meta'}
	DeletionDetector.delete_post_meta($post_id, $meta_key) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product_id, "wwbp_wastage_percentage", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, $meta_key, $default_value) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product_id, "wwbp_intervel", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product_id, "wwbp_wastage_percentage", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product_id, "wwbp_weight_unit", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product_id) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($variation_id, $meta_key) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product_id, "wwbp_wastage_percentage", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product_id, "wwbp_is_enable", true) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post_id, $meta_key) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, $meta_key, $parsed_value) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product_id, "wwbp_is_enable", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($variation_id, $meta_key, $parsed_value) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($variation_id, $meta_key, $parsed_value) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($variation_id, $meta_key, $default_value) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product_id, "wwbp_pricing_rule", false) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($variation_id, "wwbp_pricing_rule", $parsed_pricing_rules) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, $meta_key, $parsed_value) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product_id, "wwbp_is_enable", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($variation_id, $meta_key, $parsed_value) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product_id) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product_id, "wwbp_weight_unit", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product_id, "wwbp_wastage_percentage", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product_id) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product_id, "wwbp_max_qty", true) - {'post_meta'}
	DeletionDetector.delete_post_meta($variation_id, $meta_key) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product_id, "wwbp_is_enable", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "measure_range", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product_id, "wwbp_weight_unit", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($variation_id, $meta_key, $default_value) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "measure_range", $measure_ranges) - {'post_meta'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:16.751327.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 495 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.641055.

495 STORE_REACHES edges created
495 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
In total, tainted 0 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
In total, tainted 0 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:00.005581.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:00:56.204232!
DELETION call to delete_option($option["id"]) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_post_meta($post_id, $meta_key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($variation_id, $meta_key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
RETRIEVAL call to get_post_meta($post_id, "measure_range", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "measure_range", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wwbp_actual_weight_is_enable", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wwbp_is_enable", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wwbp_default_weight_unit", "kg") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int). Returns (mixed).,None,None
RETRIEVAL call to get_option("wwbp_default_weight_unit", "kg") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wwbp_actual_weight_is_enable", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wwbp_is_enable", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wwbp_default_weight_unit", "kg") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($variation_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int). Returns (mixed).,None,None
RETRIEVAL call to get_option("wwbp_default_weight_unit", "kg") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wwbp_is_enable", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product_id, "wwbp_is_enable", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product_id, "wwbp_is_enable", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product_id, "wwbp_weight_unit", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wwbp_actual_weight_is_enable", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product_id, "wwbp_wastage_percentage", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product_id, "wwbp_wastage_percentage", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wwbp_actual_weight_label", "Actual Weight") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wwbp_actual_weight_is_enable", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wwbp_is_enable", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product_id, "wwbp_pricing_rule", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wwbp_show_total_savings", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product_id, "wwbp_is_enable", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product_id, "wwbp_min_qty", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product_id, "wwbp_max_qty", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product_id, "wwbp_intervel", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product_id, "wwbp_weight_unit", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wwbp_is_enable", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int). Returns (mixed).,None,None
RETRIEVAL call to get_option("wwbp_default_weight_unit", "kg") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int). Returns (mixed).,None,None
RETRIEVAL call to get_option("wwbp_default_weight_unit", "kg") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product_id, "wwbp_is_enable", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product_id, "wwbp_is_enable", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product_id, "wwbp_is_enable", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wwbp_add_to_cart_button_label", "Go To Product") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product_id, "wwbp_weight_unit", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wwbp_actual_weight_is_enable", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product_id, "wwbp_wastage_percentage", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product_id, "wwbp_wastage_percentage", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wwbp_actual_weight_is_enable", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wwbp_is_enable", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("active_plugins", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wwbp_sale_price_label", "Sale Price") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wwbp_actual_weight_label", "Actual Weight") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wwbp_custom_input_is_enable", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wwbp_actual_weight_is_enable", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($i) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_tax_display_shop") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wwbp_default_weight_unit", "kg") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wwbp_sale_price_label", "Sale Price") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wwbp_actual_weight_label", "Actual Weight") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wwbp_custom_input_is_enable", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wwbp_actual_weight_is_enable", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_tax_display_shop") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("wwbp_default_weight_unit", "kg") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wwbp_actual_weight_is_enable", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
STORAGE call to update_post_meta($post_id, "measure_range", $measure_ranges) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "measure_range", $measure_ranges) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_option($option["id"]) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to add_option($option["id"], $option["std"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_post_meta($post_id, $meta_key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, $meta_key, $parsed_pricing_rules) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, $meta_key, $parsed_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, $meta_key, $default_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, $meta_key, $parsed_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, $meta_key, $default_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, $meta_key, $parsed_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($variation_id, $meta_key) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($variation_id, $meta_key, $parsed_pricing_rules) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($variation_id, $meta_key, $parsed_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($variation_id, $meta_key, $default_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($variation_id, $meta_key, $parsed_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($variation_id, $meta_key, $default_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($variation_id, $meta_key, $parsed_value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($variation_id, "wwbp_pricing_rule", $parsed_pricing_rules) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found no personal data in the plugin. No analysis needed. 

[main] Complaint? True 

No findings
