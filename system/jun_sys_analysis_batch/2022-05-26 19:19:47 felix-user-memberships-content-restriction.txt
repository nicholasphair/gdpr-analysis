Timeout in resolving values
Timeout in running neo4j query
Running Main.py on felix-user-memberships-content-restriction

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:02.417809.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.571881.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 19 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.293047.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 1 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.754513.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 1327 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:01.202343.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 16 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:01.397702.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
Added 3 PHP_REACHES edges.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.085041.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 368 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:12.260888.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 12248
Added 10514 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 47979
Added 35731 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:04.354368.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/felix-user-memberships-content-restriction/memberships.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/felix-user-memberships-content-restriction/admin/controllers/controller.admin_handlers.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/felix-user-memberships-content-restriction/admin/views/documentation.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/felix-user-memberships-content-restriction/admin/views/edit_user.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/felix-user-memberships-content-restriction/admin/views/main.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/felix-user-memberships-content-restriction/admin/views/manage_users.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/felix-user-memberships-content-restriction/admin/views/pending_users.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/felix-user-memberships-content-restriction/admin/views/restrictions2.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/felix-user-memberships-content-restriction/admin/views/restrictions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/felix-user-memberships-content-restriction/admin/views/settings.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/felix-user-memberships-content-restriction/admin/views/tiers.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/felix-user-memberships-content-restriction/inc/api/class.linkedin.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/felix-user-memberships-content-restriction/inc/class/class.felix_login.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/felix-user-memberships-content-restriction/inc/class/class.felix_profile.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/felix-user-memberships-content-restriction/inc/class/class.smartcat-form.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/felix-user-memberships-content-restriction/inc/class/class.smartcat-mailer.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/felix-user-memberships-content-restriction/inc/class/class.smartcat-memberships.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/felix-user-memberships-content-restriction/inc/controllers/controller.form_handlers.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/felix-user-memberships-content-restriction/inc/controllers/controller.redirect_handler.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/felix-user-memberships-content-restriction/inc/data/tables.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/felix-user-memberships-content-restriction/inc/process/controllers.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/felix-user-memberships-content-restriction/inc/process/helpers.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/felix-user-memberships-content-restriction/inc/process/hooks.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/felix-user-memberships-content-restriction/inc/views/login_form.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/felix-user-memberships-content-restriction/inc/views/pricing_table.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/felix-user-memberships-content-restriction/inc/views/signup_form.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/felix-user-memberships-content-restriction/inc/views/user_profile.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:02.623115.

19 PHP_REACHES edges created
1 REACHES edges created
1000 PHP_REACHES edges created
1338 PHP_REACHES edges created
1 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
10889 PHP_REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
14000 PHP_REACHES edges created
15000 PHP_REACHES edges created
16000 PHP_REACHES edges created
17000 PHP_REACHES edges created
18000 PHP_REACHES edges created
19000 PHP_REACHES edges created
20000 PHP_REACHES edges created
21000 PHP_REACHES edges created
22000 PHP_REACHES edges created
23000 PHP_REACHES edges created
24000 PHP_REACHES edges created
25000 PHP_REACHES edges created
26000 PHP_REACHES edges created
27000 PHP_REACHES edges created
28000 PHP_REACHES edges created
29000 PHP_REACHES edges created
30000 PHP_REACHES edges created
31000 PHP_REACHES edges created
32000 PHP_REACHES edges created
33000 PHP_REACHES edges created
34000 PHP_REACHES edges created
35000 PHP_REACHES edges created
35731 PHP_REACHES edges created
47979 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 3689 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.190029.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:05.291183.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 826 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:15.047166.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 42 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.184086.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:01.775974.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:04.090599.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.012120.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.036281.

868 PHP_REACHES edges created
868 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 987 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.181615.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
8 SQL operations to process.
SELECT * FROM $wpdbsmartcat_memberships_pending_users WHERE pending_id = $_POST_smartcat_memberships_approve_user_id
SQL command (SELECT * FROM $wpdbsmartcat_memberships_pending_users WHERE pending_id = $_POST_smartcat_memberships_approve_user_id) cannot be parsed correct.
SELECT * FROM $wpdbsmartcat_memberships_pending_users where rejected != 1
SQL command (SELECT * FROM $wpdbsmartcat_memberships_pending_users where rejected != 1) cannot be parsed correct.
SELECT * FROM $wpdbsmartcat_memberships_pending_users where rejected = 1
SQL command (SELECT * FROM $wpdbsmartcat_memberships_pending_users where rejected = 1) cannot be parsed correct.
CREATE TABLE $wpdbsmartcat_memberships_pending_users (
        pending_id smallint(5) NOT NULL AUTO_INCREMENT,
        pending_login varchar(60) NOT NULL,
        pending_email varchar(100) NOT NULL,
        pending_first_name varchar(30) NOT NULL,
        pending_last_name varchar(30) NOT NULL,
        pending_display_name varchar(30) NOT NULL,
        pending_request_date varchar(25) NOT NULL,
        pending_role varchar(25) NOT NULL,
        pending_pass varchar(64) NOT NULL,
        pending_gender char(1) NOT NULL,
        pending_country varchar(30) NOT NULL,
        pending_linkedin_id varchar(50) NULL,
        pending_linkedin_url varchar(50) NULL,
        rejected varchar(1) default 0,
        UNIQUE KEY pending_id (pending_id)
    ) $wpdb->get_charset_collate();
SQL command (CREATE TABLE $wpdbsmartcat_memberships_pending_users ( pending_id smallint(5) NOT NULL AUTO_INCREMENT, pending_login varchar(60) NOT NULL, pending_email varchar(100) NOT NULL, pending_first_name varchar(30) NOT NULL, pending_last_name varchar(30) NOT NULL, pending_display_name varchar(30) NOT NULL, pending_request_date varchar(25) NOT NULL, pending_role varchar(25) NOT NULL, pending_pass varchar(64) NOT NULL, pending_gender char(1) NOT NULL, pending_country varchar(30) NOT NULL, pending_linkedin_id varchar(50) NULL, pending_linkedin_url varchar(50) NULL, rejected varchar(1) default 0, UNIQUE KEY pending_id (pending_id) ) $wpdb->get_charset_collate();) cannot be parsed correct.
CREATE TABLE $wpdbsmartcat_memberships_custom_tiers (
        tier_id smallint(5) NOT NULL AUTO_INCREMENT,
        title varchar(60) NOT NULL,
        slug varchar(60) NOT NULL,
        type varchar(10) default 'custom',
        hierarchy_order tinyint(1) NOT NULL,
        monthly_fee decimal(5,2) NOT NULL,
        UNIQUE KEY tier_id (tier_id)
    ) $wpdb->get_charset_collate();
SQL command (CREATE TABLE $wpdbsmartcat_memberships_custom_tiers ( tier_id smallint(5) NOT NULL AUTO_INCREMENT, title varchar(60) NOT NULL, slug varchar(60) NOT NULL, type varchar(10) default 'custom', hierarchy_order tinyint(1) NOT NULL, monthly_fee decimal(5,2) NOT NULL, UNIQUE KEY tier_id (tier_id) ) $wpdb->get_charset_collate();) cannot be parsed correct.
select * from $wpdbsmartcat_memberships_custom_tiers order by hierarchy_order asc
SQL command (select * from $wpdbsmartcat_memberships_custom_tiers order by hierarchy_order asc) cannot be parsed correct.
SELECT * FROM $wpdbusers WHERE user_registered > DATE_SUB(NOW(), INTERVAL 72 HOUR)
SQL command (SELECT * FROM $wpdbusers WHERE user_registered > DATE_SUB(NOW(), INTERVAL 72 HOUR)) cannot be parsed correct.
select * from $wpdbsmartcat_memberships_pending_users where pending_id = $args_user_id
select * from $wpdbsmartcat_memberships_pending_users where pending_id = $args_user_id
SQL command (select * from $wpdbsmartcat_memberships_pending_users where pending_id = $args_user_id) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [528, 4224, 4673, 17124, 17158, 17402, 17601, 18765]
Added 0 SQL nodes. 0 out of 8 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:03.604967.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'Error Updating User!<br>$edit_user_id->get_error_message()'' cannot be parsed correct.
HTML code '$'User: $_GET successfully promoted to ucwords($_REQUEST["smartcat_memberships_promote_user"]["tier"])'' cannot be parsed correct.
HTML code '$'Error Promoting User!<br>$edit_user_id->get_error_message()'' cannot be parsed correct.
HTML code '$'User demoted : $_GET successfully demoted to ucwords($_REQUEST["smartcat_memberships_demote_user"]["tier"])'' cannot be parsed correct.
HTML code '$'Error Demoting User!<br>$edit_user_id->get_error_message()'' cannot be parsed correct.
HTML code '$'1'' cannot be parsed correct.
HTML code '$'$this_skin'' cannot be parsed correct.
HTML code '$'User updated : $_GET'' cannot be parsed correct.
HTML code '$'SMARTCAT_MEMBERSHIPS_URL'' cannot be parsed correct.
HTML code '$'SMARTCAT_MEMBERSHIPS_URL'' cannot be parsed correct.
HTML code '$'SMARTCAT_MEMBERSHIPS_URL'' cannot be parsed correct.
HTML code '$'<strong>$_GET</strong>'' cannot be parsed correct.
HTML code '$' <strong>$_GET</strong>'' cannot be parsed correct.
HTML code '$'$_GET_0'' cannot be parsed correct.
HTML code '$'$level'' cannot be parsed correct.
HTML code '$' ucwords($level->title)s'' cannot be parsed correct.
HTML code '$'$user'' cannot be parsed correct.
HTML code '$'smartcat_memberships_switch_status(get_user_meta($user->ID, "smartcat_membership_status", True))'' cannot be parsed correct.
HTML code '$'$user'' cannot be parsed correct.
HTML code '$'$user'' cannot be parsed correct.
HTML code '$'$user'' cannot be parsed correct.
HTML code '$'$user'' cannot be parsed correct.
HTML code '$'$user'' cannot be parsed correct.
HTML code '$'smartcat_get_membership_title(get_user_meta($user->ID, "smartcat_membership_tiers", True))'' cannot be parsed correct.
HTML code '$'<img src=SMARTCAT_MEMBERSHIPS_URLadmin/assets/images/wp.png" style="width: 12px"/> $user_0'' cannot be parsed correct.
HTML code '$'admin_url()admin.php?page=memberships_edit_user&user_id=$user'' cannot be parsed correct.
HTML code '$'#activateUserModal#suspendUserModal'' cannot be parsed correct.
HTML code '$'$user'' cannot be parsed correct.
HTML code '$'$user'' cannot be parsed correct.
HTML code '$'$user'' cannot be parsed correct.
HTML code '$'$user'' cannot be parsed correct.
HTML code '$'$user_0'' cannot be parsed correct.
HTML code '$'admin_url()admin.php?page=memberships_edit_user&user_id=$user'' cannot be parsed correct.
HTML code '$'get_avatar($user->ID)'' cannot be parsed correct.
HTML code '$' <strong>$_GET</strong>'' cannot be parsed correct.
HTML code '$'$_GET_0'' cannot be parsed correct.
HTML code '$' <strong><span id="user-to-suspend"></span></strong>'' cannot be parsed correct.
HTML code '$' <strong><span id="user-to-activate"></span></strong>'' cannot be parsed correct.
HTML code '$'$user'' cannot be parsed correct.
HTML code '$' <strong><span id="user-to-delete"></span></strong>'' cannot be parsed correct.
HTML code '$'$page'' cannot be parsed correct.
HTML code '$'get_edit_post_link($page->ID)'' cannot be parsed correct.
HTML code '$'$user_pending_login'' cannot be parsed correct.
HTML code '$'$user_pending_email'' cannot be parsed correct.
HTML code '$'$user_pending_first_name'' cannot be parsed correct.
HTML code '$'$user_pending_last_name'' cannot be parsed correct.
HTML code '$'$user_pending_display_name'' cannot be parsed correct.
HTML code '$'$user_pending_request_date'' cannot be parsed correct.
HTML code '$'smartcat_get_membership_title($user["pending_role"])'' cannot be parsed correct.
HTML code '$'$user_pending_country'' cannot be parsed correct.
HTML code '$'$user_pending_id'' cannot be parsed correct.
HTML code '$'$user_pending_id'' cannot be parsed correct.
HTML code '$'$user_user_login'' cannot be parsed correct.
HTML code '$'$user_user_email'' cannot be parsed correct.
HTML code '$'$user_display_name'' cannot be parsed correct.
HTML code '$'$user_user_registered'' cannot be parsed correct.
HTML code '$'smartcat_get_membership_title(get_user_meta($user["ID"], "smartcat_membership_tiers", True))'' cannot be parsed correct.
HTML code '$'get_user_meta($user["ID"], "gender", TRUE)'' cannot be parsed correct.
HTML code '$'get_user_meta($user["ID"], "country", TRUE)'' cannot be parsed correct.
HTML code '$'$user_pending_login'' cannot be parsed correct.
HTML code '$'$user_pending_email'' cannot be parsed correct.
HTML code '$'$user_pending_first_name'' cannot be parsed correct.
HTML code '$'$user_pending_last_name'' cannot be parsed correct.
HTML code '$'$post'' cannot be parsed correct.
HTML code '$'get_edit_post_link($post->ID)'' cannot be parsed correct.
HTML code '$'$post'' cannot be parsed correct.
HTML code '$'get_edit_post_link($page->ID)'' cannot be parsed correct.
HTML code '$'$page'' cannot be parsed correct.
HTML code '$'$user_pending_display_name'' cannot be parsed correct.
HTML code '$'$user_pending_request_date'' cannot be parsed correct.
HTML code '$'smartcat_get_membership_title($user["pending_role"])'' cannot be parsed correct.
HTML code '$'$user_pending_gender'' cannot be parsed correct.
HTML code '$'$user_pending_country'' cannot be parsed correct.
HTML code '$'$page'' cannot be parsed correct.
HTML code '$'get_edit_post_link($page->ID)'' cannot be parsed correct.
HTML code '$'admin_url("admin.php?page=memberships_tiers")'' cannot be parsed correct.
HTML code '$'get_edit_post_link($page->ID)'' cannot be parsed correct.
HTML code '$'$page'' cannot be parsed correct.
HTML code '$'$level'' cannot be parsed correct.
HTML code '$'$post'' cannot be parsed correct.
HTML code '$'get_edit_post_link($post->ID)'' cannot be parsed correct.
HTML code '$'$post'' cannot be parsed correct.
HTML code '$'wp_get_attachment_url($this->options["login_form_uploaded_logo"])'' cannot be parsed correct.
HTML code '$'$post'' cannot be parsed correct.
HTML code '$'get_edit_post_link($post->ID)'' cannot be parsed correct.
HTML code '$'$post'' cannot be parsed correct.
HTML code '$'$level'' cannot be parsed correct.
HTML code '$'$level'' cannot be parsed correct.
HTML code '$'$level'' cannot be parsed correct.
HTML code '$'$level'' cannot be parsed correct.
HTML code '$'(default)'' cannot be parsed correct.
HTML code '$'$level'' cannot be parsed correct.
HTML code '$'$level'' cannot be parsed correct.
HTML code '$'$level'' cannot be parsed correct.
HTML code '$'disabled'' cannot be parsed correct.
HTML code '$'data-toggle="modal" data-target="#addRoleModal"'' cannot be parsed correct.
HTML code '$'esc_js($options["linkedin_apikey"])'' cannot be parsed correct.
HTML code '$'$page'' cannot be parsed correct.
HTML code '$'get_edit_post_link($page->ID)'' cannot be parsed correct.
HTML code '$'$page'' cannot be parsed correct.
HTML code '$'get_option("smartcat_memberships_options")'' cannot be parsed correct.
HTML code '$'$this->get_field_id("title")'' cannot be parsed correct.
HTML code '$'$this->get_field_id("title")'' cannot be parsed correct.
HTML code '$'$this->get_field_name("title")'' cannot be parsed correct.
HTML code '$'$title'' cannot be parsed correct.
HTML code '$'$this->get_field_id("title")'' cannot be parsed correct.
HTML code '$'$this->get_field_id("title")'' cannot be parsed correct.
HTML code '$'$this->get_field_name("title")'' cannot be parsed correct.
HTML code '$'$title'' cannot be parsed correct.
HTML code '$'$id'' cannot be parsed correct.
HTML code '$'$name'' cannot be parsed correct.
HTML code '$'$class'' cannot be parsed correct.
HTML code '$'required'' cannot be parsed correct.
HTML code '$'$value'' cannot be parsed correct.
HTML code '$' selected'' cannot be parsed correct.
HTML code '$'$label'' cannot be parsed correct.
HTML code '$'$id'' cannot be parsed correct.
HTML code '$'$id'' cannot be parsed correct.
HTML code '$'$name'' cannot be parsed correct.
HTML code '$'$class'' cannot be parsed correct.
HTML code '$'$value'' cannot be parsed correct.
HTML code '$' selected'' cannot be parsed correct.
HTML code '$'$label'' cannot be parsed correct.
HTML code '$'$id'' cannot be parsed correct.
HTML code '$'$id'' cannot be parsed correct.
HTML code '$'$name'' cannot be parsed correct.
HTML code '$'$class'' cannot be parsed correct.
HTML code '$'$value'' cannot be parsed correct.
HTML code '$'minlength=$lengths_min'' cannot be parsed correct.
HTML code '$'maxlength=$lengths_max'' cannot be parsed correct.
HTML code '$'data-match="$match_id'' cannot be parsed correct.
HTML code '$'$id'' cannot be parsed correct.
HTML code '$'$id'' cannot be parsed correct.
HTML code '$'$name'' cannot be parsed correct.
HTML code '$'$class'' cannot be parsed correct.
HTML code '$'$value'' cannot be parsed correct.
HTML code '$'required'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'$action'' cannot be parsed correct.
HTML code '$'$id'' cannot be parsed correct.
HTML code '$'$class'' cannot be parsed correct.
HTML code '$'$name'' cannot be parsed correct.
HTML code '$'$name'' cannot be parsed correct.
HTML code '$'$id'' cannot be parsed correct.
HTML code '$'$class'' cannot be parsed correct.
HTML code '$'get_userdata($user_id)'' cannot be parsed correct.
HTML code '$'$id'' cannot be parsed correct.
HTML code '$'$class'' cannot be parsed correct.
HTML code '$'$name'' cannot be parsed correct.
HTML code '$' checked'' cannot be parsed correct.
HTML code '$'$extra'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'$class'' cannot be parsed correct.
HTML code '$'get_option("felix_approved")'' cannot be parsed correct.
HTML code '$'minlength=$lengths_min'' cannot be parsed correct.
HTML code '$'maxlength=$lengths_max'' cannot be parsed correct.
HTML code '$'required'' cannot be parsed correct.
HTML code '$'$error'' cannot be parsed correct.
HTML code '$'$class'' cannot be parsed correct.
HTML code '$'$name'' cannot be parsed correct.
HTML code '$'$value'' cannot be parsed correct.
HTML code '$'required'' cannot be parsed correct.
HTML code '$'$id'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'$class'' cannot be parsed correct.
HTML code '$'get_user_by("id", get_current_user_id())'' cannot be parsed correct.
HTML code '$'<p>The registration form cannot be displayed because you are already logged in</p>'' cannot be parsed correct.
HTML code '$'<p>You are already logged in</p>'' cannot be parsed correct.
HTML code '$'User created : wp_insert_user($userdata)'' cannot be parsed correct.
HTML code '$'Error Adding User!$add_user_id->get_error_message()'' cannot be parsed correct.
HTML code '$'User deleted : wp_delete_user($_REQUEST["user_to_delete"])'' cannot be parsed correct.
HTML code '$'checked=checked'' cannot be parsed correct.
HTML code '$'checked=checked'' cannot be parsed correct.
HTML code '$'$tier'' cannot be parsed correct.
HTML code '$'$tier'' cannot be parsed correct.
HTML code '$'checked=checked'' cannot be parsed correct.
HTML code '$'checked=checked'' cannot be parsed correct.
HTML code '$'get_permalink($this->options["unauthorized_redirect_page"])'' cannot be parsed correct.
HTML code '$'admin_url("admin.php?page=memberships_settings")'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "non_member_redirect", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "wrong_level_redirect", true)'' cannot be parsed correct.
HTML code '$'$user->get_error_message()'' cannot be parsed correct.
HTML code '$'SMARTCAT_MEMBERSHIPS_URL'' cannot be parsed correct.
HTML code '$'smartcat_get_level_member_count($tier->tier_id)'' cannot be parsed correct.
HTML code '$'$tier'' cannot be parsed correct.
HTML code '$'smartcat_get_level_member_count($tier->tier_id, 5)'' cannot be parsed correct.
HTML code '$'admin_url("images/w-logo-blue.png")" alt="WordPress logo"'' cannot be parsed correct.
HTML code '$'wp_get_attachment_url($options["login_form_uploaded_logo"])" alt="Logo from library"'' cannot be parsed correct.
HTML code '$'get_option("smartcat_memberships_options")_login_form_logo" alt="Logo from URL"'' cannot be parsed correct.
HTML code '$'get_option("smartcat_memberships_options")_username_label'' cannot be parsed correct.
HTML code '$'get_option("smartcat_memberships_options")_password_label'' cannot be parsed correct.
HTML code '$'get_option("smartcat_memberships_options")_login_button_label'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'get_option("smartcat_memberships_options")_pricing_table_fore_colors_0'' cannot be parsed correct.
HTML code '$'get_option("smartcat_memberships_options")_pricing_table_back_colors_0'' cannot be parsed correct.
HTML code '$'get_option("smartcat_memberships_options")_pricing_table_tier_highlights_0'' cannot be parsed correct.
HTML code '$'ucwords($tier)'' cannot be parsed correct.
HTML code '$'$comparison_comparison_name'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'$comparison_comparison_value_0'' cannot be parsed correct.
HTML code '$'$tier_idx'' cannot be parsed correct.
HTML code '$'get_option("smartcat_memberships_options")_pricing_table_upgrade_prompt$tier'' cannot be parsed correct.
HTML code '$'get_option("smartcat_memberships_options")_signup_form_heading'' cannot be parsed correct.
HTML code '$'get_option("smartcat_memberships_options")_signup_form_subheading'' cannot be parsed correct.
HTML code '$'get_avatar($current_user->ID)'' cannot be parsed correct.
HTML code '$'get_user_by("id", get_current_user_id())_first_name get_user_by("id", get_current_user_id())_user_lastname'' cannot be parsed correct.
HTML code '$'get_user_by("id", get_current_user_id())_user_email'' cannot be parsed correct.
HTML code '$'smartcat_get_membership_title(get_user_meta(get_current_user_id(), "smartcat_membership_tiers", true))Active'' cannot be parsed correct.
HTML code '$'get_user_meta(get_current_user_id(), "smartcat_membership_status", true)Active'' cannot be parsed correct.
HTML code '$'get_user_by("id", get_current_user_id())_user_url'' cannot be parsed correct.
HTML code '$'get_user_meta(get_current_user_id(), "country", true)Unspecified'' cannot be parsed correct.
HTML code '$'get_user_by("id", get_current_user_id())_user_description'' cannot be parsed correct.
HTML code '$'                            </li>
                            <li>
                              '' cannot be parsed correct.
HTML code '$'                            </li>
                             <!-- <li>
                              '' cannot be parsed correct.
HTML code '$'                            </li> -->
                          </ol>
						  <br>
                        <h3>'' cannot be parsed correct.
HTML code '$'</p>
                    
                      </div>

                    <h4>'' cannot be parsed correct.
HTML code '$'</p>
                        <p>'' cannot be parsed correct.
HTML code '$'admin/assets/images/felix_linkedin.jpg"/><hr>
                            <img src="'' cannot be parsed correct.
HTML code '$'admin/assets/images/felix_linkedin2.jpg"/><hr>
                            <img src="'' cannot be parsed correct.
HTML code '$'admin/assets/images/felix_linkedin3.jpg"/>
                        
                        </ol>

                    </div>


                </div>
                <!-- END OF QUICK START SECTION -->

                <!-- SHORTCODES SECTION -->
                <div class="documentation-wrapper" id="doc-shortcodes">
                    <h2>'' cannot be parsed correct.
HTML code '$'</th>
                                            <th>'' cannot be parsed correct.
HTML code '$'</th>
                                            <th>'' cannot be parsed correct.
HTML code '$'</th>
                                            <th>'' cannot be parsed correct.
HTML code '$'</th>
                                            <th>'' cannot be parsed correct.
HTML code '$'</th>
                                            <th>'' cannot be parsed correct.
HTML code '$'</th>
                                            <th>'' cannot be parsed correct.
HTML code '$'</th>
                                            <th>'' cannot be parsed correct.
HTML code '$'</th>
                                            <th>'' cannot be parsed correct.
HTML code '$'</th>
                                            <th>'' cannot be parsed correct.
HTML code '$'</th>
                                            <th>'' cannot be parsed correct.
HTML code '$'</th>
                                            <th>'' cannot be parsed correct.
HTML code '$'</th>
                                            <th>'' cannot be parsed correct.
HTML code '$'</th>
                                            <th>'' cannot be parsed correct.
HTML code '$'</th>
                                            <th>'' cannot be parsed correct.
HTML code '$'</p>

                    '' cannot be parsed correct.
HTML code '$'                    '' cannot be parsed correct.
HTML code '$'</p>

                    '' cannot be parsed correct.
HTML code '$'                    '' cannot be parsed correct.
HTML code '$'administrator'' cannot be parsed correct.
HTML code '$'                      </tbody>
                      <tfoot>
                        <tr>
                          <th>Member Login</th>
                          <th>Member Email</th>
                          <th>Display Name</th>
                          <th>Approval Date</th>
                          <th>Role</th>
                          <th>Gender</th>
                          <th>Country</th>
                        </tr>
                      </tfoot>
                    </table>
                </div>
            </div>
            
            <hr>
            
            <div class="row title-block">
                <div class="col-sm-12">
                    <div class="section-header">
                        <h2 class="section-header"><i class="fa fa-times"></i>'' cannot be parsed correct.
HTML code '$'</td>
                                            <td>
                                                <a href='' cannot be parsed correct.
HTML code '$'</td>
                                            <td>
                                                <a href='' cannot be parsed correct.
HTML code '$'">clicking here</a>
                                        </p>
                                        
                                        
                                       '' cannot be parsed correct.
HTML code '$'</td>
                                            <td>
                                                <a href='' cannot be parsed correct.
HTML code '$'</td>
                                            <td>
                                                <a href='' cannot be parsed correct.
HTML code '$'</h5>
                                            <h5>'' cannot be parsed correct.
HTML code '$'</h5>

                                            '' cannot be parsed correct.
HTML code '$'                                                        </td>

                                                        '' cannot be parsed correct.
HTML code '$'                                                    </td>
                                                    '' cannot be parsed correct.
HTML code '$'hidden'' cannot be parsed correct.
HTML code '$'                                        '' cannot be parsed correct.
HTML code '$'</p>
                                        
                                        
                                        '' cannot be parsed correct.
HTML code '$'
                                        </div>
                                        
                                        <hr>
                                        
                                        <h2 class="info-block">'' cannot be parsed correct.
HTML code '$'</p>
                                        
                                        
                                        '' cannot be parsed correct.
HTML code '$'
                                        </div>
                                        
                                        <hr>
                                        
                                        <h2 class="info-block">'' cannot be parsed correct.
HTML code '$'</p>
                                        
                                        
                                        '' cannot be parsed correct.
HTML code '$'                                            
                                        </div>
                                            
                                        <hr>
                                        
                                        <h2 class="info-block">'' cannot be parsed correct.
HTML code '$'</p>
                                        
                                        
                                        '' cannot be parsed correct.
HTML code '$'                                        <div id="smtp-settings">
                                            '' cannot be parsed correct.
HTML code '$'</td>
                                            <td>
                                                <a href='' cannot be parsed correct.
HTML code '$'                                    
                                        </div>
                                        
                                        <hr>
                                        
                                        <h2 class="info-block">'' cannot be parsed correct.
HTML code '$'</p>
                                        
                                        '' cannot be parsed correct.
HTML code '$'                                            
                                        </div>
                                        
                                        <hr>
                                        
                                        <h2 class="info-block">'' cannot be parsed correct.
HTML code '$'</p>
                                        
                                        '' cannot be parsed correct.
HTML code '$'                                            
                                        </div>
                                    </div>
                                    
                                </div>
                                
                                
                            </div><!-- tab panel -->
                            

                        </div><!-- tab content -->

                    </div><!-- tab panel -->
                </div><!-- col -->
            </div><!-- row -->

        '' cannot be parsed correct.
HTML code '$'" data-toggle="tooltip" data-placement="bottom">
                                            <button class="btn btn-sm edit-tier felix-button blue" data-toggle="modal" data-target="#editRoleModal" data-tier-id="'' cannot be parsed correct.
HTML code '$'</td>
                                            <td>
                                                <a href='' cannot be parsed correct.
HTML code '$' checked="checked" '' cannot be parsed correct.
HTML code '$'Error Deleting User!'' cannot be parsed correct.
HTML code '$'</h2>
        
        <div class="form-group">
            
            <label>
                <input type="radio" class="form-control" name="do_restrict" value="on" '' cannot be parsed correct.
HTML code '$'</h2>

        
        '' cannot be parsed correct.
HTML code '$' checked'' cannot be parsed correct.
HTML code '$' checked'' cannot be parsed correct.
HTML code '$'</h2>
        
        
        <div class="radio">

            <label>
                <input type="radio" name="custom_redirect" value="no" class="form-control" '' cannot be parsed correct.
HTML code '$'</h2>
        
        <div class="form-group">
            
            '' cannot be parsed correct.
HTML code '$'</h2>
        
        <div class="form-group">
            <label>'' cannot be parsed correct.
HTML code '$'admin/assets/images/felix_icon_small.png" width="50px"/>
                    '' cannot be parsed correct.
HTML code '$'<div id="login-header">'' cannot be parsed correct.
HTML code '$'<div id="login-logo-wrapper">'' cannot be parsed correct.
HTML code '$'<img id="login-page-logo" src="'' cannot be parsed correct.
HTML code '$'/>'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'<h2>'' cannot be parsed correct.
HTML code '$'</h2>'' cannot be parsed correct.
HTML code '$'<h3>'' cannot be parsed correct.
HTML code '$'</h3>'' cannot be parsed correct.
HTML code '$'<p>'' cannot be parsed correct.
HTML code '$'</p>'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'; background-color:#'' cannot be parsed correct.
HTML code '$';\' >
                        <a href="#" data-toggle="tooltip" data-placement="bottom" title="'' cannot be parsed correct.
HTML code '$'<i class="fa fa-check"></i>'' cannot be parsed correct.
HTML code '$'<i class="fa fa-times"></i>'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:26.033043.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.049341.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 3 do_action/apply_filters calls and 19 add_action/add_filter calls. Now connecting do-add pairs.
Added 2 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:01.251148.

2 PHP_REACHES edges created
2 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FileProDetector
### Start running FrontBaseDetector
### Finish running DbplusDetector
### Start running HashDetector
### Finish running DbaseDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running FirebirdInterBaseDetector
### Start running IngresDetector
### Finish running IBMDb2Detector
### Start running maxdbDetector
### Finish running FrontBaseDetector
### Start running MongoDbDetector
### Finish running HashDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running InformixDetector
### Start running MySQLDetector
### Finish running IngresDetector
### Start running MySQLiDetector
### Finish running MongoDbDetector
### Start running Oci8Detector
### Finish running MySQLDetector
### Start running OpenSSLDetector
### Finish running MsqlDetector
### Start running ParadoxDetector
### Finish running ArrayElementDetector
### Start running PasswordHashingDetector
### Finish running Oci8Detector
### Start running PhpCurlDetector
### Finish running OpenSSLDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running ParadoxDetector
### Start running PHPRetrievalDetector
### Finish running PhpCurlDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PasswordHashingDetector
### Start running PhpVarDetector
### Finish running PHPStorageDetector
### Start running PostgreSQLDetector
### Finish running PHPRetrievalDetector
### Start running PropertyDetector
### Finish running PostgreSQLDetector
### Start running Sqlite3Detector
### Finish running PHPIncludedDetector
### Start running SqliteDetector
### Finish running Sqlite3Detector
### Start running SqlServerDetector
### Finish running SqliteDetector
### Start running SybaseDetector
### Finish running SqlServerDetector
### Start running TokyoTyrantDetector
### Finish running TokyoTyrantDetector
### Start running UserInputDetector
### Finish running SybaseDetector
### Start running VariableDetector
### Finish running PropertyDetector
### Start running WordpressHashingFnDetector
### Finish running UserInputDetector
### Start running WordPressRemoteDetector
### Finish running WordPressRemoteDetector
### Start running WordPressRetrievalDetector
### Finish running VariableDetector
### Start running WordPressStorageDetector
### Finish running PhpVarDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running maxdbDetector
### Start running GenericEncryptionDetector
### Finish running MySQLiDetector
### Start running DeletionDetector
### Finish running GenericEncryptionDetector
### Start running UninstallDetector
### Finish running GenericDatabaseUsageDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running WordpressHashingFnDetector
### Finish running WordPressRetrievalDetector
### Finish running WordPressStorageDetector
### Finished running detectors
inc/controllers/controller.form_handlers.php:90
  - Request variable '$_POST["login_password"]' of personal types {'password'} is found.
  - Data types: password
inc/controllers/controller.form_handlers.php:152
  - Request variable '$_POST["email"]' of personal types {'email'} is found.
  - Data types: email
inc/controllers/controller.form_handlers.php:154
  - Request variable '$_POST["email"]' of personal types {'email'} is found.
  - Data types: email
inc/controllers/controller.form_handlers.php:156
  - Request variable '$_POST["email"]' of personal types {'email'} is found.
  - Data types: email
inc/controllers/controller.form_handlers.php:159
  - Request variable '$_POST["email"]' of personal types {'email'} is found.
  - Data types: email
inc/controllers/controller.form_handlers.php:164
  - Request variable '$_POST["first-name"]' of personal types {'first_name'} is found.
  - Data types: first_name
inc/controllers/controller.form_handlers.php:165
  - Request variable '$_POST["first-name"]' of personal types {'first_name'} is found.
  - Data types: first_name
inc/controllers/controller.form_handlers.php:167
  - Request variable '$_POST["last-name"]' of personal types {'last_name'} is found.
  - Data types: last_name
inc/controllers/controller.form_handlers.php:168
  - Request variable '$_POST["last-name"]' of personal types {'last_name'} is found.
  - Data types: last_name
inc/controllers/controller.form_handlers.php:173
  - Request variable '$_POST["country"]' of personal types {'country'} is found.
  - Data types: country
inc/controllers/controller.form_handlers.php:174
  - Request variable '$_POST["country"]' of personal types {'country'} is found.
  - Data types: country 

admin/views/edit_user.php:31
  - object property '$user->first_name' of personal types {'first_name', 'user', 'user_meta'} is found.
  - Data types: first_name, user, user_meta
admin/views/edit_user.php:32
  - object property '$user->last_name' of personal types {'last_name', 'user', 'user_meta'} is found.
  - Data types: last_name, user, user_meta
admin/views/edit_user.php:34
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
admin/views/manage_users.php:94
  - object property '$user->first_name' of personal types {'first_name', 'user', 'user_meta'} is found.
  - Data types: first_name, user, user_meta
admin/views/manage_users.php:95
  - object property '$user->last_name' of personal types {'last_name', 'user', 'user_meta'} is found.
  - Data types: last_name, user, user_meta
admin/views/manage_users.php:99
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
inc/api/class.linkedin.php:114
  - object property '$data->emailAddress' of personal types {'address', 'email'} is found.
  - Data types: address, email
inc/api/class.linkedin.php:122
  - object property '$data->emailAddress' of personal types {'address', 'email'} is found.
  - Data types: address, email
inc/api/class.linkedin.php:123
  - object property '$data->emailAddress' of personal types {'address', 'email'} is found.
  - Data types: address, email
inc/api/class.linkedin.php:124
  - object property '$data->emailAddress' of personal types {'address', 'email'} is found.
  - Data types: address, email
inc/api/class.linkedin.php:125
  - object property '$data->emailAddress' of personal types {'address', 'email'} is found.
  - Data types: address, email
inc/api/class.linkedin.php:129
  - object property '$data->location->country' of personal types {'country'} is found.
  - Data types: country
inc/process/hooks.php:41
  - object property '$user->first_name' of personal types {'first_name', 'user', 'user_meta'} is found.
  - Data types: first_name, user, user_meta
inc/process/hooks.php:42
  - object property '$user->last_name' of personal types {'last_name', 'user', 'user_meta'} is found.
  - Data types: last_name, user, user_meta
inc/process/hooks.php:48
  - object property '$user->first_name' of personal types {'first_name', 'user', 'user_meta'} is found.
  - Data types: first_name, user, user_meta
inc/process/hooks.php:49
  - object property '$user->last_name' of personal types {'last_name', 'user', 'user_meta'} is found.
  - Data types: last_name, user, user_meta
inc/process/hooks.php:54
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
inc/process/hooks.php:101
  - object property '$user->pending_first_name' of personal types {'first_name', 'user', 'user_meta'} is found.
  - Data types: first_name, user, user_meta
inc/process/hooks.php:102
  - object property '$user->pending_last_name' of personal types {'last_name', 'user', 'user_meta'} is found.
  - Data types: last_name, user, user_meta
inc/process/hooks.php:108
  - object property '$user->pending_first_name' of personal types {'first_name', 'user', 'user_meta'} is found.
  - Data types: first_name, user, user_meta
inc/process/hooks.php:109
  - object property '$user->pending_last_name' of personal types {'last_name', 'user', 'user_meta'} is found.
  - Data types: last_name, user, user_meta
inc/process/hooks.php:114
  - object property '$user->pending_email' of personal types {'email'} is found.
  - Data types: email
inc/views/user_profile.php:31
  - object property '$current_user->first_name' of personal types {'first_name', 'user', 'user_meta'} is found.
  - Data types: first_name, user, user_meta
inc/views/user_profile.php:31
  - object property '$current_user->user_lastname' of personal types {'last_name', 'user', 'user_meta'} is found.
  - Data types: last_name, user, user_meta
inc/views/user_profile.php:31
  - object property '$current_user->user_lastname' of personal types {'last_name', 'user', 'user_meta'} is found.
  - Data types: last_name, user, user_meta
inc/views/user_profile.php:32
  - object property '$current_user->user_email' of personal types {'email'} is found.
  - Data types: email
inc/views/user_profile.php:88
  - object property '$current_user->first_name' of personal types {'first_name', 'user', 'user_meta'} is found.
  - Data types: first_name, user, user_meta
inc/views/user_profile.php:89
  - object property '$current_user->last_name' of personal types {'last_name', 'user', 'user_meta'} is found.
  - Data types: last_name, user, user_meta
inc/views/user_profile.php:90
  - object property '$current_user->user_email' of personal types {'email'} is found.
  - Data types: email 

inc/api/class.linkedin.php:112
  - variable '$new_pass' of personal types {'password'} is found.
  - Data types: password
inc/api/class.linkedin.php:121
  - variable '$new_pass' of personal types {'password'} is found.
  - Data types: password
inc/controllers/controller.form_handlers.php:23
  - variable '$unhashed_pass' of personal types {'password'} is found.
  - Data types: password
inc/controllers/controller.form_handlers.php:24
  - variable '$hashed_pass' of personal types {'password'} is found.
  - Data types: password
inc/controllers/controller.form_handlers.php:24
  - variable '$unhashed_pass' of personal types {'password'} is found.
  - Data types: password
inc/controllers/controller.form_handlers.php:26
  - variable '$prepared_username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/controllers/controller.form_handlers.php:27
  - variable '$prepared_first_name' of personal types {'first_name'} is found.
  - Data types: first_name
inc/controllers/controller.form_handlers.php:28
  - variable '$prepared_last_name' of personal types {'last_name'} is found.
  - Data types: last_name
inc/controllers/controller.form_handlers.php:30
  - variable '$prepared_email' of personal types {'email'} is found.
  - Data types: email
inc/controllers/controller.form_handlers.php:32
  - variable '$prepared_country' of personal types {'country'} is found.
  - Data types: country
inc/controllers/controller.form_handlers.php:36
  - variable '$prepared_username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/controllers/controller.form_handlers.php:44
  - variable '$prepared_email' of personal types {'email'} is found.
  - Data types: email
inc/controllers/controller.form_handlers.php:55
  - variable '$unhashed_pass' of personal types {'password'} is found.
  - Data types: password
inc/controllers/controller.form_handlers.php:56
  - variable '$prepared_username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/controllers/controller.form_handlers.php:57
  - variable '$prepared_username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
inc/controllers/controller.form_handlers.php:58
  - variable '$prepared_email' of personal types {'email'} is found.
  - Data types: email
inc/controllers/controller.form_handlers.php:60
  - variable '$prepared_first_name' of personal types {'first_name'} is found.
  - Data types: first_name
inc/controllers/controller.form_handlers.php:61
  - variable '$prepared_last_name' of personal types {'last_name'} is found.
  - Data types: last_name
inc/controllers/controller.form_handlers.php:63
  - variable '$prepared_country' of personal types {'country'} is found.
  - Data types: country 

admin/controllers/controller.admin_handlers.php:194
  - CRYPTOGRAPHY call to wp_update_user($userdata) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
admin/controllers/controller.admin_handlers.php:209
  - CRYPTOGRAPHY call to wp_update_user(["ID" => $_GET["user_id"], "role" => $_REQUEST["smartcat_memberships_promote_user"]["tier"]]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
admin/controllers/controller.admin_handlers.php:224
  - CRYPTOGRAPHY call to wp_update_user(["ID" => $_GET["user_id"], "role" => $_REQUEST["smartcat_memberships_demote_user"]["tier"]]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
inc/controllers/controller.form_handlers.php:24
  - CRYPTOGRAPHY call to wp_hash_password($unhashed_pass). Passed arguments: 0: $password (string). Returns (string).
inc/controllers/controller.form_handlers.php:144
  - CRYPTOGRAPHY call to wp_update_user(["ID" => $current_user->ID, "user_pass" => esc_attr($_POST["pass1"])]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
inc/controllers/controller.form_handlers.php:150
  - CRYPTOGRAPHY call to wp_update_user(["ID" => $current_user->ID, "user_url" => esc_url($_POST["website"])]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
inc/controllers/controller.form_handlers.php:159
  - CRYPTOGRAPHY call to wp_update_user(["ID" => $current_user->ID, "user_email" => esc_attr($_POST["email"])]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
inc/process/helpers.php:492
  - CRYPTOGRAPHY call to wp_update_user(["ID" => $user_id, "first_name" => $args["first_name"], "last_name" => $args["last_name"], "user_pass" => $args["user_pass"]]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta 

admin/controllers/controller.admin_handlers.php:164
  - RETRIEVAL call to get_userdata($user_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
admin/controllers/controller.admin_handlers.php:243
  - RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/views/documentation.php:1
  - RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/views/edit_user.php:5
  - RETRIEVAL call to get_userdata($user_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
admin/views/edit_user.php:41
  - RETRIEVAL call to get_user_meta($user->ID, "gender", TRUE) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
admin/views/edit_user.php:42
  - RETRIEVAL call to get_user_meta($user->ID, "country", TRUE) alters data types {'country', 'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: country, user_meta
admin/views/manage_users.php:2
  - RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/views/manage_users.php:4
  - RETRIEVAL call to get_users() alters data types {'user', 'user_meta'}. Returns (array).
  - Data types: user, user_meta
admin/views/manage_users.php:91
  - RETRIEVAL call to get_user_meta($user->ID, "smartcat_membership_status", True) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
admin/views/manage_users.php:101
  - RETRIEVAL call to get_user_meta($user->ID, "smartcat_membership_tiers", True) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
admin/views/manage_users.php:117
  - RETRIEVAL call to get_user_meta($user->ID, "smartcat_membership_status", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
admin/views/manage_users.php:121
  - RETRIEVAL call to get_user_meta($user->ID, "smartcat_membership_status", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
admin/views/pending_users.php:144
  - RETRIEVAL call to get_user_meta($user["ID"], "wp_capabilities", TRUE) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
admin/views/pending_users.php:157
  - RETRIEVAL call to get_user_meta($user["ID"], "smartcat_membership_tiers", True) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
admin/views/pending_users.php:163
  - RETRIEVAL call to get_user_meta($user["ID"], "gender", TRUE) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
admin/views/pending_users.php:164
  - RETRIEVAL call to get_user_meta($user["ID"], "country", TRUE) alters data types {'country', 'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: country, user_meta
admin/views/restrictions.php:3
  - RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/views/restrictions.php:80
  - RETRIEVAL call to get_post_meta($page->ID, "restricted_to", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/views/restrictions.php:90
  - RETRIEVAL call to get_post_meta($page->ID, "do_restrict", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/views/restrictions.php:148
  - RETRIEVAL call to get_posts(). Returns (WP_Post[]|int[]).
admin/views/restrictions.php:173
  - RETRIEVAL call to get_post_meta($post->ID, "restricted_to", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/views/restrictions.php:183
  - RETRIEVAL call to get_post_meta($post->ID, "do_restrict", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/views/restrictions2.php:3
  - RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/views/restrictions2.php:75
  - RETRIEVAL call to get_post_meta($page->ID, "restricted_to", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/views/restrictions2.php:115
  - RETRIEVAL call to get_posts(). Returns (WP_Post[]|int[]).
admin/views/restrictions2.php:133
  - RETRIEVAL call to get_post_meta($post->ID, "restricted_to", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/views/settings.php:2
  - RETRIEVAL call to get_option("felix_welcome") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/views/settings.php:3
  - RETRIEVAL call to get_option("felix_pending") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/views/settings.php:4
  - RETRIEVAL call to get_option("felix_approved") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/views/settings.php:5
  - RETRIEVAL call to get_option("felix_suspended") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/views/settings.php:6
  - RETRIEVAL call to get_option("felix_reset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/views/settings.php:7
  - RETRIEVAL call to get_option("felix_pwchange") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
admin/views/tiers.php:132
  - RETRIEVAL call to get_post_meta($page->ID, "restricted_to", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/views/tiers.php:142
  - RETRIEVAL call to get_post_meta($page->ID, "do_restrict", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/views/tiers.php:190
  - RETRIEVAL call to get_posts(). Returns (WP_Post[]|int[]).
admin/views/tiers.php:213
  - RETRIEVAL call to get_post_meta($post->ID, "restricted_to", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
admin/views/tiers.php:223
  - RETRIEVAL call to get_post_meta($post->ID, "do_restrict", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/api/class.linkedin.php:30
  - RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/api/class.linkedin.php:109
  - RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/api/class.linkedin.php:139
  - RETRIEVAL call to get_users(["meta_key" => "linkedin_id", "meta_value" => $data->id, "number" => 1, "count_total" => false]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $args (array). Returns (array).
  - Data types: user, user_meta
inc/api/class.linkedin.php:151
  - RETRIEVAL call to wp_set_current_user($user->data->ID) alters data types {'user_meta'}. Passed arguments: 0: $id (int). Returns (WP_User).
  - Data types: user_meta
inc/class/class.smartcat-form.php:9
  - RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/class/class.smartcat-form.php:10
  - RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/class/class.smartcat-mailer.php:9
  - RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/class/class.smartcat-mailer.php:10
  - RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/class/class.smartcat-memberships.php:97
  - RETRIEVAL call to get_option("page_on_front") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/class/class.smartcat-memberships.php:97
  - RETRIEVAL call to get_option("page_on_front") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/class/class.smartcat-memberships.php:105
  - RETRIEVAL call to get_option("admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/class/class.smartcat-memberships.php:120
  - RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/class/class.smartcat-memberships.php:128
  - RETRIEVAL call to get_option("felix_welcome") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/class/class.smartcat-memberships.php:140
  - RETRIEVAL call to get_option("felix_pending") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/class/class.smartcat-memberships.php:152
  - RETRIEVAL call to get_option("felix_approved") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/class/class.smartcat-memberships.php:164
  - RETRIEVAL call to get_option("felix_suspended") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/class/class.smartcat-memberships.php:176
  - RETRIEVAL call to get_option("felix_reset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/class/class.smartcat-memberships.php:188
  - RETRIEVAL call to get_option("felix_pwchange") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/class/class.smartcat-memberships.php:277
  - RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/class/class.smartcat-memberships.php:278
  - RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/class/class.smartcat-memberships.php:447
  - RETRIEVAL call to get_option("default_role") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/class/class.smartcat-memberships.php:524
  - RETRIEVAL call to get_posts(["post_type" => "post", "post_status" => "publish"]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
inc/class/class.smartcat-memberships.php:821
  - RETRIEVAL call to get_user_meta($_REQUEST["user_to_change"], "smartcat_membership_status", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/class/class.smartcat-memberships.php:978
  - RETRIEVAL call to get_post_meta($post->ID, "do_restrict", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class/class.smartcat-memberships.php:979
  - RETRIEVAL call to get_post_meta($post->ID, "restricted_to", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class/class.smartcat-memberships.php:980
  - RETRIEVAL call to get_post_meta($post->ID, "non_member_redirect", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class/class.smartcat-memberships.php:981
  - RETRIEVAL call to get_post_meta($post->ID, "wrong_level_redirect", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class/class.smartcat-memberships.php:982
  - RETRIEVAL call to get_post_meta($post->ID, "custom_redirect", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/controllers/controller.form_handlers.php:4
  - RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/controllers/controller.form_handlers.php:24
  - RETRIEVAL call to wp_hash_password($unhashed_pass). Passed arguments: 0: $password (string). Returns (string).
inc/controllers/controller.form_handlers.php:93
  - RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/controllers/controller.redirect_handler.php:16
  - RETRIEVAL call to get_post_meta($post->ID, "do_restrict", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/controllers/controller.redirect_handler.php:23
  - RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/controllers/controller.redirect_handler.php:34
  - RETRIEVAL call to get_post_meta($post->ID, "custom_redirect", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/controllers/controller.redirect_handler.php:36
  - RETRIEVAL call to get_post_meta($post->ID, "non_member_redirect", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/controllers/controller.redirect_handler.php:36
  - RETRIEVAL call to get_post_meta($post->ID, "non_member_redirect", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/controllers/controller.redirect_handler.php:37
  - RETRIEVAL call to get_post_meta($post->ID, "wrong_level_redirect", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/controllers/controller.redirect_handler.php:37
  - RETRIEVAL call to get_post_meta($post->ID, "wrong_level_redirect", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/controllers/controller.redirect_handler.php:52
  - RETRIEVAL call to get_user_meta($user_id, "smartcat_membership_tiers", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/controllers/controller.redirect_handler.php:54
  - RETRIEVAL call to get_post_meta($post->ID, "restricted_to", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/data/tables.php:26
  - RETRIEVAL call to dbDelta($pending_users_sql). Passed arguments: 0: $queries (string[]|string). Returns (array).
inc/data/tables.php:40
  - RETRIEVAL call to dbDelta($custom_tiers_sql). Passed arguments: 0: $queries (string[]|string). Returns (array).
inc/process/helpers.php:456
  - RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/process/hooks.php:15
  - RETRIEVAL call to get_userdata($user_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/process/hooks.php:29
  - RETRIEVAL call to get_option("felix_welcome") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/process/hooks.php:89
  - RETRIEVAL call to get_option("felix_pending") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/views/login_form.php:2
  - RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/views/pricing_table.php:3
  - RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/views/signup_form.php:1
  - RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/views/user_profile.php:3
  - RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/views/user_profile.php:4
  - RETRIEVAL call to get_user_by("id", get_current_user_id()) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
inc/views/user_profile.php:40
  - RETRIEVAL call to get_user_meta(get_current_user_id(), "smartcat_membership_tiers", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/views/user_profile.php:40
  - RETRIEVAL call to get_user_meta(get_current_user_id(), "smartcat_membership_tiers", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/views/user_profile.php:45
  - RETRIEVAL call to get_user_meta(get_current_user_id(), "smartcat_membership_status", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/views/user_profile.php:45
  - RETRIEVAL call to get_user_meta(get_current_user_id(), "smartcat_membership_status", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
inc/views/user_profile.php:55
  - RETRIEVAL call to get_user_meta(get_current_user_id(), "country", true) alters data types {'country', 'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: country, user_meta
inc/views/user_profile.php:55
  - RETRIEVAL call to get_user_meta(get_current_user_id(), "country", true) alters data types {'country', 'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: country, user_meta
inc/views/user_profile.php:93
  - RETRIEVAL call to get_user_meta($current_user->ID, "country", true) alters data types {'country', 'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: country, user_meta 

admin/controllers/controller.admin_handlers.php:56
  - STORAGE call to update_option("felix_welcome", $_REQUEST["felix_welcome"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/controllers/controller.admin_handlers.php:62
  - STORAGE call to update_option("felix_pending", $_REQUEST["felix_pending"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/controllers/controller.admin_handlers.php:68
  - STORAGE call to update_option("felix_approved", $_REQUEST["felix_approved"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/controllers/controller.admin_handlers.php:74
  - STORAGE call to update_option("felix_suspended", $_REQUEST["felix_suspended"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/controllers/controller.admin_handlers.php:80
  - STORAGE call to update_option("felix_reset", $_REQUEST["felix_reset"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/controllers/controller.admin_handlers.php:86
  - STORAGE call to update_option("felix_pwchange", $_REQUEST["felix_pwchange"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/controllers/controller.admin_handlers.php:90
  - STORAGE call to update_option("smartcat_memberships_options", $_REQUEST["smartcat_memberships_options"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/controllers/controller.admin_handlers.php:118
  - STORAGE call to wp_insert_user($userdata) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
admin/controllers/controller.admin_handlers.php:121
  - STORAGE call to update_user_meta($user_id, "gender", $approved_user["pending_gender"]) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
admin/controllers/controller.admin_handlers.php:122
  - STORAGE call to update_user_meta($user_id, "country", $approved_user["pending_country"]) alters data types {'country', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: country, user_meta
admin/controllers/controller.admin_handlers.php:123
  - STORAGE call to update_user_meta($user_id, "linkedin_id", $approved_user["pending_linkedin_id"]) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
admin/controllers/controller.admin_handlers.php:124
  - STORAGE call to update_user_meta($user_id, "linkedin_url", $approved_user["pending_linkedin_url"]) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
admin/controllers/controller.admin_handlers.php:126
  - STORAGE call to update_user_meta($user_id, "smartcat_membership_tiers", $this->options["default_role"]) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
admin/controllers/controller.admin_handlers.php:127
  - STORAGE call to update_user_meta($user_id, "smartcat_membership_status", "active") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
admin/controllers/controller.admin_handlers.php:194
  - STORAGE call to wp_update_user($userdata) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
admin/controllers/controller.admin_handlers.php:195
  - STORAGE call to update_user_meta($edit_user_id, "gender", $_POST["smartcat_memberships_edit_user"]["gender"]) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
admin/controllers/controller.admin_handlers.php:196
  - STORAGE call to update_user_meta($edit_user_id, "country", $_POST["smartcat_memberships_edit_user"]["country"]) alters data types {'country', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: country, user_meta
admin/controllers/controller.admin_handlers.php:209
  - STORAGE call to wp_update_user(["ID" => $_GET["user_id"], "role" => $_REQUEST["smartcat_memberships_promote_user"]["tier"]]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
admin/controllers/controller.admin_handlers.php:224
  - STORAGE call to wp_update_user(["ID" => $_GET["user_id"], "role" => $_REQUEST["smartcat_memberships_demote_user"]["tier"]]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
admin/controllers/controller.admin_handlers.php:245
  - STORAGE call to update_option("smartcat_memberships_options", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/class/class.smartcat-memberships.php:122
  - STORAGE call to add_option("smartcat_memberships_options", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/class/class.smartcat-memberships.php:124
  - STORAGE call to update_option("smartcat_memberships_options", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/class/class.smartcat-memberships.php:130
  - STORAGE call to add_option("felix_welcome", ["enable" => true, "subject" => "Welcome [first-name]!", "body" => __("You have been registered<br><br>Your username is: [username]<br>Your password is: [password]", "smartcat-memberships")]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/class/class.smartcat-memberships.php:142
  - STORAGE call to add_option("felix_pending", ["enable" => true, "subject" => "Welcome [first-name]!", "body" => __("Thank you for signing up! We have received your request, and one of our admins will review it as soon as possible", "smartcat-memberships")]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/class/class.smartcat-memberships.php:154
  - STORAGE call to add_option("felix_approved", ["enable" => true, "subject" => "Welcome [first-name]!", "body" => __("Your account has been approved and you are now a registered user!", "smartcat-memberships")]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/class/class.smartcat-memberships.php:166
  - STORAGE call to add_option("felix_suspended", ["enable" => true, "subject" => "Account suspended", "body" => __("Your account has been suspended", "smartcat-memberships")]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/class/class.smartcat-memberships.php:178
  - STORAGE call to add_option("felix_reset", ["enable" => true, "subject" => __("Reset your password", "smartcat-memberships"), "body" => __("You have requested a password reset. Please click on the link below to reset your password", "smartcat-memberships") . "<br><br>[pw-reset-link]"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/class/class.smartcat-memberships.php:190
  - STORAGE call to add_option("felix_pwchange", ["enable" => true, "subject" => __("Your password has been chaged", "smartcat-memberships"), "body" => __("You recently changed the password associated with your account", "smartcat-memberships")]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/class/class.smartcat-memberships.php:221
  - STORAGE call to delete_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/class/class.smartcat-memberships.php:222
  - STORAGE call to delete_option("felix_welcome") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/class/class.smartcat-memberships.php:223
  - STORAGE call to delete_option("felix_pending") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/class/class.smartcat-memberships.php:224
  - STORAGE call to delete_option("felix_suspended") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/class/class.smartcat-memberships.php:225
  - STORAGE call to delete_option("felix_pwchange") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/class/class.smartcat-memberships.php:448
  - STORAGE call to update_option("default_role", $this->options["default_role"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/class/class.smartcat-memberships.php:477
  - STORAGE call to update_post_meta($page->ID, "do_restrict", "off") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/class/class.smartcat-memberships.php:478
  - STORAGE call to update_post_meta($page->ID, "restricted_to", null) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/class/class.smartcat-memberships.php:488
  - STORAGE call to update_post_meta($page_id, "do_restrict", $passed_values) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/class/class.smartcat-memberships.php:513
  - STORAGE call to update_post_meta($page_id, "restricted_to", $new_restrictions) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/class/class.smartcat-memberships.php:531
  - STORAGE call to update_post_meta($post->ID, "do_restrict", "off") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/class/class.smartcat-memberships.php:532
  - STORAGE call to update_post_meta($post->ID, "restricted_to", null) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/class/class.smartcat-memberships.php:541
  - STORAGE call to update_post_meta($page_id, "do_restrict", $passed_values) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/class/class.smartcat-memberships.php:564
  - STORAGE call to update_post_meta($post_id, "restricted_to", $new_restrictions) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/class/class.smartcat-memberships.php:674
  - STORAGE call to update_post_meta($page_id, "do_restrict", $passed_values) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/class/class.smartcat-memberships.php:696
  - STORAGE call to update_post_meta($page_id, "restricted_to", $new_restrictions) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/class/class.smartcat-memberships.php:710
  - STORAGE call to update_post_meta($page_id, "do_restrict", $passed_values) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/class/class.smartcat-memberships.php:732
  - STORAGE call to update_post_meta($post_id, "restricted_to", $new_restrictions) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/class/class.smartcat-memberships.php:785
  - STORAGE call to wp_insert_user($userdata) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
inc/class/class.smartcat-memberships.php:787
  - STORAGE call to add_user_meta($add_user_id, "gender", $_POST["smartcat_memberships_add_user"]["gender"]) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta
inc/class/class.smartcat-memberships.php:788
  - STORAGE call to add_user_meta($add_user_id, "country", $_POST["smartcat_memberships_add_user"]["country"]) alters data types {'country', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: country, user_meta
inc/class/class.smartcat-memberships.php:789
  - STORAGE call to update_user_meta($add_user_id, "smartcat_membership_tiers", $_POST["smartcat_memberships_add_user"]["tier"]) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/class/class.smartcat-memberships.php:790
  - STORAGE call to update_user_meta($add_user_id, "smartcat_membership_status", "active") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/class/class.smartcat-memberships.php:808
  - STORAGE call to wp_delete_user($_REQUEST["user_to_delete"]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $id (int). Returns (bool).
  - Data types: user, user_meta
inc/class/class.smartcat-memberships.php:824
  - STORAGE call to update_user_meta($_REQUEST["user_to_change"], "smartcat_membership_status", "active") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/class/class.smartcat-memberships.php:828
  - STORAGE call to update_user_meta($_REQUEST["user_to_change"], "smartcat_membership_status", "suspended") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/class/class.smartcat-memberships.php:1142
  - STORAGE call to update_post_meta($post_id, "restricted_to", $_POST["restricted_to"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/class/class.smartcat-memberships.php:1144
  - STORAGE call to update_post_meta($post_id, "restricted_to", null) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/class/class.smartcat-memberships.php:1149
  - STORAGE call to update_post_meta($post_id, "do_restrict", $_POST["do_restrict"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/class/class.smartcat-memberships.php:1151
  - STORAGE call to update_post_meta($post_id, "do_restrict", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/class/class.smartcat-memberships.php:1155
  - STORAGE call to update_post_meta($post_id, "non_member_redirect", $_POST["non_member_redirect"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/class/class.smartcat-memberships.php:1157
  - STORAGE call to update_post_meta($post_id, "non_member_redirect", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/class/class.smartcat-memberships.php:1161
  - STORAGE call to update_post_meta($post_id, "wrong_level_redirect", $_POST["wrong_level_redirect"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/class/class.smartcat-memberships.php:1163
  - STORAGE call to update_post_meta($post_id, "wrong_level_redirect", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/class/class.smartcat-memberships.php:1167
  - STORAGE call to update_post_meta($post_id, "custom_redirect", $_POST["custom_redirect"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/class/class.smartcat-memberships.php:1169
  - STORAGE call to update_post_meta($post_id, "custom_redirect", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/controllers/controller.form_handlers.php:144
  - STORAGE call to wp_update_user(["ID" => $current_user->ID, "user_pass" => esc_attr($_POST["pass1"])]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
inc/controllers/controller.form_handlers.php:150
  - STORAGE call to wp_update_user(["ID" => $current_user->ID, "user_url" => esc_url($_POST["website"])]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
inc/controllers/controller.form_handlers.php:159
  - STORAGE call to wp_update_user(["ID" => $current_user->ID, "user_email" => esc_attr($_POST["email"])]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta
inc/controllers/controller.form_handlers.php:165
  - STORAGE call to update_user_meta($current_user->ID, "first_name", esc_attr($_POST["first-name"])) alters data types {'first_name', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: first_name, user_meta
inc/controllers/controller.form_handlers.php:168
  - STORAGE call to update_user_meta($current_user->ID, "last_name", esc_attr($_POST["last-name"])) alters data types {'last_name', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: last_name, user_meta
inc/controllers/controller.form_handlers.php:171
  - STORAGE call to update_user_meta($current_user->ID, "description", esc_attr($_POST["description"])) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/controllers/controller.form_handlers.php:174
  - STORAGE call to update_user_meta($current_user->ID, "country", esc_attr($_POST["country"])) alters data types {'country', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: country, user_meta
inc/process/helpers.php:478
  - STORAGE call to register_new_user($args["user_login"], $args["user_email"]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_login (string), 1: $user_email (string). Returns (int|WP_Error).
  - Data types: user, user_meta
inc/process/helpers.php:483
  - STORAGE call to update_user_meta($user_id, "gender", $args["gender"]) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/process/helpers.php:484
  - STORAGE call to update_user_meta($user_id, "country", $args["country"]) alters data types {'country', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: country, user_meta
inc/process/helpers.php:485
  - STORAGE call to update_user_meta($user_id, "linkedin_id", $args["linkedin_id"]) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/process/helpers.php:486
  - STORAGE call to update_user_meta($user_id, "linkedin_url", $args["linkedin_url"]) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/process/helpers.php:488
  - STORAGE call to update_user_meta($user_id, "smartcat_membership_tiers", $options["default_role"]) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/process/helpers.php:489
  - STORAGE call to update_user_meta($user_id, "smartcat_membership_status", "active") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
inc/process/helpers.php:492
  - STORAGE call to wp_update_user(["ID" => $user_id, "first_name" => $args["first_name"], "last_name" => $args["last_name"], "user_pass" => $args["user_pass"]]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user, user_meta 

admin/controllers/controller.admin_handlers.php:132
  - Data from table $wpdbsmartcat_memberships_pending_users deleted: "$wpdb->delete($wpdb->prefix . "smartcat_memberships_pending_users", ["pending_id" => $_POST["smartcat_memberships_approve_user_id"]], ["%d"])"
inc/class/class.smartcat-memberships.php:221
  - DELETION call to delete_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/class/class.smartcat-memberships.php:222
  - DELETION call to delete_option("felix_welcome") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/class/class.smartcat-memberships.php:223
  - DELETION call to delete_option("felix_pending") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/class/class.smartcat-memberships.php:224
  - DELETION call to delete_option("felix_suspended") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/class/class.smartcat-memberships.php:225
  - DELETION call to delete_option("felix_pwchange") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
inc/class/class.smartcat-memberships.php:633
  - Data from table $wpdbsmartcat_memberships_custom_tiers deleted: "$wpdb->delete($wpdb->prefix . "smartcat_memberships_custom_tiers", ["tier_id" => $_REQUEST["tier_to_delete"]], ["%d"])"
inc/class/class.smartcat-memberships.php:808
  - DELETION call to wp_delete_user($_REQUEST["user_to_delete"]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $id (int). Returns (bool).
  - Data types: user, user_meta 

By data type:
address
	PropertyDetector.(unknown) - {'address', 'email'}
	PropertyDetector.(unknown) - {'address', 'email'}
	PropertyDetector.(unknown) - {'address', 'email'}
	PropertyDetector.(unknown) - {'address', 'email'}
	PropertyDetector.(unknown) - {'address', 'email'}
country
	WordPressStorageDetector.update_user_meta($current_user->ID, "country", esc_attr($_POST["country"])) - {'country', 'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "country", $args["country"]) - {'country', 'user_meta'}
	ArrayElementDetector.(unknown) - {'country'}
	PropertyDetector.(unknown) - {'country'}
	WordPressRetrievalDetector.get_user_meta($user["ID"], "country", TRUE) - {'country', 'user_meta'}
	ArrayElementDetector.(unknown) - {'country'}
	WordPressStorageDetector.update_user_meta($edit_user_id, "country", $_POST["smartcat_memberships_edit_user"]["country"]) - {'country', 'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "country", $approved_user["pending_country"]) - {'country', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta(get_current_user_id(), "country", true) - {'country', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user->ID, "country", TRUE) - {'country', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($current_user->ID, "country", true) - {'country', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta(get_current_user_id(), "country", true) - {'country', 'user_meta'}
	WordPressStorageDetector.add_user_meta($add_user_id, "country", $_POST["smartcat_memberships_add_user"]["country"]) - {'country', 'user_meta'}
	VariableDetector.(unknown) - {'country'}
	VariableDetector.(unknown) - {'country'}
email
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'address', 'email'}
	PropertyDetector.(unknown) - {'address', 'email'}
	PropertyDetector.(unknown) - {'address', 'email'}
	VariableDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'address', 'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'address', 'email'}
	ArrayElementDetector.(unknown) - {'email'}
first_name
	VariableDetector.(unknown) - {'first_name'}
	VariableDetector.(unknown) - {'first_name'}
	PropertyDetector.(unknown) - {'first_name', 'user', 'user_meta'}
	PropertyDetector.(unknown) - {'first_name', 'user', 'user_meta'}
	PropertyDetector.(unknown) - {'first_name', 'user', 'user_meta'}
	PropertyDetector.(unknown) - {'first_name', 'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($current_user->ID, "first_name", esc_attr($_POST["first-name"])) - {'first_name', 'user_meta'}
	PropertyDetector.(unknown) - {'first_name', 'user', 'user_meta'}
	PropertyDetector.(unknown) - {'first_name', 'user', 'user_meta'}
	PropertyDetector.(unknown) - {'first_name', 'user', 'user_meta'}
	PropertyDetector.(unknown) - {'first_name', 'user', 'user_meta'}
	ArrayElementDetector.(unknown) - {'first_name'}
	ArrayElementDetector.(unknown) - {'first_name'}
last_name
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($current_user->ID, "last_name", esc_attr($_POST["last-name"])) - {'last_name', 'user_meta'}
	VariableDetector.(unknown) - {'last_name'}
	VariableDetector.(unknown) - {'last_name'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	ArrayElementDetector.(unknown) - {'last_name'}
	ArrayElementDetector.(unknown) - {'last_name'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
none
	DeletionDetector.$wpdb->delete($wpdb->prefix . "smartcat_memberships_pending_users", ["pending_id" => $_POST["smartcat_memberships_approve_user_id"]], ["%d"]) - set()
	WordPressRetrievalDetector.get_posts(["post_type" => "post", "post_status" => "publish"]) - set()
	WordpressHashingFnDetector.wp_hash_password($unhashed_pass) - set()
	WordPressRetrievalDetector.wp_hash_password($unhashed_pass) - set()
	DeletionDetector.$wpdb->delete($wpdb->prefix . "smartcat_memberships_custom_tiers", ["tier_id" => $_REQUEST["tier_to_delete"]], ["%d"]) - set()
	WordPressRetrievalDetector.get_posts() - set()
	WordPressRetrievalDetector.get_posts() - set()
	WordPressRetrievalDetector.dbDelta($pending_users_sql) - set()
	WordPressRetrievalDetector.get_posts() - set()
	WordPressRetrievalDetector.dbDelta($custom_tiers_sql) - set()
option
	WordPressStorageDetector.update_option("felix_welcome", $_REQUEST["felix_welcome"]) - {'option'}
	WordPressRetrievalDetector.get_option("felix_pending") - {'option'}
	WordPressRetrievalDetector.get_option("page_on_front") - {'option'}
	WordPressStorageDetector.add_option("smartcat_memberships_options", $options) - {'option'}
	WordPressStorageDetector.update_option("default_role", $this->options["default_role"]) - {'option'}
	WordPressRetrievalDetector.get_option("smartcat_memberships_options") - {'option'}
	WordPressStorageDetector.add_option("felix_approved", ["enable" => true, "subject" => "Welcome [first-name]!", "body" => __("Your account has been approved and you are now a registered user!", "smartcat-memberships")]) - {'option'}
	WordPressStorageDetector.delete_option("felix_pending") - {'option'}
	WordPressRetrievalDetector.get_option("smartcat_memberships_options") - {'option'}
	WordPressRetrievalDetector.get_option("smartcat_memberships_options") - {'option'}
	WordPressStorageDetector.update_option("felix_suspended", $_REQUEST["felix_suspended"]) - {'option'}
	WordPressStorageDetector.add_option("felix_pending", ["enable" => true, "subject" => "Welcome [first-name]!", "body" => __("Thank you for signing up! We have received your request, and one of our admins will review it as soon as possible", "smartcat-memberships")]) - {'option'}
	WordPressStorageDetector.update_option("felix_approved", $_REQUEST["felix_approved"]) - {'option'}
	WordPressStorageDetector.update_option("smartcat_memberships_options", $options) - {'option'}
	WordPressStorageDetector.update_option("felix_pending", $_REQUEST["felix_pending"]) - {'option'}
	WordPressRetrievalDetector.get_option("felix_reset") - {'option'}
	WordPressRetrievalDetector.get_option("smartcat_memberships_options") - {'option'}
	WordPressRetrievalDetector.get_option("admin_email") - {'option'}
	WordPressRetrievalDetector.get_option("smartcat_memberships_options") - {'option'}
	WordPressRetrievalDetector.get_option("felix_pending") - {'option'}
	WordPressStorageDetector.delete_option("smartcat_memberships_options") - {'option'}
	WordPressRetrievalDetector.get_option("felix_approved") - {'option'}
	WordPressStorageDetector.update_option("smartcat_memberships_options", $_REQUEST["smartcat_memberships_options"]) - {'option'}
	WordPressStorageDetector.add_option("felix_suspended", ["enable" => true, "subject" => "Account suspended", "body" => __("Your account has been suspended", "smartcat-memberships")]) - {'option'}
	WordPressRetrievalDetector.get_option("smartcat_memberships_options") - {'option'}
	WordPressRetrievalDetector.get_option("smartcat_memberships_options") - {'option'}
	WordPressStorageDetector.add_option("felix_welcome", ["enable" => true, "subject" => "Welcome [first-name]!", "body" => __("You have been registered<br><br>Your username is: [username]<br>Your password is: [password]", "smartcat-memberships")]) - {'option'}
	WordPressStorageDetector.add_option("felix_pwchange", ["enable" => true, "subject" => __("Your password has been chaged", "smartcat-memberships"), "body" => __("You recently changed the password associated with your account", "smartcat-memberships")]) - {'option'}
	WordPressRetrievalDetector.get_option("smartcat_memberships_options") - {'option'}
	WordPressRetrievalDetector.get_option("smartcat_memberships_options") - {'option'}
	WordPressRetrievalDetector.get_option("felix_welcome") - {'option'}
	WordPressRetrievalDetector.get_option("smartcat_memberships_options") - {'option'}
	WordPressStorageDetector.delete_option("felix_welcome") - {'option'}
	WordPressRetrievalDetector.get_option("felix_suspended") - {'option'}
	WordPressStorageDetector.add_option("felix_reset", ["enable" => true, "subject" => __("Reset your password", "smartcat-memberships"), "body" => __("You have requested a password reset. Please click on the link below to reset your password", "smartcat-memberships") . "<br><br>[pw-reset-link]"]) - {'option'}
	WordPressRetrievalDetector.get_option("smartcat_memberships_options") - {'option'}
	WordPressRetrievalDetector.get_option("felix_welcome") - {'option'}
	WordPressRetrievalDetector.get_option("smartcat_memberships_options") - {'option'}
	WordPressRetrievalDetector.get_option("smartcat_memberships_options") - {'option'}
	WordPressRetrievalDetector.get_option("felix_pending") - {'option'}
	WordPressRetrievalDetector.get_option("smartcat_memberships_options") - {'option'}
	WordPressRetrievalDetector.get_option("smartcat_memberships_options") - {'option'}
	WordPressRetrievalDetector.get_option("felix_reset") - {'option'}
	WordPressRetrievalDetector.get_option("smartcat_memberships_options") - {'option'}
	WordPressRetrievalDetector.get_option("felix_pwchange") - {'option'}
	WordPressRetrievalDetector.get_option("smartcat_memberships_options") - {'option'}
	WordPressRetrievalDetector.get_option("smartcat_memberships_options") - {'option'}
	WordPressRetrievalDetector.get_option("smartcat_memberships_options") - {'option'}
	WordPressRetrievalDetector.get_option("smartcat_memberships_options") - {'option'}
	WordPressStorageDetector.update_option("felix_reset", $_REQUEST["felix_reset"]) - {'option'}
	WordPressRetrievalDetector.get_option("smartcat_memberships_options") - {'option'}
	WordPressRetrievalDetector.get_option("felix_welcome") - {'option'}
	WordPressRetrievalDetector.get_option("felix_suspended") - {'option'}
	WordPressRetrievalDetector.get_option("felix_approved") - {'option'}
	DeletionDetector.delete_option("smartcat_memberships_options") - {'option'}
	WordPressRetrievalDetector.get_option("default_role") - {'option'}
	WordPressStorageDetector.update_option("smartcat_memberships_options", $options) - {'option'}
	WordPressStorageDetector.update_option("felix_pwchange", $_REQUEST["felix_pwchange"]) - {'option'}
	WordPressRetrievalDetector.get_option("page_on_front") - {'option'}
	WordPressStorageDetector.delete_option("felix_suspended") - {'option'}
	DeletionDetector.delete_option("felix_welcome") - {'option'}
	DeletionDetector.delete_option("felix_suspended") - {'option'}
	WordPressStorageDetector.delete_option("felix_pwchange") - {'option'}
	DeletionDetector.delete_option("felix_pending") - {'option'}
	WordPressRetrievalDetector.get_option("felix_pwchange") - {'option'}
	WordPressRetrievalDetector.get_option("smartcat_memberships_options") - {'option'}
	DeletionDetector.delete_option("felix_pwchange") - {'option'}
password
	ArrayElementDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
post_meta
	WordPressStorageDetector.update_post_meta($post_id, "restricted_to", null) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($page->ID, "restricted_to", null) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($page_id, "do_restrict", $passed_values) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "restricted_to", $new_restrictions) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "custom_redirect", false) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($page->ID, "do_restrict", "off") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "wrong_level_redirect", false) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($page_id, "do_restrict", $passed_values) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "non_member_redirect", $_POST["non_member_redirect"]) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "custom_redirect", $_POST["custom_redirect"]) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($page->ID, "do_restrict", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "restricted_to", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($page_id, "restricted_to", $new_restrictions) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($page_id, "do_restrict", $passed_values) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "non_member_redirect", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "do_restrict", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "restricted_to", false) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "do_restrict", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "do_restrict", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "restricted_to", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($page->ID, "restricted_to", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "non_member_redirect", false) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "restricted_to", $new_restrictions) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "do_restrict", false) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($page->ID, "do_restrict", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "wrong_level_redirect", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($page_id, "restricted_to", $new_restrictions) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "wrong_level_redirect", $_POST["wrong_level_redirect"]) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "do_restrict", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "custom_redirect", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "restricted_to", false) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "non_member_redirect", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post->ID, "do_restrict", "off") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "non_member_redirect", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "wrong_level_redirect", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($page->ID, "restricted_to", false) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "wrong_level_redirect", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post->ID, "restricted_to", null) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "restricted_to", $_POST["restricted_to"]) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "do_restrict", $_POST["do_restrict"]) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($page->ID, "restricted_to", false) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "custom_redirect", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "restricted_to", false) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($page_id, "do_restrict", $passed_values) - {'post_meta'}
user
	WordpressHashingFnDetector.wp_update_user(["ID" => $current_user->ID, "user_url" => esc_url($_POST["website"])]) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.wp_update_user(["ID" => $current_user->ID, "user_email" => esc_attr($_POST["email"])]) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	PropertyDetector.(unknown) - {'first_name', 'user', 'user_meta'}
	WordPressRetrievalDetector.get_users(["meta_key" => "linkedin_id", "meta_value" => $data->id, "number" => 1, "count_total" => false]) - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_update_user($userdata) - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_update_user(["ID" => $_GET["user_id"], "role" => $_REQUEST["smartcat_memberships_promote_user"]["tier"]]) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'first_name', 'user', 'user_meta'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	WordPressStorageDetector.wp_insert_user($userdata) - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_update_user(["ID" => $_GET["user_id"], "role" => $_REQUEST["smartcat_memberships_demote_user"]["tier"]]) - {'user', 'user_meta'}
	WordPressStorageDetector.wp_update_user(["ID" => $current_user->ID, "user_url" => esc_url($_POST["website"])]) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'first_name', 'user', 'user_meta'}
	PropertyDetector.(unknown) - {'first_name', 'user', 'user_meta'}
	WordPressStorageDetector.register_new_user($args["user_login"], $args["user_email"]) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'first_name', 'user', 'user_meta'}
	WordPressStorageDetector.wp_update_user($userdata) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'first_name', 'user', 'user_meta'}
	WordPressStorageDetector.wp_update_user(["ID" => $current_user->ID, "user_pass" => esc_attr($_POST["pass1"])]) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'first_name', 'user', 'user_meta'}
	WordPressStorageDetector.wp_delete_user($_REQUEST["user_to_delete"]) - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_update_user(["ID" => $current_user->ID, "user_pass" => esc_attr($_POST["pass1"])]) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($user_id) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($user_id) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($user_id) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	PropertyDetector.(unknown) - {'first_name', 'user', 'user_meta'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("id", get_current_user_id()) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	WordPressStorageDetector.wp_update_user(["ID" => $user_id, "first_name" => $args["first_name"], "last_name" => $args["last_name"], "user_pass" => $args["user_pass"]]) - {'user', 'user_meta'}
	WordPressStorageDetector.wp_insert_user($userdata) - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_update_user(["ID" => $user_id, "first_name" => $args["first_name"], "last_name" => $args["last_name"], "user_pass" => $args["user_pass"]]) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.wp_update_user(["ID" => $_GET["user_id"], "role" => $_REQUEST["smartcat_memberships_demote_user"]["tier"]]) - {'user', 'user_meta'}
	WordPressStorageDetector.wp_update_user(["ID" => $_GET["user_id"], "role" => $_REQUEST["smartcat_memberships_promote_user"]["tier"]]) - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_update_user(["ID" => $current_user->ID, "user_email" => esc_attr($_POST["email"])]) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	DeletionDetector.wp_delete_user($_REQUEST["user_to_delete"]) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	WordPressRetrievalDetector.get_users() - {'user', 'user_meta'}
user_meta
	WordPressStorageDetector.update_user_meta($current_user->ID, "country", esc_attr($_POST["country"])) - {'country', 'user_meta'}
	WordpressHashingFnDetector.wp_update_user(["ID" => $current_user->ID, "user_url" => esc_url($_POST["website"])]) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user->ID, "gender", TRUE) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($current_user->ID, "description", esc_attr($_POST["description"])) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "linkedin_id", $approved_user["pending_linkedin_id"]) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($add_user_id, "smartcat_membership_status", "active") - {'user_meta'}
	WordPressStorageDetector.wp_update_user(["ID" => $current_user->ID, "user_email" => esc_attr($_POST["email"])]) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "smartcat_membership_tiers", $options["default_role"]) - {'user_meta'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "country", $args["country"]) - {'country', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user["ID"], "gender", TRUE) - {'user_meta'}
	WordPressStorageDetector.add_user_meta($add_user_id, "gender", $_POST["smartcat_memberships_add_user"]["gender"]) - {'user_meta'}
	PropertyDetector.(unknown) - {'first_name', 'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($current_user->ID, "last_name", esc_attr($_POST["last-name"])) - {'last_name', 'user_meta'}
	WordPressRetrievalDetector.get_users(["meta_key" => "linkedin_id", "meta_value" => $data->id, "number" => 1, "count_total" => false]) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_set_current_user($user->data->ID) - {'user_meta'}
	WordpressHashingFnDetector.wp_update_user($userdata) - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_update_user(["ID" => $_GET["user_id"], "role" => $_REQUEST["smartcat_memberships_promote_user"]["tier"]]) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta(get_current_user_id(), "smartcat_membership_status", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user->ID, "smartcat_membership_status", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta(get_current_user_id(), "smartcat_membership_tiers", true) - {'user_meta'}
	PropertyDetector.(unknown) - {'first_name', 'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user["ID"], "country", TRUE) - {'country', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user->ID, "smartcat_membership_status", true) - {'user_meta'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "gender", $approved_user["pending_gender"]) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($_REQUEST["user_to_change"], "smartcat_membership_status", "suspended") - {'user_meta'}
	WordPressStorageDetector.update_user_meta($edit_user_id, "country", $_POST["smartcat_memberships_edit_user"]["country"]) - {'country', 'user_meta'}
	WordPressStorageDetector.wp_insert_user($userdata) - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_update_user(["ID" => $_GET["user_id"], "role" => $_REQUEST["smartcat_memberships_demote_user"]["tier"]]) - {'user', 'user_meta'}
	WordPressStorageDetector.wp_update_user(["ID" => $current_user->ID, "user_url" => esc_url($_POST["website"])]) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'first_name', 'user', 'user_meta'}
	PropertyDetector.(unknown) - {'first_name', 'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($current_user->ID, "first_name", esc_attr($_POST["first-name"])) - {'first_name', 'user_meta'}
	WordPressStorageDetector.register_new_user($args["user_login"], $args["user_email"]) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "country", $approved_user["pending_country"]) - {'country', 'user_meta'}
	WordPressStorageDetector.update_user_meta($_REQUEST["user_to_change"], "smartcat_membership_status", "active") - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta(get_current_user_id(), "smartcat_membership_status", true) - {'user_meta'}
	PropertyDetector.(unknown) - {'first_name', 'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user->ID, "smartcat_membership_status", True) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta(get_current_user_id(), "country", true) - {'country', 'user_meta'}
	WordPressStorageDetector.wp_update_user($userdata) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "linkedin_url", $args["linkedin_url"]) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "gender", $args["gender"]) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user->ID, "smartcat_membership_tiers", True) - {'user_meta'}
	PropertyDetector.(unknown) - {'first_name', 'user', 'user_meta'}
	WordPressStorageDetector.wp_update_user(["ID" => $current_user->ID, "user_pass" => esc_attr($_POST["pass1"])]) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'first_name', 'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($_REQUEST["user_to_change"], "smartcat_membership_status", true) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "linkedin_url", $approved_user["pending_linkedin_url"]) - {'user_meta'}
	WordPressStorageDetector.wp_delete_user($_REQUEST["user_to_delete"]) - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_update_user(["ID" => $current_user->ID, "user_pass" => esc_attr($_POST["pass1"])]) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "linkedin_id", $args["linkedin_id"]) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user["ID"], "wp_capabilities", TRUE) - {'user_meta'}
	WordPressRetrievalDetector.get_userdata($user_id) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($user_id) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($user_id) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user["ID"], "smartcat_membership_tiers", True) - {'user_meta'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user->ID, "country", TRUE) - {'country', 'user_meta'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	PropertyDetector.(unknown) - {'first_name', 'user', 'user_meta'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($current_user->ID, "country", true) - {'country', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("id", get_current_user_id()) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($edit_user_id, "gender", $_POST["smartcat_memberships_edit_user"]["gender"]) - {'user_meta'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	WordPressStorageDetector.wp_update_user(["ID" => $user_id, "first_name" => $args["first_name"], "last_name" => $args["last_name"], "user_pass" => $args["user_pass"]]) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta(get_current_user_id(), "country", true) - {'country', 'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "smartcat_membership_status", "active") - {'user_meta'}
	WordPressStorageDetector.wp_insert_user($userdata) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "smartcat_membership_status", "active") - {'user_meta'}
	WordpressHashingFnDetector.wp_update_user(["ID" => $user_id, "first_name" => $args["first_name"], "last_name" => $args["last_name"], "user_pass" => $args["user_pass"]]) - {'user', 'user_meta'}
	WordPressStorageDetector.add_user_meta($add_user_id, "country", $_POST["smartcat_memberships_add_user"]["country"]) - {'country', 'user_meta'}
	WordPressStorageDetector.update_user_meta($add_user_id, "smartcat_membership_tiers", $_POST["smartcat_memberships_add_user"]["tier"]) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id, "smartcat_membership_tiers", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta(get_current_user_id(), "smartcat_membership_tiers", true) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.wp_update_user(["ID" => $_GET["user_id"], "role" => $_REQUEST["smartcat_memberships_demote_user"]["tier"]]) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($user_id, "smartcat_membership_tiers", $this->options["default_role"]) - {'user_meta'}
	WordPressStorageDetector.wp_update_user(["ID" => $_GET["user_id"], "role" => $_REQUEST["smartcat_memberships_promote_user"]["tier"]]) - {'user', 'user_meta'}
	WordpressHashingFnDetector.wp_update_user(["ID" => $current_user->ID, "user_email" => esc_attr($_POST["email"])]) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	DeletionDetector.wp_delete_user($_REQUEST["user_to_delete"]) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'last_name', 'user', 'user_meta'}
	WordPressRetrievalDetector.get_users() - {'user', 'user_meta'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:37.866516.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 2274 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.965715.

!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 48
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 111
1000 STORE_REACHES edges created
2000 STORE_REACHES edges created
2274 STORE_REACHES edges created
2274 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 529 nodes as PERSONAL
In total, tainted 529 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 280 nodes as ENCRYPTED
In total, tainted 280 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:43.971418.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:03:31.506439!
Request variable '$_POST["email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["first-name"]' of personal types {'first_name'} is found.,,None
Request variable '$_POST["first-name"]' of personal types {'first_name'} is found.,,None
Request variable '$_POST["last-name"]' of personal types {'last_name'} is found.,,None
Request variable '$_POST["last-name"]' of personal types {'last_name'} is found.,,None
Request variable '$_POST["country"]' of personal types {'country'} is found.,,None
Request variable '$_POST["country"]' of personal types {'country'} is found.,,None
Request variable '$_POST["login_password"]' of personal types {'password'} is found.,,None
Data from table $wpdbsmartcat_memberships_pending_users deleted: "$wpdb->delete($wpdb->prefix . "smartcat_memberships_pending_users", ["pending_id" => $_POST["smartcat_memberships_approve_user_id"]], ["%d"])",None,None
DELETION call to delete_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("felix_welcome") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("felix_pending") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("felix_suspended") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("felix_pwchange") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Data from table $wpdbsmartcat_memberships_custom_tiers deleted: "$wpdb->delete($wpdb->prefix . "smartcat_memberships_custom_tiers", ["tier_id" => $_REQUEST["tier_to_delete"]], ["%d"])",None,None
DELETION call to wp_delete_user($_REQUEST["user_to_delete"]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $id (int). Returns (bool).,None,None
object property '$user->first_name' of personal types {'first_name', 'user', 'user_meta'} is found.,,None
object property '$user->last_name' of personal types {'last_name', 'user', 'user_meta'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$user->first_name' of personal types {'first_name', 'user', 'user_meta'} is found.,,None
object property '$user->last_name' of personal types {'last_name', 'user', 'user_meta'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$data->emailAddress' of personal types {'address', 'email'} is found.,,None
object property '$data->emailAddress' of personal types {'address', 'email'} is found.,,None
object property '$data->emailAddress' of personal types {'address', 'email'} is found.,,None
object property '$data->emailAddress' of personal types {'address', 'email'} is found.,,None
object property '$data->emailAddress' of personal types {'address', 'email'} is found.,,None
object property '$data->location->country' of personal types {'country'} is found.,,None
object property '$user->pending_first_name' of personal types {'first_name', 'user', 'user_meta'} is found.,,None
object property '$user->pending_last_name' of personal types {'last_name', 'user', 'user_meta'} is found.,,None
object property '$user->pending_first_name' of personal types {'first_name', 'user', 'user_meta'} is found.,,None
object property '$user->pending_last_name' of personal types {'last_name', 'user', 'user_meta'} is found.,,None
object property '$user->pending_email' of personal types {'email'} is found.,,None
object property '$user->first_name' of personal types {'first_name', 'user', 'user_meta'} is found.,,None
object property '$user->last_name' of personal types {'last_name', 'user', 'user_meta'} is found.,,None
object property '$user->first_name' of personal types {'first_name', 'user', 'user_meta'} is found.,,None
object property '$user->last_name' of personal types {'last_name', 'user', 'user_meta'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$current_user->first_name' of personal types {'first_name', 'user', 'user_meta'} is found.,,None
object property '$current_user->user_lastname' of personal types {'last_name', 'user', 'user_meta'} is found.,,None
object property '$current_user->user_lastname' of personal types {'last_name', 'user', 'user_meta'} is found.,,None
object property '$current_user->user_email' of personal types {'email'} is found.,,None
object property '$current_user->first_name' of personal types {'first_name', 'user', 'user_meta'} is found.,,None
object property '$current_user->last_name' of personal types {'last_name', 'user', 'user_meta'} is found.,,None
object property '$current_user->user_email' of personal types {'email'} is found.,,None
variable '$new_pass' of personal types {'password'} is found.,,None
variable '$new_pass' of personal types {'password'} is found.,,None
variable '$unhashed_pass' of personal types {'password'} is found.,,None
variable '$unhashed_pass' of personal types {'password'} is found.,,None
variable '$hashed_pass' of personal types {'password'} is found.,,None
variable '$prepared_username' of personal types {'user', 'user_meta'} is found.,,None
variable '$prepared_first_name' of personal types {'first_name'} is found.,,None
variable '$prepared_last_name' of personal types {'last_name'} is found.,,None
variable '$prepared_email' of personal types {'email'} is found.,,None
variable '$prepared_country' of personal types {'country'} is found.,,None
variable '$prepared_username' of personal types {'user', 'user_meta'} is found.,,None
variable '$prepared_email' of personal types {'email'} is found.,,None
variable '$unhashed_pass' of personal types {'password'} is found.,,None
variable '$prepared_username' of personal types {'user', 'user_meta'} is found.,,None
variable '$prepared_username' of personal types {'user', 'user_meta'} is found.,,None
variable '$prepared_email' of personal types {'email'} is found.,,None
variable '$prepared_first_name' of personal types {'first_name'} is found.,,None
variable '$prepared_last_name' of personal types {'last_name'} is found.,,None
variable '$prepared_country' of personal types {'country'} is found.,,None
RETRIEVAL call to get_userdata($user_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user->ID, "gender", TRUE) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user->ID, "country", TRUE) alters data types {'country', 'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdata($user_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_meta($user->ID, "smartcat_membership_tiers", True) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user->ID, "smartcat_membership_status", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user->ID, "smartcat_membership_status", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_users() alters data types {'user', 'user_meta'}. Returns (array).,None,None
RETRIEVAL call to get_user_meta($user->ID, "smartcat_membership_status", True) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user["ID"], "wp_capabilities", TRUE) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user["ID"], "smartcat_membership_tiers", True) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user["ID"], "gender", TRUE) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user["ID"], "country", TRUE) alters data types {'country', 'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_posts(). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_post_meta($post->ID, "restricted_to", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "do_restrict", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($page->ID, "restricted_to", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($page->ID, "do_restrict", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_posts(). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_post_meta($post->ID, "restricted_to", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($page->ID, "restricted_to", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("felix_welcome") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("felix_pending") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("felix_approved") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("felix_suspended") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("felix_reset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("felix_pwchange") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($page->ID, "restricted_to", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($page->ID, "do_restrict", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_posts(). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_post_meta($post->ID, "restricted_to", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "do_restrict", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_users(["meta_key" => "linkedin_id", "meta_value" => $data->id, "number" => 1, "count_total" => false]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $args (array). Returns (array).,None,None
RETRIEVAL call to wp_set_current_user($user->data->ID) alters data types {'user_meta'}. Passed arguments: 0: $id (int). Returns (WP_User).,None,None
RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("felix_welcome") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("felix_pending") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("felix_approved") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("felix_suspended") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("felix_reset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("felix_pwchange") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("default_role") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_posts(["post_type" => "post", "post_status" => "publish"]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_user_meta($_REQUEST["user_to_change"], "smartcat_membership_status", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("page_on_front") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("page_on_front") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "do_restrict", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "restricted_to", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "non_member_redirect", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "wrong_level_redirect", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "custom_redirect", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to wp_hash_password($unhashed_pass). Passed arguments: 0: $password (string). Returns (string).,None,None
RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "do_restrict", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "custom_redirect", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "non_member_redirect", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "non_member_redirect", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "wrong_level_redirect", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "wrong_level_redirect", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user_id, "smartcat_membership_tiers", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "restricted_to", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to dbDelta($pending_users_sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to dbDelta($custom_tiers_sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdata($user_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_option("felix_welcome") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("felix_pending") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_by("id", get_current_user_id()) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_meta(get_current_user_id(), "smartcat_membership_tiers", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta(get_current_user_id(), "smartcat_membership_tiers", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta(get_current_user_id(), "smartcat_membership_status", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta(get_current_user_id(), "smartcat_membership_status", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta(get_current_user_id(), "country", true) alters data types {'country', 'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta(get_current_user_id(), "country", true) alters data types {'country', 'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($current_user->ID, "country", true) alters data types {'country', 'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
STORAGE call to wp_insert_user($userdata) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,None,None
STORAGE call to update_user_meta($user_id, "gender", $approved_user["pending_gender"]) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "country", $approved_user["pending_country"]) alters data types {'country', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "linkedin_id", $approved_user["pending_linkedin_id"]) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "linkedin_url", $approved_user["pending_linkedin_url"]) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "smartcat_membership_tiers", $this->options["default_role"]) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "smartcat_membership_status", "active") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_update_user($userdata) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,None,None
STORAGE call to update_user_meta($edit_user_id, "gender", $_POST["smartcat_memberships_edit_user"]["gender"]) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($edit_user_id, "country", $_POST["smartcat_memberships_edit_user"]["country"]) alters data types {'country', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_update_user(["ID" => $_GET["user_id"], "role" => $_REQUEST["smartcat_memberships_promote_user"]["tier"]]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,None,None
STORAGE call to wp_update_user(["ID" => $_GET["user_id"], "role" => $_REQUEST["smartcat_memberships_demote_user"]["tier"]]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,None,None
STORAGE call to update_option("smartcat_memberships_options", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("felix_welcome", $_REQUEST["felix_welcome"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("felix_pending", $_REQUEST["felix_pending"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("felix_approved", $_REQUEST["felix_approved"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("felix_suspended", $_REQUEST["felix_suspended"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("felix_reset", $_REQUEST["felix_reset"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("felix_pwchange", $_REQUEST["felix_pwchange"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("smartcat_memberships_options", $_REQUEST["smartcat_memberships_options"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, "restricted_to", $_POST["restricted_to"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "restricted_to", null) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "do_restrict", $_POST["do_restrict"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "do_restrict", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "non_member_redirect", $_POST["non_member_redirect"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "non_member_redirect", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "wrong_level_redirect", $_POST["wrong_level_redirect"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "wrong_level_redirect", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "custom_redirect", $_POST["custom_redirect"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "custom_redirect", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to add_option("smartcat_memberships_options", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("smartcat_memberships_options", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("felix_welcome", ["enable" => true, "subject" => "Welcome [first-name]!", "body" => __("You have been registered<br><br>Your username is: [username]<br>Your password is: [password]", "smartcat-memberships")]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("felix_pending", ["enable" => true, "subject" => "Welcome [first-name]!", "body" => __("Thank you for signing up! We have received your request, and one of our admins will review it as soon as possible", "smartcat-memberships")]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("felix_approved", ["enable" => true, "subject" => "Welcome [first-name]!", "body" => __("Your account has been approved and you are now a registered user!", "smartcat-memberships")]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("felix_suspended", ["enable" => true, "subject" => "Account suspended", "body" => __("Your account has been suspended", "smartcat-memberships")]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("felix_reset", ["enable" => true, "subject" => __("Reset your password", "smartcat-memberships"), "body" => __("You have requested a password reset. Please click on the link below to reset your password", "smartcat-memberships") . "<br><br>[pw-reset-link]"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("felix_pwchange", ["enable" => true, "subject" => __("Your password has been chaged", "smartcat-memberships"), "body" => __("You recently changed the password associated with your account", "smartcat-memberships")]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("smartcat_memberships_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("felix_welcome") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("felix_pending") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("felix_suspended") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("felix_pwchange") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("default_role", $this->options["default_role"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($page->ID, "do_restrict", "off") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($page->ID, "restricted_to", null) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($page_id, "do_restrict", $passed_values) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($page_id, "restricted_to", $new_restrictions) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post->ID, "do_restrict", "off") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post->ID, "restricted_to", null) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($page_id, "do_restrict", $passed_values) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "restricted_to", $new_restrictions) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($page_id, "do_restrict", $passed_values) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($page_id, "restricted_to", $new_restrictions) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($page_id, "do_restrict", $passed_values) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "restricted_to", $new_restrictions) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_insert_user($userdata) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,None,None
STORAGE call to add_user_meta($add_user_id, "gender", $_POST["smartcat_memberships_add_user"]["gender"]) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($add_user_id, "country", $_POST["smartcat_memberships_add_user"]["country"]) alters data types {'country', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to update_user_meta($add_user_id, "smartcat_membership_tiers", $_POST["smartcat_memberships_add_user"]["tier"]) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($add_user_id, "smartcat_membership_status", "active") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_delete_user($_REQUEST["user_to_delete"]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $id (int). Returns (bool).,None,None
STORAGE call to update_user_meta($_REQUEST["user_to_change"], "smartcat_membership_status", "active") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($_REQUEST["user_to_change"], "smartcat_membership_status", "suspended") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_update_user(["ID" => $current_user->ID, "user_pass" => esc_attr($_POST["pass1"])]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,None,None
STORAGE call to wp_update_user(["ID" => $current_user->ID, "user_url" => esc_url($_POST["website"])]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,None,None
STORAGE call to wp_update_user(["ID" => $current_user->ID, "user_email" => esc_attr($_POST["email"])]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,None,None
STORAGE call to update_user_meta($current_user->ID, "first_name", esc_attr($_POST["first-name"])) alters data types {'first_name', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($current_user->ID, "last_name", esc_attr($_POST["last-name"])) alters data types {'last_name', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($current_user->ID, "description", esc_attr($_POST["description"])) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($current_user->ID, "country", esc_attr($_POST["country"])) alters data types {'country', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to register_new_user($args["user_login"], $args["user_email"]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_login (string), 1: $user_email (string). Returns (int|WP_Error).,None,None
STORAGE call to update_user_meta($user_id, "gender", $args["gender"]) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "country", $args["country"]) alters data types {'country', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "linkedin_id", $args["linkedin_id"]) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "linkedin_url", $args["linkedin_url"]) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "smartcat_membership_tiers", $options["default_role"]) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_id, "smartcat_membership_status", "active") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_update_user(["ID" => $user_id, "first_name" => $args["first_name"], "last_name" => $args["last_name"], "user_pass" => $args["user_pass"]]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,None,None
CRYPTOGRAPHY call to wp_update_user($userdata) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,hash,None
CRYPTOGRAPHY call to wp_update_user(["ID" => $_GET["user_id"], "role" => $_REQUEST["smartcat_memberships_promote_user"]["tier"]]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,hash,None
CRYPTOGRAPHY call to wp_update_user(["ID" => $_GET["user_id"], "role" => $_REQUEST["smartcat_memberships_demote_user"]["tier"]]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,hash,None
CRYPTOGRAPHY call to wp_update_user(["ID" => $current_user->ID, "user_pass" => esc_attr($_POST["pass1"])]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,hash,None
CRYPTOGRAPHY call to wp_update_user(["ID" => $current_user->ID, "user_url" => esc_url($_POST["website"])]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,hash,None
CRYPTOGRAPHY call to wp_update_user(["ID" => $current_user->ID, "user_email" => esc_attr($_POST["email"])]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,hash,None
CRYPTOGRAPHY call to wp_hash_password($unhashed_pass). Passed arguments: 0: $password (string). Returns (string).,hash,None
CRYPTOGRAPHY call to wp_update_user(["ID" => $user_id, "first_name" => $args["first_name"], "last_name" => $args["last_name"], "user_pass" => $args["user_pass"]]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,hash,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] PII of types (['country', 'user', 'address', 'first_name', 'email', 'last_name', 'password', 'user_meta']) stored through WordPress function "update_user_meta($current_user->ID, "country", esc_attr($_POST["country"]))", found in file inc/controllers/controller.form_handlers.php at line 174. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($current_user->ID, "description", esc_attr($_POST["description"]))", found in file inc/controllers/controller.form_handlers.php at line 171. 

[has_storage] PII of types (['user', 'user_meta']) stored through WordPress function "update_user_meta($user_id, "linkedin_id", $approved_user["pending_linkedin_id"])", found in file admin/controllers/controller.admin_handlers.php at line 123. 

[has_storage] PII of types (['user', 'user_meta']) stored through WordPress function "update_user_meta($add_user_id, "smartcat_membership_status", "active")", found in file inc/class/class.smartcat-memberships.php at line 790. 

[has_storage] WP User info of types (['email', 'user', 'user_meta']) stored through WordPress function "wp_update_user(["ID" => $current_user->ID, "user_email" => esc_attr($_POST["email"])])", found in file inc/controllers/controller.form_handlers.php at line 159. 

[has_storage] PII of types (['country', 'user', 'address', 'first_name', 'email', 'last_name', 'password', 'user_meta']) stored through WordPress function "update_user_meta($user_id, "smartcat_membership_tiers", $options["default_role"])", found in file inc/process/helpers.php at line 488. 

[has_storage] PII of types (['country', 'user', 'address', 'first_name', 'email', 'last_name', 'password', 'user_meta']) stored through WordPress function "update_user_meta($user_id, "country", $args["country"])", found in file inc/process/helpers.php at line 484. 

[has_storage] PII of types (['user', 'user_meta']) stored through WordPress function "add_user_meta($add_user_id, "gender", $_POST["smartcat_memberships_add_user"]["gender"])", found in file inc/class/class.smartcat-memberships.php at line 787. 

[has_storage] PII of types (['last_name', 'user_meta']) stored through WordPress function "update_user_meta($current_user->ID, "last_name", esc_attr($_POST["last-name"]))", found in file inc/controllers/controller.form_handlers.php at line 168. 

[has_storage] PII of types (['user', 'user_meta']) stored through WordPress function "update_user_meta($user_id, "gender", $approved_user["pending_gender"])", found in file admin/controllers/controller.admin_handlers.php at line 121. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($_REQUEST["user_to_change"], "smartcat_membership_status", "suspended")", found in file inc/class/class.smartcat-memberships.php at line 828. 

[has_storage] PII of types (['country', 'user', 'user_meta']) stored through WordPress function "update_user_meta($edit_user_id, "country", $_POST["smartcat_memberships_edit_user"]["country"])", found in file admin/controllers/controller.admin_handlers.php at line 196. 

[has_storage] WP User info of types (['user', 'user_meta']) stored through WordPress function "wp_insert_user($userdata)", found in file admin/controllers/controller.admin_handlers.php at line 118. 

[has_storage] WP User info of types (['user', 'user_meta']) stored through WordPress function "wp_update_user(["ID" => $current_user->ID, "user_url" => esc_url($_POST["website"])])", found in file inc/controllers/controller.form_handlers.php at line 150. 

[has_storage] PII of types (['first_name', 'user_meta']) stored through WordPress function "update_user_meta($current_user->ID, "first_name", esc_attr($_POST["first-name"]))", found in file inc/controllers/controller.form_handlers.php at line 165. 

[has_storage] PII of types (['country', 'user', 'address', 'first_name', 'email', 'last_name', 'password', 'user_meta']) stored through WordPress function "register_new_user($args["user_login"], $args["user_email"])", found in file inc/process/helpers.php at line 478. 

[has_storage] PII of types (['country', 'user', 'user_meta']) stored through WordPress function "update_user_meta($user_id, "country", $approved_user["pending_country"])", found in file admin/controllers/controller.admin_handlers.php at line 122. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($_REQUEST["user_to_change"], "smartcat_membership_status", "active")", found in file inc/class/class.smartcat-memberships.php at line 824. 

[has_storage] WP User info of types (['user', 'user_meta']) stored through WordPress function "wp_update_user($userdata)", found in file admin/controllers/controller.admin_handlers.php at line 194. 

[has_storage] PII of types (['country', 'user', 'address', 'first_name', 'email', 'last_name', 'password', 'user_meta']) stored through WordPress function "update_user_meta($user_id, "linkedin_url", $args["linkedin_url"])", found in file inc/process/helpers.php at line 486. 

[has_storage] PII of types (['country', 'user', 'address', 'first_name', 'email', 'last_name', 'password', 'user_meta']) stored through WordPress function "update_user_meta($user_id, "gender", $args["gender"])", found in file inc/process/helpers.php at line 483. 

[has_storage] WP User info of types (['user', 'user_meta']) stored through WordPress function "wp_update_user(["ID" => $current_user->ID, "user_pass" => esc_attr($_POST["pass1"])])", found in file inc/controllers/controller.form_handlers.php at line 144. 

[has_storage] PII of types (['user', 'user_meta']) stored through WordPress function "update_user_meta($user_id, "linkedin_url", $approved_user["pending_linkedin_url"])", found in file admin/controllers/controller.admin_handlers.php at line 124. 

[has_storage] PII of types (['country', 'user', 'address', 'first_name', 'email', 'last_name', 'password', 'user_meta']) stored through WordPress function "update_user_meta($user_id, "linkedin_id", $args["linkedin_id"])", found in file inc/process/helpers.php at line 485. 

[has_storage] PII of types (['user', 'user_meta']) stored through WordPress function "update_user_meta($edit_user_id, "gender", $_POST["smartcat_memberships_edit_user"]["gender"])", found in file admin/controllers/controller.admin_handlers.php at line 195. 

[has_storage] WP User info of types (['country', 'user', 'address', 'first_name', 'email', 'last_name', 'password', 'user_meta']) stored through WordPress function "wp_update_user(["ID" => $user_id, "first_name" => $args["first_name"], "last_name" => $args["last_name"], "user_pass" => $args["user_pass"]])", found in file inc/process/helpers.php at line 492. 

[has_storage] PII of types (['user', 'user_meta']) stored through WordPress function "update_user_meta($user_id, "smartcat_membership_status", "active")", found in file admin/controllers/controller.admin_handlers.php at line 127. 

[has_storage] WP User info of types (['user', 'user_meta']) stored through WordPress function "wp_insert_user($userdata)", found in file inc/class/class.smartcat-memberships.php at line 785. 

[has_storage] PII of types (['country', 'user', 'address', 'first_name', 'email', 'last_name', 'password', 'user_meta']) stored through WordPress function "update_user_meta($user_id, "smartcat_membership_status", "active")", found in file inc/process/helpers.php at line 489. 

[has_storage] PII of types (['country', 'user', 'user_meta']) stored through WordPress function "add_user_meta($add_user_id, "country", $_POST["smartcat_memberships_add_user"]["country"])", found in file inc/class/class.smartcat-memberships.php at line 788. 

[has_storage] PII of types (['user', 'user_meta']) stored through WordPress function "update_user_meta($add_user_id, "smartcat_membership_tiers", $_POST["smartcat_memberships_add_user"]["tier"])", found in file inc/class/class.smartcat-memberships.php at line 789. 

[has_storage] WP User info of types (['user', 'user_meta']) stored through WordPress function "wp_update_user(["ID" => $_GET["user_id"], "role" => $_REQUEST["smartcat_memberships_demote_user"]["tier"]])", found in file admin/controllers/controller.admin_handlers.php at line 224. 

[has_storage] PII of types (['user', 'user_meta']) stored through WordPress function "update_user_meta($user_id, "smartcat_membership_tiers", $this->options["default_role"])", found in file admin/controllers/controller.admin_handlers.php at line 126. 

[has_storage] WP User info of types (['user', 'user_meta']) stored through WordPress function "wp_update_user(["ID" => $_GET["user_id"], "role" => $_REQUEST["smartcat_memberships_promote_user"]["tier"]])", found in file admin/controllers/controller.admin_handlers.php at line 209. 

[has_storage] Storage check is WP 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($current_user->ID, "country", esc_attr($_POST["country"])) does not have corresponding deletion method. Storage method found in file inc/controllers/controller.form_handlers.php at line 174. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($current_user->ID, "description", esc_attr($_POST["description"])) does not have corresponding deletion method. Storage method found in file inc/controllers/controller.form_handlers.php at line 171. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "linkedin_id", $approved_user["pending_linkedin_id"]) does not have corresponding deletion method. Storage method found in file admin/controllers/controller.admin_handlers.php at line 123. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($add_user_id, "smartcat_membership_status", "active") does not have corresponding deletion method. Storage method found in file inc/class/class.smartcat-memberships.php at line 790. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "smartcat_membership_tiers", $options["default_role"]) does not have corresponding deletion method. Storage method found in file inc/process/helpers.php at line 488. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "country", $args["country"]) does not have corresponding deletion method. Storage method found in file inc/process/helpers.php at line 484. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($add_user_id, "gender", $_POST["smartcat_memberships_add_user"]["gender"]) does not have corresponding deletion method. Storage method found in file inc/class/class.smartcat-memberships.php at line 787. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($current_user->ID, "last_name", esc_attr($_POST["last-name"])) does not have corresponding deletion method. Storage method found in file inc/controllers/controller.form_handlers.php at line 168. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "gender", $approved_user["pending_gender"]) does not have corresponding deletion method. Storage method found in file admin/controllers/controller.admin_handlers.php at line 121. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($_REQUEST["user_to_change"], "smartcat_membership_status", "suspended") does not have corresponding deletion method. Storage method found in file inc/class/class.smartcat-memberships.php at line 828. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($edit_user_id, "country", $_POST["smartcat_memberships_edit_user"]["country"]) does not have corresponding deletion method. Storage method found in file admin/controllers/controller.admin_handlers.php at line 196. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($current_user->ID, "first_name", esc_attr($_POST["first-name"])) does not have corresponding deletion method. Storage method found in file inc/controllers/controller.form_handlers.php at line 165. 

[Art.17, Right to erasure] Wordpress storage of PII through register_new_user($args["user_login"], $args["user_email"]) has deletion method wp_delete_user($_REQUEST["user_to_delete"]). Storage method found in file inc/process/helpers.php at line 478. Deletion method found in file inc/class/class.smartcat-memberships.php at line 808. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "country", $approved_user["pending_country"]) does not have corresponding deletion method. Storage method found in file admin/controllers/controller.admin_handlers.php at line 122. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($_REQUEST["user_to_change"], "smartcat_membership_status", "active") does not have corresponding deletion method. Storage method found in file inc/class/class.smartcat-memberships.php at line 824. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "linkedin_url", $args["linkedin_url"]) does not have corresponding deletion method. Storage method found in file inc/process/helpers.php at line 486. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "gender", $args["gender"]) does not have corresponding deletion method. Storage method found in file inc/process/helpers.php at line 483. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "linkedin_url", $approved_user["pending_linkedin_url"]) does not have corresponding deletion method. Storage method found in file admin/controllers/controller.admin_handlers.php at line 124. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "linkedin_id", $args["linkedin_id"]) does not have corresponding deletion method. Storage method found in file inc/process/helpers.php at line 485. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($edit_user_id, "gender", $_POST["smartcat_memberships_edit_user"]["gender"]) does not have corresponding deletion method. Storage method found in file admin/controllers/controller.admin_handlers.php at line 195. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "smartcat_membership_status", "active") does not have corresponding deletion method. Storage method found in file admin/controllers/controller.admin_handlers.php at line 127. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "smartcat_membership_status", "active") does not have corresponding deletion method. Storage method found in file inc/process/helpers.php at line 489. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($add_user_id, "country", $_POST["smartcat_memberships_add_user"]["country"]) does not have corresponding deletion method. Storage method found in file inc/class/class.smartcat-memberships.php at line 788. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($add_user_id, "smartcat_membership_tiers", $_POST["smartcat_memberships_add_user"]["tier"]) does not have corresponding deletion method. Storage method found in file inc/class/class.smartcat-memberships.php at line 789. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_id, "smartcat_membership_tiers", $this->options["default_role"]) does not have corresponding deletion method. Storage method found in file admin/controllers/controller.admin_handlers.php at line 126. 

[Art.17, Right to erasure] Deletion access is NONE 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 16679. Found in file inc/controllers/controller.form_handlers.php at line 174 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 16654. Found in file inc/controllers/controller.form_handlers.php at line 171 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 635. Found in file admin/controllers/controller.admin_handlers.php at line 123 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 14811. Found in file inc/class/class.smartcat-memberships.php at line 790 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 18305. Found in file inc/process/helpers.php at line 488 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 18245. Found in file inc/process/helpers.php at line 484 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 14772. Found in file inc/class/class.smartcat-memberships.php at line 787 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 16629. Found in file inc/controllers/controller.form_handlers.php at line 168 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 613. Found in file admin/controllers/controller.admin_handlers.php at line 121 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 14924. Found in file inc/class/class.smartcat-memberships.php at line 828 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 970. Found in file admin/controllers/controller.admin_handlers.php at line 196 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 16604. Found in file inc/controllers/controller.form_handlers.php at line 165 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 18202. Found in file inc/process/helpers.php at line 478 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 624. Found in file admin/controllers/controller.admin_handlers.php at line 122 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 14909. Found in file inc/class/class.smartcat-memberships.php at line 824 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 18285. Found in file inc/process/helpers.php at line 486 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 18225. Found in file inc/process/helpers.php at line 483 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 646. Found in file admin/controllers/controller.admin_handlers.php at line 124 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 18265. Found in file inc/process/helpers.php at line 485 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 957. Found in file admin/controllers/controller.admin_handlers.php at line 195 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 670. Found in file admin/controllers/controller.admin_handlers.php at line 127 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 18320. Found in file inc/process/helpers.php at line 489 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 14785. Found in file inc/class/class.smartcat-memberships.php at line 788 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 14798. Found in file inc/class/class.smartcat-memberships.php at line 789 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 657. Found in file admin/controllers/controller.admin_handlers.php at line 126 

[Art.15, Right to access] Data access is NONE_BUT_NOT_REQUIRED 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['access', 'deletion', 'encryption', 'third_party'] 

[main] Is deletion in violation? True 

[main] Is access in violation? False 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? False 


###########
### Q&A ###
###########

1. Why is my plugin in violation against GDPR?

GDPR (https://gdpr-info.eu/) aims to give citizens in the European Union (EU) control over their personal data. If a website collects or store user data, it is required to provide users functionalities to control their data, such as ones to erase or export their data. While a plugin do not directly interact with users, it may provide functionalities that collect or store personal data, which would make websites that deploy the plugin in violation against GDPR if the plugin does not provide corresponding functionalities to allow users control their personal data. Therefore, plugin developers are responsible to provide functions to manage the personal data they handle in accordance with GDPR. We list requirements by specific GDPR articles relevant to your plugin below.


[Art. 13, Information to be provided where personal data are collected from the data subject] If a plugin collects or handles personal data, it needs to provide privacy policy texts that explain what personal data is being collected and for what purpose. The texts are meant to be added to the privacy policy of the websites that deploy the plugin. 


            
[Art.17, Right to erasure] If a plugin stores personal data in a custom database they create or manage, or through Wordpress's native storage functions (e.g., update_user_meta), it needs to provide methods for users to erase the data upon request. Note that deleting data for all users upon uninstallation does not satisfy the requirement. 


            
        

2. How do I make my plugin compliant?

Please refer to the fix report below to see how you can make your plugin comply with GDPR.

        

##################
### Fix Report ###
##################

############################
# Data Deletion Fix Report #
############################

This report suggests fixes to comply with the GDPR Art. 17, Right to erasure (https://gdpr-info.eu/art-17-gdpr/). The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/adding-the-personal-data-eraser-to-your-plugin/ for more details.

1) Implement a function that deletes all the user data collected in the plugin. Sample code:


/**
* Removes all collected data of a user.
*
* @param string $email_address   email address to manipulate
* @param int    $page            pagination
*
* @return array
*/
function felix-user-memberships-content-restriction_remove_data( $email_address, $page = 1 ) {
    
    $page = (int) $page;


    //TODO: Delete the user data that was stored using Wordpress functions

    //Below is the sample code for deleting user meta and may need to be modified to suit the plugin.
    $user_id = get_user_by('email', $email_address)
    $key = 'email' //Sample user meta key
    if ( $customer->user_id > 0 ) {
        //Delete user meta data by $key
        delete_user_meta( $user_id, $key );
    }
        



    // Tell core if we have more data to delete still
    $done = true;
    return array(
        'items_removed'  => $items_removed, // true if collected data of a user is being deleted
        'items_retained' => $items_retained, // true if certain data needs to be retained
        'messages'       => sprintf( __( 'Data of user with email %s successfully deleted.', 'felix-user-memberships-content-restriction' ), $email_address ), // Put messages for data removal
        'done'           => $done, // true if all the removal processes are done (all data of the user is removed)
    );
}
        

2) Hook the deletion function to the Wordpress's Personal Data Removal tool


/**
* Registers all data erasers.
*
* @param array $exporters
*
* @return mixed
*/
function felix-user-memberships-content-restriction_register_privacy_erasers( $erasers ) {
    $erasers['my-plugin-slug'] = array(
        'eraser_friendly_name' => __( '<eraser name>', 'felix-user-memberships-content-restriction' ),
        'callback'             => 'felix-user-memberships-content-restriction_remove_data',
    );
    return $erasers;
}
        

add_filter( 'wp_privacy_personal_data_erasers', 'felix-user-memberships-content-restriction_register_privacy_erasers' );
        

        

#############################
# Privacy Policy Fix Report #
#############################

This report suggests fixes to comply with the GDPR Art. 13 (https://gdpr-info.eu/art-13-gdpr/) through including a privacy notice. The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/suggesting-text-for-the-site-privacy-policy/ for more details.

1) Implement a function that includes the privacy policy for the plugin and provide it to wordpress through wp_add_privacy_policy_content(). Sample code:


/**
* Adds a privacy policy statement.
*/
function felix-user-memberships-content-restriction_add_privacy_policy_content() {
    if ( ! function_exists( 'wp_add_privacy_policy_content' ) ) {
        return;
    }
    //TODO: modify the content below to include the privacy policy for the plugin.
    $content = '<p class="privacy-policy-tutorial">' . __( 'Some introductory content for the suggested text.', 'felix-user-memberships-content-restriction' ) . '</p>'
            . '<strong class="privacy-policy-tutorial">' . __( 'Suggested Text:', 'felix-user-memberships-content-restriction' ) . '</strong> '
            . sprintf(
                __( 'When you leave a comment on this site, we send your name, email address, IP address and comment text to example.com. Example.com does not retain your personal data. The example.com privacy policy is <a href="%1$s" target="_blank">here</a>.', 'felix-user-memberships-content-restriction' ),
                'https://example.com/privacy-policy'
            );
    wp_add_privacy_policy_content( 'felix-user-memberships-content-restriction', wp_kses_post( wpautop( $content, false ) ) );
}
        

2) Hook the privacy policy function to the Wordpress's admin initialization action.


add_action( 'admin_init', 'felix-user-memberships-content-restriction_add_privacy_policy_content' );
        

        


Disclaimer: The sample code provided above is only for reference and does not guarantee GDPR compliance. The recommended list of data to delete/export may not be comprehensive. 
        
Done.
