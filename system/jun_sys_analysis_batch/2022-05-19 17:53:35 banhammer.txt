Timeout in resolving values
Timeout in running neo4j query
Running Main.py on banhammer

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:01.250401.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.233658.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 0 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.218383.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 0 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.417781.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 1704 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:01.445620.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 17 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:01.404901.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
Added 1 PHP_REACHES edges.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.094570.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 879 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:22.062427.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 12397
Added 9796 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 23878
Added 11481 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:02.782496.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/banhammer/banhammer.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/banhammer/uninstall.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/banhammer/inc/armory-ajax.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/banhammer/inc/armory-display.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/banhammer/inc/banhammer-core.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/banhammer/inc/banhammer-cron.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/banhammer/inc/banhammer-functions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/banhammer/inc/contextual-help.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/banhammer/inc/resources-enqueue.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/banhammer/inc/settings-display.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/banhammer/inc/settings-register.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/banhammer/inc/settings-reset.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/banhammer/inc/status-codes.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/banhammer/inc/tower-ajax.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/banhammer/inc/tower-display.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/banhammer/lib/WPSimpleNonce.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:01.578940.

1000 PHP_REACHES edges created
1704 PHP_REACHES edges created
6 CALLS edges created
6 PHP_REACHES edges created
3 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
10678 PHP_REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
11481 PHP_REACHES edges created
23878 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 3665 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.282007.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:05.465695.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 194 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:06.706039.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 131 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.186758.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:01.154875.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:02.460235.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.042897.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.032184.

325 PHP_REACHES edges created
325 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 214 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.124753.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
8 SQL operations to process.
CREATE TABLE $wpdbbanhammer (
					
					id        MEDIUMINT UNSIGNED NOT NULL AUTO_INCREMENT,
					date      VARCHAR(50) NOT NULL DEFAULT '',
					
					status    TINYINT UNSIGNED NOT NULL DEFAULT 0,
					process   TINYINT UNSIGNED NOT NULL DEFAULT 0,
					
					user      VARCHAR(50)    NOT NULL DEFAULT '',
					type      VARCHAR(25)    NOT NULL DEFAULT '',
					theme     VARCHAR(50)    NOT NULL DEFAULT '',
					code      VARCHAR(25)    NOT NULL DEFAULT '',
					country   VARCHAR(50)    NOT NULL DEFAULT '',
					region    VARCHAR(50)    NOT NULL DEFAULT '',
					city      VARCHAR(50)    NOT NULL DEFAULT '',
					zip       VARCHAR(25)    NOT NULL DEFAULT '',
					protocol  VARCHAR(25)    NOT NULL DEFAULT '',
					method    VARCHAR(25)    NOT NULL DEFAULT '',
					response  VARCHAR(25)    NOT NULL DEFAULT '',
					connect   VARCHAR(50)    NOT NULL DEFAULT '',
					domain    VARCHAR(250)   NOT NULL DEFAULT '',
					ip        VARCHAR(250)   NOT NULL DEFAULT '',
					proxy     VARCHAR(250)   NOT NULL DEFAULT '',
					host      VARCHAR(250)   NOT NULL DEFAULT '',
					request   VARCHAR(2500)  NOT NULL DEFAULT '',
					postvars  VARCHAR(2500)  NOT NULL DEFAULT '',
					files     VARCHAR(2500)  NOT NULL DEFAULT '',
					ua        VARCHAR(500)   NOT NULL DEFAULT '',
					refer     VARCHAR(500)   NOT NULL DEFAULT '',
					cookies   VARCHAR(1000)  NOT NULL DEFAULT '',
					headers   VARCHAR(1000)  NOT NULL DEFAULT '',
					message   VARCHAR(1000)  NOT NULL DEFAULT '',
					notes     VARCHAR(1000)  NOT NULL DEFAULT '',
					custom    VARCHAR(500)   NOT NULL DEFAULT '',
					data      VARCHAR(500)   NOT NULL DEFAULT '',
					aux       VARCHAR(100)   NOT NULL DEFAULT '',
					
					PRIMARY KEY (id)
					
				) $wpdb->get_charset_collate();
SQL command (CREATE TABLE $wpdbbanhammer ( id MEDIUMINT UNSIGNED NOT NULL AUTO_INCREMENT, date VARCHAR(50) NOT NULL DEFAULT '', status TINYINT UNSIGNED NOT NULL DEFAULT 0, process TINYINT UNSIGNED NOT NULL DEFAULT 0, user VARCHAR(50) NOT NULL DEFAULT '', type VARCHAR(25) NOT NULL DEFAULT '', theme VARCHAR(50) NOT NULL DEFAULT '', code VARCHAR(25) NOT NULL DEFAULT '', country VARCHAR(50) NOT NULL DEFAULT '', region VARCHAR(50) NOT NULL DEFAULT '', city VARCHAR(50) NOT NULL DEFAULT '', zip VARCHAR(25) NOT NULL DEFAULT '', protocol VARCHAR(25) NOT NULL DEFAULT '', method VARCHAR(25) NOT NULL DEFAULT '', response VARCHAR(25) NOT NULL DEFAULT '', connect VARCHAR(50) NOT NULL DEFAULT '', domain VARCHAR(250) NOT NULL DEFAULT '', ip VARCHAR(250) NOT NULL DEFAULT '', proxy VARCHAR(250) NOT NULL DEFAULT '', host VARCHAR(250) NOT NULL DEFAULT '', request VARCHAR(2500) NOT NULL DEFAULT '', postvars VARCHAR(2500) NOT NULL DEFAULT '', files VARCHAR(2500) NOT NULL DEFAULT '', ua VARCHAR(500) NOT NULL DEFAULT '', refer VARCHAR(500) NOT NULL DEFAULT '', cookies VARCHAR(1000) NOT NULL DEFAULT '', headers VARCHAR(1000) NOT NULL DEFAULT '', message VARCHAR(1000) NOT NULL DEFAULT '', notes VARCHAR(1000) NOT NULL DEFAULT '', custom VARCHAR(500) NOT NULL DEFAULT '', data VARCHAR(500) NOT NULL DEFAULT '', aux VARCHAR(100) NOT NULL DEFAULT '', PRIMARY KEY (id) ) $wpdb->get_charset_collate();) cannot be parsed correct.
$query
SQL command ($query) cannot be parsed correct.
SELECT * FROM $table WHERE id = intval($id)
SELECT * FROM $table WHERE id = intval($id)
SQL command (SELECT * FROM $table WHERE id = intval($id)) cannot be parsed correct.
TRUNCATE TABLE $table
SQL command (TRUNCATE TABLE $table) cannot be parsed correct.
TRUNCATE TABLE $wpdbbanhammer
SQL command (TRUNCATE TABLE $wpdbbanhammer) cannot be parsed correct.
UPDATE $table SET status = 0
UPDATE $table SET status = 0
SQL command (UPDATE $table SET status = 0) cannot be parsed correct.
SELECT option_id, 
			               option_name, 
			               option_value 
			          FROM $wpdb 
			         WHERE option_name like _expires_%
SQL command (SELECT option_id, option_name, option_value FROM $wpdb WHERE option_name like _expires_%) cannot be parsed correct.
DROP TABLE IF EXISTS $wpdbbanhammer
SQL command (DROP TABLE IF EXISTS $wpdbbanhammer) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [721, 1952, 2364, 2933, 8356, 18502, 19407, 19589]
Added 0 SQL nodes. 0 out of 8 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:03.503530.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'[ undefined ]'' cannot be parsed correct.
HTML code '$'<a target="_blank" rel="noopener noreferrer" href="$url" title="esc_attr__("Click to edit user", "banhammer")" data-title="esc_attr__("WP User", "banhammer")"$login</a>'' cannot be parsed correct.
HTML code '$'[ undefined ]'' cannot be parsed correct.
HTML code '$'$status'' cannot be parsed correct.
HTML code '$'<input type="checkbox" class="banhammer-id" value="$id" title="banhammer_armory_status_id($status)" data-title="esc_attr__("ID: ", "banhammer")$id"'' cannot be parsed correct.
HTML code '$'$date'' cannot be parsed correct.
HTML code '$'<span class="banhammer-label">Proxy:</span> <a target="_blank" rel="noopener noreferrer" href="https://whatismyipaddress.com/ip/$proxy"apply_filters("banhammer_armory_mask", $proxy)</a> '' cannot be parsed correct.
HTML code '$'<span class="banhammer-label" title="esc_attr__("Click link for whois", "banhammer")" data-title="esc_attr__("Host Name", "banhammer")"esc_attr__("Host", "banhammer"):</span> <a target="_blank" rel="noopener noreferrer" href="https://gwhois.org/$ip+dns"$host</a>'' cannot be parsed correct.
HTML code '$'<span class="banhammer-label"><span title=$response_title" data-title="esc_attr__("Server Response", "banhammer")" data-response="wp_remote_retrieve_response_code($response)"wp_remote_retrieve_response_code($response)</span> <span title=$method esc_attr__("via", "banhammer") $protocol" data-title="esc_attr__("Request Method", "banhammer")"$method</span> </span> <a target="_blank" rel="noopener noreferrer" href="$domain$request" data-request="$request"$request</a>'' cannot be parsed correct.
HTML code '$'<span class="banhammer-label">Referrer:</span> <a target="_blank" rel="noopener noreferrer" href="$refer"$refer</a>'' cannot be parsed correct.
HTML code '$'<span class="banhammer-label">User Agent:</span> $ua'' cannot be parsed correct.
HTML code '$'banhammer_armory_flag($code)<span class="banhammer-whois">trim($data, ", ")</span>'' cannot be parsed correct.
HTML code '$'<div class="banhammer-count-data" data-count="$count" style="display:none;">&ndash;$total of $count</div>'' cannot be parsed correct.
HTML code '$'apply_filters("banhammer_fx_ban", plugins_url("/banhammer/fx/banhammer-ban.mp3"))'' cannot be parsed correct.
HTML code '$'apply_filters("banhammer_fx_ban", plugins_url("/banhammer/fx/banhammer-ban.ogg"))'' cannot be parsed correct.
HTML code '$'apply_filters("banhammer_fx_warn", plugins_url("/banhammer/fx/banhammer-warn.mp3"))'' cannot be parsed correct.
HTML code '$'apply_filters("banhammer_fx_warn", plugins_url("/banhammer/fx/banhammer-warn.ogg"))'' cannot be parsed correct.
HTML code '$'apply_filters("banhammer_fx_delete", plugins_url("/banhammer/fx/banhammer-delete.mp3"))'' cannot be parsed correct.
HTML code '$'apply_filters("banhammer_fx_delete", plugins_url("/banhammer/fx/banhammer-delete.ogg"))'' cannot be parsed correct.
HTML code '$'<option value=$k"$v</option>'' cannot be parsed correct.
HTML code '$'<option value=$k"$v</option>'' cannot be parsed correct.
HTML code '$'BANHAMMER_NAME'' cannot be parsed correct.
HTML code '$'BANHAMMER_VERSION'' cannot be parsed correct.
HTML code '$'<p>Choose when and where Banhammer should be enabled.</p>'' cannot be parsed correct.
HTML code '$'<p>Customize the response given to banned users and bots.</p>'' cannot be parsed correct.
HTML code '$'<p>Advanced settings. Visit the Help tab for more information.</p>'' cannot be parsed correct.
HTML code '$'<a target="_blank" rel="noopener noreferrer" class="banhammer-rate-plugin" href="https://wordpress.org/support/plugin/BANHAMMER_SLUG/reviews/?rate=5#new-post" title="esc_attr__("Help keep Banhammer going strong! A huge THANK YOU for your support!", "banhammer")"$text</a>'' cannot be parsed correct.
HTML code '$'banhammer_tower_status_class($status)'' cannot be parsed correct.
HTML code '$'banhammer_tower_checkbox($target, $status)'' cannot be parsed correct.
HTML code '$'banhammer_tower_actions()'' cannot be parsed correct.
HTML code '$'banhammer_tower_status($status)'' cannot be parsed correct.
HTML code '$'banhammer_tower_hits($hits)'' cannot be parsed correct.
HTML code '$'$date'' cannot be parsed correct.
HTML code '$'banhammer_tower_target($target, $status)'' cannot be parsed correct.
HTML code '$'banhammer_tower_count($i, $count, $wpdb, $table, $sort, $type)'' cannot be parsed correct.
HTML code '$'<input id=banhammer_settings[$id]" name="banhammer_settings[$id]" type="text" size="40" class="regular-text code" value="get_option("banhammer_settings", $default)"'' cannot be parsed correct.
HTML code '$'<label for=banhammer_settings[$id]" class="display-block">$label</label>'' cannot be parsed correct.
HTML code '$'<textarea id=banhammer_settings[$id]" name="banhammer_settings[$id]" rows="3" cols="50" class="large-text code">wp_kses(stripslashes_deep($value), $allowed_tags)</textarea>'' cannot be parsed correct.
HTML code '$'<label for=banhammer_settings[$id]" class="display-block">$label</label>'' cannot be parsed correct.
HTML code '$'<label><input id=$name" name="banhammer_settings[$id]" type="checkbox" checked($value, 1, false) value="1"> $label</label>'' cannot be parsed correct.
HTML code '$'<select id=banhammer_settings[$id]" name="banhammer_settings[$id]"'' cannot be parsed correct.
HTML code '$'<option selected($item_value, $value, false) value=$item_value"$item_label</option>'' cannot be parsed correct.
HTML code '$'</select> <label for=banhammer_settings[$id]"$label</label>'' cannot be parsed correct.
HTML code '$'<a class="banhammer-reset-options" href="add_query_arg(["banhammer-reset-options" => $nonce], admin_url("admin.php?page=banhammer"))"$label</a>'' cannot be parsed correct.
HTML code '$'apply_filters("banhammer_fx_ban", plugins_url("/banhammer/fx/banhammer-ban.mp3"))'' cannot be parsed correct.
HTML code '$'apply_filters("banhammer_fx_ban", plugins_url("/banhammer/fx/banhammer-ban.ogg"))'' cannot be parsed correct.
HTML code '$'apply_filters("banhammer_fx_warn", plugins_url("/banhammer/fx/banhammer-warn.mp3"))'' cannot be parsed correct.
HTML code '$'apply_filters("banhammer_fx_warn", plugins_url("/banhammer/fx/banhammer-warn.ogg"))'' cannot be parsed correct.
HTML code '$'apply_filters("banhammer_fx_restore", plugins_url("/banhammer/fx/banhammer-restore.mp3"))'' cannot be parsed correct.
HTML code '$'apply_filters("banhammer_fx_restore", plugins_url("/banhammer/fx/banhammer-restore.ogg"))'' cannot be parsed correct.
HTML code '$'apply_filters("banhammer_fx_delete", plugins_url("/banhammer/fx/banhammer-delete.mp3"))'' cannot be parsed correct.
HTML code '$'apply_filters("banhammer_fx_delete", plugins_url("/banhammer/fx/banhammer-delete.ogg"))'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:08.839588.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.043823.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 50 do_action/apply_filters calls and 25 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:01.802831.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbplusDetector
### Start running FrontBaseDetector
### Finish running FileProDetector
### Start running HashDetector
### Finish running DbaseDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running FirebirdInterBaseDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running ArrayElementDetector
### Start running OpenSSLDetector
### Finish running MongoDbDetector
### Start running ParadoxDetector
### Finish running Oci8Detector
### Start running PasswordHashingDetector
### Finish running ParadoxDetector
### Start running PhpCurlDetector
### Finish running HashDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PasswordHashingDetector
### Start running PHPRetrievalDetector
### Finish running OpenSSLDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPStorageDetector
### Start running PhpVarDetector
### Finish running PhpVarDetector
### Start running PostgreSQLDetector
### Finish running PHPRetrievalDetector
### Start running PropertyDetector
### Finish running PostgreSQLDetector
### Start running Sqlite3Detector
### Finish running Sqlite3Detector
### Start running SqliteDetector
### Finish running PropertyDetector
### Start running SqlServerDetector
### Finish running SqliteDetector
### Start running SybaseDetector
### Finish running SybaseDetector
### Start running TokyoTyrantDetector
### Finish running SqlServerDetector
### Start running UserInputDetector
### Finish running TokyoTyrantDetector
### Start running VariableDetector
### Finish running PHPIncludedDetector
### Start running WordpressHashingFnDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRemoteDetector
### Finish running WordPressRemoteDetector
### Start running WordPressRetrievalDetector
### Finish running UserInputDetector
### Start running WordPressStorageDetector
### Finish running PhpCurlDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running VariableDetector
### Start running GenericEncryptionDetector
### Finish running maxdbDetector
### Start running DeletionDetector
### Finish running MySQLiDetector
### Start running UninstallDetector
### Finish running GenericDatabaseUsageDetector
### Finish running GenericEncryptionDetector
### Finish running WordPressStorageDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running WordPressRetrievalDetector
### Finished running detectors
inc/banhammer-functions.php:369
  - SHA1 called with parameters [mt_rand, uniqid]. Ignore if [mt_rand, uniqid] does not contain personal information.
lib/WPSimpleNonce.php:45
  - MD5 called with parameters [name, true, nonce, microtime, wp_salt]. Ignore if [name, true, nonce, microtime, wp_salt] does not contain personal information.
lib/WPSimpleNonce.php:123
  - MD5 called with parameters [get_random_bytes, hasher, false]. Ignore if [get_random_bytes, hasher, false] does not contain personal information. 

inc/banhammer-functions.php:227
  - RETRIEVAL call to file_get_contents().
  - Data types: file
inc/banhammer-functions.php:233
  - RETRIEVAL call to file_get_contents($lookup, 0, $ctx).
  - Data types: file 

inc/armory-ajax.php:398
  - variable '$country' of personal types {'country'} is found.
  - Data types: country
inc/armory-ajax.php:595
  - variable '$country' of personal types {'country'} is found.
  - Data types: country
inc/armory-ajax.php:595
  - variable '$country' of personal types {'country'} is found.
  - Data types: country
inc/armory-ajax.php:606
  - variable '$country' of personal types {'country'} is found.
  - Data types: country
inc/banhammer-functions.php:17
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/banhammer-functions.php:19
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
inc/banhammer-functions.php:266
  - variable '$country' of personal types {'country'} is found.
  - Data types: country
inc/banhammer-functions.php:271
  - variable '$country' of personal types {'country'} is found.
  - Data types: country
inc/banhammer-functions.php:331
  - variable '$country' of personal types {'country'} is found.
  - Data types: country
inc/banhammer-functions.php:350
  - variable '$country' of personal types {'country'} is found.
  - Data types: country 

banhammer.php:226
  - RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).
inc/armory-ajax.php:135
  - RETRIEVAL call to get_option("banhammer_armory", $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/armory-ajax.php:167
  - RETRIEVAL call to get_option("banhammer_tower", $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/armory-ajax.php:473
  - RETRIEVAL call to get_user_by("login", $login) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user_meta, user
inc/banhammer-core.php:47
  - RETRIEVAL call to get_option("banhammer_tower", $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/banhammer-core.php:124
  - RETRIEVAL call to get_option("banhammer_settings", $default_options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/banhammer-core.php:126
  - RETRIEVAL call to get_option("banhammer_armory", $default_armory) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/banhammer-core.php:146
  - RETRIEVAL call to get_option("banhammer_settings", $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/banhammer-cron.php:63
  - RETRIEVAL call to get_option("banhammer_settings", $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/banhammer-functions.php:15
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
inc/banhammer-functions.php:384
  - RETRIEVAL call to get_option("banhammer_settings", $BanhammerWP->options()) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/banhammer-functions.php:385
  - RETRIEVAL call to get_option("banhammer_tower", $BanhammerWP->tower()) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/resources-enqueue.php:71
  - RETRIEVAL call to get_option("banhammer_armory", $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/resources-enqueue.php:117
  - RETRIEVAL call to get_option("banhammer_armory", $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/settings-register.php:176
  - RETRIEVAL call to get_option("banhammer_settings", $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/settings-register.php:195
  - RETRIEVAL call to get_option("banhammer_settings", $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/settings-register.php:216
  - RETRIEVAL call to get_option("banhammer_settings", $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/settings-register.php:234
  - RETRIEVAL call to get_option("banhammer_settings", $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/tower-ajax.php:82
  - RETRIEVAL call to get_user_by("login", $target) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user_meta, user
inc/tower-ajax.php:153
  - RETRIEVAL call to get_option("banhammer_tower", $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
inc/tower-ajax.php:278
  - RETRIEVAL call to get_option("banhammer_tower", $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/WPSimpleNonce.php:82
  - RETRIEVAL call to get_option(self::"option_root" . "_" . $name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/WPSimpleNonce.php:83
  - RETRIEVAL call to get_option(self::"option_root" . "_expires_" . $name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option 

inc/armory-ajax.php:143
  - STORAGE call to update_option("banhammer_armory", $armory) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/armory-ajax.php:260
  - STORAGE call to update_option("banhammer_tower", $tower) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/banhammer-core.php:21
  - STORAGE call to update_option("banhammer_tower", $tower) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/banhammer-functions.php:402
  - STORAGE call to update_option("banhammer_tower", $tower) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/settings-reset.php:59
  - STORAGE call to update_option("banhammer_armory", $armory) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/settings-reset.php:61
  - STORAGE call to update_option("banhammer_settings", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/tower-ajax.php:262
  - STORAGE call to update_option("banhammer_tower", $tower) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
inc/tower-ajax.php:270
  - STORAGE call to update_option("banhammer_tower", $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/WPSimpleNonce.php:76
  - STORAGE call to add_option(self::"option_root" . "_" . $name, $nonce) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/WPSimpleNonce.php:77
  - STORAGE call to add_option(self::"option_root" . "_expires_" . $name, time() + 86400) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/WPSimpleNonce.php:94
  - STORAGE call to delete_option(self::"option_root" . "_" . $name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
lib/WPSimpleNonce.php:95
  - STORAGE call to delete_option(self::"option_root" . "_expires_" . $name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:5
  - STORAGE call to delete_option("banhammer_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:6
  - STORAGE call to delete_option("banhammer_armory") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:7
  - STORAGE call to delete_option("banhammer_tower") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

inc/armory-ajax.php:274
  - Data from table $table deleted: "$wpdb->delete($table, ["id" => $id], ["%d"])"
lib/WPSimpleNonce.php:94
  - DELETION call to delete_option(self::"option_root" . "_" . $name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
lib/WPSimpleNonce.php:95
  - DELETION call to delete_option(self::"option_root" . "_expires_" . $name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:5
  - DELETION call to delete_option("banhammer_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:6
  - DELETION call to delete_option("banhammer_armory") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:7
  - DELETION call to delete_option("banhammer_tower") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

uninstall.php:5
  - Uninstall deletion call: DELETION call to delete_option("banhammer_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:6
  - Uninstall deletion call: DELETION call to delete_option("banhammer_armory") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:7
  - Uninstall deletion call: DELETION call to delete_option("banhammer_tower") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

By data type:
country
	VariableDetector.(unknown) - {'country'}
	VariableDetector.(unknown) - {'country'}
	VariableDetector.(unknown) - {'country'}
	VariableDetector.(unknown) - {'country'}
	VariableDetector.(unknown) - {'country'}
	VariableDetector.(unknown) - {'country'}
	VariableDetector.(unknown) - {'country'}
	VariableDetector.(unknown) - {'country'}
file
	PHPRetrievalDetector.file_get_contents($lookup, 0, $ctx) - {'file'}
	PHPRetrievalDetector.file_get_contents() - {'file'}
none
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	WordPressRetrievalDetector.dbDelta($sql) - set()
	DeletionDetector.$wpdb->delete($table, ["id" => $id], ["%d"]) - set()
	PHPIncludedDetector.(unknown) - set()
option
	WordPressStorageDetector.update_option("banhammer_tower", $tower) - {'option'}
	WordPressRetrievalDetector.get_option("banhammer_settings", $default) - {'option'}
	WordPressRetrievalDetector.get_option("banhammer_tower", $default) - {'option'}
	WordPressRetrievalDetector.get_option("banhammer_settings", $default) - {'option'}
	WordPressStorageDetector.delete_option("banhammer_settings") - {'option'}
	WordPressRetrievalDetector.get_option("banhammer_armory", $default) - {'option'}
	WordPressRetrievalDetector.get_option("banhammer_tower", $default) - {'option'}
	WordPressRetrievalDetector.get_option("banhammer_armory", $default_armory) - {'option'}
	WordPressRetrievalDetector.get_option("banhammer_tower", $default) - {'option'}
	WordPressRetrievalDetector.get_option("banhammer_armory", $default) - {'option'}
	WordPressStorageDetector.delete_option(self::"option_root" . "_" . $name) - {'option'}
	WordPressStorageDetector.update_option("banhammer_armory", $armory) - {'option'}
	WordPressRetrievalDetector.get_option("banhammer_settings", $default) - {'option'}
	DeletionDetector.delete_option("banhammer_tower") - {'option'}
	WordPressRetrievalDetector.get_option(self::"option_root" . "_expires_" . $name) - {'option'}
	WordPressRetrievalDetector.get_option("banhammer_settings", $default) - {'option'}
	DeletionDetector.delete_option("banhammer_armory") - {'option'}
	DeletionDetector.delete_option("banhammer_settings") - {'option'}
	WordPressRetrievalDetector.get_option(self::"option_root" . "_" . $name) - {'option'}
	WordPressStorageDetector.update_option("banhammer_armory", $armory) - {'option'}
	WordPressRetrievalDetector.get_option("banhammer_settings", $default) - {'option'}
	WordPressStorageDetector.update_option("banhammer_tower", $tower) - {'option'}
	WordPressRetrievalDetector.get_option("banhammer_settings", $BanhammerWP->options()) - {'option'}
	WordPressStorageDetector.update_option("banhammer_tower", $default) - {'option'}
	UninstallDetector.delete_option("banhammer_armory") - {'option'}
	WordPressRetrievalDetector.get_option("banhammer_tower", $default) - {'option'}
	WordPressRetrievalDetector.get_option("banhammer_settings", $default) - {'option'}
	WordPressStorageDetector.update_option("banhammer_tower", $tower) - {'option'}
	WordPressStorageDetector.delete_option("banhammer_armory") - {'option'}
	DeletionDetector.delete_option(self::"option_root" . "_" . $name) - {'option'}
	WordPressStorageDetector.update_option("banhammer_settings", $options) - {'option'}
	WordPressStorageDetector.add_option(self::"option_root" . "_" . $name, $nonce) - {'option'}
	WordPressStorageDetector.add_option(self::"option_root" . "_expires_" . $name, time() + 86400) - {'option'}
	WordPressStorageDetector.update_option("banhammer_tower", $tower) - {'option'}
	WordPressRetrievalDetector.get_option("banhammer_tower", $BanhammerWP->tower()) - {'option'}
	WordPressRetrievalDetector.get_option("banhammer_armory", $default) - {'option'}
	WordPressStorageDetector.delete_option(self::"option_root" . "_expires_" . $name) - {'option'}
	WordPressStorageDetector.delete_option("banhammer_tower") - {'option'}
	UninstallDetector.delete_option("banhammer_settings") - {'option'}
	UninstallDetector.delete_option("banhammer_tower") - {'option'}
	WordPressRetrievalDetector.get_option("banhammer_settings", $default_options) - {'option'}
	DeletionDetector.delete_option(self::"option_root" . "_expires_" . $name) - {'option'}
user
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_user_by("login", $target) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_user_by("login", $login) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
user_meta
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_user_by("login", $target) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_user_by("login", $login) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:16.351461.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 285 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.287898.

!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 8415
285 STORE_REACHES edges created
285 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 73 nodes as PERSONAL
In total, tainted 73 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 3 nodes as ENCRYPTED
In total, tainted 3 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:02.867914.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:01:37.646082!
Data from table $table deleted: "$wpdb->delete($table, ["id" => $id], ["%d"])",None,None
DELETION call to delete_option(self::"option_root" . "_" . $name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option(self::"option_root" . "_expires_" . $name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("banhammer_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("banhammer_armory") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("banhammer_tower") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
SHA1 called with parameters [mt_rand, uniqid]. Ignore if [mt_rand, uniqid] does not contain personal information.,sha1,None
MD5 called with parameters [get_random_bytes, hasher, false]. Ignore if [get_random_bytes, hasher, false] does not contain personal information.,md5,None
MD5 called with parameters [name, true, nonce, microtime, wp_salt]. Ignore if [name, true, nonce, microtime, wp_salt] does not contain personal information.,md5,None
RETRIEVAL call to file_get_contents().,None,None
RETRIEVAL call to file_get_contents($lookup, 0, $ctx).,None,None
Uninstall deletion call: DELETION call to delete_option("banhammer_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("banhammer_armory") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("banhammer_tower") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
variable '$country' of personal types {'country'} is found.,,None
variable '$country' of personal types {'country'} is found.,,None
variable '$country' of personal types {'country'} is found.,,None
variable '$country' of personal types {'country'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$country' of personal types {'country'} is found.,,None
variable '$country' of personal types {'country'} is found.,,None
variable '$country' of personal types {'country'} is found.,,None
variable '$country' of personal types {'country'} is found.,,None
RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to get_option("banhammer_armory", $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("banhammer_tower", $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_user_by("login", $login) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_option("banhammer_settings", $default_options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("banhammer_armory", $default_armory) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("banhammer_settings", $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("banhammer_tower", $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("banhammer_settings", $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_option("banhammer_settings", $BanhammerWP->options()) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("banhammer_tower", $BanhammerWP->tower()) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("banhammer_armory", $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("banhammer_armory", $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("banhammer_settings", $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("banhammer_settings", $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("banhammer_settings", $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("banhammer_settings", $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("banhammer_tower", $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("banhammer_tower", $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_user_by("login", $target) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_option(self::"option_root" . "_" . $name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"option_root" . "_expires_" . $name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
STORAGE call to update_option("banhammer_armory", $armory) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("banhammer_tower", $tower) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("banhammer_tower", $tower) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("banhammer_tower", $tower) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("banhammer_armory", $armory) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("banhammer_settings", $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("banhammer_tower", $tower) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("banhammer_tower", $default) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option(self::"option_root" . "_" . $name, $nonce) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option(self::"option_root" . "_expires_" . $name, time() + 86400) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option(self::"option_root" . "_" . $name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option(self::"option_root" . "_expires_" . $name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("banhammer_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("banhammer_armory") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("banhammer_tower") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] Storage check is NONE 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['encryption', 'third_party'] 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? True 

No findings
