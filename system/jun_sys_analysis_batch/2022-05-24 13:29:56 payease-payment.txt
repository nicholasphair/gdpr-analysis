Timeout in resolving values
Timeout in running neo4j query
Running Main.py on payease-payment

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.400245.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.032346.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 40 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.400374.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 0 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.435672.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 1218 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:01.194671.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 0 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.704783.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.108742.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 618 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:09.126853.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 8920
Added 7044 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 8920
Added 0 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.743332.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/payease-payment/bwx_functions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/payease-payment/bwx_install.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/payease-payment/bwx_payment.php' cannot be parsed correct.
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/payease-payment/index.html
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/payease-payment/index.html' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/payease-payment/trunk/bwx_functions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/payease-payment/trunk/bwx_install.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/payease-payment/trunk/bwx_payment.php' cannot be parsed correct.
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/payease-payment/trunk/index.html
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/payease-payment/trunk/index.html' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.905445.

4 Nodes Created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
8920 PHP_REACHES edges created
1 DIRECTORY_OF edges created
1 FILE_OF edges created
1 DIRECTORY_OF edges created
1 FILE_OF edges created
8924 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 2920 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.170581.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 14 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:03.932036.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 140 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:03.066455.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 182 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.176340.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.679511.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:01.132273.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.036904.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.035651.

14 CALLS edges created
322 PHP_REACHES edges created
336 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 158 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.153648.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
20 SQL operations to process.
CREATE TABLE $table_name (
                `id` bigint(20) NOT NULL auto_increment,
                `blog_id` bigint(20) NOT NULL default '1',
                `post_id` bigint(20) NOT NULL default '1',
                `product_price` int(8) NOT NULL default '0',
                `product_qty` int(8) NOT NULL default '0',
                `product_options` varchar(64) NOT NULL default '',
                `delivery_method` varchar(32) NOT NULL default '',
                `delivery_cost` int(8) NOT NULL default '0',
                `total` int(8) NOT NULL default '0',
                `order_date` TIMESTAMP NOT NULL DEFAULT now(),
                `order_status` varchar(16) NOT NULL default '',
                `shipment_name` varchar(24) NOT NULL default '',
                `shipment_address` varchar(64) NOT NULL default '',
                `shipment_city` varchar(24) NOT NULL default '',
                `shipment_country` varchar(24) NOT NULL default '',
                `shipment_postcode` varchar(12) NOT NULL default '',
                `shipment_tel` varchar(20) NOT NULL default '',
                `buyer_name` varchar(24) NOT NULL default '',
                `buyer_tel` varchar(20) NOT NULL default '',
                `buyer_email` varchar(48) NOT NULL default '',
                `v_pstatus` tinyint(4) NOT NULL default '0',
                `v_pstring` varchar(32) NOT NULL default '',
                `v_pmode` varchar(32) NOT NULL default '',
                `v_moneytype` tinyint(4) NOT NULL default '0',
                `client_ip` varchar(15) NOT NULL default '0.0.0.0',
                `payment_method` varchar(32) NOT NULL default '',
                PRIMARY KEY (`id`),
                KEY `product_id` (`blog_id`,`post_id` )
            );
SQL command (CREATE TABLE $table_name ( `id` bigint(20) NOT NULL auto_increment, `blog_id` bigint(20) NOT NULL default '1', `post_id` bigint(20) NOT NULL default '1', `product_price` int(8) NOT NULL default '0', `product_qty` int(8) NOT NULL default '0', `product_options` varchar(64) NOT NULL default '', `delivery_method` varchar(32) NOT NULL default '', `delivery_cost` int(8) NOT NULL default '0', `total` int(8) NOT NULL default '0', `order_date` TIMESTAMP NOT NULL DEFAULT now(), `order_status` varchar(16) NOT NULL default '', `shipment_name` varchar(24) NOT NULL default '', `shipment_address` varchar(64) NOT NULL default '', `shipment_city` varchar(24) NOT NULL default '', `shipment_country` varchar(24) NOT NULL default '', `shipment_postcode` varchar(12) NOT NULL default '', `shipment_tel` varchar(20) NOT NULL default '', `buyer_name` varchar(24) NOT NULL default '', `buyer_tel` varchar(20) NOT NULL default '', `buyer_email` varchar(48) NOT NULL default '', `v_pstatus` tinyint(4) NOT NULL default '0', `v_pstring` varchar(32) NOT NULL default '', `v_pmode` varchar(32) NOT NULL default '', `v_moneytype` tinyint(4) NOT NULL default '0', `client_ip` varchar(15) NOT NULL default '0.0.0.0', `payment_method` varchar(32) NOT NULL default '', PRIMARY KEY (`id`), KEY `product_id` (`blog_id`,`post_id` ) );) cannot be parsed correct.
CREATE TABLE $bwx_table_name (
                `id` bigint(20) NOT NULL auto_increment,
                `blog_id` bigint(20) NOT NULL default '1',
                `post_id` bigint(20) NOT NULL default '1',
                `product_price` int(8) NOT NULL default '0',
                `product_qty` int(8) NOT NULL default '0',
                `product_options` varchar(64) NOT NULL default '',
                `delivery_method` varchar(32) NOT NULL default '',
                `delivery_cost` int(8) NOT NULL default '0',
                `total` int(8) NOT NULL default '0',
                `order_date` TIMESTAMP NOT NULL DEFAULT NOW(),
                `order_status` varchar(16) NOT NULL default '',
                `shipment_name` varchar(24) NOT NULL default '',
                `shipment_address` varchar(64) NOT NULL default '',
                `shipment_city` varchar(24) NOT NULL default '',
                `shipment_country` varchar(24) NOT NULL default '',
                `shipment_postcode` varchar(12) NOT NULL default '',
                `shipment_tel` varchar(20) NOT NULL default '',
                `buyer_name` varchar(24) NOT NULL default '',
                `buyer_tel` varchar(20) NOT NULL default '',
                `buyer_email` varchar(48) NOT NULL default '',
                `v_pstatus` tinyint(4) NOT NULL default '0',
                `v_pstring` varchar(32) NOT NULL default '',
                `v_pmode` varchar(32) NOT NULL default '',
                `v_moneytype` tinyint(4) NOT NULL default '0',
                `client_ip` varchar(15) NOT NULL default '0.0.0.0',
                `payment_method` varchar(32) NOT NULL default '',
                PRIMARY KEY (`id`),
                KEY `product_id` (`blog_id`,`post_id` )
            );
SQL command (CREATE TABLE $bwx_table_name ( `id` bigint(20) NOT NULL auto_increment, `blog_id` bigint(20) NOT NULL default '1', `post_id` bigint(20) NOT NULL default '1', `product_price` int(8) NOT NULL default '0', `product_qty` int(8) NOT NULL default '0', `product_options` varchar(64) NOT NULL default '', `delivery_method` varchar(32) NOT NULL default '', `delivery_cost` int(8) NOT NULL default '0', `total` int(8) NOT NULL default '0', `order_date` TIMESTAMP NOT NULL DEFAULT NOW(), `order_status` varchar(16) NOT NULL default '', `shipment_name` varchar(24) NOT NULL default '', `shipment_address` varchar(64) NOT NULL default '', `shipment_city` varchar(24) NOT NULL default '', `shipment_country` varchar(24) NOT NULL default '', `shipment_postcode` varchar(12) NOT NULL default '', `shipment_tel` varchar(20) NOT NULL default '', `buyer_name` varchar(24) NOT NULL default '', `buyer_tel` varchar(20) NOT NULL default '', `buyer_email` varchar(48) NOT NULL default '', `v_pstatus` tinyint(4) NOT NULL default '0', `v_pstring` varchar(32) NOT NULL default '', `v_pmode` varchar(32) NOT NULL default '', `v_moneytype` tinyint(4) NOT NULL default '0', `client_ip` varchar(15) NOT NULL default '0.0.0.0', `payment_method` varchar(32) NOT NULL default '', PRIMARY KEY (`id`), KEY `product_id` (`blog_id`,`post_id` ) );) cannot be parsed correct.
CREATE TABLE $table_name (
                `id` bigint(20) NOT NULL auto_increment,
                `blog_id` bigint(20) NOT NULL default '1',
                `post_id` bigint(20) NOT NULL default '1',
                `product_price` int(8) NOT NULL default '0',
                `product_qty` int(8) NOT NULL default '0',
                `product_options` varchar(64) NOT NULL default '',
                `delivery_method` varchar(32) NOT NULL default '',
                `delivery_cost` int(8) NOT NULL default '0',
                `total` int(8) NOT NULL default '0',
                `order_date` TIMESTAMP NOT NULL DEFAULT now(),
                `order_status` varchar(16) NOT NULL default '',
                `shipment_name` varchar(24) NOT NULL default '',
                `shipment_address` varchar(64) NOT NULL default '',
                `shipment_city` varchar(24) NOT NULL default '',
                `shipment_country` varchar(24) NOT NULL default '',
                `shipment_postcode` varchar(12) NOT NULL default '',
                `shipment_tel` varchar(20) NOT NULL default '',
                `buyer_name` varchar(24) NOT NULL default '',
                `buyer_tel` varchar(20) NOT NULL default '',
                `buyer_email` varchar(48) NOT NULL default '',
                `v_pstatus` tinyint(4) NOT NULL default '0',
                `v_pstring` varchar(32) NOT NULL default '',
                `v_pmode` varchar(32) NOT NULL default '',
                `v_moneytype` tinyint(4) NOT NULL default '0',
                `client_ip` varchar(15) NOT NULL default '0.0.0.0',
                `payment_method` varchar(32) NOT NULL default '',
                PRIMARY KEY (`id`),
                KEY `product_id` (`blog_id`,`post_id` )
            );
SQL command (CREATE TABLE $table_name ( `id` bigint(20) NOT NULL auto_increment, `blog_id` bigint(20) NOT NULL default '1', `post_id` bigint(20) NOT NULL default '1', `product_price` int(8) NOT NULL default '0', `product_qty` int(8) NOT NULL default '0', `product_options` varchar(64) NOT NULL default '', `delivery_method` varchar(32) NOT NULL default '', `delivery_cost` int(8) NOT NULL default '0', `total` int(8) NOT NULL default '0', `order_date` TIMESTAMP NOT NULL DEFAULT now(), `order_status` varchar(16) NOT NULL default '', `shipment_name` varchar(24) NOT NULL default '', `shipment_address` varchar(64) NOT NULL default '', `shipment_city` varchar(24) NOT NULL default '', `shipment_country` varchar(24) NOT NULL default '', `shipment_postcode` varchar(12) NOT NULL default '', `shipment_tel` varchar(20) NOT NULL default '', `buyer_name` varchar(24) NOT NULL default '', `buyer_tel` varchar(20) NOT NULL default '', `buyer_email` varchar(48) NOT NULL default '', `v_pstatus` tinyint(4) NOT NULL default '0', `v_pstring` varchar(32) NOT NULL default '', `v_pmode` varchar(32) NOT NULL default '', `v_moneytype` tinyint(4) NOT NULL default '0', `client_ip` varchar(15) NOT NULL default '0.0.0.0', `payment_method` varchar(32) NOT NULL default '', PRIMARY KEY (`id`), KEY `product_id` (`blog_id`,`post_id` ) );) cannot be parsed correct.
CREATE TABLE $bwx_table_name (
                `id` bigint(20) NOT NULL auto_increment,
                `blog_id` bigint(20) NOT NULL default '1',
                `post_id` bigint(20) NOT NULL default '1',
                `product_price` int(8) NOT NULL default '0',
                `product_qty` int(8) NOT NULL default '0',
                `product_options` varchar(64) NOT NULL default '',
                `delivery_method` varchar(32) NOT NULL default '',
                `delivery_cost` int(8) NOT NULL default '0',
                `total` int(8) NOT NULL default '0',
                `order_date` TIMESTAMP NOT NULL DEFAULT NOW(),
                `order_status` varchar(16) NOT NULL default '',
                `shipment_name` varchar(24) NOT NULL default '',
                `shipment_address` varchar(64) NOT NULL default '',
                `shipment_city` varchar(24) NOT NULL default '',
                `shipment_country` varchar(24) NOT NULL default '',
                `shipment_postcode` varchar(12) NOT NULL default '',
                `shipment_tel` varchar(20) NOT NULL default '',
                `buyer_name` varchar(24) NOT NULL default '',
                `buyer_tel` varchar(20) NOT NULL default '',
                `buyer_email` varchar(48) NOT NULL default '',
                `v_pstatus` tinyint(4) NOT NULL default '0',
                `v_pstring` varchar(32) NOT NULL default '',
                `v_pmode` varchar(32) NOT NULL default '',
                `v_moneytype` tinyint(4) NOT NULL default '0',
                `client_ip` varchar(15) NOT NULL default '0.0.0.0',
                `payment_method` varchar(32) NOT NULL default '',
                PRIMARY KEY (`id`),
                KEY `product_id` (`blog_id`,`post_id` )
            );
SQL command (CREATE TABLE $bwx_table_name ( `id` bigint(20) NOT NULL auto_increment, `blog_id` bigint(20) NOT NULL default '1', `post_id` bigint(20) NOT NULL default '1', `product_price` int(8) NOT NULL default '0', `product_qty` int(8) NOT NULL default '0', `product_options` varchar(64) NOT NULL default '', `delivery_method` varchar(32) NOT NULL default '', `delivery_cost` int(8) NOT NULL default '0', `total` int(8) NOT NULL default '0', `order_date` TIMESTAMP NOT NULL DEFAULT NOW(), `order_status` varchar(16) NOT NULL default '', `shipment_name` varchar(24) NOT NULL default '', `shipment_address` varchar(64) NOT NULL default '', `shipment_city` varchar(24) NOT NULL default '', `shipment_country` varchar(24) NOT NULL default '', `shipment_postcode` varchar(12) NOT NULL default '', `shipment_tel` varchar(20) NOT NULL default '', `buyer_name` varchar(24) NOT NULL default '', `buyer_tel` varchar(20) NOT NULL default '', `buyer_email` varchar(48) NOT NULL default '', `v_pstatus` tinyint(4) NOT NULL default '0', `v_pstring` varchar(32) NOT NULL default '', `v_pmode` varchar(32) NOT NULL default '', `v_moneytype` tinyint(4) NOT NULL default '0', `client_ip` varchar(15) NOT NULL default '0.0.0.0', `payment_method` varchar(32) NOT NULL default '', PRIMARY KEY (`id`), KEY `product_id` (`blog_id`,`post_id` ) );) cannot be parsed correct.
SELECT DISTINCT YEAR(order_date) AS yyear, MONTH(order_date) AS mmonth FROM $bwx_table_name   ORDER BY $v DESC
SQL command (SELECT DISTINCT YEAR(order_date) AS yyear, MONTH(order_date) AS mmonth FROM $bwx_table_name ORDER BY $v DESC) cannot be parsed correct.
SELECT `implode("`,`", $bwx_brief)` FROM $bwx_table_name $this->where_clause() ORDER BY order_date DESC  limit $per_page offset $offset
SQL command (SELECT `implode("`,`", $bwx_brief)` FROM $bwx_table_name $this->where_clause() ORDER BY order_date DESC limit $per_page offset $offset) cannot be parsed correct.
SELECT DISTINCT YEAR(order_date) AS yyear, MONTH(order_date) AS mmonth FROM $bwx_table_name   ORDER BY $v DESC
SQL command (SELECT DISTINCT YEAR(order_date) AS yyear, MONTH(order_date) AS mmonth FROM $bwx_table_name ORDER BY $v DESC) cannot be parsed correct.
SELECT `implode("`,`", $bwx_brief)` FROM $bwx_table_name $this->where_clause() ORDER BY order_date DESC  limit $per_page offset $offset
SQL command (SELECT `implode("`,`", $bwx_brief)` FROM $bwx_table_name $this->where_clause() ORDER BY order_date DESC limit $per_page offset $offset) cannot be parsed correct.
select * from $bwx_table_name where id = $order_id
SQL command (select * from $bwx_table_name where id = $order_id) cannot be parsed correct.
substr($where, 0, -4) order by order_date desc; 
SQL command (substr($where, 0, -4) order by order_date desc; ) cannot be parsed correct.
 select total, order_status, v_moneytype from $bwx_table_name where id = explode("-", $_POST["v_oid"])_2 
SQL command ( select total, order_status, v_moneytype from $bwx_table_name where id = explode("-", $_POST["v_oid"])_2 ) cannot be parsed correct.
select * from $bwx_table_name where id = $order_id
SQL command (select * from $bwx_table_name where id = $order_id) cannot be parsed correct.
substr($where, 0, -4) order by order_date desc; 
SQL command (substr($where, 0, -4) order by order_date desc; ) cannot be parsed correct.
 select total, order_status, v_moneytype from $bwx_table_name where id = explode("-", $_POST["v_oid"])_2 
SQL command ( select total, order_status, v_moneytype from $bwx_table_name where id = explode("-", $_POST["v_oid"])_2 ) cannot be parsed correct.
delete from $bwx_table_name where id = $order_id
SQL command (delete from $bwx_table_name where id = $order_id) cannot be parsed correct.
author
SQL command (author) cannot be parsed correct.
UPDATE $bwx_table_name SET order_status = 'bwx_db_validation($order_status)' , v_pstatus = 'mb_convert_encoding($v_pstatus, "UTF-8", "GB2312")' , v_pstring = 'mb_convert_encoding($v_pstring, "UTF-8", "GB2312")' , v_pmode = 'mb_convert_encoding($v_pmode, "UTF-8", "GB2312")' WHERE id = explode("-", $_POST["v_oid"])_2 
SQL command (UPDATE $bwx_table_name SET order_status = 'bwx_db_validation($order_status)' , v_pstatus = 'mb_convert_encoding($v_pstatus, "UTF-8", "GB2312")' , v_pstring = 'mb_convert_encoding($v_pstring, "UTF-8", "GB2312")' , v_pmode = 'mb_convert_encoding($v_pmode, "UTF-8", "GB2312")' WHERE id = explode("-", $_POST["v_oid"])_2 ) cannot be parsed correct.
delete from $bwx_table_name where id = $order_id
SQL command (delete from $bwx_table_name where id = $order_id) cannot be parsed correct.
author
SQL command (author) cannot be parsed correct.
UPDATE $bwx_table_name SET order_status = 'bwx_db_validation($order_status)' , v_pstatus = 'mb_convert_encoding($v_pstatus, "UTF-8", "GB2312")' , v_pstring = 'mb_convert_encoding($v_pstring, "UTF-8", "GB2312")' , v_pmode = 'mb_convert_encoding($v_pmode, "UTF-8", "GB2312")' WHERE id = explode("-", $_POST["v_oid"])_2 
SQL command (UPDATE $bwx_table_name SET order_status = 'bwx_db_validation($order_status)' , v_pstatus = 'mb_convert_encoding($v_pstatus, "UTF-8", "GB2312")' , v_pstring = 'mb_convert_encoding($v_pstring, "UTF-8", "GB2312")' , v_pmode = 'mb_convert_encoding($v_pmode, "UTF-8", "GB2312")' WHERE id = explode("-", $_POST["v_oid"])_2 ) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [3376, 3420, 10343, 10387, 1192, 2029, 8159, 8996, 476, 2908, 4711, 7443, 9875, 11678, 426, 3297, 4856, 7393, 10264, 11823]
Added 0 SQL nodes. 0 out of 20 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:06.691899.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'order $order_iddeleted !'' cannot be parsed correct.
HTML code '$'<h2>Order Details</h2>'' cannot be parsed correct.
HTML code '$'<form method="post"><input type="submit" name="submit" value="back"></form'' cannot be parsed correct.
HTML code '$'<tr><th align=\'right\' width=\'20%\' >get_bwx_column()_$k : </th><td width=\'70%\'>bwx_blog_title($v)</td></tr>'' cannot be parsed correct.
HTML code '$'<form method="post"><input type="submit" name="submit" value="back"></form'' cannot be parsed correct.
HTML code '$'<br> Order Numbers is :count($myrows)'' cannot be parsed correct.
HTML code '$'<th>get_bwx_column()_$v</th>'' cannot be parsed correct.
HTML code '$'<th>delete</th><th>details</th></tr>'' cannot be parsed correct.
HTML code '$'
        <td width="5%"><form method="post">
        <input type="hidden" name="action" value="delete">
        <input type="hidden" name="order_id" value="$row">
        <input type="submit" name="submit" value="delete" onclick="ajax()">
        '' cannot be parsed correct.
HTML code '$'</form></td>
        <td width="5%"><form method="post">
        <input type="hidden" name="action" value="details">
        <input type="hidden" name="order_id" value="$row">
        <input type="submit" name="submit" value="details">
       '' cannot be parsed correct.
HTML code '$'<br />Product Total is : 0 get_option("v_moneytype")'' cannot be parsed correct.
HTML code '$'<br />Delivery Cost is : 0 USD'' cannot be parsed correct.
HTML code '$'<br />Total is : 0 get_option("v_moneytype")'' cannot be parsed correct.
HTML code '$'BWX_Payment_page created '' cannot be parsed correct.
HTML code '$'BWX_Userinfo_Page created '' cannot be parsed correct.
HTML code '$'<h2>BWX Configuration Setting</h2>'' cannot be parsed correct.
HTML code '$'<h3>Configure Payment Setting</h3>'' cannot be parsed correct.
HTML code '$'<tr><td>$value_0 : </td><td><input type=\'text\' name=\'$key\' value=\'bwx_get_option($blog_id, $key)\'  size=\'30\' /> </td><td>  ($value_1 )</td></tr>'' cannot be parsed correct.
HTML code '$'<tr><td></td><td><input type=\'submit\' value=\'Submit\' /></td></tr>'' cannot be parsed correct.
HTML code '$'<p>please set up payease parameters</p>'' cannot be parsed correct.
HTML code '$'<h3>Configure Delivery Options</h3>'' cannot be parsed correct.
HTML code '$'<tr><td>delivery_option : </td><td><input type=\'text\' name=\'delivery_option\' value=\'bwx_array_option($delivery_option)\'  maxlength=\'256\' size=\'64\' /> </td></tr>'' cannot be parsed correct.
HTML code '$'<tr><td></td><td><input type=\'submit\' value=\'Submit\' /></td></tr>'' cannot be parsed correct.
HTML code '$'<p>Format: Address1:cost1;Address2:cost2;... seperate with address and cost with `:`, seperate addresses with `;` </p>'' cannot be parsed correct.
HTML code '$'<p>Please set up delivery option. </p>'' cannot be parsed correct.
HTML code '$'<h3>Configure Payment Options</h3>'' cannot be parsed correct.
HTML code '$'<tr><td>payment_option : </td><td>'' cannot be parsed correct.
HTML code '$'<label><input type=\'checkbox\' id=\'0\' name=\'payment_option\' value=\'$v\' '' cannot be parsed correct.
HTML code '$' /> $v  <label>'' cannot be parsed correct.
HTML code '$'<tr><td></td><td><input type=\'submit\' value=\'Submit\' /></td></tr>'' cannot be parsed correct.
HTML code '$'<p>Please set up payment option. </p>'' cannot be parsed correct.
HTML code '$'<h2> Orders Page.$author_or_admin</h2>'' cannot be parsed correct.
HTML code '$'$BWX->select_form_filter()'' cannot be parsed correct.
HTML code '$'sprintf("<span class="displaying-num">" . __("Displaying %s&#8211;%s of %s", "bwx_payment") . "</span>%s", number_format_i18n($_GET["paged"] - 1 * $per_page + 1), number_format_i18n(min($_GET["paged"] * $per_page, $num_rows)), number_format_i18n($num_rows), $page_links)'' cannot be parsed correct.
HTML code '$'<div class="tablenav"><div class="tablenav-pages">sprintf("<span class="displaying-num">" . __("Displaying %s&#8211;%s of %s", "bwx_payment") . "</span>%s", number_format_i18n($_GET["paged"] - 1 * $per_page + 1), number_format_i18n(min($_GET["paged"] * $per_page, $num_rows)), number_format_i18n($num_rows), $page_links)'' cannot be parsed correct.
HTML code '$'$BWX->one_page_form_string()'' cannot be parsed correct.
HTML code '$'order $order_iddeleted !'' cannot be parsed correct.
HTML code '$'<h2>Order Details</h2>'' cannot be parsed correct.
HTML code '$'<form method="post"><input type="submit" name="submit" value="back"></form'' cannot be parsed correct.
HTML code '$'<tr><th align=\'right\' width=\'20%\' >get_bwx_column()_$k : </th><td width=\'70%\'>bwx_post_title($blog_id, $v)</td></tr>'' cannot be parsed correct.
HTML code '$'<form method="post"><input type="submit" name="submit" value="back"></form'' cannot be parsed correct.
HTML code '$'$before_widget'' cannot be parsed correct.
HTML code '$'$before_titleapply_filters("widget_title", $instance["title"])$after_title'' cannot be parsed correct.
HTML code '$'$after_widget'' cannot be parsed correct.
HTML code '$'$this->get_field_id("title")'' cannot be parsed correct.
HTML code '$'$this->get_field_id("title")'' cannot be parsed correct.
HTML code '$'$this->get_field_name("title")'' cannot be parsed correct.
HTML code '$'$instance_title'' cannot be parsed correct.
HTML code '$'<br> Order Numbers is :count($myrows)'' cannot be parsed correct.
HTML code '$'<th>get_bwx_column()_$v</th>'' cannot be parsed correct.
HTML code '$'<th>delete</th><th>details</th></tr>'' cannot be parsed correct.
HTML code '$'
        <td width="5%"><form method="post">
        <input type="hidden" name="action" value="delete">
        <input type="hidden" name="order_id" value="$row">
        <input type="submit" name="submit" value="delete" onclick="ajax()">
        '' cannot be parsed correct.
HTML code '$'</form></td>
        <td width="5%"><form method="post">
        <input type="hidden" name="action" value="details">
        <input type="hidden" name="order_id" value="$row">
        <input type="submit" name="submit" value="details">
       '' cannot be parsed correct.
HTML code '$'<br />Product Total is : 0 CNY'' cannot be parsed correct.
HTML code '$'<br />Delivery Cost is : 0 CNY'' cannot be parsed correct.
HTML code '$'<br />Total is : 0 CNY'' cannot be parsed correct.
HTML code '$'<tr><td>$value_0 : </td><td><input type=\'text\' name=\'$key\' value=\'bwx_get_option($blog_id, $key)\'  size=\'30\' /> </td><td>  ($value_1 )</td></tr>'' cannot be parsed correct.
HTML code '$'<tr><td></td><td><input type=\'submit\' value=\'Submit\' /></td></tr>'' cannot be parsed correct.
HTML code '$'<p>please set up payease parameters</p>'' cannot be parsed correct.
HTML code '$'<h3>Configure Delivery Options</h3>'' cannot be parsed correct.
HTML code '$'<tr><td>delivery_option : </td><td><input type=\'text\' name=\'delivery_option\' value=\'bwx_array_option($delivery_option)\'  maxlength=\'256\' size=\'64\' /> </td></tr>'' cannot be parsed correct.
HTML code '$'<tr><td></td><td><input type=\'submit\' value=\'Submit\' /></td></tr>'' cannot be parsed correct.
HTML code '$'<p>Format: Address1:cost1;Address2:cost2;... seperate with address and cost with `:`, seperate addresses with `;` </p>'' cannot be parsed correct.
HTML code '$'<p>Please set up delivery option. </p>'' cannot be parsed correct.
HTML code '$'<h3>Configure Payment Options</h3>'' cannot be parsed correct.
HTML code '$'<tr><td>payment_option : </td><td>'' cannot be parsed correct.
HTML code '$'<label><input type=\'checkbox\' id=\'0\' name=\'payment_option\' value=\'$v\' '' cannot be parsed correct.
HTML code '$' /> $v  <label>'' cannot be parsed correct.
HTML code '$'<tr><td></td><td><input type=\'submit\' value=\'Submit\' /></td></tr>'' cannot be parsed correct.
HTML code '$'<p>Please set up payment option. </p>'' cannot be parsed correct.
HTML code '$'BWX_Payment_page created '' cannot be parsed correct.
HTML code '$'BWX_Userinfo_Page created '' cannot be parsed correct.
HTML code '$'<h2>BWX Configuration Setting</h2>'' cannot be parsed correct.
HTML code '$'<h3>Configure Payment Setting</h3>'' cannot be parsed correct.
HTML code '$'<h2> Orders Page.$author_or_admin</h2>'' cannot be parsed correct.
HTML code '$'$BWX->select_form_filter()'' cannot be parsed correct.
HTML code '$'sprintf("<span class="displaying-num">" . __("Displaying %s&#8211;%s of %s", "bwx_payment") . "</span>%s", number_format_i18n($_GET["paged"] - 1 * $per_page + 1), number_format_i18n(min($_GET["paged"] * $per_page, $num_rows)), number_format_i18n($num_rows), $page_links)'' cannot be parsed correct.
HTML code '$'<div class="tablenav"><div class="tablenav-pages">sprintf("<span class="displaying-num">" . __("Displaying %s&#8211;%s of %s", "bwx_payment") . "</span>%s", number_format_i18n($_GET["paged"] - 1 * $per_page + 1), number_format_i18n(min($_GET["paged"] * $per_page, $num_rows)), number_format_i18n($num_rows), $page_links)'' cannot be parsed correct.
HTML code '$'$BWX->one_page_form_string()'' cannot be parsed correct.
HTML code '$'$before_widget'' cannot be parsed correct.
HTML code '$'$before_titleapply_filters("widget_title", $instance["title"])$after_title'' cannot be parsed correct.
HTML code '$'$after_widget'' cannot be parsed correct.
HTML code '$'$this->get_field_id("title")'' cannot be parsed correct.
HTML code '$'$this->get_field_id("title")'' cannot be parsed correct.
HTML code '$'$this->get_field_name("title")'' cannot be parsed correct.
HTML code '$'$instance_title'' cannot be parsed correct.
HTML code '$'this is ini the session. '' cannot be parsed correct.
HTML code '$'<table width=\'100%\' >'' cannot be parsed correct.
HTML code '$'<tr><td align=\'right\' width=\'20%\'>'' cannot be parsed correct.
HTML code '$'</td><td></td></tr>'' cannot be parsed correct.
HTML code '$'<tr></tr>'' cannot be parsed correct.
HTML code '$'<tr><td align=\'right\' width=\'20%\'>'' cannot be parsed correct.
HTML code '$'</td><td></td></tr>'' cannot be parsed correct.
HTML code '$'</table>'' cannot be parsed correct.
HTML code '$'<table width="100%" ><tr>'' cannot be parsed correct.
HTML code '$'<tr>'' cannot be parsed correct.
HTML code '$'</form></td>'' cannot be parsed correct.
HTML code '$'</tr>'' cannot be parsed correct.
HTML code '$'</table>'' cannot be parsed correct.
HTML code '$'<table border=\'0\'>'' cannot be parsed correct.
HTML code '$'<form method="POST">'' cannot be parsed correct.
HTML code '$'<input type="hidden" name="action" value="config" />'' cannot be parsed correct.
HTML code '$'</form></table><br />'' cannot be parsed correct.
HTML code '$'<table border=\'0\'>'' cannot be parsed correct.
HTML code '$'<form method="POST">'' cannot be parsed correct.
HTML code '$'<input type="hidden" name="action" value="delivery_option" />'' cannot be parsed correct.
HTML code '$'</form></table><br />'' cannot be parsed correct.
HTML code '$'<table border=\'0\'>'' cannot be parsed correct.
HTML code '$'<form method="POST">'' cannot be parsed correct.
HTML code '$'<input type="hidden" name="action" value="payment_option" />'' cannot be parsed correct.
HTML code '$' checked ="yes" '' cannot be parsed correct.
HTML code '$'</td></tr>'' cannot be parsed correct.
HTML code '$'<tr><td></td><td id="payment_gateways_lists"></td></tr>'' cannot be parsed correct.
HTML code '$'</form></table><br />'' cannot be parsed correct.
HTML code '$'<div class="tablenav">'' cannot be parsed correct.
HTML code '$'<div class="alignleft">'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'<div class="tablenav-pages">'' cannot be parsed correct.
HTML code '$'</div></div>'' cannot be parsed correct.
HTML code '$'<br />'' cannot be parsed correct.
HTML code '$'</div></div>'' cannot be parsed correct.
HTML code '$'<table width=\'100%\' >'' cannot be parsed correct.
HTML code '$'<tr><td align=\'right\' width=\'20%\'>'' cannot be parsed correct.
HTML code '$'</td><td></td></tr>'' cannot be parsed correct.
HTML code '$'<tr></tr>'' cannot be parsed correct.
HTML code '$'<tr><td align=\'right\' width=\'20%\'>'' cannot be parsed correct.
HTML code '$'</td><td></td></tr>'' cannot be parsed correct.
HTML code '$'</table>'' cannot be parsed correct.
HTML code '$'this is ini the session. '' cannot be parsed correct.
HTML code '$'<table width="100%" ><tr>'' cannot be parsed correct.
HTML code '$'<tr>'' cannot be parsed correct.
HTML code '$'</form></td>'' cannot be parsed correct.
HTML code '$'</tr>'' cannot be parsed correct.
HTML code '$'</table>'' cannot be parsed correct.
HTML code '$'<table border=\'0\'>'' cannot be parsed correct.
HTML code '$'<form method="POST">'' cannot be parsed correct.
HTML code '$'<input type="hidden" name="action" value="config" />'' cannot be parsed correct.
HTML code '$'</form></table><br />'' cannot be parsed correct.
HTML code '$'<table border=\'0\'>'' cannot be parsed correct.
HTML code '$'<form method="POST">'' cannot be parsed correct.
HTML code '$'<input type="hidden" name="action" value="delivery_option" />'' cannot be parsed correct.
HTML code '$'</form></table><br />'' cannot be parsed correct.
HTML code '$'<table border=\'0\'>'' cannot be parsed correct.
HTML code '$'<form method="POST">'' cannot be parsed correct.
HTML code '$'<input type="hidden" name="action" value="payment_option" />'' cannot be parsed correct.
HTML code '$' checked ="yes" '' cannot be parsed correct.
HTML code '$'</td></tr>'' cannot be parsed correct.
HTML code '$'<tr><td></td><td id="payment_gateways_lists"></td></tr>'' cannot be parsed correct.
HTML code '$'</form></table><br />'' cannot be parsed correct.
HTML code '$'<div class="tablenav">'' cannot be parsed correct.
HTML code '$'<div class="alignleft">'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'<div class="tablenav-pages">'' cannot be parsed correct.
HTML code '$'</div></div>'' cannot be parsed correct.
HTML code '$'<br />'' cannot be parsed correct.
HTML code '$'</div></div>'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:02:34.717074.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.088432.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 2 do_action/apply_filters calls and 14 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:01.191114.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running CubridDetector
### Start running FrontBaseDetector
### Finish running FileProDetector
### Start running HashDetector
### Finish running DbplusDetector
### Start running IBMDb2Detector
### Finish running DbaseDetector
### Start running InformixDetector
### Finish running FirebirdInterBaseDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running IBMDb2Detector
### Start running MsqlDetector
### Finish running MongoDetector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running MongoDbDetector
### Start running OpenSSLDetector
### Finish running Oci8Detector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running ArrayElementDetector
### Start running PhpCurlDetector
### Finish running HashDetector
### Start running PHPDataObjectDetector
### Finish running PasswordHashingDetector
### Start running PHPIncludedDetector
### Finish running PHPDataObjectDetector
### Start running PHPRetrievalDetector
### Finish running PhpCurlDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPIncludedDetector
### Start running PhpVarDetector
### Finish running OpenSSLDetector
### Start running PostgreSQLDetector
### Finish running PhpVarDetector
### Start running PropertyDetector
### Finish running PHPStorageDetector
### Start running Sqlite3Detector
### Finish running PHPRetrievalDetector
### Start running SqliteDetector
### Finish running PostgreSQLDetector
### Start running SqlServerDetector
### Finish running SqliteDetector
### Start running SybaseDetector
### Finish running SybaseDetector
### Start running TokyoTyrantDetector
### Finish running PropertyDetector
### Start running UserInputDetector
### Finish running Sqlite3Detector
### Start running VariableDetector
### Finish running TokyoTyrantDetector
### Start running WordpressHashingFnDetector
### Finish running SqlServerDetector
### Start running WordPressRemoteDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRetrievalDetector
### Finish running WordPressRemoteDetector
### Start running WordPressStorageDetector
### Finish running maxdbDetector
### Start running WP_UserDetector
### Finish running MySQLiDetector
### Start running GenericDatabaseUsageDetector
### Finish running WP_UserDetector
### Start running GenericEncryptionDetector
### Finish running UserInputDetector
### Start running DeletionDetector
### Finish running VariableDetector
### Start running UninstallDetector
### Finish running GenericDatabaseUsageDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running WordPressStorageDetector
### Finish running GenericEncryptionDetector
### Finish running WordPressRetrievalDetector
### Finished running detectors
bwx_functions.php:444
  - Request variable '$_POST["buyer_email"]' of personal types {'email'} is found.
  - Data types: email
trunk/bwx_functions.php:444
  - Request variable '$_POST["buyer_email"]' of personal types {'email'} is found.
  - Data types: email 

bwx_functions.php:16
  - RETRIEVAL call to get_option($option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
bwx_functions.php:45
  - RETRIEVAL call to get_post_meta($p_id, $m_key, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
bwx_functions.php:55
  - RETRIEVAL call to get_userdata($user_id) alters data types {'user_meta', 'user'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user_meta, user
bwx_functions.php:364
  - RETRIEVAL call to get_option("v_moneytype") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
bwx_functions.php:456
  - RETRIEVAL call to get_post($_POST["post_id"]) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, post_meta, wp_post
bwx_functions.php:467
  - RETRIEVAL call to get_option("v_moneytype") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
bwx_functions.php:497
  - RETRIEVAL call to get_post_custom_values(__("Price", "bwx_payment"), $_POST["post_id"]). Passed arguments: 1: $post_id (int), 0: $key (string). Returns (array|null).
bwx_functions.php:545
  - RETRIEVAL call to get_option("v_mid") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
bwx_functions.php:546
  - RETRIEVAL call to get_option("v_moneytype") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
bwx_functions.php:550
  - RETRIEVAL call to get_option("bwx_payment_page") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
bwx_functions.php:553
  - RETRIEVAL call to get_option("v_secrete") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
bwx_functions.php:561
  - RETRIEVAL call to get_option("v_rcvaddr") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
bwx_functions.php:562
  - RETRIEVAL call to get_option("v_rcvtel") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
bwx_functions.php:563
  - RETRIEVAL call to get_option("v_rcvpost") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
bwx_functions.php:580
  - RETRIEVAL call to get_option("v_moneytype") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
bwx_install.php:48
  - RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).
bwx_install.php:53
  - RETRIEVAL call to get_option("bwx_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
bwx_install.php:88
  - RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).
bwx_payment.php:55
  - RETRIEVAL call to get_post($bwx_payment_page_id, ARRAY_A) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 1: $output (string), 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, post_meta, wp_post
bwx_payment.php:63
  - RETRIEVAL call to get_post($bwx_userinfo_page_id, ARRAY_A) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 1: $output (string), 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, post_meta, wp_post
bwx_payment.php:388
  - RETRIEVAL call to get_option("v_secrete") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
bwx_payment.php:425
  - RETRIEVAL call to get_post_custom($p_id). Passed arguments: 0: $post_id (int). Returns (array).
bwx_payment.php:447
  - RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
bwx_payment.php:498
  - RETRIEVAL call to get_post_custom($_POST["product_page_id"]). Passed arguments: 0: $post_id (int). Returns (array).
bwx_payment.php:500
  - RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
trunk/bwx_functions.php:16
  - RETRIEVAL call to get_option($option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
trunk/bwx_functions.php:45
  - RETRIEVAL call to get_post_meta($p_id, $m_key, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
trunk/bwx_functions.php:55
  - RETRIEVAL call to get_userdata($user_id) alters data types {'user_meta', 'user'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user_meta, user
trunk/bwx_functions.php:364
  - RETRIEVAL call to get_option("v_moneytype") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
trunk/bwx_functions.php:456
  - RETRIEVAL call to get_post($_POST["post_id"]) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, post_meta, wp_post
trunk/bwx_functions.php:467
  - RETRIEVAL call to get_option("v_moneytype") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
trunk/bwx_functions.php:497
  - RETRIEVAL call to get_post_custom_values(__("Price", "bwx_payment"), $_POST["post_id"]). Passed arguments: 1: $post_id (int), 0: $key (string). Returns (array|null).
trunk/bwx_functions.php:545
  - RETRIEVAL call to get_option("v_mid") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
trunk/bwx_functions.php:546
  - RETRIEVAL call to get_option("v_moneytype") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
trunk/bwx_functions.php:550
  - RETRIEVAL call to get_option("bwx_payment_page") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
trunk/bwx_functions.php:553
  - RETRIEVAL call to get_option("v_secrete") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
trunk/bwx_functions.php:561
  - RETRIEVAL call to get_option("v_rcvaddr") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
trunk/bwx_functions.php:562
  - RETRIEVAL call to get_option("v_rcvtel") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
trunk/bwx_functions.php:563
  - RETRIEVAL call to get_option("v_rcvpost") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
trunk/bwx_functions.php:580
  - RETRIEVAL call to get_option("v_moneytype") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
trunk/bwx_install.php:48
  - RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).
trunk/bwx_install.php:53
  - RETRIEVAL call to get_option("bwx_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
trunk/bwx_install.php:88
  - RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).
trunk/bwx_payment.php:55
  - RETRIEVAL call to get_post($bwx_payment_page_id, ARRAY_A) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 1: $output (string), 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, post_meta, wp_post
trunk/bwx_payment.php:63
  - RETRIEVAL call to get_post($bwx_userinfo_page_id, ARRAY_A) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 1: $output (string), 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, post_meta, wp_post
trunk/bwx_payment.php:388
  - RETRIEVAL call to get_option("v_secrete") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
trunk/bwx_payment.php:425
  - RETRIEVAL call to get_post_custom($p_id). Passed arguments: 0: $post_id (int). Returns (array).
trunk/bwx_payment.php:447
  - RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
trunk/bwx_payment.php:498
  - RETRIEVAL call to get_post_custom($_POST["product_page_id"]). Passed arguments: 0: $post_id (int). Returns (array).
trunk/bwx_payment.php:500
  - RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option 

bwx_functions.php:25
  - STORAGE call to update_option($option_name, $option_value) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
bwx_install.php:49
  - STORAGE call to add_option("bwx_db_version", $bwx_db_version) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
bwx_install.php:89
  - STORAGE call to update_option("bwx_db_version", $bwx_db_version) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
bwx_payment.php:337
  - STORAGE call to wp_insert_post($bwx_payment_page). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
bwx_payment.php:353
  - STORAGE call to wp_insert_post($bwx_userinfo_page). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
trunk/bwx_functions.php:25
  - STORAGE call to update_option($option_name, $option_value) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
trunk/bwx_install.php:49
  - STORAGE call to add_option("bwx_db_version", $bwx_db_version) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
trunk/bwx_install.php:89
  - STORAGE call to update_option("bwx_db_version", $bwx_db_version) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
trunk/bwx_payment.php:337
  - STORAGE call to wp_insert_post($bwx_payment_page). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
trunk/bwx_payment.php:353
  - STORAGE call to wp_insert_post($bwx_userinfo_page). Passed arguments: 0: $postarr (array). Returns (int|WP_Error). 

bwx_functions.php:554
  - CRYPTOGRAPHY call to mhash(MHASH_MD5, $v_string, $secrete).
bwx_payment.php:389
  - CRYPTOGRAPHY call to mhash(MHASH_MD5, $check, $secrete).
bwx_payment.php:432
  - CRYPTOGRAPHY call to mhash(MHASH_MD5, $p_id . $price, "secret").
bwx_payment.php:465
  - CRYPTOGRAPHY call to mhash(MHASH_MD5, $_POST["post_id"] . $_POST["product_price"], "secret").
bwx_payment.php:491
  - CRYPTOGRAPHY call to mhash(MHASH_MD5, $_POST["product_page_id"] . $_POST["price"], "secret").
bwx_payment.php:493
  - CRYPTOGRAPHY call to mhash(MHASH_MD5, $_POST["product_page_id"] . $_POST["price"], "secret").
trunk/bwx_functions.php:554
  - CRYPTOGRAPHY call to mhash(MHASH_MD5, $v_string, $secrete).
trunk/bwx_payment.php:389
  - CRYPTOGRAPHY call to mhash(MHASH_MD5, $check, $secrete).
trunk/bwx_payment.php:432
  - CRYPTOGRAPHY call to mhash(MHASH_MD5, $p_id . $price, "secret").
trunk/bwx_payment.php:465
  - CRYPTOGRAPHY call to mhash(MHASH_MD5, $_POST["post_id"] . $_POST["product_price"], "secret").
trunk/bwx_payment.php:491
  - CRYPTOGRAPHY call to mhash(MHASH_MD5, $_POST["product_page_id"] . $_POST["price"], "secret").
trunk/bwx_payment.php:493
  - CRYPTOGRAPHY call to mhash(MHASH_MD5, $_POST["product_page_id"] . $_POST["price"], "secret"). 

By data type:
email
	ArrayElementDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
none
	WordPressRetrievalDetector.get_post_custom($p_id) - set()
	WordPressRetrievalDetector.get_post_custom($p_id) - set()
	GenericEncryptionDetector.mhash(MHASH_MD5, $_POST["product_page_id"] . $_POST["price"], "secret") - set()
	GenericEncryptionDetector.mhash(MHASH_MD5, $check, $secrete) - set()
	GenericEncryptionDetector.mhash(MHASH_MD5, $v_string, $secrete) - set()
	GenericEncryptionDetector.mhash(MHASH_MD5, $_POST["post_id"] . $_POST["product_price"], "secret") - set()
	GenericEncryptionDetector.mhash(MHASH_MD5, $v_string, $secrete) - set()
	WordPressStorageDetector.wp_insert_post($bwx_userinfo_page) - set()
	WordPressRetrievalDetector.get_post_custom_values(__("Price", "bwx_payment"), $_POST["post_id"]) - set()
	WordPressRetrievalDetector.dbDelta($sql) - set()
	GenericEncryptionDetector.mhash(MHASH_MD5, $p_id . $price, "secret") - set()
	WordPressStorageDetector.wp_insert_post($bwx_payment_page) - set()
	WordPressRetrievalDetector.dbDelta($sql) - set()
	WordPressStorageDetector.wp_insert_post($bwx_userinfo_page) - set()
	GenericEncryptionDetector.mhash(MHASH_MD5, $check, $secrete) - set()
	WordPressRetrievalDetector.dbDelta($sql) - set()
	WordPressRetrievalDetector.get_post_custom($_POST["product_page_id"]) - set()
	GenericEncryptionDetector.mhash(MHASH_MD5, $_POST["product_page_id"] . $_POST["price"], "secret") - set()
	WordPressRetrievalDetector.get_post_custom_values(__("Price", "bwx_payment"), $_POST["post_id"]) - set()
	GenericEncryptionDetector.mhash(MHASH_MD5, $_POST["product_page_id"] . $_POST["price"], "secret") - set()
	WordPressStorageDetector.wp_insert_post($bwx_payment_page) - set()
	GenericEncryptionDetector.mhash(MHASH_MD5, $_POST["post_id"] . $_POST["product_price"], "secret") - set()
	GenericEncryptionDetector.mhash(MHASH_MD5, $_POST["product_page_id"] . $_POST["price"], "secret") - set()
	WordPressRetrievalDetector.get_post_custom($_POST["product_page_id"]) - set()
	WordPressRetrievalDetector.dbDelta($sql) - set()
	GenericEncryptionDetector.mhash(MHASH_MD5, $p_id . $price, "secret") - set()
option
	WordPressStorageDetector.add_option("bwx_db_version", $bwx_db_version) - {'option'}
	WordPressRetrievalDetector.get_option("v_moneytype") - {'option'}
	WordPressStorageDetector.update_option($option_name, $option_value) - {'option'}
	WordPressStorageDetector.update_option("bwx_db_version", $bwx_db_version) - {'option'}
	WordPressRetrievalDetector.get_option("v_secrete") - {'option'}
	WordPressRetrievalDetector.get_option("home") - {'option'}
	WordPressRetrievalDetector.get_option("v_moneytype") - {'option'}
	WordPressStorageDetector.update_option("bwx_db_version", $bwx_db_version) - {'option'}
	WordPressRetrievalDetector.get_option("v_mid") - {'option'}
	WordPressRetrievalDetector.get_option("v_rcvpost") - {'option'}
	WordPressRetrievalDetector.get_option("bwx_payment_page") - {'option'}
	WordPressRetrievalDetector.get_option("v_mid") - {'option'}
	WordPressRetrievalDetector.get_option("v_moneytype") - {'option'}
	WordPressRetrievalDetector.get_option($option_name) - {'option'}
	WordPressRetrievalDetector.get_option("bwx_db_version") - {'option'}
	WordPressStorageDetector.update_option($option_name, $option_value) - {'option'}
	WordPressRetrievalDetector.get_option("v_secrete") - {'option'}
	WordPressRetrievalDetector.get_option("v_secrete") - {'option'}
	WordPressRetrievalDetector.get_option("home") - {'option'}
	WordPressStorageDetector.add_option("bwx_db_version", $bwx_db_version) - {'option'}
	WordPressRetrievalDetector.get_option("v_moneytype") - {'option'}
	WordPressRetrievalDetector.get_option("v_secrete") - {'option'}
	WordPressRetrievalDetector.get_option("v_rcvtel") - {'option'}
	WordPressRetrievalDetector.get_option("bwx_db_version") - {'option'}
	WordPressRetrievalDetector.get_option("v_moneytype") - {'option'}
	WordPressRetrievalDetector.get_option("home") - {'option'}
	WordPressRetrievalDetector.get_option("v_rcvaddr") - {'option'}
	WordPressRetrievalDetector.get_option("v_moneytype") - {'option'}
	WordPressRetrievalDetector.get_option("bwx_payment_page") - {'option'}
	WordPressRetrievalDetector.get_option("v_rcvtel") - {'option'}
	WordPressRetrievalDetector.get_option($option_name) - {'option'}
	WordPressRetrievalDetector.get_option("v_moneytype") - {'option'}
	WordPressRetrievalDetector.get_option("v_rcvpost") - {'option'}
	WordPressRetrievalDetector.get_option("v_rcvaddr") - {'option'}
	WordPressRetrievalDetector.get_option("v_moneytype") - {'option'}
	WordPressRetrievalDetector.get_option("home") - {'option'}
post
	WordPressRetrievalDetector.get_post($bwx_userinfo_page_id, ARRAY_A) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($bwx_payment_page_id, ARRAY_A) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($bwx_userinfo_page_id, ARRAY_A) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($_POST["post_id"]) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($bwx_payment_page_id, ARRAY_A) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($_POST["post_id"]) - {'post', 'post_meta', 'wp_post'}
post_meta
	WordPressRetrievalDetector.get_post($bwx_userinfo_page_id, ARRAY_A) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($bwx_payment_page_id, ARRAY_A) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($p_id, $m_key, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($bwx_userinfo_page_id, ARRAY_A) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($_POST["post_id"]) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($p_id, $m_key, true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($bwx_payment_page_id, ARRAY_A) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($_POST["post_id"]) - {'post', 'post_meta', 'wp_post'}
user
	WordPressRetrievalDetector.get_userdata($user_id) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_userdata($user_id) - {'user_meta', 'user'}
user_meta
	WordPressRetrievalDetector.get_userdata($user_id) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_userdata($user_id) - {'user_meta', 'user'}
wp_post
	WordPressRetrievalDetector.get_post($bwx_userinfo_page_id, ARRAY_A) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($bwx_payment_page_id, ARRAY_A) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($bwx_userinfo_page_id, ARRAY_A) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($_POST["post_id"]) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($bwx_payment_page_id, ARRAY_A) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($_POST["post_id"]) - {'post', 'post_meta', 'wp_post'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:02:04.170918.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 180 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.660336.

180 STORE_REACHES edges created
180 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 257 nodes as PERSONAL
In total, tainted 257 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 222 nodes as ENCRYPTED
In total, tainted 222 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:14.505508.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:05:40.984952!
Request variable '$_POST["buyer_email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["buyer_email"]' of personal types {'email'} is found.,,None
CRYPTOGRAPHY call to mhash(MHASH_MD5, $v_string, $secrete).,None,None
CRYPTOGRAPHY call to mhash(MHASH_MD5, $check, $secrete).,None,None
CRYPTOGRAPHY call to mhash(MHASH_MD5, $p_id . $price, "secret").,None,None
CRYPTOGRAPHY call to mhash(MHASH_MD5, $_POST["post_id"] . $_POST["product_price"], "secret").,None,None
CRYPTOGRAPHY call to mhash(MHASH_MD5, $_POST["product_page_id"] . $_POST["price"], "secret").,None,None
CRYPTOGRAPHY call to mhash(MHASH_MD5, $_POST["product_page_id"] . $_POST["price"], "secret").,None,None
CRYPTOGRAPHY call to mhash(MHASH_MD5, $v_string, $secrete).,None,None
CRYPTOGRAPHY call to mhash(MHASH_MD5, $check, $secrete).,None,None
CRYPTOGRAPHY call to mhash(MHASH_MD5, $p_id . $price, "secret").,None,None
CRYPTOGRAPHY call to mhash(MHASH_MD5, $_POST["post_id"] . $_POST["product_price"], "secret").,None,None
CRYPTOGRAPHY call to mhash(MHASH_MD5, $_POST["product_page_id"] . $_POST["price"], "secret").,None,None
CRYPTOGRAPHY call to mhash(MHASH_MD5, $_POST["product_page_id"] . $_POST["price"], "secret").,None,None
RETRIEVAL call to get_option($option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("v_moneytype") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($p_id, $m_key, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($_POST["post_id"]) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("v_moneytype") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_custom_values(__("Price", "bwx_payment"), $_POST["post_id"]). Passed arguments: 1: $post_id (int), 0: $key (string). Returns (array|null).,None,None
RETRIEVAL call to get_option("v_mid") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("v_moneytype") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdata($user_id) alters data types {'user_meta', 'user'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_option("bwx_payment_page") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("v_secrete") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("v_rcvaddr") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("v_rcvtel") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("v_rcvpost") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("v_moneytype") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to get_option("bwx_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to get_option("v_secrete") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_custom($p_id). Passed arguments: 0: $post_id (int). Returns (array).,None,None
RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_custom($_POST["product_page_id"]). Passed arguments: 0: $post_id (int). Returns (array).,None,None
RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($bwx_payment_page_id, ARRAY_A) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 1: $output (string), 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($bwx_userinfo_page_id, ARRAY_A) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 1: $output (string), 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option($option_name) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("v_moneytype") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($p_id, $m_key, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($_POST["post_id"]) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("v_moneytype") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_custom_values(__("Price", "bwx_payment"), $_POST["post_id"]). Passed arguments: 1: $post_id (int), 0: $key (string). Returns (array|null).,None,None
RETRIEVAL call to get_option("v_mid") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("v_moneytype") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdata($user_id) alters data types {'user_meta', 'user'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_option("bwx_payment_page") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("v_secrete") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("v_rcvaddr") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("v_rcvtel") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("v_rcvpost") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("v_moneytype") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to get_option("bwx_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to get_option("v_secrete") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_custom($p_id). Passed arguments: 0: $post_id (int). Returns (array).,None,None
RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_custom($_POST["product_page_id"]). Passed arguments: 0: $post_id (int). Returns (array).,None,None
RETRIEVAL call to get_option("home") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($bwx_payment_page_id, ARRAY_A) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 1: $output (string), 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($bwx_userinfo_page_id, ARRAY_A) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 1: $output (string), 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
STORAGE call to update_option($option_name, $option_value) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("bwx_db_version", $bwx_db_version) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("bwx_db_version", $bwx_db_version) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to wp_insert_post($bwx_payment_page). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to wp_insert_post($bwx_userinfo_page). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to update_option($option_name, $option_value) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("bwx_db_version", $bwx_db_version) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("bwx_db_version", $bwx_db_version) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to wp_insert_post($bwx_payment_page). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to wp_insert_post($bwx_userinfo_page). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] Storage check is NONE 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['encryption', 'third_party'] 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? True 

No findings
