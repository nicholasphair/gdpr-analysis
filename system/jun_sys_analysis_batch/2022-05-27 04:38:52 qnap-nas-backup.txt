Timeout in resolving values
Timeout in running neo4j query
Running Main.py on qnap-nas-backup

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:01.543320.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.831948.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 203 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.746780.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 10 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.791903.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 7762 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:03.433098.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 245 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:02.166483.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.095338.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 1362 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:42.539812.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 30941
Added 21359 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 42945
Added 12004 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:03.404725.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/constants.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/deprecated.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/exceptions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/functions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/loader.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/qnap.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/uninstall.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/controller/class-qnap-backups-controller.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/controller/class-qnap-export-controller.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/controller/class-qnap-import-controller.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/controller/class-qnap-main-controller.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/controller/class-qnap-status-controller.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/model/class-qnap-backups.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/model/class-qnap-compatibility.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/model/class-qnap-deprecated.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/model/class-qnap-extensions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/model/class-qnap-handler.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/model/class-qnap-log.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/model/class-qnap-message.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/model/class-qnap-notification.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/model/class-qnap-status.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/model/class-qnap-template.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/model/export/class-qnap-export-archive.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/model/export/class-qnap-export-clean.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/model/export/class-qnap-export-compatibility.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/model/export/class-qnap-export-config-file.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/model/export/class-qnap-export-config.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/model/export/class-qnap-export-content.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/model/export/class-qnap-export-database-file.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/model/export/class-qnap-export-database.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/model/export/class-qnap-export-download.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/model/export/class-qnap-export-enumerate-content.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/model/export/class-qnap-export-enumerate-media.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/model/export/class-qnap-export-enumerate-tables.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/model/export/class-qnap-export-init.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/model/export/class-qnap-export-media.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/model/import/class-qnap-import-blogs.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/model/import/class-qnap-import-clean.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/model/import/class-qnap-import-compatibility.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/model/import/class-qnap-import-confirm.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/model/import/class-qnap-import-content.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/model/import/class-qnap-import-database.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/model/import/class-qnap-import-done.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/model/import/class-qnap-import-enumerate.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/model/import/class-qnap-import-mu-plugins.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/model/import/class-qnap-import-permalinks.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/model/import/class-qnap-import-plugins.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/model/import/class-qnap-import-upload.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/model/import/class-qnap-import-validate.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/vendor/bandar/bandar/lib/Bandar.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/vendor/bandar/bandar/lib/Exceptions/TemplateDoesNotExistException.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/vendor/qeek/archiver/class-qnap-archiver.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/vendor/qeek/archiver/class-qnap-compressor.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/vendor/qeek/archiver/class-qnap-extractor.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/vendor/qeek/command/class-qnap-wp-cli-command.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/vendor/qeek/cron/class-qnap-cron.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/vendor/qeek/database/class-qnap-database-mysqli.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/vendor/qeek/database/class-qnap-database-mysql.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/vendor/qeek/database/class-qnap-database.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/vendor/qeek/database/class-qnap-database-utility.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/vendor/qeek/filesystem/class-qnap-directory.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/vendor/qeek/filesystem/class-qnap-file-htaccess.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/vendor/qeek/filesystem/class-qnap-file-index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/vendor/qeek/filesystem/class-qnap-file.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/vendor/qeek/filesystem/class-qnap-file-webconfig.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/vendor/qeek/filter/class-qnap-recursive-exclude-filter.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/vendor/qeek/filter/class-qnap-recursive-extension-filter.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/vendor/qeek/iterator/class-qnap-recursive-directory-iterator.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/vendor/qeek/iterator/class-qnap-recursive-iterator-iterator.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/vendor/qnap/class-qnap-log.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/vendor/qnap/class-qnap-queue.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/view/backups/qnap.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/view/main/admin-head.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/view/main/backups-htaccess-notice.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/view/main/backups-index-html-notice.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/view/main/backups-index-php-notice.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/view/main/backups-path-notice.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/view/main/backups-webconfig-notice.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/view/main/get-support.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/view/main/missing-role-capability-notice.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/view/main/multisite-notice.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/view/main/storage-index-html-notice.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/view/main/storage-index-php-notice.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/view/main/storage-path-notice.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/view/main/translate.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/lib/view/main/wordpress-htaccess-notice.php' cannot be parsed correct.
Added new filesystem node for: /home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/storage/index.html
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/storage/index.html' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/qnap-nas-backup/storage/index.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:08.263512.

2 Nodes Created
203 PHP_REACHES edges created
10 REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
7762 PHP_REACHES edges created
245 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
14000 PHP_REACHES edges created
15000 PHP_REACHES edges created
16000 PHP_REACHES edges created
17000 PHP_REACHES edges created
18000 PHP_REACHES edges created
19000 PHP_REACHES edges created
20000 PHP_REACHES edges created
21000 PHP_REACHES edges created
22000 PHP_REACHES edges created
22721 PHP_REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
12004 PHP_REACHES edges created
1 DIRECTORY_OF edges created
1 FILE_OF edges created
42947 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 9575 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.652369.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 65 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:13.086117.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 1177 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:36.210045.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 1415 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.282571.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:03.485901.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:15.541076.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.139500.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.037514.

65 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
2592 PHP_REACHES edges created
2657 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 1478 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.261714.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
25 SQL operations to process.
SELECT meta_value FROM `qnap_table_prefix("mainsite")sitemeta` WHERE meta_key = 'fs_accounts'
SQL command (SELECT meta_value FROM `qnap_table_prefix("mainsite")sitemeta` WHERE meta_key = 'fs_accounts') cannot be parsed correct.
sprintf("SHOW FULL TABLES FROM `%s` WHERE `Table_type` = \'VIEW\' AND (%s)", $this->wpdb->dbname, implode(" OR ", $where_query))
SQL command (sprintf("SHOW FULL TABLES FROM `%s` WHERE `Table_type` = \'VIEW\' AND (%s)", $this->wpdb->dbname, implode(" OR ", $where_query))) cannot be parsed correct.
sprintf("SHOW FULL TABLES FROM `%s` WHERE `Table_type` = \'BASE TABLE\' AND (%s)", $this->wpdb->dbname, implode(" OR ", $where_query))
SQL command (sprintf("SHOW FULL TABLES FROM `%s` WHERE `Table_type` = \'BASE TABLE\' AND (%s)", $this->wpdb->dbname, implode(" OR ", $where_query))) cannot be parsed correct.
SET SESSION sql_mode = ''
SQL command (SET SESSION sql_mode = '') cannot be parsed correct.
$this->replace_table_row_format($query)
SQL command ($this->replace_table_row_format($query)) cannot be parsed correct.
sprintf("SELECT t1.* FROM `%s` AS t1 JOIN (SELECT %s FROM `%s` WHERE %s ORDER BY %s LIMIT %d, %d) AS t2 USING (%s)", $table_name, $table_keys, $table_name, $table_where, $table_keys, $table_offset, QNAP_MAX_SELECT_RECORDS, $table_keys)
SQL command (sprintf("SELECT t1.* FROM `%s` AS t1 JOIN (SELECT %s FROM `%s` WHERE %s ORDER BY %s LIMIT %d, %d) AS t2 USING (%s)", $table_name, $table_keys, $table_name, $table_where, $table_keys, $table_offset, QNAP_MAX_SELECT_RECORDS, $table_keys)) cannot be parsed correct.
sprintf("SELECT t1.* FROM `%s` AS t1 JOIN (SELECT %s FROM `%s` WHERE %s ORDER BY %s LIMIT %d, %d) AS t2 USING (%s)", $table_name, $table_keys, $table_name, $table_where, $table_keys, $table_offset, QNAP_MAX_SELECT_RECORDS, $table_keys)
SQL command (sprintf("SELECT t1.* FROM `%s` AS t1 JOIN (SELECT %s FROM `%s` WHERE %s ORDER BY %s LIMIT %d, %d) AS t2 USING (%s)", $table_name, $table_keys, $table_name, $table_where, $table_keys, $table_offset, QNAP_MAX_SELECT_RECORDS, $table_keys)) cannot be parsed correct.
sprintf("SELECT count(*) as total FROM `%s` WHERE %s", $table_name, $table_where, $table_keys)
SQL command (sprintf("SELECT count(*) as total FROM `%s` WHERE %s", $table_name, $table_where, $table_keys)) cannot be parsed correct.
SET SESSION sql_mode = ''
SQL command (SET SESSION sql_mode = '') cannot be parsed correct.
START TRANSACTION
SQL command (START TRANSACTION) cannot be parsed correct.
$this->replace_raw_values($query)
SQL command ($this->replace_raw_values($query)) cannot be parsed correct.
$this->replace_table_engines($query)
SQL command ($this->replace_table_engines($query)) cannot be parsed correct.
COMMIT
SQL command (COMMIT) cannot be parsed correct.
DROP VIEW IF EXISTS `$table_name`
SQL command (DROP VIEW IF EXISTS `$table_name`) cannot be parsed correct.
DROP TABLE IF EXISTS `$table_name`
SQL command (DROP TABLE IF EXISTS `$table_name`) cannot be parsed correct.
SHOW VARIABLES LIKE 'version'
SQL command (SHOW VARIABLES LIKE 'version') cannot be parsed correct.
SHOW VARIABLES LIKE 'max_allowed_packet'
SQL command (SHOW VARIABLES LIKE 'max_allowed_packet') cannot be parsed correct.
SHOW VARIABLES LIKE 'lower_case_table_names'
SQL command (SHOW VARIABLES LIKE 'lower_case_table_names') cannot be parsed correct.
SHOW COLLATION LIKE '$collation_name'
SQL command (SHOW COLLATION LIKE '$collation_name') cannot be parsed correct.
SHOW CREATE VIEW `$this->get_tables()_0`
SQL command (SHOW CREATE VIEW `$this->get_tables()_0`) cannot be parsed correct.
SHOW CREATE TABLE `$this->get_tables()_0`
SQL command (SHOW CREATE TABLE `$this->get_tables()_0`) cannot be parsed correct.
REPAIR TABLE `$this->get_tables()_0`
SQL command (REPAIR TABLE `$this->get_tables()_0`) cannot be parsed correct.
SHOW KEYS FROM `$this->get_tables()_0` WHERE `Key_name` = 'PRIMARY'
SQL command (SHOW KEYS FROM `$this->get_tables()_0` WHERE `Key_name` = 'PRIMARY') cannot be parsed correct.
SHOW KEYS FROM `$table_name` WHERE `Non_unique` = 0
SQL command (SHOW KEYS FROM `$table_name` WHERE `Non_unique` = 0) cannot be parsed correct.
SHOW COLUMNS FROM `$this->get_tables()_0`
SQL command (SHOW COLUMNS FROM `$this->get_tables()_0`) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [32457, 40540, 40805, 40987, 42016, 41463, 41490, 41716, 41820, 41846, 41954, 41981, 42247, 42307, 42320, 42340, 42386, 42432, 42482, 42536, 42590, 42641, 42669, 42736, 42803]
Added 0 SQL nodes. 0 out of 25 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:05.907723.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'json_encode($params)'' cannot be parsed correct.
HTML code '$'json_encode(["error" => ["message" => $e->getMessage()]])'' cannot be parsed correct.
HTML code '$'json_encode(["error" => ["message" => "unknown error"]])'' cannot be parsed correct.
HTML code '$'json_encode(["error" => ["message" => "unknown error"]])'' cannot be parsed correct.
HTML code '$'json_encode(["error" => ["code" => 403]])'' cannot be parsed correct.
HTML code '$'json_encode(["error" => ["code" => $e->getCode(), "message" => $e->getMessage()]])'' cannot be parsed correct.
HTML code '$'json_encode(["error" => ["code" => $e->getCode(), "message" => $e->getMessage()]])'' cannot be parsed correct.
HTML code '$'json_encode(["error" => ["code" => 403]])'' cannot be parsed correct.
HTML code '$'json_encode(["error" => ["code" => $e->getCode(), "message" => $e->getMessage()]])'' cannot be parsed correct.
HTML code '$'json_encode(["error" => ["code" => $e->getCode(), "message" => $e->getMessage()]])'' cannot be parsed correct.
HTML code '$'json_encode(["error" => ["code" => $e->getCode(), "message" => $e->getMessage()]])'' cannot be parsed correct.
HTML code '$'json_encode($params)'' cannot be parsed correct.
HTML code '$'realpath($template . ".php")'' cannot be parsed correct.
HTML code '$'$log_0'' cannot be parsed correct.
HTML code '$'Index: $this_front, Value: $this_data_$this_front'' cannot be parsed correct.
HTML code '$'$log_1'' cannot be parsed correct.
HTML code '$'$log_2'' cannot be parsed correct.
HTML code '$'nullqnap-hide'' cannot be parsed correct.
HTML code '$'$secret_key'' cannot be parsed correct.
HTML code '$'wp_make_link_relative(QNAP_URL)'' cannot be parsed correct.
HTML code '$'QNAP_VERSION'' cannot be parsed correct.
HTML code '$'wp_make_link_relative(QNAP_URL)'' cannot be parsed correct.
HTML code '$'QNAP_VERSION'' cannot be parsed correct.
HTML code '$'wp_make_link_relative(QNAP_URL)'' cannot be parsed correct.
HTML code '$'QNAP_VERSION'' cannot be parsed correct.
HTML code '$'wp_make_link_relative(QNAP_URL)'' cannot be parsed correct.
HTML code '$'QNAP_VERSION'' cannot be parsed correct.
HTML code '$'wp_make_link_relative(QNAP_URL)'' cannot be parsed correct.
HTML code '$'QNAP_VERSION'' cannot be parsed correct.
HTML code '$'wp_make_link_relative(QNAP_URL)'' cannot be parsed correct.
HTML code '$'wp_make_link_relative(QNAP_URL)'' cannot be parsed correct.
HTML code '$'get_option("siteurl")'' cannot be parsed correct.
HTML code '$'$secret_key'' cannot be parsed correct.
HTML code '$'qnap_size_format(wp_max_upload_size())'' cannot be parsed correct.
HTML code '$'
'' cannot be parsed correct.
HTML code '$'</h1>
	<hr class="wp-header-end">
	<div class="form-wrap edit-term-notes">
		<p>'' cannot be parsed correct.
HTML code '$'</p>
		<p>'' cannot be parsed correct.
HTML code '$' <a href="https://www.qnap.com/">'' cannot be parsed correct.
HTML code '$'	</p>
</div>
'' cannot be parsed correct.
HTML code '$'	</p>
</div>
'' cannot be parsed correct.
HTML code '$'	</p>
</div>
'' cannot be parsed correct.
HTML code '$'	</p>
</div>
'' cannot be parsed correct.
HTML code '$'	</p>
</div>
'' cannot be parsed correct.
HTML code '$'</a></p>
	</div>
	<table class="form-table" role="presentation">
		<tbody>
			<tr class="user-user-login-wrap">
				<th>'' cannot be parsed correct.
HTML code '$'</label></th>
				<td class="item">
					<input type="text" value="'' cannot be parsed correct.
HTML code '$'" disabled="disabled" class="regular-text copy-area" style="color: #50575e;">
					<a href="#" class="button action btn-copy">Copy</a>
				</td>
			</tr>
			<tr class="user-first-name-wrap">
				<th>'' cannot be parsed correct.
HTML code '$'</th>
				<td class="item">
					<input type="text" value="'' cannot be parsed correct.
HTML code '$'</th>
				<td class="item">
					<strong>'' cannot be parsed correct.
HTML code '$'</strong>
				</td>
			</tr>
		</tbody>
	</table>

	<p><a href="https://service.qnap.com/go-to" style="margin-top: 0px;">How to expand maximum upload file size in WordPress?</a></p>

	<h2 style="display: inline-block;">Job Log History</h2>
	<a href="#" class="button action" style="float: right; margin-top: 10px;" onclick="DeleteQnapLog()">Clear All</a>
	<table class="wp-list-table widefat fixed striped table-view-list">
		<thead style="display: table; width: 100%; table-layout: fixed;">
			<tr>
				<th scope="col" class="manage-column" style="width: 230px;"><span>Date</span></th>
				<th scope="col" class="manage-column" style="width: 230px;">Client IP</th>
				<th scope="col" class="manage-column">Content</th>
			</tr>
		</thead>
		<tbody id="the-list" style="display: block; max-height: 360px; overflow-y: scroll;">
			'' cannot be parsed correct.
HTML code '$'	</p>
</div>
'' cannot be parsed correct.
HTML code '$'	</p>
</div>
'' cannot be parsed correct.
HTML code '$'	</p>
</div>
'' cannot be parsed correct.
HTML code '$'	</p>
</div>
'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:04.658737.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.066247.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 97 do_action/apply_filters calls and 89 add_action/add_filter calls. Now connecting do-add pairs.
Added 2 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:05.392178.

2 PHP_REACHES edges created
2 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FirebirdInterBaseDetector
### Start running FrontBaseDetector
### Finish running FileProDetector
### Start running HashDetector
### Finish running ArrayElementDetector
### Start running IBMDb2Detector
### Finish running DbaseDetector
### Start running InformixDetector
### Finish running DbplusDetector
### Start running IngresDetector
### Finish running CubridDetector
### Start running maxdbDetector
### Finish running FrontBaseDetector
### Start running MongoDbDetector
### Finish running InformixDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IngresDetector
### Start running MySQLDetector
### Finish running IBMDb2Detector
### Start running MySQLiDetector
### Finish running MongoDbDetector
### Start running Oci8Detector
### Finish running MsqlDetector
### Start running OpenSSLDetector
### Finish running MySQLDetector
### Start running ParadoxDetector
### Finish running Oci8Detector
### Start running PasswordHashingDetector
### Finish running ParadoxDetector
### Start running PhpCurlDetector
### Finish running PhpCurlDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running HashDetector
### Start running PHPRetrievalDetector
### Finish running PasswordHashingDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPIncludedDetector
### Start running PhpVarDetector
### Finish running OpenSSLDetector
### Start running PostgreSQLDetector
### Finish running PostgreSQLDetector
### Start running PropertyDetector
### Finish running PhpVarDetector
### Start running Sqlite3Detector
### Finish running PropertyDetector
### Start running SqliteDetector
### Finish running Sqlite3Detector
### Start running SqlServerDetector
### Finish running SqliteDetector
### Start running SybaseDetector
### Finish running SybaseDetector
### Start running TokyoTyrantDetector
### Finish running SqlServerDetector
### Start running UserInputDetector
### Finish running TokyoTyrantDetector
### Start running VariableDetector
### Finish running UserInputDetector
### Start running WordpressHashingFnDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRemoteDetector
### Finish running PHPStorageDetector
### Start running WordPressRetrievalDetector
### Finish running VariableDetector
### Start running WordPressStorageDetector
### Finish running PHPRetrievalDetector
### Start running WP_UserDetector
### Finish running maxdbDetector
### Start running GenericDatabaseUsageDetector
### Finish running MySQLiDetector
### Start running GenericEncryptionDetector
### Finish running WordPressRemoteDetector
### Start running DeletionDetector
### Finish running WP_UserDetector
### Start running UninstallDetector
### Finish running GenericEncryptionDetector
Error in GenericDatabaseUsageDetector:
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running WordPressStorageDetector
### Finish running WordPressRetrievalDetector
### Finished running detectors
lib/vendor/qeek/filesystem/class-qnap-file.php:32
  - MD5 called with parameters [content]. Ignore if [content] does not contain personal information. 

functions.php:1143
  - RETRIEVAL call to fread($handle, $filesize).
  - Data types: file
functions.php:1203
  - RETRIEVAL call to fgetc($file_handle).
  - Data types: file
functions.php:1432
  - RETRIEVAL call to file_get_contents(QNAP_WORDPRESS_HTACCESS).
  - Data types: file
functions.php:1443
  - RETRIEVAL call to file_get_contents(QNAP_WORDPRESS_WEBCONFIG).
  - Data types: file
lib/model/export/class-qnap-export-content.php:83
  - RETRIEVAL call to fgets($content_list).
  - Data types: file
lib/model/export/class-qnap-export-database.php:64
  - RETRIEVAL call to fgets($tables_list).
  - Data types: file
lib/model/export/class-qnap-export-media.php:83
  - RETRIEVAL call to fgets($media_list).
  - Data types: file
lib/vendor/qeek/archiver/class-qnap-archiver.php:187
  - RETRIEVAL call to fread($this->file_handle, 4377).
  - Data types: file
lib/vendor/qeek/archiver/class-qnap-compressor.php:73
  - RETRIEVAL call to fread($file_handle, 512000).
  - Data types: file
lib/vendor/qeek/archiver/class-qnap-extractor.php:54
  - RETRIEVAL call to fread($this->file_handle, 4377).
  - Data types: file
lib/vendor/qeek/archiver/class-qnap-extractor.php:101
  - RETRIEVAL call to fread($this->file_handle, 4377).
  - Data types: file
lib/vendor/qeek/archiver/class-qnap-extractor.php:163
  - RETRIEVAL call to fread($this->file_handle, 4377).
  - Data types: file
lib/vendor/qeek/archiver/class-qnap-extractor.php:172
  - RETRIEVAL call to fgetc($this->file_handle).
  - Data types: file
lib/vendor/qeek/archiver/class-qnap-extractor.php:298
  - RETRIEVAL call to fread($this->file_handle, 4377).
  - Data types: file
lib/vendor/qeek/archiver/class-qnap-extractor.php:307
  - RETRIEVAL call to fgetc($this->file_handle).
  - Data types: file
lib/vendor/qeek/archiver/class-qnap-extractor.php:444
  - RETRIEVAL call to fread($this->file_handle, $chunk_size).
  - Data types: file
lib/vendor/qeek/database/class-qnap-database.php:976
  - RETRIEVAL call to fgets($file_handler).
  - Data types: file
lib/vendor/qnap/class-qnap-log.php:20
  - RETRIEVAL call to file_get_contents(QNAP_LOG_PATH).
  - Data types: file 

functions.php:1120
  - STORAGE call to fwrite($handle, $content).
  - Data types: file
lib/vendor/qeek/archiver/class-qnap-archiver.php:128
  - STORAGE call to fwrite($this->file_handle, $this->eof).
  - Data types: file
lib/vendor/qeek/archiver/class-qnap-compressor.php:57
  - STORAGE call to fwrite($this->file_handle, $block).
  - Data types: file
lib/vendor/qeek/archiver/class-qnap-compressor.php:74
  - STORAGE call to fwrite($this->file_handle, $file_content).
  - Data types: file
lib/vendor/qeek/archiver/class-qnap-compressor.php:108
  - STORAGE call to fwrite($this->file_handle, $block).
  - Data types: file
lib/vendor/qeek/archiver/class-qnap-extractor.php:452
  - STORAGE call to fwrite($file_handle, $file_content).
  - Data types: file
lib/vendor/qeek/archiver/class-qnap-extractor.php:478
  - STORAGE call to touch($file_name, $file_mtime).
  - Data types: file
lib/vendor/qeek/filesystem/class-qnap-file.php:23
  - STORAGE call to touch($path).
  - Data types: file
lib/vendor/qeek/filesystem/class-qnap-file.php:39
  - STORAGE call to fwrite($handle, $content).
  - Data types: file
lib/vendor/qnap/class-qnap-log.php:36
  - STORAGE call to file_put_contents(QNAP_LOG_PATH, $str).
  - Data types: file 

lib/model/class-qnap-notification.php:17
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
lib/model/class-qnap-notification.php:33
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
lib/model/class-qnap-notification.php:44
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
lib/model/class-qnap-notification.php:60
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
lib/model/import/class-qnap-import-database.php:857
  - variable '$auth_password' of personal types {'password'} is found.
  - Data types: password
lib/model/import/class-qnap-import-database.php:1001
  - variable '$auth_password' of personal types {'password'} is found.
  - Data types: password 

lib/controller/class-qnap-export-controller.php:95
  - API call to wp_remote_post(apply_filters("qnap_http_export_url", add_query_arg(["qnap_import" => 1], admin_url("admin-ajax.php?action=qnap_export"))), ["timeout" => apply_filters("qnap_http_export_timeout", 10), "blocking" => apply_filters("qnap_http_export_blocking", false), "sslverify" => apply_filters("qnap_http_export_sslverify", false), "headers" => apply_filters("qnap_http_export_headers", []), "body" => apply_filters("qnap_http_export_body", $params)]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
lib/controller/class-qnap-import-controller.php:104
  - API call to wp_remote_post(apply_filters("qnap_http_import_url", add_query_arg(["qnap_import" => 1], admin_url("admin-ajax.php?action=qnap_import"))), ["timeout" => apply_filters("qnap_http_import_timeout", 10), "blocking" => apply_filters("qnap_http_import_blocking", false), "sslverify" => apply_filters("qnap_http_import_sslverify", false), "headers" => apply_filters("qnap_http_import_headers", []), "body" => apply_filters("qnap_http_import_body", $params)]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote 

functions.php:819
  - RETRIEVAL call to get_option(QNAP_ACTIVE_PLUGINS, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
functions.php:829
  - RETRIEVAL call to get_option(QNAP_ACTIVE_PLUGINS, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
functions.php:847
  - RETRIEVAL call to get_option(QNAP_ACTIVE_TEMPLATE) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
functions.php:856
  - RETRIEVAL call to get_option(QNAP_ACTIVE_STYLESHEET) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
functions.php:886
  - RETRIEVAL call to get_option(QNAP_ACTIVE_PLUGINS, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
functions.php:905
  - RETRIEVAL call to get_option(QNAP_JETPACK_ACTIVE_MODULES, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
functions.php:924
  - RETRIEVAL call to get_option(QNAP_SWIFT_OPTIMIZER_PLUGIN_ORGANIZER, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
functions.php:970
  - RETRIEVAL call to get_option(QNAP_DB_VERSION) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
functions.php:971
  - RETRIEVAL call to get_option(QNAP_INITIAL_DB_VERSION) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
functions.php:1223
  - RETRIEVAL call to get_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-qnap-backups-controller.php:16
  - RETRIEVAL call to get_option(QNAP_AUTH_USER) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-qnap-backups-controller.php:17
  - RETRIEVAL call to get_option(QNAP_AUTH_PASSWORD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-qnap-backups-controller.php:18
  - RETRIEVAL call to get_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-qnap-export-controller.php:238
  - RETRIEVAL call to get_option(QNAP_AUTH_USER) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-qnap-export-controller.php:238
  - RETRIEVAL call to get_option(QNAP_AUTH_PASSWORD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-qnap-import-controller.php:256
  - RETRIEVAL call to get_option(QNAP_AUTH_USER) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-qnap-import-controller.php:256
  - RETRIEVAL call to get_option(QNAP_AUTH_PASSWORD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-qnap-main-controller.php:253
  - RETRIEVAL call to get_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-qnap-main-controller.php:264
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
lib/controller/class-qnap-main-controller.php:679
  - RETRIEVAL call to get_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-qnap-main-controller.php:681
  - RETRIEVAL call to get_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-qnap-main-controller.php:749
  - RETRIEVAL call to get_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-qnap-main-controller.php:762
  - RETRIEVAL call to get_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-qnap-main-controller.php:764
  - RETRIEVAL call to get_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-qnap-main-controller.php:890
  - RETRIEVAL call to get_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-qnap-main-controller.php:892
  - RETRIEVAL call to get_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-qnap-main-controller.php:904
  - RETRIEVAL call to get_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-qnap-main-controller.php:906
  - RETRIEVAL call to get_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-qnap-main-controller.php:923
  - RETRIEVAL call to get_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-qnap-main-controller.php:1027
  - RETRIEVAL call to get_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-qnap-main-controller.php:1039
  - RETRIEVAL call to get_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-qnap-main-controller.php:1041
  - RETRIEVAL call to get_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-qnap-main-controller.php:1053
  - RETRIEVAL call to get_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/controller/class-qnap-main-controller.php:1055
  - RETRIEVAL call to get_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/model/class-qnap-backups.php:84
  - RETRIEVAL call to get_option(QNAP_BACKUPS_LABELS, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/model/class-qnap-backups.php:95
  - RETRIEVAL call to get_option(QNAP_BACKUPS_LABELS, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/model/class-qnap-backups.php:109
  - RETRIEVAL call to get_option(QNAP_BACKUPS_LABELS, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/model/class-qnap-message.php:11
  - RETRIEVAL call to get_option(QNAP_MESSAGES, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/model/class-qnap-message.php:19
  - RETRIEVAL call to get_option(QNAP_MESSAGES, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/model/class-qnap-message.php:30
  - RETRIEVAL call to get_option(QNAP_MESSAGES, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/model/class-qnap-notification.php:17
  - RETRIEVAL call to get_option("admin_email", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/model/class-qnap-notification.php:44
  - RETRIEVAL call to get_option("admin_email", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/model/export/class-qnap-export-config.php:131
  - RETRIEVAL call to get_option("upload_path") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/model/export/class-qnap-export-config.php:134
  - RETRIEVAL call to get_option("upload_url_path") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/model/import/class-qnap-import-blogs.php:104
  - RETRIEVAL call to get_option("upload_path") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/model/import/class-qnap-import-blogs.php:105
  - RETRIEVAL call to get_option("upload_url_path") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/model/import/class-qnap-import-database.php:845
  - RETRIEVAL call to get_option(QNAP_SITE_URL) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/model/import/class-qnap-import-database.php:848
  - RETRIEVAL call to get_option(QNAP_HOME_URL) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/model/import/class-qnap-import-database.php:851
  - RETRIEVAL call to get_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/model/import/class-qnap-import-database.php:854
  - RETRIEVAL call to get_option(QNAP_AUTH_USER) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/model/import/class-qnap-import-database.php:857
  - RETRIEVAL call to get_option(QNAP_AUTH_PASSWORD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/model/import/class-qnap-import-database.php:860
  - RETRIEVAL call to get_option(QNAP_UPLOADS_PATH) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/model/import/class-qnap-import-database.php:863
  - RETRIEVAL call to get_option(QNAP_UPLOADS_URL_PATH) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
lib/model/import/class-qnap-import-database.php:866
  - RETRIEVAL call to get_option(QNAP_BACKUPS_LABELS, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/model/import/class-qnap-import-database.php:869
  - RETRIEVAL call to get_option(QNAP_SITES_LINKS, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/model/import/class-qnap-import-plugins.php:39
  - RETRIEVAL call to get_option("fs_accounts", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/vendor/qeek/cron/class-qnap-cron.php:43
  - RETRIEVAL call to get_option(QNAP_CRON, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/vendor/qeek/cron/class-qnap-cron.php:69
  - RETRIEVAL call to get_option(QNAP_CRON, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
lib/view/backups/qnap.php:20
  - RETRIEVAL call to get_option("siteurl") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option 

functions.php:838
  - STORAGE call to update_option(QNAP_ACTIVE_PLUGINS, $current) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
functions.php:866
  - STORAGE call to update_option(QNAP_ACTIVE_TEMPLATE, $template) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
functions.php:876
  - STORAGE call to update_option(QNAP_ACTIVE_STYLESHEET, $stylesheet) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
functions.php:895
  - STORAGE call to update_option(QNAP_ACTIVE_PLUGINS, $current) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
functions.php:914
  - STORAGE call to update_option(QNAP_JETPACK_ACTIVE_MODULES, $current) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
functions.php:931
  - STORAGE call to update_option(QNAP_SWIFT_OPTIMIZER_PLUGIN_ORGANIZER, $current) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
functions.php:971
  - STORAGE call to update_option(QNAP_DB_VERSION, get_option(QNAP_INITIAL_DB_VERSION)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
functions.php:1072
  - STORAGE call to delete_post_meta_by_key("_elementor_css") alters data types {'post_meta'}. Passed arguments: 0: $post_meta_key (string). Returns (bool).
  - Data types: post_meta
functions.php:1073
  - STORAGE call to delete_option("_elementor_global_css") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
functions.php:1074
  - STORAGE call to delete_option("elementor-custom-breakpoints-files") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
lib/controller/class-qnap-main-controller.php:254
  - STORAGE call to update_option(QNAP_SECRET_KEY, qnap_generate_random_string(64)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/model/class-qnap-backups.php:99
  - STORAGE call to update_option(QNAP_BACKUPS_LABELS, $labels) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/model/class-qnap-backups.php:113
  - STORAGE call to update_option(QNAP_BACKUPS_LABELS, $labels) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/model/class-qnap-message.php:12
  - STORAGE call to update_option(QNAP_MESSAGES, array_merge($messages, [$type => $message])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/model/class-qnap-message.php:36
  - STORAGE call to update_option(QNAP_MESSAGES, $messages) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/model/class-qnap-status.php:44
  - STORAGE call to update_option(QNAP_STATUS, $data) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/model/import/class-qnap-import-database.php:980
  - STORAGE call to delete_option(QNAP_ACTIVE_PLUGINS) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
lib/model/import/class-qnap-import-database.php:989
  - STORAGE call to update_option(QNAP_SITE_URL, $site_url) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/model/import/class-qnap-import-database.php:992
  - STORAGE call to update_option(QNAP_HOME_URL, $home_url) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/model/import/class-qnap-import-database.php:995
  - STORAGE call to update_option(QNAP_SECRET_KEY, $secret_key) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/model/import/class-qnap-import-database.php:998
  - STORAGE call to update_option(QNAP_AUTH_USER, $auth_user) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/model/import/class-qnap-import-database.php:1001
  - STORAGE call to update_option(QNAP_AUTH_PASSWORD, $auth_password) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/model/import/class-qnap-import-database.php:1004
  - STORAGE call to update_option(QNAP_UPLOADS_PATH, $uploads_path) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/model/import/class-qnap-import-database.php:1007
  - STORAGE call to update_option(QNAP_UPLOADS_URL_PATH, $uploads_url_path) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/model/import/class-qnap-import-database.php:1010
  - STORAGE call to update_option(QNAP_BACKUPS_LABELS, $backups_labels) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/model/import/class-qnap-import-database.php:1013
  - STORAGE call to update_option(QNAP_SITES_LINKS, $sites_links) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/model/import/class-qnap-import-plugins.php:45
  - STORAGE call to update_option("fs_accounts", $fs_accounts) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
lib/model/import/class-qnap-import-plugins.php:47
  - STORAGE call to delete_option("fs_accounts") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
lib/model/import/class-qnap-import-plugins.php:48
  - STORAGE call to delete_option("fs_dbg_accounts") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
lib/model/import/class-qnap-import-plugins.php:49
  - STORAGE call to delete_option("fs_active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
lib/model/import/class-qnap-import-plugins.php:50
  - STORAGE call to delete_option("fs_api_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
lib/model/import/class-qnap-import-plugins.php:51
  - STORAGE call to delete_option("fs_dbg_api_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
lib/model/import/class-qnap-import-plugins.php:52
  - STORAGE call to delete_option("fs_debug_mode") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
lib/vendor/qeek/cron/class-qnap-cron.php:59
  - STORAGE call to update_option(QNAP_CRON, $cron) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
uninstall.php:20
  - STORAGE call to delete_option(QNAP_STATUS) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:21
  - STORAGE call to delete_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:22
  - STORAGE call to delete_option(QNAP_AUTH_USER) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:23
  - STORAGE call to delete_option(QNAP_AUTH_PASSWORD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

functions.php:1073
  - DELETION call to delete_option("_elementor_global_css") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
functions.php:1074
  - DELETION call to delete_option("elementor-custom-breakpoints-files") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
lib/model/import/class-qnap-import-database.php:980
  - DELETION call to delete_option(QNAP_ACTIVE_PLUGINS) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
lib/model/import/class-qnap-import-plugins.php:47
  - DELETION call to delete_option("fs_accounts") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
lib/model/import/class-qnap-import-plugins.php:48
  - DELETION call to delete_option("fs_dbg_accounts") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
lib/model/import/class-qnap-import-plugins.php:49
  - DELETION call to delete_option("fs_active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
lib/model/import/class-qnap-import-plugins.php:50
  - DELETION call to delete_option("fs_api_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
lib/model/import/class-qnap-import-plugins.php:51
  - DELETION call to delete_option("fs_dbg_api_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
lib/model/import/class-qnap-import-plugins.php:52
  - DELETION call to delete_option("fs_debug_mode") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:20
  - DELETION call to delete_option(QNAP_STATUS) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:21
  - DELETION call to delete_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:22
  - DELETION call to delete_option(QNAP_AUTH_USER) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:23
  - DELETION call to delete_option(QNAP_AUTH_PASSWORD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

uninstall.php:20
  - Uninstall deletion call: DELETION call to delete_option(QNAP_STATUS) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:21
  - Uninstall deletion call: DELETION call to delete_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:22
  - Uninstall deletion call: DELETION call to delete_option(QNAP_AUTH_USER) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:23
  - Uninstall deletion call: DELETION call to delete_option(QNAP_AUTH_PASSWORD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

By data type:
email
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
file
	PHPStorageDetector.fwrite($this->file_handle, $block) - {'file'}
	PHPRetrievalDetector.fgets($content_list) - {'file'}
	PHPRetrievalDetector.fread($this->file_handle, 4377) - {'file'}
	PHPStorageDetector.file_put_contents(QNAP_LOG_PATH, $str) - {'file'}
	PHPRetrievalDetector.fread($this->file_handle, 4377) - {'file'}
	PHPStorageDetector.touch($file_name, $file_mtime) - {'file'}
	PHPRetrievalDetector.fgetc($file_handle) - {'file'}
	PHPStorageDetector.fwrite($handle, $content) - {'file'}
	PHPStorageDetector.fwrite($this->file_handle, $this->eof) - {'file'}
	PHPStorageDetector.touch($path) - {'file'}
	PHPRetrievalDetector.file_get_contents(QNAP_WORDPRESS_WEBCONFIG) - {'file'}
	PHPRetrievalDetector.fread($handle, $filesize) - {'file'}
	PHPStorageDetector.fwrite($this->file_handle, $block) - {'file'}
	PHPRetrievalDetector.file_get_contents(QNAP_WORDPRESS_HTACCESS) - {'file'}
	PHPStorageDetector.fwrite($handle, $content) - {'file'}
	PHPStorageDetector.fwrite($file_handle, $file_content) - {'file'}
	PHPRetrievalDetector.fgets($tables_list) - {'file'}
	PHPStorageDetector.fwrite($this->file_handle, $file_content) - {'file'}
	PHPRetrievalDetector.fgetc($this->file_handle) - {'file'}
	PHPRetrievalDetector.fgetc($this->file_handle) - {'file'}
	PHPRetrievalDetector.fgets($file_handler) - {'file'}
	PHPRetrievalDetector.fread($this->file_handle, $chunk_size) - {'file'}
	PHPRetrievalDetector.fread($this->file_handle, 4377) - {'file'}
	PHPRetrievalDetector.fgets($media_list) - {'file'}
	PHPRetrievalDetector.fread($file_handle, 512000) - {'file'}
	PHPRetrievalDetector.fread($this->file_handle, 4377) - {'file'}
	PHPRetrievalDetector.fread($this->file_handle, 4377) - {'file'}
	PHPRetrievalDetector.file_get_contents(QNAP_LOG_PATH) - {'file'}
none
	PHPIncludedDetector.(unknown) - set()
option
	WordPressRetrievalDetector.get_option(QNAP_ACTIVE_PLUGINS, []) - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_CRON, []) - {'option'}
	WordPressStorageDetector.update_option(QNAP_ACTIVE_PLUGINS, $current) - {'option'}
	DeletionDetector.delete_option("fs_api_cache") - {'option'}
	WordPressStorageDetector.update_option(QNAP_SECRET_KEY, $secret_key) - {'option'}
	DeletionDetector.delete_option(QNAP_ACTIVE_PLUGINS) - {'option'}
	WordPressStorageDetector.delete_option("fs_dbg_accounts") - {'option'}
	DeletionDetector.delete_option("fs_debug_mode") - {'option'}
	DeletionDetector.delete_option("fs_active_plugins") - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_SECRET_KEY) - {'option'}
	WordPressStorageDetector.delete_option("fs_active_plugins") - {'option'}
	WordPressRetrievalDetector.get_option("fs_accounts", []) - {'option'}
	WordPressStorageDetector.update_option(QNAP_UPLOADS_PATH, $uploads_path) - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_SECRET_KEY) - {'option'}
	UninstallDetector.delete_option(QNAP_STATUS) - {'option'}
	WordPressStorageDetector.update_option(QNAP_AUTH_PASSWORD, $auth_password) - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_SECRET_KEY) - {'option'}
	WordPressStorageDetector.delete_option(QNAP_AUTH_PASSWORD) - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_BACKUPS_LABELS, []) - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_ACTIVE_PLUGINS, []) - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_JETPACK_ACTIVE_MODULES, []) - {'option'}
	WordPressStorageDetector.update_option(QNAP_DB_VERSION, get_option(QNAP_INITIAL_DB_VERSION)) - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_SECRET_KEY) - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_SECRET_KEY) - {'option'}
	WordPressStorageDetector.delete_option(QNAP_STATUS) - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_SWIFT_OPTIMIZER_PLUGIN_ORGANIZER, []) - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_MESSAGES, []) - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_ACTIVE_TEMPLATE) - {'option'}
	DeletionDetector.delete_option(QNAP_SECRET_KEY) - {'option'}
	WordPressStorageDetector.update_option(QNAP_ACTIVE_STYLESHEET, $stylesheet) - {'option'}
	UninstallDetector.delete_option(QNAP_AUTH_PASSWORD) - {'option'}
	WordPressStorageDetector.update_option(QNAP_SWIFT_OPTIMIZER_PLUGIN_ORGANIZER, $current) - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_SECRET_KEY) - {'option'}
	WordPressStorageDetector.update_option(QNAP_ACTIVE_TEMPLATE, $template) - {'option'}
	WordPressStorageDetector.update_option(QNAP_SITE_URL, $site_url) - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_SECRET_KEY) - {'option'}
	WordPressRetrievalDetector.get_option("admin_email", false) - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_SECRET_KEY) - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_CRON, []) - {'option'}
	WordPressRetrievalDetector.get_option("upload_url_path") - {'option'}
	WordPressStorageDetector.update_option(QNAP_BACKUPS_LABELS, $backups_labels) - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_SECRET_KEY) - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_BACKUPS_LABELS, []) - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_HOME_URL) - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_MESSAGES, []) - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_SECRET_KEY) - {'option'}
	WordPressStorageDetector.update_option(QNAP_JETPACK_ACTIVE_MODULES, $current) - {'option'}
	DeletionDetector.delete_option(QNAP_AUTH_PASSWORD) - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_SECRET_KEY) - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_SITES_LINKS, []) - {'option'}
	WordPressStorageDetector.update_option(QNAP_BACKUPS_LABELS, $labels) - {'option'}
	WordPressStorageDetector.delete_option("fs_dbg_api_cache") - {'option'}
	WordPressStorageDetector.update_option(QNAP_CRON, $cron) - {'option'}
	DeletionDetector.delete_option("elementor-custom-breakpoints-files") - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_DB_VERSION) - {'option'}
	WordPressRetrievalDetector.get_option("admin_email", false) - {'option'}
	WordPressRetrievalDetector.get_option("upload_path") - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_ACTIVE_PLUGINS, []) - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_SECRET_KEY) - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_INITIAL_DB_VERSION) - {'option'}
	DeletionDetector.delete_option("_elementor_global_css") - {'option'}
	WordPressStorageDetector.update_option(QNAP_MESSAGES, $messages) - {'option'}
	WordPressStorageDetector.delete_option("fs_debug_mode") - {'option'}
	WordPressStorageDetector.delete_option(QNAP_SECRET_KEY) - {'option'}
	WordPressStorageDetector.update_option(QNAP_SITES_LINKS, $sites_links) - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_SECRET_KEY) - {'option'}
	WordPressRetrievalDetector.get_option("siteurl") - {'option'}
	WordPressStorageDetector.update_option(QNAP_MESSAGES, array_merge($messages, [$type => $message])) - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_AUTH_USER) - {'option'}
	WordPressStorageDetector.update_option(QNAP_AUTH_USER, $auth_user) - {'option'}
	DeletionDetector.delete_option("fs_dbg_accounts") - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_SECRET_KEY) - {'option'}
	WordPressStorageDetector.update_option(QNAP_BACKUPS_LABELS, $labels) - {'option'}
	DeletionDetector.delete_option(QNAP_AUTH_USER) - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_SITE_URL) - {'option'}
	DeletionDetector.delete_option("fs_accounts") - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_AUTH_USER) - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_AUTH_PASSWORD) - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_ACTIVE_STYLESHEET) - {'option'}
	WordPressStorageDetector.update_option(QNAP_ACTIVE_PLUGINS, $current) - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_BACKUPS_LABELS, []) - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_AUTH_PASSWORD) - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_SECRET_KEY) - {'option'}
	WordPressRetrievalDetector.get_option("upload_path") - {'option'}
	WordPressStorageDetector.update_option(QNAP_STATUS, $data) - {'option'}
	WordPressStorageDetector.update_option(QNAP_UPLOADS_URL_PATH, $uploads_url_path) - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_AUTH_USER) - {'option'}
	WordPressStorageDetector.update_option("fs_accounts", $fs_accounts) - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_SECRET_KEY) - {'option'}
	WordPressStorageDetector.delete_option("_elementor_global_css") - {'option'}
	WordPressStorageDetector.update_option(QNAP_SECRET_KEY, qnap_generate_random_string(64)) - {'option'}
	WordPressStorageDetector.delete_option(QNAP_AUTH_USER) - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_BACKUPS_LABELS, []) - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_SECRET_KEY) - {'option'}
	DeletionDetector.delete_option(QNAP_STATUS) - {'option'}
	WordPressRetrievalDetector.get_option("upload_url_path") - {'option'}
	UninstallDetector.delete_option(QNAP_AUTH_USER) - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_SECRET_KEY) - {'option'}
	WordPressStorageDetector.delete_option(QNAP_ACTIVE_PLUGINS) - {'option'}
	WordPressStorageDetector.delete_option("fs_accounts") - {'option'}
	DeletionDetector.delete_option("fs_dbg_api_cache") - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_SECRET_KEY) - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_AUTH_PASSWORD) - {'option'}
	UninstallDetector.delete_option(QNAP_SECRET_KEY) - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_AUTH_PASSWORD) - {'option'}
	WordPressStorageDetector.update_option(QNAP_HOME_URL, $home_url) - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_AUTH_USER) - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_MESSAGES, []) - {'option'}
	WordPressStorageDetector.delete_option("fs_api_cache") - {'option'}
	WordPressStorageDetector.delete_option("elementor-custom-breakpoints-files") - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_UPLOADS_URL_PATH) - {'option'}
	WordPressRetrievalDetector.get_option(QNAP_UPLOADS_PATH) - {'option'}
password
	VariableDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
post_meta
	WordPressStorageDetector.delete_post_meta_by_key("_elementor_css") - {'post_meta'}
remote
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
user
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
user_meta
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:26.448375.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 2326 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.601542.

1000 STORE_REACHES edges created
2000 STORE_REACHES edges created
2326 STORE_REACHES edges created
2326 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 309 nodes as PERSONAL
In total, tainted 309 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 1 nodes as ENCRYPTED
In total, tainted 1 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:10.905545.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:03:52.112639!
DELETION call to delete_option("_elementor_global_css") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("elementor-custom-breakpoints-files") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option(QNAP_ACTIVE_PLUGINS) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("fs_accounts") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("fs_dbg_accounts") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("fs_active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("fs_api_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("fs_dbg_api_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("fs_debug_mode") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option(QNAP_STATUS) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option(QNAP_AUTH_USER) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option(QNAP_AUTH_PASSWORD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
MD5 called with parameters [content]. Ignore if [content] does not contain personal information.,md5,None
RETRIEVAL call to fread($handle, $filesize).,None,None
RETRIEVAL call to fgetc($file_handle).,None,None
RETRIEVAL call to file_get_contents(QNAP_WORDPRESS_HTACCESS).,None,None
RETRIEVAL call to file_get_contents(QNAP_WORDPRESS_WEBCONFIG).,None,None
RETRIEVAL call to fgets($content_list).,None,None
RETRIEVAL call to fgets($tables_list).,None,None
RETRIEVAL call to fgets($media_list).,None,None
RETRIEVAL call to fread($this->file_handle, 4377).,None,None
RETRIEVAL call to fread($file_handle, 512000).,None,None
RETRIEVAL call to fread($this->file_handle, 4377).,None,None
RETRIEVAL call to fread($this->file_handle, 4377).,None,None
RETRIEVAL call to fgetc($this->file_handle).,None,None
RETRIEVAL call to fread($this->file_handle, 4377).,None,None
RETRIEVAL call to fgetc($this->file_handle).,None,None
RETRIEVAL call to fread($this->file_handle, $chunk_size).,None,None
RETRIEVAL call to fread($this->file_handle, 4377).,None,None
RETRIEVAL call to fgets($file_handler).,None,None
RETRIEVAL call to file_get_contents(QNAP_LOG_PATH).,None,None
STORAGE call to fwrite($handle, $content).,None,None
STORAGE call to fwrite($this->file_handle, $this->eof).,None,None
STORAGE call to fwrite($this->file_handle, $block).,None,None
STORAGE call to fwrite($this->file_handle, $block).,None,None
STORAGE call to fwrite($this->file_handle, $file_content).,None,None
STORAGE call to fwrite($file_handle, $file_content).,None,None
STORAGE call to touch($file_name, $file_mtime).,None,None
STORAGE call to touch($path).,None,None
STORAGE call to fwrite($handle, $content).,None,None
STORAGE call to file_put_contents(QNAP_LOG_PATH, $str).,None,None
Uninstall deletion call: DELETION call to delete_option(QNAP_STATUS) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option(QNAP_AUTH_USER) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option(QNAP_AUTH_PASSWORD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$auth_password' of personal types {'password'} is found.,,None
variable '$auth_password' of personal types {'password'} is found.,,None
API call to wp_remote_post(apply_filters("qnap_http_export_url", add_query_arg(["qnap_import" => 1], admin_url("admin-ajax.php?action=qnap_export"))), ["timeout" => apply_filters("qnap_http_export_timeout", 10), "blocking" => apply_filters("qnap_http_export_blocking", false), "sslverify" => apply_filters("qnap_http_export_sslverify", false), "headers" => apply_filters("qnap_http_export_headers", []), "body" => apply_filters("qnap_http_export_body", $params)]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_post(apply_filters("qnap_http_import_url", add_query_arg(["qnap_import" => 1], admin_url("admin-ajax.php?action=qnap_import"))), ["timeout" => apply_filters("qnap_http_import_timeout", 10), "blocking" => apply_filters("qnap_http_import_blocking", false), "sslverify" => apply_filters("qnap_http_import_sslverify", false), "headers" => apply_filters("qnap_http_import_headers", []), "body" => apply_filters("qnap_http_import_body", $params)]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
RETRIEVAL call to get_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_ACTIVE_PLUGINS, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_ACTIVE_PLUGINS, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_ACTIVE_TEMPLATE) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_ACTIVE_STYLESHEET) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_ACTIVE_PLUGINS, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_JETPACK_ACTIVE_MODULES, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_SWIFT_OPTIMIZER_PLUGIN_ORGANIZER, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_DB_VERSION) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_INITIAL_DB_VERSION) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_AUTH_USER) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_AUTH_PASSWORD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_AUTH_USER) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_AUTH_PASSWORD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_AUTH_PASSWORD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_AUTH_USER) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_BACKUPS_LABELS, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_BACKUPS_LABELS, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_BACKUPS_LABELS, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_MESSAGES, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_MESSAGES, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_MESSAGES, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("admin_email", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("admin_email", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("upload_path") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("upload_url_path") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("upload_path") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("upload_url_path") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_SITE_URL) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_HOME_URL) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_AUTH_USER) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_AUTH_PASSWORD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_UPLOADS_PATH) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_UPLOADS_URL_PATH) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_BACKUPS_LABELS, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_SITES_LINKS, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("fs_accounts", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_CRON, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option(QNAP_CRON, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("siteurl") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
STORAGE call to delete_post_meta_by_key("_elementor_css") alters data types {'post_meta'}. Passed arguments: 0: $post_meta_key (string). Returns (bool).,None,None
STORAGE call to delete_option("_elementor_global_css") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("elementor-custom-breakpoints-files") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option(QNAP_ACTIVE_PLUGINS, $current) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(QNAP_ACTIVE_TEMPLATE, $template) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(QNAP_ACTIVE_STYLESHEET, $stylesheet) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(QNAP_ACTIVE_PLUGINS, $current) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(QNAP_JETPACK_ACTIVE_MODULES, $current) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(QNAP_SWIFT_OPTIMIZER_PLUGIN_ORGANIZER, $current) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(QNAP_DB_VERSION, get_option(QNAP_INITIAL_DB_VERSION)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(QNAP_SECRET_KEY, qnap_generate_random_string(64)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(QNAP_BACKUPS_LABELS, $labels) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(QNAP_BACKUPS_LABELS, $labels) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(QNAP_MESSAGES, array_merge($messages, [$type => $message])) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(QNAP_MESSAGES, $messages) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(QNAP_STATUS, $data) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(QNAP_AUTH_PASSWORD, $auth_password) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(QNAP_UPLOADS_PATH, $uploads_path) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(QNAP_UPLOADS_URL_PATH, $uploads_url_path) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(QNAP_BACKUPS_LABELS, $backups_labels) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(QNAP_SITES_LINKS, $sites_links) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option(QNAP_ACTIVE_PLUGINS) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option(QNAP_SITE_URL, $site_url) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(QNAP_HOME_URL, $home_url) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(QNAP_SECRET_KEY, $secret_key) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(QNAP_AUTH_USER, $auth_user) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("fs_accounts", $fs_accounts) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("fs_accounts") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("fs_dbg_accounts") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("fs_active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("fs_api_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("fs_dbg_api_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("fs_debug_mode") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option(QNAP_CRON, $cron) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option(QNAP_STATUS) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option(QNAP_SECRET_KEY) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option(QNAP_AUTH_USER) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option(QNAP_AUTH_PASSWORD) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] PII of types (['password']) stored through WordPress function "update_option(QNAP_ACTIVE_PLUGINS, $current)", found in file functions.php at line 838. 

[has_storage] PII of types (['password']) stored through WordPress function "update_option(QNAP_SECRET_KEY, $secret_key)", found in file lib/model/import/class-qnap-import-database.php at line 995. 

[has_storage] PII of types (['password']) stored through WordPress function "update_option(QNAP_UPLOADS_PATH, $uploads_path)", found in file lib/model/import/class-qnap-import-database.php at line 1004. 

[has_storage] PII of types (['password']) stored through WordPress function "update_option(QNAP_AUTH_PASSWORD, $auth_password)", found in file lib/model/import/class-qnap-import-database.php at line 1001. 

[has_storage] PII of types (['password']) stored through WordPress function "update_option(QNAP_DB_VERSION, get_option(QNAP_INITIAL_DB_VERSION))", found in file functions.php at line 971. 

[has_storage] PII of types (['password']) stored through WordPress function "update_option(QNAP_SWIFT_OPTIMIZER_PLUGIN_ORGANIZER, $current)", found in file functions.php at line 931. 

[has_storage] PII of types (['password']) stored through WordPress function "update_option(QNAP_SITE_URL, $site_url)", found in file lib/model/import/class-qnap-import-database.php at line 989. 

[has_storage] PII of types (['password']) stored through WordPress function "update_option(QNAP_BACKUPS_LABELS, $backups_labels)", found in file lib/model/import/class-qnap-import-database.php at line 1010. 

[has_storage] PII of types (['password']) stored through WordPress function "update_option(QNAP_JETPACK_ACTIVE_MODULES, $current)", found in file functions.php at line 914. 

[has_storage] PII of types (['password']) stored through WordPress function "update_option(QNAP_BACKUPS_LABELS, $labels)", found in file lib/model/class-qnap-backups.php at line 113. 

[has_storage] PII of types (['password']) stored through WordPress function "update_option(QNAP_CRON, $cron)", found in file lib/vendor/qeek/cron/class-qnap-cron.php at line 59. 

[has_storage] PII of types (['password']) stored through WordPress function "update_option(QNAP_MESSAGES, $messages)", found in file lib/model/class-qnap-message.php at line 36. 

[has_storage] PII of types (['password']) stored through WordPress function "update_option(QNAP_SITES_LINKS, $sites_links)", found in file lib/model/import/class-qnap-import-database.php at line 1013. 

[has_storage] PII of types (['password']) stored through WordPress function "update_option(QNAP_MESSAGES, array_merge($messages, [$type => $message]))", found in file lib/model/class-qnap-message.php at line 12. 

[has_storage] PII of types (['password']) stored through WordPress function "update_option(QNAP_AUTH_USER, $auth_user)", found in file lib/model/import/class-qnap-import-database.php at line 998. 

[has_storage] PII of types (['password']) stored through WordPress function "update_option(QNAP_BACKUPS_LABELS, $labels)", found in file lib/model/class-qnap-backups.php at line 99. 

[has_storage] PII of types (['password']) stored through WordPress function "update_option(QNAP_ACTIVE_PLUGINS, $current)", found in file functions.php at line 895. 

[has_storage] PII of types (['password']) stored through WordPress function "update_option(QNAP_UPLOADS_URL_PATH, $uploads_url_path)", found in file lib/model/import/class-qnap-import-database.php at line 1007. 

[has_storage] PII of types (['password']) stored through WordPress function "update_option("fs_accounts", $fs_accounts)", found in file lib/model/import/class-qnap-import-plugins.php at line 45. 

[has_storage] PII of types (['password']) stored through WordPress function "update_option(QNAP_HOME_URL, $home_url)", found in file lib/model/import/class-qnap-import-database.php at line 992. 

[has_storage] Storage check is WP 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_ACTIVE_PLUGINS, $current) has deletion method delete_option("_elementor_global_css"). Storage method found in file functions.php at line 838. Deletion method found in file functions.php at line 1073. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_ACTIVE_PLUGINS, $current) has deletion method delete_option("elementor-custom-breakpoints-files"). Storage method found in file functions.php at line 838. Deletion method found in file functions.php at line 1074. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_ACTIVE_PLUGINS, $current) has deletion method delete_option(QNAP_ACTIVE_PLUGINS). Storage method found in file functions.php at line 838. Deletion method found in file lib/model/import/class-qnap-import-database.php at line 980. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_ACTIVE_PLUGINS, $current) has deletion method delete_option("fs_accounts"). Storage method found in file functions.php at line 838. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 47. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_ACTIVE_PLUGINS, $current) has deletion method delete_option("fs_dbg_accounts"). Storage method found in file functions.php at line 838. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 48. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_ACTIVE_PLUGINS, $current) has deletion method delete_option("fs_active_plugins"). Storage method found in file functions.php at line 838. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 49. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_ACTIVE_PLUGINS, $current) has deletion method delete_option("fs_api_cache"). Storage method found in file functions.php at line 838. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_ACTIVE_PLUGINS, $current) has deletion method delete_option("fs_dbg_api_cache"). Storage method found in file functions.php at line 838. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_ACTIVE_PLUGINS, $current) has deletion method delete_option("fs_debug_mode"). Storage method found in file functions.php at line 838. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_ACTIVE_PLUGINS, $current) has deletion method delete_option(QNAP_STATUS). Storage method found in file functions.php at line 838. Deletion method found in file uninstall.php at line 20. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_ACTIVE_PLUGINS, $current) has deletion method delete_option(QNAP_SECRET_KEY). Storage method found in file functions.php at line 838. Deletion method found in file uninstall.php at line 21. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_ACTIVE_PLUGINS, $current) has deletion method delete_option(QNAP_AUTH_USER). Storage method found in file functions.php at line 838. Deletion method found in file uninstall.php at line 22. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_ACTIVE_PLUGINS, $current) has deletion method delete_option(QNAP_AUTH_PASSWORD). Storage method found in file functions.php at line 838. Deletion method found in file uninstall.php at line 23. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SECRET_KEY, $secret_key) has deletion method delete_option("_elementor_global_css"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 995. Deletion method found in file functions.php at line 1073. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SECRET_KEY, $secret_key) has deletion method delete_option("elementor-custom-breakpoints-files"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 995. Deletion method found in file functions.php at line 1074. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SECRET_KEY, $secret_key) has deletion method delete_option(QNAP_ACTIVE_PLUGINS). Storage method found in file lib/model/import/class-qnap-import-database.php at line 995. Deletion method found in file lib/model/import/class-qnap-import-database.php at line 980. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SECRET_KEY, $secret_key) has deletion method delete_option("fs_accounts"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 995. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 47. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SECRET_KEY, $secret_key) has deletion method delete_option("fs_dbg_accounts"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 995. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 48. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SECRET_KEY, $secret_key) has deletion method delete_option("fs_active_plugins"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 995. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 49. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SECRET_KEY, $secret_key) has deletion method delete_option("fs_api_cache"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 995. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SECRET_KEY, $secret_key) has deletion method delete_option("fs_dbg_api_cache"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 995. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SECRET_KEY, $secret_key) has deletion method delete_option("fs_debug_mode"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 995. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SECRET_KEY, $secret_key) has deletion method delete_option(QNAP_STATUS). Storage method found in file lib/model/import/class-qnap-import-database.php at line 995. Deletion method found in file uninstall.php at line 20. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SECRET_KEY, $secret_key) has deletion method delete_option(QNAP_SECRET_KEY). Storage method found in file lib/model/import/class-qnap-import-database.php at line 995. Deletion method found in file uninstall.php at line 21. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SECRET_KEY, $secret_key) has deletion method delete_option(QNAP_AUTH_USER). Storage method found in file lib/model/import/class-qnap-import-database.php at line 995. Deletion method found in file uninstall.php at line 22. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SECRET_KEY, $secret_key) has deletion method delete_option(QNAP_AUTH_PASSWORD). Storage method found in file lib/model/import/class-qnap-import-database.php at line 995. Deletion method found in file uninstall.php at line 23. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_UPLOADS_PATH, $uploads_path) has deletion method delete_option("_elementor_global_css"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1004. Deletion method found in file functions.php at line 1073. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_UPLOADS_PATH, $uploads_path) has deletion method delete_option("elementor-custom-breakpoints-files"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1004. Deletion method found in file functions.php at line 1074. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_UPLOADS_PATH, $uploads_path) has deletion method delete_option(QNAP_ACTIVE_PLUGINS). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1004. Deletion method found in file lib/model/import/class-qnap-import-database.php at line 980. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_UPLOADS_PATH, $uploads_path) has deletion method delete_option("fs_accounts"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1004. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 47. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_UPLOADS_PATH, $uploads_path) has deletion method delete_option("fs_dbg_accounts"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1004. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 48. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_UPLOADS_PATH, $uploads_path) has deletion method delete_option("fs_active_plugins"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1004. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 49. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_UPLOADS_PATH, $uploads_path) has deletion method delete_option("fs_api_cache"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1004. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_UPLOADS_PATH, $uploads_path) has deletion method delete_option("fs_dbg_api_cache"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1004. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_UPLOADS_PATH, $uploads_path) has deletion method delete_option("fs_debug_mode"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1004. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_UPLOADS_PATH, $uploads_path) has deletion method delete_option(QNAP_STATUS). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1004. Deletion method found in file uninstall.php at line 20. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_UPLOADS_PATH, $uploads_path) has deletion method delete_option(QNAP_SECRET_KEY). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1004. Deletion method found in file uninstall.php at line 21. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_UPLOADS_PATH, $uploads_path) has deletion method delete_option(QNAP_AUTH_USER). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1004. Deletion method found in file uninstall.php at line 22. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_UPLOADS_PATH, $uploads_path) has deletion method delete_option(QNAP_AUTH_PASSWORD). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1004. Deletion method found in file uninstall.php at line 23. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_AUTH_PASSWORD, $auth_password) has deletion method delete_option("_elementor_global_css"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1001. Deletion method found in file functions.php at line 1073. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_AUTH_PASSWORD, $auth_password) has deletion method delete_option("elementor-custom-breakpoints-files"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1001. Deletion method found in file functions.php at line 1074. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_AUTH_PASSWORD, $auth_password) has deletion method delete_option(QNAP_ACTIVE_PLUGINS). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1001. Deletion method found in file lib/model/import/class-qnap-import-database.php at line 980. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_AUTH_PASSWORD, $auth_password) has deletion method delete_option("fs_accounts"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1001. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 47. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_AUTH_PASSWORD, $auth_password) has deletion method delete_option("fs_dbg_accounts"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1001. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 48. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_AUTH_PASSWORD, $auth_password) has deletion method delete_option("fs_active_plugins"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1001. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 49. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_AUTH_PASSWORD, $auth_password) has deletion method delete_option("fs_api_cache"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1001. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_AUTH_PASSWORD, $auth_password) has deletion method delete_option("fs_dbg_api_cache"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1001. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_AUTH_PASSWORD, $auth_password) has deletion method delete_option("fs_debug_mode"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1001. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_AUTH_PASSWORD, $auth_password) has deletion method delete_option(QNAP_STATUS). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1001. Deletion method found in file uninstall.php at line 20. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_AUTH_PASSWORD, $auth_password) has deletion method delete_option(QNAP_SECRET_KEY). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1001. Deletion method found in file uninstall.php at line 21. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_AUTH_PASSWORD, $auth_password) has deletion method delete_option(QNAP_AUTH_USER). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1001. Deletion method found in file uninstall.php at line 22. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_AUTH_PASSWORD, $auth_password) has deletion method delete_option(QNAP_AUTH_PASSWORD). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1001. Deletion method found in file uninstall.php at line 23. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_DB_VERSION, get_option(QNAP_INITIAL_DB_VERSION)) has deletion method delete_option("_elementor_global_css"). Storage method found in file functions.php at line 971. Deletion method found in file functions.php at line 1073. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_DB_VERSION, get_option(QNAP_INITIAL_DB_VERSION)) has deletion method delete_option("elementor-custom-breakpoints-files"). Storage method found in file functions.php at line 971. Deletion method found in file functions.php at line 1074. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_DB_VERSION, get_option(QNAP_INITIAL_DB_VERSION)) has deletion method delete_option(QNAP_ACTIVE_PLUGINS). Storage method found in file functions.php at line 971. Deletion method found in file lib/model/import/class-qnap-import-database.php at line 980. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_DB_VERSION, get_option(QNAP_INITIAL_DB_VERSION)) has deletion method delete_option("fs_accounts"). Storage method found in file functions.php at line 971. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 47. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_DB_VERSION, get_option(QNAP_INITIAL_DB_VERSION)) has deletion method delete_option("fs_dbg_accounts"). Storage method found in file functions.php at line 971. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 48. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_DB_VERSION, get_option(QNAP_INITIAL_DB_VERSION)) has deletion method delete_option("fs_active_plugins"). Storage method found in file functions.php at line 971. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 49. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_DB_VERSION, get_option(QNAP_INITIAL_DB_VERSION)) has deletion method delete_option("fs_api_cache"). Storage method found in file functions.php at line 971. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_DB_VERSION, get_option(QNAP_INITIAL_DB_VERSION)) has deletion method delete_option("fs_dbg_api_cache"). Storage method found in file functions.php at line 971. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_DB_VERSION, get_option(QNAP_INITIAL_DB_VERSION)) has deletion method delete_option("fs_debug_mode"). Storage method found in file functions.php at line 971. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_DB_VERSION, get_option(QNAP_INITIAL_DB_VERSION)) has deletion method delete_option(QNAP_STATUS). Storage method found in file functions.php at line 971. Deletion method found in file uninstall.php at line 20. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_DB_VERSION, get_option(QNAP_INITIAL_DB_VERSION)) has deletion method delete_option(QNAP_SECRET_KEY). Storage method found in file functions.php at line 971. Deletion method found in file uninstall.php at line 21. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_DB_VERSION, get_option(QNAP_INITIAL_DB_VERSION)) has deletion method delete_option(QNAP_AUTH_USER). Storage method found in file functions.php at line 971. Deletion method found in file uninstall.php at line 22. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_DB_VERSION, get_option(QNAP_INITIAL_DB_VERSION)) has deletion method delete_option(QNAP_AUTH_PASSWORD). Storage method found in file functions.php at line 971. Deletion method found in file uninstall.php at line 23. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SWIFT_OPTIMIZER_PLUGIN_ORGANIZER, $current) has deletion method delete_option("_elementor_global_css"). Storage method found in file functions.php at line 931. Deletion method found in file functions.php at line 1073. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SWIFT_OPTIMIZER_PLUGIN_ORGANIZER, $current) has deletion method delete_option("elementor-custom-breakpoints-files"). Storage method found in file functions.php at line 931. Deletion method found in file functions.php at line 1074. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SWIFT_OPTIMIZER_PLUGIN_ORGANIZER, $current) has deletion method delete_option(QNAP_ACTIVE_PLUGINS). Storage method found in file functions.php at line 931. Deletion method found in file lib/model/import/class-qnap-import-database.php at line 980. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SWIFT_OPTIMIZER_PLUGIN_ORGANIZER, $current) has deletion method delete_option("fs_accounts"). Storage method found in file functions.php at line 931. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 47. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SWIFT_OPTIMIZER_PLUGIN_ORGANIZER, $current) has deletion method delete_option("fs_dbg_accounts"). Storage method found in file functions.php at line 931. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 48. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SWIFT_OPTIMIZER_PLUGIN_ORGANIZER, $current) has deletion method delete_option("fs_active_plugins"). Storage method found in file functions.php at line 931. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 49. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SWIFT_OPTIMIZER_PLUGIN_ORGANIZER, $current) has deletion method delete_option("fs_api_cache"). Storage method found in file functions.php at line 931. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SWIFT_OPTIMIZER_PLUGIN_ORGANIZER, $current) has deletion method delete_option("fs_dbg_api_cache"). Storage method found in file functions.php at line 931. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SWIFT_OPTIMIZER_PLUGIN_ORGANIZER, $current) has deletion method delete_option("fs_debug_mode"). Storage method found in file functions.php at line 931. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SWIFT_OPTIMIZER_PLUGIN_ORGANIZER, $current) has deletion method delete_option(QNAP_STATUS). Storage method found in file functions.php at line 931. Deletion method found in file uninstall.php at line 20. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SWIFT_OPTIMIZER_PLUGIN_ORGANIZER, $current) has deletion method delete_option(QNAP_SECRET_KEY). Storage method found in file functions.php at line 931. Deletion method found in file uninstall.php at line 21. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SWIFT_OPTIMIZER_PLUGIN_ORGANIZER, $current) has deletion method delete_option(QNAP_AUTH_USER). Storage method found in file functions.php at line 931. Deletion method found in file uninstall.php at line 22. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SWIFT_OPTIMIZER_PLUGIN_ORGANIZER, $current) has deletion method delete_option(QNAP_AUTH_PASSWORD). Storage method found in file functions.php at line 931. Deletion method found in file uninstall.php at line 23. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SITE_URL, $site_url) has deletion method delete_option("_elementor_global_css"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 989. Deletion method found in file functions.php at line 1073. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SITE_URL, $site_url) has deletion method delete_option("elementor-custom-breakpoints-files"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 989. Deletion method found in file functions.php at line 1074. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SITE_URL, $site_url) has deletion method delete_option(QNAP_ACTIVE_PLUGINS). Storage method found in file lib/model/import/class-qnap-import-database.php at line 989. Deletion method found in file lib/model/import/class-qnap-import-database.php at line 980. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SITE_URL, $site_url) has deletion method delete_option("fs_accounts"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 989. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 47. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SITE_URL, $site_url) has deletion method delete_option("fs_dbg_accounts"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 989. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 48. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SITE_URL, $site_url) has deletion method delete_option("fs_active_plugins"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 989. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 49. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SITE_URL, $site_url) has deletion method delete_option("fs_api_cache"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 989. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SITE_URL, $site_url) has deletion method delete_option("fs_dbg_api_cache"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 989. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SITE_URL, $site_url) has deletion method delete_option("fs_debug_mode"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 989. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SITE_URL, $site_url) has deletion method delete_option(QNAP_STATUS). Storage method found in file lib/model/import/class-qnap-import-database.php at line 989. Deletion method found in file uninstall.php at line 20. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SITE_URL, $site_url) has deletion method delete_option(QNAP_SECRET_KEY). Storage method found in file lib/model/import/class-qnap-import-database.php at line 989. Deletion method found in file uninstall.php at line 21. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SITE_URL, $site_url) has deletion method delete_option(QNAP_AUTH_USER). Storage method found in file lib/model/import/class-qnap-import-database.php at line 989. Deletion method found in file uninstall.php at line 22. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SITE_URL, $site_url) has deletion method delete_option(QNAP_AUTH_PASSWORD). Storage method found in file lib/model/import/class-qnap-import-database.php at line 989. Deletion method found in file uninstall.php at line 23. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_BACKUPS_LABELS, $backups_labels) has deletion method delete_option("_elementor_global_css"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1010. Deletion method found in file functions.php at line 1073. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_BACKUPS_LABELS, $backups_labels) has deletion method delete_option("elementor-custom-breakpoints-files"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1010. Deletion method found in file functions.php at line 1074. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_BACKUPS_LABELS, $backups_labels) has deletion method delete_option(QNAP_ACTIVE_PLUGINS). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1010. Deletion method found in file lib/model/import/class-qnap-import-database.php at line 980. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_BACKUPS_LABELS, $backups_labels) has deletion method delete_option("fs_accounts"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1010. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 47. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_BACKUPS_LABELS, $backups_labels) has deletion method delete_option("fs_dbg_accounts"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1010. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 48. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_BACKUPS_LABELS, $backups_labels) has deletion method delete_option("fs_active_plugins"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1010. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 49. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_BACKUPS_LABELS, $backups_labels) has deletion method delete_option("fs_api_cache"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1010. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_BACKUPS_LABELS, $backups_labels) has deletion method delete_option("fs_dbg_api_cache"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1010. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_BACKUPS_LABELS, $backups_labels) has deletion method delete_option("fs_debug_mode"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1010. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_BACKUPS_LABELS, $backups_labels) has deletion method delete_option(QNAP_STATUS). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1010. Deletion method found in file uninstall.php at line 20. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_BACKUPS_LABELS, $backups_labels) has deletion method delete_option(QNAP_SECRET_KEY). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1010. Deletion method found in file uninstall.php at line 21. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_BACKUPS_LABELS, $backups_labels) has deletion method delete_option(QNAP_AUTH_USER). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1010. Deletion method found in file uninstall.php at line 22. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_BACKUPS_LABELS, $backups_labels) has deletion method delete_option(QNAP_AUTH_PASSWORD). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1010. Deletion method found in file uninstall.php at line 23. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_JETPACK_ACTIVE_MODULES, $current) has deletion method delete_option("_elementor_global_css"). Storage method found in file functions.php at line 914. Deletion method found in file functions.php at line 1073. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_JETPACK_ACTIVE_MODULES, $current) has deletion method delete_option("elementor-custom-breakpoints-files"). Storage method found in file functions.php at line 914. Deletion method found in file functions.php at line 1074. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_JETPACK_ACTIVE_MODULES, $current) has deletion method delete_option(QNAP_ACTIVE_PLUGINS). Storage method found in file functions.php at line 914. Deletion method found in file lib/model/import/class-qnap-import-database.php at line 980. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_JETPACK_ACTIVE_MODULES, $current) has deletion method delete_option("fs_accounts"). Storage method found in file functions.php at line 914. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 47. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_JETPACK_ACTIVE_MODULES, $current) has deletion method delete_option("fs_dbg_accounts"). Storage method found in file functions.php at line 914. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 48. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_JETPACK_ACTIVE_MODULES, $current) has deletion method delete_option("fs_active_plugins"). Storage method found in file functions.php at line 914. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 49. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_JETPACK_ACTIVE_MODULES, $current) has deletion method delete_option("fs_api_cache"). Storage method found in file functions.php at line 914. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_JETPACK_ACTIVE_MODULES, $current) has deletion method delete_option("fs_dbg_api_cache"). Storage method found in file functions.php at line 914. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_JETPACK_ACTIVE_MODULES, $current) has deletion method delete_option("fs_debug_mode"). Storage method found in file functions.php at line 914. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_JETPACK_ACTIVE_MODULES, $current) has deletion method delete_option(QNAP_STATUS). Storage method found in file functions.php at line 914. Deletion method found in file uninstall.php at line 20. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_JETPACK_ACTIVE_MODULES, $current) has deletion method delete_option(QNAP_SECRET_KEY). Storage method found in file functions.php at line 914. Deletion method found in file uninstall.php at line 21. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_JETPACK_ACTIVE_MODULES, $current) has deletion method delete_option(QNAP_AUTH_USER). Storage method found in file functions.php at line 914. Deletion method found in file uninstall.php at line 22. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_JETPACK_ACTIVE_MODULES, $current) has deletion method delete_option(QNAP_AUTH_PASSWORD). Storage method found in file functions.php at line 914. Deletion method found in file uninstall.php at line 23. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_BACKUPS_LABELS, $labels) has deletion method delete_option("_elementor_global_css"). Storage method found in file lib/model/class-qnap-backups.php at line 113. Deletion method found in file functions.php at line 1073. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_BACKUPS_LABELS, $labels) has deletion method delete_option("elementor-custom-breakpoints-files"). Storage method found in file lib/model/class-qnap-backups.php at line 113. Deletion method found in file functions.php at line 1074. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_BACKUPS_LABELS, $labels) has deletion method delete_option(QNAP_ACTIVE_PLUGINS). Storage method found in file lib/model/class-qnap-backups.php at line 113. Deletion method found in file lib/model/import/class-qnap-import-database.php at line 980. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_BACKUPS_LABELS, $labels) has deletion method delete_option("fs_accounts"). Storage method found in file lib/model/class-qnap-backups.php at line 113. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 47. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_BACKUPS_LABELS, $labels) has deletion method delete_option("fs_dbg_accounts"). Storage method found in file lib/model/class-qnap-backups.php at line 113. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 48. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_BACKUPS_LABELS, $labels) has deletion method delete_option("fs_active_plugins"). Storage method found in file lib/model/class-qnap-backups.php at line 113. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 49. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_BACKUPS_LABELS, $labels) has deletion method delete_option("fs_api_cache"). Storage method found in file lib/model/class-qnap-backups.php at line 113. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_BACKUPS_LABELS, $labels) has deletion method delete_option("fs_dbg_api_cache"). Storage method found in file lib/model/class-qnap-backups.php at line 113. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_BACKUPS_LABELS, $labels) has deletion method delete_option("fs_debug_mode"). Storage method found in file lib/model/class-qnap-backups.php at line 113. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_BACKUPS_LABELS, $labels) has deletion method delete_option(QNAP_STATUS). Storage method found in file lib/model/class-qnap-backups.php at line 113. Deletion method found in file uninstall.php at line 20. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_BACKUPS_LABELS, $labels) has deletion method delete_option(QNAP_SECRET_KEY). Storage method found in file lib/model/class-qnap-backups.php at line 113. Deletion method found in file uninstall.php at line 21. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_BACKUPS_LABELS, $labels) has deletion method delete_option(QNAP_AUTH_USER). Storage method found in file lib/model/class-qnap-backups.php at line 113. Deletion method found in file uninstall.php at line 22. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_BACKUPS_LABELS, $labels) has deletion method delete_option(QNAP_AUTH_PASSWORD). Storage method found in file lib/model/class-qnap-backups.php at line 113. Deletion method found in file uninstall.php at line 23. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_CRON, $cron) has deletion method delete_option("_elementor_global_css"). Storage method found in file lib/vendor/qeek/cron/class-qnap-cron.php at line 59. Deletion method found in file functions.php at line 1073. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_CRON, $cron) has deletion method delete_option("elementor-custom-breakpoints-files"). Storage method found in file lib/vendor/qeek/cron/class-qnap-cron.php at line 59. Deletion method found in file functions.php at line 1074. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_CRON, $cron) has deletion method delete_option(QNAP_ACTIVE_PLUGINS). Storage method found in file lib/vendor/qeek/cron/class-qnap-cron.php at line 59. Deletion method found in file lib/model/import/class-qnap-import-database.php at line 980. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_CRON, $cron) has deletion method delete_option("fs_accounts"). Storage method found in file lib/vendor/qeek/cron/class-qnap-cron.php at line 59. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 47. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_CRON, $cron) has deletion method delete_option("fs_dbg_accounts"). Storage method found in file lib/vendor/qeek/cron/class-qnap-cron.php at line 59. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 48. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_CRON, $cron) has deletion method delete_option("fs_active_plugins"). Storage method found in file lib/vendor/qeek/cron/class-qnap-cron.php at line 59. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 49. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_CRON, $cron) has deletion method delete_option("fs_api_cache"). Storage method found in file lib/vendor/qeek/cron/class-qnap-cron.php at line 59. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_CRON, $cron) has deletion method delete_option("fs_dbg_api_cache"). Storage method found in file lib/vendor/qeek/cron/class-qnap-cron.php at line 59. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_CRON, $cron) has deletion method delete_option("fs_debug_mode"). Storage method found in file lib/vendor/qeek/cron/class-qnap-cron.php at line 59. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_CRON, $cron) has deletion method delete_option(QNAP_STATUS). Storage method found in file lib/vendor/qeek/cron/class-qnap-cron.php at line 59. Deletion method found in file uninstall.php at line 20. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_CRON, $cron) has deletion method delete_option(QNAP_SECRET_KEY). Storage method found in file lib/vendor/qeek/cron/class-qnap-cron.php at line 59. Deletion method found in file uninstall.php at line 21. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_CRON, $cron) has deletion method delete_option(QNAP_AUTH_USER). Storage method found in file lib/vendor/qeek/cron/class-qnap-cron.php at line 59. Deletion method found in file uninstall.php at line 22. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_CRON, $cron) has deletion method delete_option(QNAP_AUTH_PASSWORD). Storage method found in file lib/vendor/qeek/cron/class-qnap-cron.php at line 59. Deletion method found in file uninstall.php at line 23. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_MESSAGES, $messages) has deletion method delete_option("_elementor_global_css"). Storage method found in file lib/model/class-qnap-message.php at line 36. Deletion method found in file functions.php at line 1073. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_MESSAGES, $messages) has deletion method delete_option("elementor-custom-breakpoints-files"). Storage method found in file lib/model/class-qnap-message.php at line 36. Deletion method found in file functions.php at line 1074. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_MESSAGES, $messages) has deletion method delete_option(QNAP_ACTIVE_PLUGINS). Storage method found in file lib/model/class-qnap-message.php at line 36. Deletion method found in file lib/model/import/class-qnap-import-database.php at line 980. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_MESSAGES, $messages) has deletion method delete_option("fs_accounts"). Storage method found in file lib/model/class-qnap-message.php at line 36. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 47. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_MESSAGES, $messages) has deletion method delete_option("fs_dbg_accounts"). Storage method found in file lib/model/class-qnap-message.php at line 36. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 48. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_MESSAGES, $messages) has deletion method delete_option("fs_active_plugins"). Storage method found in file lib/model/class-qnap-message.php at line 36. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 49. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_MESSAGES, $messages) has deletion method delete_option("fs_api_cache"). Storage method found in file lib/model/class-qnap-message.php at line 36. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_MESSAGES, $messages) has deletion method delete_option("fs_dbg_api_cache"). Storage method found in file lib/model/class-qnap-message.php at line 36. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_MESSAGES, $messages) has deletion method delete_option("fs_debug_mode"). Storage method found in file lib/model/class-qnap-message.php at line 36. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_MESSAGES, $messages) has deletion method delete_option(QNAP_STATUS). Storage method found in file lib/model/class-qnap-message.php at line 36. Deletion method found in file uninstall.php at line 20. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_MESSAGES, $messages) has deletion method delete_option(QNAP_SECRET_KEY). Storage method found in file lib/model/class-qnap-message.php at line 36. Deletion method found in file uninstall.php at line 21. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_MESSAGES, $messages) has deletion method delete_option(QNAP_AUTH_USER). Storage method found in file lib/model/class-qnap-message.php at line 36. Deletion method found in file uninstall.php at line 22. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_MESSAGES, $messages) has deletion method delete_option(QNAP_AUTH_PASSWORD). Storage method found in file lib/model/class-qnap-message.php at line 36. Deletion method found in file uninstall.php at line 23. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SITES_LINKS, $sites_links) has deletion method delete_option("_elementor_global_css"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1013. Deletion method found in file functions.php at line 1073. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SITES_LINKS, $sites_links) has deletion method delete_option("elementor-custom-breakpoints-files"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1013. Deletion method found in file functions.php at line 1074. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SITES_LINKS, $sites_links) has deletion method delete_option(QNAP_ACTIVE_PLUGINS). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1013. Deletion method found in file lib/model/import/class-qnap-import-database.php at line 980. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SITES_LINKS, $sites_links) has deletion method delete_option("fs_accounts"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1013. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 47. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SITES_LINKS, $sites_links) has deletion method delete_option("fs_dbg_accounts"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1013. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 48. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SITES_LINKS, $sites_links) has deletion method delete_option("fs_active_plugins"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1013. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 49. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SITES_LINKS, $sites_links) has deletion method delete_option("fs_api_cache"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1013. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SITES_LINKS, $sites_links) has deletion method delete_option("fs_dbg_api_cache"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1013. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SITES_LINKS, $sites_links) has deletion method delete_option("fs_debug_mode"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1013. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SITES_LINKS, $sites_links) has deletion method delete_option(QNAP_STATUS). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1013. Deletion method found in file uninstall.php at line 20. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SITES_LINKS, $sites_links) has deletion method delete_option(QNAP_SECRET_KEY). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1013. Deletion method found in file uninstall.php at line 21. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SITES_LINKS, $sites_links) has deletion method delete_option(QNAP_AUTH_USER). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1013. Deletion method found in file uninstall.php at line 22. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_SITES_LINKS, $sites_links) has deletion method delete_option(QNAP_AUTH_PASSWORD). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1013. Deletion method found in file uninstall.php at line 23. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_MESSAGES, array_merge($messages, [$type => $message])) has deletion method delete_option("_elementor_global_css"). Storage method found in file lib/model/class-qnap-message.php at line 12. Deletion method found in file functions.php at line 1073. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_MESSAGES, array_merge($messages, [$type => $message])) has deletion method delete_option("elementor-custom-breakpoints-files"). Storage method found in file lib/model/class-qnap-message.php at line 12. Deletion method found in file functions.php at line 1074. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_MESSAGES, array_merge($messages, [$type => $message])) has deletion method delete_option(QNAP_ACTIVE_PLUGINS). Storage method found in file lib/model/class-qnap-message.php at line 12. Deletion method found in file lib/model/import/class-qnap-import-database.php at line 980. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_MESSAGES, array_merge($messages, [$type => $message])) has deletion method delete_option("fs_accounts"). Storage method found in file lib/model/class-qnap-message.php at line 12. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 47. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_MESSAGES, array_merge($messages, [$type => $message])) has deletion method delete_option("fs_dbg_accounts"). Storage method found in file lib/model/class-qnap-message.php at line 12. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 48. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_MESSAGES, array_merge($messages, [$type => $message])) has deletion method delete_option("fs_active_plugins"). Storage method found in file lib/model/class-qnap-message.php at line 12. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 49. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_MESSAGES, array_merge($messages, [$type => $message])) has deletion method delete_option("fs_api_cache"). Storage method found in file lib/model/class-qnap-message.php at line 12. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_MESSAGES, array_merge($messages, [$type => $message])) has deletion method delete_option("fs_dbg_api_cache"). Storage method found in file lib/model/class-qnap-message.php at line 12. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_MESSAGES, array_merge($messages, [$type => $message])) has deletion method delete_option("fs_debug_mode"). Storage method found in file lib/model/class-qnap-message.php at line 12. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_MESSAGES, array_merge($messages, [$type => $message])) has deletion method delete_option(QNAP_STATUS). Storage method found in file lib/model/class-qnap-message.php at line 12. Deletion method found in file uninstall.php at line 20. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_MESSAGES, array_merge($messages, [$type => $message])) has deletion method delete_option(QNAP_SECRET_KEY). Storage method found in file lib/model/class-qnap-message.php at line 12. Deletion method found in file uninstall.php at line 21. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_MESSAGES, array_merge($messages, [$type => $message])) has deletion method delete_option(QNAP_AUTH_USER). Storage method found in file lib/model/class-qnap-message.php at line 12. Deletion method found in file uninstall.php at line 22. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_MESSAGES, array_merge($messages, [$type => $message])) has deletion method delete_option(QNAP_AUTH_PASSWORD). Storage method found in file lib/model/class-qnap-message.php at line 12. Deletion method found in file uninstall.php at line 23. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_AUTH_USER, $auth_user) has deletion method delete_option("_elementor_global_css"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 998. Deletion method found in file functions.php at line 1073. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_AUTH_USER, $auth_user) has deletion method delete_option("elementor-custom-breakpoints-files"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 998. Deletion method found in file functions.php at line 1074. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_AUTH_USER, $auth_user) has deletion method delete_option(QNAP_ACTIVE_PLUGINS). Storage method found in file lib/model/import/class-qnap-import-database.php at line 998. Deletion method found in file lib/model/import/class-qnap-import-database.php at line 980. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_AUTH_USER, $auth_user) has deletion method delete_option("fs_accounts"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 998. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 47. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_AUTH_USER, $auth_user) has deletion method delete_option("fs_dbg_accounts"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 998. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 48. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_AUTH_USER, $auth_user) has deletion method delete_option("fs_active_plugins"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 998. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 49. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_AUTH_USER, $auth_user) has deletion method delete_option("fs_api_cache"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 998. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_AUTH_USER, $auth_user) has deletion method delete_option("fs_dbg_api_cache"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 998. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_AUTH_USER, $auth_user) has deletion method delete_option("fs_debug_mode"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 998. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_AUTH_USER, $auth_user) has deletion method delete_option(QNAP_STATUS). Storage method found in file lib/model/import/class-qnap-import-database.php at line 998. Deletion method found in file uninstall.php at line 20. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_AUTH_USER, $auth_user) has deletion method delete_option(QNAP_SECRET_KEY). Storage method found in file lib/model/import/class-qnap-import-database.php at line 998. Deletion method found in file uninstall.php at line 21. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_AUTH_USER, $auth_user) has deletion method delete_option(QNAP_AUTH_USER). Storage method found in file lib/model/import/class-qnap-import-database.php at line 998. Deletion method found in file uninstall.php at line 22. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_AUTH_USER, $auth_user) has deletion method delete_option(QNAP_AUTH_PASSWORD). Storage method found in file lib/model/import/class-qnap-import-database.php at line 998. Deletion method found in file uninstall.php at line 23. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_BACKUPS_LABELS, $labels) has deletion method delete_option("_elementor_global_css"). Storage method found in file lib/model/class-qnap-backups.php at line 99. Deletion method found in file functions.php at line 1073. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_BACKUPS_LABELS, $labels) has deletion method delete_option("elementor-custom-breakpoints-files"). Storage method found in file lib/model/class-qnap-backups.php at line 99. Deletion method found in file functions.php at line 1074. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_BACKUPS_LABELS, $labels) has deletion method delete_option(QNAP_ACTIVE_PLUGINS). Storage method found in file lib/model/class-qnap-backups.php at line 99. Deletion method found in file lib/model/import/class-qnap-import-database.php at line 980. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_BACKUPS_LABELS, $labels) has deletion method delete_option("fs_accounts"). Storage method found in file lib/model/class-qnap-backups.php at line 99. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 47. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_BACKUPS_LABELS, $labels) has deletion method delete_option("fs_dbg_accounts"). Storage method found in file lib/model/class-qnap-backups.php at line 99. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 48. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_BACKUPS_LABELS, $labels) has deletion method delete_option("fs_active_plugins"). Storage method found in file lib/model/class-qnap-backups.php at line 99. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 49. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_BACKUPS_LABELS, $labels) has deletion method delete_option("fs_api_cache"). Storage method found in file lib/model/class-qnap-backups.php at line 99. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_BACKUPS_LABELS, $labels) has deletion method delete_option("fs_dbg_api_cache"). Storage method found in file lib/model/class-qnap-backups.php at line 99. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_BACKUPS_LABELS, $labels) has deletion method delete_option("fs_debug_mode"). Storage method found in file lib/model/class-qnap-backups.php at line 99. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_BACKUPS_LABELS, $labels) has deletion method delete_option(QNAP_STATUS). Storage method found in file lib/model/class-qnap-backups.php at line 99. Deletion method found in file uninstall.php at line 20. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_BACKUPS_LABELS, $labels) has deletion method delete_option(QNAP_SECRET_KEY). Storage method found in file lib/model/class-qnap-backups.php at line 99. Deletion method found in file uninstall.php at line 21. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_BACKUPS_LABELS, $labels) has deletion method delete_option(QNAP_AUTH_USER). Storage method found in file lib/model/class-qnap-backups.php at line 99. Deletion method found in file uninstall.php at line 22. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_BACKUPS_LABELS, $labels) has deletion method delete_option(QNAP_AUTH_PASSWORD). Storage method found in file lib/model/class-qnap-backups.php at line 99. Deletion method found in file uninstall.php at line 23. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_ACTIVE_PLUGINS, $current) has deletion method delete_option("_elementor_global_css"). Storage method found in file functions.php at line 895. Deletion method found in file functions.php at line 1073. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_ACTIVE_PLUGINS, $current) has deletion method delete_option("elementor-custom-breakpoints-files"). Storage method found in file functions.php at line 895. Deletion method found in file functions.php at line 1074. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_ACTIVE_PLUGINS, $current) has deletion method delete_option(QNAP_ACTIVE_PLUGINS). Storage method found in file functions.php at line 895. Deletion method found in file lib/model/import/class-qnap-import-database.php at line 980. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_ACTIVE_PLUGINS, $current) has deletion method delete_option("fs_accounts"). Storage method found in file functions.php at line 895. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 47. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_ACTIVE_PLUGINS, $current) has deletion method delete_option("fs_dbg_accounts"). Storage method found in file functions.php at line 895. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 48. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_ACTIVE_PLUGINS, $current) has deletion method delete_option("fs_active_plugins"). Storage method found in file functions.php at line 895. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 49. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_ACTIVE_PLUGINS, $current) has deletion method delete_option("fs_api_cache"). Storage method found in file functions.php at line 895. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_ACTIVE_PLUGINS, $current) has deletion method delete_option("fs_dbg_api_cache"). Storage method found in file functions.php at line 895. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_ACTIVE_PLUGINS, $current) has deletion method delete_option("fs_debug_mode"). Storage method found in file functions.php at line 895. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_ACTIVE_PLUGINS, $current) has deletion method delete_option(QNAP_STATUS). Storage method found in file functions.php at line 895. Deletion method found in file uninstall.php at line 20. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_ACTIVE_PLUGINS, $current) has deletion method delete_option(QNAP_SECRET_KEY). Storage method found in file functions.php at line 895. Deletion method found in file uninstall.php at line 21. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_ACTIVE_PLUGINS, $current) has deletion method delete_option(QNAP_AUTH_USER). Storage method found in file functions.php at line 895. Deletion method found in file uninstall.php at line 22. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_ACTIVE_PLUGINS, $current) has deletion method delete_option(QNAP_AUTH_PASSWORD). Storage method found in file functions.php at line 895. Deletion method found in file uninstall.php at line 23. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_UPLOADS_URL_PATH, $uploads_url_path) has deletion method delete_option("_elementor_global_css"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1007. Deletion method found in file functions.php at line 1073. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_UPLOADS_URL_PATH, $uploads_url_path) has deletion method delete_option("elementor-custom-breakpoints-files"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1007. Deletion method found in file functions.php at line 1074. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_UPLOADS_URL_PATH, $uploads_url_path) has deletion method delete_option(QNAP_ACTIVE_PLUGINS). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1007. Deletion method found in file lib/model/import/class-qnap-import-database.php at line 980. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_UPLOADS_URL_PATH, $uploads_url_path) has deletion method delete_option("fs_accounts"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1007. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 47. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_UPLOADS_URL_PATH, $uploads_url_path) has deletion method delete_option("fs_dbg_accounts"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1007. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 48. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_UPLOADS_URL_PATH, $uploads_url_path) has deletion method delete_option("fs_active_plugins"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1007. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 49. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_UPLOADS_URL_PATH, $uploads_url_path) has deletion method delete_option("fs_api_cache"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1007. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_UPLOADS_URL_PATH, $uploads_url_path) has deletion method delete_option("fs_dbg_api_cache"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1007. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_UPLOADS_URL_PATH, $uploads_url_path) has deletion method delete_option("fs_debug_mode"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1007. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_UPLOADS_URL_PATH, $uploads_url_path) has deletion method delete_option(QNAP_STATUS). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1007. Deletion method found in file uninstall.php at line 20. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_UPLOADS_URL_PATH, $uploads_url_path) has deletion method delete_option(QNAP_SECRET_KEY). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1007. Deletion method found in file uninstall.php at line 21. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_UPLOADS_URL_PATH, $uploads_url_path) has deletion method delete_option(QNAP_AUTH_USER). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1007. Deletion method found in file uninstall.php at line 22. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_UPLOADS_URL_PATH, $uploads_url_path) has deletion method delete_option(QNAP_AUTH_PASSWORD). Storage method found in file lib/model/import/class-qnap-import-database.php at line 1007. Deletion method found in file uninstall.php at line 23. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fs_accounts", $fs_accounts) has deletion method delete_option("_elementor_global_css"). Storage method found in file lib/model/import/class-qnap-import-plugins.php at line 45. Deletion method found in file functions.php at line 1073. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fs_accounts", $fs_accounts) has deletion method delete_option("elementor-custom-breakpoints-files"). Storage method found in file lib/model/import/class-qnap-import-plugins.php at line 45. Deletion method found in file functions.php at line 1074. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fs_accounts", $fs_accounts) has deletion method delete_option(QNAP_ACTIVE_PLUGINS). Storage method found in file lib/model/import/class-qnap-import-plugins.php at line 45. Deletion method found in file lib/model/import/class-qnap-import-database.php at line 980. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fs_accounts", $fs_accounts) has deletion method delete_option("fs_accounts"). Storage method found in file lib/model/import/class-qnap-import-plugins.php at line 45. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 47. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fs_accounts", $fs_accounts) has deletion method delete_option("fs_dbg_accounts"). Storage method found in file lib/model/import/class-qnap-import-plugins.php at line 45. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 48. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fs_accounts", $fs_accounts) has deletion method delete_option("fs_active_plugins"). Storage method found in file lib/model/import/class-qnap-import-plugins.php at line 45. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 49. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fs_accounts", $fs_accounts) has deletion method delete_option("fs_api_cache"). Storage method found in file lib/model/import/class-qnap-import-plugins.php at line 45. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fs_accounts", $fs_accounts) has deletion method delete_option("fs_dbg_api_cache"). Storage method found in file lib/model/import/class-qnap-import-plugins.php at line 45. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fs_accounts", $fs_accounts) has deletion method delete_option("fs_debug_mode"). Storage method found in file lib/model/import/class-qnap-import-plugins.php at line 45. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fs_accounts", $fs_accounts) has deletion method delete_option(QNAP_STATUS). Storage method found in file lib/model/import/class-qnap-import-plugins.php at line 45. Deletion method found in file uninstall.php at line 20. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fs_accounts", $fs_accounts) has deletion method delete_option(QNAP_SECRET_KEY). Storage method found in file lib/model/import/class-qnap-import-plugins.php at line 45. Deletion method found in file uninstall.php at line 21. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fs_accounts", $fs_accounts) has deletion method delete_option(QNAP_AUTH_USER). Storage method found in file lib/model/import/class-qnap-import-plugins.php at line 45. Deletion method found in file uninstall.php at line 22. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("fs_accounts", $fs_accounts) has deletion method delete_option(QNAP_AUTH_PASSWORD). Storage method found in file lib/model/import/class-qnap-import-plugins.php at line 45. Deletion method found in file uninstall.php at line 23. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_HOME_URL, $home_url) has deletion method delete_option("_elementor_global_css"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 992. Deletion method found in file functions.php at line 1073. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_HOME_URL, $home_url) has deletion method delete_option("elementor-custom-breakpoints-files"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 992. Deletion method found in file functions.php at line 1074. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_HOME_URL, $home_url) has deletion method delete_option(QNAP_ACTIVE_PLUGINS). Storage method found in file lib/model/import/class-qnap-import-database.php at line 992. Deletion method found in file lib/model/import/class-qnap-import-database.php at line 980. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_HOME_URL, $home_url) has deletion method delete_option("fs_accounts"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 992. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 47. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_HOME_URL, $home_url) has deletion method delete_option("fs_dbg_accounts"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 992. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 48. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_HOME_URL, $home_url) has deletion method delete_option("fs_active_plugins"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 992. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 49. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_HOME_URL, $home_url) has deletion method delete_option("fs_api_cache"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 992. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 50. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_HOME_URL, $home_url) has deletion method delete_option("fs_dbg_api_cache"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 992. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 51. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_HOME_URL, $home_url) has deletion method delete_option("fs_debug_mode"). Storage method found in file lib/model/import/class-qnap-import-database.php at line 992. Deletion method found in file lib/model/import/class-qnap-import-plugins.php at line 52. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_HOME_URL, $home_url) has deletion method delete_option(QNAP_STATUS). Storage method found in file lib/model/import/class-qnap-import-database.php at line 992. Deletion method found in file uninstall.php at line 20. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_HOME_URL, $home_url) has deletion method delete_option(QNAP_SECRET_KEY). Storage method found in file lib/model/import/class-qnap-import-database.php at line 992. Deletion method found in file uninstall.php at line 21. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_HOME_URL, $home_url) has deletion method delete_option(QNAP_AUTH_USER). Storage method found in file lib/model/import/class-qnap-import-database.php at line 992. Deletion method found in file uninstall.php at line 22. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option(QNAP_HOME_URL, $home_url) has deletion method delete_option(QNAP_AUTH_PASSWORD). Storage method found in file lib/model/import/class-qnap-import-database.php at line 992. Deletion method found in file uninstall.php at line 23. 

[Art.17, Right to erasure] Deletion access is NONE_BUT_NOT_REQUIRED 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3735. Found in file functions.php at line 838 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 30315. Found in file lib/model/import/class-qnap-import-database.php at line 995 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 30342. Found in file lib/model/import/class-qnap-import-database.php at line 1004 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 30333. Found in file lib/model/import/class-qnap-import-database.php at line 1001 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 4179. Found in file functions.php at line 971 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3980. Found in file functions.php at line 931 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 30297. Found in file lib/model/import/class-qnap-import-database.php at line 989 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 30360. Found in file lib/model/import/class-qnap-import-database.php at line 1010 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3933. Found in file functions.php at line 914 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 14476. Found in file lib/model/class-qnap-backups.php at line 113 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 38163. Found in file lib/vendor/qeek/cron/class-qnap-cron.php at line 59 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 15217. Found in file lib/model/class-qnap-message.php at line 36 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 30369. Found in file lib/model/import/class-qnap-import-database.php at line 1013 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 15097. Found in file lib/model/class-qnap-message.php at line 12 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 30324. Found in file lib/model/import/class-qnap-import-database.php at line 998 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 14431. Found in file lib/model/class-qnap-backups.php at line 99 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3870. Found in file functions.php at line 895 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 30351. Found in file lib/model/import/class-qnap-import-database.php at line 1007 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 32528. Found in file lib/model/import/class-qnap-import-plugins.php at line 45 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 30306. Found in file lib/model/import/class-qnap-import-database.php at line 992 

[Art.15, Right to access] Data access is NONE_BUT_NOT_REQUIRED 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['access', 'deletion', 'encryption', 'third_party'] 

[main] Is deletion in violation? False 

[main] Is access in violation? False 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? True 


###########
### Q&A ###
###########

1. Why is my plugin in violation against GDPR?

GDPR (https://gdpr-info.eu/) aims to give citizens in the European Union (EU) control over their personal data. If a website collects or store user data, it is required to provide users functionalities to control their data, such as ones to erase or export their data. While a plugin do not directly interact with users, it may provide functionalities that collect or store personal data, which would make websites that deploy the plugin in violation against GDPR if the plugin does not provide corresponding functionalities to allow users control their personal data. Therefore, plugin developers are responsible to provide functions to manage the personal data they handle in accordance with GDPR. We list requirements by specific GDPR articles relevant to your plugin below.


[Art. 13, Information to be provided where personal data are collected from the data subject] If a plugin collects or handles personal data, it needs to provide privacy policy texts that explain what personal data is being collected and for what purpose. The texts are meant to be added to the privacy policy of the websites that deploy the plugin. 


            
[Art.17, Right to erasure] If a plugin stores personal data in a custom database they create or manage, or through Wordpress's native storage functions (e.g., update_user_meta), it needs to provide methods for users to erase the data upon request. Note that deleting data for all users upon uninstallation does not satisfy the requirement. 


            
        

2. How do I make my plugin compliant?

Please refer to the fix report below to see how you can make your plugin comply with GDPR.

        

##################
### Fix Report ###
##################

############################
# Data Deletion Fix Report #
############################

This report suggests fixes to comply with the GDPR Art. 17, Right to erasure (https://gdpr-info.eu/art-17-gdpr/). The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/adding-the-personal-data-eraser-to-your-plugin/ for more details.

1) Implement a function that deletes all the user data collected in the plugin. Sample code:


/**
* Removes all collected data of a user.
*
* @param string $email_address   email address to manipulate
* @param int    $page            pagination
*
* @return array
*/
function qnap-nas-backup_remove_data( $email_address, $page = 1 ) {
    
    $page = (int) $page;


    //TODO: Delete the user data that was stored using Wordpress functions

    //Below is the sample code for deleting user meta and may need to be modified to suit the plugin.
    $user_id = get_user_by('email', $email_address)
    $key = 'email' //Sample user meta key
    if ( $customer->user_id > 0 ) {
        //Delete user meta data by $key
        delete_user_meta( $user_id, $key );
    }
        



    // Tell core if we have more data to delete still
    $done = true;
    return array(
        'items_removed'  => $items_removed, // true if collected data of a user is being deleted
        'items_retained' => $items_retained, // true if certain data needs to be retained
        'messages'       => sprintf( __( 'Data of user with email %s successfully deleted.', 'qnap-nas-backup' ), $email_address ), // Put messages for data removal
        'done'           => $done, // true if all the removal processes are done (all data of the user is removed)
    );
}
        

2) Hook the deletion function to the Wordpress's Personal Data Removal tool


/**
* Registers all data erasers.
*
* @param array $exporters
*
* @return mixed
*/
function qnap-nas-backup_register_privacy_erasers( $erasers ) {
    $erasers['my-plugin-slug'] = array(
        'eraser_friendly_name' => __( '<eraser name>', 'qnap-nas-backup' ),
        'callback'             => 'qnap-nas-backup_remove_data',
    );
    return $erasers;
}
        

add_filter( 'wp_privacy_personal_data_erasers', 'qnap-nas-backup_register_privacy_erasers' );
        

        

#############################
# Privacy Policy Fix Report #
#############################

This report suggests fixes to comply with the GDPR Art. 13 (https://gdpr-info.eu/art-13-gdpr/) through including a privacy notice. The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/suggesting-text-for-the-site-privacy-policy/ for more details.

1) Implement a function that includes the privacy policy for the plugin and provide it to wordpress through wp_add_privacy_policy_content(). Sample code:


/**
* Adds a privacy policy statement.
*/
function qnap-nas-backup_add_privacy_policy_content() {
    if ( ! function_exists( 'wp_add_privacy_policy_content' ) ) {
        return;
    }
    //TODO: modify the content below to include the privacy policy for the plugin.
    $content = '<p class="privacy-policy-tutorial">' . __( 'Some introductory content for the suggested text.', 'qnap-nas-backup' ) . '</p>'
            . '<strong class="privacy-policy-tutorial">' . __( 'Suggested Text:', 'qnap-nas-backup' ) . '</strong> '
            . sprintf(
                __( 'When you leave a comment on this site, we send your name, email address, IP address and comment text to example.com. Example.com does not retain your personal data. The example.com privacy policy is <a href="%1$s" target="_blank">here</a>.', 'qnap-nas-backup' ),
                'https://example.com/privacy-policy'
            );
    wp_add_privacy_policy_content( 'qnap-nas-backup', wp_kses_post( wpautop( $content, false ) ) );
}
        

2) Hook the privacy policy function to the Wordpress's admin initialization action.


add_action( 'admin_init', 'qnap-nas-backup_add_privacy_policy_content' );
        

        


Disclaimer: The sample code provided above is only for reference and does not guarantee GDPR compliance. The recommended list of data to delete/export may not be comprehensive. 
        
Done.
