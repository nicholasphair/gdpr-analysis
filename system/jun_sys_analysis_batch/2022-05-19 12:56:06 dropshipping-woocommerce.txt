Timeout in resolving values
Timeout in running neo4j query
Running Main.py on dropshipping-woocommerce

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.756411.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.346312.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 413 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:01.063821.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 12 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.818280.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 3959 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:02.415033.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 14 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:01.521093.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
Added 3 PHP_REACHES edges.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.084602.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 1708 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:41.699329.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 27472
Added 21363 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 28995
Added 1523 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:02.902490.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/dropshipping-woocommerce/dropshipping-woocommerce.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/dropshipping-woocommerce/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/dropshipping-woocommerce/uninstall.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/dropshipping-woocommerce/includes/class-dropshipping-wc-async-request.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/dropshipping-woocommerce/includes/class-dropshipping-wc-background-process.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/dropshipping-woocommerce/includes/class-dropshipping-wc-cron.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/dropshipping-woocommerce/includes/class-dropshipping-wc-mp-orders.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/dropshipping-woocommerce/includes/class-dropshipping-woocommerce-admin-dashboard.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/dropshipping-woocommerce/includes/class-dropshipping-woocommerce-admin.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/dropshipping-woocommerce/includes/class-dropshipping-woocommerce-api.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/dropshipping-woocommerce/includes/class-dropshipping-woocommerce-common.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/dropshipping-woocommerce/includes/class-dropshipping-woocommerce-importer.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/dropshipping-woocommerce/includes/class-dropshipping-woocommerce-orders.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/dropshipping-woocommerce/includes/class-dropshipping-woocommerce-pdf-invoice.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/dropshipping-woocommerce/includes/class-dropshipping-woocommerce-shipment-tracking.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/dropshipping-woocommerce/includes/class-dropshipping-woocommerce-webhook.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/dropshipping-woocommerce/includes/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/dropshipping-woocommerce/includes/knawat-merlin-config.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/dropshipping-woocommerce/includes/knawat-migration.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/dropshipping-woocommerce/includes/knawat-required-plugins.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/dropshipping-woocommerce/includes/api/class-dropshipping-woocommerce-handshake.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/dropshipping-woocommerce/includes/lib/knawat-merlin/knawat-merlin.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/dropshipping-woocommerce/includes/lib/knawat-merlin/assets/images/spinner.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/dropshipping-woocommerce/includes/lib/tgmpa/class-tgm-plugin-activation.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/dropshipping-woocommerce/includes/lib/wp-background-processing/wp-async-request.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/dropshipping-woocommerce/includes/lib/wp-background-processing/wp-background-process.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/dropshipping-woocommerce/templates/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/dropshipping-woocommerce/templates/admin/dropshipping-woocommerce-import.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/dropshipping-woocommerce/templates/admin/dropshipping-woocommerce-settings.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/dropshipping-woocommerce/templates/myaccount/shipment-tracking.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:02.627788.

413 PHP_REACHES edges created
12 REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
3959 PHP_REACHES edges created
10 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
14000 PHP_REACHES edges created
15000 PHP_REACHES edges created
16000 PHP_REACHES edges created
17000 PHP_REACHES edges created
18000 PHP_REACHES edges created
19000 PHP_REACHES edges created
20000 PHP_REACHES edges created
21000 PHP_REACHES edges created
22000 PHP_REACHES edges created
23000 PHP_REACHES edges created
23078 PHP_REACHES edges created
1000 PHP_REACHES edges created
1523 PHP_REACHES edges created
28995 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 10457 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.910674.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 6 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:20.552723.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 283 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:11.847415.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 558 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.199045.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:10.264916.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:05.369698.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.061047.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.029979.

6 CALLS edges created
841 PHP_REACHES edges created
847 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 596 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.206007.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
10 SQL operations to process.
DELETE FROM $wpdb WHERE meta_key LIKE $wpdb->esc_like($this->identifier . "_batch_")%
DELETE FROM $wpdb WHERE meta_key LIKE $wpdb->esc_like($this->identifier . "_batch_")%
SQL command (DELETE FROM $wpdb WHERE meta_key LIKE $wpdb->esc_like($this->identifier . "_batch_")%) cannot be parsed correct.
implode(" ", apply_filters("woocommerce_dashboard_status_widget_knawat_top_seller_query", $query))
SQL command (implode(" ", apply_filters("woocommerce_dashboard_status_widget_knawat_top_seller_query", $query))) cannot be parsed correct.
SELECT posts.post_status, COUNT( DISTINCT posts.ID ) as count FROM $wpdb as posts
		INNER JOIN $wpdb as order_meta ON (  posts.ID = order_meta.post_id AND order_meta.meta_key = '_knawat_order' )
		AND posts.post_type = 'shop_order'
		AND ( posts.post_status IN ( 'wc-on-hold', 'wc-processing' ) )
		AND order_meta.meta_value = '1'
		GROUP BY posts.post_status
SQL command (SELECT posts.post_status, COUNT( DISTINCT posts.ID ) as count FROM $wpdb as posts INNER JOIN $wpdb as order_meta ON ( posts.ID = order_meta.post_id AND order_meta.meta_key = '_knawat_order' ) AND posts.post_type = 'shop_order' AND ( posts.post_status IN ( 'wc-on-hold', 'wc-processing' ) ) AND order_meta.meta_value = '1' GROUP BY posts.post_status) cannot be parsed correct.
SELECT * FROM $wpdb WHERE meta_key LIKE '%kdropship_import_batch_%' AND meta_value NOT LIKE '%pull_operation%' ORDER BY meta_id ASC LIMIT 1
SQL command (SELECT * FROM $wpdb WHERE meta_key LIKE '%kdropship_import_batch_%' AND meta_value NOT LIKE '%pull_operation%' ORDER BY meta_id ASC LIMIT 1) cannot be parsed correct.
SELECT webhook_id FROM $wpdbwc_webhooks WHERE topic IN ('order.knawatcreated', 'order.knawatupdated', 'order.knawatdeleted', 'order.knawatrestored')
SQL command (SELECT webhook_id FROM $wpdbwc_webhooks WHERE topic IN ('order.knawatcreated', 'order.knawatupdated', 'order.knawatdeleted', 'order.knawatrestored')) cannot be parsed correct.
DELETE FROM $wpdbwoocommerce_api_keys WHERE description LIKE 'Knawat - API %'
SQL command (DELETE FROM $wpdbwoocommerce_api_keys WHERE description LIKE 'Knawat - API %') cannot be parsed correct.
SELECT * FROM $wpdbtermmeta WHERE `meta_key` LIKE 'tax_api_id' AND `meta_value` = $parent_id
SQL command (SELECT * FROM $wpdbtermmeta WHERE `meta_key` LIKE 'tax_api_id' AND `meta_value` = $parent_id) cannot be parsed correct.
SELECT ID FROM $wpdb WHERE post_parent = $order->get_id() AND post_type = 'shop_order'
SELECT ID FROM $wpdb WHERE post_parent = $order->get_id() AND post_type = 'shop_order'
SQL command (SELECT ID FROM $wpdb WHERE post_parent = $order->get_id() AND post_type = 'shop_order') cannot be parsed correct.
SELECT post_status, COUNT( * ) AS num_posts FROM $wpdb WHERE post_type = $type AND post_parent = 0
SELECT post_status, COUNT( * ) AS num_posts FROM $wpdb WHERE post_type = $type AND post_parent = 0
SQL command (SELECT post_status, COUNT( * ) AS num_posts FROM $wpdb WHERE post_type = $type AND post_parent = 0) cannot be parsed correct.

			SELECT *
			FROM $wpdb
			WHERE meta_key LIKE $wpdb->esc_like($this->identifier . "_batch_")%
			ORDER BY option_id ASC
			LIMIT 1
		

			SELECT *
			FROM $wpdb
			WHERE meta_key LIKE $wpdb->esc_like($this->identifier . "_batch_")%
			ORDER BY option_id ASC
			LIMIT 1
		
SQL command ( SELECT * FROM $wpdb WHERE meta_key LIKE $wpdb->esc_like($this->identifier . "_batch_")% ORDER BY option_id ASC LIMIT 1 ) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [2514, 5567, 6150, 13550, 13583, 13661, 17807, 21899, 22590, 44408]
Added 0 SQL nodes. 0 out of 10 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:03.873366.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'admin_url("admin.php?page=wc-reports&tab=orders&report=sales_by_product&range=month&product_ids=" . $top_seller->product_id)'' cannot be parsed correct.
HTML code '$'$reports->sales_sparkline($top_seller->product_id, max(7, date("d", current_time("timestamp"))), "count")'' cannot be parsed correct.
HTML code '$'add_query_arg("tab", "import", $this->adminpage_url)'' cannot be parsed correct.
HTML code '$'add_query_arg("tab", "settings", $this->adminpage_url)'' cannot be parsed correct.
HTML code '$'$error'' cannot be parsed correct.
HTML code '$'$success'' cannot be parsed correct.
HTML code '$'$warning'' cannot be parsed correct.
HTML code '$'ucfirst($knawat_order_status)'' cannot be parsed correct.
HTML code '$'ucfirst($knawat_order_status)'' cannot be parsed correct.
HTML code '$'ucfirst($knawat_order_status)'' cannot be parsed correct.
HTML code '$'$loop'' cannot be parsed correct.
HTML code '$'Knawat Cost ($)'' cannot be parsed correct.
HTML code '$'$loop'' cannot be parsed correct.
HTML code '$'get_post_meta($variation->ID, "_knawat_cost", true)'' cannot be parsed correct.
HTML code '$'Knawat Cost ($)'' cannot be parsed correct.
HTML code '$'wp_nonce_url(admin_url("admin-post.php?action=update_knawat_product&product_id=" . $post->ID), "update_knawat_product_action", "update_knawat_product_nonce")'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'$value'' cannot be parsed correct.
HTML code '$'<p><strong>knawat_dropshipwc_get_dropshippers()_get_post_meta($post->ID, "_knawat_order_ds", true)_name</strong></p>'' cannot be parsed correct.
HTML code '$'$this->knawat_dropshipwc_get_tracking_details($order_id)__shipment_provider_name'' cannot be parsed correct.
HTML code '$'$this->knawat_dropshipwc_get_tracking_details($order_id)__shipment_tracking_number'' cannot be parsed correct.
HTML code '$'$this->knawat_dropshipwc_get_tracking_details($order_id)__shipment_tracking_link'' cannot be parsed correct.
HTML code '$'$this->knawat_dropshipwc_get_tracking_details($order_id)__shipment_date_shipped'' cannot be parsed correct.
HTML code '$'$e->getMessage()'' cannot be parsed correct.
HTML code '$'<button class="button button-primary button-save-form">Save Tracking</button>'' cannot be parsed correct.
HTML code '$'strtolower($this->steps[$this->step]["name"])'' cannot be parsed correct.
HTML code '$'active'' cannot be parsed correct.
HTML code '$'$this->step_link($step_key)'' cannot be parsed correct.
HTML code '$'$step_name'' cannot be parsed correct.
HTML code '$'wp_kses($this->svg(["icon" => "welcome"]), $this->svg_allowed_html())'' cannot be parsed correct.
HTML code '$'sprintf($header, $plugin)'' cannot be parsed correct.
HTML code '$'strtolower($this->steps[$this->step]["name"])'' cannot be parsed correct.
HTML code '$'sprintf("<a class="return-to-dashboard" href="%s">%s</a>", esc_url(admin_url("/")), esc_html($strings["return-to-dashboard"]))'' cannot be parsed correct.
HTML code '$'$this_strings_btn-next'' cannot be parsed correct.
HTML code '$'sprintf($paragraph, $plugin)'' cannot be parsed correct.
HTML code '$'wp_get_referer()admin_url("/")'' cannot be parsed correct.
HTML code '$'$this_strings_btn-no'' cannot be parsed correct.
HTML code '$'$this->step_next_link()'' cannot be parsed correct.
HTML code '$'$this_strings_btn-start'' cannot be parsed correct.
HTML code '$'wp_kses($this->svg(["icon" => "welcome"]), $this->svg_allowed_html())'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'knawat_dropshipwc_get_options()'' cannot be parsed correct.
HTML code '$'knawat_dropshipwc_get_options()'' cannot be parsed correct.
HTML code '$'$this->step_next_link()'' cannot be parsed correct.
HTML code '$'$this_strings_btn-skip'' cannot be parsed correct.
HTML code '$'$this->step_next_link()'' cannot be parsed correct.
HTML code '$'$this_strings_btn-skip'' cannot be parsed correct.
HTML code '$'$this->step_next_link()'' cannot be parsed correct.
HTML code '$'$this_strings_btn-knawat-connect'' cannot be parsed correct.
HTML code '$'$this->loading_spinner()'' cannot be parsed correct.
HTML code '$'wp_kses($this->svg(["icon" => "plugins"]), $this->svg_allowed_html())'' cannot be parsed correct.
HTML code '$'count($plugins["all"])'' cannot be parsed correct.
HTML code '$'count($plugins["all"])'' cannot be parsed correct.
HTML code '$'$this_strings_plugins-action-link'' cannot be parsed correct.
HTML code '$'$slug'' cannot be parsed correct.
HTML code '$'$slug'' cannot be parsed correct.
HTML code '$'$slug'' cannot be parsed correct.
HTML code '$' checked disabled'' cannot be parsed correct.
HTML code '$'$slug'' cannot be parsed correct.
HTML code '$'$slug'' cannot be parsed correct.
HTML code '$'$slug'' cannot be parsed correct.
HTML code '$'$plugin_name'' cannot be parsed correct.
HTML code '$'implode(esc_html__("and", "dropshipping-woocommerce"), $keys)'' cannot be parsed correct.
HTML code '$'count($plugins["all"])'' cannot be parsed correct.
HTML code '$'$this->step_next_link()'' cannot be parsed correct.
HTML code '$'$this_strings_btn-skip'' cannot be parsed correct.
HTML code '$'$this->step_next_link()'' cannot be parsed correct.
HTML code '$'$this_strings_btn-skip'' cannot be parsed correct.
HTML code '$'$this->step_next_link()'' cannot be parsed correct.
HTML code '$'$this_strings_btn-plugins-install'' cannot be parsed correct.
HTML code '$'$this->loading_spinner()'' cannot be parsed correct.
HTML code '$'$this->step_next_link()'' cannot be parsed correct.
HTML code '$'wp_kses($this->svg(["icon" => "done"]), $this->svg_allowed_html())'' cannot be parsed correct.
HTML code '$'sprintf($header, $plugin)'' cannot be parsed correct.
HTML code '$'$this_strings_ready'' cannot be parsed correct.
HTML code '$'https://app.knawat.com/autologin'' cannot be parsed correct.
HTML code '$'$this_strings_ready-big-button'' cannot be parsed correct.
HTML code '$'$this_strings_ready-action-link'' cannot be parsed correct.
HTML code '$'wp_kses($link_1, $allowed_html_array)'' cannot be parsed correct.
HTML code '$'wp_kses($link_2, $allowed_html_array)'' cannot be parsed correct.
HTML code '$'get_admin_page_title()'' cannot be parsed correct.
HTML code '$'wp_kses_post($this->message)'' cannot be parsed correct.
HTML code '$'$this_menu'' cannot be parsed correct.
HTML code '$'sprintf(esc_html($this->strings["complete"]), "<a href=" . esc_url(self_admin_url()) . """ . esc_html__("Return to the Dashboard", "tgmpa") . "</a>")'' cannot be parsed correct.
HTML code '$'$this->get_tgmpa_url()'' cannot be parsed correct.
HTML code '$'$this_strings_return'' cannot be parsed correct.
HTML code '$'wp_kses_post($activate->get_error_message())'' cannot be parsed correct.
HTML code '$'$this->get_tgmpa_url()'' cannot be parsed correct.
HTML code '$'$this_strings_return'' cannot be parsed correct.
HTML code '$'$this_strings_activated_successfully'' cannot be parsed correct.
HTML code '$'$this_plugins_$this->sanitize_key(urldecode($_GET["plugin"]))_name'' cannot be parsed correct.
HTML code '$'$this_strings_plugin_activated'' cannot be parsed correct.
HTML code '$'sprintf(esc_html($this->strings["plugin_already_active"]), "<strong>" . esc_html($this->plugins[$slug]["name"]) . "</strong>")'' cannot be parsed correct.
HTML code '$'sprintf(esc_html($this->strings["plugin_needs_higher_version"]), "<strong>" . esc_html($this->plugins[$slug]["name"]) . "</strong>")'' cannot be parsed correct.
HTML code '$'sprintf(esc_html($this->strings["plugin_needs_higher_version"]), esc_html($this->plugins[$slug]["name"]))'' cannot be parsed correct.
HTML code '$'sprintf(__("TGMPA v%s", "tgmpa"), self::"TGMPA_VERSION")'' cannot be parsed correct.
HTML code '$'No plugins to install, update or activate. <a href=self_admin_url()">Return to the Dashboard</a>'' cannot be parsed correct.
HTML code '$'absint($this->get_column_count())'' cannot be parsed correct.
HTML code '$'Upgrade message from the plugin author:'' cannot be parsed correct.
HTML code '$'wp_kses_data($item["upgrade_notice"])'' cannot be parsed correct.
HTML code '$'No plugins were selected to be installed. No action taken.'' cannot be parsed correct.
HTML code '$'No plugins are available to be updated at this time.'' cannot be parsed correct.
HTML code '$'get_admin_page_title()'' cannot be parsed correct.
HTML code '$'No plugins were selected to be activated. No action taken.'' cannot be parsed correct.
HTML code '$'No plugins are available to be activated at this time.'' cannot be parsed correct.
HTML code '$'wp_kses_post($activate->get_error_message())'' cannot be parsed correct.
HTML code '$'wp_nonce_url(admin_url("admin-post.php?action=knawatds_manual_import"), "knawatds_manual_import_action", "manual_nonce")'' cannot be parsed correct.
HTML code '$'wp_nonce_url(admin_url("admin-post.php?action=knawatds_stop_import"), "knawatds_stop_import_action", "stop_import_nonce")'' cannot be parsed correct.
HTML code '$'knawat_dropshipwc_get_options()'' cannot be parsed correct.
HTML code '$'knawat_dropshipwc_get_options()'' cannot be parsed correct.
HTML code '$'knawat_dropshipwc_get_options()'' cannot be parsed correct.
HTML code '$'<option value=$value"selected($current_interval, $value, false)>$interval</option>'' cannot be parsed correct.
HTML code '$'knawat_dropshipwc_get_products_count($reset_time)'' cannot be parsed correct.
HTML code '$'$tracking_data__shipment_provider_name'' cannot be parsed correct.
HTML code '$'$tracking_data__shipment_tracking_number'' cannot be parsed correct.
HTML code '$'date_i18n(get_option("date_format"), strtotime($tracking_data["_shipment_date_shipped"]))'' cannot be parsed correct.
HTML code '$'$tracking_data__shipment_tracking_link'' cannot be parsed correct.
HTML code '$'</ul>'' cannot be parsed correct.
HTML code '$'<ul class="knawat_status_list">'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'nav-tab-active'' cannot be parsed correct.
HTML code '$'<div class="knawat-latest-news-widget">'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'â'' cannot be parsed correct.
HTML code '$'<div class="widefat">'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'<span>&ndash;</span>'' cannot be parsed correct.
HTML code '$'style="display: none;"'' cannot be parsed correct.
HTML code '$'connected'' cannot be parsed correct.
HTML code '$'<p>'' cannot be parsed correct.
HTML code '$'</p>'' cannot be parsed correct.
HTML code '$'<style type="text/css">#adminmenu .wp-submenu li.current { display: none !important; }</style>'' cannot be parsed correct.
HTML code '$'<p><a href='' cannot be parsed correct.
HTML code '$'" target="_parent">'' cannot be parsed correct.
HTML code '$'</a></p>'' cannot be parsed correct.
HTML code '$'<div id="message" class="error"><p>'' cannot be parsed correct.
HTML code '$'</p></div>'' cannot be parsed correct.
HTML code '$'<p><a href='' cannot be parsed correct.
HTML code '$'" target="_parent">'' cannot be parsed correct.
HTML code '$'</a></p>'' cannot be parsed correct.
HTML code '$'<div id="message" class="updated"><p>'' cannot be parsed correct.
HTML code '$' <strong>'' cannot be parsed correct.
HTML code '$'.</strong></p></div>'' cannot be parsed correct.
HTML code '$'<p>'' cannot be parsed correct.
HTML code '$'</p>'' cannot be parsed correct.
HTML code '$'<div id="message" class="error"><p>'' cannot be parsed correct.
HTML code '$'</p></div>'' cannot be parsed correct.
HTML code '$'<div id="message" class="error"><p>'' cannot be parsed correct.
HTML code '$'</p></div>'' cannot be parsed correct.
HTML code '$'<p>'' cannot be parsed correct.
HTML code '$'</p>'' cannot be parsed correct.
HTML code '$'<p style="float: right; padding: 0em 1.5em 0.5em 0;"><strong><small>'' cannot be parsed correct.
HTML code '$'</small></strong></p>'' cannot be parsed correct.
HTML code '$'<style type="text/css">#adminmenu .wp-submenu li.current { display: none !important; }</style>'' cannot be parsed correct.
HTML code '$'
				<tr class="plugin-update-tr">
					<td colspan="'' cannot be parsed correct.
HTML code '$'" class="plugin-update colspanchange">
						<div class="update-message">'' cannot be parsed correct.
HTML code '$' <strong>'' cannot be parsed correct.
HTML code '$'</strong>
						</div>
					</td>
				</tr>'' cannot be parsed correct.
HTML code '$'<div id="message" class="error"><p>'' cannot be parsed correct.
HTML code '$'</p></div>'' cannot be parsed correct.
HTML code '$'<div id="message" class="error"><p>'' cannot be parsed correct.
HTML code '$'</p></div>'' cannot be parsed correct.
HTML code '$'<div class="tgmpa">'' cannot be parsed correct.
HTML code '$'<h2 style="font-size: 23px; font-weight: 400; line-height: 29px; margin: 0; padding: 9px 15px 4px 0;">'' cannot be parsed correct.
HTML code '$'</h2>
					<div class="update-php" style="width: 100%; height: 98%; min-height: 850px; padding-top: 1px;">'' cannot be parsed correct.
HTML code '$'</div></div>'' cannot be parsed correct.
HTML code '$'<div id="message" class="error"><p>'' cannot be parsed correct.
HTML code '$'</p></div>'' cannot be parsed correct.
HTML code '$'<div id="message" class="error"><p>'' cannot be parsed correct.
HTML code '$'</p></div>'' cannot be parsed correct.
HTML code '$'<div id="message" class="error"><p>'' cannot be parsed correct.
HTML code '$'</p></div>'' cannot be parsed correct.
HTML code '$'<style type="text/css">#adminmenu .wp-submenu li.current { display: none !important; }</style>'' cannot be parsed correct.
HTML code '$'>'' cannot be parsed correct.
HTML code '$'>'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:15.958913.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.052786.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 63 do_action/apply_filters calls and 152 add_action/add_filter calls. Now connecting do-add pairs.
Added 6 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:06.621245.

6 PHP_REACHES edges created
6 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbaseDetector
### Start running FrontBaseDetector
### Finish running FileProDetector
### Start running HashDetector
### Finish running DbplusDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running FrontBaseDetector
### Start running IngresDetector
### Finish running InformixDetector
### Start running maxdbDetector
### Finish running FirebirdInterBaseDetector
### Start running MongoDbDetector
### Finish running IBMDb2Detector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IngresDetector
### Start running MySQLDetector
### Finish running ArrayElementDetector
### Start running MySQLiDetector
### Finish running MsqlDetector
### Start running Oci8Detector
### Finish running MySQLDetector
### Start running OpenSSLDetector
### Finish running MongoDbDetector
### Start running ParadoxDetector
### Finish running Oci8Detector
### Start running PasswordHashingDetector
### Finish running ParadoxDetector
### Start running PhpCurlDetector
### Finish running PhpCurlDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PasswordHashingDetector
### Start running PHPRetrievalDetector
### Finish running HashDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPStorageDetector
### Start running PhpVarDetector
### Finish running PHPRetrievalDetector
### Start running PostgreSQLDetector
### Finish running PostgreSQLDetector
### Start running PropertyDetector
### Finish running PHPIncludedDetector
### Start running Sqlite3Detector
### Finish running PhpVarDetector
### Start running SqliteDetector
### Finish running SqliteDetector
### Start running SqlServerDetector
### Finish running Sqlite3Detector
### Start running SybaseDetector
### Finish running PropertyDetector
### Start running TokyoTyrantDetector
### Finish running maxdbDetector
### Start running UserInputDetector
### Finish running MySQLiDetector
### Start running VariableDetector
### Finish running SybaseDetector
### Start running WordpressHashingFnDetector
### Finish running TokyoTyrantDetector
### Start running WordPressRemoteDetector
### Finish running OpenSSLDetector
### Start running WordPressRetrievalDetector
### Finish running SqlServerDetector
### Start running WordPressStorageDetector
### Finish running WordpressHashingFnDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running UserInputDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running GenericDatabaseUsageDetector
### Start running UninstallDetector
### Finish running VariableDetector
### Finish running UninstallDetector
### Finish running WordPressRemoteDetector
### Finish running DeletionDetector
### Finish running WordPressRetrievalDetector
### Finish running WordPressStorageDetector
### Finished running detectors
includes/class-dropshipping-woocommerce-api.php:135
  - MD5 called with parameters [wp_json_encode, url, this, headers]. Ignore if [wp_json_encode, url, this, headers] does not contain personal information.
includes/lib/knawat-merlin/knawat-merlin.php:1030
  - MD5 called with parameters [serialize, json]. Ignore if [serialize, json] does not contain personal information.
includes/lib/wp-background-processing/wp-background-process.php:149
  - MD5 called with parameters [rand, microtime]. Ignore if [rand, microtime] does not contain personal information. 

includes/class-dropshipping-woocommerce-orders.php:78
  - variable '$email_ids' of personal types {'email'} is found.
  - Data types: email
includes/class-dropshipping-woocommerce-orders.php:88
  - variable '$email_ids' of personal types {'email'} is found.
  - Data types: email
includes/class-dropshipping-woocommerce-orders.php:88
  - variable '$email_id' of personal types {'email'} is found.
  - Data types: email
includes/class-dropshipping-woocommerce-orders.php:89
  - variable '$email_id' of personal types {'email'} is found.
  - Data types: email
includes/class-dropshipping-woocommerce-orders.php:210
  - variable '$ship_country' of personal types {'country'} is found.
  - Data types: country
includes/class-dropshipping-woocommerce-orders.php:211
  - variable '$ship_country' of personal types {'country'} is found.
  - Data types: country
includes/class-dropshipping-woocommerce-orders.php:641
  - variable '$ship_country' of personal types {'country'} is found.
  - Data types: country
includes/class-dropshipping-woocommerce-orders.php:642
  - variable '$ship_country' of personal types {'country'} is found.
  - Data types: country 

includes/class-dropshipping-woocommerce-api.php:86
  - API call to wp_remote_post($this->api_url . "/token", ["body" => $keydata, "timeout" => 30, "headers" => ["User-Agent" => $this->headers["User-Agent"]]]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
includes/class-dropshipping-woocommerce-api.php:139
  - API call to wp_remote_get($url, ["timeout" => 30, "headers" => $this->headers]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
includes/class-dropshipping-woocommerce-api.php:179
  - API call to wp_remote_post($url, ["body" => $data, "timeout" => 30, "headers" => $this->headers]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
includes/class-dropshipping-woocommerce-api.php:221
  - API call to wp_remote_request($url, ["method" => "PUT", "body" => $data, "timeout" => 30, "headers" => $this->headers]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
includes/class-dropshipping-woocommerce-api.php:264
  - API call to wp_remote_request($url, ["method" => "DELETE", "body" => $data, "timeout" => 30, "headers" => $this->headers]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
includes/lib/wp-background-processing/wp-async-request.php:87
  - API call to wp_remote_post(esc_url_raw($url), $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote 

dropshipping-woocommerce.php:252
  - RETRIEVAL call to get_option("active_plugins", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/api/class-dropshipping-woocommerce-handshake.php:144
  - RETRIEVAL call to get_option("active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class-dropshipping-wc-background-process.php:61
  - RETRIEVAL call to get_option($error_option, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-dropshipping-wc-background-process.php:81
  - RETRIEVAL call to get_transient("knawat_stop_import") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
includes/class-dropshipping-wc-cron.php:39
  - RETRIEVAL call to get_option("knawat_order_pull_cron_interval", 6 * 60 * 60) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-dropshipping-wc-mp-orders.php:69
  - RETRIEVAL call to get_post_meta($order_id, "_knawat_order", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-dropshipping-wc-mp-orders.php:74
  - RETRIEVAL call to get_post_meta($order_id, "_knawat_order_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-dropshipping-wc-mp-orders.php:139
  - RETRIEVAL call to get_post_meta($order_id, "_knawat_order", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-dropshipping-wc-mp-orders.php:496
  - RETRIEVAL call to get_post_meta($product_id, "dropshipping", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-admin-dashboard.php:266
  - RETRIEVAL call to get_option("woocommerce_notify_low_stock_amount") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class-dropshipping-woocommerce-admin-dashboard.php:267
  - RETRIEVAL call to get_option("woocommerce_notify_no_stock_amount") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/class-dropshipping-woocommerce-admin-dashboard.php:270
  - RETRIEVAL call to get_transient($transient_name) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
includes/class-dropshipping-woocommerce-admin-dashboard.php:291
  - RETRIEVAL call to get_transient($transient_name) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
includes/class-dropshipping-woocommerce-admin.php:520
  - RETRIEVAL call to get_post_meta($order_id, "_knawat_order_status", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-admin.php:558
  - RETRIEVAL call to get_post_meta($order_id, "_knawat_order_status", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-admin.php:591
  - RETRIEVAL call to get_post_meta($variation->ID, "_knawat_cost", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-admin.php:698
  - RETRIEVAL call to get_option("knawat_dropwc_version", "1.2.0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-dropshipping-woocommerce-admin.php:750
  - RETRIEVAL call to get_post_meta($order_id, "_knawat_order", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-admin.php:751
  - RETRIEVAL call to get_post_meta($order_id, "_knawat_order_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-api.php:72
  - RETRIEVAL call to get_transient("knawat_mp_access_channel") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
includes/class-dropshipping-woocommerce-api.php:136
  - RETRIEVAL call to get_transient($transient_name) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
includes/class-dropshipping-woocommerce-common.php:124
  - RETRIEVAL call to get_post_meta($product_id, "dropshipping", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-common.php:409
  - RETRIEVAL call to get_option($notice_type, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-dropshipping-woocommerce-common.php:424
  - RETRIEVAL call to get_transient("knawat_persistent_notices") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
includes/class-dropshipping-woocommerce-common.php:446
  - RETRIEVAL call to get_post($post_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
includes/class-dropshipping-woocommerce-common.php:501
  - RETRIEVAL call to get_post($post_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
includes/class-dropshipping-woocommerce-common.php:571
  - RETRIEVAL call to get_option(KNAWAT_DROPWC_OPTIONS, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-dropshipping-woocommerce-common.php:636
  - RETRIEVAL call to get_option("active_plugins", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-dropshipping-woocommerce-common.php:691
  - RETRIEVAL call to get_post_meta($order_id, "_knawat_order_ds", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-common.php:747
  - RETRIEVAL call to get_post_meta($product_id, "dropshipping", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-importer.php:102
  - RETRIEVAL call to get_option("knawat_last_imported", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-dropshipping-woocommerce-orders.php:135
  - RETRIEVAL call to get_post_meta($parent_order_id, "_knawat_sub_order") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-orders.php:194
  - RETRIEVAL call to get_post_meta($product_id, "dropshipping", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-orders.php:198
  - RETRIEVAL call to get_post_meta($variation_id, "_knawat_dropshipper", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-orders.php:202
  - RETRIEVAL call to get_post_meta($variation_id, "_localds_stock", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-orders.php:306
  - RETRIEVAL call to get_post_field("post_author", $parent_order->get_id()) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $field (string), 1: $post (int|WP_Post). Returns (string).
  - Data types: post_meta, post, wp_post
includes/class-dropshipping-woocommerce-orders.php:429
  - RETRIEVAL call to get_post_meta($parent_order->get_id(), "_order_currency", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-orders.php:431
  - RETRIEVAL call to get_post_meta($parent_order->get_id(), "_customer_ip_address", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-orders.php:432
  - RETRIEVAL call to get_post_meta($parent_order->get_id(), "_customer_user_agent", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-orders.php:624
  - RETRIEVAL call to get_post_meta($item["product_id"], "dropshipping", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-orders.php:629
  - RETRIEVAL call to get_post_meta($variation_id, "_knawat_dropshipper", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-orders.php:633
  - RETRIEVAL call to get_post_meta($variation_id, "_localds_stock", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-orders.php:857
  - RETRIEVAL call to get_post_meta($post->ID, "_knawat_order_ds", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-orders.php:930
  - RETRIEVAL call to get_post_meta($post->ID, "_knawat_order_ds", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-orders.php:1078
  - RETRIEVAL call to get_post($order_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
includes/class-dropshipping-woocommerce-orders.php:1159
  - RETRIEVAL call to get_post($post_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
includes/class-dropshipping-woocommerce-orders.php:1178
  - RETRIEVAL call to get_post($post_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
includes/class-dropshipping-woocommerce-orders.php:1197
  - RETRIEVAL call to get_post($post_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
includes/class-dropshipping-woocommerce-orders.php:1311
  - RETRIEVAL call to get_post_meta($post->get_id(), "_knawat_order_ds", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-orders.php:1358
  - RETRIEVAL call to get_post_meta($product_id, "_knawat_cost", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-orders.php:1410
  - RETRIEVAL call to get_post_meta($product_id, "_knawat_cost", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-orders.php:1441
  - RETRIEVAL call to get_post_meta($args["order_id"], "_knawat_order", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-orders.php:1500
  - RETRIEVAL call to get_post_meta($variation_id, "_knawat_dropshipper", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-orders.php:1502
  - RETRIEVAL call to get_post_meta($variation_id, "_localds_stock", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-shipment-tracking.php:148
  - RETRIEVAL call to get_post_meta($order_id, "_shipment_provider_name", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-shipment-tracking.php:149
  - RETRIEVAL call to get_post_meta($order_id, "_shipment_tracking_number", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-shipment-tracking.php:150
  - RETRIEVAL call to get_post_meta($order_id, "_shipment_tracking_link", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-shipment-tracking.php:151
  - RETRIEVAL call to get_post_meta($order_id, "_shipment_date_shipped", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-webhook.php:139
  - RETRIEVAL call to get_post(absint($order_id)) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
includes/class-dropshipping-woocommerce-webhook.php:150
  - RETRIEVAL call to get_post_meta($order_id, "_knawat_order", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-webhook.php:188
  - RETRIEVAL call to get_post_meta($order_id, "_knawat_order", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-webhook.php:215
  - RETRIEVAL call to get_post_meta($order_id, "_knawat_order", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-webhook.php:242
  - RETRIEVAL call to get_post_meta($order_id, "_knawat_order", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-webhook.php:262
  - RETRIEVAL call to get_post_meta($order_id, "_knawat_order_ds", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
includes/lib/knawat-merlin/knawat-merlin.php:169
  - RETRIEVAL call to get_transient($this->slug . "_merlin_redirect") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
includes/lib/knawat-merlin/knawat-merlin.php:594
  - RETRIEVAL call to get_option("merlin_" . $this->slug . "_completed") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/lib/tgmpa/class-tgm-plugin-activation.php:672
  - RETRIEVAL call to get_user_meta(get_current_user_id(), "tgmpa_dismissed_notice_" . $this->id, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
includes/lib/tgmpa/class-tgm-plugin-activation.php:1130
  - RETRIEVAL call to get_user_meta(get_current_user_id(), "tgmpa_dismissed_notice_" . $this->id, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
includes/lib/tgmpa/class-tgm-plugin-activation.php:2081
  - RETRIEVAL call to get_option("recently_activated") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/lib/tgmpa/class-tgm-plugin-activation.php:3070
  - RETRIEVAL call to get_option("recently_activated") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
templates/admin/dropshipping-woocommerce-settings.php:16
  - RETRIEVAL call to get_option("knawat_last_imported", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
templates/admin/dropshipping-woocommerce-settings.php:126
  - RETRIEVAL call to get_option("knawat_order_pull_cron_interval", 6 * 60 * 60) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
templates/myaccount/shipment-tracking.php:39
  - RETRIEVAL call to get_option("date_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option 

includes/class-dropshipping-wc-background-process.php:64
  - STORAGE call to update_option($error_option, $error_log) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-dropshipping-wc-background-process.php:84
  - STORAGE call to delete_transient("knawat_stop_import") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).
  - Data types: site
includes/class-dropshipping-wc-background-process.php:100
  - STORAGE call to update_option("knawat_full_import", "done", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
includes/class-dropshipping-wc-cron.php:57
  - STORAGE call to update_option("knawat_order_pull_cron_interval", sanitize_text_field($interval)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-dropshipping-wc-mp-orders.php:81
  - STORAGE call to delete_post_meta($order_id, "_knawat_sync_failed") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/class-dropshipping-wc-mp-orders.php:94
  - STORAGE call to delete_post_meta($order_id, "_knawat_sync_failed") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/class-dropshipping-wc-mp-orders.php:105
  - STORAGE call to update_post_meta($order_id, "_knawat_sync_failed", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-dropshipping-wc-mp-orders.php:112
  - STORAGE call to update_post_meta($order_id, "_knawat_sync_failed", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-dropshipping-wc-mp-orders.php:150
  - STORAGE call to delete_post_meta($order_id, "_knawat_sync_failed") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/class-dropshipping-wc-mp-orders.php:162
  - STORAGE call to update_post_meta($order_id, "_knawat_order_id", $korder_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-dropshipping-wc-mp-orders.php:163
  - STORAGE call to delete_post_meta($order_id, "_knawat_sync_failed") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/class-dropshipping-wc-mp-orders.php:174
  - STORAGE call to update_post_meta($order_id, "_knawat_sync_failed", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-dropshipping-wc-mp-orders.php:181
  - STORAGE call to update_post_meta($order_id, "_knawat_sync_failed", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-admin-dashboard.php:287
  - STORAGE call to set_transient($transient_name, $lowinstock_count, DAY_IN_SECONDS / 24) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
includes/class-dropshipping-woocommerce-admin-dashboard.php:307
  - STORAGE call to set_transient($transient_name, $outofstock_count, DAY_IN_SECONDS / 24) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
includes/class-dropshipping-woocommerce-admin.php:495
  - STORAGE call to set_transient("knawat_stop_import", "product_import", 20) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
includes/class-dropshipping-woocommerce-admin.php:683
  - STORAGE call to update_post_meta($variation_id, "_knawat_dropshipper", $dropshipper) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-admin.php:688
  - STORAGE call to update_post_meta($variation_id, "_localds_stock", $localds_stock) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-admin.php:711
  - STORAGE call to update_option("knawat_dropwc_version", KNAWAT_DROPWC_VERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-dropshipping-woocommerce-api.php:107
  - STORAGE call to set_transient("knawat_mp_access_channel", $channel, 24 * HOUR_IN_SECONDS) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
includes/class-dropshipping-woocommerce-api.php:155
  - STORAGE call to set_transient($transient_name, $response, $cache_time) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
includes/class-dropshipping-woocommerce-common.php:242
  - STORAGE call to update_option("knawat_last_imported", "1483300000000") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-dropshipping-woocommerce-common.php:350
  - STORAGE call to delete_transient("knawat_mp_access_channel") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).
  - Data types: site
includes/class-dropshipping-woocommerce-common.php:393
  - STORAGE call to update_option($notice_type, "dismissed") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-dropshipping-woocommerce-common.php:437
  - STORAGE call to delete_transient("knawat_persistent_notices") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).
  - Data types: site
includes/class-dropshipping-woocommerce-common.php:587
  - STORAGE call to update_option(KNAWAT_DROPWC_OPTIONS, $knawat_options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-dropshipping-woocommerce-common.php:735
  - STORAGE call to set_transient("knawat_persistent_notices", $messages, 5 * MINUTE_IN_SECONDS) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
includes/class-dropshipping-woocommerce-importer.php:305
  - STORAGE call to update_option("knawat_last_imported", $last_update_time, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).
  - Data types: option
includes/class-dropshipping-woocommerce-orders.php:145
  - STORAGE call to wp_delete_post($child->ID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post_meta, post, wp_post
includes/class-dropshipping-woocommerce-orders.php:159
  - STORAGE call to update_post_meta($parent_order_id, "_knawat_order", 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-orders.php:161
  - STORAGE call to update_post_meta($parent_order_id, "_knawat_order_ds", $order_type) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-orders.php:169
  - STORAGE call to update_post_meta($parent_order_id, "_knawat_sub_order", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-orders.php:312
  - STORAGE call to wp_insert_post($order_data). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
includes/class-dropshipping-woocommerce-orders.php:375
  - STORAGE call to update_post_meta($order_id, $val, $parent_order->$order_key()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-orders.php:418
  - STORAGE call to update_post_meta($order_id, "_payment_method", $parent_order->get_payment_method()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-orders.php:419
  - STORAGE call to update_post_meta($order_id, "_payment_method_title", $parent_order->get_payment_method_title()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-orders.php:421
  - STORAGE call to update_post_meta($order_id, "_order_shipping", wc_format_decimal($shipping_cost)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-orders.php:422
  - STORAGE call to update_post_meta($order_id, "_order_discount", wc_format_decimal($discount)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-orders.php:423
  - STORAGE call to update_post_meta($order_id, "_cart_discount", wc_format_decimal($discount)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-orders.php:424
  - STORAGE call to update_post_meta($order_id, "_order_tax", wc_format_decimal($order_tax)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-orders.php:425
  - STORAGE call to update_post_meta($order_id, "_order_shipping_tax", wc_format_decimal($shipping_tax)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-orders.php:426
  - STORAGE call to update_post_meta($order_id, "_order_total", wc_format_decimal($order_in_total)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-orders.php:427
  - STORAGE call to update_post_meta($order_id, "_order_key", apply_filters("woocommerce_generate_order_key", uniqid("order_"))) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-orders.php:428
  - STORAGE call to update_post_meta($order_id, "_customer_user", $parent_order->get_customer_id()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-orders.php:429
  - STORAGE call to update_post_meta($order_id, "_order_currency", get_post_meta($parent_order->get_id(), "_order_currency", true)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-orders.php:430
  - STORAGE call to update_post_meta($order_id, "_prices_include_tax", $parent_order->get_prices_include_tax()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-orders.php:431
  - STORAGE call to update_post_meta($order_id, "_customer_ip_address", get_post_meta($parent_order->get_id(), "_customer_ip_address", true)) alters data types {'ip', 'post_meta', 'address'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: ip, post_meta, address
includes/class-dropshipping-woocommerce-orders.php:432
  - STORAGE call to update_post_meta($order_id, "_customer_user_agent", get_post_meta($parent_order->get_id(), "_customer_user_agent", true)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-orders.php:436
  - STORAGE call to update_post_meta($order_id, "_knawat_order", 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-orders.php:438
  - STORAGE call to update_post_meta($order_id, "_knawat_order_ds", $order_type) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-orders.php:1205
  - STORAGE call to wp_delete_post($sub_order_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post_meta, post, wp_post
includes/class-dropshipping-woocommerce-orders.php:1376
  - STORAGE call to update_post_meta($order->get_id(), "_knawat_order_total_cost", wc_format_decimal($order_total_cost, wc_get_price_decimals())) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-orders.php:1443
  - STORAGE call to update_post_meta($refund_id, "_knawat_order", "1") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-orders.php:1477
  - STORAGE call to update_post_meta($refund->get_id(), "_knawat_order_total_cost", wc_format_decimal($refund_total_cost, wc_get_price_decimals())) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-orders.php:1505
  - STORAGE call to update_post_meta($variation_id, "_localds_stock", $product_stock - $item_qty) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-orders.php:1528
  - STORAGE call to update_post_meta($order_id, "_knawat_order", 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-shipment-tracking.php:188
  - STORAGE call to update_post_meta($order_id, "_shipment_provider_name", $provider_name) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-shipment-tracking.php:189
  - STORAGE call to update_post_meta($order_id, "_shipment_tracking_number", $tracking_number) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-shipment-tracking.php:190
  - STORAGE call to update_post_meta($order_id, "_shipment_tracking_link", $tracking_link) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-shipment-tracking.php:191
  - STORAGE call to update_post_meta($order_id, "_shipment_date_shipped", $date_shipped) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
includes/lib/knawat-merlin/knawat-merlin.php:161
  - STORAGE call to set_transient("dropshipping-woocommerce_merlin_redirect", 1) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed). Returns (bool).
  - Data types: site
includes/lib/knawat-merlin/knawat-merlin.php:173
  - STORAGE call to delete_transient($this->slug . "_merlin_redirect") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).
  - Data types: site
includes/lib/knawat-merlin/knawat-merlin.php:213
  - STORAGE call to update_option("merlin_" . $this->slug . "_completed", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/lib/knawat-merlin/knawat-merlin.php:898
  - STORAGE call to update_option("merlin_" . $this->slug . "_completed", time()) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/lib/knawat-merlin/knawat-merlin.php:1079
  - STORAGE call to delete_transient("knawat_mp_access_channel") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).
  - Data types: site
includes/lib/tgmpa/class-tgm-plugin-activation.php:1366
  - STORAGE call to update_user_meta(get_current_user_id(), "tgmpa_dismissed_notice_" . $this->id, 1) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
includes/lib/tgmpa/class-tgm-plugin-activation.php:2023
  - STORAGE call to delete_metadata("user", null, "tgmpa_dismissed_notice_" . $this->id, null, true) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 2: $meta_key (string), 4: $delete_all (bool), 3: $meta_value (mixed). Returns (bool).
  - Data types: meta
includes/lib/tgmpa/class-tgm-plugin-activation.php:2081
  - STORAGE call to update_option("recently_activated", $deactivated + get_option("recently_activated")) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/lib/tgmpa/class-tgm-plugin-activation.php:3076
  - STORAGE call to update_option("recently_activated", $recent) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option 

includes/class-dropshipping-wc-mp-orders.php:81
  - DELETION call to delete_post_meta($order_id, "_knawat_sync_failed") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/class-dropshipping-wc-mp-orders.php:94
  - DELETION call to delete_post_meta($order_id, "_knawat_sync_failed") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/class-dropshipping-wc-mp-orders.php:150
  - DELETION call to delete_post_meta($order_id, "_knawat_sync_failed") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/class-dropshipping-wc-mp-orders.php:163
  - DELETION call to delete_post_meta($order_id, "_knawat_sync_failed") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
includes/class-dropshipping-woocommerce-orders.php:145
  - DELETION call to wp_delete_post($child->ID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post_meta, post, wp_post
includes/class-dropshipping-woocommerce-orders.php:1205
  - DELETION call to wp_delete_post($sub_order_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post_meta, post, wp_post
includes/lib/wp-background-processing/wp-background-process.php:248
  - DELETION call to delete_site_transient($this->identifier . "_process_lock"). Passed arguments: 0: $transient (string). Returns (bool). 

By data type:
address
	WordPressStorageDetector.update_post_meta($order_id, "_customer_ip_address", get_post_meta($parent_order->get_id(), "_customer_ip_address", true)) - {'ip', 'post_meta', 'address'}
country
	VariableDetector.(unknown) - {'country'}
	VariableDetector.(unknown) - {'country'}
	VariableDetector.(unknown) - {'country'}
	VariableDetector.(unknown) - {'country'}
email
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
ip
	WordPressStorageDetector.update_post_meta($order_id, "_customer_ip_address", get_post_meta($parent_order->get_id(), "_customer_ip_address", true)) - {'ip', 'post_meta', 'address'}
meta
	WordPressStorageDetector.delete_metadata("user", null, "tgmpa_dismissed_notice_" . $this->id, null, true) - {'meta'}
none
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	WordPressStorageDetector.wp_insert_post($order_data) - set()
	PHPIncludedDetector.(unknown) - set()
	DeletionDetector.delete_site_transient($this->identifier . "_process_lock") - set()
option
	WordPressRetrievalDetector.get_option("knawat_last_imported", false) - {'option'}
	WordPressRetrievalDetector.get_option($error_option, []) - {'option'}
	WordPressStorageDetector.update_option("merlin_" . $this->slug . "_completed", time()) - {'option'}
	WordPressRetrievalDetector.get_option("active_plugins", []) - {'option'}
	WordPressRetrievalDetector.get_option("active_plugins") - {'option'}
	WordPressRetrievalDetector.get_option("date_format") - {'option'}
	WordPressStorageDetector.update_option("knawat_dropwc_version", KNAWAT_DROPWC_VERSION) - {'option'}
	WordPressRetrievalDetector.get_option("recently_activated") - {'option'}
	WordPressRetrievalDetector.get_option(KNAWAT_DROPWC_OPTIONS, []) - {'option'}
	WordPressStorageDetector.update_option("merlin_" . $this->slug . "_completed", false) - {'option'}
	WordPressRetrievalDetector.get_option("knawat_dropwc_version", "1.2.0") - {'option'}
	WordPressStorageDetector.update_option("knawat_order_pull_cron_interval", sanitize_text_field($interval)) - {'option'}
	WordPressStorageDetector.update_option(KNAWAT_DROPWC_OPTIONS, $knawat_options) - {'option'}
	WordPressRetrievalDetector.get_option($notice_type, false) - {'option'}
	WordPressStorageDetector.update_option("recently_activated", $recent) - {'option'}
	WordPressRetrievalDetector.get_option("knawat_last_imported", false) - {'option'}
	WordPressStorageDetector.update_option("recently_activated", $deactivated + get_option("recently_activated")) - {'option'}
	WordPressRetrievalDetector.get_option("knawat_order_pull_cron_interval", 6 * 60 * 60) - {'option'}
	WordPressStorageDetector.update_option("knawat_last_imported", "1483300000000") - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_notify_low_stock_amount") - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_notify_no_stock_amount") - {'option'}
	WordPressRetrievalDetector.get_option("knawat_order_pull_cron_interval", 6 * 60 * 60) - {'option'}
	WordPressRetrievalDetector.get_option("active_plugins", []) - {'option'}
	WordPressStorageDetector.update_option("knawat_full_import", "done", false) - {'option'}
	WordPressRetrievalDetector.get_option("merlin_" . $this->slug . "_completed") - {'option'}
	WordPressStorageDetector.update_option("knawat_last_imported", $last_update_time, false) - {'option'}
	WordPressStorageDetector.update_option($notice_type, "dismissed") - {'option'}
	WordPressStorageDetector.update_option($error_option, $error_log) - {'option'}
	WordPressRetrievalDetector.get_option("recently_activated") - {'option'}
post
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.wp_delete_post($child->ID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post(absint($order_id)) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_field("post_author", $parent_order->get_id()) - {'post_meta', 'post', 'wp_post'}
	DeletionDetector.wp_delete_post($sub_order_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'post', 'wp_post'}
	DeletionDetector.wp_delete_post($child->ID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($order_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.wp_delete_post($sub_order_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'post', 'wp_post'}
post_meta
	WordPressStorageDetector.update_post_meta($order_id, "_order_discount", wc_format_decimal($discount)) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_knawat_sync_failed", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($args["order_id"], "_knawat_order", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($item["product_id"], "dropshipping", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_customer_user", $parent_order->get_customer_id()) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product_id, "dropshipping", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($parent_order->get_id(), "_customer_user_agent", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_knawat_order", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_knawat_order_id", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($variation_id, "_knawat_dropshipper", $dropshipper) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_prices_include_tax", $parent_order->get_prices_include_tax()) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_order_total", wc_format_decimal($order_in_total)) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_knawat_order", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_knawat_sync_failed", true) - {'post_meta'}
	WordPressStorageDetector.wp_delete_post($child->ID) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($order_id, "_order_shipping", wc_format_decimal($shipping_cost)) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product_id, "dropshipping", true) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($order_id, "_knawat_sync_failed") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product_id, "dropshipping", true) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($order_id, "_knawat_sync_failed") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, $val, $parent_order->$order_key()) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($parent_order->get_id(), "_order_currency", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($variation_id, "_knawat_dropshipper", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_shipment_tracking_number", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_order_tax", wc_format_decimal($order_tax)) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_knawat_order_ds", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($parent_order->get_id(), "_customer_ip_address", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_knawat_order", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_order_currency", get_post_meta($parent_order->get_id(), "_order_currency", true)) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_knawat_order", true) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($order_id, "_knawat_sync_failed") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($variation->ID, "_knawat_cost", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($parent_order_id, "_knawat_order", 1) - {'post_meta'}
	WordPressRetrievalDetector.get_post(absint($order_id)) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_field("post_author", $parent_order->get_id()) - {'post_meta', 'post', 'wp_post'}
	DeletionDetector.wp_delete_post($sub_order_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_shipment_date_shipped", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_shipment_tracking_link", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_knawat_order_status", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "_knawat_order_ds", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_customer_user_agent", get_post_meta($parent_order->get_id(), "_customer_user_agent", true)) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_order_shipping_tax", wc_format_decimal($shipping_tax)) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_knawat_sync_failed", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($order_id, "_knawat_sync_failed", true) - {'post_meta'}
	DeletionDetector.delete_post_meta($order_id, "_knawat_sync_failed") - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($order_id, "_knawat_sync_failed") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($variation_id, "_localds_stock", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($variation_id, "_localds_stock", $product_stock - $item_qty) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_knawat_order", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "_knawat_order_ds", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_knawat_order_ds", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_knawat_order_id", $korder_id) - {'post_meta'}
	DeletionDetector.wp_delete_post($child->ID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($order_id) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($parent_order_id, "_knawat_order_ds", $order_type) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($parent_order_id, "_knawat_sub_order", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_knawat_order_id", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_shipment_provider_name", $provider_name) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($variation_id, "_knawat_dropshipper", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($product_id, "_knawat_cost", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($variation_id, "_localds_stock", $localds_stock) - {'post_meta'}
	DeletionDetector.delete_post_meta($order_id, "_knawat_sync_failed") - {'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_knawat_order", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_shipment_date_shipped", $date_shipped) - {'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($order_id, "_order_key", apply_filters("woocommerce_generate_order_key", uniqid("order_"))) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_payment_method_title", $parent_order->get_payment_method_title()) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_knawat_order", 1) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($variation_id, "_localds_stock", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_payment_method", $parent_order->get_payment_method()) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_cart_discount", wc_format_decimal($discount)) - {'post_meta'}
	DeletionDetector.delete_post_meta($order_id, "_knawat_sync_failed") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($variation_id, "_localds_stock", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($refund->get_id(), "_knawat_order_total_cost", wc_format_decimal($refund_total_cost, wc_get_price_decimals())) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_knawat_order", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order->get_id(), "_knawat_order_total_cost", wc_format_decimal($order_total_cost, wc_get_price_decimals())) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($parent_order_id, "_knawat_sub_order") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_customer_ip_address", get_post_meta($parent_order->get_id(), "_customer_ip_address", true)) - {'ip', 'post_meta', 'address'}
	WordPressStorageDetector.update_post_meta($order_id, "_knawat_order", 1) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_shipment_tracking_number", $tracking_number) - {'post_meta'}
	WordPressStorageDetector.wp_delete_post($sub_order_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($product_id, "_knawat_cost", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_knawat_order_status", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_shipment_tracking_link", $tracking_link) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->get_id(), "_knawat_order_ds", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($variation_id, "_knawat_dropshipper", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order_id, "_shipment_provider_name", true) - {'post_meta'}
	DeletionDetector.delete_post_meta($order_id, "_knawat_sync_failed") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($refund_id, "_knawat_order", "1") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($order_id, "_knawat_order_ds", $order_type) - {'post_meta'}
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($product_id, "dropshipping", true) - {'post_meta'}
remote
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
site
	WordPressRetrievalDetector.get_transient($this->slug . "_merlin_redirect") - {'site'}
	WordPressStorageDetector.set_transient($transient_name, $outofstock_count, DAY_IN_SECONDS / 24) - {'site'}
	WordPressRetrievalDetector.get_transient("knawat_persistent_notices") - {'site'}
	WordPressStorageDetector.set_transient($transient_name, $lowinstock_count, DAY_IN_SECONDS / 24) - {'site'}
	WordPressStorageDetector.set_transient("dropshipping-woocommerce_merlin_redirect", 1) - {'site'}
	WordPressStorageDetector.delete_transient("knawat_stop_import") - {'site'}
	WordPressStorageDetector.set_transient($transient_name, $response, $cache_time) - {'site'}
	WordPressRetrievalDetector.get_transient("knawat_mp_access_channel") - {'site'}
	WordPressStorageDetector.delete_transient("knawat_mp_access_channel") - {'site'}
	WordPressRetrievalDetector.get_transient($transient_name) - {'site'}
	WordPressStorageDetector.delete_transient("knawat_mp_access_channel") - {'site'}
	WordPressStorageDetector.set_transient("knawat_stop_import", "product_import", 20) - {'site'}
	WordPressStorageDetector.delete_transient("knawat_persistent_notices") - {'site'}
	WordPressRetrievalDetector.get_transient($transient_name) - {'site'}
	WordPressRetrievalDetector.get_transient("knawat_stop_import") - {'site'}
	WordPressStorageDetector.set_transient("knawat_mp_access_channel", $channel, 24 * HOUR_IN_SECONDS) - {'site'}
	WordPressRetrievalDetector.get_transient($transient_name) - {'site'}
	WordPressStorageDetector.delete_transient($this->slug . "_merlin_redirect") - {'site'}
	WordPressStorageDetector.set_transient("knawat_persistent_notices", $messages, 5 * MINUTE_IN_SECONDS) - {'site'}
user_meta
	WordPressStorageDetector.update_user_meta(get_current_user_id(), "tgmpa_dismissed_notice_" . $this->id, 1) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta(get_current_user_id(), "tgmpa_dismissed_notice_" . $this->id, true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta(get_current_user_id(), "tgmpa_dismissed_notice_" . $this->id, true) - {'user_meta'}
wp_post
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.wp_delete_post($child->ID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post(absint($order_id)) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_field("post_author", $parent_order->get_id()) - {'post_meta', 'post', 'wp_post'}
	DeletionDetector.wp_delete_post($sub_order_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'post', 'wp_post'}
	DeletionDetector.wp_delete_post($child->ID) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($order_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.wp_delete_post($sub_order_id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($post_id) - {'post_meta', 'post', 'wp_post'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:25.765544.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 2264 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.805159.

1000 STORE_REACHES edges created
2000 STORE_REACHES edges created
2264 STORE_REACHES edges created
2264 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 605 nodes as PERSONAL
In total, tainted 605 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 3 nodes as ENCRYPTED
In total, tainted 3 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:13.811721.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:03:40.272692!
DELETION call to delete_post_meta($order_id, "_knawat_sync_failed") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($order_id, "_knawat_sync_failed") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($order_id, "_knawat_sync_failed") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($order_id, "_knawat_sync_failed") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to wp_delete_post($sub_order_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).,None,None
DELETION call to wp_delete_post($child->ID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).,None,None
DELETION call to delete_site_transient($this->identifier . "_process_lock"). Passed arguments: 0: $transient (string). Returns (bool).,None,None
MD5 called with parameters [wp_json_encode, url, this, headers]. Ignore if [wp_json_encode, url, this, headers] does not contain personal information.,md5,None
MD5 called with parameters [serialize, json]. Ignore if [serialize, json] does not contain personal information.,md5,None
MD5 called with parameters [rand, microtime]. Ignore if [rand, microtime] does not contain personal information.,md5,None
variable '$ship_country' of personal types {'country'} is found.,,None
variable '$ship_country' of personal types {'country'} is found.,,None
variable '$ship_country' of personal types {'country'} is found.,,None
variable '$ship_country' of personal types {'country'} is found.,,None
variable '$email_ids' of personal types {'email'} is found.,,None
variable '$email_ids' of personal types {'email'} is found.,,None
variable '$email_id' of personal types {'email'} is found.,,None
variable '$email_id' of personal types {'email'} is found.,,None
API call to wp_remote_get($url, ["timeout" => 30, "headers" => $this->headers]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,['https://mp.knawat.io/api']
API call to wp_remote_post($url, ["body" => $data, "timeout" => 30, "headers" => $this->headers]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,['https://mp.knawat.io/api']
API call to wp_remote_request($url, ["method" => "PUT", "body" => $data, "timeout" => 30, "headers" => $this->headers]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,['https://mp.knawat.io/api']
API call to wp_remote_request($url, ["method" => "DELETE", "body" => $data, "timeout" => 30, "headers" => $this->headers]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,['https://mp.knawat.io/api']
API call to wp_remote_post($this->api_url . "/token", ["body" => $keydata, "timeout" => 30, "headers" => ["User-Agent" => $this->headers["User-Agent"]]]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_post(esc_url_raw($url), $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
RETRIEVAL call to get_option("active_plugins", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("active_plugins") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($error_option, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_transient("knawat_stop_import") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("knawat_order_pull_cron_interval", 6 * 60 * 60) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_knawat_order", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product_id, "dropshipping", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_knawat_order", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_knawat_order_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_notify_low_stock_amount") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_notify_no_stock_amount") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_transient($transient_name) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_transient($transient_name) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_knawat_order_status", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_knawat_order_status", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($variation->ID, "_knawat_cost", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("knawat_dropwc_version", "1.2.0") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_knawat_order", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_knawat_order_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_transient($transient_name) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_transient("knawat_mp_access_channel") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product_id, "dropshipping", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option($notice_type, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_transient("knawat_persistent_notices") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($post_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($post_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option(KNAWAT_DROPWC_OPTIONS, []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("active_plugins", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_knawat_order_ds", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product_id, "dropshipping", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("knawat_last_imported", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post($order_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($post_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($post_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($post_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($post->get_id(), "_knawat_order_ds", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($parent_order_id, "_knawat_sub_order") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product_id, "_knawat_cost", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product_id, "_knawat_cost", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($args["order_id"], "_knawat_order", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($variation_id, "_knawat_dropshipper", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($variation_id, "_localds_stock", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($product_id, "dropshipping", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($variation_id, "_knawat_dropshipper", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($variation_id, "_localds_stock", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_field("post_author", $parent_order->get_id()) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $field (string), 1: $post (int|WP_Post). Returns (string).,None,None
RETRIEVAL call to get_post_meta($parent_order->get_id(), "_order_currency", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($parent_order->get_id(), "_customer_ip_address", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($parent_order->get_id(), "_customer_user_agent", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($item["product_id"], "dropshipping", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($variation_id, "_knawat_dropshipper", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($variation_id, "_localds_stock", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "_knawat_order_ds", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "_knawat_order_ds", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_shipment_provider_name", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_shipment_tracking_number", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_shipment_tracking_link", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_shipment_date_shipped", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post(absint($order_id)) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($order_id, "_knawat_order", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_knawat_order", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_knawat_order", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_knawat_order", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order_id, "_knawat_order_ds", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_transient($this->slug . "_merlin_redirect") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("merlin_" . $this->slug . "_completed") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta(get_current_user_id(), "tgmpa_dismissed_notice_" . $this->id, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("recently_activated") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("recently_activated") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta(get_current_user_id(), "tgmpa_dismissed_notice_" . $this->id, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("knawat_order_pull_cron_interval", 6 * 60 * 60) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("knawat_last_imported", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("date_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
STORAGE call to update_option("knawat_full_import", "done", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to update_option($error_option, $error_log) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_transient("knawat_stop_import") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).,None,None
STORAGE call to update_option("knawat_order_pull_cron_interval", sanitize_text_field($interval)) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($order_id, "_knawat_sync_failed", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_knawat_sync_failed", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($order_id, "_knawat_sync_failed") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($order_id, "_knawat_order_id", $korder_id) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($order_id, "_knawat_sync_failed") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($order_id, "_knawat_sync_failed", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_knawat_sync_failed", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($order_id, "_knawat_sync_failed") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_post_meta($order_id, "_knawat_sync_failed") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to set_transient($transient_name, $lowinstock_count, DAY_IN_SECONDS / 24) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to set_transient($transient_name, $outofstock_count, DAY_IN_SECONDS / 24) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to set_transient("knawat_stop_import", "product_import", 20) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to update_post_meta($variation_id, "_knawat_dropshipper", $dropshipper) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($variation_id, "_localds_stock", $localds_stock) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("knawat_dropwc_version", KNAWAT_DROPWC_VERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to set_transient("knawat_mp_access_channel", $channel, 24 * HOUR_IN_SECONDS) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to set_transient($transient_name, $response, $cache_time) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to update_option("knawat_last_imported", "1483300000000") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_transient("knawat_mp_access_channel") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).,None,None
STORAGE call to update_option($notice_type, "dismissed") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_transient("knawat_persistent_notices") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).,None,None
STORAGE call to update_option(KNAWAT_DROPWC_OPTIONS, $knawat_options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to set_transient("knawat_persistent_notices", $messages, 5 * MINUTE_IN_SECONDS) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to update_option("knawat_last_imported", $last_update_time, false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed), 2: $autoload (string|bool). Returns (bool).,None,None
STORAGE call to wp_delete_post($sub_order_id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).,None,None
STORAGE call to update_post_meta($order->get_id(), "_knawat_order_total_cost", wc_format_decimal($order_total_cost, wc_get_price_decimals())) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($refund_id, "_knawat_order", "1") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_delete_post($child->ID) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $postid (int). Returns (WP_Post|false|null).,None,None
STORAGE call to update_post_meta($refund->get_id(), "_knawat_order_total_cost", wc_format_decimal($refund_total_cost, wc_get_price_decimals())) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($variation_id, "_localds_stock", $product_stock - $item_qty) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_knawat_order", 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($parent_order_id, "_knawat_order", 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($parent_order_id, "_knawat_order_ds", $order_type) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($parent_order_id, "_knawat_sub_order", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_insert_post($order_data). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($order_id, $val, $parent_order->$order_key()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_payment_method", $parent_order->get_payment_method()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_payment_method_title", $parent_order->get_payment_method_title()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_order_shipping", wc_format_decimal($shipping_cost)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_order_discount", wc_format_decimal($discount)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_cart_discount", wc_format_decimal($discount)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_order_tax", wc_format_decimal($order_tax)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_order_shipping_tax", wc_format_decimal($shipping_tax)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_order_total", wc_format_decimal($order_in_total)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_order_key", apply_filters("woocommerce_generate_order_key", uniqid("order_"))) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_customer_user", $parent_order->get_customer_id()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_order_currency", get_post_meta($parent_order->get_id(), "_order_currency", true)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_prices_include_tax", $parent_order->get_prices_include_tax()) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_customer_ip_address", get_post_meta($parent_order->get_id(), "_customer_ip_address", true)) alters data types {'ip', 'post_meta', 'address'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_customer_user_agent", get_post_meta($parent_order->get_id(), "_customer_user_agent", true)) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_knawat_order", 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_knawat_order_ds", $order_type) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_shipment_provider_name", $provider_name) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_shipment_tracking_number", $tracking_number) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_shipment_tracking_link", $tracking_link) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order_id, "_shipment_date_shipped", $date_shipped) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_transient("knawat_mp_access_channel") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).,None,None
STORAGE call to set_transient("dropshipping-woocommerce_merlin_redirect", 1) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_transient($this->slug . "_merlin_redirect") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).,None,None
STORAGE call to update_option("merlin_" . $this->slug . "_completed", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("merlin_" . $this->slug . "_completed", time()) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_user_meta(get_current_user_id(), "tgmpa_dismissed_notice_" . $this->id, 1) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_metadata("user", null, "tgmpa_dismissed_notice_" . $this->id, null, true) alters data types {'meta'}. Passed arguments: 0: $meta_type (string), 1: $object_id (int), 2: $meta_key (string), 4: $delete_all (bool), 3: $meta_value (mixed). Returns (bool).,None,None
STORAGE call to update_option("recently_activated", $deactivated + get_option("recently_activated")) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("recently_activated", $recent) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] PII of types (['country', 'ip', 'address']) stored through WordPress function "update_post_meta($order_id, "_order_discount", wc_format_decimal($discount))", found in file includes/class-dropshipping-woocommerce-orders.php at line 422. 

[has_storage] PII of types (['country', 'ip', 'address']) stored through WordPress function "update_post_meta($order_id, "_customer_user", $parent_order->get_customer_id())", found in file includes/class-dropshipping-woocommerce-orders.php at line 428. 

[has_storage] PII of types (['country', 'ip', 'address']) stored through WordPress function "update_post_meta($order_id, "_prices_include_tax", $parent_order->get_prices_include_tax())", found in file includes/class-dropshipping-woocommerce-orders.php at line 430. 

[has_storage] PII of types (['country', 'ip', 'address']) stored through WordPress function "update_post_meta($order_id, "_order_total", wc_format_decimal($order_in_total))", found in file includes/class-dropshipping-woocommerce-orders.php at line 426. 

[has_storage] PII of types (['country', 'ip', 'address']) stored through WordPress function "update_post_meta($order_id, "_order_shipping", wc_format_decimal($shipping_cost))", found in file includes/class-dropshipping-woocommerce-orders.php at line 421. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta(get_current_user_id(), "tgmpa_dismissed_notice_" . $this->id, 1)", found in file includes/lib/tgmpa/class-tgm-plugin-activation.php at line 1366. 

[has_storage] PII of types (['country', 'ip', 'address']) stored through WordPress function "update_post_meta($order_id, $val, $parent_order->$order_key())", found in file includes/class-dropshipping-woocommerce-orders.php at line 375. 

[has_storage] PII of types (['country', 'ip', 'address']) stored through WordPress function "update_post_meta($order_id, "_order_tax", wc_format_decimal($order_tax))", found in file includes/class-dropshipping-woocommerce-orders.php at line 424. 

[has_storage] PII of types (['country', 'ip', 'address']) stored through WordPress function "update_post_meta($order_id, "_order_currency", get_post_meta($parent_order->get_id(), "_order_currency", true))", found in file includes/class-dropshipping-woocommerce-orders.php at line 429. 

[has_storage] PII of types (['country', 'ip', 'address']) stored through WordPress function "wp_insert_post($order_data)", found in file includes/class-dropshipping-woocommerce-orders.php at line 312. 

[has_storage] PII of types (['country', 'ip', 'address']) stored through WordPress function "update_post_meta($order_id, "_customer_user_agent", get_post_meta($parent_order->get_id(), "_customer_user_agent", true))", found in file includes/class-dropshipping-woocommerce-orders.php at line 432. 

[has_storage] PII of types (['country', 'ip', 'address']) stored through WordPress function "update_post_meta($order_id, "_order_shipping_tax", wc_format_decimal($shipping_tax))", found in file includes/class-dropshipping-woocommerce-orders.php at line 425. 

[has_storage] PII of types (['country', 'ip', 'address']) stored through WordPress function "update_post_meta($variation_id, "_localds_stock", $product_stock - $item_qty)", found in file includes/class-dropshipping-woocommerce-orders.php at line 1505. 

[has_storage] PII of types (['country', 'ip', 'address']) stored through WordPress function "update_post_meta($order_id, "_order_key", apply_filters("woocommerce_generate_order_key", uniqid("order_")))", found in file includes/class-dropshipping-woocommerce-orders.php at line 427. 

[has_storage] PII of types (['country', 'ip', 'address']) stored through WordPress function "update_post_meta($order_id, "_payment_method_title", $parent_order->get_payment_method_title())", found in file includes/class-dropshipping-woocommerce-orders.php at line 419. 

[has_storage] PII of types (['country', 'ip', 'address']) stored through WordPress function "update_post_meta($order_id, "_payment_method", $parent_order->get_payment_method())", found in file includes/class-dropshipping-woocommerce-orders.php at line 418. 

[has_storage] PII of types (['country', 'ip', 'address']) stored through WordPress function "update_post_meta($order_id, "_cart_discount", wc_format_decimal($discount))", found in file includes/class-dropshipping-woocommerce-orders.php at line 423. 

[has_storage] PII of types (['country', 'ip', 'address']) stored through WordPress function "update_post_meta($order->get_id(), "_knawat_order_total_cost", wc_format_decimal($order_total_cost, wc_get_price_decimals()))", found in file includes/class-dropshipping-woocommerce-orders.php at line 1376. 

[has_storage] PII of types (['country', 'ip', 'address']) stored through WordPress function "update_post_meta($order_id, "_customer_ip_address", get_post_meta($parent_order->get_id(), "_customer_ip_address", true))", found in file includes/class-dropshipping-woocommerce-orders.php at line 431. 

[has_storage] PII of types (['country', 'ip', 'address']) stored through WordPress function "update_post_meta($order_id, "_knawat_order", 1)", found in file includes/class-dropshipping-woocommerce-orders.php at line 436. 

[has_storage] PII of types (['country', 'ip', 'address']) stored through WordPress function "update_post_meta($order_id, "_knawat_order_ds", $order_type)", found in file includes/class-dropshipping-woocommerce-orders.php at line 438. 

[has_storage] Storage check is WP 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($order_id, "_order_discount", wc_format_decimal($discount)) does not have corresponding deletion method. Storage method found in file includes/class-dropshipping-woocommerce-orders.php at line 422. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($order_id, "_customer_user", $parent_order->get_customer_id()) does not have corresponding deletion method. Storage method found in file includes/class-dropshipping-woocommerce-orders.php at line 428. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($order_id, "_prices_include_tax", $parent_order->get_prices_include_tax()) does not have corresponding deletion method. Storage method found in file includes/class-dropshipping-woocommerce-orders.php at line 430. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($order_id, "_order_total", wc_format_decimal($order_in_total)) does not have corresponding deletion method. Storage method found in file includes/class-dropshipping-woocommerce-orders.php at line 426. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($order_id, "_order_shipping", wc_format_decimal($shipping_cost)) does not have corresponding deletion method. Storage method found in file includes/class-dropshipping-woocommerce-orders.php at line 421. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta(get_current_user_id(), "tgmpa_dismissed_notice_" . $this->id, 1) does not have corresponding deletion method. Storage method found in file includes/lib/tgmpa/class-tgm-plugin-activation.php at line 1366. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($order_id, $val, $parent_order->$order_key()) does not have corresponding deletion method. Storage method found in file includes/class-dropshipping-woocommerce-orders.php at line 375. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($order_id, "_order_tax", wc_format_decimal($order_tax)) does not have corresponding deletion method. Storage method found in file includes/class-dropshipping-woocommerce-orders.php at line 424. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($order_id, "_order_currency", get_post_meta($parent_order->get_id(), "_order_currency", true)) does not have corresponding deletion method. Storage method found in file includes/class-dropshipping-woocommerce-orders.php at line 429. 

[Art.17, Right to erasure] Wordpress storage of PII through wp_insert_post($order_data) has deletion method delete_site_transient($this->identifier . "_process_lock"). Storage method found in file includes/class-dropshipping-woocommerce-orders.php at line 312. Deletion method found in file includes/lib/wp-background-processing/wp-background-process.php at line 248. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($order_id, "_customer_user_agent", get_post_meta($parent_order->get_id(), "_customer_user_agent", true)) does not have corresponding deletion method. Storage method found in file includes/class-dropshipping-woocommerce-orders.php at line 432. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($order_id, "_order_shipping_tax", wc_format_decimal($shipping_tax)) does not have corresponding deletion method. Storage method found in file includes/class-dropshipping-woocommerce-orders.php at line 425. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($variation_id, "_localds_stock", $product_stock - $item_qty) does not have corresponding deletion method. Storage method found in file includes/class-dropshipping-woocommerce-orders.php at line 1505. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($order_id, "_order_key", apply_filters("woocommerce_generate_order_key", uniqid("order_"))) does not have corresponding deletion method. Storage method found in file includes/class-dropshipping-woocommerce-orders.php at line 427. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($order_id, "_payment_method_title", $parent_order->get_payment_method_title()) does not have corresponding deletion method. Storage method found in file includes/class-dropshipping-woocommerce-orders.php at line 419. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($order_id, "_payment_method", $parent_order->get_payment_method()) does not have corresponding deletion method. Storage method found in file includes/class-dropshipping-woocommerce-orders.php at line 418. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($order_id, "_cart_discount", wc_format_decimal($discount)) does not have corresponding deletion method. Storage method found in file includes/class-dropshipping-woocommerce-orders.php at line 423. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($order->get_id(), "_knawat_order_total_cost", wc_format_decimal($order_total_cost, wc_get_price_decimals())) does not have corresponding deletion method. Storage method found in file includes/class-dropshipping-woocommerce-orders.php at line 1376. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($order_id, "_customer_ip_address", get_post_meta($parent_order->get_id(), "_customer_ip_address", true)) does not have corresponding deletion method. Storage method found in file includes/class-dropshipping-woocommerce-orders.php at line 431. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($order_id, "_knawat_order", 1) does not have corresponding deletion method. Storage method found in file includes/class-dropshipping-woocommerce-orders.php at line 436. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($order_id, "_knawat_order_ds", $order_type) does not have corresponding deletion method. Storage method found in file includes/class-dropshipping-woocommerce-orders.php at line 438. 

[Art.17, Right to erasure] Deletion access is NONE 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 19975. Found in file includes/class-dropshipping-woocommerce-orders.php at line 422 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 20057. Found in file includes/class-dropshipping-woocommerce-orders.php at line 428 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 20089. Found in file includes/class-dropshipping-woocommerce-orders.php at line 430 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 20027. Found in file includes/class-dropshipping-woocommerce-orders.php at line 426 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 19962. Found in file includes/class-dropshipping-woocommerce-orders.php at line 421 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 36056. Found in file includes/lib/tgmpa/class-tgm-plugin-activation.php at line 1366 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 19713. Found in file includes/class-dropshipping-woocommerce-orders.php at line 375 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 20001. Found in file includes/class-dropshipping-woocommerce-orders.php at line 424 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 20069. Found in file includes/class-dropshipping-woocommerce-orders.php at line 429 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 19466. Found in file includes/class-dropshipping-woocommerce-orders.php at line 312 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 20121. Found in file includes/class-dropshipping-woocommerce-orders.php at line 432 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 20014. Found in file includes/class-dropshipping-woocommerce-orders.php at line 425 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 24501. Found in file includes/class-dropshipping-woocommerce-orders.php at line 1505 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 20040. Found in file includes/class-dropshipping-woocommerce-orders.php at line 427 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 19950. Found in file includes/class-dropshipping-woocommerce-orders.php at line 419 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 19938. Found in file includes/class-dropshipping-woocommerce-orders.php at line 418 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 19988. Found in file includes/class-dropshipping-woocommerce-orders.php at line 423 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 23924. Found in file includes/class-dropshipping-woocommerce-orders.php at line 1376 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 20101. Found in file includes/class-dropshipping-woocommerce-orders.php at line 431 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 20162. Found in file includes/class-dropshipping-woocommerce-orders.php at line 436 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 20179. Found in file includes/class-dropshipping-woocommerce-orders.php at line 438 

[Art.15, Right to access] Data access is NONE_BUT_NOT_REQUIRED 

[third_party] Third party at "https://mp.knawat.io/api" used with data types ['country', 'ip', 'address'], found in file includes/class-dropshipping-woocommerce-api.php at line 221 . Personal data flows from sources with nodeID [20101]  

[third_party] Third party usage is CONFIRMED for data types ['address', 'country', 'ip'] 

[encryption] API call that sends PII to unknown url uses unknown protocol. PII is insecurely encrypted with []. Found in file includes/lib/wp-background-processing/wp-async-request.php at line 87 

[encryption] API call that sends PII to "https://mp.knawat.io/api" uses https. PII is insecurely encrypted with []. Found in file includes/class-dropshipping-woocommerce-api.php at line 221 

[main] Applicable GDPR requirements: ['access', 'deletion', 'encryption', 'third_party'] 

[main] Is deletion in violation? True 

[main] Is access in violation? False 

[main] Is third_party in violation? True 

[main] Is encryption in violation? True 

[main] Complaint? False 


###########
### Q&A ###
###########

1. Why is my plugin in violation against GDPR?

GDPR (https://gdpr-info.eu/) aims to give citizens in the European Union (EU) control over their personal data. If a website collects or store user data, it is required to provide users functionalities to control their data, such as ones to erase or export their data. While a plugin do not directly interact with users, it may provide functionalities that collect or store personal data, which would make websites that deploy the plugin in violation against GDPR if the plugin does not provide corresponding functionalities to allow users control their personal data. Therefore, plugin developers are responsible to provide functions to manage the personal data they handle in accordance with GDPR. We list requirements by specific GDPR articles relevant to your plugin below.


[Art. 13, Information to be provided where personal data are collected from the data subject] If a plugin collects or handles personal data, it needs to provide privacy policy texts that explain what personal data is being collected and for what purpose. The texts are meant to be added to the privacy policy of the websites that deploy the plugin. 


            
[Art.17, Right to erasure] If a plugin stores personal data in a custom database they create or manage, or through Wordpress's native storage functions (e.g., update_user_meta), it needs to provide methods for users to erase the data upon request. Note that deleting data for all users upon uninstallation does not satisfy the requirement. 


            
        

2. How do I make my plugin compliant?

Please refer to the fix report below to see how you can make your plugin comply with GDPR.

        
