Timeout in resolving values
Timeout in running neo4j query
Running Main.py on mycred-learndash

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.925670.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.387040.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 32 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.555259.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 15 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.989494.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 2854 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:01.777463.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 5 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.952538.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.085986.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 1110 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:26.899563.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 24610
Added 20594 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 29026
Added 4416 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:03.104918.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/mycred-learndash/mycred-learndash.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/mycred-learndash/inc/class-mycred-buy-pts-handler.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/mycred-learndash/inc/class-mycred-learndash-badges.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/mycred-learndash/inc/class-mycred-learndash-complete-lesson-hook.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/mycred-learndash/inc/class-mycred-learndash-complete-topic-hook.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/mycred-learndash/inc/class-mycred-learndash-completing-course-hook.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/mycred-learndash/inc/class-mycred-learndash-completing-quiz-hook.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/mycred-learndash/inc/class-mycred-learndash-completing-quiz-max-percentage-hook.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/mycred-learndash/inc/class-mycred-learndash-completing-quiz-percentage-range-hook.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/mycred-learndash/inc/class-mycred-learndash-course-enrollment-hook.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/mycred-learndash/inc/class-mycred-learndash-group-hook.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/mycred-learndash/inc/class-mycred-learndash-hook.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/mycred-learndash/inc/class-mycred-learndash-lb-functions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/mycred-learndash/inc/class-mycred-learndash-leaderboard.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/mycred-learndash/inc/class-mycred-learndash.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/mycred-learndash/inc/class-mycred-learndash-quiz-failed-hook.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/mycred-learndash/inc/learndash-Percentage_range_backup.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/mycred-learndash/inc/mycred-learndash-lb-shortcode.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/mycred-learndash/inc/admin/settings/class-mycred-learndash-course-settings.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/mycred-learndash/inc/admin/settings/class-mycred-learndash-settings.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/mycred-learndash/inc/views/max_percentage.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/mycred-learndash/inc/views/min_percentage.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/mycred-learndash/inc/views/mycred_badges_override.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/mycred-learndash/inc/views/my_cred_overide.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:02.171850.

32 PHP_REACHES edges created
15 REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
2854 PHP_REACHES edges created
5 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
14000 PHP_REACHES edges created
15000 PHP_REACHES edges created
16000 PHP_REACHES edges created
17000 PHP_REACHES edges created
18000 PHP_REACHES edges created
19000 PHP_REACHES edges created
20000 PHP_REACHES edges created
21000 PHP_REACHES edges created
21704 PHP_REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
4416 PHP_REACHES edges created
29026 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 9035 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.625385.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:18.846266.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 140 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:04.499434.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 170 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.175705.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:03.005778.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:03.183174.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.045225.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.028590.

310 PHP_REACHES edges created
310 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 264 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.125052.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
4 SQL operations to process.
$query_users
SQL command ($query_users) cannot be parsed correct.
SELECT DISTINCT l.user_id AS ID,
                    SUM( l.creds ) AS cred 
                    FROM $mycred_log_table l
                    WHERE l.ctype IN ('implode("\', \'", $pt_types)') AND ( l.creds > 0 )  AND (l.ref = shortcode_atts($default, $atts)_type_completed)
                    $ref_id
                    $timeframe    
                    GROUP BY l.user_id ORDER BY SUM( l.creds ) DESC,l.time LIMIT shortcode_atts($default, $atts)
SELECT DISTINCT l.user_id AS ID,
                    SUM( l.creds ) AS cred 
                    FROM $mycred_log_table l
                    WHERE l.ctype IN ('implode("\', \'", $pt_types)') AND ( l.creds > 0 )  AND (l.ref = shortcode_atts($default, $atts)_type_completed)
                    $ref_id
                    $timeframe    
                    GROUP BY l.user_id ORDER BY SUM( l.creds ) DESC,l.time LIMIT shortcode_atts($default, $atts)
SQL command (SELECT DISTINCT l.user_id AS ID, SUM( l.creds ) AS cred FROM $mycred_log_table l WHERE l.ctype IN ('implode("\', \'", $pt_types)') AND ( l.creds > 0 ) AND (l.ref = shortcode_atts($default, $atts)_type_completed) $ref_id $timeframe GROUP BY l.user_id ORDER BY SUM( l.creds ) DESC,l.time LIMIT shortcode_atts($default, $atts)) cannot be parsed correct.
SELECT DISTINCT l.user_id AS ID,
                    SUM( l.creds ) AS cred 
                    FROM $mycred_log_table l
                    WHERE l.ctype IN ('implode("\', \'", $pt_types)') AND ( l.creds > 0 )  AND (l.ref = shortcode_atts($default, $atts)_type_completed)
                    $ref_id
                    $timeframe    
                    GROUP BY l.user_id ORDER BY SUM( l.creds ) DESC,l.time 
SELECT DISTINCT l.user_id AS ID,
                    SUM( l.creds ) AS cred 
                    FROM $mycred_log_table l
                    WHERE l.ctype IN ('implode("\', \'", $pt_types)') AND ( l.creds > 0 )  AND (l.ref = shortcode_atts($default, $atts)_type_completed)
                    $ref_id
                    $timeframe    
                    GROUP BY l.user_id ORDER BY SUM( l.creds ) DESC,l.time 
SQL command (SELECT DISTINCT l.user_id AS ID, SUM( l.creds ) AS cred FROM $mycred_log_table l WHERE l.ctype IN ('implode("\', \'", $pt_types)') AND ( l.creds > 0 ) AND (l.ref = shortcode_atts($default, $atts)_type_completed) $ref_id $timeframe GROUP BY l.user_id ORDER BY SUM( l.creds ) DESC,l.time ) cannot be parsed correct.
SELECT DISTINCT l.user_id AS ID,
                    SUM( l.creds ) AS cred 
                    FROM $mycred_log_table l
                    WHERE l.ctype IN ('implode("\', \'", $pt_types)') AND ( l.creds > 0 )  AND (l.ref = shortcode_atts($default, $atts)_type_completed)
                    $ref_id
                    $timeframe    
                    GROUP BY l.user_id ORDER BY SUM( l.creds ) DESC,l.time LIMIT shortcode_atts($default, $atts),shortcode_atts($default, $atts)
SELECT DISTINCT l.user_id AS ID,
                    SUM( l.creds ) AS cred 
                    FROM $mycred_log_table l
                    WHERE l.ctype IN ('implode("\', \'", $pt_types)') AND ( l.creds > 0 )  AND (l.ref = shortcode_atts($default, $atts)_type_completed)
                    $ref_id
                    $timeframe    
                    GROUP BY l.user_id ORDER BY SUM( l.creds ) DESC,l.time LIMIT shortcode_atts($default, $atts),shortcode_atts($default, $atts)
SQL command (SELECT DISTINCT l.user_id AS ID, SUM( l.creds ) AS cred FROM $mycred_log_table l WHERE l.ctype IN ('implode("\', \'", $pt_types)') AND ( l.creds > 0 ) AND (l.ref = shortcode_atts($default, $atts)_type_completed) $ref_id $timeframe GROUP BY l.user_id ORDER BY SUM( l.creds ) DESC,l.time LIMIT shortcode_atts($default, $atts),shortcode_atts($default, $atts)) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [38104, 37908, 37923, 37937]
Added 0 SQL nodes. 0 out of 4 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:02.584711.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'plugin_dir_url()/assets/images/question.png'' cannot be parsed correct.
HTML code '$'Yes'' cannot be parsed correct.
HTML code '$'<div class="error"><p>LearnDash plugin is required to activate MyCred LearnDash add-on plugin. Please activate it first.</p></div>'' cannot be parsed correct.
HTML code '$'plugin_dir_url()/assets/images/question.png'' cannot be parsed correct.
HTML code '$'Allow using myCred points in buying courses'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'Yes'' cannot be parsed correct.
HTML code '$'plugin_dir_url()/assets/images/question.png'' cannot be parsed correct.
HTML code '$'Allow creating leaderboards based on myCred points ?'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'Yes'' cannot be parsed correct.
HTML code '$'plugin_dir_url()/assets/images/question.png'' cannot be parsed correct.
HTML code '$'Exchange Rate for points types'' cannot be parsed correct.
HTML code '$'$k'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'$value'' cannot be parsed correct.
HTML code '$'get_option("learndash_mycred_exchange_rate")'' cannot be parsed correct.
HTML code '$'Enter exchange rate to convert currency into points'' cannot be parsed correct.
HTML code '$'var mycred_badge_$key = \'<div class="form-group"><select name="{{element_name}}" class="form-control specific" data-row="{{reqlevel}}" ><option>Any</option></select></div>\';'' cannot be parsed correct.
HTML code '$'var mycred_badge_$key = \'<div class="form-group"><select name="{{element_name}}" class="form-control specific" data-row="{{reqlevel}}" ><option>Any</option></select></div>\';'' cannot be parsed correct.
HTML code '$'json_encode($lesson_field)'' cannot be parsed correct.
HTML code '$'json_encode($tags)'' cannot be parsed correct.
HTML code '$'$this->field_id("creds")'' cannot be parsed correct.
HTML code '$'$this->core->number($prefs["creds"])'' cannot be parsed correct.
HTML code '$'$this->field_id("log")'' cannot be parsed correct.
HTML code '$'$this->field_name("log")'' cannot be parsed correct.
HTML code '$'$this->field_id("log")'' cannot be parsed correct.
HTML code '$'$this_log'' cannot be parsed correct.
HTML code '$'$this->available_template_tags(["general", "post"])'' cannot be parsed correct.
HTML code '$'<option class="select-value" value="$tag" selected >$tag</option>'' cannot be parsed correct.
HTML code '$'$this->field_id("creds")'' cannot be parsed correct.
HTML code '$'$this->core->plural()'' cannot be parsed correct.
HTML code '$'$this->field_name("creds")'' cannot be parsed correct.
HTML code '$'$this->field_id("check_specific_hook")'' cannot be parsed correct.
HTML code '$'$this->field_name("check_specific_hook")'' cannot be parsed correct.
HTML code '$'$this->specific_field_name(["specific_lesson_completed" => "select_option"])'' cannot be parsed correct.
HTML code '$'<option value=\'$key\' $selected>$value</option>
'' cannot be parsed correct.
HTML code '$'$this->specific_field_name(["specific_lesson_completed" => "select_lesson"])'' cannot be parsed correct.
HTML code '$'<option class="select-value" value="$lesson_name" selected >$lesson_name</option>'' cannot be parsed correct.
HTML code '$'<option class="select-value" value="$tag" selected >$tag</option>'' cannot be parsed correct.
HTML code '$'$this->field_id(["specific_lesson_completed" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->core->plural()'' cannot be parsed correct.
HTML code '$'$this->specific_field_name(["specific_lesson_completed" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["specific_lesson_completed" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->core->number($label["creds"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["specific_lesson_completed" => "log"])'' cannot be parsed correct.
HTML code '$'$this->specific_field_name(["specific_lesson_completed" => "log"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["specific_lesson_completed" => "log"])'' cannot be parsed correct.
HTML code '$'$label_log'' cannot be parsed correct.
HTML code '$'$this->available_template_tags(["general", "post"])'' cannot be parsed correct.
HTML code '$'$this->field_id("limit")'' cannot be parsed correct.
HTML code '$'$this->hook_limit_setting($this->field_name("limit"), $this->field_id("limit"), $prefs["limit"])'' cannot be parsed correct.
HTML code '$'json_encode($topic_field)'' cannot be parsed correct.
HTML code '$'json_encode($tags)'' cannot be parsed correct.
HTML code '$'$this->specific_field_name(["specific_topic_completed" => "select_topic"])'' cannot be parsed correct.
HTML code '$'<option class="select-value" value="$topic_name" selected >$topic_name</option>'' cannot be parsed correct.
HTML code '$'<option class="select-value" value="$tag" selected >$tag</option>'' cannot be parsed correct.
HTML code '$'$this->field_id(["specific_topic_completed" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->core->plural()'' cannot be parsed correct.
HTML code '$'$this->specific_field_name(["specific_topic_completed" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["specific_topic_completed" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->core->number($label["creds"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["specific_topic_completed" => "log"])'' cannot be parsed correct.
HTML code '$'$this->specific_field_name(["specific_topic_completed" => "log"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["specific_topic_completed" => "log"])'' cannot be parsed correct.
HTML code '$'$label_log'' cannot be parsed correct.
HTML code '$'$this->available_template_tags(["general", "post"])'' cannot be parsed correct.
HTML code '$'$this->field_id("creds")'' cannot be parsed correct.
HTML code '$'$this->core->plural()'' cannot be parsed correct.
HTML code '$'$this->field_name("creds")'' cannot be parsed correct.
HTML code '$'$this->field_id("creds")'' cannot be parsed correct.
HTML code '$'$this->core->number($prefs["creds"])'' cannot be parsed correct.
HTML code '$'$this->field_id("log")'' cannot be parsed correct.
HTML code '$'$this->field_name("log")'' cannot be parsed correct.
HTML code '$'$this->field_id("log")'' cannot be parsed correct.
HTML code '$'$this_log'' cannot be parsed correct.
HTML code '$'$this->available_template_tags(["general", "post"])'' cannot be parsed correct.
HTML code '$'$this->field_id("limit")'' cannot be parsed correct.
HTML code '$'$this->hook_limit_setting($this->field_name("limit"), $this->field_id("limit"), $prefs["limit"])'' cannot be parsed correct.
HTML code '$'$this->field_id("check_specific_hook")'' cannot be parsed correct.
HTML code '$'$this->field_name("check_specific_hook")'' cannot be parsed correct.
HTML code '$'$this->specific_field_name(["specific_topic_completed" => "select_option"])'' cannot be parsed correct.
HTML code '$'<option value=\'$key\' $selected>$value</option>
'' cannot be parsed correct.
HTML code '$'json_encode($tags)'' cannot be parsed correct.
HTML code '$'json_encode($course_field)'' cannot be parsed correct.
HTML code '$'$this->field_id("creds")'' cannot be parsed correct.
HTML code '$'$this->core->plural()'' cannot be parsed correct.
HTML code '$'$this->field_name("creds")'' cannot be parsed correct.
HTML code '$'$this->field_id("creds")'' cannot be parsed correct.
HTML code '$'$this->core->number($prefs["creds"])'' cannot be parsed correct.
HTML code '$'$this->field_id("log")'' cannot be parsed correct.
HTML code '$'$this->field_name("log")'' cannot be parsed correct.
HTML code '$'$this->field_id("log")'' cannot be parsed correct.
HTML code '$'$this_log'' cannot be parsed correct.
HTML code '$'$this->available_template_tags(["general", "post"])'' cannot be parsed correct.
HTML code '$'<option class="select-value" value="$tag" selected >$tag</option>'' cannot be parsed correct.
HTML code '$'$this->field_id("check_specific_hook")'' cannot be parsed correct.
HTML code '$'$this->field_name("check_specific_hook")'' cannot be parsed correct.
HTML code '$'$this->specific_field_name(["specific_course_completed" => "select_option"])'' cannot be parsed correct.
HTML code '$'<option value=\'$key\' $selected>$value</option>
'' cannot be parsed correct.
HTML code '$'$this->specific_field_name(["specific_course_completed" => "select_course"])'' cannot be parsed correct.
HTML code '$'<option class="select-value" value="$course_name" selected >$course_name</option>'' cannot be parsed correct.
HTML code '$'<option class="select-value" value="$tag" selected >$tag</option>'' cannot be parsed correct.
HTML code '$'$this->field_id(["specific_course_completed" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->core->plural()'' cannot be parsed correct.
HTML code '$'$this->specific_field_name(["specific_course_completed" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["specific_course_completed" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->core->number($label["creds"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["specific_course_completed" => "log"])'' cannot be parsed correct.
HTML code '$'$this->specific_field_name(["specific_course_completed" => "log"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["specific_course_completed" => "log"])'' cannot be parsed correct.
HTML code '$'$label_log'' cannot be parsed correct.
HTML code '$'$this->available_template_tags(["general", "post"])'' cannot be parsed correct.
HTML code '$'$this->field_id("limit")'' cannot be parsed correct.
HTML code '$'$this->hook_limit_setting($this->field_name("limit"), $this->field_id("limit"), $prefs["limit"])'' cannot be parsed correct.
HTML code '$'json_encode($quiz_field)'' cannot be parsed correct.
HTML code '$'json_encode($tags)'' cannot be parsed correct.
HTML code '$'$this->field_id("creds")'' cannot be parsed correct.
HTML code '$'$this->core->plural()'' cannot be parsed correct.
HTML code '$'$this->field_name("creds")'' cannot be parsed correct.
HTML code '$'$this->field_id("creds")'' cannot be parsed correct.
HTML code '$'$this->core->number($prefs["creds"])'' cannot be parsed correct.
HTML code '$'$this->field_id("log")'' cannot be parsed correct.
HTML code '$'$this->field_name("log")'' cannot be parsed correct.
HTML code '$'$this->field_id("log")'' cannot be parsed correct.
HTML code '$'$this_log'' cannot be parsed correct.
HTML code '$'$this->available_template_tags(["general", "post"])'' cannot be parsed correct.
HTML code '$'$this->field_id("check_specific_hook")'' cannot be parsed correct.
HTML code '$'$this->field_name("check_specific_hook")'' cannot be parsed correct.
HTML code '$'$this->specific_field_name(["specific_quiz_completed" => "select_option"])'' cannot be parsed correct.
HTML code '$'<option value=\'$key\' $selected>$value</option>
'' cannot be parsed correct.
HTML code '$'$this->specific_field_name(["specific_quiz_completed" => "select_quiz"])'' cannot be parsed correct.
HTML code '$'<option class="select-value" value="$quiz_name" selected >$quiz_name</option>'' cannot be parsed correct.
HTML code '$'<option class="select-value" value="$tag" selected >$tag</option>'' cannot be parsed correct.
HTML code '$'$this->field_id(["specific_quiz_completed" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->core->plural()'' cannot be parsed correct.
HTML code '$'$this->specific_field_name(["specific_quiz_completed" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["specific_quiz_completed" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->core->number($label["creds"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["specific_quiz_completed" => "log"])'' cannot be parsed correct.
HTML code '$'$this->specific_field_name(["specific_quiz_completed" => "log"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["specific_quiz_completed" => "log"])'' cannot be parsed correct.
HTML code '$'$label_log'' cannot be parsed correct.
HTML code '$'$this->available_template_tags(["general", "post"])'' cannot be parsed correct.
HTML code '$'$this->field_id("limit")'' cannot be parsed correct.
HTML code '$'$this->hook_limit_setting($this->field_name("limit"), $this->field_id("limit"), $prefs["limit"])'' cannot be parsed correct.
HTML code '$'json_encode($quiz_maximum_percent_grade)'' cannot be parsed correct.
HTML code '$'json_encode($tags)'' cannot be parsed correct.
HTML code '$'<option class="select-value" value="$tag" selected >$tag</option>'' cannot be parsed correct.
HTML code '$'$this->field_id(["complete_quiz_max_percent_grade" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->core->plural()'' cannot be parsed correct.
HTML code '$'$this->field_id("creds")'' cannot be parsed correct.
HTML code '$'$this->core->plural()'' cannot be parsed correct.
HTML code '$'$this->field_name("creds")'' cannot be parsed correct.
HTML code '$'$this->field_id("creds")'' cannot be parsed correct.
HTML code '$'$this->core->number($prefs["creds"])'' cannot be parsed correct.
HTML code '$'$this->field_id("maximum_grade_percentage")'' cannot be parsed correct.
HTML code '$'$this->field_name("maximum_grade_percentage")'' cannot be parsed correct.
HTML code '$'$this->field_id("maximum_grade_percentage")'' cannot be parsed correct.
HTML code '$'$this->core->number($prefs["maximum_grade_percentage"])'' cannot be parsed correct.
HTML code '$'$this->field_id("log")'' cannot be parsed correct.
HTML code '$'$this->field_name("log")'' cannot be parsed correct.
HTML code '$'$this->field_id("log")'' cannot be parsed correct.
HTML code '$'$this_log'' cannot be parsed correct.
HTML code '$'$this->available_template_tags(["general", "post"])'' cannot be parsed correct.
HTML code '$'$this->field_id("check_specific_hook")'' cannot be parsed correct.
HTML code '$'$this->field_name("check_specific_hook")'' cannot be parsed correct.
HTML code '$'$this->specific_field_name(["complete_quiz_max_percent_grade" => "select_option"])'' cannot be parsed correct.
HTML code '$'<option value=\'$key\' $selected>$value</option>
'' cannot be parsed correct.
HTML code '$'$this->specific_field_name(["complete_quiz_max_percent_grade" => "max_percent_select_quiz"])'' cannot be parsed correct.
HTML code '$'<option class="select-value" value="$quiz_name" selected >$quiz_name</option>'' cannot be parsed correct.
HTML code '$'json_encode($quiz_percent_grade_range)'' cannot be parsed correct.
HTML code '$'json_encode($tags)'' cannot be parsed correct.
HTML code '$'$this->specific_field_name(["complete_quiz_max_percent_grade" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["complete_quiz_max_percent_grade" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->core->number($label["creds"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["complete_quiz_max_percent_grade" => "max_percentage_grade"])'' cannot be parsed correct.
HTML code '$'$this->specific_field_name(["complete_quiz_max_percent_grade" => "max_percentage_grade"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["complete_quiz_max_percent_grade" => "max_percentage_grade"])'' cannot be parsed correct.
HTML code '$'$this->core->number($label["max_percentage_grade"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["complete_quiz_max_percent_grade" => "log"])'' cannot be parsed correct.
HTML code '$'$this->specific_field_name(["complete_quiz_max_percent_grade" => "log"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["complete_quiz_max_percent_grade" => "log"])'' cannot be parsed correct.
HTML code '$'$label_log'' cannot be parsed correct.
HTML code '$'$this->available_template_tags(["general", "post"])'' cannot be parsed correct.
HTML code '$'$this->field_id("limit")'' cannot be parsed correct.
HTML code '$'$this->hook_limit_setting($this->field_name("limit"), $this->field_id("limit"), $prefs["limit"])'' cannot be parsed correct.
HTML code '$'$this->field_id("creds")'' cannot be parsed correct.
HTML code '$'$this->core->plural()'' cannot be parsed correct.
HTML code '$'$this->field_name("creds")'' cannot be parsed correct.
HTML code '$'$this->field_id("creds")'' cannot be parsed correct.
HTML code '$'$this->core->number($prefs["creds"])'' cannot be parsed correct.
HTML code '$'$this->field_id("minimum_grade_percentage")'' cannot be parsed correct.
HTML code '$'$this->field_name("minimum_grade_percentage")'' cannot be parsed correct.
HTML code '$'$this->field_id("minimum_grade_percentage")'' cannot be parsed correct.
HTML code '$'$this->core->number($prefs["minimum_grade_percentage"])'' cannot be parsed correct.
HTML code '$'$this->field_id("maximum_grade_percentage")'' cannot be parsed correct.
HTML code '$'$this->field_name("maximum_grade_percentage")'' cannot be parsed correct.
HTML code '$'$this->field_id("maximum_grade_percentage")'' cannot be parsed correct.
HTML code '$'$this->core->number($prefs["maximum_grade_percentage"])'' cannot be parsed correct.
HTML code '$'$this->field_id("log")'' cannot be parsed correct.
HTML code '$'$this->field_name("log")'' cannot be parsed correct.
HTML code '$'$this->field_id("log")'' cannot be parsed correct.
HTML code '$'$this_log'' cannot be parsed correct.
HTML code '$'$this->available_template_tags(["general", "post"])'' cannot be parsed correct.
HTML code '$'<option class="select-value" value="$tag" selected >$tag</option>'' cannot be parsed correct.
HTML code '$'$this->field_id(["quiz_range_percent_grade" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->core->plural()'' cannot be parsed correct.
HTML code '$'$this->specific_field_name(["quiz_range_percent_grade" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["quiz_range_percent_grade" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->core->number($label["creds"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["quiz_range_percent_grade" => "min_percentage_range"])'' cannot be parsed correct.
HTML code '$'$this->specific_field_name(["quiz_range_percent_grade" => "min_percentage_range"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["quiz_range_percent_grade" => "min_percentage_range"])'' cannot be parsed correct.
HTML code '$'$this->core->number($label["min_percentage_range"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["quiz_range_percent_grade" => "max_percentage_range"])'' cannot be parsed correct.
HTML code '$'$this->specific_field_name(["quiz_range_percent_grade" => "max_percentage_range"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["quiz_range_percent_grade" => "max_percentage_range"])'' cannot be parsed correct.
HTML code '$'$this->core->number($label["max_percentage_range"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["quiz_range_percent_grade" => "log"])'' cannot be parsed correct.
HTML code '$'$this->field_id("check_specific_hook")'' cannot be parsed correct.
HTML code '$'$this->field_name("check_specific_hook")'' cannot be parsed correct.
HTML code '$'$this->specific_field_name(["quiz_range_percent_grade" => "select_option"])'' cannot be parsed correct.
HTML code '$'<option value=\'$key\' $selected>$value</option>
'' cannot be parsed correct.
HTML code '$'$this->specific_field_name(["quiz_range_percent_grade" => "range_select_quiz"])'' cannot be parsed correct.
HTML code '$'<option class="select-value" value="$quiz_name" selected >$quiz_name</option>'' cannot be parsed correct.
HTML code '$'$this->specific_field_name(["quiz_range_percent_grade" => "log"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["quiz_range_percent_grade" => "log"])'' cannot be parsed correct.
HTML code '$'$label_log'' cannot be parsed correct.
HTML code '$'$this->available_template_tags(["general", "post"])'' cannot be parsed correct.
HTML code '$'$this->field_id("limit")'' cannot be parsed correct.
HTML code '$'$this->hook_limit_setting($this->field_name("limit"), $this->field_id("limit"), $prefs["limit"])'' cannot be parsed correct.
HTML code '$'$this->field_id("creds")'' cannot be parsed correct.
HTML code '$'$this->core->plural()'' cannot be parsed correct.
HTML code '$'$this->field_name("creds")'' cannot be parsed correct.
HTML code '$'$this->field_id("creds")'' cannot be parsed correct.
HTML code '$'$this->core->number($prefs["creds"])'' cannot be parsed correct.
HTML code '$'$this->field_id("log")'' cannot be parsed correct.
HTML code '$'$this->field_name("log")'' cannot be parsed correct.
HTML code '$'$this->field_id("log")'' cannot be parsed correct.
HTML code '$'$this_log'' cannot be parsed correct.
HTML code '$'$this->available_template_tags(["general", "post"])'' cannot be parsed correct.
HTML code '$'$this->field_id("check_specific_hook")'' cannot be parsed correct.
HTML code '$'$this->field_name("check_specific_hook")'' cannot be parsed correct.
HTML code '$'$this->field_id(["course_enrollment" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->core->plural()'' cannot be parsed correct.
HTML code '$'$this->enroll_course_field_name(["course_enrollment" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["course_enrollment" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->field_id("limit")'' cannot be parsed correct.
HTML code '$'$this->hook_limit_setting($this->field_name("limit"), $this->field_id("limit"), $prefs["limit"])'' cannot be parsed correct.
HTML code '$'$this->core->number($label["creds"])'' cannot be parsed correct.
HTML code '$'$this->enroll_course_field_name(["course_enrollment" => "course_enrollment_select_course"])'' cannot be parsed correct.
HTML code '$'<option class="select-value" value="$course_name" selected >$course_name</option>'' cannot be parsed correct.
HTML code '$'$this->field_id(["course_enrollment" => "log"])'' cannot be parsed correct.
HTML code '$'$this->enroll_course_field_name(["course_enrollment" => "log"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["course_enrollment" => "log"])'' cannot be parsed correct.
HTML code '$'$label_log'' cannot be parsed correct.
HTML code '$'$this->available_template_tags(["general", "post"])'' cannot be parsed correct.
HTML code '$'$this->field_id("creds")'' cannot be parsed correct.
HTML code '$'$this->core->plural()'' cannot be parsed correct.
HTML code '$'$this->field_name("creds")'' cannot be parsed correct.
HTML code '$'$this->field_id("creds")'' cannot be parsed correct.
HTML code '$'$this->core->number($prefs["creds"])'' cannot be parsed correct.
HTML code '$'$this->field_id("log")'' cannot be parsed correct.
HTML code '$'$this->field_name("log")'' cannot be parsed correct.
HTML code '$'$this->field_id("log")'' cannot be parsed correct.
HTML code '$'$this_log'' cannot be parsed correct.
HTML code '$'$this->available_template_tags(["general", "post"])'' cannot be parsed correct.
HTML code '$'$this->field_id("check_specific_hook")'' cannot be parsed correct.
HTML code '$'$this->field_name("check_specific_hook")'' cannot be parsed correct.
HTML code '$'$this->field_id(["join_group" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->core->plural()'' cannot be parsed correct.
HTML code '$'$this->join_group_field_name(["join_group" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["join_group" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->core->number($label["creds"])'' cannot be parsed correct.
HTML code '$'$this->join_group_field_name(["join_group" => "join_group_select_group"])'' cannot be parsed correct.
HTML code '$'<option class="select-value" value="$group_name" selected >$group_name</option>'' cannot be parsed correct.
HTML code '$'$this->field_id(["join_group" => "log"])'' cannot be parsed correct.
HTML code '$'$this->join_group_field_name(["join_group" => "log"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["join_group" => "log"])'' cannot be parsed correct.
HTML code '$'$label_log'' cannot be parsed correct.
HTML code '$'$this->available_template_tags(["general", "post"])'' cannot be parsed correct.
HTML code '$'$this->field_id("limit")'' cannot be parsed correct.
HTML code '$'$this->hook_limit_setting($this->field_name("limit"), $this->field_id("limit"), $prefs["limit"])'' cannot be parsed correct.
HTML code '$'$this->field_name(["course_completed" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["course_completed" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->core->plural()'' cannot be parsed correct.
HTML code '$'$this->field_id(["course_completed" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->core->number($prefs["course_completed"]["creds"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["course_completed", "limit"])'' cannot be parsed correct.
HTML code '$'$this->hook_limit_setting($this->field_name(["course_completed", "limit"]), $this->field_id(["course_completed", "limit"]), $prefs["course_completed"]["limit"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["course_completed" => "log"])'' cannot be parsed correct.
HTML code '$'$this->field_name(["course_completed" => "log"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["course_completed" => "log"])'' cannot be parsed correct.
HTML code '$'$this_course_completed_log'' cannot be parsed correct.
HTML code '$'$this->available_template_tags(["general", "post"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["lesson_completed" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->core->plural()'' cannot be parsed correct.
HTML code '$'$this->field_name(["lesson_completed" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["lesson_completed" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->core->number($prefs["lesson_completed"]["creds"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["lesson_completed", "limit"])'' cannot be parsed correct.
HTML code '$'$this->hook_limit_setting($this->field_name(["lesson_completed", "limit"]), $this->field_id(["lesson_completed", "limit"]), $prefs["lesson_completed"]["limit"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["lesson_completed" => "log"])'' cannot be parsed correct.
HTML code '$'$this->field_name(["lesson_completed" => "log"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["lesson_completed" => "log"])'' cannot be parsed correct.
HTML code '$'$this_lesson_completed_log'' cannot be parsed correct.
HTML code '$'$this->available_template_tags(["general", "post"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["topic_completed" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->core->plural()'' cannot be parsed correct.
HTML code '$'$this->field_name(["topic_completed" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["topic_completed" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->core->number($prefs["topic_completed"]["creds"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["topic_completed", "limit"])'' cannot be parsed correct.
HTML code '$'$this->hook_limit_setting($this->field_name(["topic_completed", "limit"]), $this->field_id(["topic_completed", "limit"]), $prefs["topic_completed"]["limit"])'' cannot be parsed correct.
HTML code '$'$this->hook_limit_setting($this->field_name(["quiz_failed", "limit"]), $this->field_id(["quiz_failed", "limit"]), $prefs["quiz_failed"]["limit"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["quiz_failed" => "log"])'' cannot be parsed correct.
HTML code '$'$this->field_name(["quiz_failed" => "log"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["quiz_failed" => "log"])'' cannot be parsed correct.
HTML code '$'$this_quiz_failed_log'' cannot be parsed correct.
HTML code '$'$this->available_template_tags(["general", "post"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["uploaded_assignment" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->core->plural()'' cannot be parsed correct.
HTML code '$'$this->field_name(["uploaded_assignment" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["uploaded_assignment" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->core->number($prefs["uploaded_assignment"]["creds"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["uploaded_assignment", "limit"])'' cannot be parsed correct.
HTML code '$'$this->hook_limit_setting($this->field_name(["uploaded_assignment", "limit"]), $this->field_id(["uploaded_assignment", "limit"]), $prefs["uploaded_assignment"]["limit"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["uploaded_assignment" => "log"])'' cannot be parsed correct.
HTML code '$'$this->field_name(["uploaded_assignment" => "log"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["uploaded_assignment" => "log"])'' cannot be parsed correct.
HTML code '$'$this_uploaded_assignment_log'' cannot be parsed correct.
HTML code '$'$this->available_template_tags(["general", "post"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["approved_assignment" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->core->plural()'' cannot be parsed correct.
HTML code '$'$this->field_name(["approved_assignment" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["approved_assignment" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->core->number($prefs["approved_assignment"]["creds"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["approved_assignment", "limit"])'' cannot be parsed correct.
HTML code '$'$this->hook_limit_setting($this->field_name(["approved_assignment", "limit"]), $this->field_id(["approved_assignment", "limit"]), $prefs["approved_assignment"]["limit"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["approved_assignment" => "log"])'' cannot be parsed correct.
HTML code '$'$this->field_name(["approved_assignment" => "log"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["topic_completed" => "log"])'' cannot be parsed correct.
HTML code '$'$this->field_name(["topic_completed" => "log"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["topic_completed" => "log"])'' cannot be parsed correct.
HTML code '$'$this_topic_completed_log'' cannot be parsed correct.
HTML code '$'$this->available_template_tags(["general", "post"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["quiz_completed" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->core->plural()'' cannot be parsed correct.
HTML code '$'$this->field_name(["quiz_completed" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["quiz_completed" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->core->number($prefs["quiz_completed"]["creds"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["quiz_completed", "limit"])'' cannot be parsed correct.
HTML code '$'$this->hook_limit_setting($this->field_name(["quiz_completed", "limit"]), $this->field_id(["quiz_completed", "limit"]), $prefs["quiz_completed"]["limit"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["quiz_completed" => "log"])'' cannot be parsed correct.
HTML code '$'$this->field_name(["quiz_completed" => "log"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["quiz_completed" => "log"])'' cannot be parsed correct.
HTML code '$'$this_quiz_completed_log'' cannot be parsed correct.
HTML code '$'$this->available_template_tags(["general", "post"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["quiz_failed" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->core->plural()'' cannot be parsed correct.
HTML code '$'$this->field_name(["quiz_failed" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["quiz_failed" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->core->number($prefs["quiz_failed"]["creds"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["quiz_failed", "limit"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["approved_assignment" => "log"])'' cannot be parsed correct.
HTML code '$'$this_approved_assignment_log'' cannot be parsed correct.
HTML code '$'$this->available_template_tags(["general", "post"])'' cannot be parsed correct.
HTML code '$'null'' cannot be parsed correct.
HTML code '$'$courses_id'' cannot be parsed correct.
HTML code '$'get_the_title($courses_id)'' cannot be parsed correct.
HTML code '$'$k'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'wp_create_nonce(basename())'' cannot be parsed correct.
HTML code '$'plugin_dir_url()/assets/images/question.png'' cannot be parsed correct.
HTML code '$'get_the_ID()'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'$this->mycred_leaderboard_associated_course("lesson")'' cannot be parsed correct.
HTML code '$'$this->mycred_leaderboard_associated_course("topic")'' cannot be parsed correct.
HTML code '$'$this->mycred_leaderboard_associated_course("quiz")'' cannot be parsed correct.
HTML code '$'$this->leaderboard_other_settings($post, $default)'' cannot be parsed correct.
HTML code '$'display: none;display:flex;'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'$cat_id'' cannot be parsed correct.
HTML code '$'$course_cat_term'' cannot be parsed correct.
HTML code '$'display: none;display:flex;'' cannot be parsed correct.
HTML code '$'$k'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'$value'' cannot be parsed correct.
HTML code '$'$value'' cannot be parsed correct.
HTML code '$'get_the_ID()'' cannot be parsed correct.
HTML code '$'$k'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'$value'' cannot be parsed correct.
HTML code '$'get_the_ID()'' cannot be parsed correct.
HTML code '$'$k'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'$value'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'display: none;display:flex;'' cannot be parsed correct.
HTML code '$'$term_id'' cannot be parsed correct.
HTML code '$'null'' cannot be parsed correct.
HTML code '$'$lesson_category'' cannot be parsed correct.
HTML code '$'display: none;display:flex;'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'display: none;display:flex;'' cannot be parsed correct.
HTML code '$'null'' cannot be parsed correct.
HTML code '$'$term_id'' cannot be parsed correct.
HTML code '$'$term_name'' cannot be parsed correct.
HTML code '$'display: none;display:flex;'' cannot be parsed correct.
HTML code '$'$topic_id'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'get_the_title($topic_id)'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'$lesson_id'' cannot be parsed correct.
HTML code '$'null'' cannot be parsed correct.
HTML code '$'get_the_title($lesson_id)'' cannot be parsed correct.
HTML code '$'$k'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'$value'' cannot be parsed correct.
HTML code '$'display: none;display:flex;'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'$term_id'' cannot be parsed correct.
HTML code '$'$term_name'' cannot be parsed correct.
HTML code '$'display: none;display:flex;'' cannot be parsed correct.
HTML code '$'$quiz_id'' cannot be parsed correct.
HTML code '$'null'' cannot be parsed correct.
HTML code '$'get_the_title($quiz_id)'' cannot be parsed correct.
HTML code '$'plugin_dir_url()/assets/images/question.png'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'null'' cannot be parsed correct.
HTML code '$'$pt_type'' cannot be parsed correct.
HTML code '$'plugin_dir_url()/assets/images/question.png'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "leaderboard_default", true)_0'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "leaderboard_default", true)_1'' cannot be parsed correct.
HTML code '$'plugin_dir_url()/assets/images/question.png'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "leaderboard_default", true)_leaderboard_users10'' cannot be parsed correct.
HTML code '$'plugin_dir_url()/assets/images/question.png'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "leaderboard_default", true)_leaderboard_pagination_value'' cannot be parsed correct.
HTML code '$'plugin_dir_url()/assets/images/question.png'' cannot be parsed correct.
HTML code '$'get_post_meta(get_the_ID(), "leaderboard_shortcode", true)'' cannot be parsed correct.
HTML code '$'json_encode($fail_quiz_field)'' cannot be parsed correct.
HTML code '$'json_encode($tags)'' cannot be parsed correct.
HTML code '$'$this->field_id("creds")'' cannot be parsed correct.
HTML code '$'$this->core->plural()'' cannot be parsed correct.
HTML code '$'$this->field_name("creds")'' cannot be parsed correct.
HTML code '$'$this->field_id("creds")'' cannot be parsed correct.
HTML code '$'$this->core->number($prefs["creds"])'' cannot be parsed correct.
HTML code '$'$this->field_id("log")'' cannot be parsed correct.
HTML code '$'$this->field_name("log")'' cannot be parsed correct.
HTML code '$'$this->field_id("log")'' cannot be parsed correct.
HTML code '$'$this_log'' cannot be parsed correct.
HTML code '$'$this->available_template_tags(["general", "post"])'' cannot be parsed correct.
HTML code '$'$this->field_id("check_specific_hook")'' cannot be parsed correct.
HTML code '$'$this->field_name("check_specific_hook")'' cannot be parsed correct.
HTML code '$'$this->specific_field_name(["quiz_failed" => "select_option"])'' cannot be parsed correct.
HTML code '$'<option value=\'$key\' $selected>$value</option>
'' cannot be parsed correct.
HTML code '$'$this->specific_field_name(["quiz_failed" => "quiz_failed_select_quiz"])'' cannot be parsed correct.
HTML code '$'<option class="select-value" value="$quiz_name" selected >$quiz_name</option>'' cannot be parsed correct.
HTML code '$'<option class="select-value" value="$tag" selected >$tag</option>'' cannot be parsed correct.
HTML code '$'$this->field_id(["quiz_failed" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->core->plural()'' cannot be parsed correct.
HTML code '$'$this->specific_field_name(["quiz_failed" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["quiz_failed" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->core->number($label["creds"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["quiz_failed" => "log"])'' cannot be parsed correct.
HTML code '$'$this->specific_field_name(["quiz_failed" => "log"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["quiz_failed" => "log"])'' cannot be parsed correct.
HTML code '$'$label_log'' cannot be parsed correct.
HTML code '$'$this->available_template_tags(["general", "post"])'' cannot be parsed correct.
HTML code '$'$this->field_id("limit")'' cannot be parsed correct.
HTML code '$'$this->hook_limit_setting($this->field_name("limit"), $this->field_id("limit"), $prefs["limit"])'' cannot be parsed correct.
HTML code '$'$this->field_id("creds")'' cannot be parsed correct.
HTML code '$'$this->core->plural()'' cannot be parsed correct.
HTML code '$'$this->field_name("creds")'' cannot be parsed correct.
HTML code '$'$this->field_id("creds")'' cannot be parsed correct.
HTML code '$'$this->core->number($prefs["creds"])'' cannot be parsed correct.
HTML code '$'$this->field_id("minimum_grade_percentage")'' cannot be parsed correct.
HTML code '$'$this->field_name("minimum_grade_percentage")'' cannot be parsed correct.
HTML code '$'$this->field_id("minimum_grade_percentage")'' cannot be parsed correct.
HTML code '$'$this->core->number($prefs["minimum_grade_percentage"])'' cannot be parsed correct.
HTML code '$'$this->field_id("maximum_grade_percentage")'' cannot be parsed correct.
HTML code '$'$this->field_name("maximum_grade_percentage")'' cannot be parsed correct.
HTML code '$'$this->field_id("maximum_grade_percentage")'' cannot be parsed correct.
HTML code '$'$this->core->number($prefs["maximum_grade_percentage"])'' cannot be parsed correct.
HTML code '$'$this->field_id("log")'' cannot be parsed correct.
HTML code '$'$this->field_name("log")'' cannot be parsed correct.
HTML code '$'$this->field_id("log")'' cannot be parsed correct.
HTML code '$'$this_log'' cannot be parsed correct.
HTML code '$'$this->available_template_tags(["general", "post"])'' cannot be parsed correct.
HTML code '$'$label_log'' cannot be parsed correct.
HTML code '$'$this->field_id("check_specific_hook")'' cannot be parsed correct.
HTML code '$'$this->field_name("check_specific_hook")'' cannot be parsed correct.
HTML code '$'$this->field_id(["quiz_range_percent_grade" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->core->plural()'' cannot be parsed correct.
HTML code '$'$this->specific_field_name(["quiz_range_percent_grade" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["quiz_range_percent_grade" => "creds"])'' cannot be parsed correct.
HTML code '$'$this->core->number($label["creds"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["quiz_range_percent_grade" => "min_percentage_range"])'' cannot be parsed correct.
HTML code '$'$this->specific_field_name(["quiz_range_percent_grade" => "min_percentage_range"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["quiz_range_percent_grade" => "min_percentage_range"])'' cannot be parsed correct.
HTML code '$'$this->core->number($label["min_percentage_range"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["quiz_range_percent_grade" => "max_percentage_range"])'' cannot be parsed correct.
HTML code '$'$this->specific_field_name(["quiz_range_percent_grade" => "max_percentage_range"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["quiz_range_percent_grade" => "max_percentage_range"])'' cannot be parsed correct.
HTML code '$'$this->core->number($label["max_percentage_range"])'' cannot be parsed correct.
HTML code '$'$this->specific_field_name(["quiz_range_percent_grade" => "range_select_quiz"])'' cannot be parsed correct.
HTML code '$'<option class="select-value" value="$quiz_name" selected >$quiz_name</option>'' cannot be parsed correct.
HTML code '$'$this->field_id(["quiz_range_percent_grade" => "log"])'' cannot be parsed correct.
HTML code '$'$this->specific_field_name(["quiz_range_percent_grade" => "log"])'' cannot be parsed correct.
HTML code '$'$this->field_id(["quiz_range_percent_grade" => "log"])'' cannot be parsed correct.
HTML code '$'$result'' cannot be parsed correct.
HTML code '$'$result'' cannot be parsed correct.
HTML code '$'paginate_links(["type" => "plain", "base" => str_replace($big, "%#%", esc_url(get_pagenum_link($big))), "format" => "?paged=%#%", "current" => max(1, get_query_var("paged")), "total" => ceil(count($wpdb->get_results($query_users, "OBJECT")) / $posts_per_page)])'' cannot be parsed correct.
HTML code '$'$this->available_template_tags(["general", "post"])'' cannot be parsed correct.
HTML code '$'$this->field_id("limit")'' cannot be parsed correct.
HTML code '$'$this->hook_limit_setting($this->field_name("limit"), $this->field_id("limit"), $prefs["limit"])'' cannot be parsed correct.
HTML code '$'$max_percentage'' cannot be parsed correct.
HTML code '$'$percentage'' cannot be parsed correct.
HTML code '$'openclosed'' cannot be parsed correct.
HTML code '$'$point'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "myCred_quiz_point_fail", true)'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'$pt_type'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "min_percentage", true)'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "max_percentage", true)'' cannot be parsed correct.
HTML code '$'$id'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'$id'' cannot be parsed correct.
HTML code '$'> '' cannot be parsed correct.
HTML code '$'allow user to enrolling in courses using their point(s) balance(s)'' cannot be parsed correct.
HTML code '$'</div>
                                    </div>
                                </div>

                                '' cannot be parsed correct.
HTML code '$'> '' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'>'' cannot be parsed correct.
HTML code '$'</option>
                            '' cannot be parsed correct.
HTML code '$'$'' cannot be parsed correct.
HTML code '$'                    </div>
                    <div class="help-text">'' cannot be parsed correct.
HTML code '$'</div>

                </div>

            </div>
            '' cannot be parsed correct.
HTML code '$'checked = \'checked\''' cannot be parsed correct.
HTML code '$'<option value="0">Any Tag</option>'' cannot be parsed correct.
HTML code '$'<option value="0">Any Tag</option>'' cannot be parsed correct.
HTML code '$'checked = \'checked\''' cannot be parsed correct.
HTML code '$'checked = \'checked\''' cannot be parsed correct.
HTML code '$'<option value="0">Any Tag</option>'' cannot be parsed correct.
HTML code '$'checked = \'checked\''' cannot be parsed correct.
HTML code '$'<option value="0">Any Tag</option>'' cannot be parsed correct.
HTML code '$'<option value="0">Any Tag</option>'' cannot be parsed correct.
HTML code '$'checked = \'checked\''' cannot be parsed correct.
HTML code '$'<option value="0">Any Tag</option>'' cannot be parsed correct.
HTML code '$'checked = \'checked\''' cannot be parsed correct.
HTML code '$'checked = \'checked\''' cannot be parsed correct.
HTML code '$'checked = \'checked\''' cannot be parsed correct.
HTML code '$'                                                         value='' cannot be parsed correct.
HTML code '$'" /'' cannot be parsed correct.
HTML code '$'</label>
                            '' cannot be parsed correct.
HTML code '$'<span class="no-lesson">No Courses</span>'' cannot be parsed correct.
HTML code '$'<input type="hidden" name="mycred_leaderboard_box_nonce" value="'' cannot be parsed correct.
HTML code '$'" /'' cannot be parsed correct.
HTML code '$'>
                            '' cannot be parsed correct.
HTML code '$'>
                            '' cannot be parsed correct.
HTML code '$'>'' cannot be parsed correct.
HTML code '$'>'' cannot be parsed correct.
HTML code '$'">
                    '' cannot be parsed correct.
HTML code '$'" /'' cannot be parsed correct.
HTML code '$'<span class="no-lesson">No Category</span>'' cannot be parsed correct.
HTML code '$'">
                    '' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'>'' cannot be parsed correct.
HTML code '$'>'' cannot be parsed correct.
HTML code '$'>'' cannot be parsed correct.
HTML code '$'>'' cannot be parsed correct.
HTML code '$' />
                <label for="lesson_category">'' cannot be parsed correct.
HTML code '$' />
                <label for="specific_lesson">'' cannot be parsed correct.
HTML code '$' />
                <label for="all_lessons">'' cannot be parsed correct.
HTML code '$'">
                '' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'<span class="no-lesson">No Category</span>'' cannot be parsed correct.
HTML code '$'<span class="no-lesson">No Category</span>'' cannot be parsed correct.
HTML code '$'">
                '' cannot be parsed correct.
HTML code '$' />
                <label for="topic_category">'' cannot be parsed correct.
HTML code '$' />
                <label for="specific_topic">'' cannot be parsed correct.
HTML code '$' />
                <label for="all_topics">'' cannot be parsed correct.
HTML code '$'">
                    '' cannot be parsed correct.
HTML code '$'" /'' cannot be parsed correct.
HTML code '$'</label>

                            '' cannot be parsed correct.
HTML code '$'<span class="no-lesson">No Category</span>'' cannot be parsed correct.
HTML code '$'<span class="no-lesson">No Category</span>'' cannot be parsed correct.
HTML code '$'">
                    '' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'<span class="no-lesson">No Topic</span>'' cannot be parsed correct.
HTML code '$' />
                <label for="quiz_category">'' cannot be parsed correct.
HTML code '$' />
                <label for="specific_quiz">'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'<span class="no-lesson">No Lesson</span>'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'>'' cannot be parsed correct.
HTML code '$' />
                <label for="all_quizes">'' cannot be parsed correct.
HTML code '$'">
                    '' cannot be parsed correct.
HTML code '$'" /'' cannot be parsed correct.
HTML code '$'</label>
                            </div>

                            '' cannot be parsed correct.
HTML code '$'<span class="no-lesson">No Category</span>'' cannot be parsed correct.
HTML code '$'<span class="no-lesson">No Category</span>'' cannot be parsed correct.
HTML code '$'">
                    '' cannot be parsed correct.
HTML code '$'"
                                                         name="leaderboard_quiz_based[leaderboard_select_quiz][]"
                                                         '' cannot be parsed correct.
HTML code '$'<span class="no-lesson">No Quiz</span>'' cannot be parsed correct.
HTML code '$'daily'' cannot be parsed correct.
HTML code '$'"
                                               '' cannot be parsed correct.
HTML code '$'weekly'' cannot be parsed correct.
HTML code '$'"
                                               '' cannot be parsed correct.
HTML code '$'monthly'' cannot be parsed correct.
HTML code '$'"
                                               '' cannot be parsed correct.
HTML code '$'annually'' cannot be parsed correct.
HTML code '$'"
                                               '' cannot be parsed correct.
HTML code '$'custom_time'' cannot be parsed correct.
HTML code '$'"
                                               '' cannot be parsed correct.
HTML code '$'balance'' cannot be parsed correct.
HTML code '$' />'' cannot be parsed correct.
HTML code '$'checked = \'checked\''' cannot be parsed correct.
HTML code '$'<option value="0">Any Tag</option>'' cannot be parsed correct.
HTML code '$'checked = \'checked\''' cannot be parsed correct.
HTML code '$'</label>'' cannot be parsed correct.
HTML code '$'<div class="user-score">'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'</li>'' cannot be parsed correct.
HTML code '$'<br/>'' cannot be parsed correct.
HTML code '$'<ul class="top-scores">'' cannot be parsed correct.
HTML code '$'<li>'' cannot be parsed correct.
HTML code '$'<label class="user-name">'' cannot be parsed correct.
HTML code '$'"></td>
        </tr>
    </tbody>
</table'' cannot be parsed correct.
HTML code '$'"></td>
        </tr>
    </tbody>
</table'' cannot be parsed correct.
HTML code '$'</span>
                            </div>
                        </label>
                    </fieldset>
                </div>
            </span>
            <p class="ld-clear"></p>                                        
        </div>

        <div class="ld-settings-sub ld-settings-sub-level-1 myCred_override_hook_sub ld-settings-sub-state-'' cannot be parsed correct.
HTML code '$'">                       
                    </div>
                </span>
                <p class="ld-clear"></p>
            </div>

             '' cannot be parsed correct.
HTML code '$'">                       
                        </div>
                    </span>
                    <p class="ld-clear"></p>
                </div>
            '' cannot be parsed correct.
HTML code '$'"> %                         
                    </div>
                </span>
                <p class="ld-clear"></p>
            </div>

       

            <div id="max_percentage_field" class="sfwd_input sfwd_input_type_text">
                <span class="sfwd_option_label">
                    <a class="sfwd_help_text_link">
                        <label for="min_percentage_input" class="sfwd_label">'' cannot be parsed correct.
HTML code '$'"> %  
                    </div>
                </span>
                <p class="ld-clear"></p>
            </div>

           
          
        '' cannot be parsed correct.
HTML code '$'>'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:01:00.518533.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.042280.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 1 do_action/apply_filters calls and 116 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:03.023797.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FileProDetector
### Start running FrontBaseDetector
### Finish running DbplusDetector
### Start running HashDetector
### Finish running DbaseDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running FirebirdInterBaseDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running ArrayElementDetector
### Start running MySQLiDetector
### Finish running MsqlDetector
### Start running Oci8Detector
### Finish running MySQLDetector
### Start running OpenSSLDetector
### Finish running MongoDbDetector
### Start running ParadoxDetector
### Finish running Oci8Detector
### Start running PasswordHashingDetector
### Finish running ParadoxDetector
### Start running PhpCurlDetector
### Finish running PhpCurlDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PasswordHashingDetector
### Start running PHPRetrievalDetector
### Finish running PHPIncludedDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running HashDetector
### Start running PhpVarDetector
### Finish running PhpVarDetector
### Start running PostgreSQLDetector
### Finish running PHPRetrievalDetector
### Start running PropertyDetector
### Finish running PHPStorageDetector
### Start running Sqlite3Detector
### Finish running PostgreSQLDetector
### Start running SqliteDetector
### Finish running SqliteDetector
### Start running SqlServerDetector
### Finish running Sqlite3Detector
### Start running SybaseDetector
### Finish running SybaseDetector
### Start running TokyoTyrantDetector
### Finish running TokyoTyrantDetector
### Start running UserInputDetector
### Finish running PropertyDetector
### Start running VariableDetector
### Finish running MySQLiDetector
### Start running WordpressHashingFnDetector
### Finish running SqlServerDetector
### Start running WordPressRemoteDetector
### Finish running maxdbDetector
### Start running WordPressRetrievalDetector
### Finish running WordPressRemoteDetector
### Start running WordPressStorageDetector
### Finish running WordpressHashingFnDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running OpenSSLDetector
### Start running GenericEncryptionDetector
### Finish running UserInputDetector
### Start running DeletionDetector
### Finish running GenericEncryptionDetector
### Start running UninstallDetector
### Finish running GenericDatabaseUsageDetector
### Finish running VariableDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running WordPressStorageDetector
### Finish running WordPressRetrievalDetector
### Finished running detectors
inc/class-mycred-buy-pts-handler.php:65
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
inc/class-mycred-buy-pts-handler.php:65
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email 

inc/class-mycred-buy-pts-handler.php:65
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
inc/class-mycred-buy-pts-handler.php:68
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
inc/class-mycred-buy-pts-handler.php:89
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email 

inc/admin/settings/class-mycred-learndash-course-settings.php:13
  - RETRIEVAL call to get_option("allow_buy_course_pts") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/admin/settings/class-mycred-learndash-course-settings.php:46
  - RETRIEVAL call to get_post_meta($post->ID, "allow_buy_course_pts", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/admin/settings/class-mycred-learndash-settings.php:13
  - RETRIEVAL call to get_option("allow_buy_course_pts") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/admin/settings/class-mycred-learndash-settings.php:152
  - RETRIEVAL call to get_option("allow_buy_course_pts") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/admin/settings/class-mycred-learndash-settings.php:170
  - RETRIEVAL call to get_option("learndash_allow_leaderboard") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/admin/settings/class-mycred-learndash-settings.php:188
  - RETRIEVAL call to get_option("learndash_mycred_exchange_rate") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/admin/settings/class-mycred-learndash-settings.php:189
  - RETRIEVAL call to get_option("learndash_point_type") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/class-mycred-buy-pts-handler.php:16
  - RETRIEVAL call to get_option("allow_buy_course_pts") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/class-mycred-buy-pts-handler.php:38
  - RETRIEVAL call to get_post_meta($course_id, "_sfwd-courses", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class-mycred-buy-pts-handler.php:39
  - RETRIEVAL call to get_option("learndash_point_type") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/class-mycred-buy-pts-handler.php:40
  - RETRIEVAL call to get_option("learndash_mycred_exchange_rate") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/class-mycred-buy-pts-handler.php:64
  - RETRIEVAL call to get_userdata($user_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/class-mycred-buy-pts-handler.php:117
  - RETRIEVAL call to get_post_meta($course_id, "allow_buy_course_pts", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class-mycred-learndash-badges.php:188
  - RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
inc/class-mycred-learndash-complete-lesson-hook.php:195
  - RETRIEVAL call to get_posts(["post_type" => "sfwd-lessons", "posts_per_page" => -1, "tax_query" => [["taxonomy" => "ld_lesson_tag", "field" => "term_id", "terms" => $lesson_tag_id, "include_children" => false]]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
inc/class-mycred-learndash-complete-topic-hook.php:223
  - RETRIEVAL call to get_posts(["post_type" => "sfwd-topic", "posts_per_page" => -1, "tax_query" => [["taxonomy" => "ld_topic_tag", "field" => "term_id", "terms" => $topic_tag_id, "include_children" => false]]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
inc/class-mycred-learndash-completing-course-hook.php:210
  - RETRIEVAL call to get_posts(["post_type" => "sfwd-courses", "posts_per_page" => -1, "tax_query" => [["taxonomy" => "ld_course_tag", "field" => "term_id", "terms" => $course_tag_id, "include_children" => false]]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
inc/class-mycred-learndash-completing-quiz-hook.php:212
  - RETRIEVAL call to get_posts(["post_type" => "sfwd-quiz", "posts_per_page" => -1, "tax_query" => [["taxonomy" => "ld_quiz_tag", "field" => "term_id", "terms" => $quiz_tag_id, "include_children" => false]]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
inc/class-mycred-learndash-completing-quiz-hook.php:427
  - RETRIEVAL call to get_post_meta(absint($_POST["leaderboard_id"]), "score_quiz_based", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class-mycred-learndash-completing-quiz-max-percentage-hook.php:190
  - RETRIEVAL call to get_posts(["post_type" => "sfwd-quiz", "posts_per_page" => -1, "tax_query" => [["taxonomy" => "ld_quiz_tag", "field" => "term_id", "terms" => $quiz_tag_id, "include_children" => false]]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
inc/class-mycred-learndash-completing-quiz-max-percentage-hook.php:405
  - RETRIEVAL call to get_post_meta(absint($_POST["leaderboard_id"]), "score_quiz_based", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class-mycred-learndash-completing-quiz-percentage-range-hook.php:209
  - RETRIEVAL call to get_posts(["post_type" => "sfwd-quiz", "posts_per_page" => -1, "tax_query" => [["taxonomy" => "ld_quiz_tag", "field" => "term_id", "terms" => $quiz_tag_id, "include_children" => false]]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
inc/class-mycred-learndash-completing-quiz-percentage-range-hook.php:446
  - RETRIEVAL call to get_post_meta(absint($_POST["leaderboard_id"]), "score_quiz_based", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class-mycred-learndash-hook.php:147
  - RETRIEVAL call to get_post_meta($id, "myCred_badges_override", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class-mycred-learndash-hook.php:365
  - RETRIEVAL call to get_post($assignment_id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
inc/class-mycred-learndash-hook.php:370
  - RETRIEVAL call to get_post_meta($assignment_id, "lesson_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class-mycred-learndash-hook.php:374
  - RETRIEVAL call to get_post_meta($lesson_id, "lesson_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class-mycred-learndash-hook.php:378
  - RETRIEVAL call to get_post_meta($assignment_id, "course_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class-mycred-learndash-hook.php:419
  - RETRIEVAL call to get_post($assignment_id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
inc/class-mycred-learndash-hook.php:424
  - RETRIEVAL call to get_post_meta($assignment_id, "lesson_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class-mycred-learndash-hook.php:428
  - RETRIEVAL call to get_post_meta($lesson_id, "lesson_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class-mycred-learndash-hook.php:432
  - RETRIEVAL call to get_post_meta($assignment_id, "course_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class-mycred-learndash-lb-functions.php:30
  - RETRIEVAL call to get_posts(["post_type" => "sfwd-courses", "numberposts" => -1, "tax_query" => [["taxonomy" => "ld_course_category", "field" => "term_id", "terms" => $ids]]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
inc/class-mycred-learndash-lb-functions.php:68
  - RETRIEVAL call to get_posts(["post_type" => "sfwd-lessons", "numberposts" => -1, "meta_query" => [["key" => "course_id", "value" => $assoc_course_id, "compare" => "="]], "tax_query" => [["taxonomy" => "ld_lesson_category", "field" => "term_id", "terms" => $ids]]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
inc/class-mycred-learndash-lb-functions.php:113
  - RETRIEVAL call to get_posts(["post_type" => "sfwd-topic", "numberposts" => -1, "meta_query" => ["relation" => "and", ["key" => "course_id", "value" => $assoc_course_id, "compare" => "="], ["key" => "lesson_id", "value" => $assoc_lesson_id, "compare" => "="]], "tax_query" => [["taxonomy" => "ld_topic_category", "field" => "term_id", "terms" => $ids]]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
inc/class-mycred-learndash-lb-functions.php:164
  - RETRIEVAL call to get_posts(["post_type" => "sfwd-quiz", "numberposts" => -1, "meta_query" => ["relation" => "and", ["key" => "course_id", "value" => $assoc_course_id, "compare" => "="], ["relation" => "or", ["key" => "lesson_id", "value" => $assoc_lesson_id, "compare" => "="], ["key" => "topic_id", "value" => $assoc_lesson_id, "compare" => "="]]], "tax_query" => [["taxonomy" => "category", "field" => "term_id", "terms" => $ids]]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
inc/class-mycred-learndash-lb-functions.php:216
  - RETRIEVAL call to get_option("start_of_week") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/class-mycred-learndash-leaderboard.php:13
  - RETRIEVAL call to get_option("learndash_allow_leaderboard") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/class-mycred-learndash-leaderboard.php:114
  - RETRIEVAL call to get_post_meta($post->ID, "leaderboard_default", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class-mycred-learndash-leaderboard.php:163
  - RETRIEVAL call to get_post_meta($post_id, "leaderboard_course_based", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class-mycred-learndash-leaderboard.php:176
  - RETRIEVAL call to get_posts($opt). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
inc/class-mycred-learndash-leaderboard.php:177
  - RETRIEVAL call to get_posts($opt). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
inc/class-mycred-learndash-leaderboard.php:263
  - RETRIEVAL call to get_post_meta(get_the_ID(), "leaderboard_lesson_based", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class-mycred-learndash-leaderboard.php:266
  - RETRIEVAL call to get_post_meta(get_the_ID(), "leaderboard_topic_based", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class-mycred-learndash-leaderboard.php:269
  - RETRIEVAL call to get_post_meta(get_the_ID(), "leaderboard_quiz_based", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class-mycred-learndash-leaderboard.php:326
  - RETRIEVAL call to get_post_meta($post_id, "leaderboard_lesson_based", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class-mycred-learndash-leaderboard.php:338
  - RETRIEVAL call to get_posts($opt). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
inc/class-mycred-learndash-leaderboard.php:339
  - RETRIEVAL call to get_posts($opt). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
inc/class-mycred-learndash-leaderboard.php:432
  - RETRIEVAL call to get_post_meta(absint($_POST["leaderboard_id"]), "leaderboard_topic_based", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class-mycred-learndash-leaderboard.php:454
  - RETRIEVAL call to get_post_meta(absint($_POST["leaderboard_id"]), "leaderboard_quiz_based", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class-mycred-learndash-leaderboard.php:476
  - RETRIEVAL call to get_post_meta(absint($_POST["leaderboard_id"]), "leaderboard_topic_based", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class-mycred-learndash-leaderboard.php:500
  - RETRIEVAL call to get_posts($opt). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
inc/class-mycred-learndash-leaderboard.php:501
  - RETRIEVAL call to get_posts($opt). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
inc/class-mycred-learndash-leaderboard.php:590
  - RETRIEVAL call to get_post_meta(absint($_POST["leaderboard_id"]), "leaderboard_quiz_based", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class-mycred-learndash-leaderboard.php:625
  - RETRIEVAL call to get_posts($opt). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
inc/class-mycred-learndash-leaderboard.php:626
  - RETRIEVAL call to get_posts($opt). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
inc/class-mycred-learndash-leaderboard.php:867
  - RETRIEVAL call to get_post_meta($post_id, "leaderboard_default", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class-mycred-learndash-leaderboard.php:907
  - RETRIEVAL call to get_post_meta($post_id, "leaderboard_"$type"_based", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class-mycred-learndash-leaderboard.php:1035
  - RETRIEVAL call to get_users() alters data types {'user', 'user_meta'}. Returns (array).
  - Data types: user, user_meta
inc/class-mycred-learndash-leaderboard.php:1086
  - RETRIEVAL call to get_post_meta(get_the_ID(), "leaderboard_shortcode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class-mycred-learndash-quiz-failed-hook.php:203
  - RETRIEVAL call to get_posts(["post_type" => "sfwd-quiz", "posts_per_page" => -1, "tax_query" => [["taxonomy" => "ld_quiz_tag", "field" => "term_id", "terms" => $quiz_tag_id, "include_children" => false]]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
inc/class-mycred-learndash-quiz-failed-hook.php:422
  - RETRIEVAL call to get_post_meta(absint($_POST["leaderboard_id"]), "score_quiz_based", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class-mycred-learndash.php:66
  - RETRIEVAL call to get_post_meta($post->ID, "myCred_point", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class-mycred-learndash.php:67
  - RETRIEVAL call to get_post_meta($post->ID, "myCred_override_hook", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/class-mycred-learndash.php:68
  - RETRIEVAL call to get_post_meta($post->ID, "myCred_point_type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/learndash-Percentage_range_backup.php:289
  - RETRIEVAL call to get_post_meta(absint($_POST["leaderboard_id"]), "score_quiz_based", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/mycred-learndash-lb-shortcode.php:82
  - RETRIEVAL call to get_userdata($result->ID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
inc/views/my_cred_overide.php:51
  - RETRIEVAL call to get_post_meta($post->ID, "myCred_quiz_point_fail", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/views/my_cred_overide.php:93
  - RETRIEVAL call to get_post_meta($post->ID, "min_percentage", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/views/my_cred_overide.php:94
  - RETRIEVAL call to get_post_meta($post->ID, "max_percentage", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/views/my_cred_overide.php:96
  - RETRIEVAL call to get_post_meta($post->ID, "min_percentage_range", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/views/my_cred_overide.php:98
  - RETRIEVAL call to get_post_meta($post->ID, "earn_points", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
inc/views/my_cred_overide.php:100
  - RETRIEVAL call to get_post_meta($post->ID, "times", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta 

inc/admin/settings/class-mycred-learndash-course-settings.php:77
  - STORAGE call to update_post_meta($post_id, "allow_buy_course_pts", sanitize_text_field($_POST["allow_buy_course_pts"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/admin/settings/class-mycred-learndash-course-settings.php:80
  - STORAGE call to delete_post_meta($post_id, "allow_buy_course_pts") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/class-mycred-buy-pts-handler.php:89
  - STORAGE call to wp_insert_post(["post_title" => "Course "$course_title" Purchased By "$user_email, "post_type" => "sfwd-transactions", "post_status" => "publish", "post_author" => $user_id]). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
inc/class-mycred-buy-pts-handler.php:94
  - STORAGE call to update_post_meta($post_id, $key, $value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/class-mycred-learndash-leaderboard.php:744
  - STORAGE call to update_post_meta($post_id, "leaderboard_default", $leaderboard_setting) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/class-mycred-learndash-leaderboard.php:769
  - STORAGE call to update_post_meta($post_id, "leaderboard_course_based", $leaderboard_course_based) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/class-mycred-learndash-leaderboard.php:795
  - STORAGE call to update_post_meta($post_id, "leaderboard_topic_based", $leaderboard_topic_based) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/class-mycred-learndash-leaderboard.php:821
  - STORAGE call to update_post_meta($post_id, "leaderboard_quiz_based", $leaderboard_quiz_based) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/class-mycred-learndash-leaderboard.php:845
  - STORAGE call to update_post_meta($post_id, "leaderboard_lesson_based", $leaderboard_lesson_based) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/class-mycred-learndash-leaderboard.php:936
  - STORAGE call to update_post_meta($post_id, "leaderboard_shortcode", $message) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/class-mycred-learndash-leaderboard.php:943
  - STORAGE call to update_post_meta($post_id, "leaderboard_shortcode", $shortcode) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/class-mycred-learndash.php:88
  - STORAGE call to update_post_meta($post_id, "myCred_quiz_point_fail", sanitize_text_field($_POST["myCred_quiz_point_fail"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/class-mycred-learndash.php:90
  - STORAGE call to delete_post_meta($post_id, "myCred_quiz_point_fail") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/class-mycred-learndash.php:95
  - STORAGE call to update_post_meta($post_id, "myCred_override_hook", sanitize_text_field($_POST["myCred_override_hook"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/class-mycred-learndash.php:97
  - STORAGE call to delete_post_meta($post_id, "myCred_override_hook") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/class-mycred-learndash.php:98
  - STORAGE call to delete_post_meta($post_id, "myCred_point") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/class-mycred-learndash.php:99
  - STORAGE call to delete_post_meta($post_id, "myCred_point_type") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/class-mycred-learndash.php:100
  - STORAGE call to delete_post_meta($post_id, "myCred_quiz_point_fail") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/class-mycred-learndash.php:106
  - STORAGE call to update_post_meta($post_id, "myCred_point", sanitize_text_field($_POST["myCred_point"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/class-mycred-learndash.php:109
  - STORAGE call to delete_post_meta($post_id, "myCred_point") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/class-mycred-learndash.php:113
  - STORAGE call to update_post_meta($post_id, "myCred_point_type", sanitize_text_field($_POST["myCred_point_type"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/class-mycred-learndash.php:116
  - STORAGE call to delete_post_meta($post_id, "myCred_point_type") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/class-mycred-learndash.php:129
  - STORAGE call to update_post_meta($post_id, "min_percentage", sanitize_text_field($_POST["min_percentage"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/class-mycred-learndash.php:132
  - STORAGE call to delete_post_meta($post_id, "min_percentage") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/class-mycred-learndash.php:145
  - STORAGE call to update_post_meta($post_id, "min_percentage_range", sanitize_text_field($_POST["min_percentage_range"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/class-mycred-learndash.php:148
  - STORAGE call to delete_post_meta($post_id, "min_percentage_range") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/class-mycred-learndash.php:162
  - STORAGE call to update_post_meta($post_id, "earn_points", sanitize_text_field($_POST["earn_points"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/class-mycred-learndash.php:165
  - STORAGE call to delete_post_meta($post_id, "earn_points") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/class-mycred-learndash.php:180
  - STORAGE call to update_post_meta($post_id, "times", sanitize_text_field($_POST["times"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/class-mycred-learndash.php:183
  - STORAGE call to delete_post_meta($post_id, "times") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/class-mycred-learndash.php:198
  - STORAGE call to update_post_meta($post_id, "max_percentage", sanitize_text_field($_POST["max_percentage"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/class-mycred-learndash.php:201
  - STORAGE call to delete_post_meta($post_id, "max_percentage") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/class-mycred-learndash.php:240
  - STORAGE call to update_post_meta($post_id, "max_percentage", sanitize_text_field($_POST["max_percentage"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
inc/class-mycred-learndash.php:243
  - STORAGE call to delete_post_meta($post_id, "max_percentage") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta 

inc/admin/settings/class-mycred-learndash-course-settings.php:80
  - DELETION call to delete_post_meta($post_id, "allow_buy_course_pts") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/class-mycred-learndash.php:90
  - DELETION call to delete_post_meta($post_id, "myCred_quiz_point_fail") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/class-mycred-learndash.php:97
  - DELETION call to delete_post_meta($post_id, "myCred_override_hook") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/class-mycred-learndash.php:98
  - DELETION call to delete_post_meta($post_id, "myCred_point") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/class-mycred-learndash.php:99
  - DELETION call to delete_post_meta($post_id, "myCred_point_type") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/class-mycred-learndash.php:100
  - DELETION call to delete_post_meta($post_id, "myCred_quiz_point_fail") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/class-mycred-learndash.php:109
  - DELETION call to delete_post_meta($post_id, "myCred_point") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/class-mycred-learndash.php:116
  - DELETION call to delete_post_meta($post_id, "myCred_point_type") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/class-mycred-learndash.php:132
  - DELETION call to delete_post_meta($post_id, "min_percentage") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/class-mycred-learndash.php:148
  - DELETION call to delete_post_meta($post_id, "min_percentage_range") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/class-mycred-learndash.php:165
  - DELETION call to delete_post_meta($post_id, "earn_points") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/class-mycred-learndash.php:183
  - DELETION call to delete_post_meta($post_id, "times") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/class-mycred-learndash.php:201
  - DELETION call to delete_post_meta($post_id, "max_percentage") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
inc/class-mycred-learndash.php:243
  - DELETION call to delete_post_meta($post_id, "max_percentage") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta 

By data type:
email
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
none
	WordPressRetrievalDetector.get_posts(["post_type" => "sfwd-lessons", "numberposts" => -1, "meta_query" => [["key" => "course_id", "value" => $assoc_course_id, "compare" => "="]], "tax_query" => [["taxonomy" => "ld_lesson_category", "field" => "term_id", "terms" => $ids]]]) - set()
	WordPressRetrievalDetector.get_posts(["post_type" => "sfwd-courses", "numberposts" => -1, "tax_query" => [["taxonomy" => "ld_course_category", "field" => "term_id", "terms" => $ids]]]) - set()
	WordPressRetrievalDetector.get_posts($opt) - set()
	WordPressRetrievalDetector.get_posts(["post_type" => "sfwd-topic", "numberposts" => -1, "meta_query" => ["relation" => "and", ["key" => "course_id", "value" => $assoc_course_id, "compare" => "="], ["key" => "lesson_id", "value" => $assoc_lesson_id, "compare" => "="]], "tax_query" => [["taxonomy" => "ld_topic_category", "field" => "term_id", "terms" => $ids]]]) - set()
	WordPressStorageDetector.wp_insert_post(["post_title" => "Course "$course_title" Purchased By "$user_email, "post_type" => "sfwd-transactions", "post_status" => "publish", "post_author" => $user_id]) - set()
	WordPressRetrievalDetector.get_posts($opt) - set()
	WordPressRetrievalDetector.get_posts($opt) - set()
	WordPressRetrievalDetector.get_posts($opt) - set()
	WordPressRetrievalDetector.get_posts($opt) - set()
	WordPressRetrievalDetector.get_posts(["post_type" => "sfwd-courses", "posts_per_page" => -1, "tax_query" => [["taxonomy" => "ld_course_tag", "field" => "term_id", "terms" => $course_tag_id, "include_children" => false]]]) - set()
	WordPressRetrievalDetector.get_posts(["post_type" => "sfwd-quiz", "posts_per_page" => -1, "tax_query" => [["taxonomy" => "ld_quiz_tag", "field" => "term_id", "terms" => $quiz_tag_id, "include_children" => false]]]) - set()
	WordPressRetrievalDetector.get_posts(["post_type" => "sfwd-topic", "posts_per_page" => -1, "tax_query" => [["taxonomy" => "ld_topic_tag", "field" => "term_id", "terms" => $topic_tag_id, "include_children" => false]]]) - set()
	WordPressRetrievalDetector.get_posts($args) - set()
	WordPressRetrievalDetector.get_posts(["post_type" => "sfwd-quiz", "posts_per_page" => -1, "tax_query" => [["taxonomy" => "ld_quiz_tag", "field" => "term_id", "terms" => $quiz_tag_id, "include_children" => false]]]) - set()
	WordPressRetrievalDetector.get_posts(["post_type" => "sfwd-lessons", "posts_per_page" => -1, "tax_query" => [["taxonomy" => "ld_lesson_tag", "field" => "term_id", "terms" => $lesson_tag_id, "include_children" => false]]]) - set()
	WordPressRetrievalDetector.get_posts($opt) - set()
	WordPressRetrievalDetector.get_posts($opt) - set()
	WordPressRetrievalDetector.get_posts(["post_type" => "sfwd-quiz", "posts_per_page" => -1, "tax_query" => [["taxonomy" => "ld_quiz_tag", "field" => "term_id", "terms" => $quiz_tag_id, "include_children" => false]]]) - set()
	WordPressRetrievalDetector.get_posts($opt) - set()
	WordPressRetrievalDetector.get_posts(["post_type" => "sfwd-quiz", "numberposts" => -1, "meta_query" => ["relation" => "and", ["key" => "course_id", "value" => $assoc_course_id, "compare" => "="], ["relation" => "or", ["key" => "lesson_id", "value" => $assoc_lesson_id, "compare" => "="], ["key" => "topic_id", "value" => $assoc_lesson_id, "compare" => "="]]], "tax_query" => [["taxonomy" => "category", "field" => "term_id", "terms" => $ids]]]) - set()
	WordPressRetrievalDetector.get_posts(["post_type" => "sfwd-quiz", "posts_per_page" => -1, "tax_query" => [["taxonomy" => "ld_quiz_tag", "field" => "term_id", "terms" => $quiz_tag_id, "include_children" => false]]]) - set()
option
	WordPressRetrievalDetector.get_option("allow_buy_course_pts") - {'option'}
	WordPressRetrievalDetector.get_option("start_of_week") - {'option'}
	WordPressRetrievalDetector.get_option("allow_buy_course_pts") - {'option'}
	WordPressRetrievalDetector.get_option("learndash_allow_leaderboard") - {'option'}
	WordPressRetrievalDetector.get_option("allow_buy_course_pts") - {'option'}
	WordPressRetrievalDetector.get_option("allow_buy_course_pts") - {'option'}
	WordPressRetrievalDetector.get_option("learndash_point_type") - {'option'}
	WordPressRetrievalDetector.get_option("learndash_point_type") - {'option'}
	WordPressRetrievalDetector.get_option("learndash_mycred_exchange_rate") - {'option'}
	WordPressRetrievalDetector.get_option("learndash_mycred_exchange_rate") - {'option'}
	WordPressRetrievalDetector.get_option("learndash_allow_leaderboard") - {'option'}
post
	WordPressRetrievalDetector.get_post($assignment_id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($assignment_id) - {'post', 'wp_post', 'post_meta'}
post_meta
	WordPressRetrievalDetector.get_post_meta($assignment_id, "course_id", true) - {'post_meta'}
	DeletionDetector.delete_post_meta($post_id, "myCred_point_type") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "leaderboard_quiz_based", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "leaderboard_default", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "max_percentage", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "min_percentage", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($assignment_id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "allow_buy_course_pts", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "times", sanitize_text_field($_POST["times"])) - {'post_meta'}
	DeletionDetector.delete_post_meta($post_id, "myCred_point_type") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($assignment_id, "lesson_id", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($lesson_id, "lesson_id", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "myCred_quiz_point_fail", true) - {'post_meta'}
	DeletionDetector.delete_post_meta($post_id, "earn_points") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "myCred_override_hook", true) - {'post_meta'}
	DeletionDetector.delete_post_meta($post_id, "times") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "leaderboard_topic_based", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "leaderboard_course_based", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(absint($_POST["leaderboard_id"]), "leaderboard_topic_based", true) - {'post_meta'}
	DeletionDetector.delete_post_meta($post_id, "min_percentage") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "leaderboard_lesson_based", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "myCred_override_hook", sanitize_text_field($_POST["myCred_override_hook"])) - {'post_meta'}
	DeletionDetector.delete_post_meta($post_id, "myCred_quiz_point_fail") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($lesson_id, "lesson_id", true) - {'post_meta'}
	DeletionDetector.delete_post_meta($post_id, "max_percentage") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "max_percentage", sanitize_text_field($_POST["max_percentage"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "min_percentage_range", sanitize_text_field($_POST["min_percentage_range"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "leaderboard_shortcode", $message) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post_id, "myCred_override_hook") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(absint($_POST["leaderboard_id"]), "score_quiz_based", true) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post_id, "allow_buy_course_pts") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "leaderboard_shortcode", $shortcode) - {'post_meta'}
	DeletionDetector.delete_post_meta($post_id, "myCred_quiz_point_fail") - {'post_meta'}
	WordPressRetrievalDetector.get_post($assignment_id) - {'post', 'wp_post', 'post_meta'}
	WordPressStorageDetector.delete_post_meta($post_id, "myCred_quiz_point_fail") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(absint($_POST["leaderboard_id"]), "score_quiz_based", true) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post_id, "min_percentage_range") - {'post_meta'}
	DeletionDetector.delete_post_meta($post_id, "min_percentage_range") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(absint($_POST["leaderboard_id"]), "score_quiz_based", true) - {'post_meta'}
	DeletionDetector.delete_post_meta($post_id, "max_percentage") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($course_id, "_sfwd-courses", true) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post_id, "max_percentage") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(absint($_POST["leaderboard_id"]), "score_quiz_based", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "leaderboard_"$type"_based", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(absint($_POST["leaderboard_id"]), "leaderboard_topic_based", true) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post_id, "min_percentage") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "leaderboard_course_based", $leaderboard_course_based) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(absint($_POST["leaderboard_id"]), "leaderboard_quiz_based", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "myCred_point", sanitize_text_field($_POST["myCred_point"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "min_percentage", sanitize_text_field($_POST["min_percentage"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "leaderboard_lesson_based", $leaderboard_lesson_based) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "myCred_quiz_point_fail", sanitize_text_field($_POST["myCred_quiz_point_fail"])) - {'post_meta'}
	DeletionDetector.delete_post_meta($post_id, "myCred_point") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "leaderboard_default", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "myCred_point", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "max_percentage", sanitize_text_field($_POST["max_percentage"])) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post_id, "myCred_quiz_point_fail") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "leaderboard_quiz_based", $leaderboard_quiz_based) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post_id, "max_percentage") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($assignment_id, "course_id", true) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post_id, "myCred_point_type") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "allow_buy_course_pts", sanitize_text_field($_POST["allow_buy_course_pts"])) - {'post_meta'}
	DeletionDetector.delete_post_meta($post_id, "allow_buy_course_pts") - {'post_meta'}
	DeletionDetector.delete_post_meta($post_id, "myCred_point") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "earn_points", sanitize_text_field($_POST["earn_points"])) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post_id, "myCred_point_type") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "earn_points", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "leaderboard_shortcode", true) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post_id, "myCred_point") - {'post_meta'}
	DeletionDetector.delete_post_meta($post_id, "myCred_override_hook") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, $key, $value) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "leaderboard_lesson_based", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "myCred_point_type", true) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post_id, "times") - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post_id, "myCred_point") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($assignment_id, "lesson_id", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "times", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($course_id, "allow_buy_course_pts", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "leaderboard_topic_based", $leaderboard_topic_based) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post_id, "earn_points") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(absint($_POST["leaderboard_id"]), "leaderboard_quiz_based", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "min_percentage_range", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(absint($_POST["leaderboard_id"]), "score_quiz_based", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "myCred_point_type", sanitize_text_field($_POST["myCred_point_type"])) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "leaderboard_default", $leaderboard_setting) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($id, "myCred_badges_override", true) - {'post_meta'}
user
	WordPressRetrievalDetector.get_userdata($result->ID) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($user_id) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_users() - {'user', 'user_meta'}
user_meta
	WordPressRetrievalDetector.get_userdata($result->ID) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($user_id) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_users() - {'user', 'user_meta'}
wp_post
	WordPressRetrievalDetector.get_post($assignment_id) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($assignment_id) - {'post', 'wp_post', 'post_meta'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:23.167448.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 1287 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.592513.

1000 STORE_REACHES edges created
1287 STORE_REACHES edges created
1287 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 444 nodes as PERSONAL
In total, tainted 444 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
In total, tainted 0 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:10.920266.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:03:24.572949!
DELETION call to delete_post_meta($post_id, "allow_buy_course_pts") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($post_id, "myCred_quiz_point_fail") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($post_id, "myCred_point") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($post_id, "myCred_point_type") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($post_id, "min_percentage") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($post_id, "min_percentage_range") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($post_id, "earn_points") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($post_id, "times") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($post_id, "max_percentage") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($post_id, "max_percentage") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($post_id, "myCred_quiz_point_fail") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($post_id, "myCred_override_hook") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($post_id, "myCred_point") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($post_id, "myCred_point_type") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
RETRIEVAL call to get_option("allow_buy_course_pts") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "allow_buy_course_pts", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("allow_buy_course_pts") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("allow_buy_course_pts") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("learndash_allow_leaderboard") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("learndash_mycred_exchange_rate") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("learndash_point_type") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($course_id, "allow_buy_course_pts", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("allow_buy_course_pts") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($course_id, "_sfwd-courses", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("learndash_point_type") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("learndash_mycred_exchange_rate") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdata($user_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_posts($args). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_posts(["post_type" => "sfwd-lessons", "posts_per_page" => -1, "tax_query" => [["taxonomy" => "ld_lesson_tag", "field" => "term_id", "terms" => $lesson_tag_id, "include_children" => false]]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_posts(["post_type" => "sfwd-topic", "posts_per_page" => -1, "tax_query" => [["taxonomy" => "ld_topic_tag", "field" => "term_id", "terms" => $topic_tag_id, "include_children" => false]]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_posts(["post_type" => "sfwd-courses", "posts_per_page" => -1, "tax_query" => [["taxonomy" => "ld_course_tag", "field" => "term_id", "terms" => $course_tag_id, "include_children" => false]]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_posts(["post_type" => "sfwd-quiz", "posts_per_page" => -1, "tax_query" => [["taxonomy" => "ld_quiz_tag", "field" => "term_id", "terms" => $quiz_tag_id, "include_children" => false]]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_post_meta(absint($_POST["leaderboard_id"]), "score_quiz_based", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_posts(["post_type" => "sfwd-quiz", "posts_per_page" => -1, "tax_query" => [["taxonomy" => "ld_quiz_tag", "field" => "term_id", "terms" => $quiz_tag_id, "include_children" => false]]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_post_meta(absint($_POST["leaderboard_id"]), "score_quiz_based", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_posts(["post_type" => "sfwd-quiz", "posts_per_page" => -1, "tax_query" => [["taxonomy" => "ld_quiz_tag", "field" => "term_id", "terms" => $quiz_tag_id, "include_children" => false]]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_post_meta(absint($_POST["leaderboard_id"]), "score_quiz_based", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($id, "myCred_badges_override", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($assignment_id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($assignment_id, "lesson_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($lesson_id, "lesson_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($assignment_id, "course_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($assignment_id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($assignment_id, "lesson_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($lesson_id, "lesson_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($assignment_id, "course_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_posts(["post_type" => "sfwd-topic", "numberposts" => -1, "meta_query" => ["relation" => "and", ["key" => "course_id", "value" => $assoc_course_id, "compare" => "="], ["key" => "lesson_id", "value" => $assoc_lesson_id, "compare" => "="]], "tax_query" => [["taxonomy" => "ld_topic_category", "field" => "term_id", "terms" => $ids]]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_posts(["post_type" => "sfwd-quiz", "numberposts" => -1, "meta_query" => ["relation" => "and", ["key" => "course_id", "value" => $assoc_course_id, "compare" => "="], ["relation" => "or", ["key" => "lesson_id", "value" => $assoc_lesson_id, "compare" => "="], ["key" => "topic_id", "value" => $assoc_lesson_id, "compare" => "="]]], "tax_query" => [["taxonomy" => "category", "field" => "term_id", "terms" => $ids]]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_option("start_of_week") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_posts(["post_type" => "sfwd-courses", "numberposts" => -1, "tax_query" => [["taxonomy" => "ld_course_category", "field" => "term_id", "terms" => $ids]]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_posts(["post_type" => "sfwd-lessons", "numberposts" => -1, "meta_query" => [["key" => "course_id", "value" => $assoc_course_id, "compare" => "="]], "tax_query" => [["taxonomy" => "ld_lesson_category", "field" => "term_id", "terms" => $ids]]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_users() alters data types {'user', 'user_meta'}. Returns (array).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "leaderboard_shortcode", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "leaderboard_default", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("learndash_allow_leaderboard") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "leaderboard_course_based", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_posts($opt). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_posts($opt). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "leaderboard_lesson_based", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "leaderboard_topic_based", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "leaderboard_quiz_based", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "leaderboard_lesson_based", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_posts($opt). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_posts($opt). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_post_meta(absint($_POST["leaderboard_id"]), "leaderboard_topic_based", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(absint($_POST["leaderboard_id"]), "leaderboard_quiz_based", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(absint($_POST["leaderboard_id"]), "leaderboard_topic_based", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_posts($opt). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_posts($opt). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_post_meta(absint($_POST["leaderboard_id"]), "leaderboard_quiz_based", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_posts($opt). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_posts($opt). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_post_meta($post_id, "leaderboard_default", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "leaderboard_"$type"_based", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_posts(["post_type" => "sfwd-quiz", "posts_per_page" => -1, "tax_query" => [["taxonomy" => "ld_quiz_tag", "field" => "term_id", "terms" => $quiz_tag_id, "include_children" => false]]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_post_meta(absint($_POST["leaderboard_id"]), "score_quiz_based", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "myCred_point", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "myCred_override_hook", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "myCred_point_type", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(absint($_POST["leaderboard_id"]), "score_quiz_based", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdata($result->ID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_post_meta($post->ID, "times", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "myCred_quiz_point_fail", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "min_percentage", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "max_percentage", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "min_percentage_range", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "earn_points", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
STORAGE call to update_post_meta($post_id, "allow_buy_course_pts", sanitize_text_field($_POST["allow_buy_course_pts"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($post_id, "allow_buy_course_pts") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to wp_insert_post(["post_title" => "Course "$course_title" Purchased By "$user_email, "post_type" => "sfwd-transactions", "post_status" => "publish", "post_author" => $user_id]). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($post_id, $key, $value) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "leaderboard_default", $leaderboard_setting) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "leaderboard_course_based", $leaderboard_course_based) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "leaderboard_topic_based", $leaderboard_topic_based) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "leaderboard_quiz_based", $leaderboard_quiz_based) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "leaderboard_lesson_based", $leaderboard_lesson_based) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "leaderboard_shortcode", $message) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "leaderboard_shortcode", $shortcode) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($post_id, "myCred_quiz_point_fail") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, "myCred_point", sanitize_text_field($_POST["myCred_point"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($post_id, "myCred_point") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, "myCred_point_type", sanitize_text_field($_POST["myCred_point_type"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($post_id, "myCred_point_type") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, "min_percentage", sanitize_text_field($_POST["min_percentage"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($post_id, "min_percentage") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, "min_percentage_range", sanitize_text_field($_POST["min_percentage_range"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($post_id, "min_percentage_range") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, "earn_points", sanitize_text_field($_POST["earn_points"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($post_id, "earn_points") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, "times", sanitize_text_field($_POST["times"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($post_id, "times") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, "max_percentage", sanitize_text_field($_POST["max_percentage"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($post_id, "max_percentage") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, "max_percentage", sanitize_text_field($_POST["max_percentage"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($post_id, "max_percentage") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, "myCred_quiz_point_fail", sanitize_text_field($_POST["myCred_quiz_point_fail"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($post_id, "myCred_quiz_point_fail") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, "myCred_override_hook", sanitize_text_field($_POST["myCred_override_hook"])) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($post_id, "myCred_override_hook") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_post_meta($post_id, "myCred_point") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_post_meta($post_id, "myCred_point_type") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] PII of types (['user', 'email', 'user_meta']) stored through WordPress function "wp_insert_post(["post_title" => "Course "$course_title" Purchased By "$user_email, "post_type" => "sfwd-transactions", "post_status" => "publish", "post_author" => $user_id])", found in file inc/class-mycred-buy-pts-handler.php at line 89. 

[has_storage] PII of types (['user', 'email', 'user_meta']) stored through WordPress function "update_post_meta($post_id, "leaderboard_shortcode", $message)", found in file inc/class-mycred-learndash-leaderboard.php at line 936. 

[has_storage] PII of types (['user', 'email', 'user_meta']) stored through WordPress function "update_post_meta($post_id, $key, $value)", found in file inc/class-mycred-buy-pts-handler.php at line 94. 

[has_storage] Storage check is WP 

[Art.17, Right to erasure] Wordpress storage of PII through wp_insert_post(["post_title" => "Course "$course_title" Purchased By "$user_email, "post_type" => "sfwd-transactions", "post_status" => "publish", "post_author" => $user_id]) does not have corresponding deletion method. Storage method found in file inc/class-mycred-buy-pts-handler.php at line 89. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post_id, "leaderboard_shortcode", $message) does not have corresponding deletion method. Storage method found in file inc/class-mycred-learndash-leaderboard.php at line 936. 

[Art.17, Right to erasure] Wordpress storage of PII through update_post_meta($post_id, $key, $value) does not have corresponding deletion method. Storage method found in file inc/class-mycred-buy-pts-handler.php at line 94. 

[Art.17, Right to erasure] Deletion access is NONE 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1371. Found in file inc/class-mycred-buy-pts-handler.php at line 89 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 31036. Found in file inc/class-mycred-learndash-leaderboard.php at line 936 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1403. Found in file inc/class-mycred-buy-pts-handler.php at line 94 

[Art.15, Right to access] Data access is NONE_BUT_NOT_REQUIRED 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['access', 'deletion', 'encryption', 'third_party'] 

[main] Is deletion in violation? True 

[main] Is access in violation? False 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? False 


###########
### Q&A ###
###########

1. Why is my plugin in violation against GDPR?

GDPR (https://gdpr-info.eu/) aims to give citizens in the European Union (EU) control over their personal data. If a website collects or store user data, it is required to provide users functionalities to control their data, such as ones to erase or export their data. While a plugin do not directly interact with users, it may provide functionalities that collect or store personal data, which would make websites that deploy the plugin in violation against GDPR if the plugin does not provide corresponding functionalities to allow users control their personal data. Therefore, plugin developers are responsible to provide functions to manage the personal data they handle in accordance with GDPR. We list requirements by specific GDPR articles relevant to your plugin below.


[Art. 13, Information to be provided where personal data are collected from the data subject] If a plugin collects or handles personal data, it needs to provide privacy policy texts that explain what personal data is being collected and for what purpose. The texts are meant to be added to the privacy policy of the websites that deploy the plugin. 


            
[Art.17, Right to erasure] If a plugin stores personal data in a custom database they create or manage, or through Wordpress's native storage functions (e.g., update_user_meta), it needs to provide methods for users to erase the data upon request. Note that deleting data for all users upon uninstallation does not satisfy the requirement. 


            
        

2. How do I make my plugin compliant?

Please refer to the fix report below to see how you can make your plugin comply with GDPR.

        
