Timeout in resolving values
Timeout in running neo4j query
Running Main.py on peepso-tools-ultimate-member-migrator

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.364737.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.229414.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 48 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.406744.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 1 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.541376.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 758 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:00.928097.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 50 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:01.625588.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
Added 6 PHP_REACHES edges.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.093260.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 334 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:04.769636.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 5804
Added 4607 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 5804
Added 0 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.396200.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/peepso-tools-ultimate-member-migrator/peepsomigrate.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/peepso-tools-ultimate-member-migrator/assets/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/peepso-tools-ultimate-member-migrator/classes/migrate.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/peepso-tools-ultimate-member-migrator/language/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/peepso-tools-ultimate-member-migrator/templates/migrate/dashboard.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/peepso-tools-ultimate-member-migrator/templates/migrate/header.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/peepso-tools-ultimate-member-migrator/templates/migrate/progress_bar.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/peepso-tools-ultimate-member-migrator/templates/migrate/progress.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.885525.

48 PHP_REACHES edges created
1 REACHES edges created
758 PHP_REACHES edges created
47 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
4950 PHP_REACHES edges created
5804 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 2245 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.381107.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:06.366200.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 62 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:01.934292.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 145 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.197881.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.556833.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.450210.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.026970.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.034653.

207 PHP_REACHES edges created
207 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 85 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.119706.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
48 SQL operations to process.
SELECT * FROM $wpdbusers ORDER BY ID asc limit $this_limit, %d 
SELECT * FROM $wpdbusers ORDER BY ID asc limit $this_limit, $this_per_page 
SELECT * FROM $wpdbusers ORDER BY ID asc limit $this_limit, $this_per_page 
SQL command (SELECT * FROM $wpdbusers ORDER BY ID asc limit $this_limit, $this_per_page ) cannot be parsed correct.
SELECT * FROM $wpdbusers limit $this_limit, %d
SELECT * FROM $wpdbusers limit $this_limit, $this_per_page
SELECT * FROM $wpdbusers limit $this_limit, $this_per_page
SQL command (SELECT * FROM $wpdbusers limit $this_limit, $this_per_page) cannot be parsed correct.
SELECT * FROM $wpdbum_friends limit $this_limit, %d
SELECT * FROM $wpdbum_friends limit $this_limit, $this_per_page
SELECT * FROM $wpdbum_friends limit $this_limit, $this_per_page
SQL command (SELECT * FROM $wpdbum_friends limit $this_limit, $this_per_page) cannot be parsed correct.
insert into $wpdbpeepso_friend_requests (`freq_user_id`, `freq_friend_id`, `freq_created`, `freq_viewed`) values ('intval($fnd_friend_id)', '%d', '%s', '%d')
insert into $wpdbpeepso_friend_requests (`freq_user_id`, `freq_friend_id`, `freq_created`, `freq_viewed`) values ('intval($fnd_friend_id)', 'intval($fnd_user_id)', '%s', '%d')
insert into $wpdbpeepso_friend_requests (`freq_user_id`, `freq_friend_id`, `freq_created`, `freq_viewed`) v$valueues ('intval($fnd_friend_id)', 'intval($fnd_user_id)', '%s', '%d')
insert into $wpdbpeepso_friend_requests (`freq_user0d`, `freq_friend_id`, `freq_created`, `freq_viewed`) v$valueues ('intval($fnd_friend_id)', 'intval($fnd_user_id)', '%s', '%d')
insert into $wpdbpeepso_friend_requests (`freq_user0d`, `freq_friend_id`, `freq_created`, `freq_viewed`) v$valueues ('intval($fnd_friend_id)', 'intval($fnd_user_id)', '%s', '%d')
SQL command (insert into $wpdbpeepso_friend_requests (`freq_user0d`, `freq_friend_id`, `freq_created`, `freq_viewed`) v$valueues ('intval($fnd_friend_id)', 'intval($fnd_user_id)', '%s', '%d')) cannot be parsed correct.
insert into $wpdbpeepso_friends (`fnd_user_id`, `fnd_friend_id`, `fnd_created`) values ('intval($fnd_user_id)', '%d', '%s')
insert into $wpdbpeepso_friends (`fnd_user_id`, `fnd_friend_id`, `fnd_created`) values ('intval($fnd_user_id)', 'intval($fnd_friend_id)', '%s')
insert into $wpdbpeepso_friends (`$valued_user_id`, `fnd_friend_id`, `fnd_created`) values ('intval($fnd_user_id)', 'intval($fnd_friend_id)', '%s')
insert into $wpdbpeepso_friends (`$valued_user_id`, `fnd_friend_id`, `fnd_created`) values ('intval($fnd_user_id)', 'intval($fnd_friend_id)', '%s')
SQL command (insert into $wpdbpeepso_friends (`$valued_user_id`, `fnd_friend_id`, `fnd_created`) values ('intval($fnd_user_id)', 'intval($fnd_friend_id)', '%s')) cannot be parsed correct.
SELECT * FROM $wpdbum_followers limit $this_limit, %d
SELECT * FROM $wpdbum_followers limit $this_limit, $this_per_page
SELECT * FROM $wpdbum_followers limit $this_limit, $this_per_page
SQL command (SELECT * FROM $wpdbum_followers limit $this_limit, $this_per_page) cannot be parsed correct.
insert into $wpdbpeepso_user_followers (`uf_passive_user_id`, `uf_active_user_id`, `uf_follow`, `uf_notify`, `uf_email`) values ('intval($value->user_id1)', '%d', '%d', '%d', '%d')
insert into $wpdbpeepso_user_followers (`uf_passive_user_id`, `uf_active_user_id`, `uf_follow`, `uf_notify`, `uf_email`) values ('intval($value->user_id1)', 'intval($value->user_id2)', '%d', '%d', '%d')
insert into $wpdbpeepso_user_followers (`uf_passive_user_id`, `uf_active_user_id`, `uf_follow`, `uf_notify`, `uf_email`) values ('intval1value->user_id1)', 'intval($value->user_id2)', '%d', '%d', '%d')
insert into $wpdbpeepso_use0followers (`uf_passive_user_id`, `uf_active_user_id`, `uf_follow`, `uf_notify`, `uf_email`) values ('intval1value->user_id1)', 'intval($value->user_id2)', '%d', '%d', '%d')
insert into $wpdbpeepso_use0followers (`uf_passive_user_id`0`uf_active_user_id`, `uf_follow`, `uf_notify`, `uf_email`) values ('intval1value->user_id1)', 'intval($value->user_id2)', '%d', '%d', '%d')
insert into $wpdbpeepso_use0followers (`uf_passive_user_id`0`uf_active_user_id`, `uf_follow`, `uf_notify`, `uf_email`) values ('intval1value->user_id1)', 'intval($value->user_id2)', '%d', '%d', '%d')
SQL command (insert into $wpdbpeepso_use0followers (`uf_passive_user_id`0`uf_active_user_id`, `uf_follow`, `uf_notify`, `uf_email`) values ('intval1value->user_id1)', 'intval($value->user_id2)', '%d', '%d', '%d')) cannot be parsed correct.
SELECT * FROM $wpdbposts WHERE `post_type` = 'um_activity' order by ID asc limit $this_limit, %d
SELECT * FROM $wpdbposts WHERE `post_type` = 'um_activity' order by ID asc limit $this_limit, $this_per_page
SELECT * FROM $wpdbposts WHERE `post_type` = 'um_activity' order by ID asc limit $this_limit, $this_per_page
SQL command (SELECT * FROM $wpdbposts WHERE `post_type` = 'um_activity' order by ID asc limit $this_limit, $this_per_page) cannot be parsed correct.
UPDATE $wpdbpeepso_notifications SET `not_read` = 1, `not_timestamp` = %s WHERE `not_external_id` = %d
UPDATE $wpdbpeepso_notifications SET `not_read` = 1, `not_timestamp` = $post WHERE `not_external_id` = %d
UPDATE $wp$peepso_activity->add_post(intval($owner), intval($post->post_author), $this->formatTag($post->post_content), ["post_title" => $post_title, "post_date" => $post->post_date, "post_date_gmt" => $post->post_date_gmt, "act_access" => PeepSo::"ACCESS_PUBLIC", "module_id" => $module_id])bpeepso_notifications SET `not_read` = 1, `not_timestamp` = $post WHERE `not_external_id` = %d
UPDATE $wp$peepso_activity->add_post(intval($owner), intval($post->post_author), $this->formatTag($post->post_content), ["post_title" => $post_title, "post_date" => $post->post_date, "post_date_gmt" => $post->post_date_gmt, "act_access" => PeepSo::"ACCESS_PUBLIC", "module_id" => $module_id])bpeepso_notifications SET `not_read` = 1, `not_timestamp` = $post WHERE `not_external_id` = %d
SQL command (UPDATE $wp$peepso_activity->add_post(intval($owner), intval($post->post_author), $this->formatTag($post->post_content), ["post_title" => $post_title, "post_date" => $post->post_date, "post_date_gmt" => $post->post_date_gmt, "act_access" => PeepSo::"ACCESS_PUBLIC", "module_id" => $module_id])bpeepso_notifications SET `not_read` = 1, `not_timestamp` = $post WHERE `not_external_id` = %d) cannot be parsed correct.
UPDATE $wpdbpeepso_activities SET `act_module_id` = "placeholder_0" WHERE `act_id` = %d
UPDATE $wpdbpeepso_activities SET `act_module_id` = "placeholder_0" WHERE `act_id` = $peepso_activity->get_activity_data($post_id, $module_id)_act_id
UPDATE $wpdbpeepso_activities SET `act_module_id` = "placeholder_0" WHERE `act_id` = $peepso_activity->get_activity_data($post_id, $module_id)_act_id
SQL command (UPDATE $wpdbpeepso_activities SET `act_module_id` = "placeholder_0" WHERE `act_id` = $peepso_activity->get_activity_data($post_id, $module_id)_act_id) cannot be parsed correct.
UPDATE $wpdbpeepso_photos SET `pho_owner_id` = $post WHERE `pho_post_id` = %d
UPDATE $wpdbpeepso_photos SET `pho_owner_id` = $post WHERE `pho_post_id` = $peepso_activity->add_post(intval($owner), intval($post->post_author), $this->formatTag($post->post_content), ["post_title" => $post_title, "post_date" => $post->post_date, "post_date_gmt" => $post->post_date_gmt, "act_access" => PeepSo::"ACCESS_PUBLIC", "module_id" => $module_id])
UPDATE $wpdbpeepso_photos SET `pho_owner_id` = $post WHERE `pho_post_id` = $peepso_activity->add_post(intval($owner), intval($post->post_author), $this->formatTag($post->post_content), ["post_title" => $post_title, "post_date" => $post->post_date, "post_date_gmt" => $post->post_date_gmt, "act_access" => PeepSo::"ACCESS_PUBLIC", "module_id" => $module_id])
SQL command (UPDATE $wpdbpeepso_photos SET `pho_owner_id` = $post WHERE `pho_post_id` = $peepso_activity->add_post(intval($owner), intval($post->post_author), $this->formatTag($post->post_content), ["post_title" => $post_title, "post_date" => $post->post_date, "post_date_gmt" => $post->post_date_gmt, "act_access" => PeepSo::"ACCESS_PUBLIC", "module_id" => $module_id])) cannot be parsed correct.
SELECT * FROM $wpdbcomments WHERE `comment_post_ID` = $post and comment_parent = 0 order by comment_ID asc
SELECT * FROM $wpdbcomments WHERE `comment_post_ID` = $post and comment_parent = 0 order by comment_ID asc
SQL command (SELECT * FROM $wpdbcomments WHERE `comment_post_ID` = $post and comment_parent = 0 order by comment_ID asc) cannot be parsed correct.
UPDATE $wpdbpeepso_notifications SET `not_read` = 1, `not_timestamp` = %s WHERE `not_external_id` = %d
UPDATE $wpdbpeepso_notifications SET `not_read` = 1, `not_timestamp` = $comment WHERE `not_external_id` = %d
UPDATE $wp$peepso_activity->add_comment(intval($post_id), intval($comment->user_id), $this->formatTag($comment->comment_content), ["post_title" => $post_title, "post_date" => $comment->comment_date, "post_date_gmt" => $comment->comment_date_gmt, "access" => PeepSo::"ACCESS_PUBLIC", "module_id" => $module_id])bpeepso_notifications SET `not_read` = 1, `not_timestamp` = $comment WHERE `not_external_id` = %d
UPDATE $wp$peepso_activity->add_comment(intval($post_id), intval($comment->user_id), $this->formatTag($comment->comment_content), ["post_title" => $post_title, "post_date" => $comment->comment_date, "post_date_gmt" => $comment->comment_date_gmt, "access" => PeepSo::"ACCESS_PUBLIC", "module_id" => $module_id])bpeepso_notifications SET `not_read` = 1, `not_timestamp` = $comment WHERE `not_external_id` = %d
SQL command (UPDATE $wp$peepso_activity->add_comment(intval($post_id), intval($comment->user_id), $this->formatTag($comment->comment_content), ["post_title" => $post_title, "post_date" => $comment->comment_date, "post_date_gmt" => $comment->comment_date_gmt, "access" => PeepSo::"ACCESS_PUBLIC", "module_id" => $module_id])bpeepso_notifications SET `not_read` = 1, `not_timestamp` = $comment WHERE `not_external_id` = %d) cannot be parsed correct.
SELECT * FROM $wpdbcomments WHERE `comment_parent` = $comment order by comment_ID asc
SELECT * FROM $wpdbcomments WHERE `comment_parent` = $comment order by comment_ID asc
SQL command (SELECT * FROM $wpdbcomments WHERE `comment_parent` = $comment order by comment_ID asc) cannot be parsed correct.
UPDATE $wpdbpeepso_notifications SET `not_read` = 1, `not_timestamp` = %s WHERE `not_external_id` = %d
UPDATE $wpdbpeepso_notifications SET `not_read` = 1, `not_timestamp` = $reply WHERE `not_external_id` = %d
UPDATE $wp$peepso_activity->add_comment(intval($comment_id), intval($reply->user_id), $this->formatTag($reply->comment_content), ["post_title" => $post_title, "post_date" => $reply->comment_date, "post_date_gmt" => $reply->comment_date_gmt, "access" => PeepSo::"ACCESS_PUBLIC"])bpeepso_notifications SET `not_read` = 1, `not_timestamp` = $reply WHERE `not_external_id` = %d
UPDATE $wp$peepso_activity->add_comment(intval($comment_id), intval($reply->user_id), $this->formatTag($reply->comment_content), ["post_title" => $post_title, "post_date" => $reply->comment_date, "post_date_gmt" => $reply->comment_date_gmt, "access" => PeepSo::"ACCESS_PUBLIC"])bpeepso_notifications SET `not_read` = 1, `not_timestamp` = $reply WHERE `not_external_id` = %d
SQL command (UPDATE $wp$peepso_activity->add_comment(intval($comment_id), intval($reply->user_id), $this->formatTag($reply->comment_content), ["post_title" => $post_title, "post_date" => $reply->comment_date, "post_date_gmt" => $reply->comment_date_gmt, "access" => PeepSo::"ACCESS_PUBLIC"])bpeepso_notifications SET `not_read` = 1, `not_timestamp` = $reply WHERE `not_external_id` = %d) cannot be parsed correct.
SELECT * FROM $wpdbposts WHERE `post_type` = 'um_user_photos' order by ID asc limit $this_limit, %d
SELECT * FROM $wpdbposts WHERE `post_type` = 'um_user_photos' order by ID asc limit $this_limit, $this_per_page
SELECT * FROM $wpdbposts WHERE `post_type` = 'um_user_photos' order by ID asc limit $this_limit, $this_per_page
SQL command (SELECT * FROM $wpdbposts WHERE `post_type` = 'um_user_photos' order by ID asc limit $this_limit, $this_per_page) cannot be parsed correct.
SELECT * FROM $wpdbposts WHERE `post_type` = 'attachment' AND `post_parent` = $post order by ID asc
SELECT * FROM $wpdbposts WHERE `post_type` = 'attachment' AND `post_parent` = $post order by ID asc
SQL command (SELECT * FROM $wpdbposts WHERE `post_type` = 'attachment' AND `post_parent` = $post order by ID asc) cannot be parsed correct.
UPDATE $wpdbpeepso_photos SET `pho_owner_id` = $post WHERE `pho_post_id` = %d
UPDATE $wpdbpeepso_photos SET `pho_owner_id` = $post WHERE `pho_post_id` = $peepso_activity->add_post(intval($post->post_author), intval($post->post_author), "", ["post_date" => $post->post_date, "post_date_gmt" => $post->post_date_gmt, "act_access" => PeepSo::"ACCESS_PUBLIC", "module_id" => PeepSoSharePhotos::"MODULE_ID"])
UPDATE $wpdbpeepso_photos SET `pho_owner_id` = $post WHERE `pho_post_id` = $peepso_activity->add_post(intval($post->post_author), intval($post->post_author), "", ["post_date" => $post->post_date, "post_date_gmt" => $post->post_date_gmt, "act_access" => PeepSo::"ACCESS_PUBLIC", "module_id" => PeepSoSharePhotos::"MODULE_ID"])
SQL command (UPDATE $wpdbpeepso_photos SET `pho_owner_id` = $post WHERE `pho_post_id` = $peepso_activity->add_post(intval($post->post_author), intval($post->post_author), "", ["post_date" => $post->post_date, "post_date_gmt" => $post->post_date_gmt, "act_access" => PeepSo::"ACCESS_PUBLIC", "module_id" => PeepSoSharePhotos::"MODULE_ID"])) cannot be parsed correct.
SELECT * FROM $wpdbum_conversations ORDER BY conversation_id asc limit $this_limit, %d 
SELECT * FROM $wpdbum_conversations ORDER BY conversation_id asc limit $this_limit, $this_per_page 
SELECT * FROM $wpdbum_conversations ORDER BY conversation_id asc limit $this_limit, $this_per_page 
SQL command (SELECT * FROM $wpdbum_conversations ORDER BY conversation_id asc limit $this_limit, $this_per_page ) cannot be parsed correct.
SELECT * FROM $wpdbum_messages where `conversation_id`=intval($conversation->conversation_id) order by message_id asc
SELECT * FROM $wpdbum_messages where `conversation_id`=intval($conversation->conversation_id) order by message_id asc
SQL command (SELECT * FROM $wpdbum_messages where `conversation_id`=intval($conversation->conversation_id) order by message_id asc) cannot be parsed correct.
SELECT * FROM $wpdbusermeta WHERE meta_key = $fields_$i_metakey
SELECT * FROM $wpdbusermeta WHERE meta_key = $fields_$i_metakey
SQL command (SELECT * FROM $wpdbusermeta WHERE meta_key = $fields_$i_metakey) cannot be parsed correct.
update $wpdbposts set `post_content`='[peepso_activity]' where `post_type`='page' and `post_name`='activity'
SQL command (update $wpdbposts set `post_content`='[peepso_activity]' where `post_type`='page' and `post_name`='activity') cannot be parsed correct.
update $wpdbposts set `post_content`='[peepso_members]' where `post_type`='page' and `post_name`='members'
SQL command (update $wpdbposts set `post_content`='[peepso_members]' where `post_type`='page' and `post_name`='members') cannot be parsed correct.
update $wpdbposts set `post_content`='[peepso_profile]' where `post_type`='page' and `post_name`='profile'
SQL command (update $wpdbposts set `post_content`='[peepso_profile]' where `post_type`='page' and `post_name`='profile') cannot be parsed correct.
update $wpdbposts set `post_content`='[peepso_register]' where `post_type`='page' and `post_name`='register'
SQL command (update $wpdbposts set `post_content`='[peepso_register]' where `post_type`='page' and `post_name`='register') cannot be parsed correct.
update $wpdbposts set `post_content`='[peepso_recover]' where `post_type`='page' and `post_name`='password-recover'
SQL command (update $wpdbposts set `post_content`='[peepso_recover]' where `post_type`='page' and `post_name`='password-recover') cannot be parsed correct.
delete from $wpdboptions where `option_name` like '%peepso_migrate%'
SQL command (delete from $wpdboptions where `option_name` like '%peepso_migrate%') cannot be parsed correct.
delete from $wpdbpeepso_mail_queue
SQL command (delete from $wpdbpeepso_mail_queue) cannot be parsed correct.
SELECT `option_value` FROM $wpdboptions where `option_name`='active_plugins'
SQL command (SELECT `option_value` FROM $wpdboptions where `option_name`='active_plugins') cannot be parsed correct.
update $wpdboptions set `option_value`='serialize($option_value)' where `option_name`='active_plugins'
update $wpdboptions set `option_value`='serialize($option_value)' where `option_name`='active_plugins'
SQL command (update $wpdboptions set `option_value`='serialize($option_value)' where `option_name`='active_plugins') cannot be parsed correct.
delete from $wpdbpeepso_activities
SQL command (delete from $wpdbpeepso_activities) cannot be parsed correct.
delete from $wpdbpeepso_friends
SQL command (delete from $wpdbpeepso_friends) cannot be parsed correct.
delete from $wpdbpeepso_friend_requests
SQL command (delete from $wpdbpeepso_friend_requests) cannot be parsed correct.
delete from $wpdbpeepso_message_participants
SQL command (delete from $wpdbpeepso_message_participants) cannot be parsed correct.
delete from $wpdbpeepso_message_recipients
SQL command (delete from $wpdbpeepso_message_recipients) cannot be parsed correct.
delete from $wpdbpeepso_notifications
SQL command (delete from $wpdbpeepso_notifications) cannot be parsed correct.
delete from $wpdbpeepso_photos
SQL command (delete from $wpdbpeepso_photos) cannot be parsed correct.
delete from $wpdbpeepso_photos_album
SQL command (delete from $wpdbpeepso_photos_album) cannot be parsed correct.
delete from $wpdbpeepso_users
SQL command (delete from $wpdbpeepso_users) cannot be parsed correct.
delete from $wpdbposts where `post_type` like ('%peepso%')
SQL command (delete from $wpdbposts where `post_type` like ('%peepso%')) cannot be parsed correct.
delete from $wpdbpostmeta where `meta_key` like '%peepso%'
SQL command (delete from $wpdbpostmeta where `meta_key` like '%peepso%') cannot be parsed correct.
delete from $wpdbusermeta where `meta_key` like '%peepso%'
SQL command (delete from $wpdbusermeta where `meta_key` like '%peepso%') cannot be parsed correct.
SELECT count(*) as total FROM $wpdbusers
SQL command (SELECT count(*) as total FROM $wpdbusers) cannot be parsed correct.
SELECT count(*) as total FROM $wpdbum_friends
SQL command (SELECT count(*) as total FROM $wpdbum_friends) cannot be parsed correct.
SELECT count(*) as total FROM $wpdbum_followers
SQL command (SELECT count(*) as total FROM $wpdbum_followers) cannot be parsed correct.
SELECT count(*) as total FROM $wpdbposts where `post_type` = 'um_activity'
SQL command (SELECT count(*) as total FROM $wpdbposts where `post_type` = 'um_activity') cannot be parsed correct.
SELECT count(*) as total FROM $wpdbposts where `post_type` = 'um_user_photos'
SQL command (SELECT count(*) as total FROM $wpdbposts where `post_type` = 'um_user_photos') cannot be parsed correct.
SELECT count(*) as total FROM $wpdbum_conversations
SQL command (SELECT count(*) as total FROM $wpdbum_conversations) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [331, 648, 1439, 1530, 1570, 1679, 1744, 1853, 2246, 2502, 2528, 2575, 2780, 2828, 3021, 3168, 3378, 3611, 3752, 3808, 4962, 5245, 5263, 5281, 5299, 5317, 5335, 5353, 5407, 5535, 5563, 5589, 5607, 5633, 5651, 5669, 5687, 5705, 5723, 5741, 5759, 5777, 7354, 7388, 7422, 7456, 7490, 7524]
Added 0 SQL nodes. 0 out of 48 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:12.758650.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'json_encode(["url" => $next_url, "class" => "avatar", "counter" => count($all_users), "general" => 2])'' cannot be parsed correct.
HTML code '$'json_encode(["url" => $next_url, "class" => "profile", "counter" => count($all_users), "general" => 1])'' cannot be parsed correct.
HTML code '$'json_encode(["url" => $next_url, "class" => "friend", "counter" => $this->counter, "general" => 3])'' cannot be parsed correct.
HTML code '$'json_encode(["url" => $next_url, "class" => "follower", "counter" => $this->counter, "general" => 4])'' cannot be parsed correct.
HTML code '$'json_encode(["url" => $next_url, "class" => "activity", "counter" => $this->counter, "general" => 5])'' cannot be parsed correct.
HTML code '$'json_encode(["url" => $next_url, "class" => "photo", "counter" => $this->counter, "general" => 5])'' cannot be parsed correct.
HTML code '$'json_encode(["url" => $next_url, "class" => "message", "counter" => $this->counter, "general" => 6])'' cannot be parsed correct.
HTML code '$'json_encode(["url" => $next_url, "class" => "profile_field", "counter" => $this->counter, "general" => 8])'' cannot be parsed correct.
HTML code '$'json_encode(["finished" => 1, "counter" => $this->counter, "general" => 12])'' cannot be parsed correct.
HTML code '$'json_encode(["url" => $next_url, "class" => "profile_field", "counter" => 0, "general" => 7])'' cannot be parsed correct.
HTML code '$'json_encode(["url" => PeepSoUM->url("profile")])'' cannot be parsed correct.
HTML code '$'sprintf(__("The %s plugin requires the PeepSo plugin to be installed and activated.", "peepsoum"), self::"PLUGIN_NAME")'' cannot be parsed correct.
HTML code '$'sprintf(__("The %s plugin requires the Ultimate Member plugin to be installed and activated.", "peepsoum"), self::"PLUGIN_NAME")'' cannot be parsed correct.
HTML code '$'$icon_tick'' cannot be parsed correct.
HTML code '$'$icon_tick'' cannot be parsed correct.
HTML code '$'Requires <a href="https://www.peepso.com/downloads/friendso/" target="_blank">Friends Plugin</a>'' cannot be parsed correct.
HTML code '$'$icon_error'' cannot be parsed correct.
HTML code '$'Requires <a href="https://www.peepso.com/downloads/picso/" target="_blank">Photos Plugin</a>'' cannot be parsed correct.
HTML code '$'$icon_tick'' cannot be parsed correct.
HTML code '$'Requires <a href="https://www.peepso.com/downloads/msgso/" target="_blank">Chat Plugin</a>'' cannot be parsed correct.
HTML code '$'$icon_tick'' cannot be parsed correct.
HTML code '$'$icon_tick'' cannot be parsed correct.
HTML code '$'$icon_tick'' cannot be parsed correct.
HTML code '$'$icon_tick'' cannot be parsed correct.
HTML code '$'$field_key'' cannot be parsed correct.
HTML code '$'$field_key'' cannot be parsed correct.
HTML code '$'$field_key'' cannot be parsed correct.
HTML code '$'$value'' cannot be parsed correct.
HTML code '$'$field_key'' cannot be parsed correct.
HTML code '$'$value'' cannot be parsed correct.
HTML code '$'$field_key'' cannot be parsed correct.
HTML code '$'$value'' cannot be parsed correct.
HTML code '$'<option value="">Select Field ...</option>'' cannot be parsed correct.
HTML code '$'ob_get_clean()'' cannot be parsed correct.
HTML code '$'<option>Select Field ...</option>'' cannot be parsed correct.
HTML code '$'$icon_tick'' cannot be parsed correct.
HTML code '$'get_admin_url()'' cannot be parsed correct.
HTML code '$'get_site_url()/activity'' cannot be parsed correct.
HTML code '$'12'' cannot be parsed correct.
HTML code '$'$next_url'' cannot be parsed correct.
HTML code '$'$class'' cannot be parsed correct.
HTML code '$'$total'' cannot be parsed correct.
HTML code '$'$label'' cannot be parsed correct.
HTML code '$'</b> <span style="font-size:14px;">'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:04.740230.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.045858.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 4 do_action/apply_filters calls and 14 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.730045.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbaseDetector
### Start running FrontBaseDetector
### Finish running FileProDetector
### Start running HashDetector
### Finish running DbplusDetector
### Start running IBMDb2Detector
### Finish running FirebirdInterBaseDetector
### Start running InformixDetector
### Finish running CubridDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running Oci8Detector
### Start running OpenSSLDetector
### Finish running MongoDbDetector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running ArrayElementDetector
### Start running PhpCurlDetector
### Finish running PasswordHashingDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PhpCurlDetector
### Start running PHPRetrievalDetector
### Finish running HashDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running OpenSSLDetector
### Start running PhpVarDetector
### Finish running PHPRetrievalDetector
### Start running PostgreSQLDetector
### Finish running PHPStorageDetector
### Start running PropertyDetector
### Finish running PhpVarDetector
### Start running Sqlite3Detector
### Finish running PostgreSQLDetector
### Start running SqliteDetector
### Finish running PHPIncludedDetector
### Start running SqlServerDetector
### Finish running SqliteDetector
### Start running SybaseDetector
### Finish running SybaseDetector
### Start running TokyoTyrantDetector
### Finish running Sqlite3Detector
### Start running UserInputDetector
### Finish running PropertyDetector
### Start running VariableDetector
### Finish running TokyoTyrantDetector
### Start running WordpressHashingFnDetector
### Finish running maxdbDetector
### Start running WordPressRemoteDetector
### Finish running MySQLiDetector
### Start running WordPressRetrievalDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressStorageDetector
### Finish running SqlServerDetector
### Start running WP_UserDetector
### Finish running WordPressRemoteDetector
### Start running GenericDatabaseUsageDetector
### Finish running WP_UserDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running VariableDetector
### Start running UninstallDetector
### Finish running GenericDatabaseUsageDetector
### Finish running UserInputDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running WordPressRetrievalDetector
### Finish running WordPressStorageDetector
### Finished running detectors
classes/migrate.php:388
  - MD5 called with parameters [photo, time]. Ignore if [photo, time] does not contain personal information.
classes/migrate.php:531
  - MD5 called with parameters [time, filename]. Ignore if [time, filename] does not contain personal information. 

classes/migrate.php:1006
  - object property '$wp_user->user_nicename' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta 

classes/migrate.php:115
  - variable '$user_birthdate' of personal types {'birth'} is found.
  - Data types: birth
classes/migrate.php:116
  - variable '$user_birthdate' of personal types {'birth'} is found.
  - Data types: birth
classes/migrate.php:117
  - variable '$user_birthdate' of personal types {'birth'} is found.
  - Data types: birth 

classes/migrate.php:32
  - RETRIEVAL call to get_transient("peepso_migrate_gender_field") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
classes/migrate.php:33
  - RETRIEVAL call to get_transient("peepso_migrate_gender_field_male") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
classes/migrate.php:34
  - RETRIEVAL call to get_transient("peepso_migrate_gender_field_female") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
classes/migrate.php:35
  - RETRIEVAL call to get_transient("peepso_migrate_birthdate_field") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
classes/migrate.php:84
  - RETRIEVAL call to get_user_meta($user->ID, $gender_field, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
classes/migrate.php:97
  - RETRIEVAL call to get_transient("peepso_migrate_gender_field_custom" . $i) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
classes/migrate.php:115
  - RETRIEVAL call to get_user_meta($user->ID, $birthdate_field, true) alters data types {'birth', 'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: birth, user_meta
classes/migrate.php:190
  - RETRIEVAL call to get_user_meta($user->ID, "profile_photo", TRUE) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
classes/migrate.php:191
  - RETRIEVAL call to get_user_meta($user->ID, "cover_photo", TRUE) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
classes/migrate.php:342
  - RETRIEVAL call to get_post_meta($post->ID, "_photo", TRUE) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
classes/migrate.php:359
  - RETRIEVAL call to get_post_meta($post->ID, "_wall_id", TRUE) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
classes/migrate.php:374
  - RETRIEVAL call to get_post_meta($post->ID, "_liked", TRUE) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
classes/migrate.php:430
  - RETRIEVAL call to get_comment_meta($comment->comment_ID, "_liked", TRUE) alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: comment_meta
classes/migrate.php:458
  - RETRIEVAL call to get_comment_meta($comment->comment_ID, "_liked", TRUE) alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: comment_meta
classes/migrate.php:635
  - RETRIEVAL call to get_transient("peepso_migrate_gender_field") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
classes/migrate.php:636
  - RETRIEVAL call to get_transient("peepso_migrate_birthdate_field") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
classes/migrate.php:652
  - RETRIEVAL call to get_posts(["name" => $value["metakey"] == "gender""gender""birthdate", "post_type" => "peepso_user_field"]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
classes/migrate.php:722
  - RETRIEVAL call to get_transient("peepso_migrate_gender_field_data") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
classes/migrate.php:723
  - RETRIEVAL call to get_transient("peepso_migrate_gender_field_male") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
classes/migrate.php:724
  - RETRIEVAL call to get_transient("peepso_migrate_gender_field_female") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
classes/migrate.php:812
  - RETRIEVAL call to get_transient("peepso_migrate_new_fields") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
classes/migrate.php:822
  - RETRIEVAL call to get_transient("peepso_migrate_field_" . $post_id) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
classes/migrate.php:1004
  - RETRIEVAL call to get_user_by("slug", $user_slug) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user_meta, user
classes/migrate.php:1027
  - RETRIEVAL call to get_user_by("slug", $user_slug) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user_meta, user
peepsomigrate.php:376
  - RETRIEVAL call to get_option("um_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
peepsomigrate.php:377
  - RETRIEVAL call to get_post($um_options["core_user"]) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: wp_post, post_meta, post
peepsomigrate.php:383
  - RETRIEVAL call to get_post_meta($post_id, "_um_custom_fields", TRUE) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta 

classes/migrate.php:44
  - STORAGE call to set_transient("peepso_migrate_gender_field_data", $field) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed). Returns (bool).
  - Data types: site
classes/migrate.php:107
  - STORAGE call to update_user_meta($user->ID, "peepso_user_field_gender", $gender) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
classes/migrate.php:108
  - STORAGE call to update_user_meta($user->ID, "peepso_user_field_gender_acc", $gender_field_visibility) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
classes/migrate.php:117
  - STORAGE call to update_user_meta($user->ID, "peepso_user_field_birthdate", $user_birthdate) alters data types {'birth', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: birth, user_meta
classes/migrate.php:118
  - STORAGE call to update_user_meta($user->ID, "peepso_user_field_birthdate_acc", $birthdate_field_visibility) alters data types {'birth', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: birth, user_meta
classes/migrate.php:230
  - STORAGE call to add_post_meta($post_id, PeepSoSharePhotos::"POST_META_KEY_PHOTO_TYPE", $post_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).
  - Data types: post_meta
classes/migrate.php:517
  - STORAGE call to add_post_meta($post_id, PeepSoSharePhotos::"POST_META_KEY_PHOTO_TYPE", PeepSoSharePhotos::"POST_META_KEY_PHOTO_TYPE_ALBUM", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).
  - Data types: post_meta
classes/migrate.php:525
  - STORAGE call to add_post_meta($post_id, PeepSoSharePhotos::"POST_META_KEY_PHOTO_COUNT", count($photos), true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).
  - Data types: post_meta
classes/migrate.php:598
  - STORAGE call to wp_update_post(["ID" => $message_id, "post_date" => $message->time, "post_date_gmt" => $message->time]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
classes/migrate.php:673
  - STORAGE call to wp_insert_post($aPostData). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
classes/migrate.php:675
  - STORAGE call to wp_update_post(["ID" => $post_id, "post_name" => $post_id]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
classes/migrate.php:690
  - STORAGE call to update_post_meta($post_id, $meta_key, $meta_val) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
classes/migrate.php:743
  - STORAGE call to set_transient("peepso_migrate_field_" . $post_id, $select_options) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed). Returns (bool).
  - Data types: site
classes/migrate.php:782
  - STORAGE call to update_post_meta($post_id, $meta_key, $meta_val) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
classes/migrate.php:791
  - STORAGE call to set_transient("peepso_migrate_new_fields", $new_fields) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed). Returns (bool).
  - Data types: site
classes/migrate.php:858
  - STORAGE call to update_user_meta($user_value->user_id, "peepso_user_field_gender", $selected_user_options) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
classes/migrate.php:860
  - STORAGE call to update_user_meta($user_value->user_id, "peepso_user_field_" . $post_id, $selected_user_options) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
peepsomigrate.php:205
  - STORAGE call to delete_transient("peepso_migrate_gender_field") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).
  - Data types: site
peepsomigrate.php:206
  - STORAGE call to delete_transient("peepso_migrate_gender_field_male") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).
  - Data types: site
peepsomigrate.php:207
  - STORAGE call to delete_transient("peepso_migrate_gender_field_female") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).
  - Data types: site
peepsomigrate.php:209
  - STORAGE call to set_transient("peepso_migrate_gender_field", $gender_field) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed). Returns (bool).
  - Data types: site
peepsomigrate.php:215
  - STORAGE call to set_transient("peepso_migrate_gender_field_male", sanitize_text_field($_POST["gender_field_male_" . $gender_field])) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed). Returns (bool).
  - Data types: site
peepsomigrate.php:216
  - STORAGE call to set_transient("peepso_migrate_gender_field_female", sanitize_text_field($_POST["gender_field_female_" . $gender_field])) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed). Returns (bool).
  - Data types: site
peepsomigrate.php:226
  - STORAGE call to delete_transient("peepso_migrate_gender_field_custom" . $i + 2) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).
  - Data types: site
peepsomigrate.php:228
  - STORAGE call to set_transient("peepso_migrate_gender_field_custom" . $i + 2, sanitize_text_field($_POST["gender_field_custom" . $i + 2 . "_" . $gender_field])) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed). Returns (bool).
  - Data types: site
peepsomigrate.php:238
  - STORAGE call to delete_transient("peepso_migrate_birthdate_field") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).
  - Data types: site
peepsomigrate.php:239
  - STORAGE call to set_transient("peepso_migrate_birthdate_field", sanitize_text_field($_POST["birthdate_field"])) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed). Returns (bool).
  - Data types: site 

By data type:
birth
	WordPressStorageDetector.update_user_meta($user->ID, "peepso_user_field_birthdate_acc", $birthdate_field_visibility) - {'birth', 'user_meta'}
	VariableDetector.(unknown) - {'birth'}
	WordPressRetrievalDetector.get_user_meta($user->ID, $birthdate_field, true) - {'birth', 'user_meta'}
	VariableDetector.(unknown) - {'birth'}
	VariableDetector.(unknown) - {'birth'}
	WordPressStorageDetector.update_user_meta($user->ID, "peepso_user_field_birthdate", $user_birthdate) - {'birth', 'user_meta'}
comment_meta
	WordPressRetrievalDetector.get_comment_meta($comment->comment_ID, "_liked", TRUE) - {'comment_meta'}
	WordPressRetrievalDetector.get_comment_meta($comment->comment_ID, "_liked", TRUE) - {'comment_meta'}
none
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	WordPressRetrievalDetector.get_posts(["name" => $value["metakey"] == "gender""gender""birthdate", "post_type" => "peepso_user_field"]) - set()
	WordPressStorageDetector.wp_update_post(["ID" => $post_id, "post_name" => $post_id]) - set()
	WordPressStorageDetector.wp_update_post(["ID" => $message_id, "post_date" => $message->time, "post_date_gmt" => $message->time]) - set()
	WordPressStorageDetector.wp_insert_post($aPostData) - set()
option
	WordPressRetrievalDetector.get_option("um_options") - {'option'}
post
	WordPressRetrievalDetector.get_post($um_options["core_user"]) - {'wp_post', 'post_meta', 'post'}
post_meta
	WordPressStorageDetector.add_post_meta($post_id, PeepSoSharePhotos::"POST_META_KEY_PHOTO_TYPE", PeepSoSharePhotos::"POST_META_KEY_PHOTO_TYPE_ALBUM", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, $meta_key, $meta_val) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "_um_custom_fields", TRUE) - {'post_meta'}
	WordPressStorageDetector.add_post_meta($post_id, PeepSoSharePhotos::"POST_META_KEY_PHOTO_TYPE", $post_meta, true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, $meta_key, $meta_val) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "_liked", TRUE) - {'post_meta'}
	WordPressStorageDetector.add_post_meta($post_id, PeepSoSharePhotos::"POST_META_KEY_PHOTO_COUNT", count($photos), true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "_photo", TRUE) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "_wall_id", TRUE) - {'post_meta'}
	WordPressRetrievalDetector.get_post($um_options["core_user"]) - {'wp_post', 'post_meta', 'post'}
site
	WordPressRetrievalDetector.get_transient("peepso_migrate_new_fields") - {'site'}
	WordPressRetrievalDetector.get_transient("peepso_migrate_gender_field_data") - {'site'}
	WordPressStorageDetector.delete_transient("peepso_migrate_gender_field_male") - {'site'}
	WordPressRetrievalDetector.get_transient("peepso_migrate_gender_field_female") - {'site'}
	WordPressStorageDetector.delete_transient("peepso_migrate_gender_field_female") - {'site'}
	WordPressStorageDetector.set_transient("peepso_migrate_gender_field_data", $field) - {'site'}
	WordPressRetrievalDetector.get_transient("peepso_migrate_gender_field") - {'site'}
	WordPressRetrievalDetector.get_transient("peepso_migrate_gender_field") - {'site'}
	WordPressRetrievalDetector.get_transient("peepso_migrate_field_" . $post_id) - {'site'}
	WordPressStorageDetector.set_transient("peepso_migrate_new_fields", $new_fields) - {'site'}
	WordPressStorageDetector.delete_transient("peepso_migrate_gender_field_custom" . $i + 2) - {'site'}
	WordPressStorageDetector.delete_transient("peepso_migrate_birthdate_field") - {'site'}
	WordPressRetrievalDetector.get_transient("peepso_migrate_gender_field_custom" . $i) - {'site'}
	WordPressRetrievalDetector.get_transient("peepso_migrate_birthdate_field") - {'site'}
	WordPressStorageDetector.set_transient("peepso_migrate_gender_field", $gender_field) - {'site'}
	WordPressStorageDetector.delete_transient("peepso_migrate_gender_field") - {'site'}
	WordPressStorageDetector.set_transient("peepso_migrate_gender_field_female", sanitize_text_field($_POST["gender_field_female_" . $gender_field])) - {'site'}
	WordPressStorageDetector.set_transient("peepso_migrate_birthdate_field", sanitize_text_field($_POST["birthdate_field"])) - {'site'}
	WordPressStorageDetector.set_transient("peepso_migrate_field_" . $post_id, $select_options) - {'site'}
	WordPressStorageDetector.set_transient("peepso_migrate_gender_field_male", sanitize_text_field($_POST["gender_field_male_" . $gender_field])) - {'site'}
	WordPressRetrievalDetector.get_transient("peepso_migrate_birthdate_field") - {'site'}
	WordPressRetrievalDetector.get_transient("peepso_migrate_gender_field_female") - {'site'}
	WordPressRetrievalDetector.get_transient("peepso_migrate_gender_field_male") - {'site'}
	WordPressRetrievalDetector.get_transient("peepso_migrate_gender_field_male") - {'site'}
	WordPressStorageDetector.set_transient("peepso_migrate_gender_field_custom" . $i + 2, sanitize_text_field($_POST["gender_field_custom" . $i + 2 . "_" . $gender_field])) - {'site'}
user
	WordPressRetrievalDetector.get_user_by("slug", $user_slug) - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("slug", $user_slug) - {'user_meta', 'user'}
user_meta
	WordPressRetrievalDetector.get_user_meta($user->ID, $gender_field, true) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user->ID, "peepso_user_field_birthdate_acc", $birthdate_field_visibility) - {'birth', 'user_meta'}
	WordPressStorageDetector.update_user_meta($user->ID, "peepso_user_field_gender_acc", $gender_field_visibility) - {'user_meta'}
	WordPressRetrievalDetector.get_user_by("slug", $user_slug) - {'user_meta', 'user'}
	WordPressStorageDetector.update_user_meta($user_value->user_id, "peepso_user_field_" . $post_id, $selected_user_options) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user->ID, $birthdate_field, true) - {'birth', 'user_meta'}
	WordPressStorageDetector.update_user_meta($user->ID, "peepso_user_field_gender", $gender) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user->ID, "cover_photo", TRUE) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user->ID, "profile_photo", TRUE) - {'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta'}
	WordPressStorageDetector.update_user_meta($user_value->user_id, "peepso_user_field_gender", $selected_user_options) - {'user_meta'}
	WordPressRetrievalDetector.get_user_by("slug", $user_slug) - {'user_meta', 'user'}
	WordPressStorageDetector.update_user_meta($user->ID, "peepso_user_field_birthdate", $user_birthdate) - {'birth', 'user_meta'}
wp_post
	WordPressRetrievalDetector.get_post($um_options["core_user"]) - {'wp_post', 'post_meta', 'post'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:12.316755.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 217 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.357014.

217 STORE_REACHES edges created
217 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 129 nodes as PERSONAL
In total, tainted 129 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 2 nodes as ENCRYPTED
In total, tainted 2 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:03.195334.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:01:08.575927!
MD5 called with parameters [photo, time]. Ignore if [photo, time] does not contain personal information.,md5,None
MD5 called with parameters [time, filename]. Ignore if [time, filename] does not contain personal information.,md5,None
object property '$wp_user->user_nicename' of personal types {'user', 'user_meta'} is found.,,None
variable '$user_birthdate' of personal types {'birth'} is found.,,None
variable '$user_birthdate' of personal types {'birth'} is found.,,None
variable '$user_birthdate' of personal types {'birth'} is found.,,None
RETRIEVAL call to get_user_by("slug", $user_slug) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_by("slug", $user_slug) alters data types {'user_meta', 'user'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_meta($user->ID, $birthdate_field, true) alters data types {'birth', 'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user->ID, "profile_photo", TRUE) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user->ID, "cover_photo", TRUE) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_transient("peepso_migrate_gender_field") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_transient("peepso_migrate_gender_field_male") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_transient("peepso_migrate_gender_field_female") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "_photo", TRUE) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_transient("peepso_migrate_birthdate_field") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "_wall_id", TRUE) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "_liked", TRUE) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_comment_meta($comment->comment_ID, "_liked", TRUE) alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_comment_meta($comment->comment_ID, "_liked", TRUE) alters data types {'comment_meta'}. Passed arguments: 0: $comment_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_transient("peepso_migrate_gender_field") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_transient("peepso_migrate_birthdate_field") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_posts(["name" => $value["metakey"] == "gender""gender""birthdate", "post_type" => "peepso_user_field"]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_transient("peepso_migrate_gender_field_data") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_transient("peepso_migrate_gender_field_male") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_transient("peepso_migrate_gender_field_female") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_transient("peepso_migrate_new_fields") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_transient("peepso_migrate_field_" . $post_id) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user->ID, $gender_field, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_transient("peepso_migrate_gender_field_custom" . $i) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("um_options") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($um_options["core_user"]) alters data types {'wp_post', 'post_meta', 'post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($post_id, "_um_custom_fields", TRUE) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
STORAGE call to update_user_meta($user->ID, "peepso_user_field_gender", $gender) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user->ID, "peepso_user_field_gender_acc", $gender_field_visibility) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user->ID, "peepso_user_field_birthdate", $user_birthdate) alters data types {'birth', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user->ID, "peepso_user_field_birthdate_acc", $birthdate_field_visibility) alters data types {'birth', 'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to add_post_meta($post_id, PeepSoSharePhotos::"POST_META_KEY_PHOTO_TYPE", $post_meta, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).,None,None
STORAGE call to set_transient("peepso_migrate_gender_field_data", $field) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_post_meta($post_id, PeepSoSharePhotos::"POST_META_KEY_PHOTO_TYPE", PeepSoSharePhotos::"POST_META_KEY_PHOTO_TYPE_ALBUM", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).,None,None
STORAGE call to add_post_meta($post_id, PeepSoSharePhotos::"POST_META_KEY_PHOTO_COUNT", count($photos), true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed), 3: $unique (bool). Returns (int|false).,None,None
STORAGE call to wp_update_post(["ID" => $message_id, "post_date" => $message->time, "post_date_gmt" => $message->time]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to wp_insert_post($aPostData). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to wp_update_post(["ID" => $post_id, "post_name" => $post_id]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($post_id, $meta_key, $meta_val) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to set_transient("peepso_migrate_field_" . $post_id, $select_options) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, $meta_key, $meta_val) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to set_transient("peepso_migrate_new_fields", $new_fields) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_user_meta($user_value->user_id, "peepso_user_field_gender", $selected_user_options) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user_value->user_id, "peepso_user_field_" . $post_id, $selected_user_options) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_transient("peepso_migrate_gender_field") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).,None,None
STORAGE call to delete_transient("peepso_migrate_gender_field_male") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).,None,None
STORAGE call to delete_transient("peepso_migrate_gender_field_female") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).,None,None
STORAGE call to set_transient("peepso_migrate_gender_field", $gender_field) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to set_transient("peepso_migrate_gender_field_male", sanitize_text_field($_POST["gender_field_male_" . $gender_field])) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to set_transient("peepso_migrate_gender_field_female", sanitize_text_field($_POST["gender_field_female_" . $gender_field])) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_transient("peepso_migrate_gender_field_custom" . $i + 2) alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).,None,None
STORAGE call to set_transient("peepso_migrate_gender_field_custom" . $i + 2, sanitize_text_field($_POST["gender_field_custom" . $i + 2 . "_" . $gender_field])) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_transient("peepso_migrate_birthdate_field") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).,None,None
STORAGE call to set_transient("peepso_migrate_birthdate_field", sanitize_text_field($_POST["birthdate_field"])) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] PII of types (['birth', 'user_meta', 'user']) stored through WordPress function "update_user_meta($user->ID, "peepso_user_field_birthdate_acc", $birthdate_field_visibility)", found in file classes/migrate.php at line 118. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user->ID, "peepso_user_field_gender_acc", $gender_field_visibility)", found in file classes/migrate.php at line 108. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user_value->user_id, "peepso_user_field_" . $post_id, $selected_user_options)", found in file classes/migrate.php at line 860. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user->ID, "peepso_user_field_gender", $gender)", found in file classes/migrate.php at line 107. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "update_user_meta($user_value->user_id, "peepso_user_field_gender", $selected_user_options)", found in file classes/migrate.php at line 858. 

[has_storage] PII of types (['birth', 'user_meta']) stored through WordPress function "update_user_meta($user->ID, "peepso_user_field_birthdate", $user_birthdate)", found in file classes/migrate.php at line 117. 

[has_storage] Storage check is WP 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user->ID, "peepso_user_field_birthdate_acc", $birthdate_field_visibility) does not have corresponding deletion method. Storage method found in file classes/migrate.php at line 118. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user->ID, "peepso_user_field_gender_acc", $gender_field_visibility) does not have corresponding deletion method. Storage method found in file classes/migrate.php at line 108. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_value->user_id, "peepso_user_field_" . $post_id, $selected_user_options) does not have corresponding deletion method. Storage method found in file classes/migrate.php at line 860. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user->ID, "peepso_user_field_gender", $gender) does not have corresponding deletion method. Storage method found in file classes/migrate.php at line 107. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user_value->user_id, "peepso_user_field_gender", $selected_user_options) does not have corresponding deletion method. Storage method found in file classes/migrate.php at line 858. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user->ID, "peepso_user_field_birthdate", $user_birthdate) does not have corresponding deletion method. Storage method found in file classes/migrate.php at line 117. 

[Art.17, Right to erasure] Deletion access is NONE 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 576. Found in file classes/migrate.php at line 118 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 497. Found in file classes/migrate.php at line 108 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 5167. Found in file classes/migrate.php at line 860 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 486. Found in file classes/migrate.php at line 107 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 5153. Found in file classes/migrate.php at line 858 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 565. Found in file classes/migrate.php at line 117 

[Art.15, Right to access] Data access is NONE_BUT_NOT_REQUIRED 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['access', 'deletion', 'encryption', 'third_party'] 

[main] Is deletion in violation? True 

[main] Is access in violation? False 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? False 


###########
### Q&A ###
###########

1. Why is my plugin in violation against GDPR?

GDPR (https://gdpr-info.eu/) aims to give citizens in the European Union (EU) control over their personal data. If a website collects or store user data, it is required to provide users functionalities to control their data, such as ones to erase or export their data. While a plugin do not directly interact with users, it may provide functionalities that collect or store personal data, which would make websites that deploy the plugin in violation against GDPR if the plugin does not provide corresponding functionalities to allow users control their personal data. Therefore, plugin developers are responsible to provide functions to manage the personal data they handle in accordance with GDPR. We list requirements by specific GDPR articles relevant to your plugin below.


[Art. 13, Information to be provided where personal data are collected from the data subject] If a plugin collects or handles personal data, it needs to provide privacy policy texts that explain what personal data is being collected and for what purpose. The texts are meant to be added to the privacy policy of the websites that deploy the plugin. 


            
[Art.17, Right to erasure] If a plugin stores personal data in a custom database they create or manage, or through Wordpress's native storage functions (e.g., update_user_meta), it needs to provide methods for users to erase the data upon request. Note that deleting data for all users upon uninstallation does not satisfy the requirement. 


            
        

2. How do I make my plugin compliant?

Please refer to the fix report below to see how you can make your plugin comply with GDPR.

        

##################
### Fix Report ###
##################

############################
# Data Deletion Fix Report #
############################

This report suggests fixes to comply with the GDPR Art. 17, Right to erasure (https://gdpr-info.eu/art-17-gdpr/). The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/adding-the-personal-data-eraser-to-your-plugin/ for more details.

1) Implement a function that deletes all the user data collected in the plugin. Sample code:


/**
* Removes all collected data of a user.
*
* @param string $email_address   email address to manipulate
* @param int    $page            pagination
*
* @return array
*/
function peepso-tools-ultimate-member-migrator_remove_data( $email_address, $page = 1 ) {
    
    $page = (int) $page;


    //TODO: Delete the user data that was stored using Wordpress functions

    //Below is the sample code for deleting user meta and may need to be modified to suit the plugin.
    $user_id = get_user_by('email', $email_address)
    $key = 'email' //Sample user meta key
    if ( $customer->user_id > 0 ) {
        //Delete user meta data by $key
        delete_user_meta( $user_id, $key );
    }
        



    // Tell core if we have more data to delete still
    $done = true;
    return array(
        'items_removed'  => $items_removed, // true if collected data of a user is being deleted
        'items_retained' => $items_retained, // true if certain data needs to be retained
        'messages'       => sprintf( __( 'Data of user with email %s successfully deleted.', 'peepso-tools-ultimate-member-migrator' ), $email_address ), // Put messages for data removal
        'done'           => $done, // true if all the removal processes are done (all data of the user is removed)
    );
}
        

2) Hook the deletion function to the Wordpress's Personal Data Removal tool


/**
* Registers all data erasers.
*
* @param array $exporters
*
* @return mixed
*/
function peepso-tools-ultimate-member-migrator_register_privacy_erasers( $erasers ) {
    $erasers['my-plugin-slug'] = array(
        'eraser_friendly_name' => __( '<eraser name>', 'peepso-tools-ultimate-member-migrator' ),
        'callback'             => 'peepso-tools-ultimate-member-migrator_remove_data',
    );
    return $erasers;
}
        

add_filter( 'wp_privacy_personal_data_erasers', 'peepso-tools-ultimate-member-migrator_register_privacy_erasers' );
        

        

#############################
# Privacy Policy Fix Report #
#############################

This report suggests fixes to comply with the GDPR Art. 13 (https://gdpr-info.eu/art-13-gdpr/) through including a privacy notice. The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/suggesting-text-for-the-site-privacy-policy/ for more details.

1) Implement a function that includes the privacy policy for the plugin and provide it to wordpress through wp_add_privacy_policy_content(). Sample code:


/**
* Adds a privacy policy statement.
*/
function peepso-tools-ultimate-member-migrator_add_privacy_policy_content() {
    if ( ! function_exists( 'wp_add_privacy_policy_content' ) ) {
        return;
    }
    //TODO: modify the content below to include the privacy policy for the plugin.
    $content = '<p class="privacy-policy-tutorial">' . __( 'Some introductory content for the suggested text.', 'peepso-tools-ultimate-member-migrator' ) . '</p>'
            . '<strong class="privacy-policy-tutorial">' . __( 'Suggested Text:', 'peepso-tools-ultimate-member-migrator' ) . '</strong> '
            . sprintf(
                __( 'When you leave a comment on this site, we send your name, email address, IP address and comment text to example.com. Example.com does not retain your personal data. The example.com privacy policy is <a href="%1$s" target="_blank">here</a>.', 'peepso-tools-ultimate-member-migrator' ),
                'https://example.com/privacy-policy'
            );
    wp_add_privacy_policy_content( 'peepso-tools-ultimate-member-migrator', wp_kses_post( wpautop( $content, false ) ) );
}
        

2) Hook the privacy policy function to the Wordpress's admin initialization action.


add_action( 'admin_init', 'peepso-tools-ultimate-member-migrator_add_privacy_policy_content' );
        

        


Disclaimer: The sample code provided above is only for reference and does not guarantee GDPR compliance. The recommended list of data to delete/export may not be comprehensive. 
        
Done.
