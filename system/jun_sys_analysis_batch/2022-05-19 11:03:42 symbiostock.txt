Timeout in resolving values
Timeout in running neo4j query
Running Main.py on symbiostock

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.307831.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:00.863883.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 0 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.176351.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 0 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.355847.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 454 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:00.833993.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 1 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.763079.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
Added 2 PHP_REACHES edges.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.100533.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 130 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:02.207548.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 2725
Added 2138 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 2725
Added 0 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.363690.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/symbiostock/admin-global.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/symbiostock/admin-upload.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/symbiostock/front-ping.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/symbiostock/ss-env-check.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/symbiostock/symbiostock-init.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/symbiostock/symbiostock.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/symbiostock/tools-imagemanipulation.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.865935.

1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
2725 PHP_REACHES edges created
2725 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 1035 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.210790.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:01.464086.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 41 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:02.406179.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 36 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.184176.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.180719.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.523062.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.019077.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.032311.

77 PHP_REACHES edges created
77 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 83 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.133977.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
No SQL nodes to process.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:00.123313.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'<p>$result->get_error_message()</p>'' cannot be parsed correct.
HTML code '$'<p>$result->get_error_message()</p>'' cannot be parsed correct.
HTML code '$'<p>Activating plugin...</p>'' cannot be parsed correct.
HTML code '$'<p>Plugin activated successfully.</p>'' cannot be parsed correct.
HTML code '$'<p>Activating plugin...</p>'' cannot be parsed correct.
HTML code '$'<p>Plugin activated successfully.</p>'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:01.390609.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.053906.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 15 do_action/apply_filters calls and 12 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.971431.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running CubridDetector
### Start running FrontBaseDetector
### Finish running DbplusDetector
### Start running HashDetector
### Finish running DbaseDetector
### Start running IBMDb2Detector
### Finish running FirebirdInterBaseDetector
### Start running InformixDetector
### Finish running FileProDetector
### Start running IngresDetector
### Finish running InformixDetector
### Start running maxdbDetector
### Finish running FrontBaseDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running IBMDb2Detector
### Start running MsqlDetector
### Finish running MongoDetector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running MongoDbDetector
### Start running OpenSSLDetector
### Finish running Oci8Detector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running HashDetector
### Start running PhpCurlDetector
### Finish running PasswordHashingDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running ArrayElementDetector
### Start running PHPRetrievalDetector
### Finish running OpenSSLDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PhpCurlDetector
### Start running PhpVarDetector
### Finish running PhpVarDetector
### Start running PostgreSQLDetector
### Finish running PHPIncludedDetector
### Start running PropertyDetector
### Finish running PostgreSQLDetector
### Start running Sqlite3Detector
### Finish running PHPRetrievalDetector
### Start running SqliteDetector
### Finish running SqliteDetector
### Start running SqlServerDetector
### Finish running Sqlite3Detector
### Start running SybaseDetector
### Finish running PropertyDetector
### Start running TokyoTyrantDetector
### Finish running SybaseDetector
### Start running UserInputDetector
### Finish running SqlServerDetector
### Start running VariableDetector
### Finish running TokyoTyrantDetector
### Start running WordpressHashingFnDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRemoteDetector
### Finish running WordPressRemoteDetector
### Start running WordPressRetrievalDetector
### Finish running MySQLiDetector
### Start running WordPressStorageDetector
### Finish running maxdbDetector
### Start running WP_UserDetector
### Finish running PHPStorageDetector
### Start running GenericDatabaseUsageDetector
### Finish running VariableDetector
### Start running GenericEncryptionDetector
### Finish running WP_UserDetector
### Start running DeletionDetector
### Finish running GenericEncryptionDetector
### Start running UninstallDetector
### Finish running UserInputDetector
### Finish running GenericDatabaseUsageDetector
### Finish running DeletionDetector
### Finish running UninstallDetector
### Finish running WordPressRetrievalDetector
### Finish running WordPressStorageDetector
### Finished running detectors
symbiostock.php:34
  - Request variable '$_GET["email"]' of personal types {'email'} is found.
  - Data types: email 

admin-upload.php:99
  - MD5 called with parameters [time]. Ignore if [time] does not contain personal information.
admin-upload.php:101
  - MD5 called with parameters [url]. Ignore if [url] does not contain personal information. 

symbiostock-init.php:27
  - STORAGE call to fwrite($fp, "deny from all
AllowOverride None").
  - Data types: file
symbiostock-init.php:38
  - STORAGE call to fwrite($fp, "deny from all
AllowOverride None").
  - Data types: file 

front-ping.php:5
  - RETRIEVAL call to get_option("ss_pingback") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ss-env-check.php:30
  - RETRIEVAL call to get_option("ss_ignoresspro") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ss-env-check.php:41
  - RETRIEVAL call to get_option("ss_ignorewrongwoo") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ss-env-check.php:48
  - RETRIEVAL call to get_option("ss_ignoreimagick") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ss-env-check.php:54
  - RETRIEVAL call to get_option("ss_ignorephpver") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ss-env-check.php:60
  - RETRIEVAL call to get_option("ss_l_ignorequickguide") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ss-env-check.php:65
  - RETRIEVAL call to get_option("ss_ignorequickguide") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ss-env-check.php:70
  - RETRIEVAL call to get_option("ss_sz_ppass") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ss-env-check.php:70
  - RETRIEVAL call to get_option("ss_sz_active") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ss-env-check.php:94
  - RETRIEVAL call to get_option("ss_errs") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
symbiostock-init.php:55
  - RETRIEVAL call to get_option("ss_init_base_settings_done_lite") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
symbiostock-init.php:56
  - RETRIEVAL call to get_option("ss_init_base_settings_done") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
symbiostock-init.php:58
  - RETRIEVAL call to get_option("woocommerce_email_from_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
symbiostock.php:31
  - RETRIEVAL call to get_option("_cron_code") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
symbiostock.php:31
  - RETRIEVAL call to get_option("_cron_code") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
symbiostock.php:92
  - RETRIEVAL call to get_option("_cron_code") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
symbiostock.php:92
  - RETRIEVAL call to get_option("_cron_code") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
tools-imagemanipulation.php:7
  - RETRIEVAL call to get_option("shop_single_image_size") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
tools-imagemanipulation.php:142
  - RETRIEVAL call to get_post_meta($postid, "ss_media_filename", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta 

admin-upload.php:75
  - STORAGE call to wp_insert_post($post). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
admin-upload.php:85
  - STORAGE call to update_post_meta($post_id, "ss_media_filename", $finalfilename) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin-upload.php:88
  - STORAGE call to update_post_meta($post_id, "_visibility", "visible") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin-upload.php:89
  - STORAGE call to update_post_meta($post_id, "total_sales", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin-upload.php:90
  - STORAGE call to update_post_meta($post_id, "_downloadable", "yes") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin-upload.php:91
  - STORAGE call to update_post_meta($post_id, "_virtual", "yes") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin-upload.php:92
  - STORAGE call to update_post_meta($post_id, "_download_limit", 3) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin-upload.php:93
  - STORAGE call to update_post_meta($post_id, "_download_expiry", 7) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin-upload.php:95
  - STORAGE call to update_post_meta($post_id, "_price", 20) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin-upload.php:96
  - STORAGE call to update_post_meta($post_id, "_regular_price", 20) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
admin-upload.php:107
  - STORAGE call to update_post_meta($post_id, "_downloadable_files", $files) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
ss-env-check.php:187
  - STORAGE call to update_option("ss_ignoreimagick", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
ss-env-check.php:188
  - STORAGE call to update_option("ss_l_ignorequickguide", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
ss-env-check.php:189
  - STORAGE call to update_option("ss_ignorequickguide", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
ss-env-check.php:190
  - STORAGE call to update_option("ss_ignorephpver", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
ss-env-check.php:191
  - STORAGE call to update_option("ss_ignorewrongwoo", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
ss-env-check.php:192
  - STORAGE call to update_option("ss_ignoresspro", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
ss-env-check.php:195
  - STORAGE call to update_option("ss_errs", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
symbiostock-init.php:12
  - STORAGE call to update_option("ss_ignoreimagick", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
symbiostock-init.php:13
  - STORAGE call to update_option("ss_ignoresspro", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
symbiostock-init.php:14
  - STORAGE call to update_option("ss_ignorephpver", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
symbiostock-init.php:15
  - STORAGE call to update_option("ss_ignorewrongwoo", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
symbiostock-init.php:18
  - STORAGE call to update_option("ss_errs", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
symbiostock-init.php:58
  - STORAGE call to update_option("woocommerce_email_footer_text", get_option("woocommerce_email_from_name") . " - Powered by Symbiostock/WooCommerce") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
symbiostock-init.php:60
  - STORAGE call to update_option("ss_init_base_settings_done_lite", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
symbiostock-init.php:63
  - STORAGE call to update_option("shop_catalog_image_size", $curr) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
symbiostock-init.php:66
  - STORAGE call to update_option("shop_single_image_size", $curr) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
symbiostock-init.php:69
  - STORAGE call to update_option("shop_thumbnail_image_size", $curr) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
symbiostock-init.php:71
  - STORAGE call to update_option("woocommerce_default_catalog_orderby", "date") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
symbiostock-init.php:72
  - STORAGE call to update_option("woocommerce_manage_stock", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
symbiostock-init.php:73
  - STORAGE call to update_option("woocommerce_stock_format", "no_amount") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
symbiostock-init.php:74
  - STORAGE call to update_option("woocommerce_calc_shipping", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
symbiostock-init.php:75
  - STORAGE call to update_option("woocommerce_enable_shipping_calc", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
symbiostock-init.php:76
  - STORAGE call to update_option("woocommerce_default_country", "AU:WA") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
symbiostock-init.php:77
  - STORAGE call to update_option("woocommerce_currency", "USD") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
symbiostock-init.php:78
  - STORAGE call to update_option("woocommerce_review_rating_verification_required", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
symbiostock-init.php:79
  - STORAGE call to update_option("woocommerce_enable_review_rating", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
symbiostock-init.php:80
  - STORAGE call to update_option("woocommerce_file_download_method", "force") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
symbiostock-init.php:82
  - STORAGE call to update_option("woocommerce_admin_footer_text_rated", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option 

By data type:
email
	ArrayElementDetector.(unknown) - {'email'}
file
	PHPStorageDetector.fwrite($fp, "deny from all
AllowOverride None") - {'file'}
	PHPStorageDetector.fwrite($fp, "deny from all
AllowOverride None") - {'file'}
none
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	WordPressStorageDetector.wp_insert_post($post) - set()
option
	WordPressRetrievalDetector.get_option("ss_ignoreimagick") - {'option'}
	WordPressRetrievalDetector.get_option("ss_ignorequickguide") - {'option'}
	WordPressRetrievalDetector.get_option("ss_ignorewrongwoo") - {'option'}
	WordPressStorageDetector.update_option("ss_ignorephpver", 1) - {'option'}
	WordPressRetrievalDetector.get_option("_cron_code") - {'option'}
	WordPressRetrievalDetector.get_option("_cron_code") - {'option'}
	WordPressStorageDetector.update_option("ss_ignorewrongwoo", 1) - {'option'}
	WordPressStorageDetector.update_option("shop_single_image_size", $curr) - {'option'}
	WordPressStorageDetector.update_option("woocommerce_manage_stock", "no") - {'option'}
	WordPressRetrievalDetector.get_option("ss_sz_ppass") - {'option'}
	WordPressStorageDetector.update_option("ss_ignoresspro", 1) - {'option'}
	WordPressStorageDetector.update_option("ss_l_ignorequickguide", 1) - {'option'}
	WordPressStorageDetector.update_option("woocommerce_stock_format", "no_amount") - {'option'}
	WordPressRetrievalDetector.get_option("_cron_code") - {'option'}
	WordPressRetrievalDetector.get_option("ss_l_ignorequickguide") - {'option'}
	WordPressRetrievalDetector.get_option("_cron_code") - {'option'}
	WordPressRetrievalDetector.get_option("ss_ignorephpver") - {'option'}
	WordPressStorageDetector.update_option("woocommerce_enable_shipping_calc", 0) - {'option'}
	WordPressStorageDetector.update_option("woocommerce_calc_shipping", 0) - {'option'}
	WordPressStorageDetector.update_option("ss_errs", []) - {'option'}
	WordPressStorageDetector.update_option("ss_ignorequickguide", 1) - {'option'}
	WordPressStorageDetector.update_option("woocommerce_admin_footer_text_rated", 1) - {'option'}
	WordPressStorageDetector.update_option("ss_ignoresspro", 1) - {'option'}
	WordPressStorageDetector.update_option("woocommerce_email_footer_text", get_option("woocommerce_email_from_name") . " - Powered by Symbiostock/WooCommerce") - {'option'}
	WordPressStorageDetector.update_option("woocommerce_default_country", "AU:WA") - {'option'}
	WordPressStorageDetector.update_option("woocommerce_file_download_method", "force") - {'option'}
	WordPressStorageDetector.update_option("ss_ignorewrongwoo", 1) - {'option'}
	WordPressStorageDetector.update_option("ss_init_base_settings_done_lite", 1) - {'option'}
	WordPressStorageDetector.update_option("woocommerce_currency", "USD") - {'option'}
	WordPressRetrievalDetector.get_option("ss_sz_active") - {'option'}
	WordPressStorageDetector.update_option("ss_ignorephpver", 1) - {'option'}
	WordPressRetrievalDetector.get_option("shop_single_image_size") - {'option'}
	WordPressStorageDetector.update_option("ss_errs", []) - {'option'}
	WordPressRetrievalDetector.get_option("ss_ignoresspro") - {'option'}
	WordPressStorageDetector.update_option("shop_catalog_image_size", $curr) - {'option'}
	WordPressStorageDetector.update_option("woocommerce_default_catalog_orderby", "date") - {'option'}
	WordPressStorageDetector.update_option("woocommerce_enable_review_rating", "no") - {'option'}
	WordPressRetrievalDetector.get_option("ss_errs") - {'option'}
	WordPressStorageDetector.update_option("ss_ignoreimagick", 1) - {'option'}
	WordPressStorageDetector.update_option("woocommerce_review_rating_verification_required", "yes") - {'option'}
	WordPressStorageDetector.update_option("ss_ignoreimagick", 1) - {'option'}
	WordPressStorageDetector.update_option("shop_thumbnail_image_size", $curr) - {'option'}
	WordPressRetrievalDetector.get_option("ss_init_base_settings_done_lite") - {'option'}
	WordPressRetrievalDetector.get_option("ss_pingback") - {'option'}
	WordPressRetrievalDetector.get_option("ss_init_base_settings_done") - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_email_from_name") - {'option'}
post_meta
	WordPressStorageDetector.update_post_meta($post_id, "_visibility", "visible") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_regular_price", 20) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_downloadable", "yes") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($postid, "ss_media_filename", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "ss_media_filename", $finalfilename) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_downloadable_files", $files) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "total_sales", "") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_download_expiry", 7) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_virtual", "yes") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_download_limit", 3) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "_price", 20) - {'post_meta'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:12.415069.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 514 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.397681.

514 STORE_REACHES edges created
514 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 1 nodes as PERSONAL
In total, tainted 1 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 2 nodes as ENCRYPTED
In total, tainted 2 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:00.274991.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:00:37.801273!
Request variable '$_GET["email"]' of personal types {'email'} is found.,,None
MD5 called with parameters [url]. Ignore if [url] does not contain personal information.,md5,None
MD5 called with parameters [time]. Ignore if [time] does not contain personal information.,md5,None
STORAGE call to fwrite($fp, "deny from all
AllowOverride None").,None,None
STORAGE call to fwrite($fp, "deny from all
AllowOverride None").,None,None
RETRIEVAL call to get_option("ss_pingback") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("ss_ignoresspro") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("ss_ignorewrongwoo") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("ss_ignoreimagick") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("ss_ignorephpver") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("ss_l_ignorequickguide") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("ss_ignorequickguide") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("ss_sz_ppass") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("ss_sz_active") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("ss_errs") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("ss_init_base_settings_done_lite") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("ss_init_base_settings_done") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_email_from_name") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("_cron_code") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("_cron_code") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("_cron_code") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("_cron_code") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($postid, "ss_media_filename", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("shop_single_image_size") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
STORAGE call to update_post_meta($post_id, "_downloadable_files", $files) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to wp_insert_post($post). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to update_post_meta($post_id, "ss_media_filename", $finalfilename) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_visibility", "visible") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "total_sales", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_downloadable", "yes") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_virtual", "yes") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_download_limit", 3) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_download_expiry", 7) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_price", 20) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "_regular_price", 20) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("ss_ignoreimagick", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("ss_l_ignorequickguide", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("ss_ignorequickguide", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("ss_ignorephpver", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("ss_ignorewrongwoo", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("ss_ignoresspro", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("ss_errs", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("ss_ignoreimagick", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("ss_ignoresspro", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("ss_ignorephpver", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("ss_ignorewrongwoo", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("ss_errs", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("woocommerce_email_footer_text", get_option("woocommerce_email_from_name") . " - Powered by Symbiostock/WooCommerce") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("ss_init_base_settings_done_lite", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("shop_catalog_image_size", $curr) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("shop_single_image_size", $curr) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("shop_thumbnail_image_size", $curr) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("woocommerce_default_catalog_orderby", "date") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("woocommerce_manage_stock", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("woocommerce_stock_format", "no_amount") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("woocommerce_calc_shipping", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("woocommerce_enable_shipping_calc", 0) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("woocommerce_default_country", "AU:WA") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("woocommerce_currency", "USD") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("woocommerce_review_rating_verification_required", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("woocommerce_enable_review_rating", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("woocommerce_file_download_method", "force") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("woocommerce_admin_footer_text_rated", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] Storage check is NONE 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['encryption', 'third_party'] 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? True 

No findings
