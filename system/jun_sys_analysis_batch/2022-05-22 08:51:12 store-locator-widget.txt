Timeout in resolving values
Timeout in running neo4j query
Running Main.py on store-locator-widget

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.385978.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:00.899329.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 0 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.309256.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 0 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.460670.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 88 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:00.678742.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 0 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.625804.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.093347.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 59 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:01.259613.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 559
Added 412 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 559
Added 0 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:00.888629.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/store-locator-widget/admin_page.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/store-locator-widget/functions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/store-locator-widget/store-locator-widget.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.534738.

559 PHP_REACHES edges created
559 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 221 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.081336.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:01.666452.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 3 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.674076.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 13 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.165307.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.146033.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.071375.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.012217.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.045924.

16 PHP_REACHES edges created
16 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 3 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.143122.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
6 SQL operations to process.
CREATE TABLE storelocatorwidget_get_table_name() (
      id mediumint(9) NOT NULL AUTO_INCREMENT,
      storelocatorwidget_api VARCHAR(255) DEFAULT "" NOT NULL,
      google_api VARCHAR(255) DEFAULT "" NOT NULL,
      UNIQUE KEY id (id)
    );
SQL command (CREATE TABLE storelocatorwidget_get_table_name() ( id mediumint(9) NOT NULL AUTO_INCREMENT, storelocatorwidget_api VARCHAR(255) DEFAULT "" NOT NULL, google_api VARCHAR(255) DEFAULT "" NOT NULL, UNIQUE KEY id (id) );) cannot be parsed correct.
SELECT storelocatorwidget_api FROM storelocatorwidget_get_table_name() WHERE ID = 1
SELECT storelocatorwidget_api FROM storelocatorwidget_get_table_name() WHERE ID = 1
SQL command (SELECT storelocatorwidget_api FROM storelocatorwidget_get_table_name() WHERE ID = 1) cannot be parsed correct.
SELECT google_api FROM storelocatorwidget_get_table_name() WHERE ID = 1
SELECT google_api FROM storelocatorwidget_get_table_name() WHERE ID = 1
SQL command (SELECT google_api FROM storelocatorwidget_get_table_name() WHERE ID = 1) cannot be parsed correct.
UPDATE storelocatorwidget_get_table_name() SET storelocatorwidget_api='$api' WHERE id = 1
UPDATE storelocatorwidget_get_table_name() SET storelocatorwidget_api='$api' WHERE id = 1
SQL command (UPDATE storelocatorwidget_get_table_name() SET storelocatorwidget_api='$api' WHERE id = 1) cannot be parsed correct.
UPDATE storelocatorwidget_get_table_name() SET google_api='$gapi' WHERE id = 1
UPDATE storelocatorwidget_get_table_name() SET google_api='$gapi' WHERE id = 1
SQL command (UPDATE storelocatorwidget_get_table_name() SET google_api='$gapi' WHERE id = 1) cannot be parsed correct.
DROP TABLE IF EXISTS storelocatorwidget_get_table_name()
SQL command (DROP TABLE IF EXISTS storelocatorwidget_get_table_name()) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [545, 280, 327, 187, 234, 597]
Added 0 SQL nodes. 0 out of 6 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:03.544532.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'plugins_url("images/logo.png", )'' cannot be parsed correct.
HTML code '$'storelocatorwidget_get_storelocatorwidget_api()'' cannot be parsed correct.
HTML code '$'storelocatorwidget_get_google_api()'' cannot be parsed correct.
HTML code '$'" width="300">
<hr>
<div class="instructions">
  <h3>Step by Step Installation Guide</h3>
  <p><b>Step 1</b> - First you\'ll need to register for a <a href="https://www.storelocatorwidgets.com/admin/Signup">StoreLocatorWidgets.com</a> account. If you don\'t have one already, you can sign up for a free 30 day trial account <a href="https://www.storelocatorwidgets.com/admin/Signup">here</a>.</p>
  <p><b>Step 2</b> - Once you\'ve signed up, go to the <a href="https://www.storelocatorwidgets.com/admin/Details">Details</a> page and copy the <b>Store Locator API key</b> into the matching field below.</p>
  <p><b>Step 3</b> - You\'ll also need a <b>Google Maps API key</b>. Follow <a target="_blank" href="https://www.storelocatorwidgets.com/supportarticle?title=How%20to%20add%20a%20Google%20Maps%20API%20key%20to%20your%20store%20locator">our guide</a> (it only takes a couple of minutes!) and when you have your new key, paste it into the second field below.</p>
  <p><b>Step 4</b> - Once you have all of your <a href="https://www.storelocatorwidgets.com/admin/Stores">stores set up</a> in your StoreLocatorWidget account, you can insert your new Store Locator into any page by using the <b>[storelocatorwidget]</b> shortcode. Just add this shortcode wherever you want the locator to appear on your web page!</p>
  <p>If you run into any issues, need any help installing or uploading your store list then don\'t worry, we are here to help! Just use the chat function on the <a href="https://www.storelocatorwidgets.com/admin/Stores">StoreLocatorWidgets.com</a> website to get in touch with us.</p>
</div>

'' cannot be parsed correct.
HTML code '$'
<form method="post" action="admin-post.php">

    <input type="hidden" name="action" value="storelocatorwidget_api_keys" />
    <table class="form-table">
        <tr valign="top">
          <th scope="row" style="width: 250px">Store Locator API key</th>
          <td><input id="storelocatorwidget_api_box" type="text" name="storelocatorwidget_api_key" class="ui input" size="36" value="'' cannot be parsed correct.
HTML code '$'" /></td>
        </tr>

        <tr valign="top">
          <th scope="row">Google Maps API key</th>
          <td><input type="text" name="google_api_key" class="ui input" size="45" value="'' cannot be parsed correct.
HTML code '$'" /></td>
        </tr>

    </table>

   '' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:00.812538.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.047166.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 0 do_action/apply_filters calls and 7 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.410582.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbaseDetector
### Start running FrontBaseDetector
### Finish running DbplusDetector
### Start running HashDetector
### Finish running FileProDetector
### Start running IBMDb2Detector
### Finish running FrontBaseDetector
### Start running InformixDetector
### Finish running CubridDetector
### Start running IngresDetector
### Finish running FirebirdInterBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running IBMDb2Detector
### Start running MsqlDetector
### Finish running MongoDetector
### Start running MySQLDetector
### Finish running MongoDbDetector
### Start running MySQLiDetector
### Finish running MsqlDetector
### Start running Oci8Detector
### Finish running MySQLDetector
### Start running OpenSSLDetector
### Finish running Oci8Detector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running HashDetector
### Start running PhpCurlDetector
### Finish running OpenSSLDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PasswordHashingDetector
### Start running PHPRetrievalDetector
### Finish running PHPIncludedDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PhpCurlDetector
### Start running PhpVarDetector
### Finish running ArrayElementDetector
### Start running PostgreSQLDetector
### Finish running PhpVarDetector
### Start running PropertyDetector
### Finish running PostgreSQLDetector
### Start running Sqlite3Detector
### Finish running PHPStorageDetector
### Start running SqliteDetector
### Finish running PHPRetrievalDetector
### Start running SqlServerDetector
### Finish running SqliteDetector
### Start running SybaseDetector
### Finish running SybaseDetector
### Start running TokyoTyrantDetector
### Finish running Sqlite3Detector
### Start running UserInputDetector
### Finish running TokyoTyrantDetector
### Start running VariableDetector
### Finish running PropertyDetector
### Start running WordpressHashingFnDetector
### Finish running MySQLiDetector
### Start running WordPressRemoteDetector
### Finish running maxdbDetector
### Start running WordPressRetrievalDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressStorageDetector
### Finish running SqlServerDetector
### Start running WP_UserDetector
### Finish running WordPressRemoteDetector
### Start running GenericDatabaseUsageDetector
### Finish running WP_UserDetector
### Start running GenericEncryptionDetector
### Finish running GenericDatabaseUsageDetector
### Start running DeletionDetector
### Finish running GenericEncryptionDetector
### Start running UninstallDetector
### Finish running VariableDetector
### Finish running UserInputDetector
### Finish running WordPressStorageDetector
### Finish running WordPressRetrievalDetector
### Finish running DeletionDetector
### Finish running UninstallDetector
### Finished running detectors
store-locator-widget.php:40
  - RETRIEVAL call to get_option("storelocatorwidget_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
store-locator-widget.php:53
  - RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array). 

store-locator-widget.php:54
  - STORAGE call to update_option("storelocatorwidget_db_version", STORELOCATORWIDGET_DB_VERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option 

By data type:
none
	WordPressRetrievalDetector.dbDelta($sql) - set()
option
	WordPressStorageDetector.update_option("storelocatorwidget_db_version", STORELOCATORWIDGET_DB_VERSION) - {'option'}
	WordPressRetrievalDetector.get_option("storelocatorwidget_db_version") - {'option'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:05.558400.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 1 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.045713.

1 STORE_REACHES edges created
1 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
In total, tainted 0 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
In total, tainted 0 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:00.006492.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:00:24.704219!
RETRIEVAL call to get_option("storelocatorwidget_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
STORAGE call to update_option("storelocatorwidget_db_version", STORELOCATORWIDGET_DB_VERSION) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found no personal data in the plugin. No analysis needed. 

[main] Complaint? True 

No findings
