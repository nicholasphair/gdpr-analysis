Timeout in resolving values
Timeout in running neo4j query
Running Main.py on twitter-it

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.331948.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.063832.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 0 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.219432.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 0 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.427841.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 155 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:00.708168.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 42 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:01.653881.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
Added 2 PHP_REACHES edges.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.110401.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 76 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:01.366196.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 1356
Added 1081 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 1356
Added 0 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.226915.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/twitter-it/installer.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/twitter-it/twitter_it-admin.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/twitter-it/twitter_it.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.337233.

162 PHP_REACHES edges created
4 CALLS edges created
1 PHP_REACHES edges created
30 CALLS edges created
1000 PHP_REACHES edges created
1159 PHP_REACHES edges created
1356 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 394 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.111234.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.993368.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 18 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:01.508667.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 30 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.174286.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.071338.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.425069.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.019488.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.045696.

48 PHP_REACHES edges created
48 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 18 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.139209.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
4 SQL operations to process.
CREATE TABLE $wpdb (
          post_url varchar(255) NOT NULL,
          tiny_url varchar(40) NOT NULL,
          PRIMARY KEY  (post_url)
        );
SQL command (CREATE TABLE $wpdb ( post_url varchar(255) NOT NULL, tiny_url varchar(40) NOT NULL, PRIMARY KEY (post_url) );) cannot be parsed correct.
DELETE FROM $wpdb
SQL command (DELETE FROM $wpdb) cannot be parsed correct.
DELETE FROM $wpdb WHERE post_url = '$post_url'
SQL command (DELETE FROM $wpdb WHERE post_url = '$post_url') cannot be parsed correct.
INSERT INTO $wpdb(post_url, tiny_url) VALUES ('$post_url', '$short_url')
SQL command (INSERT INTO $wpdb(post_url, tiny_url) VALUES ('$post_url', '$short_url')) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [59, 239, 1519, 1555]
Added 0 SQL nodes. 0 out of 4 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:02.479695.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'<span class="post-twitter" style=$options_style>'' cannot be parsed correct.
HTML code '$'<div class="updated">
<p><strong>Settings saved.</strong></p>
</div>
'' cannot be parsed correct.
HTML code '$'<li><input type="text" name="twitter_it[label]" id="twitter_it[label]" value="$options_label /> <label for="twitter_it[label]">Label for the Twitter It! Button</label></li><li><input type="text" name="twitter_it[prefix]" id="twitter_it[prefix]" value="get_option("twitter_it_params")_prefix /> <label for="twitter_it[prefix]">Prefix for the twitter-message e.g. "Reading"</label></li>'' cannot be parsed correct.
HTML code '$'  <li><input type="checkbox" name="twitter_it[use_filter]" id="twitter_it[use_filter]"  checked="checked" /> <label for="twitter_it[use_filter]"> Place twitter-button after the content of a post?</label></li>'' cannot be parsed correct.
HTML code '$'  <li><input type="radio" id="filter_before" name="twitter_it[filter_append]" value="before"  checked="checked"/> <label for="filter_before">Add the link <b>before</b> the content starts.</label>'' cannot be parsed correct.
HTML code '$'      <input type="radio" id="filter_append" name="twitter_it[filter_append]" value="append"  checked="checked"/> <label for="filter_append">Append the link <b>after</b> the content.</label>'' cannot be parsed correct.
HTML code '$'  <li><input type="checkbox" name="twitter_it[button]" id="twitter_it[button]"  checked="checked" /> <label for="twitter_it[button]"> Show twitter-image next to text?</label></li>'' cannot be parsed correct.
HTML code '$'<link rel="stylesheet" href="get_bloginfo("wpurl")/wp-content/plugins/twitter-it/css/twitter_it.php?wpurl=get_bloginfo("wpurl")&button_image=$options_button_image" type="text/css" media="screen" />'' cannot be parsed correct.
HTML code '$'  <li><input type="radio" id="button_1" name="twitter_it[button_image]" value="1"  checked="checked"/> <label for="button_1"><img src="../wp-content/plugins/twitter-it/images/icon_twitter_1_16x16.png" /></label>'' cannot be parsed correct.
HTML code '$'      <input type="radio" id="button_2" name="twitter_it[button_image]" value="2"  checked="checked"/> <label for="button_2"><img src="../wp-content/plugins/twitter-it/images/icon_twitter_2_16x16.png" /></label>'' cannot be parsed correct.
HTML code '$'      <input type="radio" id="button_3" name="twitter_it[button_image]" value="3"  checked="checked"/> <label for="button_2"><img src="../wp-content/plugins/twitter-it/images/icon_twitter_3_16x16.png" /></label>'' cannot be parsed correct.
HTML code '$'      <input type="radio" id="button_4" name="twitter_it[button_image]" value="4"  checked="checked"/> <label for="button_3"><img src="../wp-content/plugins/twitter-it/images/icon_twitter_4_16x16.png" /></label></li>'' cannot be parsed correct.
HTML code '$'<li><input type="text" name="twitter_it[style]" id="twitter_it[style]" value="get_option("twitter_it_params")_style /> <label for="twitter_it[label]">Add custom CSS style?</label></li>'' cannot be parsed correct.
HTML code '$'<li><input type="checkbox" name="twitter_it[nofollow]" id="twitter_it[nofollow]"  checked="checked" /> <label for="twitter_it[nofollow]"> Mark the twitter-link as nofollow? (Better for search-engines)</label></li>'' cannot be parsed correct.
HTML code '$'<ul><li>Please select the service you like to use. Some services require your user-account, so please fill them in.</li><li><input type="radio"  name="twitter_it[service]"          value="tinyurl.com" checked /><a href="http://tiny-url.com" target="_blank">Tiny URL</a> (Free, no user-account required)</li><li><input type="radio"  name="twitter_it[service]"          value="bit.ly"      checked /><a href="http://bit.ly" target="_blank">Bit.ly</a> (Provides statistics about clicks, but requires user and API-key, <a href="http://bit.ly/account/" target="_blank">see here</a> on the right side)</li><li><input type="text"   name="twitter_it[service_user]"     value="$options_service_user" /> <labelUser</label></li><li><input type="text"   name="twitter_it[service_password]" value="get_option("twitter_it_params")_service_password" /> <labelPassword or API-Key</label></li>'' cannot be parsed correct.
HTML code '$' <li><input type="checkbox" name="twitter_it[clear_cache]" id="twitter_it[clear_cache]"  checked="checked" /> <label for="twitter_it[clear_cache]"> Clear cache? This refreshs all short-urls.</label></li>'' cannot be parsed correct.
HTML code '$'<ul>
            <li><a href="http://roman-allenstein.de/wordpress">Twitter It! Homepage</a></li>
            <li><br /> Author: Roman Allenstein</li>
            <li><img src="../wp-content/plugins/twitter-it/images/icon_twitter_1_16x16.png" /><a href="http://www.twitter.com/romanbloggt">Follow me</a></li>
          </ul>'' cannot be parsed correct.
HTML code '$'<ul>
            <li>Thanks to <a href="http://icontexto.blogspot.com/2008/09/icontexto-webdev-social-bookmark-bonus.html">IconTexto</a> for the Icons</li>       
          </ul>'' cannot be parsed correct.
HTML code '$'<ul>'' cannot be parsed correct.
HTML code '$'<input type="hidden" name="update_twitter_it_options" value="1">'' cannot be parsed correct.
HTML code '$'</ul>'' cannot be parsed correct.
HTML code '$'<ul>'' cannot be parsed correct.
HTML code '$'</ul>'' cannot be parsed correct.
HTML code '$'<ul>'' cannot be parsed correct.
HTML code '$'<li><img src="images/icon_twitter_16x16.png" /></li>'' cannot be parsed correct.
HTML code '$'</ul>'' cannot be parsed correct.
HTML code '$'</ul>'' cannot be parsed correct.
HTML code '$'</form>'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:04.387785.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.044964.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 0 do_action/apply_filters calls and 3 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.398415.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbaseDetector
### Start running FrontBaseDetector
### Finish running CubridDetector
### Start running HashDetector
### Finish running DbplusDetector
### Start running IBMDb2Detector
### Finish running FirebirdInterBaseDetector
### Start running InformixDetector
### Finish running FileProDetector
### Start running IngresDetector
### Finish running InformixDetector
### Start running maxdbDetector
### Finish running FrontBaseDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running MongoDbDetector
### Start running OpenSSLDetector
### Finish running Oci8Detector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running HashDetector
### Start running PhpCurlDetector
### Finish running ArrayElementDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PasswordHashingDetector
### Start running PHPRetrievalDetector
### Finish running PHPIncludedDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running OpenSSLDetector
### Start running PhpVarDetector
### Finish running PhpVarDetector
### Start running PostgreSQLDetector
### Finish running PHPStorageDetector
### Start running PropertyDetector
### Finish running PostgreSQLDetector
### Start running Sqlite3Detector
### Finish running maxdbDetector
### Start running SqliteDetector
### Finish running MySQLiDetector
### Start running SqlServerDetector
### Finish running SqliteDetector
### Start running SybaseDetector
### Finish running Sqlite3Detector
### Start running TokyoTyrantDetector
### Finish running SybaseDetector
### Start running UserInputDetector
### Finish running PropertyDetector
### Start running VariableDetector
### Finish running TokyoTyrantDetector
### Start running WordpressHashingFnDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRemoteDetector
### Finish running SqlServerDetector
### Start running WordPressRetrievalDetector
### Finish running WordPressRemoteDetector
### Start running WordPressStorageDetector
### Finish running VariableDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running PHPRetrievalDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running GenericDatabaseUsageDetector
### Start running UninstallDetector
### Finish running UserInputDetector
### Finish running WordPressRetrievalDetector
### Finish running WordPressStorageDetector
### Finish running DeletionDetector
### Finish running UninstallDetector
### Finish running PhpCurlDetector
### Finished running detectors
twitter_it.php:160
  - RETRIEVAL call to file_get_contents($url).
  - Data types: file 

installer.php:17
  - RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).
twitter_it-admin.php:59
  - RETRIEVAL call to get_option("twitter_it_params") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
twitter_it.php:59
  - RETRIEVAL call to get_option("twitter_it_params") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
twitter_it.php:76
  - RETRIEVAL call to get_post($id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta 

twitter_it-admin.php:24
  - STORAGE call to update_option("twitter_it_params", $new_options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
twitter_it.php:67
  - STORAGE call to update_option("twitter_it_params", $o) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option 

By data type:
file
	PHPRetrievalDetector.file_get_contents($url) - {'file'}
none
	WordPressRetrievalDetector.dbDelta($sql) - set()
option
	WordPressStorageDetector.update_option("twitter_it_params", $o) - {'option'}
	WordPressRetrievalDetector.get_option("twitter_it_params") - {'option'}
	WordPressRetrievalDetector.get_option("twitter_it_params") - {'option'}
	WordPressStorageDetector.update_option("twitter_it_params", $new_options) - {'option'}
post
	WordPressRetrievalDetector.get_post($id) - {'post', 'wp_post', 'post_meta'}
post_meta
	WordPressRetrievalDetector.get_post($id) - {'post', 'wp_post', 'post_meta'}
wp_post
	WordPressRetrievalDetector.get_post($id) - {'post', 'wp_post', 'post_meta'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:06.563511.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 4 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.070817.

4 STORE_REACHES edges created
4 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
In total, tainted 0 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
In total, tainted 0 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:00.006722.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:00:31.595442!
RETRIEVAL call to file_get_contents($url).,None,None
RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to get_option("twitter_it_params") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("twitter_it_params") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($id) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
STORAGE call to update_option("twitter_it_params", $new_options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("twitter_it_params", $o) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found no personal data in the plugin. No analysis needed. 

[main] Complaint? True 

No findings
