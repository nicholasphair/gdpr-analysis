Timeout in resolving values
Timeout in running neo4j query
Running Main.py on baw-gravatar-google-image

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.518077.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:00.904776.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 0 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.237361.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 1 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.710454.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 494 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:01.112126.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 0 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.602734.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.115115.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 185 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:03.376406.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 2781
Added 2101 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 2878
Added 97 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.309541.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/baw-gravatar-google-image/bawggi.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/baw-gravatar-google-image/tyniaf.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.273123.

1 REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
2780 PHP_REACHES edges created
97 PHP_REACHES edges created
2878 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 907 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.063247.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.755684.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 12 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:01.037073.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 13 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.182078.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.079106.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.204853.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.010751.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.142158.

25 PHP_REACHES edges created
25 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 12 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.134323.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
No SQL nodes to process.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:00.118664.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'<h3 class="hndle" style="padding:5px;"><span>Help and informations</span></h3><div class="inside"><p>How does this work, when some one send a comment on a post with a valid email:<ol><li>If this email is linked to a Gravatar account, his(her) avatar will be displayed.</li><li>If this email is not linked, Gravatar will send back a default avatar, depending on your choice (Mystery Man, Gravatar Logo, Identicon, Wavatar, MonsterID, Retro ...)</li><li>Now if you choose "Use Google Image Service" and if the email is not linked, a Google Images Service request will be sent to get the first best relevance face photo associated to this email (safe mode set to high level).</li><li>The user will receive a mail with 3 links:</li><ol><li>If this avatar is not relevant, 1st link can be use to delete it.</li><li>If the user changed his mind and create a Gravatar account, the 2nd link can be used to refresh it.</li><li>The 3rd is a invitation to create a Gravatar account.</li></ol><li>If no picture have been found on google (bad!), the default chosen gravatar will be displayed, as usual.</li><li>If you choose "Only default gravatars", no real pictures will be displayed, only default (use generated !).</li><li>If you let Gravatar does its job, you will have the same behavior as without this plugin activated (but the cache system).</li></p><p>About cache system:<ol><li>I do not recommand to disable to cache system because a Google Image request cost, so you need to cache pictures !</li><li>If you only cache Google Images, when a user change or add a Gravatar to its email, you and he will not need any action.</li><li>If you also add reals gravatars, existing good photo profile from gravatar will be cached.</li><li>If you add all, even default avatars will be stored as file. But this choice reduce the HTTP request on gravatar\'s servers a lot!</li><li>If you change any setting, behavior or cache i recommand to clear the cache (i did not want to force it).</li></ol></p><p>Other informations:<ol><li>On plugin deletion (not just deactivation), the cache folder will be deleted if rights (chmod) are good.</li><li>Also you can add you own default avatar, it will be stored in the default upload folder and visible in medias menu.</li></ol></p></div>'' cannot be parsed correct.
HTML code '$'<h3 class="hndle" style="padding:5px;"><span>About me</span></h3>
			<div class="inside">
				<p><img src="http://www.gravatar.com/avatar/md5("julio" . "bosk" . "@" . "gmail" . "." . "com")" style="float:left;margin-right:10px;"/>
				<strong>Julio Potier</strong><br />
				I\'m a Web Security Consultant and WordPress Expert. I create plugins every day, i clean Web sites from hackers every day. I\'m workaholic!<br />
				<a href="http://www.boiteaweb.fr" target="_blank" title="BoiteAWeb.fr - WordPress Security Blog"><img src="https://dl.dropbox.com/u/45956904/plugins/bawlogo.png" /></a><br />
				<a href="http://profiles.wordpress.org/juliobox/" title="on WordPress.org">My WordPress Profile</a></p>
			</div>'' cannot be parsed correct.
HTML code '$'<h3 class="hndle" style="padding:5px;"><span>Check this plugins too</span></h3>
	<div class="inside">
		<ul>
			<li><a href="http://baw.li/pvc">BAW Post Views Count</a> - <em>Count views on your posts, pages, CPT. Widget, shortcode included. More than 5000 DL!</em></li>
			<li><a href="http://baw.li/mrp">BAW Manual Related Posts</a> - <em>Manually choose which posts will be linked to every posts, out auto selection, out random selection, out fake smart selection.!</em></li>
			<li><a href="http://baw.li/eic">BAW Easy Invitation Codes</a> - <em>Visitors have to enter an invitation code to register on your blog. The easy way!</em></li>
			<li><a href="http://baw.li/msl">BAW More Secure Login</a> - <em>Add a second authentication layer to your WordPress site.</em></li>
			<li><a href="http://baw.li/llm">BAW Login Logout Menu</a> - <em>Add real login and log out links into our WordPress menus.</em></li>
			<li><a href="http://baw.li/modorole">BAW Moderator Role</a> - <em>Add the missing "Comments Moderator" role into your Blog.</em></li>
			<li><a href="http://baw.li/bact">BAW Better Admin Color Themes</a> - <em>Add more themes schemes and icons schemes into your dashboard.</em></li>
			<li><a href="http://baw.li/like">BAW Like Unlike</a> - <em>Add boutons for "Like" or "Unlike" (can be set up) your posts and pages.</em></li>
			<li><a href="http://baw.li/wpsc">BAW WordPress Plugin Security Checker</a> - <em>Check if the desired plugin is secure or not.</em></li>
			<li><a href="http://autoshort.com">BAW AutoShortener</a> - <em>AutoShortener can create short links in your WordPress website for your posts and pages but also for external links.</em></li>
			<li><a href="http://baw.li/gauthor">BAW Google Author</a> - <em>Add a META tag Author for SEO reasons.</em></li>
			<li><a href="http://baw.li/papii">BAW PAPII</a> - <em>Add some shortcodes to load information about a plugin from the repository. </em></li>
		</ul>
	</div>'' cannot be parsed correct.
HTML code '$'admin_url(wp_nonce_url("options-discussion.php?act=empty_cache", "empty_cache"))'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:01.714759.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.054778.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 11 do_action/apply_filters calls and 19 add_action/add_filter calls. Now connecting do-add pairs.
Added 1 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:01.468761.

1 PHP_REACHES edges created
1 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FileProDetector
### Start running FrontBaseDetector
### Finish running DbaseDetector
### Start running HashDetector
### Finish running FirebirdInterBaseDetector
### Start running IBMDb2Detector
### Finish running DbplusDetector
### Start running InformixDetector
### Finish running CubridDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running Oci8Detector
### Start running OpenSSLDetector
### Finish running MongoDbDetector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running PasswordHashingDetector
### Start running PhpCurlDetector
### Finish running HashDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running ArrayElementDetector
### Start running PHPRetrievalDetector
### Finish running PhpCurlDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running OpenSSLDetector
### Start running PhpVarDetector
### Finish running PhpVarDetector
### Start running PostgreSQLDetector
### Finish running PostgreSQLDetector
### Start running PropertyDetector
### Finish running PHPStorageDetector
### Start running Sqlite3Detector
### Finish running PHPRetrievalDetector
### Start running SqliteDetector
### Finish running SqliteDetector
### Start running SqlServerDetector
### Finish running MySQLiDetector
### Start running SybaseDetector
### Finish running maxdbDetector
### Start running TokyoTyrantDetector
### Finish running SybaseDetector
### Start running UserInputDetector
### Finish running Sqlite3Detector
### Start running VariableDetector
### Finish running TokyoTyrantDetector
### Start running WordpressHashingFnDetector
### Finish running SqlServerDetector
### Start running WordPressRemoteDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRetrievalDetector
### Finish running PropertyDetector
### Start running WordPressStorageDetector
### Finish running UserInputDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running PHPIncludedDetector
### Start running GenericEncryptionDetector
### Finish running GenericDatabaseUsageDetector
### Start running DeletionDetector
### Finish running GenericEncryptionDetector
### Start running UninstallDetector
### Finish running WordPressRemoteDetector
### Finish running WordPressStorageDetector
### Finish running WordPressRetrievalDetector
### Finish running VariableDetector
### Finish running DeletionDetector
### Finish running UninstallDetector
### Finished running detectors
bawggi.php:440
  - Request variable '$_GET["comment_author_email"]' of personal types {'email'} is found.
  - Data types: email
tyniaf.php:2
  - Request variable '$_GET["email"]' of personal types {'email'} is found.
  - Data types: email
tyniaf.php:2
  - Request variable '$_GET["email"]' of personal types {'email'} is found.
  - Data types: email 

bawggi.php:86
  - MD5 called with parameters [julio, gmail, bosk, com, @, .]. Ignore if [julio, gmail, bosk, com, @, .] does not contain personal information.
bawggi.php:200
  - MD5 called with parameters [comment_author_email, strtolower, comment]. Ignore if [comment_author_email, strtolower, comment] does not contain personal information.
bawggi.php:207
  - MD5 called with parameters [comment_author_email, comment, action, NONCE_SALT]. Ignore if [comment_author_email, comment, action, NONCE_SALT] does not contain personal information.
bawggi.php:257
  - MD5 called with parameters [strtolower, email]. Ignore if [strtolower, email] does not contain personal information.
bawggi.php:260
  - MD5 called with parameters [strtolower, email]. Ignore if [strtolower, email] does not contain personal information.
bawggi.php:283
  - MD5 called with parameters [trim, strtolower, email]. Ignore if [trim, strtolower, email] does not contain personal information.
bawggi.php:312
  - MD5 called with parameters [NONCE_SALT, email]. Ignore if [NONCE_SALT, email] does not contain personal information.
bawggi.php:385
  - MD5 called with parameters [strtolower, email]. Ignore if [strtolower, email] does not contain personal information.
bawggi.php:404
  - MD5 called with parameters [strtolower, email]. Ignore if [strtolower, email] does not contain personal information.
bawggi.php:408
  - MD5 called with parameters [strtolower, email]. Ignore if [strtolower, email] does not contain personal information.
bawggi.php:413
  - MD5 called with parameters [comment_author_email, comment, refresh_avatar, NONCE_SALT]. Ignore if [comment_author_email, comment, refresh_avatar, NONCE_SALT] does not contain personal information.
bawggi.php:414
  - MD5 called with parameters [delete_avatar, comment_author_email, comment, NONCE_SALT]. Ignore if [delete_avatar, comment_author_email, comment, NONCE_SALT] does not contain personal information.
bawggi.php:443
  - MD5 called with parameters [act, comment_author_email, NONCE_SALT]. Ignore if [act, comment_author_email, NONCE_SALT] does not contain personal information.
bawggi.php:447
  - MD5 called with parameters [comment_author_email, strtolower]. Ignore if [comment_author_email, strtolower] does not contain personal information.
bawggi.php:481
  - MD5 called with parameters [refresh_avatar, NONCE_SALT, email]. Ignore if [refresh_avatar, NONCE_SALT, email] does not contain personal information.
bawggi.php:482
  - MD5 called with parameters [delete_avatar, NONCE_SALT, email]. Ignore if [delete_avatar, NONCE_SALT, email] does not contain personal information. 

bawggi.php:331
  - RETRIEVAL call to file_get_contents($service_url).
  - Data types: file
tyniaf.php:19
  - RETRIEVAL call to readfile("http://turnyournameintoaface.com/face/"$L1$L2$L3$L4".png").
  - Data types: file 

bawggi.php:451
  - STORAGE call to file_put_contents($files[0], null).
  - Data types: file 

bawggi.php:200
  - object property '$comment->comment_author_email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:207
  - object property '$comment->comment_author_email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:208
  - object property '$comment->comment_author_email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:235
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:246
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:247
  - object property '$id_or_email->comment_author_email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:248
  - object property '$id_or_email->comment_author_email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:413
  - object property '$comment->comment_author_email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:414
  - object property '$comment->comment_author_email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:417
  - object property '$comment->comment_author_email' of personal types {'email'} is found.
  - Data types: email 

bawggi.php:230
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:231
  - variable '$id_or_email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:232
  - variable '$id_or_email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:235
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:236
  - variable '$id_or_email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:239
  - variable '$id_or_email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:239
  - variable '$id_or_email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:242
  - variable '$id_or_email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:243
  - variable '$id_or_email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:246
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:247
  - variable '$id_or_email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:248
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:248
  - variable '$id_or_email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:251
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:251
  - variable '$id_or_email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:257
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:260
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:281
  - variable '$email_hash' of personal types {'email'} is found.
  - Data types: email
bawggi.php:282
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:283
  - variable '$email_hash' of personal types {'email'} is found.
  - Data types: email
bawggi.php:283
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:288
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:289
  - variable '$email_hash' of personal types {'email'} is found.
  - Data types: email
bawggi.php:295
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:300
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:304
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:308
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:312
  - variable '$email_hash' of personal types {'email'} is found.
  - Data types: email
bawggi.php:312
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:314
  - variable '$email_hash' of personal types {'email'} is found.
  - Data types: email
bawggi.php:316
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:318
  - variable '$email_hash' of personal types {'email'} is found.
  - Data types: email
bawggi.php:330
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:352
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:359
  - variable '$id_or_email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:360
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:370
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:385
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:404
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:408
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:443
  - variable '$comment_author_email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:447
  - variable '$comment_author_email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:453
  - variable '$comment_author_email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:455
  - variable '$comment_author_email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:460
  - variable '$comment_author_email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:462
  - variable '$comment_author_email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:465
  - variable '$comment_author_email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:467
  - variable '$comment_author_email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:469
  - variable '$comment_author_email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:480
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:481
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:482
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
bawggi.php:483
  - variable '$email' of personal types {'email'} is found.
  - Data types: email 

bawggi.php:387
  - API call to wp_remote_get($photo, ["timeout" => 300, "stream" => true, "filename" => $new_file]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote 

bawggi.php:14
  - RETRIEVAL call to get_option("avatar_google") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
bawggi.php:15
  - RETRIEVAL call to get_option("avatar_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
bawggi.php:16
  - RETRIEVAL call to get_option("gravatars_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
bawggi.php:141
  - RETRIEVAL call to get_option("avatar_default") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
bawggi.php:141
  - RETRIEVAL call to get_option("avatar_default") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
bawggi.php:167
  - RETRIEVAL call to get_option("avatar_default") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
bawggi.php:219
  - RETRIEVAL call to get_option("show_avatars") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
bawggi.php:233
  - RETRIEVAL call to get_userdata($id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
bawggi.php:244
  - RETRIEVAL call to get_userdata($id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user, user_meta
bawggi.php:275
  - RETRIEVAL call to get_option("avatar_default") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
bawggi.php:319
  - RETRIEVAL call to get_option("avatar_rating") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
bawggi.php:419
  - RETRIEVAL call to get_option("admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
bawggi.php:485
  - RETRIEVAL call to get_option("admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
bawggi.php:525
  - RETRIEVAL call to get_option("avatar_default_save") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
bawggi.php:544
  - RETRIEVAL call to get_option("avatar_google") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
bawggi.php:546
  - RETRIEVAL call to get_option("gravatars_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
bawggi.php:548
  - RETRIEVAL call to get_option("avatar_default") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option 

bawggi.php:142
  - STORAGE call to update_option("avatar_default", $url) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
bawggi.php:522
  - STORAGE call to delete_option("avatar_google") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
bawggi.php:523
  - STORAGE call to delete_option("avatar_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
bawggi.php:524
  - STORAGE call to delete_option("gravatars_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
bawggi.php:525
  - STORAGE call to update_option("avatar_default", get_option("avatar_default_save")) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
bawggi.php:526
  - STORAGE call to delete_option("avatar_default_save") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
bawggi.php:545
  - STORAGE call to add_option("avatar_google", "on") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
bawggi.php:547
  - STORAGE call to add_option("gravatars_cache", "google") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
bawggi.php:548
  - STORAGE call to add_option("avatar_default_save", get_option("avatar_default")) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option 

bawggi.php:522
  - DELETION call to delete_option("avatar_google") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
bawggi.php:523
  - DELETION call to delete_option("avatar_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
bawggi.php:524
  - DELETION call to delete_option("gravatars_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
bawggi.php:526
  - DELETION call to delete_option("avatar_default_save") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

bawggi.php:522
  - Uninstall deletion call: DELETION call to delete_option("avatar_google") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
bawggi.php:523
  - Uninstall deletion call: DELETION call to delete_option("avatar_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
bawggi.php:524
  - Uninstall deletion call: DELETION call to delete_option("gravatars_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
bawggi.php:526
  - Uninstall deletion call: DELETION call to delete_option("avatar_default_save") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

By data type:
email
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
file
	PHPRetrievalDetector.readfile("http://turnyournameintoaface.com/face/"$L1$L2$L3$L4".png") - {'file'}
	PHPRetrievalDetector.file_get_contents($service_url) - {'file'}
	PHPStorageDetector.file_put_contents($files[0], null) - {'file'}
none
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
option
	UninstallDetector.delete_option("avatar_url") - {'option'}
	DeletionDetector.delete_option("avatar_google") - {'option'}
	WordPressRetrievalDetector.get_option("gravatars_cache") - {'option'}
	WordPressStorageDetector.add_option("gravatars_cache", "google") - {'option'}
	WordPressStorageDetector.add_option("avatar_default_save", get_option("avatar_default")) - {'option'}
	WordPressRetrievalDetector.get_option("avatar_default") - {'option'}
	WordPressStorageDetector.add_option("avatar_google", "on") - {'option'}
	UninstallDetector.delete_option("avatar_default_save") - {'option'}
	DeletionDetector.delete_option("gravatars_cache") - {'option'}
	UninstallDetector.delete_option("gravatars_cache") - {'option'}
	UninstallDetector.delete_option("avatar_google") - {'option'}
	WordPressRetrievalDetector.get_option("show_avatars") - {'option'}
	WordPressRetrievalDetector.get_option("avatar_default") - {'option'}
	DeletionDetector.delete_option("avatar_url") - {'option'}
	WordPressRetrievalDetector.get_option("avatar_default") - {'option'}
	WordPressStorageDetector.update_option("avatar_default", $url) - {'option'}
	WordPressRetrievalDetector.get_option("admin_email") - {'option'}
	WordPressStorageDetector.delete_option("avatar_google") - {'option'}
	WordPressRetrievalDetector.get_option("avatar_url") - {'option'}
	WordPressRetrievalDetector.get_option("admin_email") - {'option'}
	WordPressRetrievalDetector.get_option("avatar_default") - {'option'}
	WordPressStorageDetector.delete_option("avatar_url") - {'option'}
	WordPressStorageDetector.delete_option("gravatars_cache") - {'option'}
	WordPressStorageDetector.delete_option("avatar_default_save") - {'option'}
	WordPressRetrievalDetector.get_option("avatar_google") - {'option'}
	WordPressRetrievalDetector.get_option("avatar_default_save") - {'option'}
	WordPressRetrievalDetector.get_option("avatar_default") - {'option'}
	WordPressStorageDetector.update_option("avatar_default", get_option("avatar_default_save")) - {'option'}
	DeletionDetector.delete_option("avatar_default_save") - {'option'}
	WordPressRetrievalDetector.get_option("gravatars_cache") - {'option'}
	WordPressRetrievalDetector.get_option("avatar_google") - {'option'}
	WordPressRetrievalDetector.get_option("avatar_rating") - {'option'}
remote
	WordPressRemoteDetector.(unknown) - {'remote'}
user
	WordPressRetrievalDetector.get_userdata($id) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($id) - {'user', 'user_meta'}
user_meta
	WordPressRetrievalDetector.get_userdata($id) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_userdata($id) - {'user', 'user_meta'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:13.466971.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 137 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.269242.

137 STORE_REACHES edges created
137 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 448 nodes as PERSONAL
In total, tainted 448 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 16 nodes as ENCRYPTED
In total, tainted 16 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:09.204114.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:00:44.729388!
Request variable '$_GET["comment_author_email"]' of personal types {'email'} is found.,,None
Request variable '$_GET["email"]' of personal types {'email'} is found.,,None
Request variable '$_GET["email"]' of personal types {'email'} is found.,,None
DELETION call to delete_option("avatar_google") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("avatar_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("gravatars_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("avatar_default_save") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
MD5 called with parameters [comment_author_email, strtolower, comment]. Ignore if [comment_author_email, strtolower, comment] does not contain personal information.,md5,None
MD5 called with parameters [comment_author_email, comment, action, NONCE_SALT]. Ignore if [comment_author_email, comment, action, NONCE_SALT] does not contain personal information.,md5,None
MD5 called with parameters [strtolower, email]. Ignore if [strtolower, email] does not contain personal information.,md5,None
MD5 called with parameters [strtolower, email]. Ignore if [strtolower, email] does not contain personal information.,md5,None
MD5 called with parameters [trim, strtolower, email]. Ignore if [trim, strtolower, email] does not contain personal information.,md5,None
MD5 called with parameters [NONCE_SALT, email]. Ignore if [NONCE_SALT, email] does not contain personal information.,md5,None
MD5 called with parameters [strtolower, email]. Ignore if [strtolower, email] does not contain personal information.,md5,None
MD5 called with parameters [strtolower, email]. Ignore if [strtolower, email] does not contain personal information.,md5,None
MD5 called with parameters [strtolower, email]. Ignore if [strtolower, email] does not contain personal information.,md5,None
MD5 called with parameters [comment_author_email, comment, refresh_avatar, NONCE_SALT]. Ignore if [comment_author_email, comment, refresh_avatar, NONCE_SALT] does not contain personal information.,md5,None
MD5 called with parameters [delete_avatar, comment_author_email, comment, NONCE_SALT]. Ignore if [delete_avatar, comment_author_email, comment, NONCE_SALT] does not contain personal information.,md5,None
MD5 called with parameters [act, comment_author_email, NONCE_SALT]. Ignore if [act, comment_author_email, NONCE_SALT] does not contain personal information.,md5,None
MD5 called with parameters [comment_author_email, strtolower]. Ignore if [comment_author_email, strtolower] does not contain personal information.,md5,None
MD5 called with parameters [refresh_avatar, NONCE_SALT, email]. Ignore if [refresh_avatar, NONCE_SALT, email] does not contain personal information.,md5,None
MD5 called with parameters [delete_avatar, NONCE_SALT, email]. Ignore if [delete_avatar, NONCE_SALT, email] does not contain personal information.,md5,None
MD5 called with parameters [julio, gmail, bosk, com, @, .]. Ignore if [julio, gmail, bosk, com, @, .] does not contain personal information.,md5,None
RETRIEVAL call to file_get_contents($service_url).,None,None
RETRIEVAL call to readfile("http://turnyournameintoaface.com/face/"$L1$L2$L3$L4".png").,None,None
STORAGE call to file_put_contents($files[0], null).,None,None
object property '$comment->comment_author_email' of personal types {'email'} is found.,,None
object property '$comment->comment_author_email' of personal types {'email'} is found.,,None
object property '$comment->comment_author_email' of personal types {'email'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$id_or_email->comment_author_email' of personal types {'email'} is found.,,None
object property '$id_or_email->comment_author_email' of personal types {'email'} is found.,,None
object property '$comment->comment_author_email' of personal types {'email'} is found.,,None
object property '$comment->comment_author_email' of personal types {'email'} is found.,,None
object property '$comment->comment_author_email' of personal types {'email'} is found.,,None
Uninstall deletion call: DELETION call to delete_option("avatar_google") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("avatar_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("gravatars_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("avatar_default_save") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
variable '$email' of personal types {'email'} is found.,,None
variable '$id_or_email' of personal types {'email'} is found.,,None
variable '$id_or_email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$id_or_email' of personal types {'email'} is found.,,None
variable '$id_or_email' of personal types {'email'} is found.,,None
variable '$id_or_email' of personal types {'email'} is found.,,None
variable '$id_or_email' of personal types {'email'} is found.,,None
variable '$id_or_email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$id_or_email' of personal types {'email'} is found.,,None
variable '$id_or_email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$id_or_email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email_hash' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email_hash' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email_hash' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email_hash' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email_hash' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email_hash' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$id_or_email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$comment_author_email' of personal types {'email'} is found.,,None
variable '$comment_author_email' of personal types {'email'} is found.,,None
variable '$comment_author_email' of personal types {'email'} is found.,,None
variable '$comment_author_email' of personal types {'email'} is found.,,None
variable '$comment_author_email' of personal types {'email'} is found.,,None
variable '$comment_author_email' of personal types {'email'} is found.,,None
variable '$comment_author_email' of personal types {'email'} is found.,,None
variable '$comment_author_email' of personal types {'email'} is found.,,None
variable '$comment_author_email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
API call to wp_remote_get($photo, ["timeout" => 300, "stream" => true, "filename" => $new_file]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
RETRIEVAL call to get_option("avatar_google") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("avatar_default") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("avatar_default") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("avatar_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("gravatars_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("avatar_default") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("show_avatars") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdata($id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_userdata($id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_option("avatar_default") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("avatar_rating") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("avatar_default_save") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("avatar_google") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("gravatars_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("avatar_default") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
STORAGE call to update_option("avatar_default", $url) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("avatar_google") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("avatar_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("gravatars_cache") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("avatar_default", get_option("avatar_default_save")) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("avatar_default_save") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to add_option("avatar_google", "on") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("gravatars_cache", "google") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("avatar_default_save", get_option("avatar_default")) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
Data Deletion violation! The plugin has storage node that has no identifier and cannot be accessed!
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] Unstructured data storage of PII types (['email']) to files through function "file_put_contents", found in file bawggi.php at line 451. 

[has_storage] Storage check is CUSTOM_UNSTRUCTURED 

[Art.17, Right to erasure] Complete data deletion is required for storage at node ID 3182 , but is impossible due to custom storage of PII without identifiers. Found in file bawggi.php at line 451 

[Art.17, Right to erasure] Deletion access is NONE 

[Art.15, Right to access] Complete data access is required for storage at node ID 3182 , but is impossible due to custom storage of PII without identifiers. Found in file bawggi.php at line 451 

[Art.15, Right to access] Data access is NONE 

[third_party] Third party usage is NONE for data types [] 

[encryption] API call that sends PII to unknown url uses unknown protocol. PII is insecurely encrypted with []. Found in file bawggi.php at line 387 

[main] Applicable GDPR requirements: ['access', 'deletion', 'encryption', 'third_party'] 

[main] Is deletion in violation? True 

[main] Is access in violation? True 

[main] Is third_party in violation? False 

[main] Is encryption in violation? True 

[main] Complaint? False 


###########
### Q&A ###
###########

1. Why is my plugin in violation against GDPR?

GDPR (https://gdpr-info.eu/) aims to give citizens in the European Union (EU) control over their personal data. If a website collects or store user data, it is required to provide users functionalities to control their data, such as ones to erase or export their data. While a plugin do not directly interact with users, it may provide functionalities that collect or store personal data, which would make websites that deploy the plugin in violation against GDPR if the plugin does not provide corresponding functionalities to allow users control their personal data. Therefore, plugin developers are responsible to provide functions to manage the personal data they handle in accordance with GDPR. We list requirements by specific GDPR articles relevant to your plugin below.


[Art. 13, Information to be provided where personal data are collected from the data subject] If a plugin collects or handles personal data, it needs to provide privacy policy texts that explain what personal data is being collected and for what purpose. The texts are meant to be added to the privacy policy of the websites that deploy the plugin. 


            
[Art.17, Right to erasure] If a plugin stores personal data in a custom database they create or manage, or through Wordpress's native storage functions (e.g., update_user_meta), it needs to provide methods for users to erase the data upon request. Note that deleting data for all users upon uninstallation does not satisfy the requirement. 


            
        

2. How do I make my plugin compliant?

Please refer to the fix report below to see how you can make your plugin comply with GDPR.

        

##################
### Fix Report ###
##################

############################
# Data Deletion Fix Report #
############################

This report suggests fixes to comply with the GDPR Art. 17, Right to erasure (https://gdpr-info.eu/art-17-gdpr/). The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/adding-the-personal-data-eraser-to-your-plugin/ for more details.

1) Implement a function that deletes all the user data collected in the plugin. Sample code:


/**
* Removes all collected data of a user.
*
* @param string $email_address   email address to manipulate
* @param int    $page            pagination
*
* @return array
*/
function baw-gravatar-google-image_remove_data( $email_address, $page = 1 ) {
    
    $page = (int) $page;





    // Tell core if we have more data to delete still
    $done = true;
    return array(
        'items_removed'  => $items_removed, // true if collected data of a user is being deleted
        'items_retained' => $items_retained, // true if certain data needs to be retained
        'messages'       => sprintf( __( 'Data of user with email %s successfully deleted.', 'baw-gravatar-google-image' ), $email_address ), // Put messages for data removal
        'done'           => $done, // true if all the removal processes are done (all data of the user is removed)
    );
}
        

2) Hook the deletion function to the Wordpress's Personal Data Removal tool


/**
* Registers all data erasers.
*
* @param array $exporters
*
* @return mixed
*/
function baw-gravatar-google-image_register_privacy_erasers( $erasers ) {
    $erasers['my-plugin-slug'] = array(
        'eraser_friendly_name' => __( '<eraser name>', 'baw-gravatar-google-image' ),
        'callback'             => 'baw-gravatar-google-image_remove_data',
    );
    return $erasers;
}
        

add_filter( 'wp_privacy_personal_data_erasers', 'baw-gravatar-google-image_register_privacy_erasers' );
        

        

#############################
# Privacy Policy Fix Report #
#############################

This report suggests fixes to comply with the GDPR Art. 13 (https://gdpr-info.eu/art-13-gdpr/) through including a privacy notice. The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/suggesting-text-for-the-site-privacy-policy/ for more details.

1) Implement a function that includes the privacy policy for the plugin and provide it to wordpress through wp_add_privacy_policy_content(). Sample code:


/**
* Adds a privacy policy statement.
*/
function baw-gravatar-google-image_add_privacy_policy_content() {
    if ( ! function_exists( 'wp_add_privacy_policy_content' ) ) {
        return;
    }
    //TODO: modify the content below to include the privacy policy for the plugin.
    $content = '<p class="privacy-policy-tutorial">' . __( 'Some introductory content for the suggested text.', 'baw-gravatar-google-image' ) . '</p>'
            . '<strong class="privacy-policy-tutorial">' . __( 'Suggested Text:', 'baw-gravatar-google-image' ) . '</strong> '
            . sprintf(
                __( 'When you leave a comment on this site, we send your name, email address, IP address and comment text to example.com. Example.com does not retain your personal data. The example.com privacy policy is <a href="%1$s" target="_blank">here</a>.', 'baw-gravatar-google-image' ),
                'https://example.com/privacy-policy'
            );
    wp_add_privacy_policy_content( 'baw-gravatar-google-image', wp_kses_post( wpautop( $content, false ) ) );
}
        

2) Hook the privacy policy function to the Wordpress's admin initialization action.


add_action( 'admin_init', 'baw-gravatar-google-image_add_privacy_policy_content' );
        

        


Disclaimer: The sample code provided above is only for reference and does not guarantee GDPR compliance. The recommended list of data to delete/export may not be comprehensive. 
        
Done.
