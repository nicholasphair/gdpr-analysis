Timeout in resolving values
Timeout in running neo4j query
Running Main.py on wp-post-expires

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.551990.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:00.980391.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 26 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.279169.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 2 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.595455.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 107 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:00.701251.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 3 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.640934.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.100612.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 55 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:00.913663.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 1067
Added 874 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 1339
Added 272 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:00.981691.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-post-expires/uninstall.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-post-expires/wp-post-expires.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.257921.

26 PHP_REACHES edges created
2 REACHES edges created
107 PHP_REACHES edges created
3 CALLS edges created
929 PHP_REACHES edges created
272 PHP_REACHES edges created
1339 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 358 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.011751.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.747368.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 1 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.377791.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 9 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.155450.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.035866.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.021829.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.010715.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.048965.

10 PHP_REACHES edges created
10 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 4 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.117699.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
No SQL nodes to process.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:00.137718.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'<input type="checkbox" name="xn_wppe_settings[post_types][$post_type]" value="1" checked>'' cannot be parsed correct.
HTML code '$'$post_type_obj'' cannot be parsed correct.
HTML code '$'<option selected value="add_prefix">Add Prefix</option>'' cannot be parsed correct.
HTML code '$'<option selected value="to_drafts">Move to drafts</option>'' cannot be parsed correct.
HTML code '$'<option selected value="to_trash">Move to trash</option>'' cannot be parsed correct.
HTML code '$'<input id="xn_wppe_settings_prefix" type="text" name="xn_wppe_settings[prefix]" value="$this_settings_prefix" class="regular-text">'' cannot be parsed correct.
HTML code '$'<p class="description">Enter the text you would like prepended to expired items.</p>'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "xn-wppe-expiration", true)'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'<label>'' cannot be parsed correct.
HTML code '$'</label> &nbsp;'' cannot be parsed correct.
HTML code '$'<select name="xn_wppe_settings[action]" id="xn_wppe_settings_action">'' cannot be parsed correct.
HTML code '$'</select>'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:02.675610.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.053040.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 0 do_action/apply_filters calls and 10 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.532648.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FileProDetector
### Start running FrontBaseDetector
### Finish running DbplusDetector
### Start running HashDetector
### Finish running CubridDetector
### Start running IBMDb2Detector
### Finish running DbaseDetector
### Start running InformixDetector
### Finish running FrontBaseDetector
### Start running IngresDetector
### Finish running FirebirdInterBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running MongoDbDetector
### Start running OpenSSLDetector
### Finish running Oci8Detector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running HashDetector
### Start running PhpCurlDetector
### Finish running ArrayElementDetector
### Start running PHPDataObjectDetector
### Finish running PasswordHashingDetector
### Start running PHPIncludedDetector
### Finish running OpenSSLDetector
### Start running PHPRetrievalDetector
### Finish running PHPDataObjectDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PhpCurlDetector
### Start running PhpVarDetector
### Finish running PHPIncludedDetector
### Start running PostgreSQLDetector
### Finish running PhpVarDetector
### Start running PropertyDetector
### Finish running PostgreSQLDetector
### Start running Sqlite3Detector
### Finish running Sqlite3Detector
### Start running SqliteDetector
### Finish running PHPRetrievalDetector
### Start running SqlServerDetector
### Finish running PHPStorageDetector
### Start running SybaseDetector
### Finish running SqliteDetector
### Start running TokyoTyrantDetector
### Finish running SybaseDetector
### Start running UserInputDetector
### Finish running TokyoTyrantDetector
### Start running VariableDetector
### Finish running PropertyDetector
### Start running WordpressHashingFnDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRemoteDetector
### Finish running SqlServerDetector
### Start running WordPressRetrievalDetector
### Finish running WordPressRemoteDetector
### Start running WordPressStorageDetector
### Finish running maxdbDetector
### Start running WP_UserDetector
### Finish running MySQLiDetector
### Start running GenericDatabaseUsageDetector
### Finish running WP_UserDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running UserInputDetector
### Start running UninstallDetector
### Finish running GenericDatabaseUsageDetector
### Finish running VariableDetector
### Finish running WordPressStorageDetector
### Finish running DeletionDetector
### Finish running WordPressRetrievalDetector
### Finish running UninstallDetector
### Finished running detectors
wp-post-expires.php:240
  - variable '$post_states' of personal types {'state'} is found.
  - Data types: state
wp-post-expires.php:241
  - variable '$post_states' of personal types {'state'} is found.
  - Data types: state 

wp-post-expires.php:67
  - RETRIEVAL call to get_option("xn_wppe_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-post-expires.php:129
  - RETRIEVAL call to get_post_meta($post->ID, "xn-wppe-expiration", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-post-expires.php:130
  - RETRIEVAL call to get_post_meta($post->ID, "xn-wppe-expiration-action", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-post-expires.php:131
  - RETRIEVAL call to get_post_meta($post->ID, "xn-wppe-expiration-prefix", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-post-expires.php:228
  - RETRIEVAL call to get_post_meta($post_id, "xn-wppe-expiration-prefix", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-post-expires.php:247
  - RETRIEVAL call to get_post_meta($post->ID, "xn-wppe-expiration-action", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-post-expires.php:276
  - RETRIEVAL call to get_post_meta($post_id, "xn-wppe-expiration", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-post-expires.php:278
  - RETRIEVAL call to get_option("date_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-post-expires.php:284
  - RETRIEVAL call to get_post_meta($post_id, "xn-wppe-expiration", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wp-post-expires.php:308
  - RETRIEVAL call to get_option("timezone_string") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wp-post-expires.php:312
  - RETRIEVAL call to get_option("gmt_offset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option 

uninstall.php:7
  - STORAGE call to delete_option("xn_wppe_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:8
  - STORAGE call to delete_post_meta_by_key("xn-wppe-expiration") alters data types {'post_meta'}. Passed arguments: 0: $post_meta_key (string). Returns (bool).
  - Data types: post_meta
uninstall.php:9
  - STORAGE call to delete_post_meta_by_key("xn-wppe-expiration-action") alters data types {'post_meta'}. Passed arguments: 0: $post_meta_key (string). Returns (bool).
  - Data types: post_meta
uninstall.php:10
  - STORAGE call to delete_post_meta_by_key("xn-wppe-expiration-prefix") alters data types {'post_meta'}. Passed arguments: 0: $post_meta_key (string). Returns (bool).
  - Data types: post_meta
wp-post-expires.php:181
  - STORAGE call to update_post_meta($post_id, "xn-wppe-expiration", $expiration) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-post-expires.php:182
  - STORAGE call to update_post_meta($post_id, "xn-wppe-expiration-action", $action_type) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-post-expires.php:184
  - STORAGE call to update_post_meta($post_id, "xn-wppe-expiration-prefix", $add_prefix) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wp-post-expires.php:187
  - STORAGE call to delete_post_meta($post_id, "xn-wppe-expiration") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
wp-post-expires.php:188
  - STORAGE call to delete_post_meta($post_id, "xn-wppe-expiration-action") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
wp-post-expires.php:189
  - STORAGE call to delete_post_meta($post_id, "xn-wppe-expiration-prefix") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
wp-post-expires.php:259
  - STORAGE call to wp_update_post(["ID" => $post->ID, "post_status" => "draft"]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error). 

uninstall.php:7
  - DELETION call to delete_option("xn_wppe_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
wp-post-expires.php:187
  - DELETION call to delete_post_meta($post_id, "xn-wppe-expiration") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
wp-post-expires.php:188
  - DELETION call to delete_post_meta($post_id, "xn-wppe-expiration-action") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
wp-post-expires.php:189
  - DELETION call to delete_post_meta($post_id, "xn-wppe-expiration-prefix") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta 

uninstall.php:7
  - Uninstall deletion call: DELETION call to delete_option("xn_wppe_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

By data type:
none
	WordPressStorageDetector.wp_update_post(["ID" => $post->ID, "post_status" => "draft"]) - set()
option
	DeletionDetector.delete_option("xn_wppe_settings") - {'option'}
	WordPressStorageDetector.delete_option("xn_wppe_settings") - {'option'}
	WordPressRetrievalDetector.get_option("timezone_string") - {'option'}
	WordPressRetrievalDetector.get_option("gmt_offset") - {'option'}
	UninstallDetector.delete_option("xn_wppe_settings") - {'option'}
	WordPressRetrievalDetector.get_option("xn_wppe_settings") - {'option'}
	WordPressRetrievalDetector.get_option("date_format") - {'option'}
post_meta
	WordPressStorageDetector.update_post_meta($post_id, "xn-wppe-expiration-action", $action_type) - {'post_meta'}
	DeletionDetector.delete_post_meta($post_id, "xn-wppe-expiration-action") - {'post_meta'}
	DeletionDetector.delete_post_meta($post_id, "xn-wppe-expiration-prefix") - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post_id, "xn-wppe-expiration") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "xn-wppe-expiration-action", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "xn-wppe-expiration", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "xn-wppe-expiration-prefix", $add_prefix) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "xn-wppe-expiration-prefix", false) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "xn-wppe-expiration-action", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "xn-wppe-expiration", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "xn-wppe-expiration", true) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post_id, "xn-wppe-expiration-prefix") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "xn-wppe-expiration-prefix", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "xn-wppe-expiration", $expiration) - {'post_meta'}
	WordPressStorageDetector.delete_post_meta($post_id, "xn-wppe-expiration-action") - {'post_meta'}
	WordPressStorageDetector.delete_post_meta_by_key("xn-wppe-expiration") - {'post_meta'}
	DeletionDetector.delete_post_meta($post_id, "xn-wppe-expiration") - {'post_meta'}
	WordPressStorageDetector.delete_post_meta_by_key("xn-wppe-expiration-action") - {'post_meta'}
	WordPressStorageDetector.delete_post_meta_by_key("xn-wppe-expiration-prefix") - {'post_meta'}
state
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:10.329493.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 67 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.242693.

67 STORE_REACHES edges created
67 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 4 nodes as PERSONAL
In total, tainted 4 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
In total, tainted 0 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:00.210682.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:00:31.407122!
DELETION call to delete_option("xn_wppe_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_post_meta($post_id, "xn-wppe-expiration") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($post_id, "xn-wppe-expiration-action") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($post_id, "xn-wppe-expiration-prefix") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("xn_wppe_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
variable '$post_states' of personal types {'state'} is found.,,None
variable '$post_states' of personal types {'state'} is found.,,None
RETRIEVAL call to get_post_meta($post->ID, "xn-wppe-expiration", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "xn-wppe-expiration-action", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "xn-wppe-expiration-prefix", false) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "xn-wppe-expiration-prefix", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post->ID, "xn-wppe-expiration-action", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "xn-wppe-expiration", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("date_format") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "xn-wppe-expiration", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("timezone_string") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("gmt_offset") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("xn_wppe_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
STORAGE call to delete_post_meta_by_key("xn-wppe-expiration-prefix") alters data types {'post_meta'}. Passed arguments: 0: $post_meta_key (string). Returns (bool).,None,None
STORAGE call to delete_option("xn_wppe_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_post_meta_by_key("xn-wppe-expiration") alters data types {'post_meta'}. Passed arguments: 0: $post_meta_key (string). Returns (bool).,None,None
STORAGE call to delete_post_meta_by_key("xn-wppe-expiration-action") alters data types {'post_meta'}. Passed arguments: 0: $post_meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($post_id, "xn-wppe-expiration", $expiration) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "xn-wppe-expiration-action", $action_type) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "xn-wppe-expiration-prefix", $add_prefix) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($post_id, "xn-wppe-expiration") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_post_meta($post_id, "xn-wppe-expiration-action") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to delete_post_meta($post_id, "xn-wppe-expiration-prefix") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to wp_update_post(["ID" => $post->ID, "post_status" => "draft"]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] Storage check is NONE 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['encryption', 'third_party'] 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? True 

No findings
