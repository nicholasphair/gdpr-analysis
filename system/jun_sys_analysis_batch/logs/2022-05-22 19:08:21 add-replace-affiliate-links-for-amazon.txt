Timeout in resolving values
Timeout in running neo4j query
Running Main.py on add-replace-affiliate-links-for-amazon

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.359107.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.037695.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 0 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.304563.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 0 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.433945.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 284 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:00.765035.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 42 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.996136.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.117346.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 126 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:02.074984.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 2067
Added 1615 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 2067
Added 0 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.206947.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/add-replace-affiliate-links-for-amazon/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/add-replace-affiliate-links-for-amazon/uninstall.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/add-replace-affiliate-links-for-amazon/upd-amazon.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/add-replace-affiliate-links-for-amazon/upd-amazon-plugin.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/add-replace-affiliate-links-for-amazon/templates/schedule-settings.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/add-replace-affiliate-links-for-amazon/templates/upd-amazon-plugin.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/add-replace-affiliate-links-for-amazon/templates/updated-records.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.810949.

284 PHP_REACHES edges created
42 CALLS edges created
1000 PHP_REACHES edges created
1741 PHP_REACHES edges created
2067 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 761 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.102345.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:02.171755.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 36 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:01.917904.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 45 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.199510.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.162755.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.533659.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.014000.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.033818.

81 PHP_REACHES edges created
81 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 36 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.167168.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
15 SQL operations to process.
DROP TABLE IF EXISTS $wpdbupd_amazon_plugin;
SQL command (DROP TABLE IF EXISTS $wpdbupd_amazon_plugin;) cannot be parsed correct.
DROP TABLE IF EXISTS $wpdbupd_amazon_updated_pages;
SQL command (DROP TABLE IF EXISTS $wpdbupd_amazon_updated_pages;) cannot be parsed correct.
CREATE TABLE IF NOT EXISTS $wpdbupd_amazon_plugin (
			id mediumint(9) NOT NULL AUTO_INCREMENT,
			time datetime DEFAULT '0000-00-00 00:00:00' NOT NULL,
			post_text text NOT NULL,
			post_id integer NOT NULL,
			PRIMARY KEY  (id)
		) $wpdb->get_charset_collate();
SQL command (CREATE TABLE IF NOT EXISTS $wpdbupd_amazon_plugin ( id mediumint(9) NOT NULL AUTO_INCREMENT, time datetime DEFAULT '0000-00-00 00:00:00' NOT NULL, post_text text NOT NULL, post_id integer NOT NULL, PRIMARY KEY (id) ) $wpdb->get_charset_collate();) cannot be parsed correct.
CREATE TABLE IF NOT EXISTS $wpdbupd_amazon_updated_pages (
			id mediumint(9) NOT NULL AUTO_INCREMENT,
			time datetime DEFAULT '0000-00-00 00:00:00' NOT NULL,
			post_id integer NOT NULL,
			PRIMARY KEY  (id)
		) $wpdb->get_charset_collate();
SQL command (CREATE TABLE IF NOT EXISTS $wpdbupd_amazon_updated_pages ( id mediumint(9) NOT NULL AUTO_INCREMENT, time datetime DEFAULT '0000-00-00 00:00:00' NOT NULL, post_id integer NOT NULL, PRIMARY KEY (id) ) $wpdb->get_charset_collate();) cannot be parsed correct.
CREATE TABLE IF NOT EXISTS $wpdbupd_amazon_jobs_log (
			id mediumint(9) NOT NULL AUTO_INCREMENT,
			time datetime DEFAULT '0000-00-00 00:00:00' NOT NULL,
			keyword text NOT NULL,
			percent integer NOT NULL,
			PRIMARY KEY  (id) 
		) $wpdb->get_charset_collate();
SQL command (CREATE TABLE IF NOT EXISTS $wpdbupd_amazon_jobs_log ( id mediumint(9) NOT NULL AUTO_INCREMENT, time datetime DEFAULT '0000-00-00 00:00:00' NOT NULL, keyword text NOT NULL, percent integer NOT NULL, PRIMARY KEY (id) ) $wpdb->get_charset_collate();) cannot be parsed correct.
DELETE FROM $wpdbupd_amazon_plugin;
SQL command (DELETE FROM $wpdbupd_amazon_plugin;) cannot be parsed correct.
DELETE FROM $wpdbupd_amazon_updated_pages;
SQL command (DELETE FROM $wpdbupd_amazon_updated_pages;) cannot be parsed correct.
SELECT post_id, post_text  FROM $wpdbupd_amazon_plugin;
SQL command (SELECT post_id, post_text FROM $wpdbupd_amazon_plugin;) cannot be parsed correct.
SELECT * from $wpdbupd_amazon_updated_pages;
SQL command (SELECT * from $wpdbupd_amazon_updated_pages;) cannot be parsed correct.
SELECT *, (time < NOW() - INTERVAL 1 HOUR) as is_old FROM $wpdbupd_amazon_jobs_log order by id desc limit 1;
SQL command (SELECT *, (time < NOW() - INTERVAL 1 HOUR) as is_old FROM $wpdbupd_amazon_jobs_log order by id desc limit 1;) cannot be parsed correct.
SELECT * FROM $wpdbupd_amazon_jobs_log where keyword != '' order by id desc limit 1;
SQL command (SELECT * FROM $wpdbupd_amazon_jobs_log where keyword != '' order by id desc limit 1;) cannot be parsed correct.
SELECT * FROM $wpdbupd_amazon_jobs_log order by id desc limit 1;
SQL command (SELECT * FROM $wpdbupd_amazon_jobs_log order by id desc limit 1;) cannot be parsed correct.
DELETE FROM $wpdbupd_amazon_updated_pages;
SQL command (DELETE FROM $wpdbupd_amazon_updated_pages;) cannot be parsed correct.
DELETE FROM $wpdbupd_amazon_updated_pages;
SQL command (DELETE FROM $wpdbupd_amazon_updated_pages;) cannot be parsed correct.
DELETE FROM $wpdbupd_amazon_updated_pages;
SQL command (DELETE FROM $wpdbupd_amazon_updated_pages;) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [413, 428, 1107, 1124, 1141, 1181, 1844, 2182, 2284, 2477, 2526, 2565, 2657, 3010, 3323]
Added 0 SQL nodes. 0 out of 15 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:05.728157.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'wp_create_nonce("upd-plugin-for-amazon-get_progress")'' cannot be parsed correct.
HTML code '$'wp_create_nonce("upd-plugin-for-amazon-no_affiliate")'' cannot be parsed correct.
HTML code '$'wp_create_nonce("upd-plugin-for-amazon-no_follow")'' cannot be parsed correct.
HTML code '$'wp_create_nonce("upd-plugin-for-amazon-expand")'' cannot be parsed correct.
HTML code '$'wp_create_nonce("upd-plugin-for-amazon-update")'' cannot be parsed correct.
HTML code '$'wp_create_nonce("upd-plugin-for-amazon-backup")'' cannot be parsed correct.
HTML code '$'wp_create_nonce("upd-plugin-for-amazon-restore")'' cannot be parsed correct.
HTML code '$'<input type=\'text\' id=\'new-id\' placeholder=\'Enter tracking ID tag\' value=\'$job_keyword\' name=\'new-id\'></input>'' cannot be parsed correct.
HTML code '$'plugin_dir_url()images/websiteflip-logo.png'' cannot be parsed correct.
HTML code '$'plugin_dir_url()images/easy-wins-logo.webp'' cannot be parsed correct.
HTML code '$'plugin_dir_url()images/rating.png'' cannot be parsed correct.
HTML code '$'wp_create_nonce("upd-plugin-for-amazon-get_progress")'' cannot be parsed correct.
HTML code '$'wp_create_nonce("upd-plugin-for-amazon-no_affiliate")'' cannot be parsed correct.
HTML code '$'wp_create_nonce("upd-plugin-for-amazon-no_follow")'' cannot be parsed correct.
HTML code '$'wp_create_nonce("upd-plugin-for-amazon-expand")'' cannot be parsed correct.
HTML code '$'wp_create_nonce("upd-plugin-for-amazon-update")'' cannot be parsed correct.
HTML code '$'wp_create_nonce("upd-plugin-for-amazon-backup")'' cannot be parsed correct.
HTML code '$'wp_create_nonce("upd-plugin-for-amazon-restore")'' cannot be parsed correct.
HTML code '$'<tr>
					<td>
						<a target=\'_blank\' href=\'get_permalink($rec->post_id)\'>get_the_title($rec->post_id)</a>
					</td>
					<td>
						$rec;
					</td>
				</tr>'' cannot be parsed correct.
HTML code '$'						<p class="description">
							Update settings
							<br>
						</p>
					</td>
				</tr>
			</tbody>
		</table>
	</form>
</div>

<script>
	
	jQuery(document).ready(function($) {
		progressUpdate();
		setInterval(progressUpdate, 5000);

		function progressUpdate() {
			jQuery.post(
				ajaxurl,
				{
					action: \'uralp_get_progress\',
					security: \''' cannot be parsed correct.
HTML code '$'<input type=\'text\' id=\'new-id\' placeholder=\'Enter tracking ID tag\' name=\'new-id\'></input>'' cannot be parsed correct.
HTML code '$'

							</td>
						</tr>
						<tr>
							<th>Option 2: Add or Replace Existing ID Tag</th>
							<td>
								<p class="description">
									The website already has long Amazon links and you would like to bulk replace them with a new ID tag. For example, you are using ID tag âTEST123-20â. You would like to change to âNEW123-20â.
								</p>
								<br>
								<p class="description">
									<i>Tip:</i> This is useful if you want to change tracking to a new tag you manage, or you recently purchase/sold a site and need to change the ID tag.
								</p>
								<br>
								'' cannot be parsed correct.
HTML code '$'
							</td>
						</tr>
						<tr>
							<th>Option 3: Add NoFollow Link Attribute</th>
							<td>
								<p class="description">
									Add rel=ânofollowâ attribute to all Amazon affiliate links

								</p>
								<br>
								'' cannot be parsed correct.
HTML code '$'
							</td>
						</tr>
						<tr>
							<th>Option 4: Remove Amazon Affiliate ID Tag</th>
							<td>
								<p class="description">Remove existing Amazon affiliate ID tags from all links</p>
								<br>
								<p class="description">
									<i>Tip:</i> This will not remove the Amazon links. It will only remove the affiliate ID tag (i.e., TEST123-20 will be removed), thus making that non-affiliate links.
								</p>
								<br>
								'' cannot be parsed correct.
HTML code '$'
							</td>
						</tr>
					</tbody>
				</table>
			</form>
		</div>
		<div class="upd_content_cell" id="sidebar-container">

			<div class="rating__box__wrapper bg-alterOne">
				<div class="rating_box_header">
					<h6 class="rating_box_header--title">Website Flipping Newsletter</h6>
				</div>
				<div class="rating_box_body">
					<a href="https://go.thewebsiteflip.com/from-amzplugin/sidebar/logo " target="_blank"><img src="'' cannot be parsed correct.
HTML code '$'" alt="WebsiteFlip" class="rating__brand--logo"></a>
					<p class="rating__body--text">
						Get thrice-weekly newsletters on website growth case studies, guides, and websites for sale
					</p>

					<a href="https://go.thewebsiteflip.com/from-amzplugin/sidebar/btn" target="_blank" class="rating__learn--btn">
						Learn More
					</a>
				</div>
				<div class="rating_box_footer"></div>
			</div>

			<div class="rating__box__wrapper">
				<div class="rating_box_header">
					<h6 class="rating_box_header--title">Increase website revenue</h6>
				</div>
				<div class="rating_box_body">
					<a href="https://go.easywins.io/offer/amzpluginsidebar/logo" target="_blank"><img src="'' cannot be parsed correct.
HTML code '$'<table class="widefat fixed"><thead><th>Page Name</th><th>Update time</th></thead><tbody>'' cannot be parsed correct.
HTML code '$'</tbody></table>'' cannot be parsed correct.
HTML code '$'<b style="font-size: 16px;">No pages found.</b>'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:02.749525.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.053926.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 0 do_action/apply_filters calls and 14 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.737960.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbplusDetector
### Start running FrontBaseDetector
### Finish running FirebirdInterBaseDetector
### Start running HashDetector
### Finish running DbaseDetector
### Start running IBMDb2Detector
### Finish running FileProDetector
### Start running InformixDetector
### Finish running CubridDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running Oci8Detector
### Start running OpenSSLDetector
### Finish running MongoDbDetector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running HashDetector
### Start running PhpCurlDetector
### Finish running ArrayElementDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PasswordHashingDetector
### Start running PHPRetrievalDetector
### Finish running PHPIncludedDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PhpCurlDetector
### Start running PhpVarDetector
### Finish running OpenSSLDetector
### Start running PostgreSQLDetector
### Finish running PhpVarDetector
### Start running PropertyDetector
### Finish running PostgreSQLDetector
### Start running Sqlite3Detector
### Finish running PHPStorageDetector
### Start running SqliteDetector
### Finish running PHPRetrievalDetector
### Start running SqlServerDetector
### Finish running SqliteDetector
### Start running SybaseDetector
### Finish running SybaseDetector
### Start running TokyoTyrantDetector
### Finish running Sqlite3Detector
### Start running UserInputDetector
### Finish running PropertyDetector
### Start running VariableDetector
### Finish running TokyoTyrantDetector
### Start running WordpressHashingFnDetector
### Finish running MySQLiDetector
### Start running WordPressRemoteDetector
### Finish running maxdbDetector
### Start running WordPressRetrievalDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressStorageDetector
### Finish running SqlServerDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running VariableDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running GenericDatabaseUsageDetector
### Start running UninstallDetector
### Finish running UserInputDetector
### Finish running WordPressRemoteDetector
### Finish running WordPressStorageDetector
### Finish running WordPressRetrievalDetector
### Finish running DeletionDetector
### Finish running UninstallDetector
### Finished running detectors
upd-amazon.php:103
  - API call to wp_remote_get($url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote 

upd-amazon.php:22
  - RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).
upd-amazon.php:30
  - RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).
upd-amazon.php:39
  - RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).
upd-amazon.php:53
  - RETRIEVAL call to get_posts(["numberposts" => -1, "post_status" => "any", "post_type" => ["page", "post", "shortcoder"]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
upd-amazon.php:166
  - RETRIEVAL call to get_posts(["numberposts" => -1, "post_status" => "any", "post_type" => ["page", "post", "shortcoder"]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
upd-amazon.php:325
  - RETRIEVAL call to get_posts(["numberposts" => -1, "post_status" => "any", "post_type" => ["page", "post", "shortcoder"]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
upd-amazon.php:381
  - RETRIEVAL call to get_posts(["numberposts" => -1, "post_status" => "any", "post_type" => ["page", "post", "shortcoder"]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
upd-amazon.php:430
  - RETRIEVAL call to get_posts(["numberposts" => -1, "post_status" => "any", "post_type" => ["page", "post", "shortcoder"]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]). 

upd-amazon.php:195
  - STORAGE call to wp_update_post(wp_slash($post)). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
upd-amazon.php:234
  - STORAGE call to wp_update_post($post). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
upd-amazon.php:358
  - STORAGE call to wp_update_post($post). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
upd-amazon.php:409
  - STORAGE call to wp_update_post($post). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
upd-amazon.php:458
  - STORAGE call to wp_update_post($post). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error). 

By data type:
none
	WordPressRetrievalDetector.dbDelta($sql) - set()
	WordPressRetrievalDetector.dbDelta($sql) - set()
	WordPressRetrievalDetector.dbDelta($sql) - set()
	WordPressRetrievalDetector.get_posts(["numberposts" => -1, "post_status" => "any", "post_type" => ["page", "post", "shortcoder"]]) - set()
	WordPressStorageDetector.wp_update_post($post) - set()
	WordPressRetrievalDetector.get_posts(["numberposts" => -1, "post_status" => "any", "post_type" => ["page", "post", "shortcoder"]]) - set()
	WordPressRetrievalDetector.get_posts(["numberposts" => -1, "post_status" => "any", "post_type" => ["page", "post", "shortcoder"]]) - set()
	WordPressStorageDetector.wp_update_post($post) - set()
	WordPressRetrievalDetector.get_posts(["numberposts" => -1, "post_status" => "any", "post_type" => ["page", "post", "shortcoder"]]) - set()
	WordPressRetrievalDetector.get_posts(["numberposts" => -1, "post_status" => "any", "post_type" => ["page", "post", "shortcoder"]]) - set()
	WordPressStorageDetector.wp_update_post(wp_slash($post)) - set()
	WordPressStorageDetector.wp_update_post($post) - set()
	WordPressStorageDetector.wp_update_post($post) - set()
remote
	WordPressRemoteDetector.(unknown) - {'remote'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:07.438959.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 0 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.113377.

0 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
In total, tainted 0 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
In total, tainted 0 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:00.007695.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:00:37.673272!
API call to wp_remote_get($url, $args). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
RETRIEVAL call to get_posts(["numberposts" => -1, "post_status" => "any", "post_type" => ["page", "post", "shortcoder"]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to get_posts(["numberposts" => -1, "post_status" => "any", "post_type" => ["page", "post", "shortcoder"]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_posts(["numberposts" => -1, "post_status" => "any", "post_type" => ["page", "post", "shortcoder"]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to get_posts(["numberposts" => -1, "post_status" => "any", "post_type" => ["page", "post", "shortcoder"]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_posts(["numberposts" => -1, "post_status" => "any", "post_type" => ["page", "post", "shortcoder"]]). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
STORAGE call to wp_update_post(wp_slash($post)). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to wp_update_post($post). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to wp_update_post($post). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to wp_update_post($post). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to wp_update_post($post). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found no personal data in the plugin. No analysis needed. 

[main] Complaint? True 

No findings
