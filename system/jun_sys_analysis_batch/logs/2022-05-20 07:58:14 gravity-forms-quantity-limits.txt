Timeout in resolving values
Timeout in running neo4j query
Running Main.py on gravity-forms-quantity-limits

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.393935.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.023850.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 25 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.388812.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 1 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.597467.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 421 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:00.882750.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 37 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:01.259786.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.108109.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 170 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:02.251976.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 3023
Added 2369 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 3023
Added 0 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.130450.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gravity-forms-quantity-limits/gravity-forms-limiter.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gravity-forms-quantity-limits/inc/data.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gravity-forms-quantity-limits/inc/gf_field_sum.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.407721.

25 PHP_REACHES edges created
1 REACHES edges created
421 PHP_REACHES edges created
37 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
2539 PHP_REACHES edges created
3023 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 1073 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.022682.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:01.467608.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 1468
Added 66 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:02.494141.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 80 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.201889.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.126901.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Error! AST Method should have parameters but the parameters cannot be matched. FuncID: 1468
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.562451.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.018455.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.046379.

146 PHP_REACHES edges created
146 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 67 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.126107.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
7 SQL operations to process.
CREATE TABLE $table_name (
              id mediumint(8) unsigned not null auto_increment,
              form_id mediumint(8) unsigned not null,
              field_id float unsigned not null,
              quantity_limit mediumint(8) unsigned not null,
              is_active tinyint(1) not null default 1,
              meta longtext,
              PRIMARY KEY  (id),
              KEY form_id (form_id)
            ) DEFAULT CHARACTER SET $wpdb;
SQL command (CREATE TABLE $table_name ( id mediumint(8) unsigned not null auto_increment, form_id mediumint(8) unsigned not null, field_id float unsigned not null, quantity_limit mediumint(8) unsigned not null, is_active tinyint(1) not null default 1, meta longtext, PRIMARY KEY (id), KEY form_id (form_id) ) DEFAULT CHARACTER SET $wpdb;) cannot be parsed correct.
SELECT s.id, s.is_active, s.form_id, s.field_id, s.quantity_limit, s.meta, f.title as form_title
                FROM $table_name s
                INNER JOIN $form_table_name f ON s.form_id = f.id
SQL command (SELECT s.id, s.is_active, s.form_id, s.field_id, s.quantity_limit, s.meta, f.title as form_title FROM $table_name s INNER JOIN $form_table_name f ON s.form_id = f.id) cannot be parsed correct.
SELECT id, form_id, is_active, meta FROM $table_name WHERE form_id=$form_id $active_clause
SELECT id, form_id, is_active, meta FROM $table_name WHERE form_id=$form_id $active_clause
SQL command (SELECT id, form_id, is_active, meta FROM $table_name WHERE form_id=$form_id $active_clause) cannot be parsed correct.
SELECT id, form_id, field_id, quantity_limit, is_active, meta FROM $table_name WHERE id=$_POST_feed_id
SELECT id, form_id, field_id, quantity_limit, is_active, meta FROM $table_name WHERE id=$_POST_feed_id
SQL command (SELECT id, form_id, field_id, quantity_limit, is_active, meta FROM $table_name WHERE id=$_POST_feed_id) cannot be parsed correct.
SELECT id FROM $table_name WHERE form_id=$form_id AND CAST(field_id as unsigned)=%s
SELECT id FROM $table_name WHERE form_id=$form_id AND CAST(field_id as unsigned)=floor($field_id)
SELECT id FROM $table_name WHERE form_id=$form_id AND CAST(field_id as unsigned)=floor($field_id)
SQL command (SELECT id FROM $table_name WHERE form_id=$form_id AND CAST(field_id as unsigned)=floor($field_id)) cannot be parsed correct.
DELETE FROM $table_name WHERE id=absint($_POST["action_argument"])
DELETE FROM $table_name WHERE id=absint($_POST["action_argument"])
SQL command (DELETE FROM $table_name WHERE id=absint($_POST["action_argument"])) cannot be parsed correct.
DROP TABLE IF EXISTS 
SQL command (DROP TABLE IF EXISTS ) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [3834, 3897, 4050, 4155, 4245, 3977, 4450]
Added 0 SQL nodes. 0 out of 7 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:03.362044.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'<input type="submit" class="button" value="Apply" onclick="if( jQuery(\'#bulk_action\').val() == \'delete\' && !confirm(\'Delete selected feeds? \'Cancel\' to stop, \'OK\' to delete.\')) { return false; } return true;"/'' cannot be parsed correct.
HTML code '$'$feed_id'' cannot be parsed correct.
HTML code '$'intval($feed["is_active"])'' cannot be parsed correct.
HTML code '$'ActiveInactive'' cannot be parsed correct.
HTML code '$'ActiveInactive'' cannot be parsed correct.
HTML code '$'$feed_id'' cannot be parsed correct.
HTML code '$'$feed_id'' cannot be parsed correct.
HTML code '$'$feed_form_title'' cannot be parsed correct.
HTML code '$'$feed_id'' cannot be parsed correct.
HTML code '$'$feed_id'' cannot be parsed correct.
HTML code '$'$feed_meta_field_name'' cannot be parsed correct.
HTML code '$'$feed_quantity_limit'' cannot be parsed correct.
HTML code '$'sprintf(__("You don\\'t have any Quantity Limits configured. Let\\'s go %screate one%s!", "gf-limit"), "<a href="admin.php?page=gf_limit&view=edit&id=0">", "</a>")'' cannot be parsed correct.
HTML code '$'admin_url("admin-ajax.php")'' cannot be parsed correct.
HTML code '$'wp_create_nonce("gf_limit_update_feed_active")'' cannot be parsed correct.
HTML code '$'sprintf(__("Limit set.  %sBack to list.%s", "gf-limit"), "<a href=\\'?page=gf_limit\\'>", "</a>")'' cannot be parsed correct.
HTML code '$'$id'' cannot be parsed correct.
HTML code '$'apply_filters("gf_limit_feed_save_config", $config)_meta_field_name'' cannot be parsed correct.
HTML code '$'limit_validation_error'' cannot be parsed correct.
HTML code '$'style=\'display:none;\''' cannot be parsed correct.
HTML code '$'rgar($config, "id")'' cannot be parsed correct.
HTML code '$'absint($current_form->id)'' cannot be parsed correct.
HTML code '$'apply_filters("gf_limit_feed_save_config", $config)'' cannot be parsed correct.
HTML code '$'$current_form'' cannot be parsed correct.
HTML code '$'style=\'display:none;\''' cannot be parsed correct.
HTML code '$'apply_filters("gf_limit_feed_save_config", $config)_quantity_limit'' cannot be parsed correct.
HTML code '$'apply_filters("gf_limit_feed_save_config", $config)_meta_messages_sold_out'' cannot be parsed correct.
HTML code '$'apply_filters("gf_limit_feed_save_config", $config)_meta_messages_validation'' cannot be parsed correct.
HTML code '$'apply_filters("gf_limit_feed_save_config", $config)_meta_messages_remainder'' cannot be parsed correct.
HTML code '$'  Save  Update'' cannot be parsed correct.
HTML code '$'wp_create_nonce("gfp_select_limit_form")'' cannot be parsed correct.
HTML code '$'</th>
					<th scope="col" class="manage-column">'' cannot be parsed correct.
HTML code '$'</th>
					<th scope="col" class="manage-column">'' cannot be parsed correct.
HTML code '$'</th>
					<th scope="col" class="manage-column">'' cannot be parsed correct.
HTML code '$'</th>
				</tr>
				</thead>

				<tfoot>
				<tr>
					<th scope="col" id="cb" class="manage-column column-cb check-column" style=""><input type="checkbox"/></th>
					<!--<th scope="col" id="active" class="manage-column check-column"></th>-->
					<th scope="col" class="manage-column">'' cannot be parsed correct.
HTML code '$'</th>
					<th scope="col" class="manage-column">'' cannot be parsed correct.
HTML code '$'</th>
					<th scope="col" class="manage-column">'' cannot be parsed correct.
HTML code '$'</th>
					<th scope="col" class="manage-column">'' cannot be parsed correct.
HTML code '$'</th>
				</tr>
				</tfoot>

				<tbody class="list:user user-list">
					'' cannot be parsed correct.
HTML code '$'"/></th>
							<!--<td><img
									src="'' cannot be parsed correct.
HTML code '$'/images/active'' cannot be parsed correct.
HTML code '$'.png"
									alt="'' cannot be parsed correct.
HTML code '$'); "/></td>-->
							<td class="column-title">
								<a href="admin.php?page=gf_limit&view=edit&id='' cannot be parsed correct.
HTML code '$'"
									 title="'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</a>

								<div class="row-actions">
                                    <span class="edit">
                                    <a title="'' cannot be parsed correct.
HTML code '$'"
									 href="admin.php?page=gf_limit&view=edit&id='' cannot be parsed correct.
HTML code '$'"
									 title="'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</a>
                                    |
                                    </span>
                                    <span>
                                    <a title='' cannot be parsed correct.
HTML code '$'"
									 href="javascript: if(confirm(\''' cannot be parsed correct.
HTML code '$' '' cannot be parsed correct.
HTML code '$'\')){ DeleteFeed('' cannot be parsed correct.
HTML code '$');}"'' cannot be parsed correct.
HTML code '$'</a>
                                    </span>
								</div>
							</td>
							<td class="column-date">
							'' cannot be parsed correct.
HTML code '$'\').attr(\'alt\', \''' cannot be parsed correct.
HTML code '$'\');
			}
			else {
				img.src = img.src.replace("active0.png", "active1.png");
				jQuery(img).attr(\'title\', \''' cannot be parsed correct.
HTML code '$'\').attr(\'alt\', \''' cannot be parsed correct.
HTML code '$'\');
			}

			var mysack = new sack('' cannot be parsed correct.
HTML code '$'");
			mysack.execute = 1;
			mysack.method = \'POST\';
			mysack.setVar("action", "gf_limit_update_feed_active");
			mysack.setVar("gf_limit_update_feed_active", "'' cannot be parsed correct.
HTML code '$'");
			mysack.setVar("feed_id", feed_id);
			mysack.setVar("is_active", is_active ? 0 : 1);
			mysack.encVar("cookie", document.cookie, false);
			mysack.onError = function () {
				alert(\''' cannot be parsed correct.
HTML code '$'\')
			};
			mysack.runAJAX();

			return true;
		}


	</script>
	'' cannot be parsed correct.
HTML code '$'/js/gravityforms.js"></script>
		<script type="text/javascript">
			var form = Array();
		</script>

		<div class="wrap">

		<h2>'' cannot be parsed correct.
HTML code '$'</h2>

			'' cannot be parsed correct.
HTML code '$'</div>
					'' cannot be parsed correct.
HTML code '$'" />
		<input type="hidden" id="limit_field_name" name="limit_field_name" value="'' cannot be parsed correct.
HTML code '$'"/>

		<div class="margin_vertical_10 '' cannot be parsed correct.
HTML code '$'">
		'' cannot be parsed correct.
HTML code '$'
				<input id="gf_limit_type" type="hidden" name="gf_limit_type" value="product">

	'' cannot be parsed correct.
HTML code '$'>
			<label for="gf_limit_form" class="left_header">'' cannot be parsed correct.
HTML code '$'</label>

			<select id="gf_limit_form" name="gf_limit_form"
				onchange="SelectForm(jQuery(\'#gf_limit_type\').val(), jQuery(this).val(), \''' cannot be parsed correct.
HTML code '$'\');">
				<option value="">'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'</option>

				'' cannot be parsed correct.
HTML code '$'/images/loading.gif" id="limit_wait" style="display: none;"/>

			<div id="gf_limit_invalid_product_form" class="gf_limit_invalid_form" style="display:none;">
				'' cannot be parsed correct.
HTML code '$'			</div>
		</div>
		<div id="limit_field_group" valign="top" '' cannot be parsed correct.
HTML code '$'>


		'' cannot be parsed correct.
HTML code '$'</label>

				<div id="form_fields">
					'' cannot be parsed correct.
HTML code '$'</div>
		'' cannot be parsed correct.
HTML code '$'</div>
		'' cannot be parsed correct.
HTML code '$'</a>

		</h2>

		<form id="feed_form" method="post">
			'' cannot be parsed correct.
HTML code '$'			<input type="hidden" id="action" name="action"/>
			<input type="hidden" id="action_argument" name="action_argument"/>

			<div class="tablenav">
				<div class="alignleft actions" style="padding:8px 0 7px 0;">
					<label class="hidden" for="bulk_action">'' cannot be parsed correct.
HTML code '$'</label>
					<select name="bulk_action" id="bulk_action">
						<option value=\'\'> '' cannot be parsed correct.
HTML code '$' </option>
						<option value=\'delete\'>'' cannot be parsed correct.
HTML code '$'</option>
					</select>
					'' cannot be parsed correct.
HTML code '$'</label>

				<div id="form_fields">
					<input type="text" name="limit_limit" value="'' cannot be parsed correct.
HTML code '$'"/>
				</div>
			</div>

			<div class="margin_vertical_10">
				<label class="left_header">'' cannot be parsed correct.
HTML code '$'</label>

				<div id="form_fields">
					<input type="text" name="limit_message_sold_out" value="'' cannot be parsed correct.
HTML code '$'" class="regular-text"/>
				</div>
			</div>

			<div class="margin_vertical_10">
				<label class="left_header">'' cannot be parsed correct.
HTML code '$'</label>

				<div id="form_fields">
					<input type="text" name="limit_message_validation" value="'' cannot be parsed correct.
HTML code '$'" class="regular-text"/>
					<p class="description">Use <em>{remaining}</em> to display remaining number of items and <em>{ordered}</em> to display number of ordered items.</p>
				</div>
			</div>

			<div class="margin_vertical_10">
				<label class="left_header">'' cannot be parsed correct.
HTML code '$'</label>

				<div id="form_fields">
					<input type="text" name="limit_message_remainder" value="'' cannot be parsed correct.
HTML code '$'" class="regular-text"/>
					<p class="description">Use <em>{remaining}</em> to display remaining number of items. If left blank, no remainder message will show.</p>
				</div>
			</div>

		'' cannot be parsed correct.
HTML code '$'");
				mysack.setVar("type", type);
				mysack.setVar("form_id", formId);
				mysack.setVar("setting_id", settingId);
				mysack.encVar("cookie", document.cookie, false);
				mysack.onError = function () {
					jQuery("#limit_wait").hide();
					alert(\''' cannot be parsed correct.
HTML code '$'\')
				};
				mysack.runAJAX();

				return true;
			}

			function EndSelectForm(form_meta, quantity_fields, additional_functions) {
				//setting global form object
				form = form_meta;

				if ( ! ( typeof additional_functions === \'null\' ) ) {
					var populate_field_options = additional_functions.populate_field_options;
					var post_update_action = additional_functions.post_update_action;
					var show_fields = additional_functions.show_fields;
				}
				else {
					var populate_field_options = \'\';
					var post_update_action = \'\';
					var show_fields = \'\';
				}

				var type = jQuery("#gf_limit_type").val();

				jQuery(".gf_limit_invalid_form").hide();
				if ((type == "product" || type == "subscription") && GetFieldsByType(["product"]).length == 0) {
					jQuery("#gf_limit_invalid_product_form").show();
					jQuery("#limit_wait").hide();
					return;
				}

				jQuery(".limit_field_container").hide();
				jQuery("#form_fields").html(quantity_fields);
				if ( populate_field_options.length > 0 ) {
					var func;
					for ( var i = 0; i < populate_field_options.length; i++ ) {
						func = new Function(populate_field_options[ i ]);
						func();
					}
				}

				var post_fields = GetFieldsByType(["post_title", "post_content", "post_excerpt", "post_category", "post_custom_field", "post_image", "post_tag"]);
				if ( post_update_action.length > 0 ) {
					var func;
					for ( var i = 0; i < post_update_action.length; i++ ) {
						func = new Function(\'type\', \'post_fields\', post_update_action[ i ]);
						func(type, post_fields);
					}
				}
				else {
					jQuery("#gf_limit_update_post").attr("checked", false);
					jQuery("#limit_post_update_action").hide();
				}


				//Calling callback functions
				jQuery(document).trigger(\'limitFormSelected\', [form]);

				jQuery("#gf_limit_conditional_enabled").attr(\'checked\', false);

				jQuery("#limit_field_container_" + type).show();
				if ( show_fields.length > 0 ) {
					var func;
					for ( var i = 0; i < show_fields.length; i++ ) {
						func = new Function(\'type\', show_fields[ i ]);
						func(type);
					}
				}

				jQuery("#limit_field_group").slideDown();
				jQuery("#limit_wait").hide();
			}


			function GetFieldsByType(types) {
				var fields = new Array();
				for (var i = 0; i < form["fields"].length; i++) {
					if (IndexOf(types, form["fields"][i]["type"]) >= 0)
						fields.push(form["fields"][i]);
				}
				return fields;
			}

			function IndexOf(ary, item) {
				for (var i = 0; i < ary.length; i++)
					if (ary[i] == item)
						return i;

				return -1;
			}

			// Populate name of field in our hidden input
			jQuery(\'form\').on(\'change\', \'select[name=limit_field_id]\', function(){
				var val = jQuery(\'select[name=limit_field_id] option:selected\').text();
				jQuery(\'#limit_field_name\').val(val);
			});

		</script>
		'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:06.771693.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.043846.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 11 do_action/apply_filters calls and 13 add_action/add_filter calls. Now connecting do-add pairs.
Added 1 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:01.159693.

1 PHP_REACHES edges created
1 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbplusDetector
### Start running FrontBaseDetector
### Finish running FileProDetector
### Start running HashDetector
### Finish running DbaseDetector
### Start running IBMDb2Detector
### Finish running CubridDetector
### Start running InformixDetector
### Finish running FirebirdInterBaseDetector
### Start running IngresDetector
### Finish running InformixDetector
### Start running maxdbDetector
### Finish running FrontBaseDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running IBMDb2Detector
### Start running MsqlDetector
### Finish running MongoDetector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running MongoDbDetector
### Start running OpenSSLDetector
### Finish running Oci8Detector
### Start running ParadoxDetector
### Finish running ArrayElementDetector
### Start running PasswordHashingDetector
### Finish running ParadoxDetector
### Start running PhpCurlDetector
### Finish running HashDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PasswordHashingDetector
### Start running PHPRetrievalDetector
### Finish running PhpCurlDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPIncludedDetector
### Start running PhpVarDetector
### Finish running OpenSSLDetector
### Start running PostgreSQLDetector
### Finish running PhpVarDetector
### Start running PropertyDetector
### Finish running PHPStorageDetector
### Start running Sqlite3Detector
### Finish running PHPRetrievalDetector
### Start running SqliteDetector
### Finish running PostgreSQLDetector
### Start running SqlServerDetector
### Finish running SqliteDetector
### Start running SybaseDetector
### Finish running SybaseDetector
### Start running TokyoTyrantDetector
### Finish running TokyoTyrantDetector
### Start running UserInputDetector
### Finish running Sqlite3Detector
### Start running VariableDetector
### Finish running PropertyDetector
### Start running WordpressHashingFnDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRemoteDetector
### Finish running SqlServerDetector
### Start running WordPressRetrievalDetector
### Finish running WordPressRemoteDetector
### Start running WordPressStorageDetector
### Finish running maxdbDetector
### Start running WP_UserDetector
### Finish running MySQLiDetector
### Start running GenericDatabaseUsageDetector
### Finish running WP_UserDetector
### Start running GenericEncryptionDetector
### Finish running VariableDetector
### Start running DeletionDetector
### Finish running GenericEncryptionDetector
### Start running UninstallDetector
### Finish running GenericDatabaseUsageDetector
### Finish running UserInputDetector
### Finish running WordPressStorageDetector
### Finish running WordPressRetrievalDetector
### Finish running DeletionDetector
### Finish running UninstallDetector
### Finished running detectors
gravity-forms-limiter.php:170
  - RETRIEVAL call to get_option("gf_limit_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
gravity-forms-limiter.php:527
  - RETRIEVAL call to get_option("gf_limit_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
gravity-forms-limiter.php:866
  - RETRIEVAL call to get_option("recently_activated") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
inc/data.php:25
  - RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array). 

gravity-forms-limiter.php:175
  - STORAGE call to update_option("gf_limit_version", self"version") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
gravity-forms-limiter.php:860
  - STORAGE call to delete_option("gf_limit_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
gravity-forms-limiter.php:861
  - STORAGE call to delete_option("gf_limit_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
gravity-forms-limiter.php:866
  - STORAGE call to update_option("recently_activated", [$plugin => time()] + get_option("recently_activated")) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option 

gravity-forms-limiter.php:860
  - DELETION call to delete_option("gf_limit_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
gravity-forms-limiter.php:861
  - DELETION call to delete_option("gf_limit_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

By data type:
none
	WordPressRetrievalDetector.dbDelta($sql) - set()
option
	WordPressRetrievalDetector.get_option("gf_limit_version") - {'option'}
	WordPressRetrievalDetector.get_option("recently_activated") - {'option'}
	WordPressStorageDetector.delete_option("gf_limit_version") - {'option'}
	DeletionDetector.delete_option("gf_limit_settings") - {'option'}
	WordPressStorageDetector.delete_option("gf_limit_settings") - {'option'}
	WordPressStorageDetector.update_option("gf_limit_version", self"version") - {'option'}
	DeletionDetector.delete_option("gf_limit_version") - {'option'}
	WordPressRetrievalDetector.get_option("gf_limit_settings") - {'option'}
	WordPressStorageDetector.update_option("recently_activated", [$plugin => time()] + get_option("recently_activated")) - {'option'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:06.701496.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 12 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.087218.

12 STORE_REACHES edges created
12 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
In total, tainted 0 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
In total, tainted 0 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:00.007443.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:00:46.109536!
DELETION call to delete_option("gf_limit_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("gf_limit_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
RETRIEVAL call to get_option("gf_limit_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("gf_limit_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("recently_activated") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
STORAGE call to update_option("gf_limit_version", self"version") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("gf_limit_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("gf_limit_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("recently_activated", [$plugin => time()] + get_option("recently_activated")) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found no personal data in the plugin. No analysis needed. 

[main] Complaint? True 

No findings
