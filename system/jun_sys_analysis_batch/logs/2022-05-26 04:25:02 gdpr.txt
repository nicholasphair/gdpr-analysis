Timeout in resolving values
Timeout in running neo4j query
Running Main.py on gdpr

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:01.040761.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.153704.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 39 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.499200.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 3 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.644901.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 1194 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:01.213948.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 89 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:01.485359.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.107375.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 542 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:11.336194.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 13617
Added 11750 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 18359
Added 4742 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:02.397878.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/gdpr.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/uninstall.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/admin/class-gdpr-admin.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/admin/class-gdpr-requests-admin.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/admin/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/admin/partials/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/admin/partials/requests.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/admin/partials/settings.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/admin/partials/tools.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/admin/partials/templates/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/admin/partials/templates/tmpl-consents.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/admin/partials/templates/tmpl-cookies.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/admin/partials/templates/tmpl-tools.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/includes/class-gdpr-activator.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/includes/class-gdpr-audit-log.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/includes/class-gdpr-deactivator.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/includes/class-gdpr-email.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/includes/class-gdpr-help.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/includes/class-gdpr.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/includes/class-gdpr-requests.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/includes/class-gdpr-templates.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/includes/compatibility-functions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/includes/helper-functions.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/includes/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/public/class-gdpr-public.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/public/class-gdpr-requests-public.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/public/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/public/partials/confirmation-screens.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/public/partials/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/public/partials/reconsent-modal.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/templates/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/templates/privacy-bar.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/templates/privacy-preferences-modal.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/templates/reconsent-bar.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/templates/reconsent-modal.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/templates/email/complaint-request.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/templates/email/complaint-resolved.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/templates/email/data-breach-notification.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/templates/email/data-breach-request.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/templates/email/delete-request.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/templates/email/delete-resolved.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/templates/email/export-data-request.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/templates/email/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/templates/email/new-request.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/templates/email/rectify-request.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/templates/email/rectify-resolved.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/templates/forms/complaint-form.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/templates/forms/delete-form.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/templates/forms/export-data-form.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/templates/forms/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/gdpr/templates/forms/rectify-form.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:04.170528.

39 PHP_REACHES edges created
3 REACHES edges created
1000 PHP_REACHES edges created
1194 PHP_REACHES edges created
89 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
12292 PHP_REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
4742 PHP_REACHES edges created
18359 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 4925 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.338411.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:07.448237.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 165 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:05.484781.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 114 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.240125.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:01.409072.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:02.238922.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.025001.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.035048.

279 PHP_REACHES edges created
279 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 183 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.146965.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
3 SQL operations to process.
orderby
SQL command (orderby) cannot be parsed correct.
meta_key
SQL command (meta_key) cannot be parsed correct.
orderby
SQL command (orderby) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [4051, 4064, 4071]
Added 0 SQL nodes. 0 out of 3 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:01.391000.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'<h2>get_user_by("email", $email)_display_name<span>( sanitize_email(wp_unslash($_POST["email"])) )</span></h2>'' cannot be parsed correct.
HTML code '$'<table class="widefat">
			<tr>
				<td class="row-title">Username</td>
				<td>$user</td>
			</tr>
			<tr>
				<td class="row-title">First Name</td>
				<td>$user</td>
			</tr>
			<tr>
				<td class="row-title">Last Name</td>
				<td>$user</td>
			</tr>
			<tr>
				<td class="row-title">Email</td>
				<td>$user</td>
			</tr>
			<tr>
				<td class="row-title">Nickname</td>
				<td>$user</td>
			</tr>
			<tr>
				<td class="row-title">Bio</td>
				<td>$user</td>
			</tr>
			<tr>
				<td class="row-title">URL</td>
				<td>get_user_by("email", $email)_user_url</td>
			</tr>
			<tr>
				<td class="row-title">Registered</td>
				<td>get_user_by("email", $email)_user_registered</td>
			</tr>
			<tr>
				<td class="row-title">Roles</td>
				<td>implode(", ", $user->roles)</td>
			</tr>
		</table>'' cannot be parsed correct.
HTML code '$'<h2>Consent Given</h2>'' cannot be parsed correct.
HTML code '$'<table class="widefat">
				<thead>
					<tr>
						<th>Consent ID</th>
					</tr>
				</thead>'' cannot be parsed correct.
HTML code '$'<td class="row-title">$v</td>'' cannot be parsed correct.
HTML code '$'<h2>Comments</h2>'' cannot be parsed correct.
HTML code '$'<table class="widefat">
					<thead>
						<tr>
							<th class="row-title">Comment Field</th>
							<th class="row-title">Comment Data</th>
						</tr>
					</thead>
					<tr>
						<td class="row-title">comment_author</td>
						<td>$v</td>
					</tr>
					<tr>
						<td class="row-title">comment_author_email</td>
						<td>$v</td>
					</tr>
					<tr>
						<td class="row-title">comment_author_url</td>
						<td>$v</td>
					</tr>
					<tr>
						<td class="row-title">comment_author_IP</td>
						<td>$v</td>
					</tr>
					<tr>
						<td class="row-title">comment_date</td>
						<td>$v</td>
					</tr>
					<tr>
						<td class="row-title">comment_agent</td>
						<td>$v</td>
					</tr>
					<tr>
						<td class="row-title">comment_content</td>
						<td>$v</td>
					</tr>
				</table><br>'' cannot be parsed correct.
HTML code '$'<h2>Metadata</h2>'' cannot be parsed correct.
HTML code '$'<table class="widefat">
				<thead>
					<tr>
						<th>Name</th>
						<th>Value</th>
					</tr>
				</thead>'' cannot be parsed correct.
HTML code '$'<td class="row-title">$k</td>'' cannot be parsed correct.
HTML code '$'<pre>print_r(maybe_unserialize($value), true)</pre><br />'' cannot be parsed correct.
HTML code '$'print_r($value, true)<br />'' cannot be parsed correct.
HTML code '$'sprintf(esc_html__("Your current PHP version (%1$s) is below the plugin required version of %2$s.", "gdpr"), esc_html(phpversion()), esc_html(GDPR_REQUIRED_PHP_VERSION))'' cannot be parsed correct.
HTML code '$'sprintf(esc_html__("Your %s page has been updated.", "gdpr"), esc_html($policy))'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'$policy'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'$policy'' cannot be parsed correct.
HTML code '$'$consent_name'' cannot be parsed correct.
HTML code '$'$consent_key'' cannot be parsed correct.
HTML code '$'$consent_key'' cannot be parsed correct.
HTML code '$'$consent_key'' cannot be parsed correct.
HTML code '$'checked(in_array($consent_key, $user_consents, true), 1, false)'' cannot be parsed correct.
HTML code '$'wp_kses($consent["description"], $this->allowed_html)'' cannot be parsed correct.
HTML code '$'$request_email'' cannot be parsed correct.
HTML code '$'$request_date'' cannot be parsed correct.
HTML code '$'wp_kses(wpautop(wp_unslash($request["data"])), ["p" => true, "br" => true])'' cannot be parsed correct.
HTML code '$'admin_url("admin-post.php")'' cannot be parsed correct.
HTML code '$'$i'' cannot be parsed correct.
HTML code '$'$request_email'' cannot be parsed correct.
HTML code '$'admin_url("admin-post.php")'' cannot be parsed correct.
HTML code '$'$i'' cannot be parsed correct.
HTML code '$'$request_email'' cannot be parsed correct.
HTML code '$'#$key'' cannot be parsed correct.
HTML code '$'$value_name'' cannot be parsed correct.
HTML code '$'$value_count'' cannot be parsed correct.
HTML code '$'$pt'' cannot be parsed correct.
HTML code '$'count_user_posts($uid, $pt->name)'' cannot be parsed correct.
HTML code '$'admin_url("edit.php?post_type=" . $pt->name . "&author=" . $uid)'' cannot be parsed correct.
HTML code '$'$pt'' cannot be parsed correct.
HTML code '$'$admin'' cannot be parsed correct.
HTML code '$'$admin'' cannot be parsed correct.
HTML code '$'$request_email'' cannot be parsed correct.
HTML code '$'$pt'' cannot be parsed correct.
HTML code '$'wpcom_vip_count_user_posts($uid, $pt->name)'' cannot be parsed correct.
HTML code '$'$request_email'' cannot be parsed correct.
HTML code '$'$request_date'' cannot be parsed correct.
HTML code '$'wp_unslash($request["data"])'' cannot be parsed correct.
HTML code '$'admin_url("admin-post.php")'' cannot be parsed correct.
HTML code '$'$i'' cannot be parsed correct.
HTML code '$'$request_email'' cannot be parsed correct.
HTML code '$'admin_url("admin-post.php")'' cannot be parsed correct.
HTML code '$'$i'' cannot be parsed correct.
HTML code '$'$request_email'' cannot be parsed correct.
HTML code '$'admin_url("admin-post.php")'' cannot be parsed correct.
HTML code '$'alternate'' cannot be parsed correct.
HTML code '$'$request_email'' cannot be parsed correct.
HTML code '$'$request_date'' cannot be parsed correct.
HTML code '$'<button class="button gdpr-review" data-index="0"Review</button>'' cannot be parsed correct.
HTML code '$'admin_url("admin-post.php")'' cannot be parsed correct.
HTML code '$'$request_email'' cannot be parsed correct.
HTML code '$'$i'' cannot be parsed correct.
HTML code '$'admin_url("admin-post.php")'' cannot be parsed correct.
HTML code '$'$request_email'' cannot be parsed correct.
HTML code '$'$i'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'get_option("gdpr_cookie_banner_content", "")'' cannot be parsed correct.
HTML code '$'get_option("gdpr_cookie_privacy_excerpt", "")'' cannot be parsed correct.
HTML code '$'sprintf(esc_html__("You can find the necessary information %s.", "gdpr"), "<a href="https://www.google.com/recaptcha/admin" target="_blank">" . esc_html__("here", "gdpr") . "</a>")'' cannot be parsed correct.
HTML code '$'gdpr_use_recaptcha'' cannot be parsed correct.
HTML code '$'get_option("gdpr_recaptcha_site_key", "")'' cannot be parsed correct.
HTML code '$'get_option("gdpr_recaptcha_secret_key", "")'' cannot be parsed correct.
HTML code '$'gdpr_add_consent_checkboxes_registration'' cannot be parsed correct.
HTML code '$'gdpr_add_consent_checkboxes_checkout'' cannot be parsed correct.
HTML code '$'get_comments(["author_email" => $request["email"], "include_unapproved" => true, "count" => true])'' cannot be parsed correct.
HTML code '$'admin_url("edit-comments.php?comment_status=all&s=" . rawurlencode($request["email"]))'' cannot be parsed correct.
HTML code '$'$request_email'' cannot be parsed correct.
HTML code '$'get_comments(["author_email" => $request["email"], "include_unapproved" => true, "count" => true])'' cannot be parsed correct.
HTML code '$'get_option("gdpr_email_limit", 100)'' cannot be parsed correct.
HTML code '$'sprintf(esc_html("The telemetry component has been discontinued. If you liked that feature and wants to use it, I recommend that you install this plugin: %s", "gdpr"), "<a href="https://wordpress.org/plugins/snitch/" target="_blank">Snitch</a>")'' cannot be parsed correct.
HTML code '$'$domain_id'' cannot be parsed correct.
HTML code '$'$cookie_cat_id'' cannot be parsed correct.
HTML code '$'$domain_id'' cannot be parsed correct.
HTML code '$'$domain_id'' cannot be parsed correct.
HTML code '$'$domain_arr_cookies_used'' cannot be parsed correct.
HTML code '$'$domain_id'' cannot be parsed correct.
HTML code '$'$cookie_cat_id'' cannot be parsed correct.
HTML code '$'$domain_id'' cannot be parsed correct.
HTML code '$'$domain_arr_optout'' cannot be parsed correct.
HTML code '$'$domain_id'' cannot be parsed correct.
HTML code '$'$consent_id'' cannot be parsed correct.
HTML code '$'$consent_name'' cannot be parsed correct.
HTML code '$'$consent_id'' cannot be parsed correct.
HTML code '$'$consent_id'' cannot be parsed correct.
HTML code '$'$consent_name'' cannot be parsed correct.
HTML code '$'$consent_id'' cannot be parsed correct.
HTML code '$'$consent_id'' cannot be parsed correct.
HTML code '$'$consent_id'' cannot be parsed correct.
HTML code '$'$cookie_cat_id'' cannot be parsed correct.
HTML code '$'$cookie_cat_name'' cannot be parsed correct.
HTML code '$'$cookie_cat_id'' cannot be parsed correct.
HTML code '$'$cookie_cat_id'' cannot be parsed correct.
HTML code '$'$cookie_cat_id'' cannot be parsed correct.
HTML code '$'$cookie_cat_name'' cannot be parsed correct.
HTML code '$'$cookie_cat_id'' cannot be parsed correct.
HTML code '$'$cookie_cat_id'' cannot be parsed correct.
HTML code '$'$cookie_cat_id'' cannot be parsed correct.
HTML code '$'$cookie_cat_id'' cannot be parsed correct.
HTML code '$'$cookie_cat_id'' cannot be parsed correct.
HTML code '$'$cookie_cat_id'' cannot be parsed correct.
HTML code '$'$registered_cookies_$cookie_cat_id_cookies_used'' cannot be parsed correct.
HTML code '$'$cookie_cat_id'' cannot be parsed correct.
HTML code '$'$cookie_cat_id'' cannot be parsed correct.
HTML code '$'$cookie_cat_id'' cannot be parsed correct.
HTML code '$'$registered_cookies_$cookie_cat_id_how_we_use'' cannot be parsed correct.
HTML code '$'$cookie_cat_id'' cannot be parsed correct.
HTML code '$'$cookie_cat_id'' cannot be parsed correct.
HTML code '$'$page'' cannot be parsed correct.
HTML code '$'$page'' cannot be parsed correct.
HTML code '$'$consent_id'' cannot be parsed correct.
HTML code '$'$consent_id'' cannot be parsed correct.
HTML code '$'$consent_id'' cannot be parsed correct.
HTML code '$'$consent_description'' cannot be parsed correct.
HTML code '$'$consent_id'' cannot be parsed correct.
HTML code '$'$consent_id'' cannot be parsed correct.
HTML code '$'$consent_id'' cannot be parsed correct.
HTML code '$'$consent_registration'' cannot be parsed correct.
HTML code '$'$cpage'' cannot be parsed correct.
HTML code '$'$cpage'' cannot be parsed correct.
HTML code '$'$cookie_cat_id'' cannot be parsed correct.
HTML code '$'$cookie_cat_id'' cannot be parsed correct.
HTML code '$'$domain_id'' cannot be parsed correct.
HTML code '$'Result'' cannot be parsed correct.
HTML code '$'Error'' cannot be parsed correct.
HTML code '$'#sanitize_text_field(wp_unslash($_GET["key"]))'' cannot be parsed correct.
HTML code '$'$value'' cannot be parsed correct.
HTML code '$'admin_url("admin-post.php")'' cannot be parsed correct.
HTML code '$'Result'' cannot be parsed correct.
HTML code '$'Error'' cannot be parsed correct.
HTML code '$'
'' cannot be parsed correct.
HTML code '$'<p><label class="gdpr-label"><input type="checkbox" name="user_consents[$key]" id="$key-consent" value="1" $required $checked>wp_kses($consent["registration"], $allowed_html)</label></p>'' cannot be parsed correct.
HTML code '$'<button type="button" class="gdpr-preferences" data-tab="shortcode_atts(["text" => esc_html__("Privacy Preferences", "gdpr"), "tab" => "gdpr-consent-management"], $atts, "gdpr_preferences")"shortcode_atts(["text" => esc_html__("Privacy Preferences", "gdpr"), "tab" => "gdpr-consent-management"], $atts, "gdpr_preferences")</button>'' cannot be parsed correct.
HTML code '$'<div class="g-recaptcha" data-sitekey="get_option("gdpr_recaptcha_site_key", "")"></div'' cannot be parsed correct.
HTML code '$'$export'' cannot be parsed correct.
HTML code '$'Error!'' cannot be parsed correct.
HTML code '$'Your request has been received and is being reviewed. You will receive an email when we are done.'' cannot be parsed correct.
HTML code '$'key($updated_consents)'' cannot be parsed correct.
HTML code '$'<li><button class="gdpr-active" type="button" data-target="$consent_id">$consent_name</button></li>'' cannot be parsed correct.
HTML code '$'get_permalink($type["policy-page"])'' cannot be parsed correct.
HTML code '$'$type_name'' cannot be parsed correct.
HTML code '$'$consent_id'' cannot be parsed correct.
HTML code '$'gdpr-active'' cannot be parsed correct.
HTML code '$'$consent_name'' cannot be parsed correct.
HTML code '$'SiteOrigin_Panels->renderer()->render($page_obj->ID)'' cannot be parsed correct.
HTML code '$'apply_filters("the_content", $page_obj->post_content)'' cannot be parsed correct.
HTML code '$'$consent_id'' cannot be parsed correct.
HTML code '$'sprintf(esc_html__("Someone placed a complaint on your behalf on our site.
By clicking confirm a request will be made and we will do our best to fulfil it.

--------------------------------------------------------
Request
--------------------------------------------------------
%1$s




To confirm this request, click here: %2$s



---------------------------------------------------------------------------------
If that wasn\\'t you, reset your password: %3$s
", "gdpr"), esc_html($args["data"]), esc_url_raw($args["confirm_url"]), esc_url_raw($args["forgot_password_url"]))'' cannot be parsed correct.
HTML code '$'We resolved your complaint request.
If you have any problems or questions, don\'t hesitate to contact us.'' cannot be parsed correct.
HTML code '$'sprintf(esc_html__("%1$s

--------------------------------------------------------
Nature of the personal data breach:
--------------------------------------------------------
%2$s

--------------------------------------------------------
Name and contact details of the data protection officer:
--------------------------------------------------------
%3$s

--------------------------------------------------------
Likely consequences of the personal data breach:
--------------------------------------------------------
%4$s

--------------------------------------------------------
Measures taken or proposed to be taken:
--------------------------------------------------------
%5$s
", "gdpr"), esc_html($args["content"]), esc_html($args["nature"]), esc_html($args["office_contact"]), esc_html($args["consequences"]), esc_html($args["measures"]), esc_url_raw($args["confirm_url"]))'' cannot be parsed correct.
HTML code '$'sprintf(esc_html__("A request to send a mass email notification to all users regarding a data breach has been made by %1$s.

--------------------------------------------------------
Nature of the personal data breach:
--------------------------------------------------------
%2$s

--------------------------------------------------------
Name and contact details of the data protection officer:
--------------------------------------------------------
%3$s

--------------------------------------------------------
Likely consequences of the personal data breach:
--------------------------------------------------------
%4$s

--------------------------------------------------------
Measures taken or proposed to be taken:
--------------------------------------------------------
%5$s


To confirm this request, click here: %6$s

---------------------------------------------------------------------------------
If that is not intended, have the person who requested it change their password.
---------------------------------------------------------------------------------
", "gdpr"), esc_html($args["requester"]), esc_html($args["nature"]), esc_html($args["office_contact"]), esc_html($args["consequences"]), esc_html($args["measures"]), esc_url_raw($args["confirm_url"]))'' cannot be parsed correct.
HTML code '$'sprintf(esc_html__("Someone placed a request for your information to be removed from our site.
By clicking confirm your account will be removed from our site and all data we collected
over time will be erased from our database. It will be impossible for us to retrieve that
information in the future.



To confirm this request, click here: %1$s



---------------------------------------------------------------------------------
If that wasn\\'t you, reset your password: %2$s
", "gdpr"), esc_url_raw($args["confirm_url"]), esc_url_raw($args["forgot_password_url"]))'' cannot be parsed correct.
HTML code '$'sprintf(esc_html__("Your account has been closed.

We no longer hold any information about you.
If you ever need to make a complaint you can email us and we will try to help you.
To be able to make a complaint you will be requested to provide your email address and the token below.

%s", "gdpr"), esc_html($args["token"]))'' cannot be parsed correct.
HTML code '$'sprintf(esc_html__("Someone requested to download your data from our site.
By clicking confirm we will redirect you back to our site where a download will begin.

To download it in a XML format, click here: %1$s
To download it in a JSON format, click here: %2$s



---------------------------------------------------------------------------------
If that wasn\\'t you, reset your password: %3$s
", "gdpr"), esc_url_raw($args["confirm_url_xml"]), esc_url_raw($args["confirm_url_json"]), esc_url_raw($args["forgot_password_url"]))'' cannot be parsed correct.
HTML code '$'sprintf(esc_html__("There is a new %1$s request waiting for review.

Review your requests: %2$s", "gdpr"), esc_html($args["type"]), esc_url_raw($args["review_url"]))'' cannot be parsed correct.
HTML code '$'sprintf(esc_html__("Someone placed a request for your information to be rectified on our site.
By clicking confirm a request will be made and we will do our best to fulfil it.

--------------------------------------------------------
Request
--------------------------------------------------------
%1$s




To confirm this request, click here: %2$s



---------------------------------------------------------------------------------
If that wasn\\'t you, reset your password: %3$s
", "gdpr"), esc_html($args["data"]), esc_url_raw($args["confirm_url"]), esc_url_raw($args["forgot_password_url"]))'' cannot be parsed correct.
HTML code '$'We resolved your rectification request.
If you have any problems or questions, don\'t hesitate to contact us.'' cannot be parsed correct.
HTML code '$'$submit_button_text'' cannot be parsed correct.
HTML code '$'$submit_button_text'' cannot be parsed correct.
HTML code '$'nl2br(wp_kses_post($args["content"]))'' cannot be parsed correct.
HTML code '$'$cookie_cat_id'' cannot be parsed correct.
HTML code '$'$cookie_cat_id'' cannot be parsed correct.
HTML code '$'$cookie_cat_name'' cannot be parsed correct.
HTML code '$'disabled'' cannot be parsed correct.
HTML code '$'$cookie_cat_id'' cannot be parsed correct.
HTML code '$'$cookie_cat_name'' cannot be parsed correct.
HTML code '$'$args_button_text'' cannot be parsed correct.
HTML code '$'key($args["tabs"])'' cannot be parsed correct.
HTML code '$'<li><button type="button" data-target="$key">$gdpr_tab_name</button></li>'' cannot be parsed correct.
HTML code '$'get_permalink($gdpr_type["policy-page"])'' cannot be parsed correct.
HTML code '$'$gdpr_type_name'' cannot be parsed correct.
HTML code '$'nl2br(esc_html($args["cookie_privacy_excerpt"]))'' cannot be parsed correct.
HTML code '$'$gdpr_type_name'' cannot be parsed correct.
HTML code '$'$consent_key'' cannot be parsed correct.
HTML code '$'$consent_key'' cannot be parsed correct.
HTML code '$'checked(in_array($consent_key, $args["user_consents"], true), 1, false)checked'' cannot be parsed correct.
HTML code '$'ON'' cannot be parsed correct.
HTML code '$'OFF'' cannot be parsed correct.
HTML code '$'wp_kses($gdpr_type["description"], $args["allowed_html"])'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'$gdpr_tab_name'' cannot be parsed correct.
HTML code '$'nl2br(wp_kses_post($gdpr_tab["how_we_use"]))'' cannot be parsed correct.
HTML code '$'wp_json_encode($site_cookies)'' cannot be parsed correct.
HTML code '$'$key'' cannot be parsed correct.
HTML code '$'wp_json_encode($site_cookies)'' cannot be parsed correct.
HTML code '$'$submit_button_text'' cannot be parsed correct.
HTML code '$'$submit_button_text'' cannot be parsed correct.
HTML code '$'ON'' cannot be parsed correct.
HTML code '$'OFF'' cannot be parsed correct.
HTML code '$'$gdpr_tab_cookies_used'' cannot be parsed correct.
HTML code '$'$host_key'' cannot be parsed correct.
HTML code '$'$host_optout'' cannot be parsed correct.
HTML code '$'$host_cookies_used'' cannot be parsed correct.
HTML code '$'wp_json_encode($all_cookies)'' cannot be parsed correct.
HTML code '$'$consent_id'' cannot be parsed correct.
HTML code '$'$consent_name'' cannot be parsed correct.
HTML code '$'get_permalink($consent["policy-page"])'' cannot be parsed correct.
HTML code '$'wp_create_nonce("gdpr-agree-with-new-policies")'' cannot be parsed correct.
HTML code '$'key($args["updated_consents"])'' cannot be parsed correct.
HTML code '$'<li><button class="gdpr-active" type="button" data-target="$consent_id">$consent_name</button></li>'' cannot be parsed correct.
HTML code '$'$consent_id'' cannot be parsed correct.
HTML code '$'gdpr-active'' cannot be parsed correct.
HTML code '$'$consent_name'' cannot be parsed correct.
HTML code '$'wp_kses_post(SiteOrigin_Panels->renderer()->render($page_obj->ID))'' cannot be parsed correct.
HTML code '$'wp_kses_post(apply_filters("the_content", $page_obj->post_content))'' cannot be parsed correct.
HTML code '$'$consent_id'' cannot be parsed correct.
HTML code '$'<tr>'' cannot be parsed correct.
HTML code '$'</tr>'' cannot be parsed correct.
HTML code '$'</table>'' cannot be parsed correct.
HTML code '$'<tr>'' cannot be parsed correct.
HTML code '$'<td>'' cannot be parsed correct.
HTML code '$'</td>'' cannot be parsed correct.
HTML code '$'</tr>'' cannot be parsed correct.
HTML code '$'</table>'' cannot be parsed correct.
HTML code '$'				<span class="description">'' cannot be parsed correct.
HTML code '$'	</table>

		'' cannot be parsed correct.
HTML code '$'				'' cannot be parsed correct.
HTML code '$'			</tbody>
			<tfoot>
				<tr>
					<th>'' cannot be parsed correct.
HTML code '$'			</a>
		'' cannot be parsed correct.
HTML code '$'				'' cannot be parsed correct.
HTML code '$'			</tbody>
			<tfoot>
				<tr>
					<th>'' cannot be parsed correct.
HTML code '$'			</p>
		<table class="form-table">
			<tbody>
				<tr>
					<th scope="row">
						<label for="gdpr_use_recaptcha">'' cannot be parsed correct.
HTML code '$'						'' cannot be parsed correct.
HTML code '$'			</tbody>
			<tfoot>
				<tr>
					<th>'' cannot be parsed correct.
HTML code '$'
		<hr>
		<h2>'' cannot be parsed correct.
HTML code '$'										</select>
									</td>
								</tr>
								<tr>
									<th>
										<label for="consent-description'' cannot be parsed correct.
HTML code '$'			'' cannot be parsed correct.
HTML code '$'		</div>
		'' cannot be parsed correct.
HTML code '$'						</select>
					</td>
				</tr>
				<tr>
					<th>
						<label for="consent-description-{{data.key}}">
							'' cannot be parsed correct.
HTML code '$'<div class="gdpr gdpr-overlay"></div>'' cannot be parsed correct.
HTML code '$'								</ul>
							</li>
						'' cannot be parsed correct.
HTML code '$'">
							<header>
								<h4'' cannot be parsed correct.
HTML code '$'	<textarea name="data" rows="5" required placeholder="'' cannot be parsed correct.
HTML code '$'	'' cannot be parsed correct.
HTML code '$'	<textarea name="data" rows="5" required placeholder="'' cannot be parsed correct.
HTML code '$'				</ul>
			'' cannot be parsed correct.
HTML code '$'			<div class="gdpr-buttons">
				<button class="gdpr-preferences" type="button">'' cannot be parsed correct.
HTML code '$'					</ul>
					<ul class="gdpr-policies">
						'' cannot be parsed correct.
HTML code '$'						</div>
					</div>
					'' cannot be parsed correct.
HTML code '$'	'' cannot be parsed correct.
HTML code '$'								'' cannot be parsed correct.
HTML code '$'								'' cannot be parsed correct.
HTML code '$'							</div>
						</div>
					'' cannot be parsed correct.
HTML code '$'			</ul>
			<div class="gdpr-buttons">
				<button class="gdpr-agreement" type="button" data-nonce="'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:26.350021.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.049809.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 25 do_action/apply_filters calls and 60 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:02.550817.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FileProDetector
### Start running FrontBaseDetector
### Finish running DbaseDetector
### Start running HashDetector
### Finish running FirebirdInterBaseDetector
### Start running IBMDb2Detector
### Finish running DbplusDetector
### Start running InformixDetector
### Finish running CubridDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running MySQLDetector
### Start running MySQLiDetector
### Finish running MsqlDetector
### Start running Oci8Detector
### Finish running MongoDbDetector
### Start running OpenSSLDetector
### Finish running Oci8Detector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running HashDetector
### Start running PhpCurlDetector
### Finish running ArrayElementDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PhpCurlDetector
### Start running PHPRetrievalDetector
### Finish running PasswordHashingDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running OpenSSLDetector
### Start running PhpVarDetector
### Finish running PHPIncludedDetector
### Start running PostgreSQLDetector
### Finish running PhpVarDetector
### Start running PropertyDetector
### Finish running PostgreSQLDetector
### Start running Sqlite3Detector
### Finish running PHPRetrievalDetector
### Start running SqliteDetector
### Finish running Sqlite3Detector
### Start running SqlServerDetector
### Finish running SqliteDetector
### Start running SybaseDetector
### Finish running SybaseDetector
### Start running TokyoTyrantDetector
### Finish running maxdbDetector
### Start running UserInputDetector
### Finish running PHPStorageDetector
### Start running VariableDetector
### Finish running MySQLiDetector
### Start running WordpressHashingFnDetector
### Finish running TokyoTyrantDetector
### Start running WordPressRemoteDetector
### Finish running SqlServerDetector
### Start running WordPressRetrievalDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressStorageDetector
### Finish running UserInputDetector
### Start running WP_UserDetector
### Finish running WordPressRemoteDetector
### Start running GenericDatabaseUsageDetector
### Finish running WP_UserDetector
### Start running GenericEncryptionDetector
### Finish running PropertyDetector
### Start running DeletionDetector
### Finish running GenericDatabaseUsageDetector
### Start running UninstallDetector
### Finish running GenericEncryptionDetector
### Finish running UninstallDetector
### Finish running VariableDetector
### Finish running DeletionDetector
### Finish running WordPressStorageDetector
### Finish running WordPressRetrievalDetector
### Finished running detectors
admin/class-gdpr-admin.php:328
  - Request variable '$_POST["email"]' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-admin.php:332
  - Request variable '$_POST["email"]' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-admin.php:497
  - Request variable '$_POST["email"]' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-admin.php:501
  - Request variable '$_POST["email"]' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-admin.php:628
  - Request variable '$_POST["gdpr-data-breach-email-content"]' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-admin.php:640
  - Request variable '$_POST["gdpr-data-breach-email-content"]' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-requests-admin.php:33
  - Request variable '$_POST["user_email"]' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-requests-admin.php:33
  - Request variable '$_POST["user_email"]' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-requests-admin.php:158
  - Request variable '$_POST["user_email"]' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-requests-admin.php:162
  - Request variable '$_POST["user_email"]' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-requests-admin.php:206
  - Request variable '$_POST["user_email"]' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-requests-admin.php:210
  - Request variable '$_POST["user_email"]' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-requests-admin.php:243
  - Request variable '$_POST["user_email"]' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-requests-admin.php:247
  - Request variable '$_POST["user_email"]' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr.php:572
  - Request variable '$_POST["email"]' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr.php:577
  - Request variable '$_POST["email"]' of personal types {'email'} is found.
  - Data types: email
public/class-gdpr-requests-public.php:141
  - Request variable '$_POST["user_email"]' of personal types {'email'} is found.
  - Data types: email
public/class-gdpr-requests-public.php:141
  - Request variable '$_POST["user_email"]' of personal types {'email'} is found.
  - Data types: email
public/class-gdpr-requests-public.php:259
  - Request variable '$_GET["email"]' of personal types {'email'} is found.
  - Data types: email
public/class-gdpr-requests-public.php:265
  - Request variable '$_GET["email"]' of personal types {'email'} is found.
  - Data types: email 

includes/class-gdpr-audit-log.php:42
  - openssl_encrypt called with approved encryption algorithm aes-256-cbc.
includes/class-gdpr-audit-log.php:58
  - openssl_decrypt called with approved encryption algorithm aes-256-cbc. 

includes/class-gdpr-audit-log.php:113
  - RETRIEVAL call to file_get_contents($path . $filename).
  - Data types: file 

includes/class-gdpr-audit-log.php:167
  - STORAGE call to file_put_contents($path . "index.php", "").
  - Data types: file
includes/class-gdpr-audit-log.php:173
  - STORAGE call to file_put_contents($path . $filename, self->crypt($user->user_email, $log)).
  - Data types: file 

admin/class-gdpr-admin.php:342
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-admin.php:361
  - object property '$user->first_name' of personal types {'user', 'user_meta', 'first_name'} is found.
  - Data types: user, user_meta, first_name
admin/class-gdpr-admin.php:365
  - object property '$user->last_name' of personal types {'user', 'last_name', 'user_meta'} is found.
  - Data types: user, last_name, user_meta
admin/class-gdpr-admin.php:369
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-admin.php:425
  - object property '$v->comment_author_email' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-admin.php:670
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-requests-admin.php:219
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-requests-admin.php:253
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-requests-admin.php:295
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr-audit-log.php:72
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr-audit-log.php:169
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr-audit-log.php:170
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr-audit-log.php:173
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr-requests.php:111
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr.php:427
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr.php:458
  - object property '$v->comment_author_email' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr.php:471
  - object property '$user->first_name' of personal types {'user', 'user_meta', 'first_name'} is found.
  - Data types: user, user_meta, first_name
includes/class-gdpr.php:472
  - object property '$user->last_name' of personal types {'user', 'last_name', 'user_meta'} is found.
  - Data types: user, last_name, user_meta
includes/class-gdpr.php:473
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr.php:501
  - object property '$user->first_name' of personal types {'user', 'user_meta', 'first_name'} is found.
  - Data types: user, user_meta, first_name
includes/class-gdpr.php:502
  - object property '$user->last_name' of personal types {'user', 'last_name', 'user_meta'} is found.
  - Data types: user, last_name, user_meta
includes/class-gdpr.php:503
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr.php:524
  - object property '$v->comment_author_email' of personal types {'email'} is found.
  - Data types: email
public/class-gdpr-requests-public.php:45
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
public/class-gdpr-requests-public.php:199
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
public/class-gdpr-requests-public.php:206
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
public/class-gdpr-requests-public.php:215
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
public/class-gdpr-requests-public.php:224
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
public/class-gdpr-requests-public.php:232
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email
public/class-gdpr-requests-public.php:385
  - object property '$user->user_email' of personal types {'email'} is found.
  - Data types: email 

admin/class-gdpr-admin.php:332
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-admin.php:333
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-admin.php:353
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-admin.php:479
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-admin.php:484
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-admin.php:501
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-admin.php:508
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-admin.php:638
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-admin.php:667
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-requests-admin.php:33
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-requests-admin.php:34
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-requests-admin.php:59
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-requests-admin.php:79
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-requests-admin.php:82
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-requests-admin.php:102
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-requests-admin.php:120
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-requests-admin.php:123
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-requests-admin.php:162
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-requests-admin.php:166
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-requests-admin.php:171
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-requests-admin.php:210
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-requests-admin.php:215
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-requests-admin.php:217
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-requests-admin.php:222
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-requests-admin.php:247
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-requests-admin.php:248
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-requests-admin.php:260
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-requests-admin.php:285
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-requests-admin.php:288
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-requests-admin.php:330
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
admin/class-gdpr-requests-admin.php:335
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr-audit-log.php:91
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr-audit-log.php:100
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr-audit-log.php:107
  - variable '$email_masked' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr-audit-log.php:107
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr-audit-log.php:108
  - variable '$email_masked' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr-audit-log.php:114
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr-audit-log.php:132
  - variable '$email_arr' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr-audit-log.php:132
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr-audit-log.php:134
  - variable '$email_arr' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr-audit-log.php:137
  - variable '$email_arr' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr-audit-log.php:137
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
includes/class-gdpr-audit-log.php:139
  - variable '$email_arr' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr-audit-log.php:142
  - variable '$email_arr' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr-audit-log.php:144
  - variable '$username' of personal types {'user', 'user_meta'} is found.
  - Data types: user, user_meta
includes/class-gdpr-email.php:82
  - variable '$loop_emails' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr-email.php:83
  - variable '$loop_emails' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr-email.php:83
  - variable '$loop_emails' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr-email.php:84
  - variable '$loop_emails' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr-email.php:104
  - variable '$emails' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr-email.php:104
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr-email.php:105
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr-email.php:122
  - variable '$emails' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr-email.php:168
  - variable '$emails' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr-email.php:168
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr-email.php:169
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr-requests.php:167
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr-requests.php:169
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr-requests.php:259
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr-requests.php:259
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr-requests.php:269
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr-requests.php:279
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr.php:174
  - variable '$plugin_emails' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr.php:224
  - variable '$plugin_emails' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr.php:417
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr.php:417
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr.php:418
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr.php:436
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr.php:577
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr.php:578
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
includes/class-gdpr.php:584
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
public/class-gdpr-requests-public.php:153
  - variable '$email_args' of personal types {'email'} is found.
  - Data types: email
public/class-gdpr-requests-public.php:164
  - variable '$email_args' of personal types {'email'} is found.
  - Data types: email
public/class-gdpr-requests-public.php:164
  - variable '$email_args' of personal types {'email'} is found.
  - Data types: email
public/class-gdpr-requests-public.php:195
  - variable '$email_args' of personal types {'email'} is found.
  - Data types: email
public/class-gdpr-requests-public.php:202
  - variable '$email_args' of personal types {'email'} is found.
  - Data types: email
public/class-gdpr-requests-public.php:211
  - variable '$email_args' of personal types {'email'} is found.
  - Data types: email
public/class-gdpr-requests-public.php:220
  - variable '$email_args' of personal types {'email'} is found.
  - Data types: email
public/class-gdpr-requests-public.php:234
  - variable '$email_args' of personal types {'email'} is found.
  - Data types: email
public/class-gdpr-requests-public.php:265
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
public/class-gdpr-requests-public.php:266
  - variable '$notification_email' of personal types {'email'} is found.
  - Data types: email
public/class-gdpr-requests-public.php:268
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
public/class-gdpr-requests-public.php:318
  - variable '$notification_email_args' of personal types {'email'} is found.
  - Data types: email
public/class-gdpr-requests-public.php:328
  - variable '$notification_email' of personal types {'email'} is found.
  - Data types: email
public/class-gdpr-requests-public.php:328
  - variable '$notification_email_args' of personal types {'email'} is found.
  - Data types: email
public/class-gdpr-requests-public.php:366
  - variable '$notification_email' of personal types {'email'} is found.
  - Data types: email
public/class-gdpr-requests-public.php:366
  - variable '$notification_email_args' of personal types {'email'} is found.
  - Data types: email
public/class-gdpr-requests-public.php:399
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
public/class-gdpr-requests-public.php:399
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
public/class-gdpr-requests-public.php:403
  - variable '$email' of personal types {'email'} is found.
  - Data types: email
public/class-gdpr-requests-public.php:408
  - variable '$email' of personal types {'email'} is found.
  - Data types: email 

public/class-gdpr-requests-public.php:113
  - API call to wp_remote_post("https://www.google.com/recaptcha/api/siteverify", ["body" => ["secret" => $secret_key, "response" => sanitize_text_field(wp_unslash($_POST["g-recaptcha-response"]))]]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote 

admin/class-gdpr-admin.php:106
  - RETRIEVAL call to get_option("gdpr_requests", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/class-gdpr-admin.php:256
  - RETRIEVAL call to get_option("gdpr_cookie_popup_content", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/class-gdpr-admin.php:257
  - RETRIEVAL call to get_option("gdpr_consent_types", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/class-gdpr-admin.php:274
  - RETRIEVAL call to get_option("gdpr_requests", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/class-gdpr-admin.php:333
  - RETRIEVAL call to get_user_by("email", $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
admin/class-gdpr-admin.php:349
  - RETRIEVAL call to get_user_meta($user->ID, "gdpr_consents") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $key (string). Returns (mixed).
  - Data types: user_meta
admin/class-gdpr-admin.php:519
  - RETRIEVAL call to get_transient("gdpr_updated") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
admin/class-gdpr-admin.php:579
  - RETRIEVAL call to get_option("gdpr_policies_updated", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/class-gdpr-admin.php:639
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
admin/class-gdpr-admin.php:719
  - RETRIEVAL call to get_option("gdpr_consent_types", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/class-gdpr-admin.php:753
  - RETRIEVAL call to get_option("gdpr_policies_updated", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/class-gdpr-admin.php:758
  - RETRIEVAL call to get_users(["fields" => "all_with_meta"]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $args (array). Returns (array).
  - Data types: user, user_meta
admin/class-gdpr-admin.php:768
  - RETRIEVAL call to get_user_meta($user->ID, "gdpr_consents") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $key (string). Returns (mixed).
  - Data types: user_meta
admin/class-gdpr-admin.php:792
  - RETRIEVAL call to get_option("gdpr_policies_updated", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/class-gdpr-admin.php:793
  - RETRIEVAL call to get_option("gdpr_consent_types", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/class-gdpr-admin.php:836
  - RETRIEVAL call to get_option("gdpr_policies_updated", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/class-gdpr-admin.php:849
  - RETRIEVAL call to get_option("gdpr_consent_types", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/class-gdpr-admin.php:853
  - RETRIEVAL call to get_user_meta($user->ID, "gdpr_consents") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $key (string). Returns (mixed).
  - Data types: user_meta
admin/class-gdpr-admin.php:924
  - RETRIEVAL call to get_option("gdpr_consent_types", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/class-gdpr-admin.php:982
  - RETRIEVAL call to get_user_meta($user_id, "gdpr_consents") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $key (string). Returns (mixed).
  - Data types: user_meta
admin/class-gdpr-requests-admin.php:34
  - RETRIEVAL call to get_user_by("email", $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
admin/class-gdpr-requests-admin.php:76
  - RETRIEVAL call to get_option("gdpr_requests", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/class-gdpr-requests-admin.php:166
  - RETRIEVAL call to get_user_by("email", $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
admin/class-gdpr-requests-admin.php:217
  - RETRIEVAL call to get_user_by("email", $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
admin/class-gdpr-requests-admin.php:248
  - RETRIEVAL call to get_user_by("email", $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
admin/class-gdpr-requests-admin.php:288
  - RETRIEVAL call to get_user_by("email", $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
admin/class-gdpr-requests-admin.php:310
  - RETRIEVAL call to wp_update_comment($new_comment). Passed arguments: 0: $commentarr (array). Returns (int|false|WP_Error).
admin/class-gdpr-requests-admin.php:335
  - RETRIEVAL call to get_user_by("email", $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
admin/class-gdpr-requests-admin.php:360
  - RETRIEVAL call to get_user_by("ID", $reassign_to) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
admin/partials/requests.php:182
  - RETRIEVAL call to get_user_by("email", $request["email"]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
admin/partials/requests.php:234
  - RETRIEVAL call to get_user_by("email", $request["email"]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
admin/partials/requests.php:256
  - RETRIEVAL call to get_users(["role" => "administrator"]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $args (array). Returns (array).
  - Data types: user, user_meta
admin/partials/settings.php:21
  - RETRIEVAL call to get_option("gdpr_email_limit", 100) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/partials/settings.php:35
  - RETRIEVAL call to get_option("gdpr_deletion_needs_review", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/partials/settings.php:44
  - RETRIEVAL call to get_option("gdpr_refresh_after_preferences_update", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/partials/settings.php:54
  - RETRIEVAL call to get_option("gdpr_disable_css", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/partials/settings.php:79
  - RETRIEVAL call to get_option("gdpr_hide_from_bots", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/partials/settings.php:92
  - RETRIEVAL call to get_option("gdpr_reconsent_template", "modal") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/partials/settings.php:112
  - RETRIEVAL call to get_option("gdpr_enable_privacy_bar", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/partials/settings.php:121
  - RETRIEVAL call to get_option("gdpr_display_cookie_categories_in_bar", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/partials/settings.php:134
  - RETRIEVAL call to get_option("gdpr_cookie_banner_content", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/partials/settings.php:147
  - RETRIEVAL call to get_option("gdpr_cookie_privacy_excerpt", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/partials/settings.php:173
  - RETRIEVAL call to get_option("gdpr_use_recaptcha", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/partials/settings.php:182
  - RETRIEVAL call to get_option("gdpr_recaptcha_site_key", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/partials/settings.php:191
  - RETRIEVAL call to get_option("gdpr_recaptcha_secret_key", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/partials/settings.php:207
  - RETRIEVAL call to get_option("gdpr_add_consent_checkboxes_registration", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/partials/settings.php:216
  - RETRIEVAL call to get_option("gdpr_add_consent_checkboxes_checkout", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
admin/partials/tools.php:22
  - RETRIEVAL call to get_option("gdpr_data_breach_initiated", ["key" => ""]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-gdpr-audit-log.php:70
  - RETRIEVAL call to get_user_by("ID", $user_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
includes/class-gdpr-audit-log.php:91
  - RETRIEVAL call to get_user_by("email", $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
includes/class-gdpr-audit-log.php:96
  - RETRIEVAL call to get_user_meta($user->ID, "gdpr_audit_log", false) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
includes/class-gdpr-audit-log.php:156
  - RETRIEVAL call to get_user_by("ID", $user_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
includes/class-gdpr-email.php:65
  - RETRIEVAL call to get_option("gdpr_data_breach_initiated", ["key" => ""]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-gdpr-email.php:70
  - RETRIEVAL call to get_option("gdpr_email_limit", 100) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-gdpr-email.php:72
  - RETRIEVAL call to get_users(["fields" => "all_with_meta"]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $args (array). Returns (array).
  - Data types: user, user_meta
includes/class-gdpr-email.php:105
  - RETRIEVAL call to get_user_by("email", $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
includes/class-gdpr-requests.php:94
  - RETRIEVAL call to get_user_by("ID", $user) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
includes/class-gdpr-requests.php:136
  - RETRIEVAL call to get_option("gdpr_requests", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-gdpr-requests.php:159
  - RETRIEVAL call to get_option("gdpr_requests", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-gdpr-requests.php:169
  - RETRIEVAL call to get_user_by("email", $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
includes/class-gdpr-requests.php:207
  - RETRIEVAL call to get_option("gdpr_requests", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-gdpr-requests.php:231
  - RETRIEVAL call to get_user_meta($user_id, $meta_key, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
includes/class-gdpr-requests.php:257
  - RETRIEVAL call to get_option("gdpr_requests", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-gdpr-requests.php:279
  - RETRIEVAL call to get_user_by("email", $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
includes/class-gdpr.php:175
  - RETRIEVAL call to get_option("gdpr_add_consent_checkboxes_registration", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-gdpr.php:176
  - RETRIEVAL call to get_option("gdpr_add_consent_checkboxes_checkout", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-gdpr.php:321
  - RETRIEVAL call to get_option("gdpr_consent_types", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-gdpr.php:378
  - RETRIEVAL call to get_user_meta($user_id) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int). Returns (mixed).
  - Data types: user_meta
includes/class-gdpr.php:418
  - RETRIEVAL call to get_user_by("email", $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
includes/class-gdpr.php:434
  - RETRIEVAL call to get_user_meta($user->ID, "gdpr_consents") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $key (string). Returns (mixed).
  - Data types: user_meta
includes/class-gdpr.php:578
  - RETRIEVAL call to get_user_by("email", $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
includes/class-gdpr.php:601
  - RETRIEVAL call to get_option("gdpr_consent_types", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
includes/class-gdpr.php:606
  - RETRIEVAL call to get_user_by("ID", $user_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
includes/class-gdpr.php:613
  - RETRIEVAL call to get_user_meta($user_id, "gdpr_consents") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $key (string). Returns (mixed).
  - Data types: user_meta
includes/class-gdpr.php:639
  - RETRIEVAL call to get_user_by("ID", $user_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
includes/class-gdpr.php:645
  - RETRIEVAL call to get_user_meta($user_id, "gdpr_consents") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $key (string). Returns (mixed).
  - Data types: user_meta
includes/helper-functions.php:124
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
includes/helper-functions.php:128
  - RETRIEVAL call to get_user_meta($user->ID, "gdpr_consents") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $key (string). Returns (mixed).
  - Data types: user_meta
public/class-gdpr-public.php:83
  - RETRIEVAL call to get_option("gdpr_use_recaptcha", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
public/class-gdpr-public.php:85
  - RETRIEVAL call to get_option("gdpr_recaptcha_site_key", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
public/class-gdpr-public.php:86
  - RETRIEVAL call to get_option("gdpr_recaptcha_secret_key", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
public/class-gdpr-public.php:101
  - RETRIEVAL call to get_option("gdpr_disable_css", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
public/class-gdpr-public.php:114
  - RETRIEVAL call to get_option("gdpr_use_recaptcha", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
public/class-gdpr-public.php:116
  - RETRIEVAL call to get_option("gdpr_recaptcha_site_key", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
public/class-gdpr-public.php:117
  - RETRIEVAL call to get_option("gdpr_recaptcha_secret_key", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
public/class-gdpr-public.php:141
  - RETRIEVAL call to get_option("gdpr_refresh_after_preferences_update", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
public/class-gdpr-public.php:152
  - RETRIEVAL call to get_option("gdpr_enable_privacy_bar", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
public/class-gdpr-public.php:153
  - RETRIEVAL call to get_option("gdpr_cookie_banner_content", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
public/class-gdpr-public.php:154
  - RETRIEVAL call to get_option("gdpr_cookie_popup_content", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
public/class-gdpr-public.php:155
  - RETRIEVAL call to get_option("gdpr_display_cookie_categories_in_bar", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
public/class-gdpr-public.php:158
  - RETRIEVAL call to get_option("gdpr_hide_from_bots", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
public/class-gdpr-public.php:180
  - RETRIEVAL call to get_option("gdpr_cookie_privacy_excerpt", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
public/class-gdpr-public.php:181
  - RETRIEVAL call to get_option("gdpr_consent_types", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
public/class-gdpr-public.php:184
  - RETRIEVAL call to get_option("gdpr_cookie_popup_content", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
public/class-gdpr-public.php:185
  - RETRIEVAL call to get_option("gdpr_hide_from_bots", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
public/class-gdpr-public.php:270
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
public/class-gdpr-public.php:302
  - RETRIEVAL call to get_option("gdpr_consent_types", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
public/class-gdpr-public.php:316
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
public/class-gdpr-public.php:320
  - RETRIEVAL call to get_user_meta($user->ID, "gdpr_consents") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $key (string). Returns (mixed).
  - Data types: user_meta
public/class-gdpr-public.php:337
  - RETRIEVAL call to get_option("gdpr_reconsent_template", "modal") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
public/class-gdpr-public.php:372
  - RETRIEVAL call to get_user_meta($user_id, "gdpr_consents") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $key (string). Returns (mixed).
  - Data types: user_meta
public/class-gdpr-public.php:381
  - RETRIEVAL call to get_user_meta($user_id, "gdpr_consents") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $key (string). Returns (mixed).
  - Data types: user_meta
public/class-gdpr-public.php:395
  - RETRIEVAL call to get_option("gdpr_cookie_popup_content", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
public/class-gdpr-requests-public.php:98
  - RETRIEVAL call to get_option("gdpr_use_recaptcha", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
public/class-gdpr-requests-public.php:100
  - RETRIEVAL call to get_option("gdpr_recaptcha_site_key", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
public/class-gdpr-requests-public.php:101
  - RETRIEVAL call to get_option("gdpr_recaptcha_secret_key", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
public/class-gdpr-requests-public.php:139
  - RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).
  - Data types: user, user_meta
public/class-gdpr-requests-public.php:141
  - RETRIEVAL call to get_user_by("email", sanitize_email(wp_unslash($_POST["user_email"]))) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
public/class-gdpr-requests-public.php:266
  - RETRIEVAL call to get_option("admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
public/class-gdpr-requests-public.php:268
  - RETRIEVAL call to get_user_by("email", $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).
  - Data types: user, user_meta
public/class-gdpr-requests-public.php:287
  - RETRIEVAL call to get_user_meta($user->ID, self"plugin_name" . "_"$type"_key", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
public/class-gdpr-requests-public.php:325
  - RETRIEVAL call to get_option("gdpr_deletion_needs_review", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
public/partials/reconsent-modal.php:67
  - RETRIEVAL call to get_post($consent["policy-page"]) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
public/partials/reconsent-modal.php:68
  - RETRIEVAL call to get_post_meta($page_obj->ID, "panels_data", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
templates/reconsent-modal.php:55
  - RETRIEVAL call to get_post($consent["policy-page"]) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
templates/reconsent-modal.php:56
  - RETRIEVAL call to get_post_meta($page_obj->ID, "panels_data", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta 

admin/class-gdpr-admin.php:529
  - STORAGE call to delete_transient("gdpr_updated") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).
  - Data types: site
admin/class-gdpr-admin.php:540
  - STORAGE call to set_transient("gdpr_updated", 1) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed). Returns (bool).
  - Data types: site
admin/class-gdpr-admin.php:543
  - STORAGE call to add_option("gdpr_disable_css", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-gdpr-admin.php:544
  - STORAGE call to add_option("gdpr_enable_telemetry_tracker", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-gdpr-admin.php:545
  - STORAGE call to add_option("gdpr_use_recaptcha", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-gdpr-admin.php:546
  - STORAGE call to add_option("gdpr_recaptcha_site_key", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-gdpr-admin.php:547
  - STORAGE call to add_option("gdpr_recaptcha_secret_key", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-gdpr-admin.php:548
  - STORAGE call to add_option("gdpr_add_consent_checkboxes_registration", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-gdpr-admin.php:549
  - STORAGE call to add_option("gdpr_add_consent_checkboxes_checkout", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-gdpr-admin.php:550
  - STORAGE call to add_option("gdpr_refresh_after_preferences_update", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-gdpr-admin.php:551
  - STORAGE call to add_option("gdpr_enable_privacy_bar", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-gdpr-admin.php:552
  - STORAGE call to add_option("gdpr_display_cookie_categories_in_bar", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-gdpr-admin.php:553
  - STORAGE call to add_option("gdpr_hide_from_bots", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-gdpr-admin.php:554
  - STORAGE call to add_option("gdpr_reconsent_template", "modal") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-gdpr-admin.php:647
  - STORAGE call to update_option("gdpr_data_breach_initiated", ["key" => $key, "content" => $content, "nature" => $nature, "office_contact" => $office_contact, "consequences" => $consequences, "measures" => $measures]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-gdpr-admin.php:686
  - STORAGE call to set_transient("settings_errors", get_settings_errors(), 30) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
admin/class-gdpr-admin.php:706
  - STORAGE call to delete_option("gdpr_data_breach_initiated") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
admin/class-gdpr-admin.php:756
  - STORAGE call to update_option("gdpr_policies_updated", $policies_updated) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-gdpr-admin.php:776
  - STORAGE call to delete_user_meta($user->ID, "gdpr_consents", $policy_id) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).
  - Data types: user_meta
admin/class-gdpr-admin.php:822
  - STORAGE call to update_option("gdpr_policies_updated", $policies_updated) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-gdpr-admin.php:838
  - STORAGE call to update_option("gdpr_policies_updated", $policies_updated) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
admin/class-gdpr-admin.php:901
  - STORAGE call to delete_user_meta($user_id, "gdpr_consents") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
admin/class-gdpr-admin.php:909
  - STORAGE call to add_user_meta($user_id, "gdpr_consents", $consent) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta
admin/class-gdpr-admin.php:962
  - STORAGE call to add_user_meta($customer_id, "gdpr_consents", $consent) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta
admin/class-gdpr-requests-admin.php:38
  - STORAGE call to set_transient("settings_errors", get_settings_errors(), 30) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
admin/class-gdpr-requests-admin.php:60
  - STORAGE call to set_transient("settings_errors", get_settings_errors(), 30) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
admin/class-gdpr-requests-admin.php:83
  - STORAGE call to set_transient("settings_errors", get_settings_errors(), 30) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
admin/class-gdpr-requests-admin.php:106
  - STORAGE call to set_transient("settings_errors", get_settings_errors(), 30) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
admin/class-gdpr-requests-admin.php:124
  - STORAGE call to set_transient("settings_errors", get_settings_errors(), 30) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
admin/class-gdpr-requests-admin.php:172
  - STORAGE call to set_transient("settings_errors", get_settings_errors(), 30) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
admin/class-gdpr-requests-admin.php:223
  - STORAGE call to set_transient("settings_errors", get_settings_errors(), 30) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
admin/class-gdpr-requests-admin.php:257
  - STORAGE call to wp_delete_user($user->ID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $id (int). Returns (bool).
  - Data types: user, user_meta
admin/class-gdpr-requests-admin.php:261
  - STORAGE call to set_transient("settings_errors", get_settings_errors(), 30) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
admin/class-gdpr-requests-admin.php:351
  - STORAGE call to wp_update_post(["ID" => get_the_ID(), "post_author" => $reassign_to]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).
admin/partials/tools.php:26
  - STORAGE call to delete_option("gdpr_data_breach_initiated") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/class-gdpr-activator.php:39
  - STORAGE call to add_option("gdpr_disable_css", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-gdpr-activator.php:40
  - STORAGE call to add_option("gdpr_use_recaptcha", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-gdpr-activator.php:41
  - STORAGE call to add_option("gdpr_recaptcha_site_key", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-gdpr-activator.php:42
  - STORAGE call to add_option("gdpr_recaptcha_secret_key", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-gdpr-activator.php:43
  - STORAGE call to add_option("gdpr_add_consent_checkboxes_registration", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-gdpr-activator.php:44
  - STORAGE call to add_option("gdpr_add_consent_checkboxes_checkout", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-gdpr-activator.php:45
  - STORAGE call to add_option("gdpr_cookie_popup_content", ["necessary" => ["name" => "Necessary", "status" => "required", "cookies_used" => "", "how_we_use" => ""], "advertising" => ["name" => "Advertising", "status" => "on", "cookies_used" => "", "how_we_use" => ""], "analytics" => ["name" => "Analytics", "status" => "on", "cookies_used" => "", "how_we_use" => ""], "other" => ["name" => "Other", "status" => "on", "cookies_used" => "", "how_we_use" => ""]]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-gdpr-activator.php:73
  - STORAGE call to add_option("gdpr_refresh_after_preferences_update", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-gdpr-activator.php:74
  - STORAGE call to add_option("gdpr_enable_privacy_bar", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-gdpr-activator.php:75
  - STORAGE call to add_option("gdpr_display_cookie_categories_in_bar", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-gdpr-activator.php:76
  - STORAGE call to add_option("gdpr_hide_from_bots", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-gdpr-activator.php:77
  - STORAGE call to add_option("gdpr_reconsent_template", "modal") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-gdpr-audit-log.php:76
  - STORAGE call to add_user_meta($user_id, "gdpr_audit_log", $encrypted) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta
includes/class-gdpr-requests.php:141
  - STORAGE call to update_option("gdpr_requests", $requests) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-gdpr-requests.php:173
  - STORAGE call to update_option("gdpr_requests", $requests) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-gdpr-requests.php:177
  - STORAGE call to delete_user_meta($user->ID, $meta_key) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
includes/class-gdpr-requests.php:212
  - STORAGE call to update_option("gdpr_requests", $requests) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-gdpr-requests.php:238
  - STORAGE call to delete_user_meta($user_id, $meta_key) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
includes/class-gdpr-requests.php:285
  - STORAGE call to update_user_meta($user->ID, $meta_key, $key) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
includes/class-gdpr-requests.php:309
  - STORAGE call to update_option("gdpr_requests", $requests) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/class-gdpr.php:308
  - STORAGE call to add_user_meta($user_id, "gdpr_consents", $consent) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta
includes/class-gdpr.php:619
  - STORAGE call to add_user_meta($user_id, "gdpr_consents", $consent) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta
includes/class-gdpr.php:654
  - STORAGE call to delete_user_meta($user_id, "gdpr_consents", $consent) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).
  - Data types: user_meta
public/class-gdpr-public.php:276
  - STORAGE call to delete_user_meta($user->ID, "gdpr_consents") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
public/class-gdpr-public.php:280
  - STORAGE call to add_user_meta($user->ID, "gdpr_consents", $consent) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta
public/class-gdpr-public.php:437
  - STORAGE call to add_user_meta($user_id, "gdpr_consents", $consent) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta
public/class-gdpr-requests-public.php:48
  - STORAGE call to wp_delete_user($user->ID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $id (int). Returns (bool).
  - Data types: user, user_meta 

includes/class-gdpr-audit-log.php:42
  - CRYPTOGRAPHY call to openssl_encrypt($data, "aes-256-cbc", $key, 0, $iv).
includes/class-gdpr-audit-log.php:58
  - CRYPTOGRAPHY call to openssl_decrypt($encrypted_data, "aes-256-cbc", $key, 0, $iv). 

admin/class-gdpr-admin.php:706
  - DELETION call to delete_option("gdpr_data_breach_initiated") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
admin/class-gdpr-admin.php:776
  - DELETION call to delete_user_meta($user->ID, "gdpr_consents", $policy_id) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).
  - Data types: user_meta
admin/class-gdpr-admin.php:901
  - DELETION call to delete_user_meta($user_id, "gdpr_consents") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
admin/class-gdpr-requests-admin.php:257
  - DELETION call to wp_delete_user($user->ID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $id (int). Returns (bool).
  - Data types: user, user_meta
admin/partials/tools.php:26
  - DELETION call to delete_option("gdpr_data_breach_initiated") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
includes/class-gdpr-requests.php:177
  - DELETION call to delete_user_meta($user->ID, $meta_key) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
includes/class-gdpr-requests.php:238
  - DELETION call to delete_user_meta($user_id, $meta_key) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
includes/class-gdpr.php:654
  - DELETION call to delete_user_meta($user_id, "gdpr_consents", $consent) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).
  - Data types: user_meta
public/class-gdpr-public.php:276
  - DELETION call to delete_user_meta($user->ID, "gdpr_consents") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: user_meta
public/class-gdpr-requests-public.php:48
  - DELETION call to wp_delete_user($user->ID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $id (int). Returns (bool).
  - Data types: user, user_meta 

By data type:
email
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
file
	PHPStorageDetector.file_put_contents($path . $filename, self->crypt($user->user_email, $log)) - {'file'}
	PHPRetrievalDetector.file_get_contents($path . $filename) - {'file'}
	PHPStorageDetector.file_put_contents($path . "index.php", "") - {'file'}
first_name
	PropertyDetector.(unknown) - {'user', 'user_meta', 'first_name'}
	PropertyDetector.(unknown) - {'user', 'user_meta', 'first_name'}
	PropertyDetector.(unknown) - {'user', 'user_meta', 'first_name'}
last_name
	PropertyDetector.(unknown) - {'user', 'last_name', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'last_name', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'last_name', 'user_meta'}
none
	WordPressStorageDetector.wp_update_post(["ID" => get_the_ID(), "post_author" => $reassign_to]) - set()
	OpenSSLDetector.(unknown) - set()
	OpenSSLDetector.(unknown) - set()
	GenericEncryptionDetector.openssl_encrypt($data, "aes-256-cbc", $key, 0, $iv) - set()
	WordPressRetrievalDetector.wp_update_comment($new_comment) - set()
	GenericEncryptionDetector.openssl_decrypt($encrypted_data, "aes-256-cbc", $key, 0, $iv) - set()
option
	WordPressStorageDetector.add_option("gdpr_use_recaptcha", false) - {'option'}
	WordPressStorageDetector.add_option("gdpr_use_recaptcha", false) - {'option'}
	WordPressStorageDetector.delete_option("gdpr_data_breach_initiated") - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_cookie_popup_content", []) - {'option'}
	WordPressStorageDetector.add_option("gdpr_recaptcha_site_key", "") - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_hide_from_bots", true) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_policies_updated", []) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_add_consent_checkboxes_registration", false) - {'option'}
	WordPressStorageDetector.update_option("gdpr_requests", $requests) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_consent_types", []) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_policies_updated", []) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_consent_types", []) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_consent_types", []) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_consent_types", []) - {'option'}
	WordPressStorageDetector.update_option("gdpr_requests", $requests) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_email_limit", 100) - {'option'}
	WordPressStorageDetector.add_option("gdpr_disable_css", false) - {'option'}
	WordPressStorageDetector.update_option("gdpr_data_breach_initiated", ["key" => $key, "content" => $content, "nature" => $nature, "office_contact" => $office_contact, "consequences" => $consequences, "measures" => $measures]) - {'option'}
	WordPressStorageDetector.add_option("gdpr_enable_privacy_bar", true) - {'option'}
	WordPressStorageDetector.add_option("gdpr_display_cookie_categories_in_bar", false) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_use_recaptcha", false) - {'option'}
	WordPressStorageDetector.update_option("gdpr_requests", $requests) - {'option'}
	WordPressStorageDetector.add_option("gdpr_hide_from_bots", true) - {'option'}
	WordPressStorageDetector.add_option("gdpr_reconsent_template", "modal") - {'option'}
	WordPressStorageDetector.add_option("gdpr_recaptcha_secret_key", "") - {'option'}
	WordPressStorageDetector.add_option("gdpr_reconsent_template", "modal") - {'option'}
	WordPressStorageDetector.add_option("gdpr_enable_telemetry_tracker", false) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_requests", []) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_recaptcha_site_key", "") - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_disable_css", false) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_use_recaptcha", false) - {'option'}
	WordPressStorageDetector.add_option("gdpr_add_consent_checkboxes_registration", true) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_recaptcha_site_key", "") - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_cookie_popup_content", []) - {'option'}
	WordPressStorageDetector.add_option("gdpr_add_consent_checkboxes_checkout", true) - {'option'}
	WordPressStorageDetector.add_option("gdpr_cookie_popup_content", ["necessary" => ["name" => "Necessary", "status" => "required", "cookies_used" => "", "how_we_use" => ""], "advertising" => ["name" => "Advertising", "status" => "on", "cookies_used" => "", "how_we_use" => ""], "analytics" => ["name" => "Analytics", "status" => "on", "cookies_used" => "", "how_we_use" => ""], "other" => ["name" => "Other", "status" => "on", "cookies_used" => "", "how_we_use" => ""]]) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_consent_types", []) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_recaptcha_secret_key", "") - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_enable_privacy_bar", true) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_cookie_banner_content", "") - {'option'}
	WordPressStorageDetector.add_option("gdpr_display_cookie_categories_in_bar", false) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_cookie_popup_content", []) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_display_cookie_categories_in_bar", false) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_recaptcha_secret_key", "") - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_hide_from_bots", true) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_disable_css", false) - {'option'}
	WordPressStorageDetector.update_option("gdpr_policies_updated", $policies_updated) - {'option'}
	WordPressStorageDetector.add_option("gdpr_add_consent_checkboxes_registration", true) - {'option'}
	WordPressStorageDetector.delete_option("gdpr_data_breach_initiated") - {'option'}
	WordPressStorageDetector.add_option("gdpr_refresh_after_preferences_update", true) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_deletion_needs_review", true) - {'option'}
	WordPressStorageDetector.update_option("gdpr_policies_updated", $policies_updated) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_recaptcha_secret_key", "") - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_cookie_popup_content", []) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_recaptcha_site_key", "") - {'option'}
	WordPressStorageDetector.add_option("gdpr_recaptcha_site_key", "") - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_cookie_privacy_excerpt", "") - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_use_recaptcha", false) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_recaptcha_site_key", "") - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_recaptcha_secret_key", "") - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_display_cookie_categories_in_bar", false) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_use_recaptcha", false) - {'option'}
	WordPressStorageDetector.add_option("gdpr_refresh_after_preferences_update", true) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_add_consent_checkboxes_checkout", false) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_email_limit", 100) - {'option'}
	WordPressStorageDetector.add_option("gdpr_add_consent_checkboxes_checkout", true) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_enable_privacy_bar", true) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_data_breach_initiated", ["key" => ""]) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_data_breach_initiated", ["key" => ""]) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_consent_types", []) - {'option'}
	WordPressStorageDetector.update_option("gdpr_policies_updated", $policies_updated) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_consent_types", []) - {'option'}
	WordPressStorageDetector.add_option("gdpr_disable_css", false) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_reconsent_template", "modal") - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_requests", []) - {'option'}
	WordPressStorageDetector.add_option("gdpr_recaptcha_secret_key", "") - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_refresh_after_preferences_update", false) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_policies_updated", []) - {'option'}
	WordPressStorageDetector.update_option("gdpr_requests", $requests) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_cookie_privacy_excerpt", "") - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_refresh_after_preferences_update", true) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_hide_from_bots", true) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_requests", []) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_requests", []) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_policies_updated", []) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_requests", []) - {'option'}
	DeletionDetector.delete_option("gdpr_data_breach_initiated") - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_requests", []) - {'option'}
	DeletionDetector.delete_option("gdpr_data_breach_initiated") - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_add_consent_checkboxes_registration", false) - {'option'}
	WordPressStorageDetector.add_option("gdpr_hide_from_bots", true) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_add_consent_checkboxes_checkout", false) - {'option'}
	WordPressStorageDetector.add_option("gdpr_enable_privacy_bar", true) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_requests", []) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_consent_types", []) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_cookie_banner_content", "") - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_reconsent_template", "modal") - {'option'}
	WordPressRetrievalDetector.get_option("admin_email") - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_consent_types", []) - {'option'}
	WordPressRetrievalDetector.get_option("gdpr_deletion_needs_review", true) - {'option'}
post
	WordPressRetrievalDetector.get_post($consent["policy-page"]) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($consent["policy-page"]) - {'post_meta', 'post', 'wp_post'}
post_meta
	WordPressRetrievalDetector.get_post_meta($page_obj->ID, "panels_data", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post($consent["policy-page"]) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($consent["policy-page"]) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($page_obj->ID, "panels_data", true) - {'post_meta'}
remote
	WordPressRemoteDetector.(unknown) - {'remote'}
site
	WordPressStorageDetector.set_transient("settings_errors", get_settings_errors(), 30) - {'site'}
	WordPressStorageDetector.set_transient("settings_errors", get_settings_errors(), 30) - {'site'}
	WordPressStorageDetector.delete_transient("gdpr_updated") - {'site'}
	WordPressStorageDetector.set_transient("gdpr_updated", 1) - {'site'}
	WordPressStorageDetector.set_transient("settings_errors", get_settings_errors(), 30) - {'site'}
	WordPressStorageDetector.set_transient("settings_errors", get_settings_errors(), 30) - {'site'}
	WordPressStorageDetector.set_transient("settings_errors", get_settings_errors(), 30) - {'site'}
	WordPressStorageDetector.set_transient("settings_errors", get_settings_errors(), 30) - {'site'}
	WordPressStorageDetector.set_transient("settings_errors", get_settings_errors(), 30) - {'site'}
	WordPressStorageDetector.set_transient("settings_errors", get_settings_errors(), 30) - {'site'}
	WordPressStorageDetector.set_transient("settings_errors", get_settings_errors(), 30) - {'site'}
	WordPressRetrievalDetector.get_transient("gdpr_updated") - {'site'}
user
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $email) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("ID", $user_id) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'last_name', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	DeletionDetector.wp_delete_user($user->ID) - {'user', 'user_meta'}
	DeletionDetector.wp_delete_user($user->ID) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'last_name', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta', 'first_name'}
	WordPressStorageDetector.wp_delete_user($user->ID) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta', 'first_name'}
	WordPressRetrievalDetector.get_user_by("email", $email) - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $email) - {'user', 'user_meta'}
	WordPressStorageDetector.wp_delete_user($user->ID) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_users(["fields" => "all_with_meta"]) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'last_name', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $request["email"]) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $email) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $email) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("ID", $reassign_to) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("ID", $user_id) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $email) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("ID", $user_id) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $request["email"]) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_users(["role" => "administrator"]) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", sanitize_email(wp_unslash($_POST["user_email"]))) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $email) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("ID", $user) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $email) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $email) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $email) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_users(["fields" => "all_with_meta"]) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta', 'first_name'}
	WordPressRetrievalDetector.get_user_by("email", $email) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("ID", $user_id) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $email) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $email) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $email) - {'user', 'user_meta'}
user_meta
	WordPressRetrievalDetector.get_user_meta($user_id, "gdpr_consents") - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id, "gdpr_consents") - {'user_meta'}
	WordPressStorageDetector.add_user_meta($user_id, "gdpr_audit_log", $encrypted) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user->ID, "gdpr_consents") - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $email) - {'user', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id, "gdpr_consents") - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user->ID, "gdpr_consents") - {'user_meta'}
	WordPressRetrievalDetector.get_user_by("ID", $user_id) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'last_name', 'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	DeletionDetector.delete_user_meta($user_id, $meta_key) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user->ID, $meta_key, $key) - {'user_meta'}
	DeletionDetector.wp_delete_user($user->ID) - {'user', 'user_meta'}
	WordPressStorageDetector.delete_user_meta($user_id, "gdpr_consents") - {'user_meta'}
	DeletionDetector.wp_delete_user($user->ID) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'last_name', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta', 'first_name'}
	WordPressStorageDetector.wp_delete_user($user->ID) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta', 'first_name'}
	WordPressRetrievalDetector.get_user_by("email", $email) - {'user', 'user_meta'}
	WordPressStorageDetector.delete_user_meta($user_id, "gdpr_consents", $consent) - {'user_meta'}
	WordPressStorageDetector.add_user_meta($user_id, "gdpr_consents", $consent) - {'user_meta'}
	WordPressStorageDetector.delete_user_meta($user->ID, "gdpr_consents") - {'user_meta'}
	DeletionDetector.delete_user_meta($user->ID, $meta_key) - {'user_meta'}
	WordPressStorageDetector.add_user_meta($user->ID, "gdpr_consents", $consent) - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user->ID, "gdpr_audit_log", false) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id) - {'user_meta'}
	WordPressStorageDetector.add_user_meta($user_id, "gdpr_consents", $consent) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id, "gdpr_consents") - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user->ID, self"plugin_name" . "_"$type"_key", true) - {'user_meta'}
	WordPressStorageDetector.add_user_meta($customer_id, "gdpr_consents", $consent) - {'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $email) - {'user', 'user_meta'}
	WordPressStorageDetector.delete_user_meta($user->ID, $meta_key) - {'user_meta'}
	WordPressStorageDetector.wp_delete_user($user->ID) - {'user', 'user_meta'}
	WordPressStorageDetector.add_user_meta($user_id, "gdpr_consents", $consent) - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id, "gdpr_consents") - {'user_meta'}
	WordPressRetrievalDetector.get_users(["fields" => "all_with_meta"]) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'last_name', 'user_meta'}
	WordPressStorageDetector.delete_user_meta($user->ID, "gdpr_consents", $policy_id) - {'user_meta'}
	WordPressStorageDetector.delete_user_meta($user_id, $meta_key) - {'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $request["email"]) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $email) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $email) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("ID", $reassign_to) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("ID", $user_id) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $email) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("ID", $user_id) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $request["email"]) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_users(["role" => "administrator"]) - {'user', 'user_meta'}
	DeletionDetector.delete_user_meta($user_id, "gdpr_consents") - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user->ID, "gdpr_consents") - {'user_meta'}
	DeletionDetector.delete_user_meta($user->ID, "gdpr_consents") - {'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", sanitize_email(wp_unslash($_POST["user_email"]))) - {'user', 'user_meta'}
	DeletionDetector.delete_user_meta($user->ID, "gdpr_consents", $policy_id) - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user', 'user_meta'}
	WordPressStorageDetector.add_user_meta($user_id, "gdpr_consents", $consent) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user->ID, "gdpr_consents") - {'user_meta'}
	VariableDetector.(unknown) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user_id, $meta_key, true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user->ID, "gdpr_consents") - {'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $email) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("ID", $user) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $email) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $email) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $email) - {'user', 'user_meta'}
	DeletionDetector.delete_user_meta($user_id, "gdpr_consents", $consent) - {'user_meta'}
	WordPressRetrievalDetector.get_users(["fields" => "all_with_meta"]) - {'user', 'user_meta'}
	PropertyDetector.(unknown) - {'user', 'user_meta', 'first_name'}
	WordPressRetrievalDetector.get_user_by("email", $email) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("ID", $user_id) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $email) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $email) - {'user', 'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user->ID, "gdpr_consents") - {'user_meta'}
	WordPressRetrievalDetector.get_user_by("email", $email) - {'user', 'user_meta'}
wp_post
	WordPressRetrievalDetector.get_post($consent["policy-page"]) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($consent["policy-page"]) - {'post_meta', 'post', 'wp_post'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:32.259410.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 2925 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:01.116333.

!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 2463
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 18037
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 19228
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 19438
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 20678
1000 STORE_REACHES edges created
2000 STORE_REACHES edges created
2925 STORE_REACHES edges created
2925 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 1000 nodes as PERSONAL
Tainted 1222 nodes as PERSONAL
In total, tainted 1222 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 741 nodes as ENCRYPTED
In total, tainted 741 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:58.101098.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:03:13.430503!
Request variable '$_POST["email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["gdpr-data-breach-email-content"]' of personal types {'email'} is found.,,None
Request variable '$_POST["gdpr-data-breach-email-content"]' of personal types {'email'} is found.,,None
Request variable '$_POST["user_email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["user_email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["user_email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["user_email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["user_email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["user_email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["user_email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["user_email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["user_email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["user_email"]' of personal types {'email'} is found.,,None
Request variable '$_GET["email"]' of personal types {'email'} is found.,,None
Request variable '$_GET["email"]' of personal types {'email'} is found.,,None
DELETION call to delete_option("gdpr_data_breach_initiated") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_user_meta($user->ID, "gdpr_consents", $policy_id) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).,None,None
DELETION call to delete_user_meta($user_id, "gdpr_consents") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to wp_delete_user($user->ID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $id (int). Returns (bool).,None,None
DELETION call to delete_option("gdpr_data_breach_initiated") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_user_meta($user->ID, $meta_key) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_user_meta($user_id, $meta_key) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_user_meta($user_id, "gdpr_consents", $consent) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).,None,None
DELETION call to delete_user_meta($user->ID, "gdpr_consents") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to wp_delete_user($user->ID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $id (int). Returns (bool).,None,None
CRYPTOGRAPHY call to openssl_encrypt($data, "aes-256-cbc", $key, 0, $iv).,None,None
CRYPTOGRAPHY call to openssl_decrypt($encrypted_data, "aes-256-cbc", $key, 0, $iv).,None,None
openssl_encrypt called with approved encryption algorithm aes-256-cbc.,aes-256-cbc,None
openssl_decrypt called with approved encryption algorithm aes-256-cbc.,aes-256-cbc,None
RETRIEVAL call to file_get_contents($path . $filename).,None,None
STORAGE call to file_put_contents($path . "index.php", "").,None,None
STORAGE call to file_put_contents($path . $filename, self->crypt($user->user_email, $log)).,None,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$user->first_name' of personal types {'user', 'user_meta', 'first_name'} is found.,,None
object property '$user->last_name' of personal types {'user', 'last_name', 'user_meta'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$v->comment_author_email' of personal types {'email'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$v->comment_author_email' of personal types {'email'} is found.,,None
object property '$user->first_name' of personal types {'user', 'user_meta', 'first_name'} is found.,,None
object property '$user->last_name' of personal types {'user', 'last_name', 'user_meta'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$user->first_name' of personal types {'user', 'user_meta', 'first_name'} is found.,,None
object property '$user->last_name' of personal types {'user', 'last_name', 'user_meta'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$v->comment_author_email' of personal types {'email'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
object property '$user->user_email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email_masked' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email_masked' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email_arr' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email_arr' of personal types {'email'} is found.,,None
variable '$email_arr' of personal types {'email'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$email_arr' of personal types {'email'} is found.,,None
variable '$email_arr' of personal types {'email'} is found.,,None
variable '$username' of personal types {'user', 'user_meta'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$emails' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$emails' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$emails' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$loop_emails' of personal types {'email'} is found.,,None
variable '$loop_emails' of personal types {'email'} is found.,,None
variable '$loop_emails' of personal types {'email'} is found.,,None
variable '$loop_emails' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$plugin_emails' of personal types {'email'} is found.,,None
variable '$plugin_emails' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email_args' of personal types {'email'} is found.,,None
variable '$email_args' of personal types {'email'} is found.,,None
variable '$email_args' of personal types {'email'} is found.,,None
variable '$email_args' of personal types {'email'} is found.,,None
variable '$email_args' of personal types {'email'} is found.,,None
variable '$email_args' of personal types {'email'} is found.,,None
variable '$email_args' of personal types {'email'} is found.,,None
variable '$email_args' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$notification_email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$notification_email_args' of personal types {'email'} is found.,,None
variable '$notification_email' of personal types {'email'} is found.,,None
variable '$notification_email_args' of personal types {'email'} is found.,,None
variable '$notification_email' of personal types {'email'} is found.,,None
variable '$notification_email_args' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
variable '$email' of personal types {'email'} is found.,,None
API call to wp_remote_post("https://www.google.com/recaptcha/api/siteverify", ["body" => ["secret" => $secret_key, "response" => sanitize_text_field(wp_unslash($_POST["g-recaptcha-response"]))]]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,['https://www.google.com/recaptcha/api/siteverify']
RETRIEVAL call to get_option("gdpr_requests", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_cookie_popup_content", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_consent_types", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_requests", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_user_by("email", $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_meta($user->ID, "gdpr_consents") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_transient("gdpr_updated") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_policies_updated", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_option("gdpr_consent_types", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_policies_updated", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_users(["fields" => "all_with_meta"]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $args (array). Returns (array).,None,None
RETRIEVAL call to get_user_meta($user->ID, "gdpr_consents") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_policies_updated", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_consent_types", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_policies_updated", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_consent_types", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user->ID, "gdpr_consents") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_consent_types", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user_id, "gdpr_consents") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_by("email", $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_by("email", $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_by("email", $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_by("email", $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to wp_update_comment($new_comment). Passed arguments: 0: $commentarr (array). Returns (int|false|WP_Error).,None,None
RETRIEVAL call to get_user_by("email", $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_by("email", $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_by("ID", $reassign_to) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_option("gdpr_requests", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_user_by("email", $request["email"]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_by("email", $request["email"]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_users(["role" => "administrator"]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $args (array). Returns (array).,None,None
RETRIEVAL call to get_option("gdpr_enable_privacy_bar", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_display_cookie_categories_in_bar", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_cookie_banner_content", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_cookie_privacy_excerpt", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_use_recaptcha", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_recaptcha_site_key", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_recaptcha_secret_key", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_add_consent_checkboxes_registration", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_email_limit", 100) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_add_consent_checkboxes_checkout", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_deletion_needs_review", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_refresh_after_preferences_update", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_disable_css", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_hide_from_bots", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_reconsent_template", "modal") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_data_breach_initiated", ["key" => ""]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_user_by("ID", $user_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_by("ID", $user_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_by("email", $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_meta($user->ID, "gdpr_audit_log", false) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_by("email", $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_option("gdpr_data_breach_initiated", ["key" => ""]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_email_limit", 100) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_users(["fields" => "all_with_meta"]) alters data types {'user', 'user_meta'}. Passed arguments: 0: $args (array). Returns (array).,None,None
RETRIEVAL call to get_option("gdpr_requests", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_requests", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_user_by("email", $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_option("gdpr_requests", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user_id, $meta_key, true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_requests", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_user_by("email", $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_by("ID", $user) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_option("gdpr_add_consent_checkboxes_registration", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_add_consent_checkboxes_checkout", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_consent_types", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user_id) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int). Returns (mixed).,None,None
RETRIEVAL call to get_user_by("email", $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_meta($user->ID, "gdpr_consents") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_by("email", $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_option("gdpr_consent_types", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_user_by("ID", $user_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_meta($user_id, "gdpr_consents") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_by("ID", $user_id) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_meta($user_id, "gdpr_consents") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_user_meta($user->ID, "gdpr_consents") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_disable_css", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_use_recaptcha", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_recaptcha_site_key", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_recaptcha_secret_key", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_refresh_after_preferences_update", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_enable_privacy_bar", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_cookie_banner_content", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_cookie_popup_content", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_display_cookie_categories_in_bar", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_hide_from_bots", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_cookie_privacy_excerpt", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_consent_types", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_cookie_popup_content", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_hide_from_bots", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_option("gdpr_consent_types", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_user_meta($user->ID, "gdpr_consents") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_reconsent_template", "modal") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user_id, "gdpr_consents") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user_id, "gdpr_consents") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_cookie_popup_content", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_use_recaptcha", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_recaptcha_site_key", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_recaptcha_secret_key", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_recaptcha_site_key", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_recaptcha_secret_key", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user', 'user_meta'}. Returns (WP_User).,None,None
RETRIEVAL call to get_user_by("email", sanitize_email(wp_unslash($_POST["user_email"]))) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_option("admin_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_by("email", $email) alters data types {'user', 'user_meta'}. Passed arguments: 0: $field (string), 1: $value (int|string). Returns (WP_User|false).,None,None
RETRIEVAL call to get_user_meta($user->ID, self"plugin_name" . "_"$type"_key", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_deletion_needs_review", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("gdpr_use_recaptcha", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post($consent["policy-page"]) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($page_obj->ID, "panels_data", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($consent["policy-page"]) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($page_obj->ID, "panels_data", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
STORAGE call to delete_transient("gdpr_updated") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).,None,None
STORAGE call to set_transient("gdpr_updated", 1) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("gdpr_disable_css", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("gdpr_enable_telemetry_tracker", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("gdpr_use_recaptcha", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("gdpr_recaptcha_site_key", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("gdpr_recaptcha_secret_key", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("gdpr_add_consent_checkboxes_registration", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("gdpr_add_consent_checkboxes_checkout", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("gdpr_refresh_after_preferences_update", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("gdpr_enable_privacy_bar", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("gdpr_display_cookie_categories_in_bar", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("gdpr_hide_from_bots", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("gdpr_reconsent_template", "modal") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("gdpr_data_breach_initiated", ["key" => $key, "content" => $content, "nature" => $nature, "office_contact" => $office_contact, "consequences" => $consequences, "measures" => $measures]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to set_transient("settings_errors", get_settings_errors(), 30) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to delete_option("gdpr_data_breach_initiated") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("gdpr_policies_updated", $policies_updated) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_user_meta($user->ID, "gdpr_consents", $policy_id) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).,None,None
STORAGE call to update_option("gdpr_policies_updated", $policies_updated) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("gdpr_policies_updated", $policies_updated) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_user_meta($user_id, "gdpr_consents") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to add_user_meta($user_id, "gdpr_consents", $consent) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($customer_id, "gdpr_consents", $consent) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to set_transient("settings_errors", get_settings_errors(), 30) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to set_transient("settings_errors", get_settings_errors(), 30) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to set_transient("settings_errors", get_settings_errors(), 30) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to set_transient("settings_errors", get_settings_errors(), 30) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to wp_delete_user($user->ID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $id (int). Returns (bool).,None,None
STORAGE call to set_transient("settings_errors", get_settings_errors(), 30) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to wp_update_post(["ID" => get_the_ID(), "post_author" => $reassign_to]). Passed arguments: 0: $postarr (array|object). Returns (int|WP_Error).,None,None
STORAGE call to set_transient("settings_errors", get_settings_errors(), 30) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to set_transient("settings_errors", get_settings_errors(), 30) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to set_transient("settings_errors", get_settings_errors(), 30) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to delete_option("gdpr_data_breach_initiated") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to add_option("gdpr_disable_css", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("gdpr_use_recaptcha", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("gdpr_recaptcha_site_key", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("gdpr_recaptcha_secret_key", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("gdpr_add_consent_checkboxes_registration", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("gdpr_add_consent_checkboxes_checkout", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("gdpr_cookie_popup_content", ["necessary" => ["name" => "Necessary", "status" => "required", "cookies_used" => "", "how_we_use" => ""], "advertising" => ["name" => "Advertising", "status" => "on", "cookies_used" => "", "how_we_use" => ""], "analytics" => ["name" => "Analytics", "status" => "on", "cookies_used" => "", "how_we_use" => ""], "other" => ["name" => "Other", "status" => "on", "cookies_used" => "", "how_we_use" => ""]]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("gdpr_refresh_after_preferences_update", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("gdpr_enable_privacy_bar", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("gdpr_display_cookie_categories_in_bar", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("gdpr_hide_from_bots", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("gdpr_reconsent_template", "modal") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_user_meta($user_id, "gdpr_audit_log", $encrypted) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to update_option("gdpr_requests", $requests) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("gdpr_requests", $requests) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_user_meta($user->ID, $meta_key) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_option("gdpr_requests", $requests) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_user_meta($user_id, $meta_key) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_user_meta($user->ID, $meta_key, $key) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_option("gdpr_requests", $requests) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_user_meta($user_id, "gdpr_consents", $consent) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "gdpr_consents", $consent) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to delete_user_meta($user_id, "gdpr_consents", $consent) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).,None,None
STORAGE call to delete_user_meta($user->ID, "gdpr_consents") alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to add_user_meta($user->ID, "gdpr_consents", $consent) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to add_user_meta($user_id, "gdpr_consents", $consent) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to wp_delete_user($user->ID) alters data types {'user', 'user_meta'}. Passed arguments: 0: $id (int). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
Data Deletion violation! The plugin has storage node that has no identifier and cannot be accessed!
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] Unstructured data storage of PII types (['user_meta', 'first_name', 'last_name', 'user', 'email']) to files through function "file_put_contents", found in file includes/class-gdpr-audit-log.php at line 173. 

[has_storage] PII of types (['user_meta', 'user', 'email']) stored through WordPress function "add_user_meta($user_id, "gdpr_audit_log", $encrypted)", found in file includes/class-gdpr-audit-log.php at line 76. 

[has_storage] PII of types (['email']) stored through WordPress function "update_option("gdpr_data_breach_initiated", ["key" => $key, "content" => $content, "nature" => $nature, "office_contact" => $office_contact, "consequences" => $consequences, "measures" => $measures])", found in file admin/class-gdpr-admin.php at line 647. 

[has_storage] PII of types (['user_meta', 'user', 'email']) stored through WordPress function "update_user_meta($user->ID, $meta_key, $key)", found in file includes/class-gdpr-requests.php at line 285. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "add_user_meta($user_id, "gdpr_consents", $consent)", found in file includes/class-gdpr.php at line 619. 

[has_storage] PII of types (['user_meta', 'user', 'email']) stored through WordPress function "add_user_meta($user->ID, "gdpr_consents", $consent)", found in file public/class-gdpr-public.php at line 280. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "add_user_meta($user_id, "gdpr_consents", $consent)", found in file public/class-gdpr-public.php at line 437. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "add_user_meta($customer_id, "gdpr_consents", $consent)", found in file admin/class-gdpr-admin.php at line 962. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "add_user_meta($user_id, "gdpr_consents", $consent)", found in file admin/class-gdpr-admin.php at line 909. 

[has_storage] PII of types (['email']) stored through WordPress function "update_option("gdpr_policies_updated", $policies_updated)", found in file admin/class-gdpr-admin.php at line 822. 

[has_storage] PII of types (['user_meta']) stored through WordPress function "add_user_meta($user_id, "gdpr_consents", $consent)", found in file includes/class-gdpr.php at line 308. 

[has_storage] Storage check is CUSTOM_UNSTRUCTURED 

[Art.17, Right to erasure] Complete data deletion is required for storage at node ID 11497 , but is impossible due to custom storage of PII without identifiers. Found in file includes/class-gdpr-audit-log.php at line 173 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "gdpr_audit_log", $encrypted) does not have corresponding deletion method. Storage method found in file includes/class-gdpr-audit-log.php at line 76. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("gdpr_data_breach_initiated", ["key" => $key, "content" => $content, "nature" => $nature, "office_contact" => $office_contact, "consequences" => $consequences, "measures" => $measures]) has deletion method delete_option("gdpr_data_breach_initiated"). Storage method found in file admin/class-gdpr-admin.php at line 647. Deletion method found in file admin/class-gdpr-admin.php at line 706. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("gdpr_data_breach_initiated", ["key" => $key, "content" => $content, "nature" => $nature, "office_contact" => $office_contact, "consequences" => $consequences, "measures" => $measures]) has deletion method delete_option("gdpr_data_breach_initiated"). Storage method found in file admin/class-gdpr-admin.php at line 647. Deletion method found in file admin/partials/tools.php at line 26. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user->ID, $meta_key, $key) does not have corresponding deletion method. Storage method found in file includes/class-gdpr-requests.php at line 285. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "gdpr_consents", $consent) has deletion method delete_user_meta($user->ID, "gdpr_consents", $policy_id). Storage method found in file includes/class-gdpr.php at line 619. Deletion method found in file admin/class-gdpr-admin.php at line 776. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "gdpr_consents", $consent) has deletion method delete_user_meta($user_id, "gdpr_consents"). Storage method found in file includes/class-gdpr.php at line 619. Deletion method found in file admin/class-gdpr-admin.php at line 901. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "gdpr_consents", $consent) has deletion method delete_user_meta($user_id, "gdpr_consents", $consent). Storage method found in file includes/class-gdpr.php at line 619. Deletion method found in file includes/class-gdpr.php at line 654. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "gdpr_consents", $consent) has deletion method delete_user_meta($user->ID, "gdpr_consents"). Storage method found in file includes/class-gdpr.php at line 619. Deletion method found in file public/class-gdpr-public.php at line 276. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user->ID, "gdpr_consents", $consent) has deletion method delete_user_meta($user->ID, "gdpr_consents", $policy_id). Storage method found in file public/class-gdpr-public.php at line 280. Deletion method found in file admin/class-gdpr-admin.php at line 776. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user->ID, "gdpr_consents", $consent) has deletion method delete_user_meta($user_id, "gdpr_consents"). Storage method found in file public/class-gdpr-public.php at line 280. Deletion method found in file admin/class-gdpr-admin.php at line 901. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user->ID, "gdpr_consents", $consent) has deletion method delete_user_meta($user_id, "gdpr_consents", $consent). Storage method found in file public/class-gdpr-public.php at line 280. Deletion method found in file includes/class-gdpr.php at line 654. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user->ID, "gdpr_consents", $consent) has deletion method delete_user_meta($user->ID, "gdpr_consents"). Storage method found in file public/class-gdpr-public.php at line 280. Deletion method found in file public/class-gdpr-public.php at line 276. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "gdpr_consents", $consent) has deletion method delete_user_meta($user->ID, "gdpr_consents", $policy_id). Storage method found in file public/class-gdpr-public.php at line 437. Deletion method found in file admin/class-gdpr-admin.php at line 776. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "gdpr_consents", $consent) has deletion method delete_user_meta($user_id, "gdpr_consents"). Storage method found in file public/class-gdpr-public.php at line 437. Deletion method found in file admin/class-gdpr-admin.php at line 901. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "gdpr_consents", $consent) has deletion method delete_user_meta($user_id, "gdpr_consents", $consent). Storage method found in file public/class-gdpr-public.php at line 437. Deletion method found in file includes/class-gdpr.php at line 654. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "gdpr_consents", $consent) has deletion method delete_user_meta($user->ID, "gdpr_consents"). Storage method found in file public/class-gdpr-public.php at line 437. Deletion method found in file public/class-gdpr-public.php at line 276. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($customer_id, "gdpr_consents", $consent) has deletion method delete_user_meta($user->ID, "gdpr_consents", $policy_id). Storage method found in file admin/class-gdpr-admin.php at line 962. Deletion method found in file admin/class-gdpr-admin.php at line 776. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($customer_id, "gdpr_consents", $consent) has deletion method delete_user_meta($user_id, "gdpr_consents"). Storage method found in file admin/class-gdpr-admin.php at line 962. Deletion method found in file admin/class-gdpr-admin.php at line 901. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($customer_id, "gdpr_consents", $consent) has deletion method delete_user_meta($user_id, "gdpr_consents", $consent). Storage method found in file admin/class-gdpr-admin.php at line 962. Deletion method found in file includes/class-gdpr.php at line 654. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($customer_id, "gdpr_consents", $consent) has deletion method delete_user_meta($user->ID, "gdpr_consents"). Storage method found in file admin/class-gdpr-admin.php at line 962. Deletion method found in file public/class-gdpr-public.php at line 276. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "gdpr_consents", $consent) has deletion method delete_user_meta($user->ID, "gdpr_consents", $policy_id). Storage method found in file admin/class-gdpr-admin.php at line 909. Deletion method found in file admin/class-gdpr-admin.php at line 776. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "gdpr_consents", $consent) has deletion method delete_user_meta($user_id, "gdpr_consents"). Storage method found in file admin/class-gdpr-admin.php at line 909. Deletion method found in file admin/class-gdpr-admin.php at line 901. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "gdpr_consents", $consent) has deletion method delete_user_meta($user_id, "gdpr_consents", $consent). Storage method found in file admin/class-gdpr-admin.php at line 909. Deletion method found in file includes/class-gdpr.php at line 654. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "gdpr_consents", $consent) has deletion method delete_user_meta($user->ID, "gdpr_consents"). Storage method found in file admin/class-gdpr-admin.php at line 909. Deletion method found in file public/class-gdpr-public.php at line 276. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("gdpr_policies_updated", $policies_updated) has deletion method delete_option("gdpr_data_breach_initiated"). Storage method found in file admin/class-gdpr-admin.php at line 822. Deletion method found in file admin/class-gdpr-admin.php at line 706. 

[Art.17, Right to erasure] Wordpress storage of PII through update_option("gdpr_policies_updated", $policies_updated) has deletion method delete_option("gdpr_data_breach_initiated"). Storage method found in file admin/class-gdpr-admin.php at line 822. Deletion method found in file admin/partials/tools.php at line 26. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "gdpr_consents", $consent) has deletion method delete_user_meta($user->ID, "gdpr_consents", $policy_id). Storage method found in file includes/class-gdpr.php at line 308. Deletion method found in file admin/class-gdpr-admin.php at line 776. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "gdpr_consents", $consent) has deletion method delete_user_meta($user_id, "gdpr_consents"). Storage method found in file includes/class-gdpr.php at line 308. Deletion method found in file admin/class-gdpr-admin.php at line 901. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "gdpr_consents", $consent) has deletion method delete_user_meta($user_id, "gdpr_consents", $consent). Storage method found in file includes/class-gdpr.php at line 308. Deletion method found in file includes/class-gdpr.php at line 654. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "gdpr_consents", $consent) has deletion method delete_user_meta($user->ID, "gdpr_consents"). Storage method found in file includes/class-gdpr.php at line 308. Deletion method found in file public/class-gdpr-public.php at line 276. 

[Art.17, Right to erasure] Deletion access is NONE 

[Art.15, Right to access] Complete data access is required for storage at node ID 11497 , but is impossible due to custom storage of PII without identifiers. Found in file includes/class-gdpr-audit-log.php at line 173 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 10999. Found in file includes/class-gdpr-audit-log.php at line 76 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 2556. Found in file admin/class-gdpr-admin.php at line 647 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 14080. Found in file includes/class-gdpr-requests.php at line 285 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 17300. Found in file includes/class-gdpr.php at line 619 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 19310. Found in file public/class-gdpr-public.php at line 280 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 20122. Found in file public/class-gdpr-public.php at line 437 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3901. Found in file admin/class-gdpr-admin.php at line 962 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3668. Found in file admin/class-gdpr-admin.php at line 909 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3249. Found in file admin/class-gdpr-admin.php at line 822 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 15654. Found in file includes/class-gdpr.php at line 308 

[Art.15, Right to access] Data access is NONE 

[third_party] Third party at "https://www.google.com/recaptcha/api/siteverify" used with data types ['email'], found in file public/class-gdpr-requests-public.php at line 113 . Personal data flows from sources with nodeID [2481]  

[third_party] Third party usage is CONFIRMED for data types ['email'] 

[encryption] API call that sends PII to "https://www.google.com/recaptcha/api/siteverify" uses https. PII is insecurely encrypted with []. Found in file public/class-gdpr-requests-public.php at line 113 

[main] Applicable GDPR requirements: ['access', 'deletion', 'encryption', 'third_party'] 

[main] Is deletion in violation? True 

[main] Is access in violation? True 

[main] Is third_party in violation? True 

[main] Is encryption in violation? True 

[main] Complaint? False 


###########
### Q&A ###
###########

1. Why is my plugin in violation against GDPR?

GDPR (https://gdpr-info.eu/) aims to give citizens in the European Union (EU) control over their personal data. If a website collects or store user data, it is required to provide users functionalities to control their data, such as ones to erase or export their data. While a plugin do not directly interact with users, it may provide functionalities that collect or store personal data, which would make websites that deploy the plugin in violation against GDPR if the plugin does not provide corresponding functionalities to allow users control their personal data. Therefore, plugin developers are responsible to provide functions to manage the personal data they handle in accordance with GDPR. We list requirements by specific GDPR articles relevant to your plugin below.


[Art. 13, Information to be provided where personal data are collected from the data subject] If a plugin collects or handles personal data, it needs to provide privacy policy texts that explain what personal data is being collected and for what purpose. The texts are meant to be added to the privacy policy of the websites that deploy the plugin. 


            
[Art.17, Right to erasure] If a plugin stores personal data in a custom database they create or manage, or through Wordpress's native storage functions (e.g., update_user_meta), it needs to provide methods for users to erase the data upon request. Note that deleting data for all users upon uninstallation does not satisfy the requirement. 


            
        

2. How do I make my plugin compliant?

Please refer to the fix report below to see how you can make your plugin comply with GDPR.

        

##################
### Fix Report ###
##################

############################
# Data Deletion Fix Report #
############################

This report suggests fixes to comply with the GDPR Art. 17, Right to erasure (https://gdpr-info.eu/art-17-gdpr/). The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/adding-the-personal-data-eraser-to-your-plugin/ for more details.

1) Implement a function that deletes all the user data collected in the plugin. Sample code:


/**
* Removes all collected data of a user.
*
* @param string $email_address   email address to manipulate
* @param int    $page            pagination
*
* @return array
*/
function gdpr_remove_data( $email_address, $page = 1 ) {
    
    $page = (int) $page;


    //TODO: Delete the user data that was stored using Wordpress functions

    //Below is the sample code for deleting user meta and may need to be modified to suit the plugin.
    $user_id = get_user_by('email', $email_address)
    $key = 'email' //Sample user meta key
    if ( $customer->user_id > 0 ) {
        //Delete user meta data by $key
        delete_user_meta( $user_id, $key );
    }
        



    // Tell core if we have more data to delete still
    $done = true;
    return array(
        'items_removed'  => $items_removed, // true if collected data of a user is being deleted
        'items_retained' => $items_retained, // true if certain data needs to be retained
        'messages'       => sprintf( __( 'Data of user with email %s successfully deleted.', 'gdpr' ), $email_address ), // Put messages for data removal
        'done'           => $done, // true if all the removal processes are done (all data of the user is removed)
    );
}
        

2) Hook the deletion function to the Wordpress's Personal Data Removal tool


/**
* Registers all data erasers.
*
* @param array $exporters
*
* @return mixed
*/
function gdpr_register_privacy_erasers( $erasers ) {
    $erasers['my-plugin-slug'] = array(
        'eraser_friendly_name' => __( '<eraser name>', 'gdpr' ),
        'callback'             => 'gdpr_remove_data',
    );
    return $erasers;
}
        

add_filter( 'wp_privacy_personal_data_erasers', 'gdpr_register_privacy_erasers' );
        

        

#############################
# Privacy Policy Fix Report #
#############################

This report suggests fixes to comply with the GDPR Art. 13 (https://gdpr-info.eu/art-13-gdpr/) through including a privacy notice. The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/suggesting-text-for-the-site-privacy-policy/ for more details.

1) Implement a function that includes the privacy policy for the plugin and provide it to wordpress through wp_add_privacy_policy_content(). Sample code:


/**
* Adds a privacy policy statement.
*/
function gdpr_add_privacy_policy_content() {
    if ( ! function_exists( 'wp_add_privacy_policy_content' ) ) {
        return;
    }
    //TODO: modify the content below to include the privacy policy for the plugin.
    $content = '<p class="privacy-policy-tutorial">' . __( 'Some introductory content for the suggested text.', 'gdpr' ) . '</p>'
            . '<strong class="privacy-policy-tutorial">' . __( 'Suggested Text:', 'gdpr' ) . '</strong> '
            . sprintf(
                __( 'When you leave a comment on this site, we send your name, email address, IP address and comment text to example.com. Example.com does not retain your personal data. The example.com privacy policy is <a href="%1$s" target="_blank">here</a>.', 'gdpr' ),
                'https://example.com/privacy-policy'
            );
    wp_add_privacy_policy_content( 'gdpr', wp_kses_post( wpautop( $content, false ) ) );
}
        

2) Hook the privacy policy function to the Wordpress's admin initialization action.


add_action( 'admin_init', 'gdpr_add_privacy_policy_content' );
        

        


Disclaimer: The sample code provided above is only for reference and does not guarantee GDPR compliance. The recommended list of data to delete/export may not be comprehensive. 
        
Done.
