Timeout in resolving values
Timeout in running neo4j query
Running Main.py on very-simple-password

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.400407.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:00.984283.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 0 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.333004.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 0 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.488608.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 74 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:00.605210.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 0 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.614756.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.098257.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 27 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:00.696335.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 1041
Added 940 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 1041
Added 0 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.160111.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/very-simple-password/very-simple-password-for-wordpress.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/very-simple-password/VSPFW_options.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/very-simple-password/VSPFW_view.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.385839.

1000 PHP_REACHES edges created
1041 PHP_REACHES edges created
1041 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 334 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.163971.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.965169.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 6 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.944834.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 12 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.181249.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.119681.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.167926.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.010076.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.041953.

18 PHP_REACHES edges created
18 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 6 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.154501.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
5 SQL operations to process.
CREATE TABLE $wpdbvspfw (
			id mediumint(9) NOT NULL AUTO_INCREMENT,
			time datetime DEFAULT '0000-00-00 00:00:00' NOT NULL,
			unique_key varchar(32) DEFAULT '' NOT NULL,
			ip_address varchar(45) DEFAULT '' NOT NULL,
			PRIMARY KEY  (id)
		) $wpdb->get_charset_collate();
SQL command (CREATE TABLE $wpdbvspfw ( id mediumint(9) NOT NULL AUTO_INCREMENT, time datetime DEFAULT '0000-00-00 00:00:00' NOT NULL, unique_key varchar(32) DEFAULT '' NOT NULL, ip_address varchar(45) DEFAULT '' NOT NULL, PRIMARY KEY (id) ) $wpdb->get_charset_collate();) cannot be parsed correct.
CREATE TABLE $wpdbvspfw (
				id mediumint(9) NOT NULL AUTO_INCREMENT,
				time datetime DEFAULT '0000-00-00 00:00:00' NOT NULL,
				unique_key varchar(32) DEFAULT '' NOT NULL,
				ip_address varchar(45) DEFAULT '' NOT NULL,
				PRIMARY KEY  (id)
			) $wpdb->get_charset_collate();
SQL command (CREATE TABLE $wpdbvspfw ( id mediumint(9) NOT NULL AUTO_INCREMENT, time datetime DEFAULT '0000-00-00 00:00:00' NOT NULL, unique_key varchar(32) DEFAULT '' NOT NULL, ip_address varchar(45) DEFAULT '' NOT NULL, PRIMARY KEY (id) ) $wpdb->get_charset_collate();) cannot be parsed correct.
TRUNCATE TABLE `$wpdbvspfw`
SQL command (TRUNCATE TABLE `$wpdbvspfw`) cannot be parsed correct.
SELECT * FROM $wpdbvspfw WHERE unique_key = $cookie
SQL command (SELECT * FROM $wpdbvspfw WHERE unique_key = $cookie) cannot be parsed correct.
SELECT * FROM $wpdbvspfw WHERE ip_address = filter_var($_SERVER["REMOTE_ADDR"], FILTER_VALIDATE_IP)" AND unique_key = "failed"
SQL command (SELECT * FROM $wpdbvspfw WHERE ip_address = filter_var($_SERVER["REMOTE_ADDR"], FILTER_VALIDATE_IP)" AND unique_key = "failed") cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [558, 613, 1261, 1382, 1805]
Added 0 SQL nodes. 0 out of 5 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:03.692846.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'<div id="vspfw_force_reauth_message">get_option("vspfw_force_reauth_message")</div>'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'get_option("vspfw_password")'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'get_option("vspfw_logo_url")'' cannot be parsed correct.
HTML code '$'get_option("vspfw_logo_url")'' cannot be parsed correct.
HTML code '$'get_option("vspfw_background_image")'' cannot be parsed correct.
HTML code '$'get_option("vspfw_background_image")'' cannot be parsed correct.
HTML code '$'get_option("vspfw_enter_password_string")'' cannot be parsed correct.
HTML code '$'get_option("vspfw_submit")'' cannot be parsed correct.
HTML code '$'get_option("vspfw_wrong_password")'' cannot be parsed correct.
HTML code '$'get_option("vspfw_need_the_password_string")'' cannot be parsed correct.
HTML code '$'get_option("vspfw_brute_force_protection_message")'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'get_option("vspfw_contact_email")'' cannot be parsed correct.
HTML code '$'get_option("vspfw_brute_force_protection_tries")'' cannot be parsed correct.
HTML code '$'get_option("vspfw_brute_force_protection_interval")'' cannot be parsed correct.
HTML code '$'get_option("vspfw_website_domain")'' cannot be parsed correct.
HTML code '$'<img src=get_option("vspfw_logo_url")" style="margin:20px 0 30px 0;"><br>'' cannot be parsed correct.
HTML code '$'get_option("vspfw_enter_password_string")'' cannot be parsed correct.
HTML code '$'get_option("vspfw_submit")'' cannot be parsed correct.
HTML code '$'get_option("vspfw_need_the_password_string")'' cannot be parsed correct.
HTML code '$'get_option("vspfw_contact_email")'' cannot be parsed correct.
HTML code '$'#f1f1f1url(get_option("vspfw_background_image"));'' cannot be parsed correct.
HTML code '$'<div style="text-align:center;color: #a94442;background-color: #f2dede;border-color: #ebccd1; padding:15px;margin:20px;">get_option("vspfw_wrong_password")</div>'' cannot be parsed correct.
HTML code '$'<div style="text-align:center;color: #a94442;background-color: #f2dede;border-color: #ebccd1; padding:15px;margin:20px;">get_option("vspfw_brute_force_protection_message")</div>'' cannot be parsed correct.
HTML code '$'>Enabled</option>
						        		<option value="disabled" '' cannot be parsed correct.
HTML code '$'>Disabled</option>
						        	</select>
			        			</div>
			        			<div class="vspfw-option">
			        				<label for="vspfw_enabled">Define the Password:</label>
						        	<input type="text" name="vspfw_password" value="'' cannot be parsed correct.
HTML code '$'>Forever</option>
						        		<option value="1" '' cannot be parsed correct.
HTML code '$'>1 day</option>
						        		<option value="7" '' cannot be parsed correct.
HTML code '$'>7 days</option>
						        		<option value="15" '' cannot be parsed correct.
HTML code '$'>15 days</option>
						        		<option value="30" '' cannot be parsed correct.
HTML code '$'>30 days</option>
						        		<option value="90" '' cannot be parsed correct.
HTML code '$'>90 days</option>
						        	</select>
			        				<div class="vspfw-instructions">After this period, user will have to insert the password again.</div>
			        			</div>
			        		</div>
			        	</td>
			        </tr>
			        
			        <tr valign="top">
			        <th scope="row">Customizations:</th>
			        <td>
			        	<div class="vspfw-option-group">
				        	<h2>Branding</h2>
				        	<div class="vspfw-option">
				        		<label for="vspfw_logo_url">Logo:</label>
				        		<div class="image-preview"><img src="'' cannot be parsed correct.
HTML code '$'>Enabled</option>
						        		<option value="false" '' cannot be parsed correct.
HTML code '$'>Disabled</option>
						        	</select>
			        				<div class="vspfw-instructions">Show your email on the login page, in case a visitor needs the password.</div>
			        			</div>
			        			<div class="vspfw-option">
			        				<label for="vspfw_contact_email">Email to Request Password:</label>
						        	<input type="text" name="vspfw_contact_email" value="'' cannot be parsed correct.
HTML code '$'		<input type="password" autofocus name="vspfw_password"><br><br>
		<input type="submit" value="'' cannot be parsed correct.
HTML code '$';
				}
	            #vspfw {
					top:25%;
					left: 50%;
					transform: translate3d(-50%,-25%, 0);
					position: absolute;
				    background: #FFF;
				    border: 1px solid #e3e3e3;
				    border-radius: 5px;
				    text-align: center;
				    padding: 1em 3em;

	            }
				div#vspfw-request-password {
				    color: #6b6b6b;
				    position: absolute;
				    bottom: -50px;
				}
				#vspfw input[type="submit"] {
				    background: #3079ff;
				    padding: 7px 15px;
				    color: #FFF;
				    border: 0;
				    font-size: 17px;
				    cursor: pointer;
				}
				#vspfw input[type="submit"]:hover {
					background:#6ca0ff;
				}
				#vspfw input[type="password"] {
					padding:5px 10px;
				}
				div#vspfw-enter-password-string {
				    margin-bottom: 10px;
				}
				div#vspfw-request-password {
				    color: #6b6b6b;
				    bottom: -30px;
				    position: relative;
				    height: 0;
				}
	        </style>
	 '' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:04.284318.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.067364.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 0 do_action/apply_filters calls and 10 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.567108.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbplusDetector
### Start running FrontBaseDetector
### Finish running CubridDetector
### Start running HashDetector
### Finish running FileProDetector
### Start running IBMDb2Detector
### Finish running DbaseDetector
### Start running InformixDetector
### Finish running FrontBaseDetector
### Start running IngresDetector
### Finish running FirebirdInterBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running MongoDbDetector
### Start running OpenSSLDetector
### Finish running Oci8Detector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running HashDetector
### Start running PhpCurlDetector
### Finish running PasswordHashingDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running OpenSSLDetector
### Start running PHPRetrievalDetector
### Finish running PhpCurlDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running ArrayElementDetector
### Start running PhpVarDetector
### Finish running PHPIncludedDetector
### Start running PostgreSQLDetector
### Finish running PhpVarDetector
### Start running PropertyDetector
### Finish running PostgreSQLDetector
### Start running Sqlite3Detector
### Finish running PHPStorageDetector
### Start running SqliteDetector
### Finish running PHPRetrievalDetector
### Start running SqlServerDetector
### Finish running SqliteDetector
### Start running SybaseDetector
### Finish running maxdbDetector
### Start running TokyoTyrantDetector
### Finish running SybaseDetector
### Start running UserInputDetector
### Finish running MySQLiDetector
### Start running VariableDetector
### Finish running Sqlite3Detector
### Start running WordpressHashingFnDetector
### Finish running PropertyDetector
### Start running WordPressRemoteDetector
### Finish running TokyoTyrantDetector
### Start running WordPressRetrievalDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressStorageDetector
### Finish running WordPressRemoteDetector
### Start running WP_UserDetector
### Finish running SqlServerDetector
### Start running GenericDatabaseUsageDetector
### Finish running WP_UserDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running GenericDatabaseUsageDetector
### Start running UninstallDetector
### Finish running UserInputDetector
### Finish running VariableDetector
### Finish running DeletionDetector
### Finish running UninstallDetector
### Finish running WordPressStorageDetector
### Finish running WordPressRetrievalDetector
### Finished running detectors
very-simple-password-for-wordpress.php:462
  - Request variable '$_REQUEST["vspfw_user_entered_password_wpnonce"]' of personal types {'password'} is found.
  - Data types: password
very-simple-password-for-wordpress.php:464
  - Request variable '$_POST["vspfw_password"]' of personal types {'password'} is found.
  - Data types: password
very-simple-password-for-wordpress.php:464
  - Request variable '$_POST["vspfw_password"]' of personal types {'password'} is found.
  - Data types: password
very-simple-password-for-wordpress.php:467
  - Request variable '$_POST["vspfw_password"]' of personal types {'password'} is found.
  - Data types: password 

very-simple-password-for-wordpress.php:470
  - MD5 called with parameters [current_time, rand, timestamp]. Ignore if [current_time, rand, timestamp] does not contain personal information. 

very-simple-password-for-wordpress.php:403
  - variable '$ip_address' of personal types {'ip', 'address'} is found.
  - Data types: ip, address
very-simple-password-for-wordpress.php:424
  - variable '$ip_address' of personal types {'ip', 'address'} is found.
  - Data types: ip, address
very-simple-password-for-wordpress.php:434
  - variable '$ip_address' of personal types {'ip', 'address'} is found.
  - Data types: ip, address
very-simple-password-for-wordpress.php:448
  - variable '$ip_address' of personal types {'ip', 'address'} is found.
  - Data types: ip, address
very-simple-password-for-wordpress.php:449
  - variable '$vspfw_email_already_sent' of personal types {'email'} is found.
  - Data types: email
very-simple-password-for-wordpress.php:465
  - variable '$ip_address' of personal types {'ip', 'address'} is found.
  - Data types: ip, address
very-simple-password-for-wordpress.php:466
  - variable '$ip_address' of personal types {'ip', 'address'} is found.
  - Data types: ip, address
very-simple-password-for-wordpress.php:471
  - variable '$ip_address' of personal types {'ip', 'address'} is found.
  - Data types: ip, address
very-simple-password-for-wordpress.php:484
  - variable '$ip_address' of personal types {'ip', 'address'} is found.
  - Data types: ip, address 

VSPFW_options.php:9
  - RETRIEVAL call to get_option("vspfw_force_reauth_message") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
VSPFW_options.php:10
  - RETRIEVAL call to get_option("vspfw_force_reauth_message") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
VSPFW_options.php:30
  - RETRIEVAL call to get_option("vspfw_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
VSPFW_options.php:31
  - RETRIEVAL call to get_option("vspfw_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
VSPFW_options.php:36
  - RETRIEVAL call to get_option("vspfw_password") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
VSPFW_options.php:42
  - RETRIEVAL call to get_option("vspfw_days") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
VSPFW_options.php:43
  - RETRIEVAL call to get_option("vspfw_days") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
VSPFW_options.php:44
  - RETRIEVAL call to get_option("vspfw_days") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
VSPFW_options.php:45
  - RETRIEVAL call to get_option("vspfw_days") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
VSPFW_options.php:46
  - RETRIEVAL call to get_option("vspfw_days") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
VSPFW_options.php:47
  - RETRIEVAL call to get_option("vspfw_days") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
VSPFW_options.php:62
  - RETRIEVAL call to get_option("vspfw_logo_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
VSPFW_options.php:63
  - RETRIEVAL call to get_option("vspfw_logo_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
VSPFW_options.php:68
  - RETRIEVAL call to get_option("vspfw_background_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
VSPFW_options.php:69
  - RETRIEVAL call to get_option("vspfw_background_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
VSPFW_options.php:77
  - RETRIEVAL call to get_option("vspfw_enter_password_string") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
VSPFW_options.php:81
  - RETRIEVAL call to get_option("vspfw_submit") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
VSPFW_options.php:85
  - RETRIEVAL call to get_option("vspfw_wrong_password") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
VSPFW_options.php:89
  - RETRIEVAL call to get_option("vspfw_need_the_password_string") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
VSPFW_options.php:94
  - RETRIEVAL call to get_option("vspfw_brute_force_protection_message") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
VSPFW_options.php:108
  - RETRIEVAL call to get_option("vspfw_show_contact_info") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
VSPFW_options.php:109
  - RETRIEVAL call to get_option("vspfw_show_contact_info") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
VSPFW_options.php:115
  - RETRIEVAL call to get_option("vspfw_contact_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
VSPFW_options.php:129
  - RETRIEVAL call to get_option("vspfw_brute_force_protection_tries") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
VSPFW_options.php:134
  - RETRIEVAL call to get_option("vspfw_brute_force_protection_interval") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
VSPFW_options.php:148
  - RETRIEVAL call to get_option("vspfw_website_domain") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
VSPFW_view.php:5
  - RETRIEVAL call to get_option("vspfw_logo_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
VSPFW_view.php:6
  - RETRIEVAL call to get_option("vspfw_logo_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
VSPFW_view.php:11
  - RETRIEVAL call to get_option("vspfw_enter_password_string") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
VSPFW_view.php:15
  - RETRIEVAL call to get_option("vspfw_submit") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
VSPFW_view.php:17
  - RETRIEVAL call to get_option("vspfw_show_contact_info") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
VSPFW_view.php:19
  - RETRIEVAL call to get_option("vspfw_need_the_password_string") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
VSPFW_view.php:20
  - RETRIEVAL call to get_option("vspfw_contact_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
very-simple-password-for-wordpress.php:37
  - RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).
very-simple-password-for-wordpress.php:42
  - RETRIEVAL call to get_option("VSPFW_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
very-simple-password-for-wordpress.php:57
  - RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).
very-simple-password-for-wordpress.php:112
  - RETRIEVAL call to get_option("vspfw_background_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
very-simple-password-for-wordpress.php:112
  - RETRIEVAL call to get_option("vspfw_default_background_changed_once") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
very-simple-password-for-wordpress.php:116
  - RETRIEVAL call to get_option("vspfw_default_background_changed_once") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
very-simple-password-for-wordpress.php:119
  - RETRIEVAL call to get_option("vspfw_default_logo_changed_once") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
very-simple-password-for-wordpress.php:122
  - RETRIEVAL call to get_option("vspfw_logo_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
very-simple-password-for-wordpress.php:122
  - RETRIEVAL call to get_option("vspfw_default_logo_changed_once") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
very-simple-password-for-wordpress.php:126
  - RETRIEVAL call to get_option("vspfw_days") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
very-simple-password-for-wordpress.php:129
  - RETRIEVAL call to get_option("vspfw_enter_password_string") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
very-simple-password-for-wordpress.php:132
  - RETRIEVAL call to get_option("vspfw_submit") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
very-simple-password-for-wordpress.php:135
  - RETRIEVAL call to get_option("vspfw_website_domain") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
very-simple-password-for-wordpress.php:138
  - RETRIEVAL call to get_option("vspfw_wrong_password") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
very-simple-password-for-wordpress.php:141
  - RETRIEVAL call to get_option("vspfw_show_contact_info") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
very-simple-password-for-wordpress.php:144
  - RETRIEVAL call to get_option("vspfw_contact_email_changed_once") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
very-simple-password-for-wordpress.php:147
  - RETRIEVAL call to get_option("vspfw_contact_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
very-simple-password-for-wordpress.php:147
  - RETRIEVAL call to get_option("vspfw_contact_email_changed_once") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
very-simple-password-for-wordpress.php:149
  - RETRIEVAL call to get_option("vspfw_contact_email_changed_once") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
very-simple-password-for-wordpress.php:151
  - RETRIEVAL call to get_option("vspfw_need_the_password_string") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
very-simple-password-for-wordpress.php:155
  - RETRIEVAL call to get_option("vspfw_brute_force_protection_tries") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
very-simple-password-for-wordpress.php:158
  - RETRIEVAL call to get_option("vspfw_brute_force_protection_interval") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
very-simple-password-for-wordpress.php:161
  - RETRIEVAL call to get_option("vspfw_brute_force_protection_message") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
very-simple-password-for-wordpress.php:165
  - RETRIEVAL call to get_option("vspfw_users_reauth") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
very-simple-password-for-wordpress.php:169
  - RETRIEVAL call to get_option("vspfw_force_reauth_message") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
very-simple-password-for-wordpress.php:174
  - RETRIEVAL call to get_option("vspfw_force_reauth") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
very-simple-password-for-wordpress.php:236
  - RETRIEVAL call to get_option("vspfw_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
very-simple-password-for-wordpress.php:236
  - RETRIEVAL call to get_option("vspfw_password") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
very-simple-password-for-wordpress.php:252
  - RETRIEVAL call to get_option("vspfw_background_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
very-simple-password-for-wordpress.php:252
  - RETRIEVAL call to get_option("vspfw_background_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
very-simple-password-for-wordpress.php:440
  - RETRIEVAL call to get_option("vspfw_brute_force_protection_interval") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
very-simple-password-for-wordpress.php:445
  - RETRIEVAL call to get_option("vspfw_brute_force_protection_tries") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
very-simple-password-for-wordpress.php:448
  - RETRIEVAL call to get_option("vspfw_brute_force_protection_tries") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
very-simple-password-for-wordpress.php:448
  - RETRIEVAL call to get_option("vspfw_brute_force_protection_interval") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
very-simple-password-for-wordpress.php:468
  - RETRIEVAL call to get_option("vspfw_password") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
very-simple-password-for-wordpress.php:477
  - RETRIEVAL call to get_option("vspfw_days") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
very-simple-password-for-wordpress.php:477
  - RETRIEVAL call to get_option("vspfw_debug_domain") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
very-simple-password-for-wordpress.php:486
  - RETRIEVAL call to get_option("vspfw_wrong_password") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
very-simple-password-for-wordpress.php:490
  - RETRIEVAL call to get_option("vspfw_brute_force_protection_message") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option 

very-simple-password-for-wordpress.php:39
  - STORAGE call to add_option("VSPFW_db_version", $VSPFW_db_version) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
very-simple-password-for-wordpress.php:59
  - STORAGE call to update_option("VSPFW_db_version", $VSPFW_db_version) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
very-simple-password-for-wordpress.php:113
  - STORAGE call to update_option("vspfw_background_image", plugins_url("/images/bg-default.jpg", )) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
very-simple-password-for-wordpress.php:114
  - STORAGE call to update_option("vspfw_default_background_changed_once", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
very-simple-password-for-wordpress.php:117
  - STORAGE call to update_option("vspfw_default_background_changed_once", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
very-simple-password-for-wordpress.php:120
  - STORAGE call to update_option("vspfw_default_logo_changed_once", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
very-simple-password-for-wordpress.php:123
  - STORAGE call to update_option("vspfw_logo_url", plugins_url("/images/lock.png", )) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
very-simple-password-for-wordpress.php:124
  - STORAGE call to update_option("vspfw_default_logo_changed_once", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
very-simple-password-for-wordpress.php:127
  - STORAGE call to update_option("vspfw_days", "3650") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
very-simple-password-for-wordpress.php:130
  - STORAGE call to update_option("vspfw_enter_password_string", "Please enter the password:") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
very-simple-password-for-wordpress.php:133
  - STORAGE call to update_option("vspfw_submit", "Enter") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
very-simple-password-for-wordpress.php:136
  - STORAGE call to update_option("vspfw_website_domain", vspfw_filter_domain_to_use_on_cookie(get_bloginfo("url"))) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
very-simple-password-for-wordpress.php:139
  - STORAGE call to update_option("vspfw_wrong_password", "Wrong password...") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
very-simple-password-for-wordpress.php:142
  - STORAGE call to update_option("vspfw_show_contact_info", "false") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
very-simple-password-for-wordpress.php:145
  - STORAGE call to update_option("vspfw_contact_email_changed_once", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
very-simple-password-for-wordpress.php:148
  - STORAGE call to update_option("vspfw_contact_email", get_bloginfo("admin_email")) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
very-simple-password-for-wordpress.php:152
  - STORAGE call to update_option("vspfw_need_the_password_string", "Need the password?") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
very-simple-password-for-wordpress.php:156
  - STORAGE call to update_option("vspfw_brute_force_protection_tries", "5") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
very-simple-password-for-wordpress.php:159
  - STORAGE call to update_option("vspfw_brute_force_protection_interval", "300") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
very-simple-password-for-wordpress.php:162
  - STORAGE call to update_option("vspfw_brute_force_protection_message", "You have failed the password too many times. Please try again a few minutes...") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
very-simple-password-for-wordpress.php:166
  - STORAGE call to update_option("vspfw_users_reauth", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
very-simple-password-for-wordpress.php:170
  - STORAGE call to update_option("vspfw_force_reauth_message", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
very-simple-password-for-wordpress.php:179
  - STORAGE call to update_option("vspfw_force_reauth_message", "Succesfully delleted all cookies from the " . $table_name . " table. Now all visitors have to enter the password again.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
very-simple-password-for-wordpress.php:181
  - STORAGE call to update_option("vspfw_force_reauth_message", "Couldn\'t delete cookies from " . $table_name . " - you might want to do it manually.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
very-simple-password-for-wordpress.php:183
  - STORAGE call to update_option("vspfw_force_reauth", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option 

By data type:
address
	VariableDetector.(unknown) - {'ip', 'address'}
	VariableDetector.(unknown) - {'ip', 'address'}
	VariableDetector.(unknown) - {'ip', 'address'}
	VariableDetector.(unknown) - {'ip', 'address'}
	VariableDetector.(unknown) - {'ip', 'address'}
	VariableDetector.(unknown) - {'ip', 'address'}
	VariableDetector.(unknown) - {'ip', 'address'}
	VariableDetector.(unknown) - {'ip', 'address'}
email
	VariableDetector.(unknown) - {'email'}
ip
	VariableDetector.(unknown) - {'ip', 'address'}
	VariableDetector.(unknown) - {'ip', 'address'}
	VariableDetector.(unknown) - {'ip', 'address'}
	VariableDetector.(unknown) - {'ip', 'address'}
	VariableDetector.(unknown) - {'ip', 'address'}
	VariableDetector.(unknown) - {'ip', 'address'}
	VariableDetector.(unknown) - {'ip', 'address'}
	VariableDetector.(unknown) - {'ip', 'address'}
none
	WordPressRetrievalDetector.dbDelta($sql) - set()
	WordPressRetrievalDetector.dbDelta($sql) - set()
	PHPIncludedDetector.(unknown) - set()
option
	WordPressRetrievalDetector.get_option("vspfw_background_image") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_enter_password_string") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_days") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_password") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_background_image") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_days") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_brute_force_protection_interval") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_brute_force_protection_tries") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_contact_email") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_days") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_contact_email_changed_once") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_contact_email") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_brute_force_protection_interval") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_brute_force_protection_tries") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_default_logo_changed_once") - {'option'}
	WordPressRetrievalDetector.get_option("VSPFW_db_version") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_show_contact_info") - {'option'}
	WordPressStorageDetector.update_option("vspfw_force_reauth", "") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_brute_force_protection_interval") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_force_reauth_message") - {'option'}
	WordPressStorageDetector.update_option("vspfw_default_background_changed_once", false) - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_default_background_changed_once") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_wrong_password") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_brute_force_protection_tries") - {'option'}
	WordPressStorageDetector.update_option("vspfw_wrong_password", "Wrong password...") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_days") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_website_domain") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_background_image") - {'option'}
	WordPressStorageDetector.update_option("vspfw_enter_password_string", "Please enter the password:") - {'option'}
	WordPressStorageDetector.update_option("vspfw_default_logo_changed_once", false) - {'option'}
	WordPressStorageDetector.update_option("vspfw_logo_url", plugins_url("/images/lock.png", )) - {'option'}
	WordPressStorageDetector.update_option("vspfw_force_reauth_message", "") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_default_background_changed_once") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_logo_url") - {'option'}
	WordPressStorageDetector.update_option("vspfw_brute_force_protection_message", "You have failed the password too many times. Please try again a few minutes...") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_contact_email_changed_once") - {'option'}
	WordPressStorageDetector.update_option("vspfw_submit", "Enter") - {'option'}
	WordPressStorageDetector.update_option("vspfw_force_reauth_message", "Succesfully delleted all cookies from the " . $table_name . " table. Now all visitors have to enter the password again.") - {'option'}
	WordPressStorageDetector.update_option("vspfw_users_reauth", "") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_logo_url") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_days") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_default_logo_changed_once") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_days") - {'option'}
	WordPressStorageDetector.update_option("vspfw_website_domain", vspfw_filter_domain_to_use_on_cookie(get_bloginfo("url"))) - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_logo_url") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_days") - {'option'}
	WordPressStorageDetector.update_option("vspfw_show_contact_info", "false") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_force_reauth_message") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_enabled") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_enabled") - {'option'}
	WordPressStorageDetector.update_option("vspfw_contact_email_changed_once", false) - {'option'}
	WordPressStorageDetector.update_option("vspfw_force_reauth_message", "Couldn\'t delete cookies from " . $table_name . " - you might want to do it manually.") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_need_the_password_string") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_brute_force_protection_interval") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_force_reauth") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_brute_force_protection_tries") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_days") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_submit") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_debug_domain") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_password") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_wrong_password") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_enabled") - {'option'}
	WordPressStorageDetector.update_option("vspfw_contact_email", get_bloginfo("admin_email")) - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_contact_email_changed_once") - {'option'}
	WordPressStorageDetector.update_option("vspfw_brute_force_protection_tries", "5") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_need_the_password_string") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_website_domain") - {'option'}
	WordPressStorageDetector.update_option("vspfw_background_image", plugins_url("/images/bg-default.jpg", )) - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_enter_password_string") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_brute_force_protection_message") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_force_reauth_message") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_brute_force_protection_message") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_logo_url") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_background_image") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_logo_url") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_submit") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_users_reauth") - {'option'}
	WordPressStorageDetector.update_option("vspfw_need_the_password_string", "Need the password?") - {'option'}
	WordPressStorageDetector.update_option("VSPFW_db_version", $VSPFW_db_version) - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_brute_force_protection_message") - {'option'}
	WordPressStorageDetector.update_option("vspfw_brute_force_protection_interval", "300") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_show_contact_info") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_contact_email") - {'option'}
	WordPressStorageDetector.update_option("vspfw_default_background_changed_once", true) - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_show_contact_info") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_wrong_password") - {'option'}
	WordPressStorageDetector.update_option("vspfw_default_logo_changed_once", true) - {'option'}
	WordPressStorageDetector.update_option("vspfw_days", "3650") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_submit") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_enter_password_string") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_need_the_password_string") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_background_image") - {'option'}
	WordPressStorageDetector.add_option("VSPFW_db_version", $VSPFW_db_version) - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_password") - {'option'}
	WordPressRetrievalDetector.get_option("vspfw_show_contact_info") - {'option'}
password
	ArrayElementDetector.(unknown) - {'password'}
	ArrayElementDetector.(unknown) - {'password'}
	ArrayElementDetector.(unknown) - {'password'}
	ArrayElementDetector.(unknown) - {'password'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:13.530449.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 1750 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.815130.

1000 STORE_REACHES edges created
1750 STORE_REACHES edges created
1750 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 33 nodes as PERSONAL
In total, tainted 33 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 1 nodes as ENCRYPTED
In total, tainted 1 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:00.919549.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:00:39.097724!
Request variable '$_REQUEST["vspfw_user_entered_password_wpnonce"]' of personal types {'password'} is found.,,None
Request variable '$_POST["vspfw_password"]' of personal types {'password'} is found.,,None
Request variable '$_POST["vspfw_password"]' of personal types {'password'} is found.,,None
Request variable '$_POST["vspfw_password"]' of personal types {'password'} is found.,,None
MD5 called with parameters [current_time, rand, timestamp]. Ignore if [current_time, rand, timestamp] does not contain personal information.,md5,None
variable '$ip_address' of personal types {'ip', 'address'} is found.,,None
variable '$ip_address' of personal types {'ip', 'address'} is found.,,None
variable '$ip_address' of personal types {'ip', 'address'} is found.,,None
variable '$ip_address' of personal types {'ip', 'address'} is found.,,None
variable '$vspfw_email_already_sent' of personal types {'email'} is found.,,None
variable '$ip_address' of personal types {'ip', 'address'} is found.,,None
variable '$ip_address' of personal types {'ip', 'address'} is found.,,None
variable '$ip_address' of personal types {'ip', 'address'} is found.,,None
variable '$ip_address' of personal types {'ip', 'address'} is found.,,None
RETRIEVAL call to get_option("vspfw_force_reauth_message") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_show_contact_info") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_show_contact_info") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_contact_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_brute_force_protection_tries") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_brute_force_protection_interval") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_website_domain") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_password") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_days") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_days") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_days") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_days") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_days") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_days") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_logo_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_logo_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_background_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_background_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_enter_password_string") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_submit") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_wrong_password") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_need_the_password_string") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_force_reauth_message") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_brute_force_protection_message") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_enter_password_string") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_submit") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_show_contact_info") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_need_the_password_string") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_contact_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_logo_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_logo_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_background_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_default_background_changed_once") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_default_background_changed_once") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_default_logo_changed_once") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_logo_url") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_default_logo_changed_once") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_days") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_enter_password_string") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_submit") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_website_domain") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_wrong_password") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_show_contact_info") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_contact_email_changed_once") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_contact_email") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_contact_email_changed_once") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_contact_email_changed_once") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_need_the_password_string") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_brute_force_protection_tries") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_brute_force_protection_interval") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_brute_force_protection_message") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_users_reauth") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_force_reauth_message") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_force_reauth") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_password") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_background_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_background_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to get_option("VSPFW_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_brute_force_protection_interval") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_brute_force_protection_tries") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_brute_force_protection_interval") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_brute_force_protection_tries") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_password") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_days") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_debug_domain") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_wrong_password") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("vspfw_brute_force_protection_message") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
STORAGE call to update_option("vspfw_background_image", plugins_url("/images/bg-default.jpg", )) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("vspfw_default_background_changed_once", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("vspfw_default_background_changed_once", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("vspfw_default_logo_changed_once", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("vspfw_logo_url", plugins_url("/images/lock.png", )) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("vspfw_default_logo_changed_once", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("vspfw_days", "3650") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("vspfw_enter_password_string", "Please enter the password:") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("vspfw_submit", "Enter") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("vspfw_website_domain", vspfw_filter_domain_to_use_on_cookie(get_bloginfo("url"))) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("vspfw_wrong_password", "Wrong password...") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("vspfw_show_contact_info", "false") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("vspfw_contact_email_changed_once", false) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("vspfw_contact_email", get_bloginfo("admin_email")) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("vspfw_need_the_password_string", "Need the password?") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("vspfw_brute_force_protection_tries", "5") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("vspfw_brute_force_protection_interval", "300") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("vspfw_brute_force_protection_message", "You have failed the password too many times. Please try again a few minutes...") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("vspfw_users_reauth", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("vspfw_force_reauth_message", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("vspfw_force_reauth_message", "Succesfully delleted all cookies from the " . $table_name . " table. Now all visitors have to enter the password again.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("vspfw_force_reauth_message", "Couldn\'t delete cookies from " . $table_name . " - you might want to do it manually.") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("vspfw_force_reauth", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("VSPFW_db_version", $VSPFW_db_version) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("VSPFW_db_version", $VSPFW_db_version) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] Storage check is NONE 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['encryption', 'third_party'] 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? True 

No findings
