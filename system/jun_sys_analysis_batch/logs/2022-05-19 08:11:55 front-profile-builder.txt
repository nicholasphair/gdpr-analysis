Timeout in resolving values
Timeout in running neo4j query
Running Main.py on front-profile-builder

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.503192.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:00.940623.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 0 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.243307.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 0 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.454036.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 216 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:00.796360.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 0 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.651715.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.124267.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 111 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:02.332406.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 1749
Added 1422 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 1749
Added 0 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.236884.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/front-profile-builder/gen-frontprofile-builder.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/front-profile-builder/includes/create_page.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/front-profile-builder/includes/frontend_edit_user_profile.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/front-profile-builder/includes/front-end-registration-login.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/front-profile-builder/includes/frontprofile_builder_pro.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/front-profile-builder/includes/password_lost.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/front-profile-builder/includes/password_reset.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/front-profile-builder/operations/ustsfrontprofile_builder_init.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.974945.

1000 PHP_REACHES edges created
1749 PHP_REACHES edges created
1749 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 690 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.085728.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:02.069010.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 25 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:01.029717.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 23 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.174728.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.212875.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.339243.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.012759.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.047780.

48 PHP_REACHES edges created
48 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 25 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.138515.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
No SQL nodes to process.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:00.106513.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'<p><a style="float:left" href="wp_logout_url(home_url())" class="icon-cancel standard-button button-logout"><h2>Logout</h2></a></p>'' cannot be parsed correct.
HTML code '$'wp_create_nonce("usts-register-nonce")'' cannot be parsed correct.
HTML code '$'wp_create_nonce("usts-login-nonce")'' cannot be parsed correct.
HTML code '$'home_url("passwordlost-form")'' cannot be parsed correct.
HTML code '$'get_option("siteurl")'' cannot be parsed correct.
HTML code '$'wp_lostpassword_url()'' cannot be parsed correct.
HTML code '$'$lost_password_sent'' cannot be parsed correct.
HTML code '$'site_url("wp-login.php?action=resetpass")'' cannot be parsed correct.
HTML code '$'$_REQUEST_login'' cannot be parsed correct.
HTML code '$'$_REQUEST_key'' cannot be parsed correct.
HTML code '$'<span class="error"><strong>Error</strong>: gen_usts_errors()->get_error_message($code)</span><br/>'' cannot be parsed correct.
HTML code '$'wp_get_current_user()'' cannot be parsed correct.
HTML code '$'wp_get_current_user()'' cannot be parsed correct.
HTML code '$'get_user_meta($curr_user->ID, "first_name", true)'' cannot be parsed correct.
HTML code '$'get_user_meta($curr_user->ID, "last_name", true)'' cannot be parsed correct.
HTML code '$'get_user_meta($curr_user->ID, "_user_date_of_birth", true)'' cannot be parsed correct.
HTML code '$'wp_create_nonce("usts-editprofile-nonce")'' cannot be parsed correct.
HTML code '$'wp_get_password_hint()'' cannot be parsed correct.
HTML code '$'Invalid request.'' cannot be parsed correct.
HTML code '$'You are logged In. Please Logout to Do a Registration.'' cannot be parsed correct.
HTML code '$'/index.php/registration-form/">Register</a>
                </div>
			</fieldset>
		</form>
'' cannot be parsed correct.
HTML code '$'<div class="usts_errors">'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'Your key is Expired.'' cannot be parsed correct.
HTML code '$'Your key is invalid.'' cannot be parsed correct.
HTML code '$'</label>
            <input type="password" name="pass1" id="pass1" class="input" size="20" value="" autocomplete="off" />
        </p>
        <p>
            <label for="pass2">'' cannot be parsed correct.
HTML code '$'</label>
            <input type="password" name="pass2" id="pass2" class="input" size="20" value="" autocomplete="off" />
        </p>
         
        <p class="description">'' cannot be parsed correct.
HTML code '$'You are already signed in.'' cannot be parsed correct.
HTML code '$'You need to enter your email address to continue.'' cannot be parsed correct.
HTML code '$'Your entered email address is invalid.'' cannot be parsed correct.
HTML code '$'There are no users registered with this email address.'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:04.150073.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.050325.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 3 do_action/apply_filters calls and 12 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.778458.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbaseDetector
### Start running FrontBaseDetector
### Finish running FileProDetector
### Start running HashDetector
### Finish running FirebirdInterBaseDetector
### Start running IBMDb2Detector
### Finish running DbplusDetector
### Start running InformixDetector
### Finish running CubridDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running MsqlDetector
### Start running MySQLDetector
### Finish running IBMDb2Detector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running Oci8Detector
### Start running OpenSSLDetector
### Finish running MongoDbDetector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running HashDetector
### Start running PhpCurlDetector
### Finish running PasswordHashingDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running OpenSSLDetector
### Start running PHPRetrievalDetector
### Finish running PhpCurlDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPIncludedDetector
### Start running PhpVarDetector
### Finish running PHPRetrievalDetector
### Start running PostgreSQLDetector
### Finish running PHPStorageDetector
### Start running PropertyDetector
### Finish running PostgreSQLDetector
### Start running Sqlite3Detector
### Finish running ArrayElementDetector
### Start running SqliteDetector
### Finish running SqliteDetector
### Start running SqlServerDetector
### Finish running PhpVarDetector
### Start running SybaseDetector
### Finish running SybaseDetector
### Start running TokyoTyrantDetector
### Finish running PropertyDetector
### Start running UserInputDetector
### Finish running Sqlite3Detector
### Start running VariableDetector
### Finish running maxdbDetector
### Start running WordpressHashingFnDetector
### Finish running MySQLiDetector
### Start running WordPressRemoteDetector
### Finish running TokyoTyrantDetector
### Start running WordPressRetrievalDetector
### Finish running WordPressRemoteDetector
### Start running WordPressStorageDetector
### Finish running SqlServerDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running UserInputDetector
### Start running GenericEncryptionDetector
### Finish running GenericDatabaseUsageDetector
### Start running DeletionDetector
### Finish running GenericEncryptionDetector
### Start running UninstallDetector
### Finish running WordpressHashingFnDetector
### Finish running VariableDetector
### Finish running DeletionDetector
### Finish running UninstallDetector
### Finish running WordPressRetrievalDetector
### Finish running WordPressStorageDetector
### Finished running detectors
includes/front-end-registration-login.php:118
  - Request variable '$_REQUEST["checkemail"]' of personal types {'email'} is found.
  - Data types: email
includes/front-end-registration-login.php:118
  - Request variable '$_REQUEST["checkemail"]' of personal types {'email'} is found.
  - Data types: email
includes/front-end-registration-login.php:173
  - Request variable '$_POST["usts_user_pass"]' of personal types {'password'} is found.
  - Data types: password
includes/front-end-registration-login.php:173
  - Request variable '$_POST["usts_user_pass"]' of personal types {'password'} is found.
  - Data types: password
includes/front-end-registration-login.php:179
  - Request variable '$_POST["usts_user_pass"]' of personal types {'password'} is found.
  - Data types: password
includes/front-end-registration-login.php:190
  - Request variable '$_POST["usts_user_pass"]' of personal types {'password'} is found.
  - Data types: password
includes/front-end-registration-login.php:208
  - Request variable '$_POST["usts_user_email"]' of personal types {'email'} is found.
  - Data types: email
includes/front-end-registration-login.php:217
  - Request variable '$_POST["usts_user_pass"]' of personal types {'password'} is found.
  - Data types: password
includes/front-end-registration-login.php:218
  - Request variable '$_POST["usts_user_pass_confirm"]' of personal types {'password'} is found.
  - Data types: password
includes/frontend_edit_user_profile.php:105
  - Request variable '$_POST["usts_user_email"]' of personal types {'email'} is found.
  - Data types: email
includes/frontend_edit_user_profile.php:115
  - Request variable '$_POST["usts_user_pass"]' of personal types {'password'} is found.
  - Data types: password
includes/frontend_edit_user_profile.php:116
  - Request variable '$_POST["usts_user_pass_confirm"]' of personal types {'password'} is found.
  - Data types: password 

includes/front-end-registration-login.php:179
  - object property '$user->user_pass' of personal types {'password'} is found.
  - Data types: password
includes/frontend_edit_user_profile.php:61
  - object property '$curr_user->user_email' of personal types {'email'} is found.
  - Data types: email 

includes/front-end-registration-login.php:208
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
includes/front-end-registration-login.php:217
  - variable '$user_pass' of personal types {'password'} is found.
  - Data types: password
includes/front-end-registration-login.php:235
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
includes/front-end-registration-login.php:239
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
includes/front-end-registration-login.php:247
  - variable '$user_pass' of personal types {'password'} is found.
  - Data types: password
includes/front-end-registration-login.php:251
  - variable '$user_pass' of personal types {'password'} is found.
  - Data types: password
includes/front-end-registration-login.php:263
  - variable '$user_pass' of personal types {'password'} is found.
  - Data types: password
includes/front-end-registration-login.php:264
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
includes/front-end-registration-login.php:282
  - variable '$user_pass' of personal types {'password'} is found.
  - Data types: password
includes/frontend_edit_user_profile.php:49
  - variable '$first_name' of personal types {'first_name'} is found.
  - Data types: first_name
includes/frontend_edit_user_profile.php:50
  - variable '$last_name' of personal types {'last_name'} is found.
  - Data types: last_name
includes/frontend_edit_user_profile.php:65
  - variable '$first_name' of personal types {'first_name'} is found.
  - Data types: first_name
includes/frontend_edit_user_profile.php:69
  - variable '$last_name' of personal types {'last_name'} is found.
  - Data types: last_name
includes/frontend_edit_user_profile.php:105
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
includes/frontend_edit_user_profile.php:115
  - variable '$user_pass' of personal types {'password'} is found.
  - Data types: password
includes/frontend_edit_user_profile.php:129
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
includes/frontend_edit_user_profile.php:137
  - variable '$user_pass' of personal types {'password'} is found.
  - Data types: password
includes/frontend_edit_user_profile.php:141
  - variable '$user_pass' of personal types {'password'} is found.
  - Data types: password
includes/frontend_edit_user_profile.php:155
  - variable '$user_pass' of personal types {'password'} is found.
  - Data types: password
includes/frontend_edit_user_profile.php:156
  - variable '$user_email' of personal types {'email'} is found.
  - Data types: email
includes/frontend_edit_user_profile.php:172
  - variable '$user_pass' of personal types {'password'} is found.
  - Data types: password
includes/password_lost.php:55
  - variable '$lost_password_sent' of personal types {'password'} is found.
  - Data types: password 

includes/frontend_edit_user_profile.php:152
  - CRYPTOGRAPHY call to wp_update_user(["ID" => $userid, "user_login" => $user_login, "user_pass" => $user_pass, "user_email" => $user_email, "user_registered" => date("Y-m-d H:i:s"), "role" => "subscriber"]) alters data types {'user_meta', 'user'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user_meta, user 

gen-frontprofile-builder.php:157
  - RETRIEVAL call to check_password_reset_key($_REQUEST["key"], $_REQUEST["login"]). Passed arguments: 0: $key (string), 1: $login (string). Returns (WP_User|WP_Error).
gen-frontprofile-builder.php:199
  - RETRIEVAL call to check_password_reset_key($rp_key, $rp_login). Passed arguments: 0: $key (string), 1: $login (string). Returns (WP_User|WP_Error).
includes/create_page.php:14
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
includes/create_page.php:26
  - RETRIEVAL call to get_post($page, ARRAY_N) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 1: $output (string), 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, wp_post, post_meta
includes/front-end-registration-login.php:14
  - RETRIEVAL call to get_option("users_can_register") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/front-end-registration-login.php:152
  - RETRIEVAL call to get_option("siteurl") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/front-end-registration-login.php:166
  - RETRIEVAL call to get_userdatabylogin($_POST["usts_user_login"]) alters data types {'user_meta', 'user'}. Passed arguments: 0: $user_login (string). Returns (bool|object).
  - Data types: user_meta, user
includes/front-end-registration-login.php:190
  - RETRIEVAL call to wp_setcookie($_POST["usts_user_login"], $_POST["usts_user_pass"], true). Passed arguments: 0: $username (string), 2: $already_md5 (bool), 1: $password (string).
includes/front-end-registration-login.php:191
  - RETRIEVAL call to wp_set_current_user($user->ID, $_POST["usts_user_login"]) alters data types {'user_meta'}. Passed arguments: 0: $id (int), 1: $name (string). Returns (WP_User).
  - Data types: user_meta
includes/front-end-registration-login.php:282
  - RETRIEVAL call to wp_setcookie($user_login, $user_pass, true). Passed arguments: 0: $username (string), 2: $already_md5 (bool), 1: $password (string).
includes/front-end-registration-login.php:283
  - RETRIEVAL call to wp_set_current_user($new_user_id, $user_login) alters data types {'user_meta'}. Passed arguments: 0: $id (int), 1: $name (string). Returns (WP_User).
  - Data types: user_meta
includes/frontend_edit_user_profile.php:18
  - RETRIEVAL call to get_option("users_can_register") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
includes/frontend_edit_user_profile.php:47
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
includes/frontend_edit_user_profile.php:49
  - RETRIEVAL call to get_user_meta($curr_user->ID, "first_name", true) alters data types {'user_meta', 'first_name'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta, first_name
includes/frontend_edit_user_profile.php:50
  - RETRIEVAL call to get_user_meta($curr_user->ID, "last_name", true) alters data types {'user_meta', 'last_name'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta, last_name
includes/frontend_edit_user_profile.php:51
  - RETRIEVAL call to get_user_meta($curr_user->ID, "_user_date_of_birth", true) alters data types {'user_meta', 'birth'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta, birth
includes/frontend_edit_user_profile.php:95
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
includes/frontend_edit_user_profile.php:172
  - RETRIEVAL call to wp_setcookie($user_login, $user_pass, true). Passed arguments: 0: $username (string), 2: $already_md5 (bool), 1: $password (string).
includes/frontend_edit_user_profile.php:173
  - RETRIEVAL call to wp_set_current_user($updated_user_id, $user_login) alters data types {'user_meta'}. Passed arguments: 0: $id (int), 1: $name (string). Returns (WP_User).
  - Data types: user_meta
includes/password_reset.php:12
  - RETRIEVAL call to check_password_reset_key($_REQUEST["key"], $_REQUEST["login"]). Passed arguments: 0: $key (string), 1: $login (string). Returns (WP_User|WP_Error). 

includes/create_page.php:33
  - STORAGE call to wp_insert_post(["comment_status" => "closed", "ping_status" => "closed", "post_author" => $author_id, "post_name" => $slug, "post_title" => $title, "post_status" => "publish", "post_type" => $post_type, "post_content" => $page_content, "post_parent" => 0]). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).
includes/create_page.php:46
  - STORAGE call to update_option($slug_original, $title) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
includes/create_page.php:61
  - STORAGE call to wp_delete_post($id, true) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post, wp_post, post_meta
includes/front-end-registration-login.php:261
  - STORAGE call to wp_insert_user(["user_login" => $user_login, "user_pass" => $user_pass, "user_email" => $user_email, "first_name" => $user_first, "last_name" => $user_last, "user_registered" => date("Y-m-d H:i:s"), "role" => "subscriber"]) alters data types {'user_meta', 'user'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user_meta, user
includes/front-end-registration-login.php:272
  - STORAGE call to update_usermeta($new_user_id, "_user_date_of_birth", $dob) alters data types {'user_meta', 'birth'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).
  - Data types: user_meta, birth
includes/front-end-registration-login.php:276
  - STORAGE call to update_usermeta($new_user_id, "_user_unique_patient_id", $user_unique_patientid) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).
  - Data types: user_meta
includes/frontend_edit_user_profile.php:152
  - STORAGE call to wp_update_user(["ID" => $userid, "user_login" => $user_login, "user_pass" => $user_pass, "user_email" => $user_email, "user_registered" => date("Y-m-d H:i:s"), "role" => "subscriber"]) alters data types {'user_meta', 'user'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).
  - Data types: user_meta, user
includes/frontend_edit_user_profile.php:161
  - STORAGE call to update_user_meta($userid, "first_name", $user_first) alters data types {'user_meta', 'first_name'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta, first_name
includes/frontend_edit_user_profile.php:162
  - STORAGE call to update_user_meta($userid, "last_name", $user_last) alters data types {'user_meta', 'last_name'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta, last_name
includes/frontend_edit_user_profile.php:167
  - STORAGE call to update_usermeta($updated_user_id, "_user_date_of_birth", $dob) alters data types {'user_meta', 'birth'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).
  - Data types: user_meta, birth 

includes/create_page.php:61
  - DELETION call to wp_delete_post($id, true) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).
  - Data types: post, wp_post, post_meta 

By data type:
birth
	WordPressStorageDetector.update_usermeta($updated_user_id, "_user_date_of_birth", $dob) - {'user_meta', 'birth'}
	WordPressRetrievalDetector.get_user_meta($curr_user->ID, "_user_date_of_birth", true) - {'user_meta', 'birth'}
	WordPressStorageDetector.update_usermeta($new_user_id, "_user_date_of_birth", $dob) - {'user_meta', 'birth'}
email
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
	VariableDetector.(unknown) - {'email'}
first_name
	VariableDetector.(unknown) - {'first_name'}
	WordPressStorageDetector.update_user_meta($userid, "first_name", $user_first) - {'user_meta', 'first_name'}
	VariableDetector.(unknown) - {'first_name'}
	WordPressRetrievalDetector.get_user_meta($curr_user->ID, "first_name", true) - {'user_meta', 'first_name'}
last_name
	VariableDetector.(unknown) - {'last_name'}
	WordPressRetrievalDetector.get_user_meta($curr_user->ID, "last_name", true) - {'user_meta', 'last_name'}
	VariableDetector.(unknown) - {'last_name'}
	WordPressStorageDetector.update_user_meta($userid, "last_name", $user_last) - {'user_meta', 'last_name'}
none
	WordPressRetrievalDetector.check_password_reset_key($_REQUEST["key"], $_REQUEST["login"]) - set()
	WordPressStorageDetector.wp_insert_post(["comment_status" => "closed", "ping_status" => "closed", "post_author" => $author_id, "post_name" => $slug, "post_title" => $title, "post_status" => "publish", "post_type" => $post_type, "post_content" => $page_content, "post_parent" => 0]) - set()
	WordPressRetrievalDetector.check_password_reset_key($rp_key, $rp_login) - set()
	WordPressRetrievalDetector.wp_setcookie($user_login, $user_pass, true) - set()
	WordPressRetrievalDetector.check_password_reset_key($_REQUEST["key"], $_REQUEST["login"]) - set()
	WordPressRetrievalDetector.wp_setcookie($user_login, $user_pass, true) - set()
	WordPressRetrievalDetector.wp_setcookie($_POST["usts_user_login"], $_POST["usts_user_pass"], true) - set()
option
	WordPressRetrievalDetector.get_option("siteurl") - {'option'}
	WordPressStorageDetector.update_option($slug_original, $title) - {'option'}
	WordPressRetrievalDetector.get_option("users_can_register") - {'option'}
	WordPressRetrievalDetector.get_option("users_can_register") - {'option'}
password
	VariableDetector.(unknown) - {'password'}
	ArrayElementDetector.(unknown) - {'password'}
	ArrayElementDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
	ArrayElementDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
	PropertyDetector.(unknown) - {'password'}
	ArrayElementDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
	ArrayElementDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
	ArrayElementDetector.(unknown) - {'password'}
	VariableDetector.(unknown) - {'password'}
	ArrayElementDetector.(unknown) - {'password'}
	ArrayElementDetector.(unknown) - {'password'}
post
	WordPressStorageDetector.wp_delete_post($id, true) - {'post', 'wp_post', 'post_meta'}
	DeletionDetector.wp_delete_post($id, true) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($page, ARRAY_N) - {'post', 'wp_post', 'post_meta'}
post_meta
	WordPressStorageDetector.wp_delete_post($id, true) - {'post', 'wp_post', 'post_meta'}
	DeletionDetector.wp_delete_post($id, true) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($page, ARRAY_N) - {'post', 'wp_post', 'post_meta'}
user
	WordPressRetrievalDetector.get_userdatabylogin($_POST["usts_user_login"]) - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordpressHashingFnDetector.wp_update_user(["ID" => $userid, "user_login" => $user_login, "user_pass" => $user_pass, "user_email" => $user_email, "user_registered" => date("Y-m-d H:i:s"), "role" => "subscriber"]) - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressStorageDetector.wp_insert_user(["user_login" => $user_login, "user_pass" => $user_pass, "user_email" => $user_email, "first_name" => $user_first, "last_name" => $user_last, "user_registered" => date("Y-m-d H:i:s"), "role" => "subscriber"]) - {'user_meta', 'user'}
	WordPressStorageDetector.wp_update_user(["ID" => $userid, "user_login" => $user_login, "user_pass" => $user_pass, "user_email" => $user_email, "user_registered" => date("Y-m-d H:i:s"), "role" => "subscriber"]) - {'user_meta', 'user'}
user_meta
	WordPressRetrievalDetector.wp_set_current_user($user->ID, $_POST["usts_user_login"]) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($curr_user->ID, "last_name", true) - {'user_meta', 'last_name'}
	WordPressRetrievalDetector.get_userdatabylogin($_POST["usts_user_login"]) - {'user_meta', 'user'}
	WordPressStorageDetector.update_usermeta($updated_user_id, "_user_date_of_birth", $dob) - {'user_meta', 'birth'}
	WordPressRetrievalDetector.wp_set_current_user($new_user_id, $user_login) - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressStorageDetector.update_user_meta($userid, "first_name", $user_first) - {'user_meta', 'first_name'}
	WordPressStorageDetector.update_usermeta($new_user_id, "_user_unique_patient_id", $user_unique_patientid) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($curr_user->ID, "_user_date_of_birth", true) - {'user_meta', 'birth'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_user_meta($curr_user->ID, "first_name", true) - {'user_meta', 'first_name'}
	WordPressStorageDetector.update_usermeta($new_user_id, "_user_date_of_birth", $dob) - {'user_meta', 'birth'}
	WordPressRetrievalDetector.wp_set_current_user($updated_user_id, $user_login) - {'user_meta'}
	WordpressHashingFnDetector.wp_update_user(["ID" => $userid, "user_login" => $user_login, "user_pass" => $user_pass, "user_email" => $user_email, "user_registered" => date("Y-m-d H:i:s"), "role" => "subscriber"]) - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressStorageDetector.wp_insert_user(["user_login" => $user_login, "user_pass" => $user_pass, "user_email" => $user_email, "first_name" => $user_first, "last_name" => $user_last, "user_registered" => date("Y-m-d H:i:s"), "role" => "subscriber"]) - {'user_meta', 'user'}
	WordPressStorageDetector.wp_update_user(["ID" => $userid, "user_login" => $user_login, "user_pass" => $user_pass, "user_email" => $user_email, "user_registered" => date("Y-m-d H:i:s"), "role" => "subscriber"]) - {'user_meta', 'user'}
	WordPressStorageDetector.update_user_meta($userid, "last_name", $user_last) - {'user_meta', 'last_name'}
wp_post
	WordPressStorageDetector.wp_delete_post($id, true) - {'post', 'wp_post', 'post_meta'}
	DeletionDetector.wp_delete_post($id, true) - {'post', 'wp_post', 'post_meta'}
	WordPressRetrievalDetector.get_post($page, ARRAY_N) - {'post', 'wp_post', 'post_meta'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:11.400138.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 74 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.237155.

!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 1062
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 2346
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 2520
74 STORE_REACHES edges created
74 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 131 nodes as PERSONAL
In total, tainted 131 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 79 nodes as ENCRYPTED
In total, tainted 79 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:05.589376.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:00:42.391412!
Request variable '$_REQUEST["checkemail"]' of personal types {'email'} is found.,,None
Request variable '$_REQUEST["checkemail"]' of personal types {'email'} is found.,,None
Request variable '$_POST["usts_user_pass"]' of personal types {'password'} is found.,,None
Request variable '$_POST["usts_user_pass"]' of personal types {'password'} is found.,,None
Request variable '$_POST["usts_user_pass"]' of personal types {'password'} is found.,,None
Request variable '$_POST["usts_user_pass"]' of personal types {'password'} is found.,,None
Request variable '$_POST["usts_user_email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["usts_user_pass"]' of personal types {'password'} is found.,,None
Request variable '$_POST["usts_user_pass_confirm"]' of personal types {'password'} is found.,,None
Request variable '$_POST["usts_user_email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["usts_user_pass"]' of personal types {'password'} is found.,,None
Request variable '$_POST["usts_user_pass_confirm"]' of personal types {'password'} is found.,,None
DELETION call to wp_delete_post($id, true) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
object property '$user->user_pass' of personal types {'password'} is found.,,None
object property '$curr_user->user_email' of personal types {'email'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$user_pass' of personal types {'password'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$user_pass' of personal types {'password'} is found.,,None
variable '$user_pass' of personal types {'password'} is found.,,None
variable '$user_pass' of personal types {'password'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$user_pass' of personal types {'password'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$user_pass' of personal types {'password'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$user_pass' of personal types {'password'} is found.,,None
variable '$user_pass' of personal types {'password'} is found.,,None
variable '$user_pass' of personal types {'password'} is found.,,None
variable '$user_email' of personal types {'email'} is found.,,None
variable '$user_pass' of personal types {'password'} is found.,,None
variable '$first_name' of personal types {'first_name'} is found.,,None
variable '$last_name' of personal types {'last_name'} is found.,,None
variable '$first_name' of personal types {'first_name'} is found.,,None
variable '$last_name' of personal types {'last_name'} is found.,,None
variable '$lost_password_sent' of personal types {'password'} is found.,,None
RETRIEVAL call to check_password_reset_key($_REQUEST["key"], $_REQUEST["login"]). Passed arguments: 0: $key (string), 1: $login (string). Returns (WP_User|WP_Error).,None,None
RETRIEVAL call to check_password_reset_key($rp_key, $rp_login). Passed arguments: 0: $key (string), 1: $login (string). Returns (WP_User|WP_Error).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_post($page, ARRAY_N) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 1: $output (string), 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("users_can_register") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("siteurl") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_userdatabylogin($_POST["usts_user_login"]) alters data types {'user_meta', 'user'}. Passed arguments: 0: $user_login (string). Returns (bool|object).,None,None
RETRIEVAL call to wp_setcookie($_POST["usts_user_login"], $_POST["usts_user_pass"], true). Passed arguments: 0: $username (string), 2: $already_md5 (bool), 1: $password (string).,None,None
RETRIEVAL call to wp_set_current_user($user->ID, $_POST["usts_user_login"]) alters data types {'user_meta'}. Passed arguments: 0: $id (int), 1: $name (string). Returns (WP_User).,None,None
RETRIEVAL call to wp_setcookie($user_login, $user_pass, true). Passed arguments: 0: $username (string), 2: $already_md5 (bool), 1: $password (string).,None,None
RETRIEVAL call to wp_set_current_user($new_user_id, $user_login) alters data types {'user_meta'}. Passed arguments: 0: $id (int), 1: $name (string). Returns (WP_User).,None,None
RETRIEVAL call to wp_setcookie($user_login, $user_pass, true). Passed arguments: 0: $username (string), 2: $already_md5 (bool), 1: $password (string).,None,None
RETRIEVAL call to wp_set_current_user($updated_user_id, $user_login) alters data types {'user_meta'}. Passed arguments: 0: $id (int), 1: $name (string). Returns (WP_User).,None,None
RETRIEVAL call to get_option("users_can_register") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_user_meta($curr_user->ID, "first_name", true) alters data types {'user_meta', 'first_name'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($curr_user->ID, "last_name", true) alters data types {'user_meta', 'last_name'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($curr_user->ID, "_user_date_of_birth", true) alters data types {'user_meta', 'birth'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to check_password_reset_key($_REQUEST["key"], $_REQUEST["login"]). Passed arguments: 0: $key (string), 1: $login (string). Returns (WP_User|WP_Error).,None,None
STORAGE call to wp_insert_post(["comment_status" => "closed", "ping_status" => "closed", "post_author" => $author_id, "post_name" => $slug, "post_title" => $title, "post_status" => "publish", "post_type" => $post_type, "post_content" => $page_content, "post_parent" => 0]). Passed arguments: 0: $postarr (array). Returns (int|WP_Error).,None,None
STORAGE call to update_option($slug_original, $title) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to wp_delete_post($id, true) alters data types {'post', 'wp_post', 'post_meta'}. Passed arguments: 1: $force_delete (bool), 0: $postid (int). Returns (WP_Post|false|null).,None,None
STORAGE call to wp_insert_user(["user_login" => $user_login, "user_pass" => $user_pass, "user_email" => $user_email, "first_name" => $user_first, "last_name" => $user_last, "user_registered" => date("Y-m-d H:i:s"), "role" => "subscriber"]) alters data types {'user_meta', 'user'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,None,None
STORAGE call to update_usermeta($new_user_id, "_user_date_of_birth", $dob) alters data types {'user_meta', 'birth'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).,None,None
STORAGE call to update_usermeta($new_user_id, "_user_unique_patient_id", $user_unique_patientid) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).,None,None
STORAGE call to wp_update_user(["ID" => $userid, "user_login" => $user_login, "user_pass" => $user_pass, "user_email" => $user_email, "user_registered" => date("Y-m-d H:i:s"), "role" => "subscriber"]) alters data types {'user_meta', 'user'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,None,None
STORAGE call to update_user_meta($userid, "first_name", $user_first) alters data types {'user_meta', 'first_name'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($userid, "last_name", $user_last) alters data types {'user_meta', 'last_name'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_usermeta($updated_user_id, "_user_date_of_birth", $dob) alters data types {'user_meta', 'birth'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (bool).,None,None
CRYPTOGRAPHY call to wp_update_user(["ID" => $userid, "user_login" => $user_login, "user_pass" => $user_pass, "user_email" => $user_email, "user_registered" => date("Y-m-d H:i:s"), "role" => "subscriber"]) alters data types {'user_meta', 'user'}. Passed arguments: 0: $userdata (array|object|WP_User). Returns (int|WP_Error).,hash,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] PII of types (['birth', 'password', 'email', 'user_meta', 'first_name', 'user', 'last_name']) stored through WordPress function "wp_insert_post(["comment_status" => "closed", "ping_status" => "closed", "post_author" => $author_id, "post_name" => $slug, "post_title" => $title, "post_status" => "publish", "post_type" => $post_type, "post_content" => $page_content, "post_parent" => 0])", found in file includes/create_page.php at line 33. 

[has_storage] PII of types (['birth', 'password', 'email', 'user_meta', 'first_name', 'user', 'last_name']) stored through WordPress function "update_usermeta($updated_user_id, "_user_date_of_birth", $dob)", found in file includes/frontend_edit_user_profile.php at line 167. 

[has_storage] PII of types (['birth', 'password', 'email', 'user_meta', 'first_name', 'user', 'last_name']) stored through WordPress function "update_user_meta($userid, "first_name", $user_first)", found in file includes/frontend_edit_user_profile.php at line 161. 

[has_storage] PII of types (['password', 'email', 'user_meta', 'user']) stored through WordPress function "update_usermeta($new_user_id, "_user_unique_patient_id", $user_unique_patientid)", found in file includes/front-end-registration-login.php at line 276. 

[has_storage] PII of types (['birth', 'password', 'email', 'user_meta', 'user']) stored through WordPress function "update_usermeta($new_user_id, "_user_date_of_birth", $dob)", found in file includes/front-end-registration-login.php at line 272. 

[has_storage] WP User info of types (['password', 'email', 'user_meta', 'user']) stored through WordPress function "wp_insert_user(["user_login" => $user_login, "user_pass" => $user_pass, "user_email" => $user_email, "first_name" => $user_first, "last_name" => $user_last, "user_registered" => date("Y-m-d H:i:s"), "role" => "subscriber"])", found in file includes/front-end-registration-login.php at line 261. 

[has_storage] WP User info of types (['birth', 'password', 'email', 'user_meta', 'first_name', 'user', 'last_name']) stored through WordPress function "wp_update_user(["ID" => $userid, "user_login" => $user_login, "user_pass" => $user_pass, "user_email" => $user_email, "user_registered" => date("Y-m-d H:i:s"), "role" => "subscriber"])", found in file includes/frontend_edit_user_profile.php at line 152. 

[has_storage] PII of types (['birth', 'password', 'email', 'user_meta', 'first_name', 'user', 'last_name']) stored through WordPress function "update_user_meta($userid, "last_name", $user_last)", found in file includes/frontend_edit_user_profile.php at line 162. 

[has_storage] Storage check is WP 

[Art.17, Right to erasure] Wordpress storage of PII through wp_insert_post(["comment_status" => "closed", "ping_status" => "closed", "post_author" => $author_id, "post_name" => $slug, "post_title" => $title, "post_status" => "publish", "post_type" => $post_type, "post_content" => $page_content, "post_parent" => 0]) does not have corresponding deletion method. Storage method found in file includes/create_page.php at line 33. 

[Art.17, Right to erasure] Wordpress storage of PII through update_usermeta($updated_user_id, "_user_date_of_birth", $dob) does not have corresponding deletion method. Storage method found in file includes/frontend_edit_user_profile.php at line 167. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($userid, "first_name", $user_first) does not have corresponding deletion method. Storage method found in file includes/frontend_edit_user_profile.php at line 161. 

[Art.17, Right to erasure] Wordpress storage of PII through update_usermeta($new_user_id, "_user_unique_patient_id", $user_unique_patientid) does not have corresponding deletion method. Storage method found in file includes/front-end-registration-login.php at line 276. 

[Art.17, Right to erasure] Wordpress storage of PII through update_usermeta($new_user_id, "_user_date_of_birth", $dob) does not have corresponding deletion method. Storage method found in file includes/front-end-registration-login.php at line 272. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($userid, "last_name", $user_last) does not have corresponding deletion method. Storage method found in file includes/frontend_edit_user_profile.php at line 162. 

[Art.17, Right to erasure] Deletion access is NONE 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 1165. Found in file includes/create_page.php at line 33 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 2838. Found in file includes/frontend_edit_user_profile.php at line 167 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 2815. Found in file includes/frontend_edit_user_profile.php at line 161 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 2118. Found in file includes/front-end-registration-login.php at line 276 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 2088. Found in file includes/front-end-registration-login.php at line 272 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 2824. Found in file includes/frontend_edit_user_profile.php at line 162 

[Art.15, Right to access] Data access is NONE_BUT_NOT_REQUIRED 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['access', 'deletion', 'encryption', 'third_party'] 

[main] Is deletion in violation? True 

[main] Is access in violation? False 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? False 


###########
### Q&A ###
###########

1. Why is my plugin in violation against GDPR?

GDPR (https://gdpr-info.eu/) aims to give citizens in the European Union (EU) control over their personal data. If a website collects or store user data, it is required to provide users functionalities to control their data, such as ones to erase or export their data. While a plugin do not directly interact with users, it may provide functionalities that collect or store personal data, which would make websites that deploy the plugin in violation against GDPR if the plugin does not provide corresponding functionalities to allow users control their personal data. Therefore, plugin developers are responsible to provide functions to manage the personal data they handle in accordance with GDPR. We list requirements by specific GDPR articles relevant to your plugin below.


[Art. 13, Information to be provided where personal data are collected from the data subject] If a plugin collects or handles personal data, it needs to provide privacy policy texts that explain what personal data is being collected and for what purpose. The texts are meant to be added to the privacy policy of the websites that deploy the plugin. 


            
[Art.17, Right to erasure] If a plugin stores personal data in a custom database they create or manage, or through Wordpress's native storage functions (e.g., update_user_meta), it needs to provide methods for users to erase the data upon request. Note that deleting data for all users upon uninstallation does not satisfy the requirement. 


            
        

2. How do I make my plugin compliant?

Please refer to the fix report below to see how you can make your plugin comply with GDPR.

        
