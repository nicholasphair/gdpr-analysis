Timeout in resolving values
Timeout in running neo4j query
Running Main.py on debitsuccess

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.517864.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:00.910492.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 0 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.203045.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 1 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.623082.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 572 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:00.871662.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 0 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.829151.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.126796.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 217 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:04.106727.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 3987
Added 3197 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 4212
Added 225 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.260318.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/debitsuccess/gateway-debitsuccess.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.182237.

1 REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
3986 PHP_REACHES edges created
225 PHP_REACHES edges created
4212 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 1436 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.167553.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:02.567662.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 77 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:03.742028.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 142 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.182942.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.288479.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:01.142599.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.027244.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.035373.

219 PHP_REACHES edges created
219 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 150 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.168903.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
No SQL nodes to process.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:00.158976.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'$this'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'$this->get_payment_method($i)_cc_number'' cannot be parsed correct.
HTML code '$'substr($exp, 0, 2)/substr($exp, -2)'' cannot be parsed correct.
HTML code '$'Instalment Option '' cannot be parsed correct.
HTML code '$'$perweek'' cannot be parsed correct.
HTML code '$'Number of Instalments'' cannot be parsed correct.
HTML code '$'ceil($woocommerce->cart->total / $instalment[0])'' cannot be parsed correct.
HTML code '$'$woocommerce'' cannot be parsed correct.
HTML code '$'Instalment Start Date'' cannot be parsed correct.
HTML code '$'date("Y-m-d", time() + 172800)'' cannot be parsed correct.
HTML code '$'Payment Type'' cannot be parsed correct.
HTML code '$'Bank Account'' cannot be parsed correct.
HTML code '$'Credit Card'' cannot be parsed correct.
HTML code '$'Account Holder Name'' cannot be parsed correct.
HTML code '$'Date of Birth'' cannot be parsed correct.
HTML code '$'Card type'' cannot be parsed correct.
HTML code '$'$type'' cannot be parsed correct.
HTML code '$'Account Number'' cannot be parsed correct.
HTML code '$'Expiration date'' cannot be parsed correct.
HTML code '$'<style> .fee { display : none !important; } </style>'' cannot be parsed correct.
HTML code '$'<script>
			jQuery(document).ready(function() {
				jQuery(\'.order_details\').find(\'tfoot tr:eq(2)\').remove();		
				
			});
			</script>'' cannot be parsed correct.
HTML code '$'plugins_url("/images/direct-debit-logo.png", )'' cannot be parsed correct.
HTML code '$'admin_url("admin-ajax.php")'' cannot be parsed correct.
HTML code '$'<div class="error"><p>sprintf(__("Debitsuccess Commerce is enabled and the <a href="%s">force SSL option</a> is disabled; your checkout is not secure! Please enable SSL and ensure your server has a valid SSL certificate.", "woothemes"), admin_url("admin.php?page=woocommerce"))</p></div>'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'get_permalink(woocommerce_get_page_id("myaccount"))'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'get_permalink(woocommerce_get_page_id("myaccount"))'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'<b>$this->get_post("edit-cc-number-" . $method_to_update)</b>$this->get_payment_method($i)_cc_number'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'<b>$this->get_post("edit-cc-exp-" . $method_to_update)</b>substr($current_method->cc_exp, 0, 2)/substr($current_method->cc_exp, -2)'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'<p>Thank you for your order.</p>'' cannot be parsed correct.
HTML code '$'explode(",", $instalments_option1["instalment_cost"])_0'' cannot be parsed correct.
HTML code '$'</label>
				<div id="debitsuccess-stored-info" style="padding: 10px 0 0 40px; clear: both;">
					'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'</label>
			</p>
			<div id="debitsuccess-new-info" style="display:none">
		</fieldset>
		'' cannot be parsed correct.
HTML code '$' :</label>
					'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$' :</label>
					<label for="no_of_instalment1">'' cannot be parsed correct.
HTML code '$' :</label>
					<input type="text" class="input-text" id="instalment_start_date" name="instalment_start_date" value="'' cannot be parsed correct.
HTML code '$' :</label>
					<input type="radio" checked="checked" name="ctype" onclick="return show_field(this.value);" value="BankAccount" style="margin:5px 0px 0px 0px;vertical-align:top;">&nbsp;&nbsp;'' cannot be parsed correct.
HTML code '$'					&nbsp;&nbsp;&nbsp;&nbsp;
					<input type="radio" name="ctype" onclick="return show_field(this.value);" value="CreditCard" style="margin:5px 0px 0px 0px;vertical-align: top;">&nbsp;&nbsp;'' cannot be parsed correct.
HTML code '$'				</p>

				
				<!-- Card holder name -->
				<p id="card_holder">
					<label for="cname" style="display:inline-block;width: 200px;">'' cannot be parsed correct.
HTML code '$' :</label>
					<input type="text" class="input-text" id="cname" name="cname" maxlength="265" />
				</p>

				<!-- Card holder Date of Birth -->
				<!--<p>
					<label for="cdob" style="display:inline-block;width: 200px;">'' cannot be parsed correct.
HTML code '$' :</label>
					<input type="text" class="input-text" id="cdob" name="cdob" maxlength="265" />
				</p>-->
				<div id="dCreditCard">
				<!-- Credit card type -->
				<p id="card_type" style="display:none;">
					<label for="cardtype" style="display:inline-block;width: 200px;">'' cannot be parsed correct.
HTML code '$' :</label>
					<select name="cardtype" id="cardtype" class="woocommerce-select" style="width: 170px;padding:6px;">
						'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$' :</label>
					<input type="text" class="input-text" id="ccnum" name="ccnum" maxlength="16" />
				</p>
				
				<div class="clear"></div>
				<!-- Credit card expiration -->
				<p id="cc-expire-month" style="display:none;">
					<label for="cc-expire-month" style="display:inline-block;width:200px;">'' cannot be parsed correct.
HTML code '$' :</label>
					
					<select name="expmonth" id="expmonth" class="woocommerce-select woocommerce-cc-month" style="padding:6px;">
						<option value="">'' cannot be parsed correct.
HTML code '$'</option>'' cannot be parsed correct.
HTML code '$'</option>'' cannot be parsed correct.
HTML code '$'" alt="DIRECT DEBIT" />
						<p><input type="checkbox" checked="true" id="chkDsTAndCAU" name="chkDsTAndCAU" value="true"> I/We authorise Debitsuccess Pty Ltd ACN 095 551 581, APCA User ID Number 184534 to debit my/our account at the Financial Institution identified here through the Bulk Electronic Clearing System (BECS)</p>
					</div>
					<div id="bankaccntTerms-NZ" style="display:none;">
						<h3>AUTHORITY TO ACCEPT DIRECT DEBITS</h3>
						(Not to operate as an assignment or agreement)
						
						<h4>Authorisation Code: 0302448</h4>
						<p><input type="checkbox" checked="true" id="chkDsTAndC" name="chkDsTAndC" value="true"> I confirm that I have authority over this bank account, and that it can be operated severally.</p>
					</div>
				</div>
		</fieldset>
	</fieldset>
	
	<script type = "text/javascript">
	function show_field(val){
		if(val == \'CreditCard\'){
			jQuery(\'#dCreditCard\').show();
			jQuery(\'#card_type\').show();
			jQuery(\'#cc-expire-month\').show();
			jQuery(\'#bankaccntTerms\').hide();
			jQuery("label[for=\'cname\']").text("Card Holder Name:");
			jQuery("label[for=\'ccnum\']").text("Credit Card number:");
		}
		if(val == \'BankAccount\'){
			jQuery(\'#dCreditCard\').show();
			jQuery(\'#card_type\').hide();
			jQuery(\'#account_number\').show();
			jQuery(\'#cc-expire-month\').hide();
			jQuery(\'#bankaccntTerms\').show();
			
			if(jQuery("#billing_country").val() == \'AU\'){
				jQuery(\'#bankaccntTerms-AU\').show();
				jQuery(\'#bankaccntTerms-NZ\').hide();
			}
			else if(jQuery("#billing_country").val() == \'NZ\'){
				jQuery(\'#bankaccntTerms-NZ\').show();
				jQuery(\'#bankaccntTerms-AU\').hide();
			}
			else{
				jQuery(\'#bankaccntTerms-AU\').hide();
				jQuery(\'#bankaccntTerms-NZ\').hide();
			}
			
			jQuery("label[for=\'cname\']").text("Account Holder Name:");			
			jQuery("label[for=\'ccnum\']").text("Account Number:");			
		}
	}
	
	
	jQuery(document).ready(function() {
		var oldInstalmentFee = 0;
		jQuery(document.body).on(\'change\', \'input[name="payment_method"]\', function() {
			jQuery(\'body\').trigger(\'update_checkout\');
		});
		
	
		jQuery( "input[name=\'instalment_start_date\']" ).datepicker({
			changeMonth: true,
			changeYear: true,
			dateFormat: \'yy-mm-dd\',
			minDate: \'+1D\',	
			maxDate : \'+7D\',
			firstDay : 0		
		});
		jQuery( "input[name=\'cdob\']" ).datepicker({
			changeMonth: true,
			changeYear: true,
			dateFormat: \'yy-mm-dd\',
			maxDate:0
		});		
		//setInstalmentMessage();	
		show_field("BankAccount");
	});
	
	jQuery( "#instalment" ).change(function() {
			 var no_instalment;
			 var instalment = jQuery(\'#instalment\').val();
			 var cart_total = jQuery(\'#cart_total\').val();
			 if(instalment == \'0\'){
				 no_instalment =0;
				 jQuery("label[for=\'no_of_instalment1\']").text(no_instalment);	
				 jQuery( "#no_of_instalments" ).hide();
			 } 
			 var ajaxurl = \''' cannot be parsed correct.
HTML code '$'" method="post" style="float:right" >
              <input type="submit" value="'' cannot be parsed correct.
HTML code '$'">
            </form>
            <span id="delete-confirm-msg-'' cannot be parsed correct.
HTML code '$'" method="post" >

              <input type="submit" value="'' cannot be parsed correct.
HTML code '$'">

            </form>

          </p>

        </header'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:08.008268.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.046134.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 0 do_action/apply_filters calls and 18 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.827987.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbplusDetector
### Start running FrontBaseDetector
### Finish running FirebirdInterBaseDetector
### Start running HashDetector
### Finish running FileProDetector
### Start running IBMDb2Detector
### Finish running DbaseDetector
### Start running InformixDetector
### Finish running CubridDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running MySQLDetector
### Start running MySQLiDetector
### Finish running MsqlDetector
### Start running Oci8Detector
### Finish running MongoDbDetector
### Start running OpenSSLDetector
### Finish running Oci8Detector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running ArrayElementDetector
### Start running PhpCurlDetector
### Finish running PasswordHashingDetector
### Start running PHPDataObjectDetector
### Finish running HashDetector
### Start running PHPIncludedDetector
### Finish running PHPDataObjectDetector
### Start running PHPRetrievalDetector
### Finish running PhpCurlDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPIncludedDetector
### Start running PhpVarDetector
### Finish running OpenSSLDetector
### Start running PostgreSQLDetector
### Finish running PhpVarDetector
### Start running PropertyDetector
### Finish running PHPStorageDetector
### Start running Sqlite3Detector
### Finish running PHPRetrievalDetector
### Start running SqliteDetector
### Finish running SqliteDetector
### Start running SqlServerDetector
### Finish running PostgreSQLDetector
### Start running SybaseDetector
### Finish running SybaseDetector
### Start running TokyoTyrantDetector
### Finish running Sqlite3Detector
### Start running UserInputDetector
### Finish running TokyoTyrantDetector
### Start running VariableDetector
### Finish running SqlServerDetector
### Start running WordpressHashingFnDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRemoteDetector
### Finish running maxdbDetector
### Start running WordPressRetrievalDetector
### Finish running MySQLiDetector
### Start running WordPressStorageDetector
### Finish running VariableDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running UserInputDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running GenericDatabaseUsageDetector
### Start running UninstallDetector
### Finish running PropertyDetector
### Finish running WordPressRemoteDetector
### Finish running WordPressStorageDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finish running WordPressRetrievalDetector
### Finished running detectors
gateway-debitsuccess.php:131
  - object property '$this->username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
gateway-debitsuccess.php:573
  - object property '$order->billing_first_name' of personal types {'first_name'} is found.
  - Data types: first_name
gateway-debitsuccess.php:574
  - object property '$order->billing_last_name' of personal types {'last_name'} is found.
  - Data types: last_name
gateway-debitsuccess.php:575
  - object property '$order->billing_address_1' of personal types {'address'} is found.
  - Data types: address
gateway-debitsuccess.php:576
  - object property '$order->billing_city' of personal types {'city'} is found.
  - Data types: city
gateway-debitsuccess.php:577
  - object property '$order->billing_state' of personal types {'state'} is found.
  - Data types: state
gateway-debitsuccess.php:578
  - object property '$order->billing_postcode' of personal types {'postcode'} is found.
  - Data types: postcode
gateway-debitsuccess.php:579
  - object property '$order->billing_country' of personal types {'country'} is found.
  - Data types: country
gateway-debitsuccess.php:581
  - object property '$order->billing_email' of personal types {'email'} is found.
  - Data types: email
gateway-debitsuccess.php:592
  - object property '$order->billing_first_name' of personal types {'first_name'} is found.
  - Data types: first_name
gateway-debitsuccess.php:593
  - object property '$order->billing_last_name' of personal types {'last_name'} is found.
  - Data types: last_name
gateway-debitsuccess.php:594
  - object property '$order->billing_address_1' of personal types {'address'} is found.
  - Data types: address
gateway-debitsuccess.php:595
  - object property '$order->billing_city' of personal types {'city'} is found.
  - Data types: city
gateway-debitsuccess.php:596
  - object property '$order->billing_state' of personal types {'state'} is found.
  - Data types: state
gateway-debitsuccess.php:597
  - object property '$order->billing_postcode' of personal types {'postcode'} is found.
  - Data types: postcode
gateway-debitsuccess.php:598
  - object property '$order->billing_country' of personal types {'country'} is found.
  - Data types: country
gateway-debitsuccess.php:600
  - object property '$order->billing_email' of personal types {'email'} is found.
  - Data types: email
gateway-debitsuccess.php:619
  - object property '$this->username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
gateway-debitsuccess.php:629
  - object property '$this->username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
gateway-debitsuccess.php:697
  - object property '$this->username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
gateway-debitsuccess.php:748
  - object property '$this->username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
gateway-debitsuccess.php:816
  - object property '$this->username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
gateway-debitsuccess.php:872
  - object property '$this->username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
gateway-debitsuccess.php:905
  - object property '$this->username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user 

gateway-debitsuccess.php:760
  - API call to wp_remote_post(QUERY_URL, ["body" => $query, "timeout" => 45, "redirection" => 5, "httpversion" => "1.0", "blocking" => true, "headers" => [], "cookies" => [], "ssl_verify" => false]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote
gateway-debitsuccess.php:822
  - API call to wp_remote_post(QUERY_URL, ["body" => $query, "timeout" => 45, "redirection" => 5, "httpversion" => "1.0", "blocking" => true, "headers" => [], "cookies" => [], "ssl_verify" => false]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).
  - Data types: remote 

gateway-debitsuccess.php:30
  - RETRIEVAL call to get_option("woocommerce_debitsuccess_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
gateway-debitsuccess.php:162
  - RETRIEVAL call to get_option("woocommerce_force_ssl_checkout") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
gateway-debitsuccess.php:273
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
gateway-debitsuccess.php:545
  - RETRIEVAL call to $this->get_post("expmonth") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
gateway-debitsuccess.php:547
  - RETRIEVAL call to $this->get_post("expyear") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
gateway-debitsuccess.php:547
  - RETRIEVAL call to $this->get_post("expyear") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
gateway-debitsuccess.php:550
  - RETRIEVAL call to $this->get_post("debitsuccess-use-stored-payment-info") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
gateway-debitsuccess.php:553
  - RETRIEVAL call to get_user_meta($user->ID, "customer_vault_ids", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
gateway-debitsuccess.php:554
  - RETRIEVAL call to $this->get_post("debitsuccess-payment-method") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
gateway-debitsuccess.php:564
  - RETRIEVAL call to $this->get_post("ctype") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
gateway-debitsuccess.php:567
  - RETRIEVAL call to $this->get_post("instalment") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
gateway-debitsuccess.php:568
  - RETRIEVAL call to $this->get_post("instalment_start_date") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
gateway-debitsuccess.php:569
  - RETRIEVAL call to $this->get_post("cname") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
gateway-debitsuccess.php:570
  - RETRIEVAL call to $this->get_post("ccnum") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
gateway-debitsuccess.php:585
  - RETRIEVAL call to $this->get_post("instalment") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
gateway-debitsuccess.php:586
  - RETRIEVAL call to $this->get_post("instalment_start_date") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
gateway-debitsuccess.php:587
  - RETRIEVAL call to $this->get_post("ccnum") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
gateway-debitsuccess.php:588
  - RETRIEVAL call to $this->get_post("cname") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
gateway-debitsuccess.php:606
  - RETRIEVAL call to $this->get_post("saveinfo") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
gateway-debitsuccess.php:617
  - RETRIEVAL call to $this->get_post("ctype") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
gateway-debitsuccess.php:622
  - RETRIEVAL call to $this->get_post("ctype") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
gateway-debitsuccess.php:632
  - RETRIEVAL call to $this->get_post("cardtype") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
gateway-debitsuccess.php:633
  - RETRIEVAL call to $this->get_post("ctype") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
gateway-debitsuccess.php:649
  - RETRIEVAL call to $this->get_post("debitsuccess-use-stored-payment-info") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
gateway-debitsuccess.php:652
  - RETRIEVAL call to $this->get_post("debitsuccess-payment-method") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
gateway-debitsuccess.php:654
  - RETRIEVAL call to $this->get_post("saveinfo") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
gateway-debitsuccess.php:656
  - RETRIEVAL call to get_user_meta($user->ID, "customer_vault_ids", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
gateway-debitsuccess.php:693
  - RETRIEVAL call to get_user_meta($user->ID, "customer_vault_ids", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
gateway-debitsuccess.php:694
  - RETRIEVAL call to get_post_meta($order->id, "payment_method_number", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
gateway-debitsuccess.php:743
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
gateway-debitsuccess.php:744
  - RETRIEVAL call to get_user_meta($user->ID, "customer_vault_ids", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
gateway-debitsuccess.php:804
  - RETRIEVAL call to get_post_meta($subscription["order_id"], "billing_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
gateway-debitsuccess.php:844
  - RETRIEVAL call to get_user_meta($user_id, "customer_vault_ids", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
gateway-debitsuccess.php:852
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
gateway-debitsuccess.php:853
  - RETRIEVAL call to get_user_meta($user->ID, "customer_vault_ids", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
gateway-debitsuccess.php:897
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
gateway-debitsuccess.php:898
  - RETRIEVAL call to get_user_meta($user->ID, "customer_vault_ids", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: user_meta
gateway-debitsuccess.php:923
  - RETRIEVAL call to get_post_meta($subscription["order_id"], "payment_method_number", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
gateway-debitsuccess.php:949
  - RETRIEVAL call to $this->get_post("debitsuccess-use-stored-payment-info") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
gateway-debitsuccess.php:952
  - RETRIEVAL call to $this->get_post("saveinfo") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
gateway-debitsuccess.php:952
  - RETRIEVAL call to $this->get_post("createaccount") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
gateway-debitsuccess.php:956
  - RETRIEVAL call to $this->get_post("cardtype") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
gateway-debitsuccess.php:957
  - RETRIEVAL call to $this->get_post("ccnum") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
gateway-debitsuccess.php:958
  - RETRIEVAL call to $this->get_post("expmonth") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
gateway-debitsuccess.php:959
  - RETRIEVAL call to $this->get_post("expyear") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
gateway-debitsuccess.php:960
  - RETRIEVAL call to $this->get_post("chkDsTAndC") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
gateway-debitsuccess.php:961
  - RETRIEVAL call to $this->get_post("chkDsTAndCAU") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
gateway-debitsuccess.php:962
  - RETRIEVAL call to $this->get_post("ctype") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
gateway-debitsuccess.php:968
  - RETRIEVAL call to $this->get_post("ctype") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
gateway-debitsuccess.php:980
  - RETRIEVAL call to $this->get_post("ctype") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
gateway-debitsuccess.php:1153
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
gateway-debitsuccess.php:1157
  - RETRIEVAL call to $this->get_post("delete") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
gateway-debitsuccess.php:1159
  - RETRIEVAL call to $this->get_post("delete") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
gateway-debitsuccess.php:1162
  - RETRIEVAL call to $this->get_post("update") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
gateway-debitsuccess.php:1164
  - RETRIEVAL call to $this->get_post("update") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
gateway-debitsuccess.php:1165
  - RETRIEVAL call to $this->get_post("edit-cc-number-" . $method_to_update) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
gateway-debitsuccess.php:1169
  - RETRIEVAL call to $this->get_post("ctype") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
gateway-debitsuccess.php:1177
  - RETRIEVAL call to $this->get_post("ctype") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
gateway-debitsuccess.php:1178
  - RETRIEVAL call to $this->get_post("edit-cc-exp-" . $method_to_update) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
gateway-debitsuccess.php:1273
  - RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).
  - Data types: user_meta, user
gateway-debitsuccess.php:1282
  - RETRIEVAL call to get_currentuserinfo() alters data types {'user_meta', 'user'}. Returns (bool|WP_User).
  - Data types: user_meta, user
gateway-debitsuccess.php:1340
  - RETRIEVAL call to get_option("woocommerce_debitsuccess_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
gateway-debitsuccess.php:1346
  - RETRIEVAL call to get_option("woocommerce_debitsuccess_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
gateway-debitsuccess.php:1373
  - RETRIEVAL call to get_option("woocommerce_debitsuccess_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
gateway-debitsuccess.php:1379
  - RETRIEVAL call to get_option("woocommerce_debitsuccess_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
gateway-debitsuccess.php:1402
  - RETRIEVAL call to get_option("woocommerce_debitsuccess_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
gateway-debitsuccess.php:1408
  - RETRIEVAL call to get_option("woocommerce_debitsuccess_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option 

gateway-debitsuccess.php:652
  - STORAGE call to update_post_meta($order->id, "payment_method_number", $this->get_post("debitsuccess-payment-method")) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
gateway-debitsuccess.php:658
  - STORAGE call to update_user_meta($user->ID, "customer_vault_ids", $customer_vault_ids) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
gateway-debitsuccess.php:661
  - STORAGE call to update_post_meta($order->id, "payment_method_number", count($customer_vault_ids) - 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
gateway-debitsuccess.php:799
  - STORAGE call to add_user_meta($user_id, "customer_vault_ids", $customer_vault_ids) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).
  - Data types: user_meta
gateway-debitsuccess.php:804
  - STORAGE call to update_post_meta($subscription["order_id"], "payment_method_number", $payment_method_numbers["_" . get_post_meta($subscription["order_id"], "billing_id", true)]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
gateway-debitsuccess.php:805
  - STORAGE call to delete_post_meta($subscription["order_id"], "billing_id") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
gateway-debitsuccess.php:884
  - STORAGE call to update_user_meta($user->ID, "customer_vault_ids", $customer_vault_ids) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta
gateway-debitsuccess.php:926
  - STORAGE call to delete_post_meta($subscription["order_id"], "payment_method_number") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
gateway-debitsuccess.php:930
  - STORAGE call to update_post_meta($subscription["order_id"], "payment_method_number", $payment_method) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
gateway-debitsuccess.php:938
  - STORAGE call to update_user_meta($user->ID, "customer_vault_ids", $customer_vault_ids) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: user_meta 

gateway-debitsuccess.php:541
  - WP_User object is created.
  - Data types: user_meta, user
gateway-debitsuccess.php:691
  - WP_User object is created.
  - Data types: user_meta, user 

gateway-debitsuccess.php:805
  - DELETION call to delete_post_meta($subscription["order_id"], "billing_id") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta
gateway-debitsuccess.php:926
  - DELETION call to delete_post_meta($subscription["order_id"], "payment_method_number") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).
  - Data types: post_meta 

By data type:
address
	PropertyDetector.(unknown) - {'address'}
	PropertyDetector.(unknown) - {'address'}
city
	PropertyDetector.(unknown) - {'city'}
	PropertyDetector.(unknown) - {'city'}
country
	PropertyDetector.(unknown) - {'country'}
	PropertyDetector.(unknown) - {'country'}
email
	PropertyDetector.(unknown) - {'email'}
	PropertyDetector.(unknown) - {'email'}
first_name
	PropertyDetector.(unknown) - {'first_name'}
	PropertyDetector.(unknown) - {'first_name'}
last_name
	PropertyDetector.(unknown) - {'last_name'}
	PropertyDetector.(unknown) - {'last_name'}
option
	WordPressRetrievalDetector.get_option("woocommerce_debitsuccess_settings") - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_debitsuccess_settings") - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_debitsuccess_settings") - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_debitsuccess_settings") - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_debitsuccess_settings") - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_force_ssl_checkout") - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_debitsuccess_settings") - {'option'}
	WordPressRetrievalDetector.get_option("woocommerce_debitsuccess_settings") - {'option'}
post
	WordPressRetrievalDetector.$this->get_post("ctype") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("cardtype") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("ctype") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("expmonth") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("instalment_start_date") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("ctype") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("debitsuccess-use-stored-payment-info") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("saveinfo") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("expyear") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("ctype") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("expyear") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("saveinfo") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("cardtype") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("ctype") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("debitsuccess-use-stored-payment-info") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("createaccount") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("debitsuccess-payment-method") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("update") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("ctype") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("instalment_start_date") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("instalment") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("debitsuccess-payment-method") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("expmonth") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("debitsuccess-use-stored-payment-info") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("expyear") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("cname") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("ccnum") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("delete") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("ccnum") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("chkDsTAndC") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("ctype") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("instalment") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("chkDsTAndCAU") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("edit-cc-number-" . $method_to_update) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("saveinfo") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("ctype") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("ctype") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("cname") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("edit-cc-exp-" . $method_to_update) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("update") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("ccnum") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("delete") - {'post_meta', 'post', 'wp_post'}
post_meta
	WordPressRetrievalDetector.$this->get_post("ctype") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("cardtype") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("ctype") - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($order->id, "payment_method_number", count($customer_vault_ids) - 1) - {'post_meta'}
	WordPressRetrievalDetector.$this->get_post("expmonth") - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.delete_post_meta($subscription["order_id"], "billing_id") - {'post_meta'}
	WordPressRetrievalDetector.$this->get_post("instalment_start_date") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("ctype") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("debitsuccess-use-stored-payment-info") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("saveinfo") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("expyear") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("ctype") - {'post_meta', 'post', 'wp_post'}
	DeletionDetector.delete_post_meta($subscription["order_id"], "payment_method_number") - {'post_meta'}
	WordPressRetrievalDetector.$this->get_post("expyear") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("saveinfo") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("cardtype") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("ctype") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("debitsuccess-use-stored-payment-info") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("createaccount") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("debitsuccess-payment-method") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("update") - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($subscription["order_id"], "payment_method_number", $payment_method_numbers["_" . get_post_meta($subscription["order_id"], "billing_id", true)]) - {'post_meta'}
	WordPressRetrievalDetector.$this->get_post("ctype") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("instalment_start_date") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("instalment") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("debitsuccess-payment-method") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("expmonth") - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($order->id, "payment_method_number", $this->get_post("debitsuccess-payment-method")) - {'post_meta'}
	WordPressRetrievalDetector.$this->get_post("debitsuccess-use-stored-payment-info") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("expyear") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("cname") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("ccnum") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("delete") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($subscription["order_id"], "payment_method_number", true) - {'post_meta'}
	WordPressRetrievalDetector.$this->get_post("ccnum") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("chkDsTAndC") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("ctype") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta($subscription["order_id"], "billing_id", true) - {'post_meta'}
	WordPressRetrievalDetector.$this->get_post("instalment") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("chkDsTAndCAU") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("edit-cc-number-" . $method_to_update) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("saveinfo") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("ctype") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("ctype") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("cname") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("edit-cc-exp-" . $method_to_update) - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.delete_post_meta($subscription["order_id"], "payment_method_number") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($order->id, "payment_method_number", true) - {'post_meta'}
	WordPressRetrievalDetector.$this->get_post("update") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("ccnum") - {'post_meta', 'post', 'wp_post'}
	DeletionDetector.delete_post_meta($subscription["order_id"], "billing_id") - {'post_meta'}
	WordPressRetrievalDetector.$this->get_post("delete") - {'post_meta', 'post', 'wp_post'}
	WordPressStorageDetector.update_post_meta($subscription["order_id"], "payment_method_number", $payment_method) - {'post_meta'}
postcode
	PropertyDetector.(unknown) - {'postcode'}
	PropertyDetector.(unknown) - {'postcode'}
remote
	WordPressRemoteDetector.(unknown) - {'remote'}
	WordPressRemoteDetector.(unknown) - {'remote'}
state
	PropertyDetector.(unknown) - {'state'}
	PropertyDetector.(unknown) - {'state'}
user
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_currentuserinfo() - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WP_UserDetector.WP_User($order->user_id) - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'user'}
	WP_UserDetector.WP_User($order->user_id) - {'user_meta', 'user'}
user_meta
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_user_meta($user->ID, "customer_vault_ids", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user->ID, "customer_vault_ids", true) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user->ID, "customer_vault_ids", $customer_vault_ids) - {'user_meta'}
	PropertyDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressStorageDetector.add_user_meta($user_id, "customer_vault_ids", $customer_vault_ids) - {'user_meta'}
	WordPressRetrievalDetector.get_currentuserinfo() - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_user_meta($user->ID, "customer_vault_ids", true) - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_user_meta($user_id, "customer_vault_ids", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user->ID, "customer_vault_ids", true) - {'user_meta'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	WordPressStorageDetector.update_user_meta($user->ID, "customer_vault_ids", $customer_vault_ids) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user->ID, "customer_vault_ids", true) - {'user_meta'}
	WordPressRetrievalDetector.get_user_meta($user->ID, "customer_vault_ids", true) - {'user_meta'}
	WordPressStorageDetector.update_user_meta($user->ID, "customer_vault_ids", $customer_vault_ids) - {'user_meta'}
	WP_UserDetector.WP_User($order->user_id) - {'user_meta', 'user'}
	WordPressRetrievalDetector.wp_get_current_user() - {'user_meta', 'user'}
	PropertyDetector.(unknown) - {'user_meta', 'user'}
	WP_UserDetector.WP_User($order->user_id) - {'user_meta', 'user'}
wp_post
	WordPressRetrievalDetector.$this->get_post("ctype") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("cardtype") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("ctype") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("expmonth") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("instalment_start_date") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("ctype") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("debitsuccess-use-stored-payment-info") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("saveinfo") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("expyear") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("ctype") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("expyear") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("saveinfo") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("cardtype") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("ctype") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("debitsuccess-use-stored-payment-info") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("createaccount") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("debitsuccess-payment-method") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("update") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("ctype") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("instalment_start_date") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("instalment") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("debitsuccess-payment-method") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("expmonth") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("debitsuccess-use-stored-payment-info") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("expyear") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("cname") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("ccnum") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("delete") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("ccnum") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("chkDsTAndC") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("ctype") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("instalment") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("chkDsTAndCAU") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("edit-cc-number-" . $method_to_update) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("saveinfo") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("ctype") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("ctype") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("cname") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("edit-cc-exp-" . $method_to_update) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("update") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("ccnum") - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.$this->get_post("delete") - {'post_meta', 'post', 'wp_post'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:15.452105.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 326 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.599102.

!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 1033
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 3307
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 3553
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 2750
!!!!!!!!!!Assumption violated. request variable is assigned to multiple variable at the same time. Check 4925
326 STORE_REACHES edges created
326 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 239 nodes as PERSONAL
In total, tainted 239 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
In total, tainted 0 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:05.322185.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:00:57.339521!
DELETION call to delete_post_meta($subscription["order_id"], "billing_id") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
DELETION call to delete_post_meta($subscription["order_id"], "payment_method_number") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
object property '$this->username' of personal types {'user_meta', 'user'} is found.,,None
object property '$order->billing_first_name' of personal types {'first_name'} is found.,,None
object property '$order->billing_last_name' of personal types {'last_name'} is found.,,None
object property '$order->billing_address_1' of personal types {'address'} is found.,,None
object property '$order->billing_city' of personal types {'city'} is found.,,None
object property '$order->billing_state' of personal types {'state'} is found.,,None
object property '$order->billing_postcode' of personal types {'postcode'} is found.,,None
object property '$order->billing_country' of personal types {'country'} is found.,,None
object property '$order->billing_email' of personal types {'email'} is found.,,None
object property '$order->billing_first_name' of personal types {'first_name'} is found.,,None
object property '$order->billing_last_name' of personal types {'last_name'} is found.,,None
object property '$order->billing_address_1' of personal types {'address'} is found.,,None
object property '$order->billing_city' of personal types {'city'} is found.,,None
object property '$order->billing_state' of personal types {'state'} is found.,,None
object property '$order->billing_postcode' of personal types {'postcode'} is found.,,None
object property '$order->billing_country' of personal types {'country'} is found.,,None
object property '$order->billing_email' of personal types {'email'} is found.,,None
object property '$this->username' of personal types {'user_meta', 'user'} is found.,,None
object property '$this->username' of personal types {'user_meta', 'user'} is found.,,None
object property '$this->username' of personal types {'user_meta', 'user'} is found.,,None
object property '$this->username' of personal types {'user_meta', 'user'} is found.,,None
object property '$this->username' of personal types {'user_meta', 'user'} is found.,,None
object property '$this->username' of personal types {'user_meta', 'user'} is found.,,None
object property '$this->username' of personal types {'user_meta', 'user'} is found.,,None
WP_User object is created.,,None
WP_User object is created.,,None
API call to wp_remote_post(QUERY_URL, ["body" => $query, "timeout" => 45, "redirection" => 5, "httpversion" => "1.0", "blocking" => true, "headers" => [], "cookies" => [], "ssl_verify" => false]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
API call to wp_remote_post(QUERY_URL, ["body" => $query, "timeout" => 45, "redirection" => 5, "httpversion" => "1.0", "blocking" => true, "headers" => [], "cookies" => [], "ssl_verify" => false]). Passed arguments: 0: $url (string), 1: $args (array). Returns (array|WP_Error).,https,[]
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to $this->get_post("delete") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to $this->get_post("delete") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to $this->get_post("update") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to $this->get_post("update") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to $this->get_post("edit-cc-number-" . $method_to_update) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to $this->get_post("ctype") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to $this->get_post("ctype") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to $this->get_post("edit-cc-exp-" . $method_to_update) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_currentuserinfo() alters data types {'user_meta', 'user'}. Returns (bool|WP_User).,None,None
RETRIEVAL call to get_option("woocommerce_debitsuccess_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_debitsuccess_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_debitsuccess_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_debitsuccess_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_debitsuccess_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_debitsuccess_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("woocommerce_force_ssl_checkout") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_option("woocommerce_debitsuccess_settings") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to $this->get_post("expmonth") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to $this->get_post("expyear") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to $this->get_post("expyear") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to $this->get_post("debitsuccess-use-stored-payment-info") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_user_meta($user->ID, "customer_vault_ids", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to $this->get_post("debitsuccess-payment-method") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to $this->get_post("ctype") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to $this->get_post("instalment") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to $this->get_post("instalment_start_date") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to $this->get_post("cname") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to $this->get_post("ccnum") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to $this->get_post("instalment") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to $this->get_post("instalment_start_date") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to $this->get_post("ccnum") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to $this->get_post("cname") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to $this->get_post("saveinfo") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to $this->get_post("ctype") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to $this->get_post("ctype") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to $this->get_post("cardtype") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to $this->get_post("ctype") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to $this->get_post("debitsuccess-use-stored-payment-info") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to $this->get_post("debitsuccess-payment-method") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to $this->get_post("saveinfo") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_user_meta($user->ID, "customer_vault_ids", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user->ID, "customer_vault_ids", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($order->id, "payment_method_number", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_user_meta($user->ID, "customer_vault_ids", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($subscription["order_id"], "billing_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_user_meta($user_id, "customer_vault_ids", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_user_meta($user->ID, "customer_vault_ids", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to wp_get_current_user() alters data types {'user_meta', 'user'}. Returns (WP_User).,None,None
RETRIEVAL call to get_user_meta($user->ID, "customer_vault_ids", true) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($subscription["order_id"], "payment_method_number", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to $this->get_post("debitsuccess-use-stored-payment-info") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to $this->get_post("saveinfo") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to $this->get_post("createaccount") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to $this->get_post("cardtype") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to $this->get_post("ccnum") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to $this->get_post("expmonth") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to $this->get_post("expyear") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to $this->get_post("chkDsTAndC") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to $this->get_post("chkDsTAndCAU") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to $this->get_post("ctype") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to $this->get_post("ctype") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to $this->get_post("ctype") alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
STORAGE call to update_post_meta($order->id, "payment_method_number", $this->get_post("debitsuccess-payment-method")) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user->ID, "customer_vault_ids", $customer_vault_ids) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($order->id, "payment_method_number", count($customer_vault_ids) - 1) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to add_user_meta($user_id, "customer_vault_ids", $customer_vault_ids) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|false).,None,None
STORAGE call to update_post_meta($subscription["order_id"], "payment_method_number", $payment_method_numbers["_" . get_post_meta($subscription["order_id"], "billing_id", true)]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($subscription["order_id"], "billing_id") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_user_meta($user->ID, "customer_vault_ids", $customer_vault_ids) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to delete_post_meta($subscription["order_id"], "payment_method_number") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string). Returns (bool).,None,None
STORAGE call to update_post_meta($subscription["order_id"], "payment_method_number", $payment_method) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_user_meta($user->ID, "customer_vault_ids", $customer_vault_ids) alters data types {'user_meta'}. Passed arguments: 0: $user_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] PII of types (['user_meta', 'user']) stored through WordPress function "update_user_meta($user->ID, "customer_vault_ids", $customer_vault_ids)", found in file gateway-debitsuccess.php at line 658. 

[has_storage] PII of types (['user_meta', 'user']) stored through WordPress function "add_user_meta($user_id, "customer_vault_ids", $customer_vault_ids)", found in file gateway-debitsuccess.php at line 799. 

[has_storage] PII of types (['user_meta', 'user']) stored through WordPress function "update_user_meta($user->ID, "customer_vault_ids", $customer_vault_ids)", found in file gateway-debitsuccess.php at line 938. 

[has_storage] PII of types (['user_meta', 'user']) stored through WordPress function "update_user_meta($user->ID, "customer_vault_ids", $customer_vault_ids)", found in file gateway-debitsuccess.php at line 884. 

[has_storage] Storage check is WP 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user->ID, "customer_vault_ids", $customer_vault_ids) does not have corresponding deletion method. Storage method found in file gateway-debitsuccess.php at line 658. 

[Art.17, Right to erasure] Wordpress storage of PII through add_user_meta($user_id, "customer_vault_ids", $customer_vault_ids) does not have corresponding deletion method. Storage method found in file gateway-debitsuccess.php at line 799. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user->ID, "customer_vault_ids", $customer_vault_ids) does not have corresponding deletion method. Storage method found in file gateway-debitsuccess.php at line 938. 

[Art.17, Right to erasure] Wordpress storage of PII through update_user_meta($user->ID, "customer_vault_ids", $customer_vault_ids) does not have corresponding deletion method. Storage method found in file gateway-debitsuccess.php at line 884. 

[Art.17, Right to erasure] Deletion access is NONE 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 2291. Found in file gateway-debitsuccess.php at line 658 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3063. Found in file gateway-debitsuccess.php at line 799 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3795. Found in file gateway-debitsuccess.php at line 938 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 3493. Found in file gateway-debitsuccess.php at line 884 

[Art.15, Right to access] Data access is NONE_BUT_NOT_REQUIRED 

[third_party] Third party usage is NONE for data types [] 

[encryption] API call that sends PII to unknown url uses unknown protocol. PII is insecurely encrypted with []. Found in file gateway-debitsuccess.php at line 822 

[main] Applicable GDPR requirements: ['access', 'deletion', 'encryption', 'third_party'] 

[main] Is deletion in violation? True 

[main] Is access in violation? False 

[main] Is third_party in violation? False 

[main] Is encryption in violation? True 

[main] Complaint? False 


###########
### Q&A ###
###########

1. Why is my plugin in violation against GDPR?

GDPR (https://gdpr-info.eu/) aims to give citizens in the European Union (EU) control over their personal data. If a website collects or store user data, it is required to provide users functionalities to control their data, such as ones to erase or export their data. While a plugin do not directly interact with users, it may provide functionalities that collect or store personal data, which would make websites that deploy the plugin in violation against GDPR if the plugin does not provide corresponding functionalities to allow users control their personal data. Therefore, plugin developers are responsible to provide functions to manage the personal data they handle in accordance with GDPR. We list requirements by specific GDPR articles relevant to your plugin below.


[Art. 13, Information to be provided where personal data are collected from the data subject] If a plugin collects or handles personal data, it needs to provide privacy policy texts that explain what personal data is being collected and for what purpose. The texts are meant to be added to the privacy policy of the websites that deploy the plugin. 


            
[Art.17, Right to erasure] If a plugin stores personal data in a custom database they create or manage, or through Wordpress's native storage functions (e.g., update_user_meta), it needs to provide methods for users to erase the data upon request. Note that deleting data for all users upon uninstallation does not satisfy the requirement. 


            
        

2. How do I make my plugin compliant?

Please refer to the fix report below to see how you can make your plugin comply with GDPR.

        

##################
### Fix Report ###
##################

############################
# Data Deletion Fix Report #
############################

This report suggests fixes to comply with the GDPR Art. 17, Right to erasure (https://gdpr-info.eu/art-17-gdpr/). The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/adding-the-personal-data-eraser-to-your-plugin/ for more details.

1) Implement a function that deletes all the user data collected in the plugin. Sample code:


/**
* Removes all collected data of a user.
*
* @param string $email_address   email address to manipulate
* @param int    $page            pagination
*
* @return array
*/
function debitsuccess_remove_data( $email_address, $page = 1 ) {
    
    $page = (int) $page;


    //TODO: Delete the user data that was stored using Wordpress functions

    //Below is the sample code for deleting user meta and may need to be modified to suit the plugin.
    $user_id = get_user_by('email', $email_address)
    $key = 'email' //Sample user meta key
    if ( $customer->user_id > 0 ) {
        //Delete user meta data by $key
        delete_user_meta( $user_id, $key );
    }
        



    // Tell core if we have more data to delete still
    $done = true;
    return array(
        'items_removed'  => $items_removed, // true if collected data of a user is being deleted
        'items_retained' => $items_retained, // true if certain data needs to be retained
        'messages'       => sprintf( __( 'Data of user with email %s successfully deleted.', 'debitsuccess' ), $email_address ), // Put messages for data removal
        'done'           => $done, // true if all the removal processes are done (all data of the user is removed)
    );
}
        

2) Hook the deletion function to the Wordpress's Personal Data Removal tool


/**
* Registers all data erasers.
*
* @param array $exporters
*
* @return mixed
*/
function debitsuccess_register_privacy_erasers( $erasers ) {
    $erasers['my-plugin-slug'] = array(
        'eraser_friendly_name' => __( '<eraser name>', 'debitsuccess' ),
        'callback'             => 'debitsuccess_remove_data',
    );
    return $erasers;
}
        

add_filter( 'wp_privacy_personal_data_erasers', 'debitsuccess_register_privacy_erasers' );
        

        

#############################
# Privacy Policy Fix Report #
#############################

This report suggests fixes to comply with the GDPR Art. 13 (https://gdpr-info.eu/art-13-gdpr/) through including a privacy notice. The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/suggesting-text-for-the-site-privacy-policy/ for more details.

1) Implement a function that includes the privacy policy for the plugin and provide it to wordpress through wp_add_privacy_policy_content(). Sample code:


/**
* Adds a privacy policy statement.
*/
function debitsuccess_add_privacy_policy_content() {
    if ( ! function_exists( 'wp_add_privacy_policy_content' ) ) {
        return;
    }
    //TODO: modify the content below to include the privacy policy for the plugin.
    $content = '<p class="privacy-policy-tutorial">' . __( 'Some introductory content for the suggested text.', 'debitsuccess' ) . '</p>'
            . '<strong class="privacy-policy-tutorial">' . __( 'Suggested Text:', 'debitsuccess' ) . '</strong> '
            . sprintf(
                __( 'When you leave a comment on this site, we send your name, email address, IP address and comment text to example.com. Example.com does not retain your personal data. The example.com privacy policy is <a href="%1$s" target="_blank">here</a>.', 'debitsuccess' ),
                'https://example.com/privacy-policy'
            );
    wp_add_privacy_policy_content( 'debitsuccess', wp_kses_post( wpautop( $content, false ) ) );
}
        

2) Hook the privacy policy function to the Wordpress's admin initialization action.


add_action( 'admin_init', 'debitsuccess_add_privacy_policy_content' );
        

        


Disclaimer: The sample code provided above is only for reference and does not guarantee GDPR compliance. The recommended list of data to delete/export may not be comprehensive. 
        
Done.
