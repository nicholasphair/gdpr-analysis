Timeout in resolving values
Timeout in running neo4j query
Running Main.py on wp-image-preloader

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:01.819366.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.309887.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 0 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.173971.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 0 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.348196.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 194 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:00.619419.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 0 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.555052.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.108572.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 70 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:02.517807.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 897
Added 633 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 23123
Added 22226 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:02.962008.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-image-preloader/wp-image-preloader.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-image-preloader/wp-image-preloader-portable.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.212436.

897 PHP_REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
14000 PHP_REACHES edges created
15000 PHP_REACHES edges created
16000 PHP_REACHES edges created
17000 PHP_REACHES edges created
18000 PHP_REACHES edges created
19000 PHP_REACHES edges created
20000 PHP_REACHES edges created
21000 PHP_REACHES edges created
22000 PHP_REACHES edges created
22226 PHP_REACHES edges created
23123 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 293 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:00.938425.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.145308.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 7 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.770068.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 10 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.186981.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.005153.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.133915.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.015917.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.040175.

17 PHP_REACHES edges created
17 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 7 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.106998.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
No SQL nodes to process.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:00.096079.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'<script type="text/javascript">jQuery.preLoadImages(wpimgpreloader_js_string_from_array($WPIMGP_Queue));</script>'' cannot be parsed correct.
HTML code '$'<script type="text/javascript">jQuery.preLoadImages(wpimgpreloader_js_string_from_array($WPIMGP_Queue));</script>'' cannot be parsed correct.
HTML code '$'<div class="wrap">
			<div id="icon-wpimgpreloader" style="background:url(\'$plugin_url/icons/wp-image-preloader.png\') no-repeat left top" class="icon32"><br /></div>
			<h2>WP Image Preloader Options</h2>
	
			<div id="re-wp-wrap">
				$msg
				<form method="post" target="_self">
					<table class="form-table">
						<tr valign="top">
							<th scope="row"><label for="last_rotated">Activate shortcode:</label></th>
							<td>
								<input type="radio" name="shortcode_activate" id="shortcode_activate" value="yes" $sh_active_yes /> Yes
								&nbsp;&nbsp;&nbsp;
								<input type="radio" name="shortcode_activate" id="shortcode_activate" value="no" $sh_active_no /> No
								<br/>
								* Check Yes if you want to use shortcodes in your posts or pages to enqueue images to preload. Check no to deactivate.
							</td>
						</tr>
						<tr valign="top">
							<th scope="row"><label for="shortcode">Shortcode:</label></th>
							<td>
								<strong>WP_IMG_PRELOADER_SHORTCODE</strong><br/>
								* Example: [preload=http://domain.tld/bigimage.png] to preload one image
								or [preload=http://domain.tld/bigimage1.png, preload=http://domain.tld/bigimage2.png, preload=http://domain.tld/bigimage3.png] to preload more images.
							</td>
						</tr>
						<tr valign="top">
							<th scope="row"><label for="queue">Default Stack:</label></th>
							<td>
								<textarea name="queue" id="queue" cols="80" rows="10">get_option("wpimgpreloader_queue", "")</textarea><br/>
								Put here a default list of images to preload. One image url per line. These will be preloaded on every page of your blog.
								<br/>
								You can use absolute or relative urls to get_bloginfo("url")
							</td>
						</tr>
					</table>
					<p class="submit" align="center">
						<input type="submit" name="Submit" class="button-primary" value="Save Options">
					</p>
					
					<p align="center">
						Stuck? Find out more: 
						&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
						<a href="http://adrian.silimon.eu/wp-image-preloader/#respond" target="_blank">Ask for help.</a>
						&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
						<a href="http://adrian.silimon.eu/wp-image-preloader/#how-to-use" target="_blank">How to use.</a>
						&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
						<a href="http://adrian.silimon.eu/wp-image-preloader/#documentation" target="_blank">Plugin documentation.</a>
						&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
					</p>
				</form>
			</div>
		</div>			
	'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:01.906610.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.050265.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 0 do_action/apply_filters calls and 6 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.478349.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbaseDetector
### Start running FrontBaseDetector
### Finish running FileProDetector
### Start running HashDetector
### Finish running DbplusDetector
### Start running IBMDb2Detector
### Finish running FirebirdInterBaseDetector
### Start running InformixDetector
### Finish running CubridDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running HashDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running MsqlDetector
### Start running OpenSSLDetector
### Finish running ArrayElementDetector
### Start running ParadoxDetector
### Finish running MongoDbDetector
### Start running PasswordHashingDetector
### Finish running OpenSSLDetector
### Start running PhpCurlDetector
### Finish running Oci8Detector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running ParadoxDetector
### Start running PHPRetrievalDetector
### Finish running PhpCurlDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PasswordHashingDetector
### Start running PhpVarDetector
### Finish running PHPStorageDetector
### Start running PostgreSQLDetector
### Finish running PHPRetrievalDetector
### Start running PropertyDetector
### Finish running PHPIncludedDetector
### Start running Sqlite3Detector
### Finish running PhpVarDetector
### Start running SqliteDetector
### Finish running PostgreSQLDetector
### Start running SqlServerDetector
### Finish running SqliteDetector
### Start running SybaseDetector
### Finish running Sqlite3Detector
### Start running TokyoTyrantDetector
### Finish running PropertyDetector
### Start running UserInputDetector
### Finish running TokyoTyrantDetector
### Start running VariableDetector
### Finish running SybaseDetector
### Start running WordpressHashingFnDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRemoteDetector
### Finish running SqlServerDetector
### Start running WordPressRetrievalDetector
### Finish running WordPressRemoteDetector
### Start running WordPressStorageDetector
### Finish running UserInputDetector
### Start running WP_UserDetector
### Finish running VariableDetector
### Start running GenericDatabaseUsageDetector
### Finish running WP_UserDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running GenericDatabaseUsageDetector
### Start running UninstallDetector
### Finish running WordPressRetrievalDetector
### Finish running WordPressStorageDetector
### Finish running DeletionDetector
### Finish running UninstallDetector
### Finish running MySQLiDetector
### Finish running maxdbDetector
### Finished running detectors
wp-image-preloader.php:87
  - variable '$sh_state' of personal types {'state'} is found.
  - Data types: state
wp-image-preloader.php:89
  - variable '$sh_state' of personal types {'state'} is found.
  - Data types: state 

wp-image-preloader.php:47
  - RETRIEVAL call to get_option("wpimgpreloader_installed", NULL) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
wp-image-preloader.php:87
  - RETRIEVAL call to get_option("wpimgpreloader_shortcode_activate", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
wp-image-preloader.php:90
  - RETRIEVAL call to get_option("wpimgpreloader_queue", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
wp-image-preloader.php:171
  - RETRIEVAL call to get_option("wpimgpreloader_queue", NULL) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
wp-image-preloader.php:311
  - RETRIEVAL call to get_option("wpimgpreloader_shortcode_activate", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option 

wp-image-preloader.php:48
  - STORAGE call to add_option("wpimgpreloader_installed", "yes", FALSE, "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).
  - Data types: option
wp-image-preloader.php:49
  - STORAGE call to add_option("wpimgpreloader_queue", "", FALSE, "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).
  - Data types: option
wp-image-preloader.php:50
  - STORAGE call to add_option("wpimgpreloader_shortcode_activate", "no", FALSE, "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).
  - Data types: option
wp-image-preloader.php:57
  - STORAGE call to delete_option("wpimgpreloader_installed") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
wp-image-preloader.php:58
  - STORAGE call to delete_option("wpimgpreloader_queue") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
wp-image-preloader.php:59
  - STORAGE call to delete_option("wpimgpreloader_shortcode_activate") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
wp-image-preloader.php:80
  - STORAGE call to update_option("wpimgpreloader_queue", $wp_img_queue) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
wp-image-preloader.php:81
  - STORAGE call to update_option("wpimgpreloader_shortcode_activate", $wp_img_activate_shortcode) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option 

wp-image-preloader.php:57
  - DELETION call to delete_option("wpimgpreloader_installed") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
wp-image-preloader.php:58
  - DELETION call to delete_option("wpimgpreloader_queue") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
wp-image-preloader.php:59
  - DELETION call to delete_option("wpimgpreloader_shortcode_activate") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

By data type:
option
	DeletionDetector.delete_option("wpimgpreloader_shortcode_activate") - {'option'}
	WordPressStorageDetector.update_option("wpimgpreloader_shortcode_activate", $wp_img_activate_shortcode) - {'option'}
	DeletionDetector.delete_option("wpimgpreloader_queue") - {'option'}
	WordPressStorageDetector.update_option("wpimgpreloader_queue", $wp_img_queue) - {'option'}
	WordPressRetrievalDetector.get_option("wpimgpreloader_shortcode_activate", "no") - {'option'}
	WordPressStorageDetector.add_option("wpimgpreloader_installed", "yes", FALSE, "no") - {'option'}
	WordPressRetrievalDetector.get_option("wpimgpreloader_installed", NULL) - {'option'}
	WordPressStorageDetector.delete_option("wpimgpreloader_shortcode_activate") - {'option'}
	WordPressRetrievalDetector.get_option("wpimgpreloader_shortcode_activate", "no") - {'option'}
	WordPressRetrievalDetector.get_option("wpimgpreloader_queue", "") - {'option'}
	WordPressStorageDetector.add_option("wpimgpreloader_queue", "", FALSE, "no") - {'option'}
	WordPressStorageDetector.add_option("wpimgpreloader_shortcode_activate", "no", FALSE, "no") - {'option'}
	DeletionDetector.delete_option("wpimgpreloader_installed") - {'option'}
	WordPressRetrievalDetector.get_option("wpimgpreloader_queue", NULL) - {'option'}
	WordPressStorageDetector.delete_option("wpimgpreloader_queue") - {'option'}
	WordPressStorageDetector.delete_option("wpimgpreloader_installed") - {'option'}
state
	VariableDetector.(unknown) - {'state'}
	VariableDetector.(unknown) - {'state'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:10.310237.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 40 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.116654.

40 STORE_REACHES edges created
40 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 3 nodes as PERSONAL
In total, tainted 3 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
In total, tainted 0 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:00.389046.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:00:34.061178!
DELETION call to delete_option("wpimgpreloader_installed") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("wpimgpreloader_queue") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("wpimgpreloader_shortcode_activate") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
variable '$sh_state' of personal types {'state'} is found.,,None
variable '$sh_state' of personal types {'state'} is found.,,None
RETRIEVAL call to get_option("wpimgpreloader_queue", NULL) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wpimgpreloader_shortcode_activate", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wpimgpreloader_installed", NULL) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wpimgpreloader_shortcode_activate", "no") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("wpimgpreloader_queue", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
STORAGE call to add_option("wpimgpreloader_installed", "yes", FALSE, "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("wpimgpreloader_queue", "", FALSE, "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("wpimgpreloader_shortcode_activate", "no", FALSE, "no") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("wpimgpreloader_installed") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("wpimgpreloader_queue") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("wpimgpreloader_shortcode_activate") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("wpimgpreloader_queue", $wp_img_queue) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("wpimgpreloader_shortcode_activate", $wp_img_activate_shortcode) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] Storage check is NONE 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['encryption', 'third_party'] 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? True 

No findings
