Timeout in resolving values
Timeout in running neo4j query
Running Main.py on make-my-blog-honest

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.562249.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.030184.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 118 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.337040.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 0 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.305513.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 636 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:00.937302.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 345 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:04.698608.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
Added 18 PHP_REACHES edges.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.073178.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 374 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:05.232748.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 8425
Added 6934 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 8914
Added 489 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.513606.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/make-my-blog-honest/index.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/make-my-blog-honest/step10.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/make-my-blog-honest/step11.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/make-my-blog-honest/step1.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/make-my-blog-honest/step2.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/make-my-blog-honest/step3.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/make-my-blog-honest/step4.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/make-my-blog-honest/step5.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/make-my-blog-honest/step6.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/make-my-blog-honest/step7.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/make-my-blog-honest/step8.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/make-my-blog-honest/step9.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/make-my-blog-honest/uninstall.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/make-my-blog-honest/html/deal-configuration-page.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/make-my-blog-honest/html/deal-configuration-page-step8.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/make-my-blog-honest/html/honesty-settings-page.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/make-my-blog-honest/html/honesty-settings-page-step5.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/make-my-blog-honest/html/elements/deal-display.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/make-my-blog-honest/html/elements/deal-list.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:01.803638.

1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
8425 PHP_REACHES edges created
489 PHP_REACHES edges created
8914 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 2730 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.409506.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 1 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:03.887617.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 39 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:01.206732.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 46 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.138007.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.280414.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.240336.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.009993.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.043142.

1 CALLS edges created
85 PHP_REACHES edges created
86 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 74 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.131942.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
43 SQL operations to process.
SELECT * FROM $wpdb_deals
SQL command (SELECT * FROM $wpdb_deals) cannot be parsed correct.
SELECT * FROM $wpdb_deals WHERE `enabled` = true AND `expires` > NOW();
SQL command (SELECT * FROM $wpdb_deals WHERE `enabled` = true AND `expires` > NOW();) cannot be parsed correct.
INSERT INTO $wpdb_deals(`product_name`, `sale_price`, `enabled`, `expires`) VALUES($product_name, %f, %d, %s);
INSERT INTO $wpdb_deals(`product_name`, `sale_price`, `enabled`, `expires`) VALUES($product_name, $sale_price, %d, %s);
INSERT INTO $wpdb_de$enableds(`product_name`, `sale_price`, `enabled`, `expires`) VALUES($product_name, $sale_price, %d, %s);
INSERT INTO $wpdb_de$enableds(`product_name`, `sale_price`, `enabled`, `expires`) VALUES($product_nam$expires_Year-$expires_Month-$expires_Day $sale_price, %d, %s);
INSERT INTO $wpdb_de$enableds(`product_name`, `sale_price`, `enabled`, `expires`) VALUES($product_nam$expires_Year-$expires_Month-$expires_Day $sale_price, %d, %s);
SQL command (INSERT INTO $wpdb_de$enableds(`product_name`, `sale_price`, `enabled`, `expires`) VALUES($product_nam$expires_Year-$expires_Month-$expires_Day $sale_price, %d, %s);) cannot be parsed correct.
UPDATE $wpdb_deals SET `enabled` = $enabled WHERE `id` = %d;
UPDATE $wpdb_deals SET `enabled` = $enabled WHERE `id` = $id;
UPDATE $wpdb_deals SET `enabled` = $enabled WHERE `id` = $id;
SQL command (UPDATE $wpdb_deals SET `enabled` = $enabled WHERE `id` = $id;) cannot be parsed correct.
DELETE FROM $wpdb_deals WHERE `id` = $id;
DELETE FROM $wpdb_deals WHERE `id` = $id;
SQL command (DELETE FROM $wpdb_deals WHERE `id` = $id;) cannot be parsed correct.
ALTER TABLE $wpdb_deals ADD `expires` DATETIME NOT NULL AFTER `enabled`;
SQL command (ALTER TABLE $wpdb_deals ADD `expires` DATETIME NOT NULL AFTER `enabled`;) cannot be parsed correct.
ALTER TABLE $wpdb_deals MODIFY `sale_price` float NOT NULL;
SQL command (ALTER TABLE $wpdb_deals MODIFY `sale_price` float NOT NULL;) cannot be parsed correct.
ALTER TABLE $wpdb_deals MODIFY `enabled` tinyint(1) NOT NULL;
SQL command (ALTER TABLE $wpdb_deals MODIFY `enabled` tinyint(1) NOT NULL;) cannot be parsed correct.
CREATE TABLE $wpdb_deals (
							`id` mediumint(9) NOT NULL AUTO_INCREMENT,
							`product_name` varchar(256) NOT NULL,
							`sale_price` float NOT NULL,
							`enabled` tinyint(1) NOT NULL,
							`expires` DATETIME NOT NULL,
							UNIQUE KEY id (id)
					);
SQL command (CREATE TABLE $wpdb_deals ( `id` mediumint(9) NOT NULL AUTO_INCREMENT, `product_name` varchar(256) NOT NULL, `sale_price` float NOT NULL, `enabled` tinyint(1) NOT NULL, `expires` DATETIME NOT NULL, UNIQUE KEY id (id) );) cannot be parsed correct.
SELECT * FROM $wpdb_deals
SQL command (SELECT * FROM $wpdb_deals) cannot be parsed correct.
SELECT * FROM $wpdb_deals WHERE `enabled` = true AND `expires` > NOW();
SQL command (SELECT * FROM $wpdb_deals WHERE `enabled` = true AND `expires` > NOW();) cannot be parsed correct.
INSERT INTO $wpdb_deals(`product_name`, `sale_price`, `enabled`, `expires`) VALUES($product_name, %f, %d, %s);
INSERT INTO $wpdb_deals(`product_name`, `sale_price`, `enabled`, `expires`) VALUES($product_name, $sale_price, %d, %s);
INSERT INTO $wpdb_de$enableds(`product_name`, `sale_price`, `enabled`, `expires`) VALUES($product_name, $sale_price, %d, %s);
INSERT INTO $wpdb_de$enableds(`product_name`, `sale_price`, `enabled`, `expires`) VALUES($product_nam$expires_Year-$expires_Month-$expires_Day $sale_price, %d, %s);
INSERT INTO $wpdb_de$enableds(`product_name`, `sale_price`, `enabled`, `expires`) VALUES($product_nam$expires_Year-$expires_Month-$expires_Day $sale_price, %d, %s);
SQL command (INSERT INTO $wpdb_de$enableds(`product_name`, `sale_price`, `enabled`, `expires`) VALUES($product_nam$expires_Year-$expires_Month-$expires_Day $sale_price, %d, %s);) cannot be parsed correct.
UPDATE $wpdb_deals SET `enabled` = $enabled WHERE `id` = %d;
UPDATE $wpdb_deals SET `enabled` = $enabled WHERE `id` = $id;
UPDATE $wpdb_deals SET `enabled` = $enabled WHERE `id` = $id;
SQL command (UPDATE $wpdb_deals SET `enabled` = $enabled WHERE `id` = $id;) cannot be parsed correct.
DELETE FROM $wpdb_deals WHERE `id` = $id;
DELETE FROM $wpdb_deals WHERE `id` = $id;
SQL command (DELETE FROM $wpdb_deals WHERE `id` = $id;) cannot be parsed correct.
ALTER TABLE $wpdb_deals ADD `expires` DATETIME NOT NULL AFTER `enabled`;
SQL command (ALTER TABLE $wpdb_deals ADD `expires` DATETIME NOT NULL AFTER `enabled`;) cannot be parsed correct.
ALTER TABLE $wpdb_deals MODIFY `sale_price` float NOT NULL;
SQL command (ALTER TABLE $wpdb_deals MODIFY `sale_price` float NOT NULL;) cannot be parsed correct.
ALTER TABLE $wpdb_deals MODIFY `enabled` tinyint(1) NOT NULL;
SQL command (ALTER TABLE $wpdb_deals MODIFY `enabled` tinyint(1) NOT NULL;) cannot be parsed correct.
CREATE TABLE $wpdb_deals (
							`id` mediumint(9) NOT NULL AUTO_INCREMENT,
							`product_name` varchar(256) NOT NULL,
							`sale_price` float NOT NULL,
							`enabled` tinyint(1) NOT NULL,
							`expires` DATETIME NOT NULL,
							UNIQUE KEY id (id)
					);
SQL command (CREATE TABLE $wpdb_deals ( `id` mediumint(9) NOT NULL AUTO_INCREMENT, `product_name` varchar(256) NOT NULL, `sale_price` float NOT NULL, `enabled` tinyint(1) NOT NULL, `expires` DATETIME NOT NULL, UNIQUE KEY id (id) );) cannot be parsed correct.
ALTER TABLE $wpdb_deals ADD `expires` DATETIME NOT NULL AFTER `enabled`;
SQL command (ALTER TABLE $wpdb_deals ADD `expires` DATETIME NOT NULL AFTER `enabled`;) cannot be parsed correct.
ALTER TABLE $wpdb_deals MODIFY `sale_price` float NOT NULL;
SQL command (ALTER TABLE $wpdb_deals MODIFY `sale_price` float NOT NULL;) cannot be parsed correct.
ALTER TABLE $wpdb_deals MODIFY `enabled` tinyint(1) NOT NULL;
SQL command (ALTER TABLE $wpdb_deals MODIFY `enabled` tinyint(1) NOT NULL;) cannot be parsed correct.
CREATE TABLE $wpdb_deals (
							`id` mediumint(9) NOT NULL AUTO_INCREMENT,
							`product_name` varchar(256) NOT NULL,
							`sale_price` float NOT NULL,
							`enabled` tinyint(1) NOT NULL,
							`expires` DATETIME NOT NULL,
							UNIQUE KEY id (id)
					);
SQL command (CREATE TABLE $wpdb_deals ( `id` mediumint(9) NOT NULL AUTO_INCREMENT, `product_name` varchar(256) NOT NULL, `sale_price` float NOT NULL, `enabled` tinyint(1) NOT NULL, `expires` DATETIME NOT NULL, UNIQUE KEY id (id) );) cannot be parsed correct.
ALTER TABLE $wpdb_deals ADD `expires` DATETIME NOT NULL AFTER `enabled`;
SQL command (ALTER TABLE $wpdb_deals ADD `expires` DATETIME NOT NULL AFTER `enabled`;) cannot be parsed correct.
ALTER TABLE $wpdb_deals MODIFY `sale_price` float NOT NULL;
SQL command (ALTER TABLE $wpdb_deals MODIFY `sale_price` float NOT NULL;) cannot be parsed correct.
ALTER TABLE $wpdb_deals MODIFY `enabled` tinyint(1) NOT NULL;
SQL command (ALTER TABLE $wpdb_deals MODIFY `enabled` tinyint(1) NOT NULL;) cannot be parsed correct.
CREATE TABLE $wpdb_deals (
							`id` mediumint(9) NOT NULL AUTO_INCREMENT,
							`product_name` varchar(256) NOT NULL,
							`sale_price` float NOT NULL,
							`enabled` tinyint(1) NOT NULL,
							`expires` DATETIME NOT NULL,
							UNIQUE KEY id (id)
					);
SQL command (CREATE TABLE $wpdb_deals ( `id` mediumint(9) NOT NULL AUTO_INCREMENT, `product_name` varchar(256) NOT NULL, `sale_price` float NOT NULL, `enabled` tinyint(1) NOT NULL, `expires` DATETIME NOT NULL, UNIQUE KEY id (id) );) cannot be parsed correct.
SELECT * FROM $wpdb_deals
SQL command (SELECT * FROM $wpdb_deals) cannot be parsed correct.
INSERT INTO $wpdb_deals(`product_name`, `sale_price`, `enabled`, `expires`) VALUES($product_name, %f, %d, %s);
INSERT INTO $wpdb_deals(`product_name`, `sale_price`, `enabled`, `expires`) VALUES($product_name, $sale_price, %d, %s);
INSERT INTO $wpdb_de$enableds(`product_name`, `sale_price`, `enabled`, `expires`) VALUES($product_name, $sale_price, %d, %s);
INSERT INTO $wpdb_de$enableds(`product_name`, `sale_price`, `enabled`, `expires`) VALUES($product_nam$expires_Year-$expires_Month-$expires_Day $sale_price, %d, %s);
INSERT INTO $wpdb_de$enableds(`product_name`, `sale_price`, `enabled`, `expires`) VALUES($product_nam$expires_Year-$expires_Month-$expires_Day $sale_price, %d, %s);
SQL command (INSERT INTO $wpdb_de$enableds(`product_name`, `sale_price`, `enabled`, `expires`) VALUES($product_nam$expires_Year-$expires_Month-$expires_Day $sale_price, %d, %s);) cannot be parsed correct.
UPDATE $wpdb_deals SET `enabled` = $enabled WHERE `id` = %d;
UPDATE $wpdb_deals SET `enabled` = $enabled WHERE `id` = $id;
UPDATE $wpdb_deals SET `enabled` = $enabled WHERE `id` = $id;
SQL command (UPDATE $wpdb_deals SET `enabled` = $enabled WHERE `id` = $id;) cannot be parsed correct.
DELETE FROM $wpdb_deals WHERE `id` = $id;
DELETE FROM $wpdb_deals WHERE `id` = $id;
SQL command (DELETE FROM $wpdb_deals WHERE `id` = $id;) cannot be parsed correct.
ALTER TABLE $wpdb_deals ADD `expires` DATETIME NOT NULL AFTER `enabled`;
SQL command (ALTER TABLE $wpdb_deals ADD `expires` DATETIME NOT NULL AFTER `enabled`;) cannot be parsed correct.
ALTER TABLE $wpdb_deals MODIFY `sale_price` float NOT NULL;
SQL command (ALTER TABLE $wpdb_deals MODIFY `sale_price` float NOT NULL;) cannot be parsed correct.
ALTER TABLE $wpdb_deals MODIFY `enabled` tinyint(1) NOT NULL;
SQL command (ALTER TABLE $wpdb_deals MODIFY `enabled` tinyint(1) NOT NULL;) cannot be parsed correct.
CREATE TABLE $wpdb_deals (
							`id` mediumint(9) NOT NULL AUTO_INCREMENT,
							`product_name` varchar(256) NOT NULL,
							`sale_price` float NOT NULL,
							`enabled` tinyint(1) NOT NULL,
							`expires` DATETIME NOT NULL,
							UNIQUE KEY id (id)
					);
SQL command (CREATE TABLE $wpdb_deals ( `id` mediumint(9) NOT NULL AUTO_INCREMENT, `product_name` varchar(256) NOT NULL, `sale_price` float NOT NULL, `enabled` tinyint(1) NOT NULL, `expires` DATETIME NOT NULL, UNIQUE KEY id (id) );) cannot be parsed correct.
SELECT * FROM $wpdb_deals
SQL command (SELECT * FROM $wpdb_deals) cannot be parsed correct.
INSERT INTO $wpdb_deals(`product_name`, `sale_price`, `enabled`, `expires`) VALUES($product_name, %f, %d, %s);
INSERT INTO $wpdb_deals(`product_name`, `sale_price`, `enabled`, `expires`) VALUES($product_name, $sale_price, %d, %s);
INSERT INTO $wpdb_de$enableds(`product_name`, `sale_price`, `enabled`, `expires`) VALUES($product_name, $sale_price, %d, %s);
INSERT INTO $wpdb_de$enableds(`product_name`, `sale_price`, `enabled`, `expires`) VALUES($product_nam$expires_Year-$expires_Month-$expires_Day $sale_price, %d, %s);
INSERT INTO $wpdb_de$enableds(`product_name`, `sale_price`, `enabled`, `expires`) VALUES($product_nam$expires_Year-$expires_Month-$expires_Day $sale_price, %d, %s);
SQL command (INSERT INTO $wpdb_de$enableds(`product_name`, `sale_price`, `enabled`, `expires`) VALUES($product_nam$expires_Year-$expires_Month-$expires_Day $sale_price, %d, %s);) cannot be parsed correct.
UPDATE $wpdb_deals SET `enabled` = $enabled WHERE `id` = %d;
UPDATE $wpdb_deals SET `enabled` = $enabled WHERE `id` = $id;
UPDATE $wpdb_deals SET `enabled` = $enabled WHERE `id` = $id;
SQL command (UPDATE $wpdb_deals SET `enabled` = $enabled WHERE `id` = $id;) cannot be parsed correct.
DELETE FROM $wpdb_deals WHERE `id` = $id;
DELETE FROM $wpdb_deals WHERE `id` = $id;
SQL command (DELETE FROM $wpdb_deals WHERE `id` = $id;) cannot be parsed correct.
ALTER TABLE $wpdb_deals ADD `expires` DATETIME NOT NULL AFTER `enabled`;
SQL command (ALTER TABLE $wpdb_deals ADD `expires` DATETIME NOT NULL AFTER `enabled`;) cannot be parsed correct.
ALTER TABLE $wpdb_deals MODIFY `sale_price` float NOT NULL;
SQL command (ALTER TABLE $wpdb_deals MODIFY `sale_price` float NOT NULL;) cannot be parsed correct.
ALTER TABLE $wpdb_deals MODIFY `enabled` tinyint(1) NOT NULL;
SQL command (ALTER TABLE $wpdb_deals MODIFY `enabled` tinyint(1) NOT NULL;) cannot be parsed correct.
CREATE TABLE $wpdb_deals (
							`id` mediumint(9) NOT NULL AUTO_INCREMENT,
							`product_name` varchar(256) NOT NULL,
							`sale_price` float NOT NULL,
							`enabled` tinyint(1) NOT NULL,
							`expires` DATETIME NOT NULL,
							UNIQUE KEY id (id)
					);
SQL command (CREATE TABLE $wpdb_deals ( `id` mediumint(9) NOT NULL AUTO_INCREMENT, `product_name` varchar(256) NOT NULL, `sale_price` float NOT NULL, `enabled` tinyint(1) NOT NULL, `expires` DATETIME NOT NULL, UNIQUE KEY id (id) );) cannot be parsed correct.
DROP TABLE IF EXISTS $wpdb_deals;
SQL command (DROP TABLE IF EXISTS $wpdb_deals;) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [4282, 4321, 4560, 4689, 4814, 4952, 4975, 4991, 5062, 6417, 6456, 6695, 6824, 6949, 7087, 7110, 7126, 7197, 9394, 9417, 9433, 9504, 10450, 10473, 10489, 10560, 11682, 11891, 12020, 12145, 12283, 12306, 12322, 12393, 13710, 13919, 14048, 14173, 14311, 14334, 14350, 14421, 14493]
Added 0 SQL nodes. 0 out of 43 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:12.538652.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'<option value=$day">$day</option>'' cannot be parsed correct.
HTML code '$'<option value=$month_num">$month_name</option>'' cannot be parsed correct.
HTML code '$'<option value=$year"selected="selected">$year</option>'' cannot be parsed correct.
HTML code '$'Action'' cannot be parsed correct.
HTML code '$'wp_create_nonce("AddDeal")'' cannot be parsed correct.
HTML code '$'$deal'' cannot be parsed correct.
HTML code '$'$deal'' cannot be parsed correct.
HTML code '$'money_format("%i", $deal->sale_price)'' cannot be parsed correct.
HTML code '$'$deal'' cannot be parsed correct.
HTML code '$'<div class="error"><p>$this_error</p></div>'' cannot be parsed correct.
HTML code '$'<div class="updated"><p>$this_success</p></div>'' cannot be parsed correct.
HTML code '$'$product_name'' cannot be parsed correct.
HTML code '$'$sale_price'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'<option value=$day"selected="selected">$day</option>'' cannot be parsed correct.
HTML code '$'<option value=$month_num"selected="selected">$month_name</option>'' cannot be parsed correct.
HTML code '$'<option value=$year"selected="selected">$year</option>'' cannot be parsed correct.
HTML code '$'Action'' cannot be parsed correct.
HTML code '$'wp_create_nonce("AddDeal")'' cannot be parsed correct.
HTML code '$'<div class="error"><p>$this_error</p></div>'' cannot be parsed correct.
HTML code '$'<div class="updated"><p>$this_success</p></div>'' cannot be parsed correct.
HTML code '$'$product_name'' cannot be parsed correct.
HTML code '$'$sale_price'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'date("l F jS Y", strtotime($deal->expires))'' cannot be parsed correct.
HTML code '$'$deal'' cannot be parsed correct.
HTML code '$'Action'' cannot be parsed correct.
HTML code '$'wp_create_nonce("SetEnabledStatus")'' cannot be parsed correct.
HTML code '$'Disable'' cannot be parsed correct.
HTML code '$'$deal'' cannot be parsed correct.
HTML code '$'Action'' cannot be parsed correct.
HTML code '$'wp_create_nonce("DeleteDeal")'' cannot be parsed correct.
HTML code '$'get_option(self::"PREFIX" . "_cheesy_slogan_text")'' cannot be parsed correct.
HTML code '$'$val'' cannot be parsed correct.
HTML code '$'$name'' cannot be parsed correct.
HTML code '$'get_option(self::"PREFIX" . "_cheesy_slogan_text")'' cannot be parsed correct.
HTML code '$'$val'' cannot be parsed correct.
HTML code '$'$name'' cannot be parsed correct.
HTML code '$'	
	</h3>
	
	<!-- this is the deal list area -->
	<div id="deal-list-container">
	
	</div>

</div>'' cannot be parsed correct.
HTML code '$'		
	</h2>
	
	<!-- This is the feedback div -->
	<div id="feedback">
	
		'' cannot be parsed correct.
HTML code '$'	
	</h3>
	
	<!-- This is the add a deal form -->
	<form id="add-deal" class="ajax-form" method="post" action="options-general.php?page=deal-configuration-page">
	
		'' cannot be parsed correct.
HTML code '$'		
	</h3>
	
	<!-- this is the deal list area -->
	<div id="deal-list-container">
	
		'' cannot be parsed correct.
HTML code '$'		
	</h2>
	
	<!-- This is the feedback div -->
	<div id="feedback">
	
		'' cannot be parsed correct.
HTML code '$'		
	</h3>
	
	<!-- This is the add a deal form -->
	<form id="add-deal" class="ajax-form" method="post" action="options-general.php?page=deal-configuration-page">
	
		'' cannot be parsed correct.
HTML code '$'<input type="hidden" name="enabled" value="0" />'' cannot be parsed correct.
HTML code '$'<input type="hidden" name="enabled" value="1" />'' cannot be parsed correct.
HTML code '$'" />
			 				
			 				<input type="hidden" name="'' cannot be parsed correct.
HTML code '$'" class="button-secondary" />
			 				
			 			</form>
			 			
			 		</td>
			 		
			 		<td>
			 		
			 			<!-- This is the form that will let us delete the deal -->
			 			<form  class="ajax-form" method="post" action="options-general.php?page=deal-configuration-page">
			 			
			 				<input type="hidden" name="id" value="'' cannot be parsed correct.
HTML code '$'" />
			 				
			 				<input type="hidden" name="'' cannot be parsed correct.
HTML code '$'		
	</h2>
	
		'' cannot be parsed correct.
HTML code '$'</label>
			
			<input id="cheesy_slogan_text" name="'' cannot be parsed correct.
HTML code '$'" />
			
		</p>
		
		<p>
			
			<label for="horrible_banner_image">'' cannot be parsed correct.
HTML code '$'</label>
			
			<select id="horrible_banner_image" name="'' cannot be parsed correct.
HTML code '$'selected="selected"'' cannot be parsed correct.
HTML code '$'</label>
			
			<input type="checkbox" id="disgusting_background_enabled" name="'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'</label>
			
			<input type="checkbox" id="annoying_popup_enabled" name="'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'" />

		</p>
		
	</form>

</div'' cannot be parsed correct.
HTML code '$'" />
			
		</p>
		
		<p>
			
			<label for="horrible_banner_image">Select a horrible banner</label>
			
			<select id="horrible_banner_image" name="'' cannot be parsed correct.
HTML code '$'selected="selected"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
HTML code '$'checked="checked"'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:06.222960.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.042030.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 0 do_action/apply_filters calls and 107 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:02.784397.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FileProDetector
### Start running FrontBaseDetector
### Finish running FirebirdInterBaseDetector
### Start running HashDetector
### Finish running DbplusDetector
### Start running IBMDb2Detector
### Finish running DbaseDetector
### Start running InformixDetector
### Finish running CubridDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running MongoDbDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running MsqlDetector
### Start running OpenSSLDetector
### Finish running Oci8Detector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running ArrayElementDetector
### Start running PhpCurlDetector
### Finish running PasswordHashingDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running HashDetector
### Start running PHPRetrievalDetector
### Finish running PhpCurlDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPIncludedDetector
### Start running PhpVarDetector
### Finish running OpenSSLDetector
### Start running PostgreSQLDetector
### Finish running PhpVarDetector
### Start running PropertyDetector
### Finish running PHPStorageDetector
### Start running Sqlite3Detector
### Finish running PHPRetrievalDetector
### Start running SqliteDetector
### Finish running PostgreSQLDetector
### Start running SqlServerDetector
### Finish running SqliteDetector
### Start running SybaseDetector
### Finish running SybaseDetector
### Start running TokyoTyrantDetector
### Finish running Sqlite3Detector
### Start running UserInputDetector
### Finish running PropertyDetector
### Start running VariableDetector
### Finish running TokyoTyrantDetector
### Start running WordpressHashingFnDetector
### Finish running SqlServerDetector
### Start running WordPressRemoteDetector
### Finish running maxdbDetector
### Start running WordPressRetrievalDetector
### Finish running MySQLiDetector
### Start running WordPressStorageDetector
### Finish running WordpressHashingFnDetector
### Start running WP_UserDetector
### Finish running WordPressRemoteDetector
### Start running GenericDatabaseUsageDetector
### Finish running WP_UserDetector
### Start running GenericEncryptionDetector
### Finish running VariableDetector
### Start running DeletionDetector
### Finish running GenericEncryptionDetector
### Start running UninstallDetector
### Finish running UserInputDetector
### Finish running GenericDatabaseUsageDetector
### Finish running DeletionDetector
### Finish running UninstallDetector
### Finish running WordPressRetrievalDetector
### Finish running WordPressStorageDetector
### Finished running detectors
html/honesty-settings-page-step5.php:19
  - RETRIEVAL call to get_option(self::"PREFIX" . "_cheesy_slogan_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
html/honesty-settings-page-step5.php:21
  - RETRIEVAL call to get_option(self::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
html/honesty-settings-page-step5.php:23
  - RETRIEVAL call to get_option(self::"PREFIX" . "_disgusting_background_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
html/honesty-settings-page-step5.php:25
  - RETRIEVAL call to get_option(self::"PREFIX" . "_annoying_popup_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
html/honesty-settings-page.php:8
  - RETRIEVAL call to get_option(self::"PREFIX" . "_cheesy_slogan_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
html/honesty-settings-page.php:10
  - RETRIEVAL call to get_option(self::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
html/honesty-settings-page.php:12
  - RETRIEVAL call to get_option(self::"PREFIX" . "_disgusting_background_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
html/honesty-settings-page.php:14
  - RETRIEVAL call to get_option(self::"PREFIX" . "_annoying_popup_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
index.php:122
  - RETRIEVAL call to get_option(self::"PREFIX" . "_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
index.php:139
  - RETRIEVAL call to get_option(self::"PREFIX" . "_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step10.php:73
  - RETRIEVAL call to get_option(self::"PREFIX" . "_cheesy_slogan_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step10.php:80
  - RETRIEVAL call to get_option(self::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step10.php:84
  - RETRIEVAL call to get_option(self::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step10.php:120
  - RETRIEVAL call to get_option(self::"PREFIX" . "_annoying_popup_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step10.php:143
  - RETRIEVAL call to get_option(self::"PREFIX" . "_disgusting_background_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step10.php:608
  - RETRIEVAL call to get_option(self::"PREFIX" . "_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step11.php:77
  - RETRIEVAL call to get_option(self::"PREFIX" . "_cheesy_slogan_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step11.php:84
  - RETRIEVAL call to get_option(self::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step11.php:88
  - RETRIEVAL call to get_option(self::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step11.php:115
  - RETRIEVAL call to get_option(self::"PREFIX" . "_annoying_popup_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step11.php:138
  - RETRIEVAL call to get_option(self::"PREFIX" . "_disgusting_background_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step11.php:592
  - RETRIEVAL call to get_option(self::"PREFIX" . "_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step4.php:67
  - RETRIEVAL call to get_option(self::"PREFIX" . "_cheesy_slogan_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step4.php:74
  - RETRIEVAL call to get_option(self::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step4.php:78
  - RETRIEVAL call to get_option(self::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step4.php:96
  - RETRIEVAL call to get_option(self::"PREFIX" . "_annoying_popup_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step4.php:119
  - RETRIEVAL call to get_option(self::"PREFIX" . "_disgusting_background_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step5.php:75
  - RETRIEVAL call to get_option(self::"PREFIX" . "_cheesy_slogan_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step5.php:80
  - RETRIEVAL call to get_option(self::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step5.php:83
  - RETRIEVAL call to get_option(self::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step5.php:101
  - RETRIEVAL call to get_option(self::"PREFIX" . "_annoying_popup_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step5.php:116
  - RETRIEVAL call to get_option(self::"PREFIX" . "_disgusting_background_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step6.php:81
  - RETRIEVAL call to get_option(self::"PREFIX" . "_cheesy_slogan_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step6.php:88
  - RETRIEVAL call to get_option(self::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step6.php:92
  - RETRIEVAL call to get_option(self::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step6.php:120
  - RETRIEVAL call to get_option(self::"PREFIX" . "_annoying_popup_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step6.php:143
  - RETRIEVAL call to get_option(self::"PREFIX" . "_disgusting_background_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step6.php:209
  - RETRIEVAL call to get_option(self::"PREFIX" . "_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step7.php:83
  - RETRIEVAL call to get_option(self::"PREFIX" . "_cheesy_slogan_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step7.php:90
  - RETRIEVAL call to get_option(self::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step7.php:94
  - RETRIEVAL call to get_option(self::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step7.php:122
  - RETRIEVAL call to get_option(self::"PREFIX" . "_annoying_popup_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step7.php:145
  - RETRIEVAL call to get_option(self::"PREFIX" . "_disgusting_background_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step7.php:296
  - RETRIEVAL call to get_option(self::"PREFIX" . "_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step8.php:73
  - RETRIEVAL call to get_option(self::"PREFIX" . "_cheesy_slogan_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step8.php:80
  - RETRIEVAL call to get_option(self::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step8.php:84
  - RETRIEVAL call to get_option(self::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step8.php:112
  - RETRIEVAL call to get_option(self::"PREFIX" . "_annoying_popup_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step8.php:135
  - RETRIEVAL call to get_option(self::"PREFIX" . "_disgusting_background_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step8.php:514
  - RETRIEVAL call to get_option(self::"PREFIX" . "_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step9.php:73
  - RETRIEVAL call to get_option(self::"PREFIX" . "_cheesy_slogan_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step9.php:80
  - RETRIEVAL call to get_option(self::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step9.php:84
  - RETRIEVAL call to get_option(self::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step9.php:112
  - RETRIEVAL call to get_option(self::"PREFIX" . "_annoying_popup_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step9.php:135
  - RETRIEVAL call to get_option(self::"PREFIX" . "_disgusting_background_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
step9.php:595
  - RETRIEVAL call to get_option(self::"PREFIX" . "_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option 

index.php:73
  - STORAGE call to add_option(self::"PREFIX" . "_step", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
index.php:136
  - STORAGE call to update_option(self::"PREFIX" . "_step", $_POST["mmbhg_step"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step10.php:58
  - STORAGE call to add_option(self::"PREFIX" . "_cheesy_slogan_text", __("you can\'t beat his prices!", self::"PREFIX")) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step10.php:61
  - STORAGE call to add_option(self::"PREFIX" . "_horrible_banner_image", "1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step10.php:63
  - STORAGE call to add_option(self::"PREFIX" . "_disgusting_background_enabled", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step10.php:65
  - STORAGE call to add_option(self::"PREFIX" . "_annoying_popup_enabled", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step10.php:647
  - STORAGE call to update_option(self::"PREFIX" . "_db_version", self::"DB_VERSION") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step10.php:673
  - STORAGE call to add_option(self::"PREFIX" . "_db_version", self::"DB_VERSION") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step11.php:62
  - STORAGE call to add_option(self::"PREFIX" . "_cheesy_slogan_text", __("you can\'t beat his prices!", self::"PREFIX")) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step11.php:65
  - STORAGE call to add_option(self::"PREFIX" . "_horrible_banner_image", "1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step11.php:67
  - STORAGE call to add_option(self::"PREFIX" . "_disgusting_background_enabled", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step11.php:69
  - STORAGE call to add_option(self::"PREFIX" . "_annoying_popup_enabled", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step11.php:631
  - STORAGE call to update_option(self::"PREFIX" . "_db_version", self::"DB_VERSION") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step11.php:657
  - STORAGE call to add_option(self::"PREFIX" . "_db_version", self::"DB_VERSION") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step4.php:49
  - STORAGE call to add_option(self::"PREFIX" . "_cheesy_slogan_text", "you can\'t beat his prices!") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step4.php:51
  - STORAGE call to add_option(self::"PREFIX" . "_horrible_banner_image", "1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step4.php:53
  - STORAGE call to add_option(self::"PREFIX" . "_disgusting_background_enabled", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step4.php:55
  - STORAGE call to add_option(self::"PREFIX" . "_annoying_popup_enabled", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step5.php:60
  - STORAGE call to add_option(self::"PREFIX" . "_cheesy_slogan_text", __("you can\'t beat his prices!", self::"PREFIX")) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step5.php:64
  - STORAGE call to add_option(self::"PREFIX" . "_horrible_banner_image", "1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step5.php:66
  - STORAGE call to add_option(self::"PREFIX" . "_disgusting_background_enabled", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step5.php:68
  - STORAGE call to add_option(self::"PREFIX" . "_annoying_popup_enabled", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step6.php:66
  - STORAGE call to add_option(self::"PREFIX" . "_cheesy_slogan_text", __("you can\'t beat his prices!", self::"PREFIX")) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step6.php:69
  - STORAGE call to add_option(self::"PREFIX" . "_horrible_banner_image", "1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step6.php:71
  - STORAGE call to add_option(self::"PREFIX" . "_disgusting_background_enabled", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step6.php:73
  - STORAGE call to add_option(self::"PREFIX" . "_annoying_popup_enabled", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step6.php:256
  - STORAGE call to update_option(self::"PREFIX" . "_db_version", self::"DB_VERSION") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step6.php:286
  - STORAGE call to add_option(self::"PREFIX" . "_db_version", self::"DB_VERSION") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step7.php:68
  - STORAGE call to add_option(self::"PREFIX" . "_cheesy_slogan_text", __("you can\'t beat his prices!", self::"PREFIX")) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step7.php:71
  - STORAGE call to add_option(self::"PREFIX" . "_horrible_banner_image", "1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step7.php:73
  - STORAGE call to add_option(self::"PREFIX" . "_disgusting_background_enabled", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step7.php:75
  - STORAGE call to add_option(self::"PREFIX" . "_annoying_popup_enabled", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step7.php:335
  - STORAGE call to update_option(self::"PREFIX" . "_db_version", self::"DB_VERSION") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step7.php:361
  - STORAGE call to add_option(self::"PREFIX" . "_db_version", self::"DB_VERSION") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step8.php:58
  - STORAGE call to add_option(self::"PREFIX" . "_cheesy_slogan_text", __("you can\'t beat his prices!", self::"PREFIX")) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step8.php:61
  - STORAGE call to add_option(self::"PREFIX" . "_horrible_banner_image", "1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step8.php:63
  - STORAGE call to add_option(self::"PREFIX" . "_disgusting_background_enabled", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step8.php:65
  - STORAGE call to add_option(self::"PREFIX" . "_annoying_popup_enabled", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step8.php:553
  - STORAGE call to update_option(self::"PREFIX" . "_db_version", self::"DB_VERSION") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step8.php:579
  - STORAGE call to add_option(self::"PREFIX" . "_db_version", self::"DB_VERSION") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step9.php:58
  - STORAGE call to add_option(self::"PREFIX" . "_cheesy_slogan_text", __("you can\'t beat his prices!", self::"PREFIX")) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step9.php:61
  - STORAGE call to add_option(self::"PREFIX" . "_horrible_banner_image", "1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step9.php:63
  - STORAGE call to add_option(self::"PREFIX" . "_disgusting_background_enabled", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step9.php:65
  - STORAGE call to add_option(self::"PREFIX" . "_annoying_popup_enabled", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step9.php:634
  - STORAGE call to update_option(self::"PREFIX" . "_db_version", self::"DB_VERSION") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
step9.php:660
  - STORAGE call to add_option(self::"PREFIX" . "_db_version", self::"DB_VERSION") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
uninstall.php:26
  - STORAGE call to delete_option(MakeMyBlogHonest::"PREFIX" . "_cheesy_slogan_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:28
  - STORAGE call to delete_option(MakeMyBlogHonest::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:30
  - STORAGE call to delete_option(MakeMyBlogHonest::"PREFIX" . "_disgusting_background_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:32
  - STORAGE call to delete_option(MakeMyBlogHonest::"PREFIX" . "_annoying_popup_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:34
  - STORAGE call to delete_option(MakeMyBlogHonest::"PREFIX" . "_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

uninstall.php:26
  - DELETION call to delete_option(MakeMyBlogHonest::"PREFIX" . "_cheesy_slogan_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:28
  - DELETION call to delete_option(MakeMyBlogHonest::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:30
  - DELETION call to delete_option(MakeMyBlogHonest::"PREFIX" . "_disgusting_background_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:32
  - DELETION call to delete_option(MakeMyBlogHonest::"PREFIX" . "_annoying_popup_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:34
  - DELETION call to delete_option(MakeMyBlogHonest::"PREFIX" . "_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

uninstall.php:26
  - Uninstall deletion call: DELETION call to delete_option(MakeMyBlogHonest::"PREFIX" . "_cheesy_slogan_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:26
  - Uninstall deletion call: DELETION call to delete_option(MakeMyBlogHonest::"PREFIX" . "_cheesy_slogan_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:28
  - Uninstall deletion call: DELETION call to delete_option(MakeMyBlogHonest::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:28
  - Uninstall deletion call: DELETION call to delete_option(MakeMyBlogHonest::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:30
  - Uninstall deletion call: DELETION call to delete_option(MakeMyBlogHonest::"PREFIX" . "_disgusting_background_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:30
  - Uninstall deletion call: DELETION call to delete_option(MakeMyBlogHonest::"PREFIX" . "_disgusting_background_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:32
  - Uninstall deletion call: DELETION call to delete_option(MakeMyBlogHonest::"PREFIX" . "_annoying_popup_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:32
  - Uninstall deletion call: DELETION call to delete_option(MakeMyBlogHonest::"PREFIX" . "_annoying_popup_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:34
  - Uninstall deletion call: DELETION call to delete_option(MakeMyBlogHonest::"PREFIX" . "_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
uninstall.php:34
  - Uninstall deletion call: DELETION call to delete_option(MakeMyBlogHonest::"PREFIX" . "_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

By data type:
option
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_horrible_banner_image") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_annoying_popup_enabled") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_horrible_banner_image") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_annoying_popup_enabled") - {'option'}
	WordPressStorageDetector.add_option(self::"PREFIX" . "_db_version", self::"DB_VERSION") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_horrible_banner_image") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_disgusting_background_enabled") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_cheesy_slogan_text") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_annoying_popup_enabled") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_horrible_banner_image") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_step") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_annoying_popup_enabled") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_disgusting_background_enabled") - {'option'}
	WordPressStorageDetector.add_option(self::"PREFIX" . "_annoying_popup_enabled", true) - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_disgusting_background_enabled") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_horrible_banner_image") - {'option'}
	WordPressStorageDetector.add_option(self::"PREFIX" . "_db_version", self::"DB_VERSION") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_annoying_popup_enabled") - {'option'}
	WordPressStorageDetector.delete_option(MakeMyBlogHonest::"PREFIX" . "_db_version") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_cheesy_slogan_text") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_cheesy_slogan_text") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_db_version") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_db_version") - {'option'}
	UninstallDetector.delete_option(MakeMyBlogHonest::"PREFIX" . "_annoying_popup_enabled") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_disgusting_background_enabled") - {'option'}
	WordPressStorageDetector.add_option(self::"PREFIX" . "_disgusting_background_enabled", true) - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_db_version") - {'option'}
	WordPressStorageDetector.add_option(self::"PREFIX" . "_annoying_popup_enabled", true) - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_disgusting_background_enabled") - {'option'}
	WordPressStorageDetector.delete_option(MakeMyBlogHonest::"PREFIX" . "_annoying_popup_enabled") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_annoying_popup_enabled") - {'option'}
	WordPressStorageDetector.add_option(self::"PREFIX" . "_cheesy_slogan_text", "you can\'t beat his prices!") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_cheesy_slogan_text") - {'option'}
	WordPressStorageDetector.add_option(self::"PREFIX" . "_disgusting_background_enabled", true) - {'option'}
	UninstallDetector.delete_option(MakeMyBlogHonest::"PREFIX" . "_disgusting_background_enabled") - {'option'}
	WordPressStorageDetector.add_option(self::"PREFIX" . "_db_version", self::"DB_VERSION") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_step") - {'option'}
	WordPressStorageDetector.add_option(self::"PREFIX" . "_annoying_popup_enabled", true) - {'option'}
	UninstallDetector.delete_option(MakeMyBlogHonest::"PREFIX" . "_annoying_popup_enabled") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_annoying_popup_enabled") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_horrible_banner_image") - {'option'}
	UninstallDetector.delete_option(MakeMyBlogHonest::"PREFIX" . "_disgusting_background_enabled") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_db_version") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_horrible_banner_image") - {'option'}
	WordPressStorageDetector.add_option(self::"PREFIX" . "_disgusting_background_enabled", true) - {'option'}
	UninstallDetector.delete_option(MakeMyBlogHonest::"PREFIX" . "_cheesy_slogan_text") - {'option'}
	WordPressStorageDetector.update_option(self::"PREFIX" . "_db_version", self::"DB_VERSION") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_horrible_banner_image") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_db_version") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_disgusting_background_enabled") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_disgusting_background_enabled") - {'option'}
	WordPressStorageDetector.add_option(self::"PREFIX" . "_cheesy_slogan_text", __("you can\'t beat his prices!", self::"PREFIX")) - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_horrible_banner_image") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_cheesy_slogan_text") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_cheesy_slogan_text") - {'option'}
	WordPressStorageDetector.delete_option(MakeMyBlogHonest::"PREFIX" . "_disgusting_background_enabled") - {'option'}
	WordPressStorageDetector.add_option(self::"PREFIX" . "_cheesy_slogan_text", __("you can\'t beat his prices!", self::"PREFIX")) - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_annoying_popup_enabled") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_horrible_banner_image") - {'option'}
	WordPressStorageDetector.add_option(self::"PREFIX" . "_cheesy_slogan_text", __("you can\'t beat his prices!", self::"PREFIX")) - {'option'}
	WordPressStorageDetector.add_option(self::"PREFIX" . "_disgusting_background_enabled", true) - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_horrible_banner_image") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_cheesy_slogan_text") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_disgusting_background_enabled") - {'option'}
	UninstallDetector.delete_option(MakeMyBlogHonest::"PREFIX" . "_db_version") - {'option'}
	WordPressStorageDetector.update_option(self::"PREFIX" . "_db_version", self::"DB_VERSION") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_annoying_popup_enabled") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_cheesy_slogan_text") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_horrible_banner_image") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_horrible_banner_image") - {'option'}
	WordPressStorageDetector.update_option(self::"PREFIX" . "_db_version", self::"DB_VERSION") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_annoying_popup_enabled") - {'option'}
	WordPressStorageDetector.add_option(self::"PREFIX" . "_horrible_banner_image", "1") - {'option'}
	WordPressStorageDetector.add_option(self::"PREFIX" . "_annoying_popup_enabled", true) - {'option'}
	WordPressStorageDetector.add_option(self::"PREFIX" . "_horrible_banner_image", "1") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_cheesy_slogan_text") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_db_version") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_horrible_banner_image") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_disgusting_background_enabled") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_horrible_banner_image") - {'option'}
	DeletionDetector.delete_option(MakeMyBlogHonest::"PREFIX" . "_cheesy_slogan_text") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_horrible_banner_image") - {'option'}
	WordPressStorageDetector.add_option(self::"PREFIX" . "_horrible_banner_image", "1") - {'option'}
	DeletionDetector.delete_option(MakeMyBlogHonest::"PREFIX" . "_annoying_popup_enabled") - {'option'}
	DeletionDetector.delete_option(MakeMyBlogHonest::"PREFIX" . "_db_version") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_disgusting_background_enabled") - {'option'}
	WordPressStorageDetector.add_option(self::"PREFIX" . "_disgusting_background_enabled", true) - {'option'}
	UninstallDetector.delete_option(MakeMyBlogHonest::"PREFIX" . "_cheesy_slogan_text") - {'option'}
	WordPressStorageDetector.add_option(self::"PREFIX" . "_horrible_banner_image", "1") - {'option'}
	WordPressStorageDetector.add_option(self::"PREFIX" . "_disgusting_background_enabled", true) - {'option'}
	WordPressStorageDetector.add_option(self::"PREFIX" . "_annoying_popup_enabled", true) - {'option'}
	WordPressStorageDetector.add_option(self::"PREFIX" . "_annoying_popup_enabled", true) - {'option'}
	WordPressStorageDetector.add_option(self::"PREFIX" . "_cheesy_slogan_text", __("you can\'t beat his prices!", self::"PREFIX")) - {'option'}
	WordPressStorageDetector.add_option(self::"PREFIX" . "_cheesy_slogan_text", __("you can\'t beat his prices!", self::"PREFIX")) - {'option'}
	UninstallDetector.delete_option(MakeMyBlogHonest::"PREFIX" . "_db_version") - {'option'}
	WordPressStorageDetector.add_option(self::"PREFIX" . "_annoying_popup_enabled", true) - {'option'}
	DeletionDetector.delete_option(MakeMyBlogHonest::"PREFIX" . "_horrible_banner_image") - {'option'}
	WordPressStorageDetector.update_option(self::"PREFIX" . "_step", $_POST["mmbhg_step"]) - {'option'}
	WordPressStorageDetector.add_option(self::"PREFIX" . "_db_version", self::"DB_VERSION") - {'option'}
	WordPressStorageDetector.add_option(self::"PREFIX" . "_horrible_banner_image", "1") - {'option'}
	WordPressStorageDetector.update_option(self::"PREFIX" . "_db_version", self::"DB_VERSION") - {'option'}
	WordPressStorageDetector.add_option(self::"PREFIX" . "_disgusting_background_enabled", true) - {'option'}
	WordPressStorageDetector.add_option(self::"PREFIX" . "_annoying_popup_enabled", true) - {'option'}
	WordPressStorageDetector.add_option(self::"PREFIX" . "_horrible_banner_image", "1") - {'option'}
	WordPressStorageDetector.add_option(self::"PREFIX" . "_cheesy_slogan_text", __("you can\'t beat his prices!", self::"PREFIX")) - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_cheesy_slogan_text") - {'option'}
	WordPressStorageDetector.add_option(self::"PREFIX" . "_horrible_banner_image", "1") - {'option'}
	WordPressStorageDetector.update_option(self::"PREFIX" . "_db_version", self::"DB_VERSION") - {'option'}
	WordPressStorageDetector.update_option(self::"PREFIX" . "_db_version", self::"DB_VERSION") - {'option'}
	UninstallDetector.delete_option(MakeMyBlogHonest::"PREFIX" . "_horrible_banner_image") - {'option'}
	WordPressStorageDetector.add_option(self::"PREFIX" . "_cheesy_slogan_text", __("you can\'t beat his prices!", self::"PREFIX")) - {'option'}
	UninstallDetector.delete_option(MakeMyBlogHonest::"PREFIX" . "_horrible_banner_image") - {'option'}
	WordPressStorageDetector.add_option(self::"PREFIX" . "_horrible_banner_image", "1") - {'option'}
	WordPressStorageDetector.delete_option(MakeMyBlogHonest::"PREFIX" . "_cheesy_slogan_text") - {'option'}
	WordPressStorageDetector.add_option(self::"PREFIX" . "_disgusting_background_enabled", true) - {'option'}
	WordPressStorageDetector.add_option(self::"PREFIX" . "_db_version", self::"DB_VERSION") - {'option'}
	DeletionDetector.delete_option(MakeMyBlogHonest::"PREFIX" . "_disgusting_background_enabled") - {'option'}
	WordPressStorageDetector.add_option(self::"PREFIX" . "_step", 1) - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_horrible_banner_image") - {'option'}
	WordPressRetrievalDetector.get_option(self::"PREFIX" . "_horrible_banner_image") - {'option'}
	WordPressStorageDetector.add_option(self::"PREFIX" . "_db_version", self::"DB_VERSION") - {'option'}
	WordPressStorageDetector.delete_option(MakeMyBlogHonest::"PREFIX" . "_horrible_banner_image") - {'option'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:15.032708.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 2856 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.708820.

1000 STORE_REACHES edges created
2000 STORE_REACHES edges created
2856 STORE_REACHES edges created
2856 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
In total, tainted 0 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
In total, tainted 0 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:00.008215.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:01:44.955149!
DELETION call to delete_option(MakeMyBlogHonest::"PREFIX" . "_cheesy_slogan_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option(MakeMyBlogHonest::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option(MakeMyBlogHonest::"PREFIX" . "_disgusting_background_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option(MakeMyBlogHonest::"PREFIX" . "_annoying_popup_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option(MakeMyBlogHonest::"PREFIX" . "_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option(MakeMyBlogHonest::"PREFIX" . "_cheesy_slogan_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option(MakeMyBlogHonest::"PREFIX" . "_cheesy_slogan_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option(MakeMyBlogHonest::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option(MakeMyBlogHonest::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option(MakeMyBlogHonest::"PREFIX" . "_disgusting_background_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option(MakeMyBlogHonest::"PREFIX" . "_disgusting_background_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option(MakeMyBlogHonest::"PREFIX" . "_annoying_popup_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option(MakeMyBlogHonest::"PREFIX" . "_annoying_popup_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option(MakeMyBlogHonest::"PREFIX" . "_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option(MakeMyBlogHonest::"PREFIX" . "_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_cheesy_slogan_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_disgusting_background_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_annoying_popup_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_disgusting_background_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_annoying_popup_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_cheesy_slogan_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_step") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_annoying_popup_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_disgusting_background_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_cheesy_slogan_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_annoying_popup_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_disgusting_background_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_cheesy_slogan_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_disgusting_background_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_cheesy_slogan_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_annoying_popup_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_annoying_popup_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_disgusting_background_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_cheesy_slogan_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_annoying_popup_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_disgusting_background_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_cheesy_slogan_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_annoying_popup_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_disgusting_background_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_cheesy_slogan_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_annoying_popup_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_disgusting_background_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_cheesy_slogan_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_annoying_popup_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_disgusting_background_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_cheesy_slogan_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(self::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
STORAGE call to update_option(self::"PREFIX" . "_step", $_POST["mmbhg_step"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option(self::"PREFIX" . "_step", 1) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option(self::"PREFIX" . "_cheesy_slogan_text", __("you can\'t beat his prices!", self::"PREFIX")) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option(self::"PREFIX" . "_horrible_banner_image", "1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option(self::"PREFIX" . "_disgusting_background_enabled", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(self::"PREFIX" . "_db_version", self::"DB_VERSION") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option(self::"PREFIX" . "_annoying_popup_enabled", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option(self::"PREFIX" . "_db_version", self::"DB_VERSION") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option(self::"PREFIX" . "_cheesy_slogan_text", __("you can\'t beat his prices!", self::"PREFIX")) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(self::"PREFIX" . "_db_version", self::"DB_VERSION") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option(self::"PREFIX" . "_horrible_banner_image", "1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option(self::"PREFIX" . "_db_version", self::"DB_VERSION") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option(self::"PREFIX" . "_disgusting_background_enabled", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option(self::"PREFIX" . "_annoying_popup_enabled", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option(self::"PREFIX" . "_cheesy_slogan_text", "you can\'t beat his prices!") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option(self::"PREFIX" . "_horrible_banner_image", "1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option(self::"PREFIX" . "_disgusting_background_enabled", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option(self::"PREFIX" . "_annoying_popup_enabled", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option(self::"PREFIX" . "_cheesy_slogan_text", __("you can\'t beat his prices!", self::"PREFIX")) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option(self::"PREFIX" . "_horrible_banner_image", "1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option(self::"PREFIX" . "_disgusting_background_enabled", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option(self::"PREFIX" . "_annoying_popup_enabled", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(self::"PREFIX" . "_db_version", self::"DB_VERSION") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option(self::"PREFIX" . "_db_version", self::"DB_VERSION") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option(self::"PREFIX" . "_cheesy_slogan_text", __("you can\'t beat his prices!", self::"PREFIX")) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option(self::"PREFIX" . "_horrible_banner_image", "1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option(self::"PREFIX" . "_disgusting_background_enabled", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option(self::"PREFIX" . "_annoying_popup_enabled", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(self::"PREFIX" . "_db_version", self::"DB_VERSION") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option(self::"PREFIX" . "_db_version", self::"DB_VERSION") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option(self::"PREFIX" . "_cheesy_slogan_text", __("you can\'t beat his prices!", self::"PREFIX")) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option(self::"PREFIX" . "_horrible_banner_image", "1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option(self::"PREFIX" . "_disgusting_background_enabled", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option(self::"PREFIX" . "_annoying_popup_enabled", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(self::"PREFIX" . "_db_version", self::"DB_VERSION") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option(self::"PREFIX" . "_db_version", self::"DB_VERSION") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option(self::"PREFIX" . "_cheesy_slogan_text", __("you can\'t beat his prices!", self::"PREFIX")) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option(self::"PREFIX" . "_horrible_banner_image", "1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option(self::"PREFIX" . "_disgusting_background_enabled", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option(self::"PREFIX" . "_annoying_popup_enabled", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option(self::"PREFIX" . "_cheesy_slogan_text", __("you can\'t beat his prices!", self::"PREFIX")) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option(self::"PREFIX" . "_horrible_banner_image", "1") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option(self::"PREFIX" . "_disgusting_background_enabled", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(self::"PREFIX" . "_db_version", self::"DB_VERSION") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option(self::"PREFIX" . "_annoying_popup_enabled", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option(self::"PREFIX" . "_db_version", self::"DB_VERSION") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option(MakeMyBlogHonest::"PREFIX" . "_cheesy_slogan_text") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option(MakeMyBlogHonest::"PREFIX" . "_horrible_banner_image") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option(MakeMyBlogHonest::"PREFIX" . "_disgusting_background_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option(MakeMyBlogHonest::"PREFIX" . "_annoying_popup_enabled") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option(MakeMyBlogHonest::"PREFIX" . "_db_version") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found no personal data in the plugin. No analysis needed. 

[main] Complaint? True 

No findings
