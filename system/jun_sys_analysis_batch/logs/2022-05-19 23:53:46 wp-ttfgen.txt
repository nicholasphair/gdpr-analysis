Timeout in resolving values
Timeout in running neo4j query
Running Main.py on wp-ttfgen

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:01.421276.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.116496.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 6 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.435168.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 0 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.429594.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 1119 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:01.105949.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 0 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.626501.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.102324.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 391 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:09.546011.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 4918
Added 3402 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 20062
Added 15144 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:02.388438.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-ttfgen/ttfgen.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/wp-ttfgen/scripts/ttfgen.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.277468.

1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
4918 PHP_REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
14000 PHP_REACHES edges created
15000 PHP_REACHES edges created
15144 PHP_REACHES edges created
20062 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 1631 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:00.892124.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:01.232284.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 164 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:04.316252.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 36 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.284058.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.100789.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:01.197593.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.010458.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.034138.

200 PHP_REACHES edges created
200 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 164 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.141665.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
9 SQL operations to process.
CREATE TABLE IF NOT EXISTS WP_DB_FONTS (				
			`id`        INT(10) UNSIGNED NOT NULL AUTO_INCREMENT, 
			`name`   	LONGTEXT  NOT NULL ,
			`font`  	LONGTEXT  NOT NULL ,
			PRIMARY KEY ( `id` ));
SQL command (CREATE TABLE IF NOT EXISTS WP_DB_FONTS ( `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT, `name` LONGTEXT NOT NULL , `font` LONGTEXT NOT NULL , PRIMARY KEY ( `id` ));) cannot be parsed correct.
CREATE TABLE IF NOT EXISTS WP_DB_CSS (				
			`id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT,                                                                 
			`css_type` VARCHAR(100) NOT NULL ,                                                                          
			`css_name` VARCHAR(200) NOT NULL ,                                                                         
			`css_font_id` INT(10) NOT NULL ,  
			`enable_hover` TINYINT(1) NOT NULL ,  
			`hover_color` VARCHAR(10) ,  								 
			PRIMARY KEY ( `id` ));
SQL command (CREATE TABLE IF NOT EXISTS WP_DB_CSS ( `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, `css_type` VARCHAR(100) NOT NULL , `css_name` VARCHAR(200) NOT NULL , `css_font_id` INT(10) NOT NULL , `enable_hover` TINYINT(1) NOT NULL , `hover_color` VARCHAR(10) , PRIMARY KEY ( `id` ));) cannot be parsed correct.
INSERT INTO WP_DB_FONTS (name, font) VALUES ('trim($_POST["fontName"])', 'trim($fileBase).ttf')
SQL command (INSERT INTO WP_DB_FONTS (name, font) VALUES ('trim($_POST["fontName"])', 'trim($fileBase).ttf')) cannot be parsed correct.
INSERT INTO WP_DB_CSS (css_name, css_type, css_font_id, enable_hover, hover_color) VALUES ('$cssName', '$_POST_cssType', '$wpdb->get_var("SELECT id FROM " . WP_DB_FONTS . " WHERE name = " . $fontName . "")', '0', 'checkColor($_POST["hoverColor"])')
SQL command (INSERT INTO WP_DB_CSS (css_name, css_type, css_font_id, enable_hover, hover_color) VALUES ('$cssName', '$_POST_cssType', '$wpdb->get_var("SELECT id FROM " . WP_DB_FONTS . " WHERE name = " . $fontName . "")', '0', 'checkColor($_POST["hoverColor"])')) cannot be parsed correct.
UPDATE WP_DB_CSS SET css_font_id = '$_POST_fontUpdate', enable_hover = '1', hover_color = 'checkColor($_POST["hoverColor"])' WHERE id = $_POST_cssID
SQL command (UPDATE WP_DB_CSS SET css_font_id = '$_POST_fontUpdate', enable_hover = '1', hover_color = 'checkColor($_POST["hoverColor"])' WHERE id = $_POST_cssID) cannot be parsed correct.
DELETE FROM WP_DB_FONTS WHERE id=$_POST_fontID
SQL command (DELETE FROM WP_DB_FONTS WHERE id=$_POST_fontID) cannot be parsed correct.
DELETE FROM WP_DB_CSS WHERE id=$_POST_cssID
SQL command (DELETE FROM WP_DB_CSS WHERE id=$_POST_cssID) cannot be parsed correct.
SELECT * FROM WP_DB_FONTS
SQL command (SELECT * FROM WP_DB_FONTS) cannot be parsed correct.
SELECT * FROM WP_DB_CSS
SQL command (SELECT * FROM WP_DB_CSS) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [4330, 4350, 5237, 5462, 5579, 5693, 5753, 5782, 5811]
Added 0 SQL nodes. 0 out of 9 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:04.554720.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'fread($handle, $chunksize)'' cannot be parsed correct.
HTML code '$'$ttfOptions_fontFolder'' cannot be parsed correct.
HTML code '$'$ttfOptions_fontCache'' cannot be parsed correct.
HTML code '$'<div id="ttfMessage">$_SESSION_ttfMessage</div>'' cannot be parsed correct.
HTML code '$'      $(\'#getCSS()_0_css_name\').ttfgen( { font: \'getFontName($fontID)\', hiFgColor: \'getCSS()_0_hover_color\', asBackground: true } );
'' cannot be parsed correct.
HTML code '$'      $(\'getCSS()_0_css_name\').ttfgen( { font: \'getFontName($fontID)\', asBackground: true } );
'' cannot be parsed correct.
HTML code '$'
								<td>getFonts()_0_name</td>
								<td>getFonts()_0_font</td>
								<td>
	
								<form action="?page=ttfgen.php&action=deleteFont" method="post" id="ttfgen_delete" name="ttfgen_delete">  
									<input type="hidden" name="fontID" id="fontID" value="getFonts()_0_id" />
									<input name="Delete" type="submit" value="Delete" onclick="return confirmDelete(\'Are you sure you want to delete \getFonts()_0_font\\'? This will also delete any CSS associations\')"/>
								</form> 
								
								</td>
							</tr>
					'' cannot be parsed correct.
HTML code '$'1000000'' cannot be parsed correct.
HTML code '$'1000000'' cannot be parsed correct.
HTML code '$'<option value=getFonts()_0_name"getFonts()_0_name</option>'' cannot be parsed correct.
HTML code '$'
									<td>getCSS()_0_css_type</td> 
									<td>getCSS()_0_css_name</td>
									<td>getFontName($fontID)</td>
									
									<td>
										<form action="?page=ttfgen.php&action=updateCSS" method="post" id="ttfgen_update_css" name="ttfgen_update_css"> 
																			
										<input type="radio" name="enableHovergetCSS()_0_id" value="true" '' cannot be parsed correct.
HTML code '$'> Yes
											
										<input type="radio" name="enableHovergetCSS()_0_id" value="false" '' cannot be parsed correct.
HTML code '$'> No										
									</td>
									
									<td><input type="text" name="hoverColor" id="hoverColor" maxlength="7" value="getCSS()_0_hover_color" size="7" /></td>
						
									<td>

										<select id="fontUpdate" name="fontUpdate">		
										'' cannot be parsed correct.
HTML code '$'<option name=getFonts()_0_name" value="getFonts()_0_id'' cannot be parsed correct.
HTML code '$'>getFonts()_0_name</option>'' cannot be parsed correct.
HTML code '$'</select></td>
									<td>
										 
											<input type="hidden" name="cssID" id="cssID" value="getCSS()_0_id" />
											<input name="Update" type="submit" value="Update" style="float:left; margin-right: 10px" />
										</form>
										
										<form action="?page=ttfgen.php&action=deleteCSS" method="post" id="ttfgen_delete_css" name="ttfgen_delete_css">  
											<input type="hidden" name="cssID" id="cssID" value="getCSS()_0_id" />
											<input name="Delete" type="submit" value="Delete" onclick="return confirmDelete(\'Are you sure you want to delete the CSS assignment for \getCSS()_0_css_name\\'\')" style="float:left; margin-right: 10px"/>
										</form>
									</td> 
								</tr>
							'' cannot be parsed correct.
HTML code '$'<script type=\'text/javascript\' src=\'TTF_PATH_SHORTscripts/jquery-min.js\'></script>
'' cannot be parsed correct.
HTML code '$'<script type=\'text/javascript\' src=\'TTF_PATH_SHORTscripts/jquery.metadata.js\'></script>
'' cannot be parsed correct.
HTML code '$'<script type=\'text/javascript\' src=\'TTF_PATH_SHORTscripts/jquery.ttfgen.js\'></script>

'' cannot be parsed correct.
HTML code '$'		<p>'' cannot be parsed correct.
HTML code '$'CHECKED'' cannot be parsed correct.
HTML code '$'CHECKED'' cannot be parsed correct.
HTML code '$' checked'' cannot be parsed correct.
HTML code '$' checked'' cannot be parsed correct.
HTML code '$'<table id="fontTable" border="0" cellpadding="0" cellspacing="0">
							<tr>
								<th>Name</th>
								<th>Font</th>
								<th>Action</th>
							</tr> 
						'' cannot be parsed correct.
HTML code '$'   });
'' cannot be parsed correct.
HTML code '$'</script>

'' cannot be parsed correct.
HTML code '$'<!-- End TTFGen Code -->

'' cannot be parsed correct.
HTML code '$'<tr class="rowOdd">'' cannot be parsed correct.
HTML code '$'<tr class="rowEven">'' cannot be parsed correct.
HTML code '$'</table>'' cannot be parsed correct.
HTML code '$'<tr class="rowEven">'' cannot be parsed correct.
HTML code '$'<tr class="rowOdd">'' cannot be parsed correct.
HTML code '$'checked="checked" '' cannot be parsed correct.
HTML code '$'checked="checked" '' cannot be parsed correct.
HTML code '$' selected="yes" '' cannot be parsed correct.
HTML code '$'

<!-- Start TTFGen Code -->

'' cannot be parsed correct.
HTML code '$'<script type=\'text/javascript\'>
'' cannot be parsed correct.
HTML code '$'   $(document).ready(function() {
'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:05.325425.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.074648.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 0 do_action/apply_filters calls and 4 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.295281.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running FileProDetector
### Start running FrontBaseDetector
### Finish running DbplusDetector
### Start running HashDetector
### Finish running CubridDetector
### Start running IBMDb2Detector
### Finish running DbaseDetector
### Start running InformixDetector
### Finish running FirebirdInterBaseDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running IBMDb2Detector
### Start running MsqlDetector
### Finish running MongoDetector
### Start running MySQLDetector
### Finish running HashDetector
### Start running MySQLiDetector
### Finish running ArrayElementDetector
### Start running Oci8Detector
### Finish running MySQLDetector
### Start running OpenSSLDetector
### Finish running MsqlDetector
### Start running ParadoxDetector
### Finish running MongoDbDetector
### Start running PasswordHashingDetector
### Finish running Oci8Detector
### Start running PhpCurlDetector
### Finish running OpenSSLDetector
### Start running PHPDataObjectDetector
### Finish running ParadoxDetector
### Start running PHPIncludedDetector
### Finish running PHPDataObjectDetector
### Start running PHPRetrievalDetector
### Finish running PhpCurlDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PasswordHashingDetector
### Start running PhpVarDetector
### Finish running PHPRetrievalDetector
### Start running PostgreSQLDetector
### Finish running PHPIncludedDetector
### Start running PropertyDetector
### Finish running PHPStorageDetector
### Start running Sqlite3Detector
### Finish running PhpVarDetector
### Start running SqliteDetector
### Finish running PostgreSQLDetector
### Start running SqlServerDetector
### Finish running PropertyDetector
### Start running SybaseDetector
### Finish running Sqlite3Detector
### Start running TokyoTyrantDetector
### Finish running SqliteDetector
### Start running UserInputDetector
### Finish running SybaseDetector
### Start running VariableDetector
### Finish running TokyoTyrantDetector
### Start running WordpressHashingFnDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRemoteDetector
### Finish running SqlServerDetector
### Start running WordPressRetrievalDetector
### Finish running WordPressRemoteDetector
### Start running WordPressStorageDetector
### Finish running UserInputDetector
### Start running WP_UserDetector
### Finish running VariableDetector
### Start running GenericDatabaseUsageDetector
### Finish running WP_UserDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
Error in GenericDatabaseUsageDetector:
### Start running UninstallDetector
### Finish running MySQLiDetector
### Finish running WordPressRetrievalDetector
### Finish running maxdbDetector
### Finish running WordPressStorageDetector
### Finish running UninstallDetector
### Finish running DeletionDetector
### Finished running detectors
scripts/ttfgen.php:104
  - MD5 called with parameters [text]. Ignore if [text] does not contain personal information. 

scripts/ttfgen.php:55
  - RETRIEVAL call to fgets($fp).
  - Data types: file
scripts/ttfgen.php:449
  - RETRIEVAL call to fread($handle, $chunksize).
  - Data types: file 

ttfgen.php:276
  - STORAGE call to fwrite($fh, $string).
  - Data types: file
ttfgen.php:299
  - STORAGE call to fwrite($fh, $string).
  - Data types: file 

ttfgen.php:36
  - RETRIEVAL call to get_option("siteurl") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ttfgen.php:92
  - RETRIEVAL call to get_option(TTF_OPTIONS) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ttfgen.php:127
  - RETRIEVAL call to get_option(TTF_OPTIONS) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ttfgen.php:612
  - RETRIEVAL call to get_option(TTF_OPTIONS) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
ttfgen.php:625
  - RETRIEVAL call to get_option(TTF_OPTIONS) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option 

ttfgen.php:113
  - STORAGE call to update_option(TTF_OPTIONS, $ttfOptions) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
ttfgen.php:620
  - STORAGE call to update_option(TTF_OPTIONS, $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option 

By data type:
file
	PHPRetrievalDetector.fread($handle, $chunksize) - {'file'}
	PHPRetrievalDetector.fgets($fp) - {'file'}
	PHPStorageDetector.fwrite($fh, $string) - {'file'}
	PHPStorageDetector.fwrite($fh, $string) - {'file'}
none
	PHPIncludedDetector.(unknown) - set()
option
	WordPressRetrievalDetector.get_option(TTF_OPTIONS) - {'option'}
	WordPressRetrievalDetector.get_option(TTF_OPTIONS) - {'option'}
	WordPressRetrievalDetector.get_option(TTF_OPTIONS) - {'option'}
	WordPressRetrievalDetector.get_option("siteurl") - {'option'}
	WordPressStorageDetector.update_option(TTF_OPTIONS, $options) - {'option'}
	WordPressRetrievalDetector.get_option(TTF_OPTIONS) - {'option'}
	WordPressStorageDetector.update_option(TTF_OPTIONS, $ttfOptions) - {'option'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:08.727392.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 14 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.102237.

14 STORE_REACHES edges created
14 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
In total, tainted 0 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 1 nodes as ENCRYPTED
In total, tainted 1 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:00.178281.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:00:52.752331!
MD5 called with parameters [text]. Ignore if [text] does not contain personal information.,md5,None
RETRIEVAL call to fread($handle, $chunksize).,None,None
RETRIEVAL call to fgets($fp).,None,None
STORAGE call to fwrite($fh, $string).,None,None
STORAGE call to fwrite($fh, $string).,None,None
RETRIEVAL call to get_option(TTF_OPTIONS) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("siteurl") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(TTF_OPTIONS) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(TTF_OPTIONS) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option(TTF_OPTIONS) alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
STORAGE call to update_option(TTF_OPTIONS, $ttfOptions) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option(TTF_OPTIONS, $options) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found no personal data in the plugin. No analysis needed. 

[main] Complaint? True 

No findings
