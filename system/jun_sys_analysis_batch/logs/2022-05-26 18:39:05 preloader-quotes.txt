Timeout in resolving values
Timeout in running neo4j query
Running Main.py on preloader-quotes

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.477358.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:00.916692.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 0 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.291165.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 0 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.475224.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 227 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:00.745905.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 0 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.633363.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.130811.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 104 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:01.914642.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 1585
Added 1254 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 1627
Added 42 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:01.108924.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/preloader-quotes/init.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/preloader-quotes/mapping.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/preloader-quotes/quotes.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.380168.

1000 PHP_REACHES edges created
1585 PHP_REACHES edges created
42 PHP_REACHES edges created
1627 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 595 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.005198.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:01.972412.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 6 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.599592.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 8 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.169726.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.211421.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.088517.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.006518.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.035923.

14 PHP_REACHES edges created
14 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 6 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.115228.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
14 SQL operations to process.
CREATE TABLE preloader_quotes (
		  id mediumint(9) NOT NULL AUTO_INCREMENT,
		  quote tinytext NOT NULL,
		  author varchar(500) NOT NULL,
		  template varchar(50) NOT NULL,
		  PRIMARY KEY  (id)
		) $wpdb->get_charset_collate();
SQL command (CREATE TABLE preloader_quotes ( id mediumint(9) NOT NULL AUTO_INCREMENT, quote tinytext NOT NULL, author varchar(500) NOT NULL, template varchar(50) NOT NULL, PRIMARY KEY (id) ) $wpdb->get_charset_collate();) cannot be parsed correct.
CREATE TABLE preloader_quotes_mapping (
		  id mediumint(9) NOT NULL AUTO_INCREMENT,
		  quote_ids varchar(1000) NOT NULL,
		  page_ids varchar(1000) NOT NULL,
		  post_ids varchar(9) NOT NULL,
		  random_quotes mediumint(9) NULL,
		  PRIMARY KEY  (id)
		) $wpdb->get_charset_collate();
SQL command (CREATE TABLE preloader_quotes_mapping ( id mediumint(9) NOT NULL AUTO_INCREMENT, quote_ids varchar(1000) NOT NULL, page_ids varchar(1000) NOT NULL, post_ids varchar(9) NOT NULL, random_quotes mediumint(9) NULL, PRIMARY KEY (id) ) $wpdb->get_charset_collate();) cannot be parsed correct.
update preloader_quotes set quote='sanitize_text_field($_POST["pl_quote"])',author='sanitize_text_field($_POST["pl_quote_author"])', template='sanitize_text_field($_POST["pl_quote_template"])' where id='$_POST_quote_id'
SQL command (update preloader_quotes set quote='sanitize_text_field($_POST["pl_quote"])',author='sanitize_text_field($_POST["pl_quote_author"])', template='sanitize_text_field($_POST["pl_quote_template"])' where id='$_POST_quote_id') cannot be parsed correct.
insert into preloader_quotes_mapping(quote_ids,page_ids,post_ids,random_quotes) values('sanitize_text_field($_POST["pl_quotes"])','implode(",", $pl_page)','implode(",", $pl_post)','sanitize_text_field($_POST["random_quotes"])')
SQL command (insert into preloader_quotes_mapping(quote_ids,page_ids,post_ids,random_quotes) values('sanitize_text_field($_POST["pl_quotes"])','implode(",", $pl_page)','implode(",", $pl_post)','sanitize_text_field($_POST["random_quotes"])')) cannot be parsed correct.
select * from preloader_quotes where id=get_option("pl_quote_global", true)
SQL command (select * from preloader_quotes where id=get_option("pl_quote_global", true)) cannot be parsed correct.
select * from preloader_quotes where id=array_filter($quote_idsA, $"value"$value !== "" && $value !== "null" && !empty($value);
)_array_rand($quote_idsA)
SQL command (select * from preloader_quotes where id=array_filter($quote_idsA, $"value"$value !== "" && $value !== "null" && !empty($value); )_array_rand($quote_idsA)) cannot be parsed correct.
select * from preloader_quotes where id=
SQL command (select * from preloader_quotes where id=) cannot be parsed correct.
select * from preloader_quotes order by id desc
SQL command (select * from preloader_quotes order by id desc) cannot be parsed correct.
select * from preloader_quotes_mapping order by id desc
SQL command (select * from preloader_quotes_mapping order by id desc) cannot be parsed correct.
select * from preloader_quotes where id in ($mapping)
SQL command (select * from preloader_quotes where id in ($mapping)) cannot be parsed correct.
select * from $wpdbposts where id in ($mapping)
SQL command (select * from $wpdbposts where id in ($mapping)) cannot be parsed correct.
select * from $wpdbposts where id in ($mapping)
SQL command (select * from $wpdbposts where id in ($mapping)) cannot be parsed correct.
select * from preloader_quotes where id=sanitize_text_field($_GET["quote_id"])
SQL command (select * from preloader_quotes where id=sanitize_text_field($_GET["quote_id"])) cannot be parsed correct.
select * from preloader_quotes order by id desc
SQL command (select * from preloader_quotes order by id desc) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [94, 111, 373, 660, 828, 964, 1124, 1605, 1628, 1827, 1899, 1937, 2243, 2299]
Added 0 SQL nodes. 0 out of 14 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:05.731262.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'yesno'' cannot be parsed correct.
HTML code '$'admin_url()admin.php?page=preloader-quotes-mapping&edit=$mapping'' cannot be parsed correct.
HTML code '$'$mapping'' cannot be parsed correct.
HTML code '$'$mapping'' cannot be parsed correct.
HTML code '$'$mapping'' cannot be parsed correct.
HTML code '$'$mapping'' cannot be parsed correct.
HTML code '$'admin_url()admin.php?page=preloader-quotes-mapping&delete=$mapping'' cannot be parsed correct.
HTML code '$'$mapping'' cannot be parsed correct.
HTML code '$'$mapping'' cannot be parsed correct.
HTML code '$'$mapping'' cannot be parsed correct.
HTML code '$'admin_url("admin-post.php")'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'$page'' cannot be parsed correct.
HTML code '$'$page'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'$post'' cannot be parsed correct.
HTML code '$'$post'' cannot be parsed correct.
HTML code '$'$quote'' cannot be parsed correct.
HTML code '$'$quote'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'$_GET_edit'' cannot be parsed correct.
HTML code '$'rtrim($quotes_names, ",")'' cannot be parsed correct.
HTML code '$'rtrim($pages_names, ",")'' cannot be parsed correct.
HTML code '$'rtrim($posts_names, ",")'' cannot be parsed correct.
HTML code '$'$quote_id'' cannot be parsed correct.
HTML code '$'$_GET_message'' cannot be parsed correct.
HTML code '$'admin_url("admin-post.php")'' cannot be parsed correct.
HTML code '$'$wpdb->get_row("select * from preloader_quotes where id=" . $quote_id)_quote'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'selected'' cannot be parsed correct.
HTML code '$'checked'' cannot be parsed correct.
HTML code '$'sanitize_text_field($_GET["quote_id"])'' cannot be parsed correct.
HTML code '$'<br/><b>Quote:</b> <br/>'' cannot be parsed correct.
HTML code '$'<b>Author:</b> <br/>'' cannot be parsed correct.
HTML code '$'<b>Template:</b> <br/>'' cannot be parsed correct.
HTML code '$'<tr><td>_quote</td>'' cannot be parsed correct.
HTML code '$'<td>_author</td>'' cannot be parsed correct.
HTML code '$'<td>_template</td>'' cannot be parsed correct.
HTML code '$'<a href=\'admin_url()admin.php?page=preloader-quotes&action=edit&quote_id=_id\'>Edit | </a>'' cannot be parsed correct.
HTML code '$'<a href=\'admin_url()admin.php?page=preloader-quotes&action=delete&quote_id=_id\'>Delete</a>'' cannot be parsed correct.
HTML code '$'&quote_ids='' cannot be parsed correct.
HTML code '$'&post_ids='' cannot be parsed correct.
HTML code '$'&random_quotes='' cannot be parsed correct.
HTML code '$'&quote_ids='' cannot be parsed correct.
HTML code '$'&post_ids='' cannot be parsed correct.
HTML code '$'">Delete</a>
				</td>
			</tr>
		'' cannot be parsed correct.
HTML code '$'"'' cannot be parsed correct.
HTML code '$'\')
					$(\'#add_quote\').trigger(\'click\');
				});
			</script>
			'' cannot be parsed correct.
HTML code '$'<td>'' cannot be parsed correct.
HTML code '$'</td>'' cannot be parsed correct.
HTML code '$'</tr>'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:05.833734.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.046783.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 0 do_action/apply_filters calls and 8 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:00.466727.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbaseDetector
### Start running FrontBaseDetector
### Finish running FileProDetector
### Start running HashDetector
### Finish running DbplusDetector
### Start running IBMDb2Detector
### Finish running FirebirdInterBaseDetector
### Start running InformixDetector
### Finish running CubridDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running IBMDb2Detector
### Start running MsqlDetector
### Finish running MongoDetector
### Start running MySQLDetector
### Finish running MsqlDetector
### Start running MySQLiDetector
### Finish running MySQLDetector
### Start running Oci8Detector
### Finish running Oci8Detector
### Start running OpenSSLDetector
### Finish running MongoDbDetector
### Start running ParadoxDetector
### Finish running ParadoxDetector
### Start running PasswordHashingDetector
### Finish running HashDetector
### Start running PhpCurlDetector
### Finish running ArrayElementDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PasswordHashingDetector
### Start running PHPRetrievalDetector
### Finish running OpenSSLDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPIncludedDetector
### Start running PhpVarDetector
### Finish running PhpCurlDetector
### Start running PostgreSQLDetector
### Finish running PhpVarDetector
### Start running PropertyDetector
### Finish running PostgreSQLDetector
### Start running Sqlite3Detector
### Finish running PHPRetrievalDetector
### Start running SqliteDetector
### Finish running PHPStorageDetector
### Start running SqlServerDetector
### Finish running SqliteDetector
### Start running SybaseDetector
### Finish running SybaseDetector
### Start running TokyoTyrantDetector
### Finish running TokyoTyrantDetector
### Start running UserInputDetector
### Finish running PropertyDetector
### Start running VariableDetector
### Finish running Sqlite3Detector
### Start running WordpressHashingFnDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRemoteDetector
### Finish running WordPressRemoteDetector
### Start running WordPressRetrievalDetector
### Finish running SqlServerDetector
### Start running WordPressStorageDetector
### Finish running VariableDetector
### Start running WP_UserDetector
### Finish running maxdbDetector
### Start running GenericDatabaseUsageDetector
### Finish running WP_UserDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running MySQLiDetector
### Start running UninstallDetector
### Finish running GenericDatabaseUsageDetector
### Finish running UserInputDetector
### Finish running DeletionDetector
### Finish running UninstallDetector
### Finish running WordPressRetrievalDetector
### Finish running WordPressStorageDetector
### Finished running detectors
init.php:38
  - RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).
init.php:49
  - RETRIEVAL call to dbDelta($sql1). Passed arguments: 0: $queries (string[]|string). Returns (array).
init.php:118
  - RETRIEVAL call to get_option("pl_quote_global", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
init.php:175
  - RETRIEVAL call to get_post_meta($post_id, "pl_quotes", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
init.php:177
  - RETRIEVAL call to get_option("pl_quote_global", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
init.php:190
  - RETRIEVAL call to get_post_meta($post_id, "pl_quotes_random", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
init.php:216
  - RETRIEVAL call to get_post_meta($post_id, "pl_quotes_used_ids", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
mapping.php:57
  - RETRIEVAL call to get_posts($args1). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).
quotes.php:9
  - RETRIEVAL call to get_option("pl_quote_global", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
quotes.php:35
  - RETRIEVAL call to get_option("pl_quote_global", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option 

init.php:115
  - STORAGE call to update_option("pl_quote_global", $global_quote_id) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
init.php:120
  - STORAGE call to update_option("pl_quote_global", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
init.php:141
  - STORAGE call to update_post_meta($page_id, "pl_quotes", $pl_quotes) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
init.php:142
  - STORAGE call to update_post_meta($page_id, "pl_quotes_random", $random_quotes) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
init.php:146
  - STORAGE call to update_post_meta($post_id, "pl_quotes", $pl_quotes) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
init.php:147
  - STORAGE call to update_post_meta($post_id, "pl_quotes_random", $random_quotes) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
init.php:241
  - STORAGE call to update_post_meta($post_id, "pl_quotes_used_ids", $used_cookies) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
mapping.php:19
  - STORAGE call to update_post_meta($page_id, "pl_quotes", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
mapping.php:24
  - STORAGE call to update_post_meta($post_id, "pl_quotes", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta 

init.php:151
  - Data from table preloader_quotes_mapping deleted: "$wpdb->delete("preloader_quotes_mapping", ["id" => sanitize_text_field($_POST["mapping_id"])])"
init.php:157
  - Data from table preloader_quotes_mapping deleted: "$wpdb->delete("preloader_quotes_mapping", ["id" => sanitize_text_field($_GET["delete"])])"
mapping.php:27
  - Data from table preloader_quotes_mapping deleted: "$wpdb->delete("preloader_quotes_mapping", ["id" => sanitize_text_field($_GET["delete"])])"
quotes.php:28
  - Data from table preloader_quotes deleted: "$wpdb->delete("preloader_quotes", ["id" => $quote_id])" 

By data type:
none
	WordPressRetrievalDetector.get_posts($args1) - set()
	DeletionDetector.$wpdb->delete("preloader_quotes_mapping", ["id" => sanitize_text_field($_POST["mapping_id"])]) - set()
	DeletionDetector.$wpdb->delete("preloader_quotes", ["id" => $quote_id]) - set()
	DeletionDetector.$wpdb->delete("preloader_quotes_mapping", ["id" => sanitize_text_field($_GET["delete"])]) - set()
	DeletionDetector.$wpdb->delete("preloader_quotes_mapping", ["id" => sanitize_text_field($_GET["delete"])]) - set()
	WordPressRetrievalDetector.dbDelta($sql1) - set()
	WordPressRetrievalDetector.dbDelta($sql) - set()
option
	WordPressRetrievalDetector.get_option("pl_quote_global", true) - {'option'}
	WordPressRetrievalDetector.get_option("pl_quote_global", true) - {'option'}
	WordPressRetrievalDetector.get_option("pl_quote_global", true) - {'option'}
	WordPressStorageDetector.update_option("pl_quote_global", $global_quote_id) - {'option'}
	WordPressRetrievalDetector.get_option("pl_quote_global", true) - {'option'}
	WordPressStorageDetector.update_option("pl_quote_global", "") - {'option'}
post_meta
	WordPressStorageDetector.update_post_meta($page_id, "pl_quotes_random", $random_quotes) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "pl_quotes_used_ids", $used_cookies) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "pl_quotes", $pl_quotes) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($page_id, "pl_quotes", "") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "pl_quotes_used_ids", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "pl_quotes_random", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($page_id, "pl_quotes", $pl_quotes) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "pl_quotes", "") - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "pl_quotes_random", $random_quotes) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "pl_quotes", true) - {'post_meta'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:07.543366.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 29 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.141732.

29 STORE_REACHES edges created
29 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
In total, tainted 0 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
In total, tainted 0 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:00.005570.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:00:35.437255!
Data from table preloader_quotes_mapping deleted: "$wpdb->delete("preloader_quotes_mapping", ["id" => sanitize_text_field($_POST["mapping_id"])])",None,None
Data from table preloader_quotes_mapping deleted: "$wpdb->delete("preloader_quotes_mapping", ["id" => sanitize_text_field($_GET["delete"])])",None,None
Data from table preloader_quotes_mapping deleted: "$wpdb->delete("preloader_quotes_mapping", ["id" => sanitize_text_field($_GET["delete"])])",None,None
Data from table preloader_quotes deleted: "$wpdb->delete("preloader_quotes", ["id" => $quote_id])",None,None
RETRIEVAL call to get_option("pl_quote_global", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "pl_quotes", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("pl_quote_global", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "pl_quotes_random", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "pl_quotes_used_ids", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to dbDelta($sql). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to dbDelta($sql1). Passed arguments: 0: $queries (string[]|string). Returns (array).,None,None
RETRIEVAL call to get_posts($args1). Passed arguments: 0: $args (array). Returns (WP_Post[]|int[]).,None,None
RETRIEVAL call to get_option("pl_quote_global", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_option("pl_quote_global", true) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
STORAGE call to update_option("pl_quote_global", $global_quote_id) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("pl_quote_global", "") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($page_id, "pl_quotes", $pl_quotes) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($page_id, "pl_quotes_random", $random_quotes) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "pl_quotes", $pl_quotes) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "pl_quotes_random", $random_quotes) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "pl_quotes_used_ids", $used_cookies) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($page_id, "pl_quotes", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "pl_quotes", "") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found no personal data in the plugin. No analysis needed. 

[main] Complaint? True 

No findings
