Timeout in resolving values
Timeout in running neo4j query
Running Main.py on yasakani-cache

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:00.219608.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.293964.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 28 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.593316.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 6 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.716868.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 4219 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:02.306687.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 223 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:02.856973.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
Added 8 PHP_REACHES edges.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.083214.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 1903 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:40.481335.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 22709
Added 16322 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 22709
Added 0 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:02.635179.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/yasakani-cache/magatama_lv1.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/yasakani-cache/yasakani-cache.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/yasakani-cache/yasakani_dbtable.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/yasakani-cache/yasakani_option_page.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/yasakani-cache/addons/yasakani_logstat.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/yasakani-cache/addons/yasakani_security.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/yasakani-cache/addons/admin/backend_logstat.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/yasakani-cache/addons/admin/backend_security.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/yasakani-cache/minify/css-tree-shaking.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/yasakani-cache/minify/minify-utils.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/yasakani-cache/minify/str-utils.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:01.073583.

28 PHP_REACHES edges created
6 REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
4219 PHP_REACHES edges created
138 CALLS edges created
18 PHP_REACHES edges created
11 CALLS edges created
2 PHP_REACHES edges created
10 CALLS edges created
1 PHP_REACHES edges created
1 CALLS edges created
1 PHP_REACHES edges created
41 CALLS edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
11000 PHP_REACHES edges created
12000 PHP_REACHES edges created
13000 PHP_REACHES edges created
14000 PHP_REACHES edges created
15000 PHP_REACHES edges created
16000 PHP_REACHES edges created
17000 PHP_REACHES edges created
18000 PHP_REACHES edges created
18233 PHP_REACHES edges created
22709 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 8539 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.740168.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:15.288062.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 663 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:19.361552.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 1060 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.244813.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:07.552134.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:09.645007.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.080127.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.030048.

1000 PHP_REACHES edges created
1723 PHP_REACHES edges created
1723 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 727 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.172623.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
100 SQL operations to process.
PRAGMA synchronous = 0
SQL command (PRAGMA synchronous = 0) cannot be parsed correct.
PRAGMA journal_mode = MEMORY
SQL command (PRAGMA journal_mode = MEMORY) cannot be parsed correct.
BEGIN IMMEDIATE
SQL command (BEGIN IMMEDIATE) cannot be parsed correct.
COMMIT
SQL command (COMMIT) cannot be parsed correct.
ROLLBACK
SQL command (ROLLBACK) cannot be parsed correct.
PRAGMA synchronous = 0
SQL command (PRAGMA synchronous = 0) cannot be parsed correct.
PRAGMA journal_mode = MEMORY
SQL command (PRAGMA journal_mode = MEMORY) cannot be parsed correct.
BEGIN IMMEDIATE
SQL command (BEGIN IMMEDIATE) cannot be parsed correct.
COMMIT
SQL command (COMMIT) cannot be parsed correct.
ROLLBACK
SQL command (ROLLBACK) cannot be parsed correct.
PRAGMA synchronous = 0
SQL command (PRAGMA synchronous = 0) cannot be parsed correct.
PRAGMA journal_mode = MEMORY
SQL command (PRAGMA journal_mode = MEMORY) cannot be parsed correct.
BEGIN IMMEDIATE
SQL command (BEGIN IMMEDIATE) cannot be parsed correct.
COMMIT
SQL command (COMMIT) cannot be parsed correct.
ROLLBACK
SQL command (ROLLBACK) cannot be parsed correct.
PRAGMA synchronous = 0
SQL command (PRAGMA synchronous = 0) cannot be parsed correct.
PRAGMA journal_mode = PERSIST
SQL command (PRAGMA journal_mode = PERSIST) cannot be parsed correct.
BEGIN IMMEDIATE
SQL command (BEGIN IMMEDIATE) cannot be parsed correct.
DROP TABLE IF EXISTS laststat;
SQL command (DROP TABLE IF EXISTS laststat;) cannot be parsed correct.
CREATE TABLE laststat AS SELECT * FROM stat
SQL command (CREATE TABLE laststat AS SELECT * FROM stat) cannot be parsed correct.
DROP TABLE IF EXISTS log_{"1": ["SUN"], "2": ["MON"], "3": ["TUE"], "4": ["WED"], "5": ["THU"], "6": ["FRI"], "7": ["SAT"]}_$w;
SQL command (DROP TABLE IF EXISTS log_{"1": ["SUN"], "2": ["MON"], "3": ["TUE"], "4": ["WED"], "5": ["THU"], "6": ["FRI"], "7": ["SAT"]}_$w;) cannot be parsed correct.
CREATE TABLE log_{"1": ["SUN"], "2": ["MON"], "3": ["TUE"], "4": ["WED"], "5": ["THU"], "6": ["FRI"], "7": ["SAT"]}_$w AS SELECT * FROM log
SQL command (CREATE TABLE log_{"1": ["SUN"], "2": ["MON"], "3": ["TUE"], "4": ["WED"], "5": ["THU"], "6": ["FRI"], "7": ["SAT"]}_$w AS SELECT * FROM log) cannot be parsed correct.
DROP TABLE IF EXISTS log
SQL command (DROP TABLE IF EXISTS log) cannot be parsed correct.
None
CREATE INDEX date ON log (date);
SQL command (CREATE INDEX date ON log (date);) cannot be parsed correct.
CREATE INDEX lpostid ON log (blogid,postid);
SQL command (CREATE INDEX lpostid ON log (blogid,postid);) cannot be parsed correct.
CREATE INDEX ip ON log (ip);
SQL command (CREATE INDEX ip ON log (ip);) cannot be parsed correct.
DROP TABLE IF EXISTS bot
SQL command (DROP TABLE IF EXISTS bot) cannot be parsed correct.
None
CREATE INDEX bip ON bot (bip);
SQL command (CREATE INDEX bip ON bot (bip);) cannot be parsed correct.
DROP TABLE IF EXISTS stat
SQL command (DROP TABLE IF EXISTS stat) cannot be parsed correct.
None
DROP TABLE IF EXISTS logged_key
SQL command (DROP TABLE IF EXISTS logged_key) cannot be parsed correct.
None
DROP TABLE IF EXISTS laststat;
SQL command (DROP TABLE IF EXISTS laststat;) cannot be parsed correct.
COMMIT
SQL command (COMMIT) cannot be parsed correct.
ROLLBACK
SQL command (ROLLBACK) cannot be parsed correct.
PRAGMA synchronous = 0
SQL command (PRAGMA synchronous = 0) cannot be parsed correct.
PRAGMA journal_mode = MEMORY
SQL command (PRAGMA journal_mode = MEMORY) cannot be parsed correct.
BEGIN IMMEDIATE
SQL command (BEGIN IMMEDIATE) cannot be parsed correct.
COMMIT
SQL command (COMMIT) cannot be parsed correct.
ROLLBACK
SQL command (ROLLBACK) cannot be parsed correct.
$sql
SQL command ($sql) cannot be parsed correct.
$sql
SQL command ($sql) cannot be parsed correct.
md5(urldecode($req_url))
SQL command (md5(urldecode($req_url))) cannot be parsed correct.
'$localtm->format("Y-m-d") 00:00:00'
SQL command ('$localtm->format("Y-m-d") 00:00:00') cannot be parsed correct.
SELECT blog_id FROM $wpdb
SQL command (SELECT blog_id FROM $wpdb) cannot be parsed correct.
SELECT blog_id FROM $wpdb
SQL command (SELECT blog_id FROM $wpdb) cannot be parsed correct.
SELECT blog_id FROM $wpdb
SQL command (SELECT blog_id FROM $wpdb) cannot be parsed correct.
PRAGMA journal_mode = OFF
SQL command (PRAGMA journal_mode = OFF) cannot be parsed correct.
BEGIN EXCLUSIVE
SQL command (BEGIN EXCLUSIVE) cannot be parsed correct.
COMMIT
SQL command (COMMIT) cannot be parsed correct.
PRAGMA journal_mode = DELETE
SQL command (PRAGMA journal_mode = DELETE) cannot be parsed correct.
BEGIN IMMEDIATE
SQL command (BEGIN IMMEDIATE) cannot be parsed correct.
DROP TABLE IF EXISTS content
SQL command (DROP TABLE IF EXISTS content) cannot be parsed correct.
None
CREATE UNIQUE INDEX key ON content (key);
SQL command (CREATE UNIQUE INDEX key ON content (key);) cannot be parsed correct.
CREATE INDEX postid ON content (blogid,postid);
SQL command (CREATE INDEX postid ON content (blogid,postid);) cannot be parsed correct.
COMMIT
SQL command (COMMIT) cannot be parsed correct.
ROLLBACK
SQL command (ROLLBACK) cannot be parsed correct.
PRAGMA journal_mode = OFF
SQL command (PRAGMA journal_mode = OFF) cannot be parsed correct.
BEGIN EXCLUSIVE
SQL command (BEGIN EXCLUSIVE) cannot be parsed correct.
COMMIT
SQL command (COMMIT) cannot be parsed correct.
SELECT blog_id FROM $wpdb
SQL command (SELECT blog_id FROM $wpdb) cannot be parsed correct.
SELECT blog_id FROM $wpdb
SQL command (SELECT blog_id FROM $wpdb) cannot be parsed correct.
PRAGMA synchronous = 0
SQL command (PRAGMA synchronous = 0) cannot be parsed correct.
PRAGMA journal_mode = PERSIST
SQL command (PRAGMA journal_mode = PERSIST) cannot be parsed correct.
None
None
CREATE UNIQUE INDEX key ON content (key);
SQL command (CREATE UNIQUE INDEX key ON content (key);) cannot be parsed correct.
CREATE INDEX postid ON content (blogid,postid);
SQL command (CREATE INDEX postid ON content (blogid,postid);) cannot be parsed correct.
None
CREATE INDEX date ON log (date);
SQL command (CREATE INDEX date ON log (date);) cannot be parsed correct.
CREATE INDEX lpostid ON log (blogid,postid);
SQL command (CREATE INDEX lpostid ON log (blogid,postid);) cannot be parsed correct.
CREATE INDEX ip ON log (ip);
SQL command (CREATE INDEX ip ON log (ip);) cannot be parsed correct.
None
CREATE INDEX bip ON bot (bip);
SQL command (CREATE INDEX bip ON bot (bip);) cannot be parsed correct.
None
None
DROP TABLE IF EXISTS setting;
SQL command (DROP TABLE IF EXISTS setting;) cannot be parsed correct.
None
DROP TABLE IF EXISTS content
SQL command (DROP TABLE IF EXISTS content) cannot be parsed correct.
None
CREATE UNIQUE INDEX key ON content (key);
SQL command (CREATE UNIQUE INDEX key ON content (key);) cannot be parsed correct.
CREATE INDEX postid ON content (blogid,postid);
SQL command (CREATE INDEX postid ON content (blogid,postid);) cannot be parsed correct.
None
CREATE INDEX bip ON bot (bip);
SQL command (CREATE INDEX bip ON bot (bip);) cannot be parsed correct.
None
None
PRAGMA journal_mode = OFF
SQL command (PRAGMA journal_mode = OFF) cannot be parsed correct.
BEGIN EXCLUSIVE
SQL command (BEGIN EXCLUSIVE) cannot be parsed correct.
COMMIT
SQL command (COMMIT) cannot be parsed correct.
PRAGMA journal_mode = DELETE
SQL command (PRAGMA journal_mode = DELETE) cannot be parsed correct.
BEGIN IMMEDIATE
SQL command (BEGIN IMMEDIATE) cannot be parsed correct.
COMMIT
SQL command (COMMIT) cannot be parsed correct.
ROLLBACK
SQL command (ROLLBACK) cannot be parsed correct.
PRAGMA journal_mode = OFF
SQL command (PRAGMA journal_mode = OFF) cannot be parsed correct.
BEGIN EXCLUSIVE
SQL command (BEGIN EXCLUSIVE) cannot be parsed correct.
COMMIT
SQL command (COMMIT) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [2090, 2096, 2102, 2246, 2262, 2513, 2519, 2525, 2669, 2685, 2916, 2922, 2928, 3072, 3088, 11419, 11425, 11431, 11498, 11504, 11566, 11576, 11609, 11615, 11624, 11630, 11636, 11642, 11648, 11657, 11663, 11669, 11678, 11684, 11750, 11756, 11769, 11793, 11799, 11805, 12168, 12181, 16559, 16622, 16698, 16803, 17352, 25037, 25256, 25374, 30782, 30790, 30804, 30812, 30820, 30830, 30838, 30849, 30857, 30865, 30880, 30919, 30927, 30941, 30976, 31190, 34654, 34660, 34673, 34763, 34772, 34778, 34784, 34793, 34799, 34805, 34811, 34820, 34826, 34835, 34904, 34910, 35035, 35041, 35050, 35056, 35072, 35081, 35097, 35116, 35314, 35320, 35332, 35395, 35401, 35515, 35546, 35569, 35575, 35589]
Added 0 SQL nodes. 0 out of 100 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:10.908539.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'Today\'s Access summary</div><div>$pvdt_hed</div></div>'' cannot be parsed correct.
HTML code '$'<span><input name="yasakani_log_time" type="time" value="$localtm->format("H:i")" title="Time zone" /></span>'' cannot be parsed correct.
HTML code '$'<span>Type '' cannot be parsed correct.
HTML code '$'<span>PostID <input class="small-text"ãtype="text" name="yasakani_log_pid" value="" pattern="\d{1,6}" /></span>'' cannot be parsed correct.
HTML code '$'<span>IP Filter <input class="medium-text"ãtype="text" name="yasakani_log_ip" value="" pattern="\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}" placeholder="xxx.xxx.xxx.xxx" /></span>'' cannot be parsed correct.
HTML code '$'<span class="hide-if-no-js"><a class="button yasakani-filter-opt-apply"  href="#yasakani-log-1" onclick="Apply_log_filter(\'wp_create_nonce("yasakani_log_filter")\',\'apply\');return false;" Apply</a></span>'' cannot be parsed correct.
HTML code '$'<td>$item</td>'' cannot be parsed correct.
HTML code '$'<td><a class=\'delete\' href=\'wp_nonce_url("options-general.php?page=yasakani-cache&amp;action=del_autoblock_ip&amp;ip="$ip, "yasakani-cache")\'>Delete</a></td>'' cannot be parsed correct.
HTML code '$'<p>It is displayed when \'Log Mode\' of \'Cache Setting\' is enabled</p>'' cannot be parsed correct.
HTML code '$'$html'' cannot be parsed correct.
HTML code '$'<span class="hide-if-no-js"><a class="button yasakani-filter-opt-prev"  href="#yasakani-log-1" style="width: 80px;" onclick="Apply_log_filter(\'wp_create_nonce("yasakani_log_filter")\',\'prev\');return false;" < Prev</a>'' cannot be parsed correct.
HTML code '$'<a class="button yasakani-filter-opt-next"  href="#yasakani-log-1" style="width: 80px;" onclick="Apply_log_filter(\'wp_create_nonce("yasakani_log_filter")\',\'next\');return false;" Next ></a></span>'' cannot be parsed correct.
HTML code '$'<p>It is displayed when \'Statistics\' is enabled in \'Log Mode\' of \'Cache Setting\'</p>'' cannot be parsed correct.
HTML code '$'json_encode($pvhed)'' cannot be parsed correct.
HTML code '$'json_encode($pvcsv)'' cannot be parsed correct.
HTML code '$'Poplar Posts'' cannot be parsed correct.
HTML code '$'_botblocklist'' cannot be parsed correct.
HTML code '$'<p></p>'' cannot be parsed correct.
HTML code '$'<p></p>'' cannot be parsed correct.
HTML code '$'<p></p>'' cannot be parsed correct.
HTML code '$'_trustedfile'' cannot be parsed correct.
HTML code '$'<p></p>'' cannot be parsed correct.
HTML code '$'_protectlist'' cannot be parsed correct.
HTML code '$'<p></p>'' cannot be parsed correct.
HTML code '$'_replace_urlsearch'' cannot be parsed correct.
HTML code '$'_replace_urlreplace'' cannot be parsed correct.
HTML code '$'_bot_key'' cannot be parsed correct.
HTML code '$'$yasakani_cache->get_device_content($content)'' cannot be parsed correct.
HTML code '$'<br /><span style="padding: 10px; margin-top: 10px"> [Upgrade Notice] : Plug-in update must be done with plug-in deactivated.'' cannot be parsed correct.
HTML code '$'<div id="yc-select-notice" style="display:none;"'' cannot be parsed correct.
HTML code '$'<p style="color:#007cba;">This post is password protected or private, so it will not cache.</p>'' cannot be parsed correct.
HTML code '$'json_encode($option)'' cannot be parsed correct.
HTML code '$'<div id="yc-select-ui" style="display:none;"'' cannot be parsed correct.
HTML code '$'<p class="components-panel__row hide-if-no-js"><span id="yasakani-cache-status" >$yasakani_cache->sqldb->sql_prepare_row("SELECT key FROM content WHERE blogid = ? AND postid = ? AND ( d_expire IS NOT NULL OR m_expire IS NOT NULL)", [self"blogid", $post->ID])</span><a class="button" style="margin-left: 20px;" onclick="YasakaniExclude(\'wp_create_nonce("yasakani-cache-" . $post->ID)\',\'clear\');return false;" Clear</a></p>'' cannot be parsed correct.
HTML code '$'<p><label><input type=\'checkbox\' name=\'yasakani-exclude\' value=\'include\' checked($exclude, "exclude", false)/>Do not Cache this post</label></p>'' cannot be parsed correct.
HTML code '$'<p><label><input type=\'checkbox\' name=\'yasakani-exclude-css\' value=\'include\' checked($exclude_css, "exclude", false)/>Do not Minify CSS</label></p>'' cannot be parsed correct.
HTML code '$'<p><label><input type=\'checkbox\' name=\'yasakani-exclude-js\' value=\'include\' checked($exclude_js, "exclude", false)/>Do not JS defer-asynchronously</label></p>'' cannot be parsed correct.
HTML code '$'<p class="hide-if-no-js"><a id="yasakani-exclude-submit" class="button" href="#yasakani-exclude-div" onclick="YasakaniExclude(\'wp_create_nonce("yasakani-cache-" . $post->ID)\',\'save\');return false;" Save</a></p>'' cannot be parsed correct.
HTML code '$'<p style="color: red;">Yasakani Cache is not enabled.</p>'' cannot be parsed correct.
HTML code '$'<div class=\'db_error\' style=\'margin-top: 8px; padding: 1px 4px 4px; background-color: rgba(220, 112, 112, 0.2);\' ><p>SQLite DB error : get_transient("yasakani_notice")</p></div>'' cannot be parsed correct.
HTML code '$'<p style="margin-bottom: 8px;"></p>'' cannot be parsed correct.
HTML code '$'Version get_file_data( . "/yasakani-cache.php", ["Version" => "Version"], "plugin")_Version'' cannot be parsed correct.
HTML code '$'DB information</div><div>$this->get_db_info()</div></div>'' cannot be parsed correct.
HTML code '$'<p><strong>Expert mode</strong></p>'' cannot be parsed correct.
HTML code '$'<code>auto_prepend_file = WP_CONTENT_DIR/yasakani-cache-exload.php"</code'' cannot be parsed correct.
HTML code '$'<p></p>'' cannot be parsed correct.
HTML code '$'$exclude_urlcmplist'' cannot be parsed correct.
HTML code '$'<p style="margin: 10px 0;"></p>'' cannot be parsed correct.
HTML code '$'_tree_shaking_css'' cannot be parsed correct.
HTML code '$'_exclude_tree_shaking_name'' cannot be parsed correct.
HTML code '$'<p style="margin: 10px 0;"></p>'' cannot be parsed correct.
HTML code '$'_exclude_defer_js'' cannot be parsed correct.
HTML code '$'<td>$pid</td>'' cannot be parsed correct.
HTML code '$'<td><a class=\'delete\' href=\'wp_nonce_url("options-general.php?page=yasakani-cache&amp;action=del_exclude_postid&amp;pid="$pid, "yasakani-cache")\'>Delete</a></td>'' cannot be parsed correct.
HTML code '$'YASAKANI Cache Settings\nClick OK to hard reset cache database'' cannot be parsed correct.
HTML code '$'<div class="grid-row"><div class="summary-hed">'' cannot be parsed correct.
HTML code '$'<div class="filter-opt">'' cannot be parsed correct.
HTML code '$'</span>'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'<tr>'' cannot be parsed correct.
HTML code '$'</tr>'' cannot be parsed correct.
HTML code '$'<input type="text" readonly id="yasakani-logpage" class="tiny-text" value="0" />'' cannot be parsed correct.
HTML code '$'</span>'' cannot be parsed correct.
HTML code '$'<div id="yasakani-cache-select">'' cannot be parsed correct.
HTML code '$'<style>#yasakani-cache-select p { margin: 1em 0;}</style>'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'<div class="grid-row"><div class="summary-hed">'' cannot be parsed correct.
HTML code '$'<div style="background-color: #fbf7dc; margin: 10px 0; padding: 10px;">'' cannot be parsed correct.
HTML code '$'<p>'' cannot be parsed correct.
HTML code '$'</p>'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'<div style="background-color: #fbf7dc; margin-bottom: 16px; padding: 4px;">'' cannot be parsed correct.
HTML code '$'<p>'' cannot be parsed correct.
HTML code '$'</p>'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'<tr>'' cannot be parsed correct.
HTML code '$'</tr>'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:07.323890.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.042562.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 9 do_action/apply_filters calls and 49 add_action/add_filter calls. Now connecting do-add pairs.
Added 2 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:02.057627.

2 PHP_REACHES edges created
2 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbplusDetector
### Start running FrontBaseDetector
### Finish running FileProDetector
### Start running HashDetector
### Finish running FirebirdInterBaseDetector
### Start running IBMDb2Detector
### Finish running DbaseDetector
### Start running InformixDetector
### Finish running CubridDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running MongoDetector
### Start running MsqlDetector
### Finish running IBMDb2Detector
### Start running MySQLDetector
### Finish running ArrayElementDetector
### Start running MySQLiDetector
### Finish running MsqlDetector
### Start running Oci8Detector
### Finish running MySQLDetector
### Start running OpenSSLDetector
### Finish running MongoDbDetector
### Start running ParadoxDetector
### Finish running Oci8Detector
### Start running PasswordHashingDetector
### Finish running ParadoxDetector
### Start running PhpCurlDetector
### Finish running PhpCurlDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running PasswordHashingDetector
### Start running PHPRetrievalDetector
### Finish running HashDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PHPRetrievalDetector
### Start running PhpVarDetector
### Finish running PHPStorageDetector
### Start running PostgreSQLDetector
### Finish running PhpVarDetector
### Start running PropertyDetector
### Finish running maxdbDetector
### Start running Sqlite3Detector
### Finish running PostgreSQLDetector
### Start running SqliteDetector
### Finish running MySQLiDetector
### Start running SqlServerDetector
### Finish running SqliteDetector
### Start running SybaseDetector
### Finish running Sqlite3Detector
### Start running TokyoTyrantDetector
### Finish running PropertyDetector
### Start running UserInputDetector
### Finish running SybaseDetector
### Start running VariableDetector
### Finish running TokyoTyrantDetector
### Start running WordpressHashingFnDetector
### Finish running OpenSSLDetector
### Start running WordPressRemoteDetector
### Finish running SqlServerDetector
### Start running WordPressRetrievalDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressStorageDetector
### Finish running WordPressRemoteDetector
### Start running WP_UserDetector
### Finish running WP_UserDetector
### Start running GenericDatabaseUsageDetector
### Finish running UserInputDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running GenericDatabaseUsageDetector
### Start running UninstallDetector
### Finish running VariableDetector
### Finish running WordPressStorageDetector
### Finish running PHPIncludedDetector
### Finish running WordPressRetrievalDetector
### Finish running DeletionDetector
### Finish running UninstallDetector
### Finished running detectors
addons/yasakani_logstat.php:63
  - Request variable '$_POST["user_email"]' of personal types {'email'} is found.
  - Data types: email
addons/yasakani_logstat.php:64
  - Request variable '$_POST["user_email"]' of personal types {'email'} is found.
  - Data types: email
addons/yasakani_logstat.php:64
  - Request variable '$_POST["user_email"]' of personal types {'email'} is found.
  - Data types: email
addons/yasakani_logstat.php:76
  - Request variable '$_POST["post_password"]' of personal types {'password'} is found.
  - Data types: password
addons/yasakani_logstat.php:77
  - Request variable '$_POST["post_password"]' of personal types {'password'} is found.
  - Data types: password 

addons/yasakani_security.php:264
  - MD5 called with parameters [login_user]. Ignore if [login_user] does not contain personal information.
magatama_lv1.php:407
  - MD5 called with parameters [req_url, urldecode]. Ignore if [req_url, urldecode] does not contain personal information.
magatama_lv1.php:572
  - MD5 called with parameters [key]. Ignore if [key] does not contain personal information.
minify/css-tree-shaking.php:33
  - MD5 called with parameters [style, atname, trim, pref]. Ignore if [style, atname, trim, pref] does not contain personal information.
minify/css-tree-shaking.php:46
  - MD5 called with parameters [trim, sel]. Ignore if [trim, sel] does not contain personal information.
minify/css-tree-shaking.php:79
  - MD5 called with parameters [replace]. Ignore if [replace] does not contain personal information.
minify/css-tree-shaking.php:116
  - MD5 called with parameters [trim, atname, mstyle, pref]. Ignore if [trim, atname, mstyle, pref] does not contain personal information.
minify/css-tree-shaking.php:127
  - MD5 called with parameters [trim, sel]. Ignore if [trim, sel] does not contain personal information.
yasakani-cache.php:398
  - MD5 called with parameters [url]. Ignore if [url] does not contain personal information.
yasakani-cache.php:416
  - MD5 called with parameters [url]. Ignore if [url] does not contain personal information.
yasakani-cache.php:526
  - MD5 called with parameters [req_url, urldecode]. Ignore if [req_url, urldecode] does not contain personal information.
yasakani-cache.php:759
  - MD5 called with parameters [user_login, data, user]. Ignore if [user_login, data, user] does not contain personal information.
yasakani-cache.php:1211
  - MD5 called with parameters [_FILES, yasakani_settings_import, tmp_name]. Ignore if [_FILES, yasakani_settings_import, tmp_name] does not contain personal information. 

minify/minify-utils.php:58
  - RETRIEVAL call to $fh->fread($fh->getSize()).
  - Data types: file
minify/minify-utils.php:200
  - RETRIEVAL call to $fh->fread($fh->getSize()).
  - Data types: file
yasakani-cache.php:1214
  - RETRIEVAL call to $fh->fread($fh->getSize()).
  - Data types: file 

yasakani-cache.php:401
  - STORAGE call to fwrite($ifp, $response["body"]).
  - Data types: file 

yasakani-cache.php:367
  - object property '$post->post_password' of personal types {'password'} is found.
  - Data types: password
yasakani-cache.php:661
  - object property '$post->post_password' of personal types {'password'} is found.
  - Data types: password
yasakani-cache.php:1340
  - object property '$post->post_password' of personal types {'password'} is found.
  - Data types: password 

addons/admin/backend_logstat.php:57
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
magatama_lv1.php:576
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user
magatama_lv1.php:580
  - variable '$username' of personal types {'user_meta', 'user'} is found.
  - Data types: user_meta, user 

addons/admin/backend_logstat.php:916
  - RETRIEVAL call to get_option("yasakani_option", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
addons/admin/backend_logstat.php:1088
  - RETRIEVAL call to get_transient("yasakani_statistics") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
addons/admin/backend_logstat.php:1284
  - RETRIEVAL call to get_post($id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
addons/admin/backend_logstat.php:1290
  - RETRIEVAL call to get_post($id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
yasakani-cache.php:267
  - RETRIEVAL call to get_option("yasakani_option", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).
  - Data types: option
yasakani-cache.php:363
  - RETRIEVAL call to get_post() alters data types {'post_meta', 'post', 'wp_post'}. Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
yasakani-cache.php:551
  - RETRIEVAL call to get_post($postid) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
yasakani-cache.php:665
  - RETRIEVAL call to get_post($post->post_parent) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
yasakani-cache.php:758
  - RETRIEVAL call to get_userdata($user_id) alters data types {'user_meta', 'user'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).
  - Data types: user_meta, user
yasakani-cache.php:921
  - RETRIEVAL call to get_post($post->post_parent) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
yasakani-cache.php:951
  - RETRIEVAL call to get_post($postid) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
yasakani-cache.php:1023
  - RETRIEVAL call to get_comment($comment_ID). Passed arguments: 0: $comment (WP_Comment|string|int). Returns (WP_Comment|array|null).
yasakani-cache.php:1034
  - RETRIEVAL call to get_comment($comment_ID). Passed arguments: 0: $comment (WP_Comment|string|int). Returns (WP_Comment|array|null).
yasakani-cache.php:1404
  - RETRIEVAL call to get_post($pid) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
yasakani-cache.php:1471
  - RETRIEVAL call to get_post($pid) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post
yasakani_option_page.php:98
  - RETRIEVAL call to get_transient("yasakani_notice") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).
  - Data types: site
yasakani_option_page.php:408
  - RETRIEVAL call to get_post($pid) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post_meta, post, wp_post 

addons/admin/backend_logstat.php:918
  - STORAGE call to update_option("yasakani_option", $opt) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
addons/admin/backend_security.php:133
  - STORAGE call to update_option("yasakani_option", self"option") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
addons/admin/backend_security.php:272
  - STORAGE call to update_option("yasakani_option", self"option") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
addons/yasakani_logstat.php:206
  - STORAGE call to set_transient("yasakani_statistics", $statobj->data, DAY_IN_SECONDS * 2) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
yasakani-cache.php:111
  - STORAGE call to delete_option("yasakani_option") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
yasakani-cache.php:118
  - STORAGE call to delete_option("yasakani_option") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
yasakani-cache.php:1151
  - STORAGE call to update_option("yasakani_option", self"option") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
yasakani-cache.php:1162
  - STORAGE call to update_option("yasakani_option", self"option") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
yasakani-cache.php:1255
  - STORAGE call to update_option("yasakani_option", self"option") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
yasakani-cache.php:1467
  - STORAGE call to update_option("yasakani_option", self"option") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
yasakani_option_page.php:94
  - STORAGE call to set_transient("yasakani_notice", $message, MINUTE_IN_SECONDS) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).
  - Data types: site
yasakani_option_page.php:101
  - STORAGE call to delete_transient("yasakani_notice") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).
  - Data types: site 

yasakani-cache.php:111
  - DELETION call to delete_option("yasakani_option") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
yasakani-cache.php:118
  - DELETION call to delete_option("yasakani_option") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

yasakani-cache.php:111
  - Uninstall deletion call: DELETION call to delete_option("yasakani_option") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
yasakani-cache.php:118
  - Uninstall deletion call: DELETION call to delete_option("yasakani_option") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

By data type:
email
	ArrayElementDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
	ArrayElementDetector.(unknown) - {'email'}
file
	PHPRetrievalDetector.$fh->fread($fh->getSize()) - {'file'}
	PHPRetrievalDetector.$fh->fread($fh->getSize()) - {'file'}
	PHPRetrievalDetector.$fh->fread($fh->getSize()) - {'file'}
	PHPStorageDetector.fwrite($ifp, $response["body"]) - {'file'}
none
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	WordPressRetrievalDetector.get_comment($comment_ID) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	PHPIncludedDetector.(unknown) - set()
	WordPressRetrievalDetector.get_comment($comment_ID) - set()
	PHPIncludedDetector.(unknown) - set()
option
	WordPressStorageDetector.update_option("yasakani_option", $opt) - {'option'}
	WordPressStorageDetector.update_option("yasakani_option", self"option") - {'option'}
	WordPressStorageDetector.update_option("yasakani_option", self"option") - {'option'}
	UninstallDetector.delete_option("yasakani_option") - {'option'}
	WordPressRetrievalDetector.get_option("yasakani_option", []) - {'option'}
	UninstallDetector.delete_option("yasakani_option") - {'option'}
	WordPressStorageDetector.delete_option("yasakani_option") - {'option'}
	WordPressStorageDetector.update_option("yasakani_option", self"option") - {'option'}
	WordPressStorageDetector.update_option("yasakani_option", self"option") - {'option'}
	DeletionDetector.delete_option("yasakani_option") - {'option'}
	DeletionDetector.delete_option("yasakani_option") - {'option'}
	WordPressStorageDetector.update_option("yasakani_option", self"option") - {'option'}
	WordPressRetrievalDetector.get_option("yasakani_option", []) - {'option'}
	WordPressStorageDetector.update_option("yasakani_option", self"option") - {'option'}
	WordPressStorageDetector.delete_option("yasakani_option") - {'option'}
password
	PropertyDetector.(unknown) - {'password'}
	PropertyDetector.(unknown) - {'password'}
	ArrayElementDetector.(unknown) - {'password'}
	PropertyDetector.(unknown) - {'password'}
	ArrayElementDetector.(unknown) - {'password'}
post
	WordPressRetrievalDetector.get_post($id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post() - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($pid) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postid) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($post->post_parent) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($post->post_parent) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postid) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($pid) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($pid) - {'post_meta', 'post', 'wp_post'}
post_meta
	WordPressRetrievalDetector.get_post($id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post() - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($pid) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postid) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($post->post_parent) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($post->post_parent) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postid) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($pid) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($pid) - {'post_meta', 'post', 'wp_post'}
site
	WordPressStorageDetector.delete_transient("yasakani_notice") - {'site'}
	WordPressStorageDetector.set_transient("yasakani_notice", $message, MINUTE_IN_SECONDS) - {'site'}
	WordPressRetrievalDetector.get_transient("yasakani_statistics") - {'site'}
	WordPressStorageDetector.set_transient("yasakani_statistics", $statobj->data, DAY_IN_SECONDS * 2) - {'site'}
	WordPressRetrievalDetector.get_transient("yasakani_notice") - {'site'}
user
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_userdata($user_id) - {'user_meta', 'user'}
user_meta
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	VariableDetector.(unknown) - {'user_meta', 'user'}
	WordPressRetrievalDetector.get_userdata($user_id) - {'user_meta', 'user'}
wp_post
	WordPressRetrievalDetector.get_post($id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post() - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($pid) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postid) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($post->post_parent) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($post->post_parent) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($id) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($postid) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($pid) - {'post_meta', 'post', 'wp_post'}
	WordPressRetrievalDetector.get_post($pid) - {'post_meta', 'post', 'wp_post'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:13.607189.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 27 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.212865.

27 STORE_REACHES edges created
27 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
Tainted 560 nodes as PERSONAL
In total, tainted 560 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
Tainted 13 nodes as ENCRYPTED
In total, tainted 13 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:12.392694.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:03:04.525628!
Request variable '$_POST["user_email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["user_email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["user_email"]' of personal types {'email'} is found.,,None
Request variable '$_POST["post_password"]' of personal types {'password'} is found.,,None
Request variable '$_POST["post_password"]' of personal types {'password'} is found.,,None
DELETION call to delete_option("yasakani_option") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("yasakani_option") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
MD5 called with parameters [login_user]. Ignore if [login_user] does not contain personal information.,md5,None
MD5 called with parameters [req_url, urldecode]. Ignore if [req_url, urldecode] does not contain personal information.,md5,None
MD5 called with parameters [key]. Ignore if [key] does not contain personal information.,md5,None
MD5 called with parameters [trim, atname, mstyle, pref]. Ignore if [trim, atname, mstyle, pref] does not contain personal information.,md5,None
MD5 called with parameters [trim, sel]. Ignore if [trim, sel] does not contain personal information.,md5,None
MD5 called with parameters [style, atname, trim, pref]. Ignore if [style, atname, trim, pref] does not contain personal information.,md5,None
MD5 called with parameters [trim, sel]. Ignore if [trim, sel] does not contain personal information.,md5,None
MD5 called with parameters [replace]. Ignore if [replace] does not contain personal information.,md5,None
MD5 called with parameters [_FILES, yasakani_settings_import, tmp_name]. Ignore if [_FILES, yasakani_settings_import, tmp_name] does not contain personal information.,md5,None
MD5 called with parameters [url]. Ignore if [url] does not contain personal information.,md5,None
MD5 called with parameters [url]. Ignore if [url] does not contain personal information.,md5,None
MD5 called with parameters [req_url, urldecode]. Ignore if [req_url, urldecode] does not contain personal information.,md5,None
MD5 called with parameters [user_login, data, user]. Ignore if [user_login, data, user] does not contain personal information.,md5,None
RETRIEVAL call to $fh->fread($fh->getSize()).,None,None
RETRIEVAL call to $fh->fread($fh->getSize()).,None,None
RETRIEVAL call to $fh->fread($fh->getSize()).,None,None
STORAGE call to fwrite($ifp, $response["body"]).,None,None
object property '$post->post_password' of personal types {'password'} is found.,,None
object property '$post->post_password' of personal types {'password'} is found.,,None
object property '$post->post_password' of personal types {'password'} is found.,,None
Uninstall deletion call: DELETION call to delete_option("yasakani_option") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("yasakani_option") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
variable '$username' of personal types {'user_meta', 'user'} is found.,,None
RETRIEVAL call to get_transient("yasakani_statistics") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($id) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("yasakani_option", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_comment($comment_ID). Passed arguments: 0: $comment (WP_Comment|string|int). Returns (WP_Comment|array|null).,None,None
RETRIEVAL call to get_comment($comment_ID). Passed arguments: 0: $comment (WP_Comment|string|int). Returns (WP_Comment|array|null).,None,None
RETRIEVAL call to get_post($pid) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($pid) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_option("yasakani_option", []) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $default (mixed). Returns (mixed).,None,None
RETRIEVAL call to get_post() alters data types {'post_meta', 'post', 'wp_post'}. Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($postid) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($post->post_parent) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_userdata($user_id) alters data types {'user_meta', 'user'}. Passed arguments: 0: $user_id (int). Returns (WP_User|false).,None,None
RETRIEVAL call to get_post($post->post_parent) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($postid) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post($pid) alters data types {'post_meta', 'post', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_transient("yasakani_notice") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (mixed).,None,None
STORAGE call to update_option("yasakani_option", $opt) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("yasakani_option", self"option") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("yasakani_option", self"option") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to set_transient("yasakani_statistics", $statobj->data, DAY_IN_SECONDS * 2) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
STORAGE call to delete_option("yasakani_option") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("yasakani_option", self"option") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("yasakani_option", self"option") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("yasakani_option") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("yasakani_option", self"option") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("yasakani_option", self"option") alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_transient("yasakani_notice") alters data types {'site'}. Passed arguments: 0: $transient (string). Returns (bool).,None,None
STORAGE call to set_transient("yasakani_notice", $message, MINUTE_IN_SECONDS) alters data types {'site'}. Passed arguments: 0: $transient (string), 1: $value (mixed), 2: $expiration (int). Returns (bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found at least one personal data usage in the plugin. Analyzing the plugin. 

[has_storage] PII of types (['user_meta', 'user']) stored through WordPress function "set_transient("yasakani_statistics", $statobj->data, DAY_IN_SECONDS * 2)", found in file addons/yasakani_logstat.php at line 206. 

[has_storage] Storage check is WP 

[Art.17, Right to erasure] Wordpress storage of PII through set_transient("yasakani_statistics", $statobj->data, DAY_IN_SECONDS * 2) does not have corresponding deletion method. Storage method found in file addons/yasakani_logstat.php at line 206. 

[Art.17, Right to erasure] Deletion access is NONE 

[Art.15, Right to access] Data access is not strictly required for wordpress storage at node ID 11736. Found in file addons/yasakani_logstat.php at line 206 

[Art.15, Right to access] Data access is NONE_BUT_NOT_REQUIRED 

[third_party] Third party usage is NONE for data types [] 

[main] Applicable GDPR requirements: ['access', 'deletion', 'encryption', 'third_party'] 

[main] Is deletion in violation? True 

[main] Is access in violation? False 

[main] Is third_party in violation? False 

[main] Is encryption in violation? False 

[main] Complaint? False 


###########
### Q&A ###
###########

1. Why is my plugin in violation against GDPR?

GDPR (https://gdpr-info.eu/) aims to give citizens in the European Union (EU) control over their personal data. If a website collects or store user data, it is required to provide users functionalities to control their data, such as ones to erase or export their data. While a plugin do not directly interact with users, it may provide functionalities that collect or store personal data, which would make websites that deploy the plugin in violation against GDPR if the plugin does not provide corresponding functionalities to allow users control their personal data. Therefore, plugin developers are responsible to provide functions to manage the personal data they handle in accordance with GDPR. We list requirements by specific GDPR articles relevant to your plugin below.


[Art. 13, Information to be provided where personal data are collected from the data subject] If a plugin collects or handles personal data, it needs to provide privacy policy texts that explain what personal data is being collected and for what purpose. The texts are meant to be added to the privacy policy of the websites that deploy the plugin. 


            
[Art.17, Right to erasure] If a plugin stores personal data in a custom database they create or manage, or through Wordpress's native storage functions (e.g., update_user_meta), it needs to provide methods for users to erase the data upon request. Note that deleting data for all users upon uninstallation does not satisfy the requirement. 


            
        

2. How do I make my plugin compliant?

Please refer to the fix report below to see how you can make your plugin comply with GDPR.

        

##################
### Fix Report ###
##################

############################
# Data Deletion Fix Report #
############################

This report suggests fixes to comply with the GDPR Art. 17, Right to erasure (https://gdpr-info.eu/art-17-gdpr/). The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/adding-the-personal-data-eraser-to-your-plugin/ for more details.

1) Implement a function that deletes all the user data collected in the plugin. Sample code:


/**
* Removes all collected data of a user.
*
* @param string $email_address   email address to manipulate
* @param int    $page            pagination
*
* @return array
*/
function yasakani-cache_remove_data( $email_address, $page = 1 ) {
    
    $page = (int) $page;


    //TODO: Delete the user data that was stored using Wordpress functions

    //Below is the sample code for deleting user meta and may need to be modified to suit the plugin.
    $user_id = get_user_by('email', $email_address)
    $key = 'email' //Sample user meta key
    if ( $customer->user_id > 0 ) {
        //Delete user meta data by $key
        delete_user_meta( $user_id, $key );
    }
        



    // Tell core if we have more data to delete still
    $done = true;
    return array(
        'items_removed'  => $items_removed, // true if collected data of a user is being deleted
        'items_retained' => $items_retained, // true if certain data needs to be retained
        'messages'       => sprintf( __( 'Data of user with email %s successfully deleted.', 'yasakani-cache' ), $email_address ), // Put messages for data removal
        'done'           => $done, // true if all the removal processes are done (all data of the user is removed)
    );
}
        

2) Hook the deletion function to the Wordpress's Personal Data Removal tool


/**
* Registers all data erasers.
*
* @param array $exporters
*
* @return mixed
*/
function yasakani-cache_register_privacy_erasers( $erasers ) {
    $erasers['my-plugin-slug'] = array(
        'eraser_friendly_name' => __( '<eraser name>', 'yasakani-cache' ),
        'callback'             => 'yasakani-cache_remove_data',
    );
    return $erasers;
}
        

add_filter( 'wp_privacy_personal_data_erasers', 'yasakani-cache_register_privacy_erasers' );
        

        

#############################
# Privacy Policy Fix Report #
#############################

This report suggests fixes to comply with the GDPR Art. 13 (https://gdpr-info.eu/art-13-gdpr/) through including a privacy notice. The report
is based on guidelines provided by Wordpress. Refer to https://developer.wordpress.org/plugins/privacy/suggesting-text-for-the-site-privacy-policy/ for more details.

1) Implement a function that includes the privacy policy for the plugin and provide it to wordpress through wp_add_privacy_policy_content(). Sample code:


/**
* Adds a privacy policy statement.
*/
function yasakani-cache_add_privacy_policy_content() {
    if ( ! function_exists( 'wp_add_privacy_policy_content' ) ) {
        return;
    }
    //TODO: modify the content below to include the privacy policy for the plugin.
    $content = '<p class="privacy-policy-tutorial">' . __( 'Some introductory content for the suggested text.', 'yasakani-cache' ) . '</p>'
            . '<strong class="privacy-policy-tutorial">' . __( 'Suggested Text:', 'yasakani-cache' ) . '</strong> '
            . sprintf(
                __( 'When you leave a comment on this site, we send your name, email address, IP address and comment text to example.com. Example.com does not retain your personal data. The example.com privacy policy is <a href="%1$s" target="_blank">here</a>.', 'yasakani-cache' ),
                'https://example.com/privacy-policy'
            );
    wp_add_privacy_policy_content( 'yasakani-cache', wp_kses_post( wpautop( $content, false ) ) );
}
        

2) Hook the privacy policy function to the Wordpress's admin initialization action.


add_action( 'admin_init', 'yasakani-cache_add_privacy_policy_content' );
        

        


Disclaimer: The sample code provided above is only for reference and does not guarantee GDPR compliance. The recommended list of data to delete/export may not be comprehensive. 
        
Done.
