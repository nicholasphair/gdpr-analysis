Timeout in resolving values
Timeout in running neo4j query
Running Main.py on bootstrap-multi-language-responsive-portfolio

###########################
### Preprocessing stage ###
###########################
### Starting preproccessing!
Registering plugin to plugin database... Plugin registration done
╔[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) begin.
╚[1] Preprocessing step "Add AST_JS label to JS nodes" (__label_js_nodes) finished successfully in 0:00:01.339724.

0 edges imported to Neo4j
Preprocessing step 0 done!
╔[2] Preprocessing step "Create DB indices" (__create_indices) begin.
Creating indices for commonly used features... done.
╚[2] Preprocessing step "Create DB indices" (__create_indices) finished successfully in 0:00:01.083746.

0 edges imported to Neo4j
Preprocessing step 1 done!
Analzying PHP class hierarchy...
Start filling class hierarchy information
Finished filling class hierarchy information
Start filling function information
Finished filling function information
0 edges imported to Neo4j
Preprocessing step 2 done!
╔[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) begin.
Added 0 PHP_REACHES edges.
╚[3] Preprocessing step "connect data flows for class properties" (__handle_class_properties) finished successfully in 0:00:00.216501.

╔[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) begin.
Added 2 REACHES edges for AST_PARAM to variables
╚[4] Preprocessing step "Connect AST_PARAM edges" (__connect_ASTPARAM_to_var) finished successfully in 0:00:00.595704.

╔[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) begin.
Added 475 :PHP_REACHES for original :REACHES edges.
╚[5] Preprocessing step "Create PHP_REACHES edges" (__php_reach_edges) finished successfully in 0:00:00.797665.

╔[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) begin.
Added 0 CALLS edges.
╚[6] Preprocessing step "Create parent-to-self edges" (__parent_self_edges) finished successfully in 0:00:00.715748.

╔[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) begin.
╚[7] Preprocessing step "Connect data flows for class constants" (__class_constant_hierarchy) finished successfully in 0:00:00.095820.

╔[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) begin.
Added 264 PHP_REACHES edges.
╚[8] Preprocessing step "Create AST assign hierarchy PHP_REACHES edges" (__ast_assign_function_edges) finished successfully in 0:00:06.245321.

╔[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) begin.
Building hierarchical edges for PHP...
Number of rows: 3886
Added 3145 PHP_REACHES edges. 
Building hierarchical edges for JS...
Number of rows: 14319
Added 10433 JS_REACHES edges. 
╚[9] Preprocessing step "Build hierarchical data flow edges for php and js" (__build_php_js_hierarchical_edges) finished successfully in 0:00:02.182155.

╔[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) begin.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/bootstrap-multi-language-responsive-portfolio/content-portfolio.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/bootstrap-multi-language-responsive-portfolio/content-single-portfolio.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/bootstrap-multi-language-responsive-portfolio/portfolio.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/bootstrap-multi-language-responsive-portfolio/portfolio-shortcode.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/bootstrap-multi-language-responsive-portfolio/single-portfolio.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/bootstrap-multi-language-responsive-portfolio/taxonomy-portfolio-types.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/bootstrap-multi-language-responsive-portfolio/template-portfolio.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/bootstrap-multi-language-responsive-portfolio/widget-featured-recent-posts.php' cannot be parsed correct.
HTML code from file '/home/ec2-user/GDPR-CCPA-violation-checker/navex_docker/tempApp/bootstrap-multi-language-responsive-portfolio/wpt-posttype-portfolio.php' cannot be parsed correct.
╚[10] Preprocessing step "Building HTML ASTs" (__build_html_ast) finished successfully in 0:00:00.797636.

2 REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
3884 PHP_REACHES edges created
1000 PHP_REACHES edges created
2000 PHP_REACHES edges created
3000 PHP_REACHES edges created
4000 PHP_REACHES edges created
5000 PHP_REACHES edges created
6000 PHP_REACHES edges created
7000 PHP_REACHES edges created
8000 PHP_REACHES edges created
9000 PHP_REACHES edges created
10000 PHP_REACHES edges created
10433 PHP_REACHES edges created
14319 edges imported to Neo4j
Preprocessing step 3 done!
╔[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) begin.
Deleted 1243 incorrect PHP_REACHES edges. Deleted 0 incorrect JS_REACHES edges.
╚[11] Preprocessing step "Remove wrong/excessive hierarchical edges" (__remove_wrong_hierarchical_edges) finished successfully in 0:00:01.080857.

0 edges imported to Neo4j
Preprocessing step 4 done!
╔[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[12] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:02.603997.

╔[13] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 1 PHP_REACHES edges to function parameters.
╚[13] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.287177.

╔[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 2 PHP_REACHES edges.
╚[14] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.160159.

╔[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) begin.
Added 0 CALLS edges.
╚[15] Preprocessing step "Handle class hierarchy and make CALLS edges and certain data flows" (__handle_class_hierarchy) finished successfully in 0:00:00.806594.

╔[16] Preprocessing step "Create function call edges" (__function_call_edges) begin.
Added 0 PHP_REACHES edges to function parameters.
╚[16] Preprocessing step "Create function call edges" (__function_call_edges) finished successfully in 0:00:00.023770.

╔[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) begin.
Added 0 PHP_REACHES edges.
╚[17] Preprocessing step "Create PHP_REACHES edges between function returns and callers" (__ast_call_return_edges) finished successfully in 0:00:00.007772.

╔[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) begin.
Added 0 HTML_TO_PHP_REACHES edges. Successfully connect 0 out of 0 inputs to PHP. 
╚[18] Preprocessing step "Create HTML_TO_PHP_REACHES edges between form inputs and PHP request vars" (__html_to_php_reaches) finished successfully in 0:00:00.033335.

3 PHP_REACHES edges created
3 edges imported to Neo4j
Preprocessing step 5 done!
╔[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) begin.
Deleted 2 PHP_REACHES edges that overtaint function call data flows.
╚[19] Preprocessing step "Overtaint Function Calls" (__overtaintFunctionCalls) finished successfully in 0:00:00.098384.

0 edges imported to Neo4j
Preprocessing step 6 done!
╔[20] Preprocessing step "Create SQL AST" (__add_sql_ast) begin.
6 SQL operations to process.

						SELECT meta.meta_value FROM $wpdb as meta 
						LEFT JOIN $wpdb AS posts ON (posts.ID=meta.post_id) 
						WHERE meta.meta_key = 'client' 
						AND posts.post_type = 'portfolio'
						ORDER BY meta.meta_value 
					
SQL command ( SELECT meta.meta_value FROM $wpdb as meta LEFT JOIN $wpdb AS posts ON (posts.ID=meta.post_id) WHERE meta.meta_key = 'client' AND posts.post_type = 'portfolio' ORDER BY meta.meta_value ) cannot be parsed correct.
{"post_type": "portfolio", "posts_per_page": "get_option(\"portfolio_post_count\")", "paged": "get_query_var(\"paged\")", "order": "get_option(\"portfolio_order\")", "orderby": "get_option(\"portfolio_order_by\")"}
SQL command ({"post_type": "portfolio", "posts_per_page": "get_option(\"portfolio_post_count\")", "paged": "get_query_var(\"paged\")", "order": "get_option(\"portfolio_order\")", "orderby": "get_option(\"portfolio_order_by\")"}) cannot be parsed correct.
array_merge($args, $qstring_array)
SQL command (array_merge($args, $qstring_array)) cannot be parsed correct.
The following function calls could not successfully be analyzed for SQL content: [6619, 1029, 1035, 946, 3083, 2646]
Added 0 SQL nodes. 0 out of 6 calls were analyzed successfully.
╚[20] Preprocessing step "Create SQL AST" (__add_sql_ast) finished successfully in 0:00:02.154672.

╔[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) begin.
HTML code '$'col-xs-6 col-sm-6 col-md-6 effect-apollo two-col'' cannot be parsed correct.
HTML code '$'wp_get_attachment_image_src(get_post_thumbnail_id($id), "portfolio-listing")_0'' cannot be parsed correct.
HTML code '$'WPT_PLUGIN_URLimages/no-img-portfolio-480x360.jpg'' cannot be parsed correct.
HTML code '$'WPT_PLUGIN_URLimages/no-img-portfolio-480x360.jpg'' cannot be parsed correct.
HTML code '$'WPT_PLUGIN_URLimages/no-img-portfolio-480x360.jpg'' cannot be parsed correct.
HTML code '$'<h3>explode(" ", $full_title, 2)_0</h3>'' cannot be parsed correct.
HTML code '$'<h3>explode(" ", $full_title, 2)_0<span>explode(" ", $full_title, 2)_1</span> </h3>'' cannot be parsed correct.
HTML code '$'<li data-target="#myCarousel" data-slide-to="0" class=""></li'' cannot be parsed correct.
HTML code '$'<div class="item"'' cannot be parsed correct.
HTML code '$'<img src=wp_get_attachment_image_src($portfolio_slider_image_id, "large")_0" alt="get_the_title()" /'' cannot be parsed correct.
HTML code '$'<img src=WPT_PLUGIN_URLimages/no-img-portfolio.jpg" alt="get_the_title()" /'' cannot be parsed correct.
HTML code '$'<li><a class="prev_page" href="get_pagenum_link($current - 1)"&lsaquo;</a></li>'' cannot be parsed correct.
HTML code '$'<a href=get_pagenum_link($i)"1</a>&nbsp;'' cannot be parsed correct.
HTML code '$'<a href=get_pagenum_link($i)"1</a>&nbsp;'' cannot be parsed correct.
HTML code '$'<li><a class="next_page" href="get_pagenum_link($page + 1)"&rsaquo;</a></li>'' cannot be parsed correct.
HTML code '$'<h4 class="title"><strong>explode(" ", $full_title, 2)_0</strong></h4>'' cannot be parsed correct.
HTML code '$'<h4 class="title"><strong>explode(" ", $full_title, 2)_0</strong>explode(" ", $full_title, 2)_1</h4>'' cannot be parsed correct.
HTML code '$'the_content()'' cannot be parsed correct.
HTML code '$'get_post_meta(get_the_ID(), "client", true)'' cannot be parsed correct.
HTML code '$'get_the_date()'' cannot be parsed correct.
HTML code '$'$skill_name_1'' cannot be parsed correct.
HTML code '$'get_post_meta(get_the_ID(), "url", true)'' cannot be parsed correct.
HTML code '$'get_post_meta(get_the_ID(), "url_text", true)'' cannot be parsed correct.
HTML code '$'urlencode(the_permalink("", "", false))'' cannot be parsed correct.
HTML code '$'strip_tags($post->post_title)'' cannot be parsed correct.
HTML code '$'urlencode(the_permalink("", "", false))'' cannot be parsed correct.
HTML code '$'strip_tags($post->post_title)'' cannot be parsed correct.
HTML code '$'urlencode(the_permalink("", "", false))'' cannot be parsed correct.
HTML code '$'urlencode(the_permalink("", "", false))'' cannot be parsed correct.
HTML code '$'get_the_permalink(get_the_ID())'' cannot be parsed correct.
HTML code '$'strip_tags($post->post_title)'' cannot be parsed correct.
HTML code '$'<article class=col-xs-12 col-sm-3 col-md-3"'' cannot be parsed correct.
HTML code '$'$before_widget'' cannot be parsed correct.
HTML code '$'$before_titleapply_filters("widget_title", $instance["title"], $instance, $this->id_base)$after_title'' cannot be parsed correct.
HTML code '$'$after_widget'' cannot be parsed correct.
HTML code '$'$this->get_field_id("title")'' cannot be parsed correct.
HTML code '$'$this->get_field_id("title")'' cannot be parsed correct.
HTML code '$'$this->get_field_name("title")'' cannot be parsed correct.
HTML code '$'$title'' cannot be parsed correct.
HTML code '$'$this->get_field_id("count")'' cannot be parsed correct.
HTML code '$'$this->get_field_id("count")'' cannot be parsed correct.
HTML code '$'$this->get_field_name("count")'' cannot be parsed correct.
HTML code '$'<article class=col-xs-12 col-sm-9 col-md-9"'' cannot be parsed correct.
HTML code '$'<article class=col-xs-12 col-sm-3 col-md-3 pull-left"'' cannot be parsed correct.
HTML code '$'apply_filters("the_title", $post->post_title)'' cannot be parsed correct.
HTML code '$'apply_filters("the_content", $post->post_content)'' cannot be parsed correct.
HTML code '$'<article class=col-xs-12 col-sm-9 col-md-9"'' cannot be parsed correct.
HTML code '$'<a rel="*" href="get_page_link($portfolio_page_id)" class="nav-all">All</a>'' cannot be parsed correct.
HTML code '$'<a href=get_term_link($category)" class="nav-all current">$category <span>($category)</span></a>'' cannot be parsed correct.
HTML code '$'<a href=get_term_link($category)" class="nav-all">$category <span>($category)</span></a>'' cannot be parsed correct.
HTML code '$'<article class=col-xs-12 col-sm-3 col-md-3 pull-left"'' cannot be parsed correct.
HTML code '$'apply_filters("the_title", $post->post_title)'' cannot be parsed correct.
HTML code '$'apply_filters("the_content", $post->post_content)'' cannot be parsed correct.
HTML code '$'<article class=col-xs-12 col-sm-9 col-md-9 pull-right"'' cannot be parsed correct.
HTML code '$'<a rel="*" href="get_page_link($post_id)" class="nav-all current">All</a>'' cannot be parsed correct.
HTML code '$'<a href=get_term_link($category)" class="nav-all">$category <span>($category)</span></a>'' cannot be parsed correct.
HTML code '$'$count'' cannot be parsed correct.
HTML code '$'WPT_PLUGIN_URLimages/two-column.png'' cannot be parsed correct.
HTML code '$'WPT_PLUGIN_URLimages/three-column.png'' cannot be parsed correct.
HTML code '$'WPT_PLUGIN_URLimages/four-column.png'' cannot be parsed correct.
HTML code '$'<option value=$pageselected($wpt_sel_portfolio_page_id, $page->ID, false)>$page</option>'' cannot be parsed correct.
HTML code '$'inline-block'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'get_post_custom($post->ID)'' cannot be parsed correct.
HTML code '$'get_post_custom($post->ID)'' cannot be parsed correct.
HTML code '$'get_post_custom($post->ID)'' cannot be parsed correct.
HTML code '$'get_post_custom($post->ID)'' cannot be parsed correct.
HTML code '$'wp_create_nonce("porftolio-nonce")'' cannot be parsed correct.
HTML code '$'get_the_post_thumbnail($post->ID, "portfolio-admin-thumbnail")'' cannot be parsed correct.
HTML code '$'<img src=WPT_PLUGIN_URLimages/no-img-portfolio.jpg" alt="" style="width:100px;height:75px;"/>'' cannot be parsed correct.
HTML code '$'get_post_meta($post->ID, "client", true)'' cannot be parsed correct.
HTML code '$'<select name=\'$tax_slug\' id=\'$tax_slug\' class=\'postform\'>'' cannot be parsed correct.
HTML code '$'<option value=\'\'>$tax_slug</option>'' cannot be parsed correct.
HTML code '$'<option value=$term'' cannot be parsed correct.
HTML code '$' selected="selected"'' cannot be parsed correct.
HTML code '$'>$term ($term)</option>'' cannot be parsed correct.
HTML code '$'$client'' cannot be parsed correct.
HTML code '$'$client'' cannot be parsed correct.
HTML code '$'<li class="post-count portfolio-count"><a href=\'edit.php?post_type=portfolio\'>number_format_i18n($num_posts->publish) _n("Portfolio Item", "Portfolio Items", intval($num_posts->publish))</a></li>'' cannot be parsed correct.
HTML code '$'0'' cannot be parsed correct.
HTML code '$'none'' cannot be parsed correct.
HTML code '$'wp_get_attachment_image_src($portfolio_upload_attach_id, "thumbnail")_0'' cannot be parsed correct.
HTML code '$'get_post_custom($post->ID)'' cannot be parsed correct.
HTML code '$'<li class="post-count portfolio-count"><a href=\'edit.php?post_type=portfolio\'>number_format_i18n($num_posts->publish) _n("Portfolio Item", "Portfolio Items", intval($num_posts->publish))</a></li>'' cannot be parsed correct.
HTML code '$'</a>
        </figcaption>
</figure>                   '' cannot be parsed correct.
HTML code '$'<ol class="carousel-indicators">'' cannot be parsed correct.
HTML code '$'</ol>'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'<li class="active">'' cannot be parsed correct.
HTML code '$'</li>'' cannot be parsed correct.
HTML code '$'<li>'' cannot be parsed correct.
HTML code '$'</li>'' cannot be parsed correct.
HTML code '$'<span class="page">...</span>&nbsp;'' cannot be parsed correct.
HTML code '$', '' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'<div class="grid">'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'<article class="col-xs-12 col-sm-12 col-md-12 text-right">'' cannot be parsed correct.
HTML code '$'<ul class="pagination">'' cannot be parsed correct.
HTML code '$'</ul>'' cannot be parsed correct.
HTML code '$'</article>'' cannot be parsed correct.
HTML code '$'</article>'' cannot be parsed correct.
HTML code '$'<aside>'' cannot be parsed correct.
HTML code '$'<div class="sidebar">'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'</aside>'' cannot be parsed correct.
HTML code '$'</article>'' cannot be parsed correct.
HTML code '$'</article>'' cannot be parsed correct.
HTML code '$'<aside>'' cannot be parsed correct.
HTML code '$'<div class="sidebar">'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'</aside>'' cannot be parsed correct.
HTML code '$'</article>'' cannot be parsed correct.
HTML code '$'<div class="portfolioFilter">'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'<div class="grid">'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'<article class="col-xs-12 col-sm-12 col-md-12 text-right">'' cannot be parsed correct.
HTML code '$'<ul class="pagination">'' cannot be parsed correct.
HTML code '$'</ul>'' cannot be parsed correct.
HTML code '$'</article>'' cannot be parsed correct.
HTML code '$'</article>'' cannot be parsed correct.
HTML code '$'<aside>'' cannot be parsed correct.
HTML code '$'<div class="sidebar">'' cannot be parsed correct.
HTML code '$'</div>'' cannot be parsed correct.
HTML code '$'</aside>'' cannot be parsed correct.
HTML code '$'</article>'' cannot be parsed correct.
HTML code '$'<div class="portfolioFilter">'' cannot be parsed correct.
HTML code '$'</option>
									'' cannot be parsed correct.
HTML code '$'" />
				    </p> 
				    
				    <tr>
				    
				    	<td colspan="3" align="center">
				    	<p><strong>'' cannot be parsed correct.
HTML code '$'</select>'' cannot be parsed correct.
HTML code '$'	        </label>
  
           
		'' cannot be parsed correct.
HTML code '$';">
							  <img src="'' cannot be parsed correct.
╚[21] Preprocessing step "Build HTML AST for HTML embedded in PHP code (HTML to PHP traversal)" (__build_html_ast_in_php) finished successfully in 0:00:14.681528.

╔[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) begin.
Successfully connected PHP to HTML ASTs in 0 out of 0 files. Added 0 PHP_TO_HTML_REACHES edges.
╚[22] Preprocessing step "Connect HTML AST and PHP AST trees (PHP to HTML traversal)" (__connect_html_php_ast) finished successfully in 0:00:00.059196.

╔[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) begin.
Found 7 do_action/apply_filters calls and 19 add_action/add_filter calls. Now connecting do-add pairs.
Added 0 :PHP_REACHES edges.
╚[23] Preprocessing step "Create do_action and apply_filter edges" (__do_action_to_function) finished successfully in 0:00:01.113707.

0 edges imported to Neo4j
Preprocessing step 7 done!
╔[24] Preprocessing step "Security/storage detectors" (__security_detectors) begin.
### Running detectors
### Start running ArrayElementDetector
### Start running CubridDetector
### Start running DbaseDetector
### Start running DbplusDetector
### Start running DefuseDetector
### Finish running DefuseDetector
### Start running FileProDetector
### Start running FirebirdInterBaseDetector
### Finish running DbplusDetector
### Start running FrontBaseDetector
### Finish running DbaseDetector
### Start running HashDetector
### Finish running FileProDetector
### Start running IBMDb2Detector
### Finish running FirebirdInterBaseDetector
### Start running InformixDetector
### Finish running CubridDetector
### Start running IngresDetector
### Finish running FrontBaseDetector
### Start running maxdbDetector
### Finish running InformixDetector
### Start running MongoDbDetector
### Finish running IngresDetector
### Start running MongoDetector
### Finish running IBMDb2Detector
### Start running MsqlDetector
### Finish running MongoDetector
### Start running MySQLDetector
### Finish running HashDetector
### Start running MySQLiDetector
### Finish running MsqlDetector
### Start running Oci8Detector
### Finish running MySQLDetector
### Start running OpenSSLDetector
### Finish running MongoDbDetector
### Start running ParadoxDetector
### Finish running Oci8Detector
### Start running PasswordHashingDetector
### Finish running ArrayElementDetector
### Start running PhpCurlDetector
### Finish running OpenSSLDetector
### Start running PHPDataObjectDetector
### Finish running PHPDataObjectDetector
### Start running PHPIncludedDetector
### Finish running ParadoxDetector
### Start running PHPRetrievalDetector
### Finish running PhpCurlDetector
### Start running PHPSecLibDetector
### Finish running PHPSecLibDetector
### Start running PHPStorageDetector
### Finish running PasswordHashingDetector
### Start running PhpVarDetector
### Finish running PHPIncludedDetector
### Start running PostgreSQLDetector
### Finish running PHPRetrievalDetector
### Start running PropertyDetector
### Finish running PHPStorageDetector
### Start running Sqlite3Detector
### Finish running PhpVarDetector
### Start running SqliteDetector
### Finish running PostgreSQLDetector
### Start running SqlServerDetector
### Finish running SqliteDetector
### Start running SybaseDetector
### Finish running PropertyDetector
### Start running TokyoTyrantDetector
### Finish running Sqlite3Detector
### Start running UserInputDetector
### Finish running SybaseDetector
### Start running VariableDetector
### Finish running TokyoTyrantDetector
### Start running WordpressHashingFnDetector
### Finish running SqlServerDetector
### Start running WordPressRemoteDetector
### Finish running WordpressHashingFnDetector
### Start running WordPressRetrievalDetector
### Finish running WordPressRemoteDetector
### Start running WordPressStorageDetector
### Finish running VariableDetector
### Start running WP_UserDetector
### Finish running UserInputDetector
### Start running GenericDatabaseUsageDetector
### Finish running WP_UserDetector
### Start running GenericEncryptionDetector
### Finish running GenericEncryptionDetector
### Start running DeletionDetector
### Finish running GenericDatabaseUsageDetector
### Start running UninstallDetector
### Finish running maxdbDetector
### Finish running MySQLiDetector
### Finish running DeletionDetector
### Finish running UninstallDetector
### Finish running WordPressRetrievalDetector
### Finish running WordPressStorageDetector
### Finished running detectors
content-portfolio.php:9
  - RETRIEVAL call to get_option("portfolio_layout") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
content-single-portfolio.php:8
  - RETRIEVAL call to get_post_meta(get_the_ID(), "client", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
content-single-portfolio.php:9
  - RETRIEVAL call to get_post_meta(get_the_ID(), "url", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
content-single-portfolio.php:10
  - RETRIEVAL call to get_post_meta(get_the_ID(), "url_text", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
content-single-portfolio.php:13
  - RETRIEVAL call to get_post_meta(get_the_ID(), "image_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
content-single-portfolio.php:49
  - RETRIEVAL call to get_post_meta(get_the_ID(), "imagebox" . $i, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
portfolio-shortcode.php:27
  - RETRIEVAL call to get_option("portfolio_title") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
portfolio-shortcode.php:31
  - RETRIEVAL call to get_option("portfolio_content") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
portfolio.php:143
  - RETRIEVAL call to get_option("portfolio-page") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
single-portfolio.php:14
  - RETRIEVAL call to get_post_meta($post_id, "Layout", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
taxonomy-portfolio-types.php:12
  - RETRIEVAL call to get_option("portfolio_post_count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
taxonomy-portfolio-types.php:13
  - RETRIEVAL call to get_option("portfolio_order") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
taxonomy-portfolio-types.php:14
  - RETRIEVAL call to get_option("portfolio_order_by") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
taxonomy-portfolio-types.php:17
  - RETRIEVAL call to get_option("portfolio-page") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
taxonomy-portfolio-types.php:18
  - RETRIEVAL call to get_post($wpt_page_id) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, post_meta, wp_post
taxonomy-portfolio-types.php:22
  - RETRIEVAL call to get_post_meta($post_id, "Layout", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
taxonomy-portfolio-types.php:68
  - RETRIEVAL call to get_option("portfolio-page") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
template-portfolio.php:14
  - RETRIEVAL call to get_option("portfolio_post_count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
template-portfolio.php:15
  - RETRIEVAL call to get_option("portfolio_order") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
template-portfolio.php:16
  - RETRIEVAL call to get_option("portfolio_order_by") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
template-portfolio.php:18
  - RETRIEVAL call to get_option("portfolio-page") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
template-portfolio.php:19
  - RETRIEVAL call to get_post($wpt_page_id) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).
  - Data types: post, post_meta, wp_post
template-portfolio.php:24
  - RETRIEVAL call to get_post_meta($post_id, "Layout", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta
wpt-posttype-portfolio.php:310
  - RETRIEVAL call to get_option("portfolio-page") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wpt-posttype-portfolio.php:320
  - RETRIEVAL call to get_option("portfolio_post_count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wpt-posttype-portfolio.php:332
  - RETRIEVAL call to get_option("portfolio_layout") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wpt-posttype-portfolio.php:365
  - RETRIEVAL call to get_option("portfolio_order_by") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wpt-posttype-portfolio.php:382
  - RETRIEVAL call to get_option("portfolio_order") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wpt-posttype-portfolio.php:402
  - RETRIEVAL call to get_option("portfolio_title") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wpt-posttype-portfolio.php:417
  - RETRIEVAL call to get_option("portfolio_content") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).
  - Data types: option
wpt-posttype-portfolio.php:475
  - RETRIEVAL call to get_post_custom($post->ID). Passed arguments: 0: $post_id (int). Returns (array).
wpt-posttype-portfolio.php:510
  - RETRIEVAL call to get_post_meta($post->ID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int). Returns (mixed).
  - Data types: post_meta
wpt-posttype-portfolio.php:525
  - RETRIEVAL call to get_post_custom($post->ID). Passed arguments: 0: $post_id (int). Returns (array).
wpt-posttype-portfolio.php:648
  - RETRIEVAL call to get_post_meta($post->ID, "client", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).
  - Data types: post_meta 

portfolio.php:62
  - STORAGE call to add_option("portfolio-page", "Project", "", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).
  - Data types: option
portfolio.php:63
  - STORAGE call to add_option("portfolio_title", "Portfolio", "", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).
  - Data types: option
portfolio.php:64
  - STORAGE call to add_option("portfolio_content", "Lorem ipsum dolor sit amet, consectetur adipiscing elit.", "", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).
  - Data types: option
portfolio.php:65
  - STORAGE call to add_option("portfolio_post_count", "8", "", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).
  - Data types: option
portfolio.php:66
  - STORAGE call to add_option("portfolio_layout", "2col", "", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).
  - Data types: option
portfolio.php:67
  - STORAGE call to add_option("portfolio_order_by", "title", "", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).
  - Data types: option
portfolio.php:68
  - STORAGE call to add_option("portfolio_order", "ASC", "", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).
  - Data types: option
portfolio.php:85
  - STORAGE call to delete_option("portfolio_title") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
portfolio.php:86
  - STORAGE call to delete_option("portfolio_content") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
portfolio.php:87
  - STORAGE call to delete_option("portfolio_post_count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
portfolio.php:88
  - STORAGE call to delete_option("portfolio_layout") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
portfolio.php:89
  - STORAGE call to delete_option("portfolio_order_by") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
portfolio.php:90
  - STORAGE call to delete_option("portfolio_order") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
portfolio.php:91
  - STORAGE call to delete_option("portfolio_order") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
portfolio.php:92
  - STORAGE call to delete_option("portfolio-page") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
wpt-posttype-portfolio.php:264
  - STORAGE call to update_option("portfolio-page", $_POST["portfolio-page"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
wpt-posttype-portfolio.php:267
  - STORAGE call to update_option("portfolio_feature_post", $portfolio_feature_post) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
wpt-posttype-portfolio.php:270
  - STORAGE call to update_option("portfolio_title", $portfolio_title) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
wpt-posttype-portfolio.php:273
  - STORAGE call to update_option("portfolio_content", $portfolio_content) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
wpt-posttype-portfolio.php:276
  - STORAGE call to update_option("portfolio_post_count", $portfolio_post_count) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
wpt-posttype-portfolio.php:279
  - STORAGE call to update_option("portfolio_layout", $portfolio_layout) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
wpt-posttype-portfolio.php:282
  - STORAGE call to update_option("portfolio_order_by", $portfolio_order_by) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
wpt-posttype-portfolio.php:285
  - STORAGE call to update_option("portfolio_order", $portfolio_order) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).
  - Data types: option
wpt-posttype-portfolio.php:593
  - STORAGE call to update_post_meta($post->ID, "client", $_POST["client"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wpt-posttype-portfolio.php:594
  - STORAGE call to update_post_meta($post->ID, "url_text", $_POST["url_text"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wpt-posttype-portfolio.php:595
  - STORAGE call to update_post_meta($post->ID, "url", $_POST["url"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wpt-posttype-portfolio.php:598
  - STORAGE call to update_post_meta($post_id, "featured-checkbox", "yes") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wpt-posttype-portfolio.php:600
  - STORAGE call to update_post_meta($post_id, "featured-checkbox", "no") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wpt-posttype-portfolio.php:606
  - STORAGE call to update_post_meta($post_id, "image_id", $_POST["image_id"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta
wpt-posttype-portfolio.php:611
  - STORAGE call to update_post_meta($post_id, "imagebox" . $i, $_POST["slider_upload_image"][$i]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).
  - Data types: post_meta 

portfolio.php:85
  - DELETION call to delete_option("portfolio_title") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
portfolio.php:86
  - DELETION call to delete_option("portfolio_content") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
portfolio.php:87
  - DELETION call to delete_option("portfolio_post_count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
portfolio.php:88
  - DELETION call to delete_option("portfolio_layout") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
portfolio.php:89
  - DELETION call to delete_option("portfolio_order_by") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
portfolio.php:90
  - DELETION call to delete_option("portfolio_order") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
portfolio.php:91
  - DELETION call to delete_option("portfolio_order") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
portfolio.php:92
  - DELETION call to delete_option("portfolio-page") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

portfolio.php:85
  - Uninstall deletion call: DELETION call to delete_option("portfolio_title") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
portfolio.php:86
  - Uninstall deletion call: DELETION call to delete_option("portfolio_content") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
portfolio.php:87
  - Uninstall deletion call: DELETION call to delete_option("portfolio_post_count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
portfolio.php:88
  - Uninstall deletion call: DELETION call to delete_option("portfolio_layout") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
portfolio.php:89
  - Uninstall deletion call: DELETION call to delete_option("portfolio_order_by") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
portfolio.php:90
  - Uninstall deletion call: DELETION call to delete_option("portfolio_order") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
portfolio.php:91
  - Uninstall deletion call: DELETION call to delete_option("portfolio_order") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option
portfolio.php:92
  - Uninstall deletion call: DELETION call to delete_option("portfolio-page") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).
  - Data types: option 

By data type:
none
	WordPressRetrievalDetector.get_post_custom($post->ID) - set()
	WordPressRetrievalDetector.get_post_custom($post->ID) - set()
option
	WordPressRetrievalDetector.get_option("portfolio_content") - {'option'}
	WordPressStorageDetector.delete_option("portfolio_order") - {'option'}
	UninstallDetector.delete_option("portfolio_order") - {'option'}
	WordPressStorageDetector.delete_option("portfolio_post_count") - {'option'}
	WordPressStorageDetector.update_option("portfolio_order_by", $portfolio_order_by) - {'option'}
	DeletionDetector.delete_option("portfolio-page") - {'option'}
	WordPressRetrievalDetector.get_option("portfolio-page") - {'option'}
	WordPressStorageDetector.delete_option("portfolio_title") - {'option'}
	WordPressStorageDetector.update_option("portfolio_title", $portfolio_title) - {'option'}
	WordPressRetrievalDetector.get_option("portfolio_title") - {'option'}
	UninstallDetector.delete_option("portfolio_layout") - {'option'}
	WordPressRetrievalDetector.get_option("portfolio-page") - {'option'}
	WordPressStorageDetector.delete_option("portfolio_content") - {'option'}
	WordPressRetrievalDetector.get_option("portfolio-page") - {'option'}
	UninstallDetector.delete_option("portfolio_content") - {'option'}
	UninstallDetector.delete_option("portfolio_title") - {'option'}
	WordPressRetrievalDetector.get_option("portfolio_layout") - {'option'}
	WordPressRetrievalDetector.get_option("portfolio_layout") - {'option'}
	WordPressRetrievalDetector.get_option("portfolio_order_by") - {'option'}
	WordPressStorageDetector.delete_option("portfolio_layout") - {'option'}
	WordPressStorageDetector.update_option("portfolio_feature_post", $portfolio_feature_post) - {'option'}
	WordPressStorageDetector.update_option("portfolio-page", $_POST["portfolio-page"]) - {'option'}
	WordPressStorageDetector.delete_option("portfolio-page") - {'option'}
	DeletionDetector.delete_option("portfolio_order_by") - {'option'}
	WordPressStorageDetector.update_option("portfolio_content", $portfolio_content) - {'option'}
	DeletionDetector.delete_option("portfolio_title") - {'option'}
	WordPressStorageDetector.add_option("portfolio-page", "Project", "", "yes") - {'option'}
	UninstallDetector.delete_option("portfolio-page") - {'option'}
	WordPressRetrievalDetector.get_option("portfolio-page") - {'option'}
	WordPressRetrievalDetector.get_option("portfolio_order_by") - {'option'}
	DeletionDetector.delete_option("portfolio_layout") - {'option'}
	WordPressRetrievalDetector.get_option("portfolio_title") - {'option'}
	WordPressRetrievalDetector.get_option("portfolio_content") - {'option'}
	WordPressStorageDetector.update_option("portfolio_layout", $portfolio_layout) - {'option'}
	DeletionDetector.delete_option("portfolio_order") - {'option'}
	WordPressStorageDetector.update_option("portfolio_post_count", $portfolio_post_count) - {'option'}
	WordPressRetrievalDetector.get_option("portfolio_order") - {'option'}
	WordPressStorageDetector.delete_option("portfolio_order") - {'option'}
	WordPressStorageDetector.add_option("portfolio_layout", "2col", "", "yes") - {'option'}
	WordPressStorageDetector.update_option("portfolio_order", $portfolio_order) - {'option'}
	WordPressStorageDetector.add_option("portfolio_title", "Portfolio", "", "yes") - {'option'}
	WordPressStorageDetector.delete_option("portfolio_order_by") - {'option'}
	WordPressRetrievalDetector.get_option("portfolio_order") - {'option'}
	UninstallDetector.delete_option("portfolio_post_count") - {'option'}
	WordPressRetrievalDetector.get_option("portfolio_order") - {'option'}
	WordPressRetrievalDetector.get_option("portfolio_post_count") - {'option'}
	WordPressRetrievalDetector.get_option("portfolio_order_by") - {'option'}
	WordPressRetrievalDetector.get_option("portfolio_post_count") - {'option'}
	WordPressStorageDetector.add_option("portfolio_content", "Lorem ipsum dolor sit amet, consectetur adipiscing elit.", "", "yes") - {'option'}
	WordPressStorageDetector.add_option("portfolio_post_count", "8", "", "yes") - {'option'}
	WordPressStorageDetector.add_option("portfolio_order", "ASC", "", "yes") - {'option'}
	DeletionDetector.delete_option("portfolio_content") - {'option'}
	WordPressRetrievalDetector.get_option("portfolio_post_count") - {'option'}
	WordPressStorageDetector.add_option("portfolio_order_by", "title", "", "yes") - {'option'}
	UninstallDetector.delete_option("portfolio_order") - {'option'}
	UninstallDetector.delete_option("portfolio_order_by") - {'option'}
	DeletionDetector.delete_option("portfolio_post_count") - {'option'}
	DeletionDetector.delete_option("portfolio_order") - {'option'}
	WordPressRetrievalDetector.get_option("portfolio-page") - {'option'}
post
	WordPressRetrievalDetector.get_post($wpt_page_id) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($wpt_page_id) - {'post', 'post_meta', 'wp_post'}
post_meta
	WordPressStorageDetector.update_post_meta($post->ID, "url_text", $_POST["url_text"]) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post->ID, "url", $_POST["url"]) - {'post_meta'}
	WordPressRetrievalDetector.get_post($wpt_page_id) - {'post', 'post_meta', 'wp_post'}
	WordPressStorageDetector.update_post_meta($post_id, "image_id", $_POST["image_id"]) - {'post_meta'}
	WordPressRetrievalDetector.get_post($wpt_page_id) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "client", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "featured-checkbox", "yes") - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "image_id", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post->ID, "client", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "imagebox" . $i, true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "imagebox" . $i, $_POST["slider_upload_image"][$i]) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post->ID, "client", $_POST["client"]) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "url_text", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta(get_the_ID(), "url", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "Layout", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "Layout", true) - {'post_meta'}
	WordPressRetrievalDetector.get_post_meta($post_id, "Layout", true) - {'post_meta'}
	WordPressStorageDetector.update_post_meta($post_id, "featured-checkbox", "no") - {'post_meta'}
wp_post
	WordPressRetrievalDetector.get_post($wpt_page_id) - {'post', 'post_meta', 'wp_post'}
	WordPressRetrievalDetector.get_post($wpt_page_id) - {'post', 'post_meta', 'wp_post'}
╚[24] Preprocessing step "Security/storage detectors" (__security_detectors) finished successfully in 0:00:13.014254.

0 edges imported to Neo4j
Preprocessing step 8 done!
╔[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) begin.
Adding storage reaches edges... Finished collecting storage and retrieval nodes from detectors
Finished collecting sql insert, update, and select nodes
Finished collecting SQL statement info
Start inserting STORE_REACHES
Done adding storage edges. Added 544 edges in all.
╚[25] Preprocessing step "Create source to sink edges" (__storage_to_retrieval) finished successfully in 0:00:00.495241.

544 STORE_REACHES edges created
544 edges imported to Neo4j
Preprocessing step 9 done!
╔[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) begin.
Finished collecting propagation info for personal nodes
Wrote source sink information to database
In total, tainted 0 nodes as PERSONAL
Finished collecting propagation info for encrypted nodes
In total, tainted 0 nodes as ENCRYPTED
╚[26] Preprocessing step "Label all of the personal data nodes and encrypted nodes" (__taint_nodes) finished successfully in 0:00:00.007801.

0 edges imported to Neo4j
Preprocessing step 10 done!
### Preprocessing done in 0:01:01.042668!
DELETION call to delete_option("portfolio_title") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("portfolio_content") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("portfolio_post_count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("portfolio_layout") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("portfolio_order_by") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("portfolio_order") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("portfolio_order") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
DELETION call to delete_option("portfolio-page") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("portfolio_title") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("portfolio_content") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("portfolio_post_count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("portfolio_layout") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("portfolio_order_by") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("portfolio_order") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("portfolio_order") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
Uninstall deletion call: DELETION call to delete_option("portfolio-page") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
RETRIEVAL call to get_option("portfolio_layout") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "url_text", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "image_id", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "imagebox" . $i, true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "client", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta(get_the_ID(), "url", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("portfolio_title") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("portfolio_content") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("portfolio-page") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_meta($post_id, "Layout", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("portfolio_post_count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("portfolio_order") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("portfolio_order_by") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("portfolio-page") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($wpt_page_id) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($post_id, "Layout", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("portfolio-page") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("portfolio_post_count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("portfolio_order") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("portfolio_order_by") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("portfolio-page") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post($wpt_page_id) alters data types {'post', 'post_meta', 'wp_post'}. Passed arguments: 0: $post (int|WP_Post|null). Returns (WP_Post|array|null).,None,None
RETRIEVAL call to get_post_meta($post_id, "Layout", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("portfolio-page") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("portfolio_post_count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("portfolio_layout") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("portfolio_order_by") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("portfolio_order") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("portfolio_title") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_option("portfolio_content") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (mixed).,None,None
RETRIEVAL call to get_post_custom($post->ID). Passed arguments: 0: $post_id (int). Returns (array).,None,None
RETRIEVAL call to get_post_meta($post->ID) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int). Returns (mixed).,None,None
RETRIEVAL call to get_post_custom($post->ID). Passed arguments: 0: $post_id (int). Returns (array).,None,None
RETRIEVAL call to get_post_meta($post->ID, "client", true) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 2: $single (bool), 1: $key (string). Returns (mixed).,None,None
STORAGE call to add_option("portfolio-page", "Project", "", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("portfolio_title", "Portfolio", "", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("portfolio_content", "Lorem ipsum dolor sit amet, consectetur adipiscing elit.", "", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("portfolio_post_count", "8", "", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("portfolio_layout", "2col", "", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("portfolio_order_by", "title", "", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to add_option("portfolio_order", "ASC", "", "yes") alters data types {'option'}. Passed arguments: 0: $option (string), 3: $autoload (string|bool), 2: $deprecated (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to delete_option("portfolio_title") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("portfolio_content") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("portfolio_post_count") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("portfolio_layout") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("portfolio_order_by") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("portfolio_order") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("portfolio_order") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to delete_option("portfolio-page") alters data types {'option'}. Passed arguments: 0: $option (string). Returns (bool).,None,None
STORAGE call to update_option("portfolio-page", $_POST["portfolio-page"]) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("portfolio_feature_post", $portfolio_feature_post) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("portfolio_title", $portfolio_title) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("portfolio_content", $portfolio_content) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("portfolio_post_count", $portfolio_post_count) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("portfolio_layout", $portfolio_layout) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("portfolio_order_by", $portfolio_order_by) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_option("portfolio_order", $portfolio_order) alters data types {'option'}. Passed arguments: 0: $option (string), 1: $value (mixed). Returns (bool).,None,None
STORAGE call to update_post_meta($post->ID, "client", $_POST["client"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post->ID, "url_text", $_POST["url_text"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post->ID, "url", $_POST["url"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "featured-checkbox", "yes") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "featured-checkbox", "no") alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "image_id", $_POST["image_id"]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
STORAGE call to update_post_meta($post_id, "imagebox" . $i, $_POST["slider_upload_image"][$i]) alters data types {'post_meta'}. Passed arguments: 0: $post_id (int), 1: $meta_key (string), 2: $meta_value (mixed). Returns (int|bool).,None,None
Finding all hooks in the current plugin...
Storing all hook information in the current plugin...

############################
### Incompliance Finding ###
############################

We found following evidences that your plugin is in violation of General Data Protection Regulation (GDPR).
[main] Found no personal data in the plugin. No analysis needed. 

[main] Complaint? True 

No findings
